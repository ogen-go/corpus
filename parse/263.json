{"File":{"__typename":"FileMatch","repository":{"name":"github.com/ml-tooling/opyrator"},"file":{"name":"generate-text-openapi-spec.json","path":"docs/openapi-demo-specs/generate-text-openapi-spec.json","content":"{\n  \"openapi\": \"3.0.2\",\n  \"info\": {\n    \"title\": \"Generate Text - Opyrator\",\n    \"description\": \"Generate text based on a given prompt.\",\n    \"version\": \"0.1.0\"\n  },\n  \"paths\": {\n    \"/call\": {\n      \"post\": {\n        \"summary\": \"Execute the opyrator.\",\n        \"description\": \"Executes this opyrator.\",\n        \"operationId\": \"call\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/TextGenerationInput\" }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TextGenerationOutput\"\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Validation Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/HTTPValidationError\" }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/info\": {\n      \"get\": {\n        \"summary\": \"Get info metadata.\",\n        \"description\": \"Returns informational metadata about this Opyrator.\",\n        \"operationId\": \"info\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"title\": \"Response Info Info Get\",\n                  \"type\": \"object\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"HTTPValidationError\": {\n        \"title\": \"HTTPValidationError\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"detail\": {\n            \"title\": \"Detail\",\n            \"type\": \"array\",\n            \"items\": { \"$ref\": \"#/components/schemas/ValidationError\" }\n          }\n        }\n      },\n      \"TextGenerationInput\": {\n        \"title\": \"TextGenerationInput\",\n        \"required\": [\"text\"],\n        \"type\": \"object\",\n        \"properties\": {\n          \"text\": {\n            \"title\": \"Text Input\",\n            \"maxLength\": 1000,\n            \"type\": \"string\",\n            \"description\": \"The input text to use as basis to generate text.\"\n          },\n          \"temperature\": {\n            \"title\": \"Temperature\",\n            \"multipleOf\": 0.001,\n            \"exclusiveMinimum\": 0.0,\n            \"type\": \"number\",\n            \"description\": \"The value used to module the next token probabilities.\",\n            \"default\": 1.0\n          },\n          \"max_length\": {\n            \"title\": \"Max Length\",\n            \"maximum\": 100.0,\n            \"minimum\": 5.0,\n            \"type\": \"integer\",\n            \"description\": \"The maximum length of the sequence to be generated.\",\n            \"default\": 30\n          },\n          \"repetition_penalty\": {\n            \"title\": \"Repetition Penalty\",\n            \"maximum\": 1.0,\n            \"minimum\": 0.0,\n            \"type\": \"number\",\n            \"description\": \"The parameter for repetition penalty. 1.0 means no penalty.\",\n            \"default\": 1.0\n          },\n          \"top_k\": {\n            \"title\": \"Top K\",\n            \"minimum\": 0.0,\n            \"type\": \"integer\",\n            \"description\": \"The number of highest probability vocabulary tokens to keep for top-k-filtering.\",\n            \"default\": 50\n          },\n          \"do_sample\": {\n            \"title\": \"Do Sample\",\n            \"type\": \"boolean\",\n            \"description\": \"Whether or not to use sampling ; use greedy decoding otherwise.\",\n            \"default\": false\n          }\n        }\n      },\n      \"TextGenerationOutput\": {\n        \"title\": \"TextGenerationOutput\",\n        \"required\": [\"generated_text\"],\n        \"type\": \"object\",\n        \"properties\": {\n          \"generated_text\": { \"title\": \"Generated Text\", \"type\": \"string\" }\n        }\n      },\n      \"ValidationError\": {\n        \"title\": \"ValidationError\",\n        \"required\": [\"loc\", \"msg\", \"type\"],\n        \"type\": \"object\",\n        \"properties\": {\n          \"loc\": {\n            \"title\": \"Location\",\n            \"type\": \"array\",\n            \"items\": { \"type\": \"string\" }\n          },\n          \"msg\": { \"title\": \"Message\", \"type\": \"string\" },\n          \"type\": { \"title\": \"Error Type\", \"type\": \"string\" }\n        }\n      }\n    }\n  }\n}\n"}},"Error":"callback: json: cannot unmarshal number 0.001 into Go struct field Schema.multipleOf of type int"}