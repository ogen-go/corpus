{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/the-sett/elm-swagger"
		},
		"file": {
			"name": "client-registration-openapi.json",
			"path": "example/assets/example-specs/open-banking/client-registration-openapi.json",
			"content": "{\n  \"openapi\": \"3.0.1\",\n  \"info\": {\n    \"title\": \"Dynamic Client Registration API\",\n    \"description\": \"This specification defines the APIs for a TPP to submit a Software Statement Assertion to an ASPSP for the purpose of creating OAuth clients that are registered with ASPSP.\\n\",\n    \"version\": \"0.0.1\"\n  },\n  \"paths\": {\n    \"/register\": {\n      \"post\": {\n        \"summary\": \"Register a client by way of a Software Statement Assertion\",\n        \"description\": \"Endpoint will be secured by way of Mutual Authentication over TLS\",\n        \"tags\": [\n          \"Client Registration\",\n          \"Conditional\"\n        ],\n        \"parameters\": [],\n        \"responses\": {\n          \"201\": {\n            \"$ref\": \"#/components/responses/OBClientRegistration1\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400Error\"\n          }\n        },\n        \"requestBody\": {\n          \"$ref\": \"#/components/requestBodies/ClientRegistration\"\n        }\n      }\n    },\n    \"/register/{ClientId}\": {\n      \"get\": {\n        \"summary\": \"Get a client by way of Client ID\",\n        \"tags\": [\n          \"Client Registration\",\n          \"Optional\"\n        ],\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/ClientId\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Authorization\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/OBClientRegistration1\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401Error\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/403Error\"\n          }\n        },\n        \"security\": [\n          {\n            \"TPPOAuth2Security\": []\n          }\n        ]\n      },\n      \"put\": {\n        \"summary\": \"Update a client by way of Client ID\",\n        \"tags\": [\n          \"Client Registration\",\n          \"Optional\"\n        ],\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/ClientId\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Authorization\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/OBClientRegistration1\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400Error\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401Error\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/403Error\"\n          }\n        },\n        \"security\": [\n          {\n            \"TPPOAuth2Security\": []\n          }\n        ],\n        \"requestBody\": {\n          \"$ref\": \"#/components/requestBodies/ClientRegistration\"\n        }\n      },\n      \"delete\": {\n        \"summary\": \"Delete a client by way of Client ID\",\n        \"tags\": [\n          \"Client Registration\",\n          \"Optional\"\n        ],\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/ClientId\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Authorization\"\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Client deleted\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401Error\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/403Error\"\n          },\n          \"405\": {\n            \"$ref\": \"#/components/responses/403Error\"\n          }\n        },\n        \"security\": [\n          {\n            \"TPPOAuth2Security\": []\n          }\n        ]\n      }\n    }\n  },\n  \"components\": {\n    \"parameters\": {\n      \"Authorization\": {\n        \"in\": \"header\",\n        \"name\": \"Authorization\",\n        \"required\": true,\n        \"description\": \"An Authorisation Token as per https://tools.ietf.org/html/rfc6750\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"ClientId\": {\n        \"name\": \"ClientId\",\n        \"description\": \"The client ID\",\n        \"in\": \"path\",\n        \"required\": true,\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"requestBodies\": {\n      \"ClientRegistration\": {\n        \"description\": \"A request to register a Software Statement Assertion with an ASPSP\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"OBClientRegistration1\"\n            }\n          }\n        },\n        \"required\": true\n      }\n    },\n    \"responses\": {\n      \"OBClientRegistration1\": {\n        \"description\": \"Client registration\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"allOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OBRegistrationProperties1\"\n                },\n                {\n                  \"required\": [\n                    \"client_id\"\n                  ]\n                }\n              ]\n            }\n          }\n        }\n      },\n      \"400Error\": {\n        \"description\": \"Request failed due to client error\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/RegistrationError\"\n            }\n          }\n        }\n      },\n      \"401Error\": {\n        \"description\": \"Request failed due to unknown or invalid Client or invalid access token\",\n        \"headers\": {\n          \"WWW-Authenticate\": {\n            \"description\": \"Response header field specified in https://tools.ietf.org/html/rfc6750\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      },\n      \"403Error\": {\n        \"description\": \"The client does not have permission to read, update or delete the Client\"\n      },\n      \"405Error\": {\n        \"description\": \"Method Not Allowed\"\n      }\n    },\n    \"schemas\": {\n      \"SupportedAlgorithms\": {\n        \"type\": \"string\",\n        \"enum\": [\n          \"RS256\",\n          \"PS256\",\n          \"ES256\"\n        ]\n      },\n      \"OBRegistrationProperties1\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"redirect_uris\",\n          \"token_endpoint_auth_method\",\n          \"grant_types\",\n          \"software_statement\",\n          \"application_type\",\n          \"id_token_signed_response_alg\",\n          \"request_object_signing_alg\",\n          \"tls_client_auth_dn\"\n        ],\n        \"properties\": {\n          \"client_id\": {\n            \"description\": \"OAuth 2.0 client identifier string\",\n            \"type\": \"string\",\n            \"minLength\": 1,\n            \"maxLength\": 36\n          },\n          \"client_secret\": {\n            \"description\": \"OAuth 2.0 client secret string\",\n            \"type\": \"string\",\n            \"minLength\": 1,\n            \"maxLength\": 36\n          },\n          \"client_id_issued_at\": {\n            \"description\": \"Time at which the client identifier was issued expressed as seconds since 1970-01-01T00:00:00Z as measured in UTC\",\n            \"type\": \"integer\",\n            \"format\": \"int32\",\n            \"minimum\": 0\n          },\n          \"client_secret_expires_at\": {\n            \"description\": \"Time at which the client secret will expire expressed as seconds since 1970-01-01T00:00:00Z as measured in UTC. Set to 0 if does not expire\",\n            \"type\": \"integer\",\n            \"format\": \"int32\",\n            \"minimum\": 0\n          },\n          \"redirect_uris\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"format\": \"uri\",\n              \"minLength\": 1,\n              \"maxLength\": 256\n            }\n          },\n          \"token_endpoint_auth_method\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"private_key_jwt\",\n              \"tls_client_auth\"\n            ]\n          },\n          \"grant_types\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"client_credentials\",\n                \"authorization_code\",\n                \"refresh_token\"\n              ]\n            },\n            \"minItems\": 1\n          },\n          \"response_types\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"code\",\n                \"code id_token\"\n              ]\n            }\n          },\n          \"software_id\": {\n            \"type\": \"string\"\n          },\n          \"scope\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"minLength\": 1,\n              \"maxLength\": 32\n            }\n          },\n          \"software_statement\": {\n            \"type\": \"string\",\n            \"format\": \"JWT\"\n          },\n          \"application_type\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"web\",\n              \"mobile\"\n            ]\n          },\n          \"id_token_signed_response_alg\": {\n            \"$ref\": \"#/components/schemas/SupportedAlgorithms\"\n          },\n          \"request_object_signing_alg\": {\n            \"$ref\": \"#/components/schemas/SupportedAlgorithms\"\n          },\n          \"token_endpoint_auth_signing_alg\": {\n            \"$ref\": \"#/components/schemas/SupportedAlgorithms\"\n          },\n          \"tls_client_auth_dn\": {\n            \"type\": \"string\",\n            \"minLength\": 1,\n            \"maxLength\": 128\n          }\n        }\n      },\n      \"OBClientRegistration1\": {\n        \"allOf\": [\n          {\n            \"type\": \"object\",\n            \"required\": [\n              \"iss\",\n              \"iat\",\n              \"exp\",\n              \"aud\",\n              \"jti\"\n            ],\n            \"properties\": {\n              \"iss\": {\n                \"description\": \"Unique identifier for the TPP. Implemented as Base62 encoded GUID\",\n                \"type\": \"string\",\n                \"pattern\": \"^[0-9a-zA-Z]{1,18}$\",\n                \"minLength\": 1,\n                \"maxLength\": 18\n              },\n              \"iat\": {\n                \"description\": \"The time at which the request was issued by the TPP  expressed as seconds since 1970-01-01T00:00:00Z as measured in UTC\",\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"minimum\": 0\n              },\n              \"exp\": {\n                \"description\": \"The time at which the request expires expressed as seconds since 1970-01-01T00:00:00Z as measured in UTC\",\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"minimum\": 0\n              },\n              \"aud\": {\n                \"description\": \"The audience for the request. This should be the unique identifier\\nfor the ASPSP issued by the issuer of the software statement.\\nImplemented as Base62 encoded GUID\\n\",\n                \"type\": \"string\",\n                \"pattern\": \"^[0-9a-zA-Z]{1,18}$\",\n                \"minLength\": 1,\n                \"maxLength\": 18\n              },\n              \"jti\": {\n                \"description\": \"Unique identifier for the JWT implemented as UUID v4\",\n                \"type\": \"string\",\n                \"pattern\": \"^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$\",\n                \"minLength\": 36,\n                \"maxLength\": 36\n              }\n            }\n          },\n          {\n            \"$ref\": \"#/components/schemas/OBRegistrationProperties1\"\n          }\n        ]\n      },\n      \"RegistrationError\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"error\"\n        ],\n        \"properties\": {\n          \"error\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"invalid_redirect_uri\",\n              \"invalid_client_metadata\",\n              \"invalid_software_statement\",\n              \"unapproved_software_statement\"\n            ]\n          },\n          \"error_description\": {\n            \"type\": \"string\",\n            \"minLength\": 1,\n            \"maxLength\": 500\n          }\n        }\n      }\n    },\n    \"securitySchemes\": {\n      \"TPPOAuth2Security\": {\n        \"type\": \"oauth2\",\n        \"description\": \"TPP client credential authorisation flow with the ASPSP. No scopes defined as per specification\",\n        \"flows\": {\n          \"clientCredentials\": {\n            \"tokenUrl\": \"https://authserver.example/token\",\n            \"scopes\": {}\n          }\n        }\n      }\n    }\n  }\n}\n"
		}
	},
	"Error": "panic: runtime error: index out of range [0] with length 0"
}