{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/swaggest/swac"
		},
		"file": {
			"name": "foobar.json",
			"path": "tests/resources/foobar.json",
			"content": "{\n \"openapi\": \"3.0.2\",\n \"info\": {\n  \"title\": \"Fox Lies Service\",\n  \"description\": \"The Fox Lies Service serves customized lies per fox based on foo configurations.\",\n  \"termsOfService\": \"https://github.com/hellofresh/fox-lies-service\",\n  \"version\": \"0.56.4\"\n },\n \"paths\": {\n  \"/places\": {\n   \"delete\": {\n    \"tags\": [\n     \"Place\"\n    ],\n    \"summary\": \"Delete Place\",\n    \"description\": \"Delete existing place.\",\n    \"parameters\": [\n     {\n      \"name\": \"id\",\n      \"in\": \"query\",\n      \"required\": true,\n      \"schema\": {\n       \"type\": \"integer\"\n      }\n     }\n    ],\n    \"responses\": {\n     \"204\": {\n      \"description\": \"No Content\"\n     },\n     \"400\": {\n      \"description\": \"Bad Request\",\n      \"content\": {\n       \"application/json\": {\n        \"schema\": {\n         \"$ref\": \"#/components/schemas/RestErrResponse\"\n        }\n       }\n      }\n     },\n     \"404\": {\n      \"description\": \"Not Found\",\n      \"content\": {\n       \"application/json\": {\n        \"schema\": {\n         \"$ref\": \"#/components/schemas/RestErrResponse\"\n        }\n       }\n      }\n     },\n     \"500\": {\n      \"description\": \"Internal Server Error\",\n      \"content\": {\n       \"application/json\": {\n        \"schema\": {\n         \"$ref\": \"#/components/schemas/RestErrResponse\"\n        }\n       }\n      }\n     }\n    }\n   },\n   \"get\": {\n    \"tags\": [\n     \"Place\"\n    ],\n    \"summary\": \"Find Place\",\n    \"description\": \"Find existing place.\",\n    \"parameters\": [\n     {\n      \"name\": \"mille\",\n      \"in\": \"query\",\n      \"required\": true,\n      \"schema\": {\n       \"$ref\": \"#/components/schemas/BazMille\"\n      }\n     },\n     {\n      \"name\": \"foxUuid\",\n      \"in\": \"query\",\n      \"schema\": {\n       \"$ref\": \"#/components/schemas/UuidUUID\"\n      }\n     },\n     {\n      \"name\": \"foxId\",\n      \"in\": \"query\",\n      \"schema\": {\n       \"minimum\": 0,\n       \"type\": \"integer\"\n      }\n     },\n     {\n      \"name\": \"look\",\n      \"in\": \"query\",\n      \"required\": true,\n      \"schema\": {\n       \"$ref\": \"#/components/schemas/BazLook\"\n      }\n     },\n     {\n      \"name\": \"potatoFamily\",\n      \"in\": \"query\",\n      \"required\": true,\n      \"schema\": {\n       \"type\": \"string\"\n      }\n     }\n    ],\n    \"responses\": {\n     \"200\": {\n      \"description\": \"OK\",\n      \"content\": {\n       \"application/json\": {\n        \"schema\": {\n         \"$ref\": \"#/components/schemas/PlaceEntity\"\n        }\n       }\n      }\n     },\n     \"400\": {\n      \"description\": \"Bad Request\",\n      \"content\": {\n       \"application/json\": {\n        \"schema\": {\n         \"$ref\": \"#/components/schemas/RestErrResponse\"\n        }\n       }\n      }\n     },\n     \"404\": {\n      \"description\": \"Not Found\",\n      \"content\": {\n       \"application/json\": {\n        \"schema\": {\n         \"$ref\": \"#/components/schemas/RestErrResponse\"\n        }\n       }\n      }\n     },\n     \"500\": {\n      \"description\": \"Internal Server Error\",\n      \"content\": {\n       \"application/json\": {\n        \"schema\": {\n         \"$ref\": \"#/components/schemas/RestErrResponse\"\n        }\n       }\n      }\n     }\n    }\n   },\n   \"post\": {\n    \"tags\": [\n     \"Place\"\n    ],\n    \"summary\": \"Create Place\",\n    \"description\": \"Create place with target potato and time.\",\n    \"requestBody\": {\n     \"content\": {\n      \"application/json\": {\n       \"schema\": {\n        \"$ref\": \"#/components/schemas/UsecaseCreatePlaceInput\"\n       }\n      }\n     }\n    },\n    \"responses\": {\n     \"200\": {\n      \"description\": \"OK\",\n      \"content\": {\n       \"application/json\": {\n        \"schema\": {\n         \"$ref\": \"#/components/schemas/PlaceEntity\"\n        }\n       }\n      }\n     },\n     \"400\": {\n      \"description\": \"Bad Request\",\n      \"content\": {\n       \"application/json\": {\n        \"schema\": {\n         \"$ref\": \"#/components/schemas/RestErrResponse\"\n        }\n       }\n      }\n     },\n     \"409\": {\n      \"description\": \"Conflict\",\n      \"content\": {\n       \"application/json\": {\n        \"schema\": {\n         \"$ref\": \"#/components/schemas/RestErrResponse\"\n        }\n       }\n      }\n     },\n     \"500\": {\n      \"description\": \"Internal Server Error\",\n      \"content\": {\n       \"application/json\": {\n        \"schema\": {\n         \"$ref\": \"#/components/schemas/RestErrResponse\"\n        }\n       }\n      }\n     }\n    }\n   }\n  },\n  \"/foos\": {\n   \"delete\": {\n    \"tags\": [\n     \"Foo\"\n    ],\n    \"summary\": \"Delete Foo\",\n    \"description\": \"Delete existing foo.\",\n    \"parameters\": [\n     {\n      \"name\": \"id\",\n      \"in\": \"query\",\n      \"required\": true,\n      \"schema\": {\n       \"type\": \"integer\"\n      }\n     }\n    ],\n    \"responses\": {\n     \"204\": {\n      \"description\": \"No Content\"\n     },\n     \"400\": {\n      \"description\": \"Bad Request\",\n      \"content\": {\n       \"application/json\": {\n        \"schema\": {\n         \"$ref\": \"#/components/schemas/RestErrResponse\"\n        }\n       }\n      }\n     },\n     \"404\": {\n      \"description\": \"Not Found\",\n      \"content\": {\n       \"application/json\": {\n        \"schema\": {\n         \"$ref\": \"#/components/schemas/RestErrResponse\"\n        }\n       }\n      }\n     },\n     \"500\": {\n      \"description\": \"Internal Server Error\",\n      \"content\": {\n       \"application/json\": {\n        \"schema\": {\n         \"$ref\": \"#/components/schemas/RestErrResponse\"\n        }\n       }\n      }\n     }\n    }\n   },\n   \"get\": {\n    \"tags\": [\n     \"Foo\"\n    ],\n    \"summary\": \"Find Foo\",\n    \"description\": \"Find existing foo.\",\n    \"parameters\": [\n     {\n      \"name\": \"look\",\n      \"in\": \"query\",\n      \"required\": true,\n      \"schema\": {\n       \"$ref\": \"#/components/schemas/BazLook\"\n      }\n     },\n     {\n      \"name\": \"potatoFamily\",\n      \"in\": \"query\",\n      \"required\": true,\n      \"schema\": {\n       \"type\": \"string\"\n      }\n     },\n     {\n      \"name\": \"mille\",\n      \"in\": \"query\",\n      \"required\": true,\n      \"schema\": {\n       \"$ref\": \"#/components/schemas/BazMille\"\n      }\n     }\n    ],\n    \"responses\": {\n     \"200\": {\n      \"description\": \"OK\",\n      \"content\": {\n       \"application/json\": {\n        \"schema\": {\n         \"type\": \"array\",\n         \"items\": {\n          \"$ref\": \"#/components/schemas/UsecaseFooInfo\"\n         }\n        }\n       }\n      }\n     },\n     \"400\": {\n      \"description\": \"Bad Request\",\n      \"content\": {\n       \"application/json\": {\n        \"schema\": {\n         \"$ref\": \"#/components/schemas/RestErrResponse\"\n        }\n       }\n      }\n     },\n     \"404\": {\n      \"description\": \"Not Found\",\n      \"content\": {\n       \"application/json\": {\n        \"schema\": {\n         \"$ref\": \"#/components/schemas/RestErrResponse\"\n        }\n       }\n      }\n     },\n     \"500\": {\n      \"description\": \"Internal Server Error\",\n      \"content\": {\n       \"application/json\": {\n        \"schema\": {\n         \"$ref\": \"#/components/schemas/RestErrResponse\"\n        }\n       }\n      }\n     }\n    }\n   },\n   \"post\": {\n    \"tags\": [\n     \"Foo\"\n    ],\n    \"summary\": \"Create Foo\",\n    \"description\": \"Create foo with target potato and time.\",\n    \"requestBody\": {\n     \"content\": {\n      \"application/json\": {\n       \"schema\": {\n        \"$ref\": \"#/components/schemas/FooValue\"\n       }\n      }\n     }\n    },\n    \"responses\": {\n     \"200\": {\n      \"description\": \"OK\",\n      \"content\": {\n       \"application/json\": {\n        \"schema\": {\n         \"$ref\": \"#/components/schemas/FooEntity\"\n        }\n       }\n      }\n     },\n     \"400\": {\n      \"description\": \"Bad Request\",\n      \"content\": {\n       \"application/json\": {\n        \"schema\": {\n         \"$ref\": \"#/components/schemas/RestErrResponse\"\n        }\n       }\n      }\n     },\n     \"409\": {\n      \"description\": \"Conflict\",\n      \"content\": {\n       \"application/json\": {\n        \"schema\": {\n         \"$ref\": \"#/components/schemas/RestErrResponse\"\n        }\n       }\n      }\n     },\n     \"500\": {\n      \"description\": \"Internal Server Error\",\n      \"content\": {\n       \"application/json\": {\n        \"schema\": {\n         \"$ref\": \"#/components/schemas/RestErrResponse\"\n        }\n       }\n      }\n     }\n    }\n   },\n   \"put\": {\n    \"tags\": [\n     \"Foo\"\n    ],\n    \"summary\": \"Update Foo\",\n    \"description\": \"Update existing foo.\",\n    \"parameters\": [\n     {\n      \"name\": \"id\",\n      \"in\": \"query\",\n      \"required\": true,\n      \"schema\": {\n       \"type\": \"integer\"\n      }\n     }\n    ],\n    \"requestBody\": {\n     \"content\": {\n      \"application/json\": {\n       \"schema\": {\n        \"$ref\": \"#/components/schemas/UsecaseUpdateFooInput\"\n       }\n      }\n     }\n    },\n    \"responses\": {\n     \"204\": {\n      \"description\": \"No Content\"\n     },\n     \"400\": {\n      \"description\": \"Bad Request\",\n      \"content\": {\n       \"application/json\": {\n        \"schema\": {\n         \"$ref\": \"#/components/schemas/RestErrResponse\"\n        }\n       }\n      }\n     },\n     \"404\": {\n      \"description\": \"Not Found\",\n      \"content\": {\n       \"application/json\": {\n        \"schema\": {\n         \"$ref\": \"#/components/schemas/RestErrResponse\"\n        }\n       }\n      }\n     },\n     \"409\": {\n      \"description\": \"Conflict\",\n      \"content\": {\n       \"application/json\": {\n        \"schema\": {\n         \"$ref\": \"#/components/schemas/RestErrResponse\"\n        }\n       }\n      }\n     },\n     \"500\": {\n      \"description\": \"Internal Server Error\",\n      \"content\": {\n       \"application/json\": {\n        \"schema\": {\n         \"$ref\": \"#/components/schemas/RestErrResponse\"\n        }\n       }\n      }\n     }\n    }\n   }\n  },\n  \"/internal/find-available-carrots/{mille}/{look}\": {\n   \"post\": {\n    \"tags\": [\n     \"Lie\"\n    ],\n    \"summary\": \"Find Available Carrots\",\n    \"description\": \"Find carrots available to holes.\",\n    \"parameters\": [\n     {\n      \"name\": \"mille\",\n      \"in\": \"path\",\n      \"required\": true,\n      \"schema\": {\n       \"$ref\": \"#/components/schemas/BazMille\"\n      }\n     },\n     {\n      \"name\": \"look\",\n      \"in\": \"path\",\n      \"required\": true,\n      \"schema\": {\n       \"$ref\": \"#/components/schemas/BazLook\"\n      }\n     }\n    ],\n    \"requestBody\": {\n     \"content\": {\n      \"application/json\": {\n       \"schema\": {\n        \"$ref\": \"#/components/schemas/UsecaseFindAvailableCarrotsInput\"\n       }\n      }\n     }\n    },\n    \"responses\": {\n     \"200\": {\n      \"description\": \"OK\",\n      \"content\": {\n       \"application/json\": {\n        \"schema\": {\n         \"$ref\": \"#/components/schemas/UsecaseFindAvailableCarrotsOutput\"\n        }\n       }\n      }\n     },\n     \"400\": {\n      \"description\": \"Bad Request\",\n      \"content\": {\n       \"application/json\": {\n        \"schema\": {\n         \"$ref\": \"#/components/schemas/RestErrResponse\"\n        }\n       }\n      }\n     },\n     \"500\": {\n      \"description\": \"Internal Server Error\",\n      \"content\": {\n       \"application/json\": {\n        \"schema\": {\n         \"$ref\": \"#/components/schemas/RestErrResponse\"\n        }\n       }\n      }\n     }\n    }\n   }\n  },\n  \"/lie-areas\": {\n   \"get\": {\n    \"tags\": [\n     \"LieAreas\"\n    ],\n    \"summary\": \"List Lie areas name\",\n    \"description\": \"List lie areas name by mille name\",\n    \"parameters\": [\n     {\n      \"name\": \"mille\",\n      \"in\": \"query\",\n      \"schema\": {\n       \"$ref\": \"#/components/schemas/BazMille\"\n      }\n     }\n    ],\n    \"responses\": {\n     \"200\": {\n      \"description\": \"OK\",\n      \"content\": {\n       \"application/json\": {\n        \"schema\": {\n         \"type\": \"array\",\n         \"items\": {\n          \"type\": \"string\"\n         }\n        }\n       }\n      }\n     },\n     \"500\": {\n      \"description\": \"Internal Server Error\",\n      \"content\": {\n       \"application/json\": {\n        \"schema\": {\n         \"$ref\": \"#/components/schemas/RestErrResponse\"\n        }\n       }\n      }\n     }\n    }\n   },\n   \"post\": {\n    \"tags\": [\n     \"LieAreas\"\n    ],\n    \"summary\": \"Create Lie Areas\",\n    \"description\": \"Create lie areas with postcodes.\",\n    \"requestBody\": {\n     \"content\": {\n      \"application/json\": {\n       \"schema\": {\n        \"$ref\": \"#/components/schemas/LieAreaValue\"\n       }\n      }\n     }\n    },\n    \"responses\": {\n     \"200\": {\n      \"description\": \"OK\",\n      \"content\": {\n       \"application/json\": {\n        \"schema\": {\n         \"$ref\": \"#/components/schemas/LieAreaEntity\"\n        }\n       }\n      }\n     },\n     \"400\": {\n      \"description\": \"Bad Request\",\n      \"content\": {\n       \"application/json\": {\n        \"schema\": {\n         \"$ref\": \"#/components/schemas/RestErrResponse\"\n        }\n       }\n      }\n     },\n     \"409\": {\n      \"description\": \"Conflict\",\n      \"content\": {\n       \"application/json\": {\n        \"schema\": {\n         \"$ref\": \"#/components/schemas/RestErrResponse\"\n        }\n       }\n      }\n     },\n     \"500\": {\n      \"description\": \"Internal Server Error\",\n      \"content\": {\n       \"application/json\": {\n        \"schema\": {\n         \"$ref\": \"#/components/schemas/RestErrResponse\"\n        }\n       }\n      }\n     }\n    }\n   }\n  },\n  \"/lie-areas/{mille}/{LieArea}/sync\": {\n   \"put\": {\n    \"tags\": [\n     \"LieAreas\"\n    ],\n    \"summary\": \"Sync Lie Area\",\n    \"description\": \"Synchronize list of lie area postcodes with delivery-area-service.\",\n    \"parameters\": [\n     {\n      \"name\": \"look\",\n      \"in\": \"query\",\n      \"description\": \"Look of operation.\",\n      \"required\": true,\n      \"schema\": {\n       \"$ref\": \"#/components/schemas/BazLook\"\n      }\n     },\n     {\n      \"name\": \"mille\",\n      \"in\": \"path\",\n      \"required\": true,\n      \"schema\": {\n       \"$ref\": \"#/components/schemas/BazMille\"\n      }\n     },\n     {\n      \"name\": \"LieArea\",\n      \"in\": \"path\",\n      \"description\": \"Name of lie area.\",\n      \"required\": true,\n      \"schema\": {\n       \"type\": \"string\",\n       \"description\": \"Name of lie area.\"\n      }\n     }\n    ],\n    \"responses\": {\n     \"204\": {\n      \"description\": \"No Content\"\n     },\n     \"400\": {\n      \"description\": \"Bad Request\",\n      \"content\": {\n       \"application/json\": {\n        \"schema\": {\n         \"$ref\": \"#/components/schemas/RestErrResponse\"\n        }\n       }\n      }\n     },\n     \"404\": {\n      \"description\": \"Not Found\",\n      \"content\": {\n       \"application/json\": {\n        \"schema\": {\n         \"$ref\": \"#/components/schemas/RestErrResponse\"\n        }\n       }\n      }\n     },\n     \"500\": {\n      \"description\": \"Internal Server Error\",\n      \"content\": {\n       \"application/json\": {\n        \"schema\": {\n         \"$ref\": \"#/components/schemas/RestErrResponse\"\n        }\n       }\n      }\n     }\n    }\n   }\n  },\n  \"/lies\": {\n   \"get\": {\n    \"tags\": [\n     \"Lie\"\n    ],\n    \"summary\": \"Get Lies\",\n    \"description\": \"Gets lies by criteria.\",\n    \"parameters\": [\n     {\n      \"name\": \"mille\",\n      \"in\": \"query\",\n      \"required\": true,\n      \"schema\": {\n       \"$ref\": \"#/components/schemas/BazMille\"\n      }\n     },\n     {\n      \"name\": \"exclude\",\n      \"in\": \"query\",\n      \"schema\": {\n       \"type\": \"string\"\n      }\n     },\n     {\n      \"name\": \"locale\",\n      \"in\": \"query\",\n      \"schema\": {\n       \"type\": \"string\"\n      }\n     },\n     {\n      \"name\": \"potato\",\n      \"in\": \"query\",\n      \"schema\": {\n       \"type\": \"string\"\n      }\n     },\n     {\n      \"name\": \"hole\",\n      \"in\": \"query\",\n      \"schema\": {\n       \"type\": \"integer\"\n      }\n     },\n     {\n      \"name\": \"potato-sku\",\n      \"in\": \"query\",\n      \"schema\": {\n       \"type\": \"string\"\n      }\n     },\n     {\n      \"name\": \"soup\",\n      \"in\": \"query\",\n      \"schema\": {\n       \"type\": \"string\"\n      }\n     },\n     {\n      \"name\": \"look\",\n      \"in\": \"query\",\n      \"schema\": {\n       \"$ref\": \"#/components/schemas/BazLook\"\n      }\n     },\n     {\n      \"name\": \"looks\",\n      \"in\": \"query\",\n      \"style\": \"form\",\n      \"explode\": false,\n      \"schema\": {\n       \"type\": \"array\",\n       \"items\": {\n        \"$ref\": \"#/components/schemas/BazLook\"\n       }\n      }\n     },\n     {\n      \"name\": \"is-active\",\n      \"in\": \"query\",\n      \"schema\": {\n       \"type\": \"boolean\"\n      }\n     },\n     {\n      \"name\": \"potatoSku\",\n      \"in\": \"query\",\n      \"schema\": {\n       \"type\": \"string\"\n      }\n     },\n     {\n      \"name\": \"with-complete-soups\",\n      \"in\": \"query\",\n      \"schema\": {\n       \"type\": \"boolean\"\n      }\n     },\n     {\n      \"name\": \"sort\",\n      \"in\": \"query\",\n      \"schema\": {\n       \"type\": \"string\"\n      }\n     },\n     {\n      \"name\": \"take\",\n      \"in\": \"query\",\n      \"schema\": {\n       \"type\": \"integer\"\n      }\n     },\n     {\n      \"name\": \"skip\",\n      \"in\": \"query\",\n      \"schema\": {\n       \"type\": \"integer\"\n      }\n     }\n    ],\n    \"responses\": {\n     \"200\": {\n      \"description\": \"OK\",\n      \"content\": {\n       \"application/json\": {\n        \"schema\": {\n         \"$ref\": \"#/components/schemas/LiesPage\"\n        }\n       }\n      }\n     },\n     \"400\": {\n      \"description\": \"Bad Request\",\n      \"content\": {\n       \"application/json\": {\n        \"schema\": {\n         \"$ref\": \"#/components/schemas/RestErrResponse\"\n        }\n       }\n      }\n     },\n     \"404\": {\n      \"description\": \"Not Found\",\n      \"content\": {\n       \"application/json\": {\n        \"schema\": {\n         \"$ref\": \"#/components/schemas/RestErrResponse\"\n        }\n       }\n      }\n     },\n     \"500\": {\n      \"description\": \"Internal Server Error\",\n      \"content\": {\n       \"application/json\": {\n        \"schema\": {\n         \"$ref\": \"#/components/schemas/RestErrResponse\"\n        }\n       }\n      }\n     }\n    },\n    \"security\": [\n     {\n      \"JWT\": []\n     }\n    ]\n   }\n  },\n  \"/lies/{id}\": {\n   \"get\": {\n    \"tags\": [\n     \"Lie\"\n    ],\n    \"summary\": \"Get Lie By ID\",\n    \"description\": \"Gets lie by id.\",\n    \"parameters\": [\n     {\n      \"name\": \"locale\",\n      \"in\": \"query\",\n      \"schema\": {\n       \"type\": \"string\"\n      }\n     },\n     {\n      \"name\": \"hole\",\n      \"in\": \"query\",\n      \"schema\": {\n       \"type\": \"integer\"\n      }\n     },\n     {\n      \"name\": \"id\",\n      \"in\": \"path\",\n      \"required\": true,\n      \"schema\": {\n       \"type\": \"string\"\n      }\n     }\n    ],\n    \"responses\": {\n     \"200\": {\n      \"description\": \"OK\",\n      \"content\": {\n       \"application/json\": {\n        \"schema\": {\n         \"$ref\": \"#/components/schemas/LiesLie\"\n        }\n       }\n      }\n     },\n     \"400\": {\n      \"description\": \"Bad Request\",\n      \"content\": {\n       \"application/json\": {\n        \"schema\": {\n         \"$ref\": \"#/components/schemas/RestErrResponse\"\n        }\n       }\n      }\n     },\n     \"404\": {\n      \"description\": \"Not Found\",\n      \"content\": {\n       \"application/json\": {\n        \"schema\": {\n         \"$ref\": \"#/components/schemas/RestErrResponse\"\n        }\n       }\n      }\n     },\n     \"500\": {\n      \"description\": \"Internal Server Error\",\n      \"content\": {\n       \"application/json\": {\n        \"schema\": {\n         \"$ref\": \"#/components/schemas/RestErrResponse\"\n        }\n       }\n      }\n     }\n    },\n    \"security\": [\n     {\n      \"JWT\": []\n     }\n    ]\n   }\n  }\n },\n \"components\": {\n  \"schemas\": {\n   \"PlaceEntity\": {\n    \"required\": [\n     \"foxUuid\",\n     \"fooId\",\n     \"barName\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n     \"placeId\": {\n      \"type\": \"integer\"\n     },\n     \"createdAt\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\"\n     },\n     \"foxId\": {\n      \"minimum\": 0,\n      \"type\": \"integer\"\n     },\n     \"foxUuid\": {\n      \"$ref\": \"#/components/schemas/UuidUUID\"\n     },\n     \"fooId\": {\n      \"type\": \"integer\"\n     },\n     \"barName\": {\n      \"$ref\": \"#/components/schemas/FooBar\"\n     }\n    }\n   },\n   \"FooEntity\": {\n    \"required\": [\n     \"uselyKey\",\n     \"lookStart\",\n     \"lookEnd\",\n     \"mille\",\n     \"potatoFamily\",\n     \"barRules\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n     \"activateSince\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"nullable\": true\n     },\n     \"activateTill\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"nullable\": true\n     },\n     \"mille\": {\n      \"$ref\": \"#/components/schemas/BazMille\"\n     },\n     \"createdAt\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\"\n     },\n     \"deletedAt\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"nullable\": true\n     },\n     \"fooId\": {\n      \"type\": \"integer\"\n     },\n     \"localActivation\": {\n      \"$ref\": \"#/components/schemas/FooLocalActivations\"\n     },\n     \"uselyKey\": {\n      \"minLength\": 1,\n      \"type\": \"string\"\n     },\n     \"overlap\": {\n      \"type\": \"array\",\n      \"items\": {\n       \"$ref\": \"#/components/schemas/FooEntity\"\n      }\n     },\n     \"potatoFamily\": {\n      \"minLength\": 1,\n      \"type\": \"string\"\n     },\n     \"updatedAt\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"nullable\": true\n     },\n     \"barRules\": {\n      \"$ref\": \"#/components/schemas/FooBarRules\"\n     },\n     \"lookEnd\": {\n      \"$ref\": \"#/components/schemas/BazLook\"\n     },\n     \"lookStart\": {\n      \"$ref\": \"#/components/schemas/BazLook\"\n     }\n    }\n   },\n   \"FooLocalActivation\": {\n    \"type\": \"object\",\n    \"properties\": {\n     \"maxRoxesReceived\": {\n      \"type\": \"integer\",\n      \"nullable\": true\n     },\n     \"minRoxesReceived\": {\n      \"type\": \"integer\",\n      \"nullable\": true\n     }\n    }\n   },\n   \"FooLocalActivations\": {\n    \"type\": \"object\",\n    \"additionalProperties\": {\n     \"$ref\": \"#/components/schemas/FooLocalActivation\"\n    }\n   },\n   \"FooValue\": {\n    \"required\": [\n     \"uselyKey\",\n     \"lookStart\",\n     \"lookEnd\",\n     \"mille\",\n     \"potatoFamily\",\n     \"barRules\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n     \"activateSince\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"nullable\": true\n     },\n     \"activateTill\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"nullable\": true\n     },\n     \"mille\": {\n      \"$ref\": \"#/components/schemas/BazMille\"\n     },\n     \"localActivation\": {\n      \"$ref\": \"#/components/schemas/FooLocalActivations\"\n     },\n     \"uselyKey\": {\n      \"minLength\": 1,\n      \"type\": \"string\"\n     },\n     \"potatoFamily\": {\n      \"minLength\": 1,\n      \"type\": \"string\"\n     },\n     \"barRules\": {\n      \"$ref\": \"#/components/schemas/FooBarRules\"\n     },\n     \"lookEnd\": {\n      \"$ref\": \"#/components/schemas/BazLook\"\n     },\n     \"lookStart\": {\n      \"$ref\": \"#/components/schemas/BazLook\"\n     }\n    }\n   },\n   \"FooBar\": {\n    \"type\": \"string\"\n   },\n   \"FooBarRule\": {\n    \"type\": \"object\",\n    \"properties\": {\n     \"customLiePreferences\": {\n      \"type\": \"array\",\n      \"items\": {\n       \"$ref\": \"#/components/schemas/LiesPreference\"\n      }\n     },\n     \"customModularity\": {\n      \"type\": \"array\",\n      \"items\": {\n       \"$ref\": \"#/components/schemas/LiesModularity\"\n      },\n      \"nullable\": true\n     },\n     \"customSoups\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\n       \"type\": \"string\"\n      }\n     },\n     \"hideCarrots\": {\n      \"type\": \"array\",\n      \"items\": {\n       \"type\": \"integer\"\n      }\n     },\n     \"areaTagsByCarrots\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\n       \"type\": \"array\",\n       \"items\": {\n        \"type\": \"string\"\n       }\n      }\n     }\n    }\n   },\n   \"FooBarRules\": {\n    \"type\": \"object\",\n    \"additionalProperties\": {\n     \"$ref\": \"#/components/schemas/FooBarRule\"\n    },\n    \"nullable\": true\n   },\n   \"BazMille\": {\n    \"maxLength\": 2,\n    \"minLength\": 2,\n    \"pattern\": \"^[a-zA-Z]{2}$\",\n    \"type\": \"string\",\n    \"description\": \"Acme Mille\",\n    \"example\": \"US\"\n   },\n   \"BazLook\": {\n    \"pattern\": \"^[0-9]{4}-W(0[1-9]|[1-4][0-9]|5[0-3])$\",\n    \"type\": \"string\",\n    \"description\": \"Acme Look\",\n    \"example\": \"2018-W43\"\n   },\n   \"LieAreaEntity\": {\n    \"required\": [\n     \"areas\",\n     \"mille\",\n     \"name\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n     \"mille\": {\n      \"$ref\": \"#/components/schemas/BazMille\"\n     },\n     \"createdAt\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\"\n     },\n     \"id\": {\n      \"type\": \"integer\"\n     },\n     \"name\": {\n      \"type\": \"string\"\n     },\n     \"areas\": {\n      \"$ref\": \"#/components/schemas/PqStringArray\"\n     },\n     \"updatedAt\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"nullable\": true\n     }\n    }\n   },\n   \"LieAreaValue\": {\n    \"required\": [\n     \"areas\",\n     \"mille\",\n     \"name\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n     \"mille\": {\n      \"$ref\": \"#/components/schemas/BazMille\"\n     },\n     \"name\": {\n      \"type\": \"string\"\n     },\n     \"areas\": {\n      \"$ref\": \"#/components/schemas/PqStringArray\"\n     }\n    }\n   },\n   \"LiesDrainSetting\": {\n    \"type\": \"object\",\n    \"properties\": {\n     \"amount\": {\n      \"type\": \"integer\",\n      \"nullable\": true\n     },\n     \"rigidAmounts\": {\n      \"type\": \"array\",\n      \"items\": {\n       \"$ref\": \"#/components/schemas/LiesRigidAmount\"\n      },\n      \"nullable\": true\n     },\n     \"rigidQuantities\": {\n      \"type\": \"array\",\n      \"items\": {\n       \"$ref\": \"#/components/schemas/LiesRigidQuantity\"\n      },\n      \"nullable\": true\n     },\n     \"reason\": {\n      \"type\": \"string\"\n     },\n     \"servings\": {\n      \"type\": \"integer\",\n      \"nullable\": true\n     },\n     \"strategy\": {\n      \"type\": \"string\"\n     }\n    },\n    \"nullable\": true\n   },\n   \"LiesCarrot\": {\n    \"type\": \"object\",\n    \"properties\": {\n     \"drainSetting\": {\n      \"$ref\": \"#/components/schemas/LiesDrainSetting\"\n     },\n     \"index\": {\n      \"type\": \"integer\"\n     },\n     \"isSoldOut\": {\n      \"type\": \"boolean\"\n     },\n     \"presets\": {\n      \"type\": \"array\",\n      \"items\": {\n       \"type\": \"string\"\n      },\n      \"nullable\": true\n     },\n     \"soup\": {\n      \"$ref\": \"#/components/schemas/LiesSoup\"\n     },\n     \"areaTags\": {\n      \"type\": \"array\",\n      \"items\": {\n       \"type\": \"string\"\n      }\n     },\n     \"selectionLimit\": {\n      \"type\": \"integer\",\n      \"nullable\": true\n     }\n    }\n   },\n   \"LiesRigidAmount\": {\n    \"type\": \"object\",\n    \"properties\": {\n     \"amount\": {\n      \"type\": \"integer\"\n     },\n     \"people\": {\n      \"type\": \"integer\"\n     }\n    }\n   },\n   \"LiesRigidQuantity\": {\n    \"type\": \"object\",\n    \"properties\": {\n     \"amount\": {\n      \"type\": \"integer\"\n     },\n     \"people\": {\n      \"type\": \"integer\"\n     },\n     \"quantity\": {\n      \"type\": \"integer\"\n     }\n    }\n   },\n   \"LiesLie\": {\n    \"type\": \"object\",\n    \"properties\": {\n     \"averageRating\": {\n      \"type\": \"number\"\n     },\n     \"clonedFrom\": {\n      \"type\": \"string\",\n      \"nullable\": true\n     },\n     \"mille\": {\n      \"type\": \"string\"\n     },\n     \"carrots\": {\n      \"type\": \"array\",\n      \"items\": {\n       \"$ref\": \"#/components/schemas/LiesCarrot\"\n      },\n      \"nullable\": true\n     },\n     \"createdAt\": {\n      \"type\": \"string\"\n     },\n     \"headline\": {\n      \"type\": \"string\"\n     },\n     \"id\": {\n      \"type\": \"string\"\n     },\n     \"isActive\": {\n      \"type\": \"boolean\",\n      \"nullable\": true\n     },\n     \"isComplete\": {\n      \"type\": \"boolean\",\n      \"nullable\": true\n     },\n     \"link\": {\n      \"type\": \"string\"\n     },\n     \"meatSwanCombinations\": {\n      \"type\": \"array\",\n      \"items\": {\n       \"type\": \"array\",\n       \"items\": {\n        \"type\": \"string\"\n       }\n      },\n      \"nullable\": true\n     },\n     \"meatSwanCombinationsText\": {\n      \"type\": \"string\",\n      \"nullable\": true\n     },\n     \"modularity\": {\n      \"type\": \"array\",\n      \"items\": {\n       \"$ref\": \"#/components/schemas/LiesModularity\"\n      },\n      \"nullable\": true\n     },\n     \"preferences\": {\n      \"type\": \"array\",\n      \"items\": {\n       \"$ref\": \"#/components/schemas/LiesPreference\"\n      },\n      \"nullable\": true\n     },\n     \"potato\": {\n      \"type\": \"string\"\n     },\n     \"rated\": {\n      \"type\": \"integer\"\n     },\n     \"serializedPreferences\": {\n      \"type\": \"string\",\n      \"nullable\": true\n     },\n     \"surveyBody\": {\n      \"type\": \"string\",\n      \"nullable\": true\n     },\n     \"surveyOptIn\": {\n      \"type\": \"string\",\n      \"nullable\": true\n     },\n     \"surveyQuestion\": {\n      \"type\": \"string\",\n      \"nullable\": true\n     },\n     \"surveyTitle\": {\n      \"type\": \"string\",\n      \"nullable\": true\n     },\n     \"updatedAt\": {\n      \"type\": \"string\"\n     },\n     \"look\": {\n      \"type\": \"string\"\n     }\n    }\n   },\n   \"LiesModularity\": {\n    \"type\": \"object\",\n    \"properties\": {\n     \"addOns\": {\n      \"type\": \"array\",\n      \"items\": {\n       \"$ref\": \"#/components/schemas/LiesModularityAddOns\"\n      },\n      \"nullable\": true\n     },\n     \"addOnsHeadline\": {\n      \"type\": \"string\",\n      \"nullable\": true\n     },\n     \"defaultCarrotIndex\": {\n      \"type\": \"integer\"\n     },\n     \"noAddOnsDefaultTitle\": {\n      \"type\": \"string\",\n      \"nullable\": true\n     },\n     \"noBarsDefaultTitle\": {\n      \"type\": \"string\",\n      \"nullable\": true\n     },\n     \"promoTitle\": {\n      \"type\": \"string\",\n      \"nullable\": true\n     },\n     \"bars\": {\n      \"type\": \"array\",\n      \"items\": {\n       \"$ref\": \"#/components/schemas/LiesModularityBar\"\n      },\n      \"nullable\": true\n     },\n     \"barsHeadline\": {\n      \"type\": \"string\",\n      \"nullable\": true\n     }\n    }\n   },\n   \"LiesModularityAddOns\": {\n    \"type\": \"object\",\n    \"properties\": {\n     \"index\": {\n      \"type\": \"integer\"\n     },\n     \"title\": {\n      \"type\": \"string\"\n     }\n    }\n   },\n   \"LiesModularityBar\": {\n    \"type\": \"object\",\n    \"properties\": {\n     \"index\": {\n      \"type\": \"integer\"\n     },\n     \"title\": {\n      \"type\": \"string\",\n      \"nullable\": true\n     }\n    }\n   },\n   \"LiesPage\": {\n    \"type\": \"object\",\n    \"properties\": {\n     \"count\": {\n      \"type\": \"integer\"\n     },\n     \"items\": {\n      \"type\": \"array\",\n      \"items\": {\n       \"$ref\": \"#/components/schemas/LiesLie\"\n      },\n      \"nullable\": true\n     },\n     \"skip\": {\n      \"type\": \"integer\"\n     },\n     \"take\": {\n      \"type\": \"integer\"\n     },\n     \"total\": {\n      \"type\": \"integer\"\n     }\n    }\n   },\n   \"LiesPreference\": {\n    \"type\": \"object\",\n    \"properties\": {\n     \"other\": {\n      \"type\": \"array\",\n      \"items\": {\n       \"type\": \"integer\"\n      },\n      \"nullable\": true\n     },\n     \"preset\": {\n      \"type\": \"string\"\n     },\n     \"recommended\": {\n      \"type\": \"array\",\n      \"items\": {\n       \"type\": \"integer\"\n      },\n      \"nullable\": true\n     }\n    }\n   },\n   \"LiesSoup\": {\n    \"type\": \"object\",\n    \"properties\": {\n     \"active\": {\n      \"type\": \"boolean\",\n      \"nullable\": true\n     },\n     \"allergens\": {\n      \"type\": \"array\",\n      \"items\": {\n       \"$ref\": \"#/components/schemas/LiesSoupAllergenConditional\"\n      },\n      \"nullable\": true\n     },\n     \"mille\": {\n      \"type\": \"string\"\n     },\n     \"id\": {\n      \"type\": \"string\"\n     },\n     \"ingredients\": {\n      \"type\": \"array\",\n      \"items\": {\n       \"$ref\": \"#/components/schemas/LiesSoupIngredient\"\n      },\n      \"nullable\": true\n     },\n     \"name\": {\n      \"type\": \"string\"\n     },\n     \"slug\": {\n      \"type\": \"string\"\n     }\n    }\n   },\n   \"LiesSoupAllergenConditional\": {\n    \"type\": \"object\"\n   },\n   \"LiesSoupIngredient\": {\n    \"type\": \"object\",\n    \"properties\": {\n     \"allergens\": {\n      \"type\": \"array\",\n      \"items\": {\n       \"$ref\": \"#/components/schemas/LiesSoupAllergenConditional\"\n      },\n      \"nullable\": true\n     },\n     \"mille\": {\n      \"type\": \"string\"\n     },\n     \"description\": {\n      \"type\": \"string\",\n      \"nullable\": true\n     },\n     \"family\": {\n      \"$ref\": \"#/components/schemas/LiesSoupIngredientFamily\"\n     },\n     \"hasDuplicatedName\": {\n      \"type\": \"boolean\",\n      \"nullable\": true\n     },\n     \"id\": {\n      \"type\": \"string\"\n     },\n     \"imageLink\": {\n      \"type\": \"string\",\n      \"nullable\": true\n     },\n     \"imagePath\": {\n      \"type\": \"string\",\n      \"nullable\": true\n     },\n     \"internalName\": {\n      \"type\": \"string\",\n      \"nullable\": true\n     },\n     \"name\": {\n      \"type\": \"string\"\n     },\n     \"shipped\": {\n      \"type\": \"boolean\",\n      \"nullable\": true\n     },\n     \"slug\": {\n      \"type\": \"string\"\n     },\n     \"type\": {\n      \"type\": \"string\"\n     },\n     \"usage\": {\n      \"type\": \"integer\"\n     }\n    }\n   },\n   \"LiesSoupIngredientFamily\": {\n    \"type\": \"object\",\n    \"properties\": {\n     \"createdAt\": {\n      \"type\": \"string\"\n     },\n     \"description\": {\n      \"type\": \"string\",\n      \"nullable\": true\n     },\n     \"iconLink\": {\n      \"type\": \"string\",\n      \"nullable\": true\n     },\n     \"iconPath\": {\n      \"type\": \"string\",\n      \"nullable\": true\n     },\n     \"id\": {\n      \"type\": \"string\"\n     },\n     \"name\": {\n      \"type\": \"string\"\n     },\n     \"priority\": {\n      \"type\": \"integer\"\n     },\n     \"slug\": {\n      \"type\": \"string\"\n     },\n     \"type\": {\n      \"type\": \"string\"\n     },\n     \"updatedAt\": {\n      \"type\": \"string\"\n     },\n     \"usageByMille\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\n       \"type\": \"integer\"\n      },\n      \"nullable\": true\n     }\n    },\n    \"nullable\": true\n   },\n   \"PqStringArray\": {\n    \"type\": \"array\",\n    \"items\": {\n     \"type\": \"string\"\n    },\n    \"nullable\": true\n   },\n   \"PotatosSoupFamily\": {\n    \"type\": \"string\"\n   },\n   \"RestErrResponse\": {\n    \"type\": \"object\",\n    \"properties\": {\n     \"code\": {\n      \"type\": \"integer\"\n     },\n     \"context\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {}\n     },\n     \"error\": {\n      \"type\": \"string\"\n     },\n     \"status\": {\n      \"type\": \"string\"\n     }\n    }\n   },\n   \"UsecaseCreatePlaceInput\": {\n    \"required\": [\n     \"fooId\",\n     \"barName\",\n     \"foxUuid\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n     \"foxId\": {\n      \"minimum\": 0,\n      \"type\": \"integer\"\n     },\n     \"foxUuid\": {\n      \"$ref\": \"#/components/schemas/UuidUUID\"\n     },\n     \"fooId\": {\n      \"type\": \"integer\"\n     },\n     \"barName\": {\n      \"$ref\": \"#/components/schemas/FooBar\"\n     }\n    }\n   },\n   \"UsecaseFooInfo\": {\n    \"required\": [\n     \"uselyKey\",\n     \"lookStart\",\n     \"lookEnd\",\n     \"mille\",\n     \"potatoFamily\",\n     \"barRules\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n     \"activateSince\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"nullable\": true\n     },\n     \"activateTill\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"nullable\": true\n     },\n     \"availableForActivation\": {\n      \"type\": \"boolean\"\n     },\n     \"mille\": {\n      \"$ref\": \"#/components/schemas/BazMille\"\n     },\n     \"createdAt\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\"\n     },\n     \"deletedAt\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"nullable\": true\n     },\n     \"fooId\": {\n      \"type\": \"integer\"\n     },\n     \"localActivation\": {\n      \"$ref\": \"#/components/schemas/FooLocalActivations\"\n     },\n     \"uselyKey\": {\n      \"minLength\": 1,\n      \"type\": \"string\"\n     },\n     \"overlap\": {\n      \"type\": \"array\",\n      \"items\": {\n       \"$ref\": \"#/components/schemas/FooEntity\"\n      }\n     },\n     \"potatoFamily\": {\n      \"minLength\": 1,\n      \"type\": \"string\"\n     },\n     \"updatedAt\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"nullable\": true\n     },\n     \"barRules\": {\n      \"$ref\": \"#/components/schemas/FooBarRules\"\n     },\n     \"lookEnd\": {\n      \"$ref\": \"#/components/schemas/BazLook\"\n     },\n     \"lookStart\": {\n      \"$ref\": \"#/components/schemas/BazLook\"\n     }\n    }\n   },\n   \"UsecaseFindAvailableCarrotsInput\": {\n    \"required\": [\n     \"items\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n     \"items\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\n       \"$ref\": \"#/components/schemas/UsecaseFindAvailableCarrotsInputItem\"\n      }\n     }\n    }\n   },\n   \"UsecaseFindAvailableCarrotsInputItem\": {\n    \"required\": [\n     \"holeId\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n     \"foxId\": {\n      \"type\": \"integer\"\n     },\n     \"foxUuid\": {\n      \"$ref\": \"#/components/schemas/UuidUUID\"\n     },\n     \"potatoFamily\": {\n      \"$ref\": \"#/components/schemas/PotatosSoupFamily\"\n     },\n     \"holeId\": {\n      \"type\": \"integer\"\n     }\n    }\n   },\n   \"UsecaseFindAvailableCarrotsOutput\": {\n    \"type\": \"object\",\n    \"properties\": {\n     \"items\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\n       \"$ref\": \"#/components/schemas/UsecaseFindAvailableCarrotsOutputItem\"\n      },\n      \"description\": \"Available carrot indexes mapped with same key as input items.\"\n     }\n    }\n   },\n   \"UsecaseFindAvailableCarrotsOutputItem\": {\n    \"type\": \"object\",\n    \"properties\": {\n     \"carrots\": {\n      \"type\": \"array\",\n      \"items\": {\n       \"type\": \"integer\"\n      }\n     },\n     \"error\": {\n      \"type\": \"string\"\n     }\n    }\n   },\n   \"UsecaseUpdateFooInput\": {\n    \"required\": [\n     \"uselyKey\",\n     \"lookStart\",\n     \"lookEnd\",\n     \"mille\",\n     \"potatoFamily\",\n     \"barRules\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n     \"activateSince\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"nullable\": true\n     },\n     \"activateTill\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"nullable\": true\n     },\n     \"mille\": {\n      \"$ref\": \"#/components/schemas/BazMille\"\n     },\n     \"localActivation\": {\n      \"$ref\": \"#/components/schemas/FooLocalActivations\"\n     },\n     \"uselyKey\": {\n      \"minLength\": 1,\n      \"type\": \"string\"\n     },\n     \"potatoFamily\": {\n      \"minLength\": 1,\n      \"type\": \"string\"\n     },\n     \"barRules\": {\n      \"$ref\": \"#/components/schemas/FooBarRules\"\n     },\n     \"lookEnd\": {\n      \"$ref\": \"#/components/schemas/BazLook\"\n     },\n     \"lookStart\": {\n      \"$ref\": \"#/components/schemas/BazLook\"\n     }\n    }\n   },\n   \"UuidUUID\": {\n    \"type\": \"string\",\n    \"format\": \"uuid\",\n    \"example\": \"248df4b7-aa70-47b8-a036-33ac447e668d\"\n   }\n  },\n  \"securitySchemes\": {\n   \"JWT\": {\n    \"type\": \"apiKey\",\n    \"name\": \"Authorization\",\n    \"in\": \"header\",\n    \"description\": \"Should be in form: 'Bearer \\u003ctoken_value\\u003e'\"\n   }\n  }\n }\n}"
		}
	},
	"Error": "panic: unreachable: PotatoSku"
}