{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/onosproject/config-models"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "models/testdevice-2.0.x/openapi.yaml",
			"byteSize": 15993,
			"content": "# SPDX-FileCopyrightText: 2021-present Open Networking Foundation \u003cinfo@opennetworking.org\u003e\n#\n# SPDX-License-Identifier: Apache-2.0\ncomponents:\n  parameters:\n    target:\n      content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: target (target in onos-config)\n      in: path\n      name: target\n      required: true\n  requestBodies:\n    RequestBody_Cont1a:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Cont1a'\n    RequestBody_Cont1a_Cont2a:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Cont1a_Cont2a'\n    RequestBody_Cont1a_Cont2d:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Cont1a_Cont2d'\n    RequestBody_Cont1a_List2a:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Cont1a_List2a'\n    RequestBody_Cont1b-state:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Cont1b-state'\n    RequestBody_Cont1b-state_Cont2c:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Cont1b-state_Cont2c'\n    RequestBody_Cont1b-state_List2b:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Cont1b-state_List2b'\n  schemas:\n    AdditionalPropertiesUnchTarget:\n      description: both the additional property 'unchanged' and the 'target'\n      properties:\n        target:\n          description: an override of the target (target)\n          title: target\n          type: string\n        unchanged:\n          description: A comma seperated list of unchanged mandatory attribute names\n          title: unchanged\n          type: string\n      title: AdditionalPropertiesUnchTarget\n      type: object\n    AdditionalPropertyTarget:\n      description: Optionally specify a target other than the default (only on PATCH\n        method)\n      properties:\n        target:\n          description: an override of the target (target)\n          title: target\n          type: string\n      title: AdditionalPropertyTarget\n      type: object\n    AdditionalPropertyUnchanged:\n      description: To optionally omit 'required' properties, add them to 'unchanged'\n        list\n      properties:\n        unchanged:\n          description: A comma seperated list of unchanged mandatory attribute names\n          title: unchanged\n          type: string\n      title: AdditionalPropertyUnchanged\n      type: object\n    Cont1a:\n      additionalProperties:\n        $ref: '#/components/schemas/AdditionalPropertyTarget'\n      description: The top level container\n      properties:\n        cont2a:\n          $ref: '#/components/schemas/Cont1a_Cont2a'\n        cont2d:\n          $ref: '#/components/schemas/Cont1a_Cont2d'\n        leaf1a:\n          description: Leaf inside Container 1a\n          maxLength: 10\n          minLength: 5\n          title: leaf1a\n          type: string\n        list2a:\n          $ref: '#/components/schemas/Cont1a_List2a_List'\n      title: Cont1a\n      type: object\n    Cont1a_Cont2a:\n      additionalProperties:\n        $ref: '#/components/schemas/AdditionalPropertyUnchanged'\n      description: The 2nd level container\n      properties:\n        leaf-list-leaf2e:\n          items:\n            description: leaf list inside Container 2a\n            maximum: 200\n            minimum: -100\n            title: leaf2e\n            type: integer\n          title: leaf-list-leaf2e\n          type: array\n        leaf2a:\n          description: Numeric leaf inside Container 2a\n          maximum: 13\n          minimum: 1\n          title: leaf2a\n          type: integer\n        leaf2b:\n          description: Voltage leaf inside Container 2a\n          maximum: 2\n          minimum: -0.001\n          title: leaf2b\n          type: number\n        leaf2c:\n          description: Read only leaf inside Container 2a\n          title: leaf2c\n          type: string\n        leaf2d:\n          description: Another decimal inside Container 2a\n          maximum: 2\n          minimum: 0.001\n          title: leaf2d\n          type: number\n        leaf2f:\n          description: binary leaf inside Container 2a\n          format: byte\n          maxLength: 20\n          minLength: 20\n          title: leaf2f\n          type: string\n        leaf2g:\n          description: Boolean leaf inside Container 2a\n          title: leaf2g\n          type: boolean\n      required:\n      - leaf2b\n      title: Cont1a_Cont2a\n      type: object\n    Cont1a_Cont2d:\n      description: Container 2d\n      properties:\n        beer:\n          description: For choice snack:sports-arena\n          maxLength: 0\n          title: beer\n          type: string\n        chocolate:\n          description: For choice snack:late-night\n          title: chocolate\n          type: string\n        leaf2d3c:\n          description: string leaf on Container 2d augmented to cont1a\n          title: leaf2d3c\n          type: string\n        pretzel:\n          description: For choice snack:sports-arena\n          maxLength: 0\n          title: pretzel\n          type: string\n      title: Cont1a_Cont2d\n      type: object\n    Cont1a_List2a:\n      description: A simple list of configuration items (single)\n      properties:\n        name:\n          description: The list is keyed by name\n          maxLength: 8\n          minLength: 4\n          title: name\n          type: string\n        rx-power:\n          description: Receive power\n          maximum: 30\n          minimum: 20\n          title: rx-power\n          type: integer\n        tx-power:\n          description: Transmit power\n          maximum: 20\n          minimum: 1\n          title: tx-power\n          type: integer\n      required:\n      - name\n      title: Cont1a_List2a\n      type: object\n      x-list-multiple: true\n      x-must:\n      - ErrorMessage:\n          Name: tx-power is greater than or equal to rx-power\n        Name: number(./t1:tx-power) \u003c number(./t1:rx-power)\n    Cont1a_List2a_List:\n      description: A simple list of configuration items (list)\n      items:\n        $ref: '#/components/schemas/Cont1a_List2a'\n      maxItems: 4\n      type: array\n      uniqueItems: true\n      x-keys:\n      - name\n      x-list-multiple: true\n    Cont1b-state:\n      additionalProperties:\n        $ref: '#/components/schemas/AdditionalPropertyTarget'\n      description: A second top level container - this one for state attributes. Edit\n        symbol should not be visible\n      properties:\n        cont2c:\n          $ref: '#/components/schemas/Cont1b-state_Cont2c'\n        leaf2d:\n          description: A state attribute\n          maximum: 20000\n          minimum: 10000\n          title: leaf2d\n          type: integer\n        list2b:\n          $ref: '#/components/schemas/Cont1b-state_List2b_List'\n      title: Cont1b-state\n      type: object\n    Cont1b-state_Cont2c:\n      description: This is a new container added in the 2019 version.  We don't have\n        to say it's 'config false' - implied by parent\n      properties:\n        leaf3a:\n          description: Another boolean variable\n          title: leaf3a\n          type: boolean\n        leaf3b:\n          description: Another string variable\n          maxLength: 10\n          minLength: 5\n          title: leaf3b\n          type: string\n      title: Cont1b-state_Cont2c\n      type: object\n    Cont1b-state_List2b:\n      additionalProperties:\n        $ref: '#/components/schemas/AdditionalPropertyUnchanged'\n      description: A simple list of state items, with a double key (single)\n      properties:\n        index1:\n          description: The list index\n          maximum: 255\n          minimum: 0\n          title: index1\n          type: integer\n        index2:\n          description: The list index\n          maximum: 255\n          minimum: 0\n          title: index2\n          type: integer\n        leaf3c:\n          description: A string attribute in the list\n          maxLength: 20\n          minLength: 1\n          title: leaf3c\n          type: string\n        leaf3d:\n          description: An identityref attribute in the list\n          enum:\n          - IDTYPE1\n          - IDTYPE2\n          title: leaf3d\n          type: string\n      required:\n      - index1\n      - index2\n      title: Cont1b-state_List2b\n      type: object\n      x-list-multiple: true\n    Cont1b-state_List2b_List:\n      description: A simple list of state items, with a double key (list)\n      items:\n        $ref: '#/components/schemas/Cont1b-state_List2b'\n      maxItems: 8\n      type: array\n      uniqueItems: true\n      x-keys:\n      - index1\n      - index2\n      x-list-multiple: true\n    LeafAtTopLevel:\n      description: A leaf at the top level (not recommended but must be supported)\n      pattern: '[A-Z]{3}-[0-9]*'\n      title: leafAtTopLevel\n      type: string\ninfo:\n  contact:\n    email: info@opennetworking.org\n    name: Open Networking Foundation\n    url: https://opennetworking.org\n  description: This OpenAPI 3 specification is generated fromtestdevice onos-config\n    model plugin\n  license:\n    name: Apache-2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0\n  title: testdevice-2.0.x\n  version: 2.0.x\nopenapi: 3.0.0\npaths:\n  /testdevice/v2.0.x/{target}/cont1a:\n    delete:\n      operationId: deleteCont1a_Container\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /cont1a\n    description: The top level container\n    get:\n      operationId: getCont1a\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Cont1a'\n          description: GET OK 200\n      summary: GET /cont1a Container\n      tags:\n      - \"\"\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    post:\n      operationId: postCont1a\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_Cont1a'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /cont1a\n  /testdevice/v2.0.x/{target}/cont1a/cont2a:\n    delete:\n      operationId: deleteCont1a_Cont2a_Container\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /cont1a/cont2a\n    description: The 2nd level container\n    get:\n      operationId: getCont1a_Cont2a\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Cont1a_Cont2a'\n          description: GET OK 200\n      summary: GET /cont1a/cont2a Container\n      tags:\n      - Cont1a\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    post:\n      operationId: postCont1a_Cont2a\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_Cont1a_Cont2a'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /cont1a/cont2a\n  /testdevice/v2.0.x/{target}/cont1a/cont2d:\n    delete:\n      operationId: deleteCont1a_Cont2d_Container\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /cont1a/cont2d\n    description: Container 2d\n    get:\n      operationId: getCont1a_Cont2d\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Cont1a_Cont2d'\n          description: GET OK 200\n      summary: GET /cont1a/cont2d Container\n      tags:\n      - Cont1a\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    post:\n      operationId: postCont1a_Cont2d\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_Cont1a_Cont2d'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /cont1a/cont2d\n  /testdevice/v2.0.x/{target}/cont1a/list2a:\n    description: A simple list of configuration items\n    get:\n      operationId: getCont1a_List2a_List\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Cont1a_List2a_List'\n          description: GET OK 200\n      summary: GET /cont1a/list2a List\n      tags:\n      - Cont1a_List2a\n      - List\n    parameters:\n    - $ref: '#/components/parameters/target'\n  /testdevice/v2.0.x/{target}/cont1a/list2a/{name}:\n    delete:\n      operationId: deleteCont1a_List2a_Container\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /cont1a/list2a\n    description: A simple list of configuration items\n    get:\n      operationId: getCont1a_List2a\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Cont1a_List2a'\n          description: GET OK 200\n      summary: GET /cont1a/list2a Container\n      tags:\n      - Cont1a_List2a\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {name}\n      in: path\n      name: name\n      required: true\n    post:\n      operationId: postCont1a_List2a\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_Cont1a_List2a'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /cont1a/list2a\n  /testdevice/v2.0.x/{target}/cont1b-state:\n    description: A second top level container - this one for state attributes. Edit\n      symbol should not be visible\n    get:\n      operationId: getCont1b-state\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Cont1b-state'\n          description: GET OK 200\n      summary: GET /cont1b-state Container\n      tags:\n      - \"\"\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n  /testdevice/v2.0.x/{target}/cont1b-state/cont2c:\n    description: This is a new container added in the 2019 version.  We don't have\n      to say it's 'config false' - implied by parent\n    get:\n      operationId: getCont1b-state_Cont2c\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Cont1b-state_Cont2c'\n          description: GET OK 200\n      summary: GET /cont1b-state/cont2c Container\n      tags:\n      - Cont1b-state\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n  /testdevice/v2.0.x/{target}/cont1b-state/list2b:\n    description: A simple list of state items, with a double key\n    get:\n      operationId: getCont1b-state_List2b_List\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Cont1b-state_List2b_List'\n          description: GET OK 200\n      summary: GET /cont1b-state/list2b List\n      tags:\n      - Cont1b-state_List2b\n      - List\n    parameters:\n    - $ref: '#/components/parameters/target'\n  /testdevice/v2.0.x/{target}/cont1b-state/list2b/{index1}/{index2}:\n    description: A simple list of state items, with a double key\n    get:\n      operationId: getCont1b-state_List2b\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Cont1b-state_List2b'\n          description: GET OK 200\n      summary: GET /cont1b-state/list2b Container\n      tags:\n      - Cont1b-state_List2b\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {index1}\n      in: path\n      name: index1\n      required: true\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {index2}\n      in: path\n      name: index2\n      required: true\n"
		}
	},
	"Error": "panic: unreachable: target"
}