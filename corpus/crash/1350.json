{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/wantanabe/typescript-express-rest-api"
		},
		"file": {
			"name": "swagger.json",
			"path": "swagger.json",
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"title\": \"TypeScript Express API\",\n    \"version\": \"1.0.0\",\n    \"description\": \"TypeScript, Express, JWT Auth, Mongoose\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"http://localhost:3000\"\n    }\n  ],\n  \"paths\": {\n    \"/auth/signup/\": {\n      \"post\": {\n        \"description\": \"Register user to application\",\n        \"tags\": [\n          \"auth\"\n        ],\n        \"requestBody\": {\n          \"description\": \"sign up body\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserSchema\"\n              },\n              \"example\": {\n                \"email\": \"test.user@mail.com\",\n                \"password\": \"test_test\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"user successfuly signed up\",\n            \"content\": {\n              \"appication/json\": {\n                \"example\": {\n                  \"message\": \"You have signed up successfully\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"sign up failed\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"message\": \"Email already exists\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/auth/login/\": {\n      \"post\": {\n        \"description\": \"Login user to application\",\n        \"tags\": [\n          \"auth\"\n        ],\n        \"requestBody\": {\n          \"description\": \"login body\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserSchema\"\n              },\n              \"example\": {\n                \"email\": \"test.user@mail.com\",\n                \"password\": \"test_test\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"user successfuly logged in\",\n            \"headers\": {\n              \"Authorization\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                },\n                \"description\": \"JWT token\"\n              }\n            },\n            \"content\": {\n              \"appication/json\": {\n                \"example\": {\n                  \"message\": \"Login Success!\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Not logged in, invalid credentials\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"message\": \"Invalid credentials\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/auth/user/\": {\n      \"get\": {\n        \"description\": \"Get authenticated user\",\n        \"tags\": [\n          \"auth\"\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"return authenticated user\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"oneOf\": [\n                    {\n                      \"$ref\": \"#/components/schemas/UserSchema\"\n                    }\n                  ]\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/users\": {\n      \"get\": {\n        \"description\": \"Get all stored users in Database\",\n        \"tags\": [\n          \"users\"\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"An array of users\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"oneOf\": [\n                    {\n                      \"$ref\": \"#/components/schemas/Users\"\n                    }\n                  ]\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"description\": \"Create new User\",\n        \"tags\": [\n          \"users\"\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"user creation request body\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserSchema\"\n              },\n              \"example\": {\n                \"name\": \"userName\",\n                \"email\": \"test.user@mail.com\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"return created user\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"oneOf\": [\n                    {\n                      \"$ref\": \"#/components/schemas/UserSchema\"\n                    }\n                  ]\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/users/{id}\": {\n      \"get\": {\n        \"description\": \"Get user by userId\",\n        \"tags\": [\n          \"users\"\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"id\",\n            \"description\": \"the unique userId\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"return user by id\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"oneOf\": [\n                    {\n                      \"$ref\": \"#/components/schemas/UserSchema\"\n                    }\n                  ]\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"description\": \"Delete user by userId\",\n        \"tags\": [\n          \"users\"\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"id\",\n            \"description\": \"the unique userId\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"return deleted user\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"oneOf\": [\n                    {\n                      \"$ref\": \"#/components/schemas/UserSchema\"\n                    }\n                  ]\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"UserSchema\": {\n        \"required\": [\n          \"email\",\n          \"name\"\n        ],\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"type\": \"string\"\n          },\n          \"passwordResetToken\": {\n            \"type\": \"string\"\n          },\n          \"passwordResetExpires\": {\n            \"type\": \"string\",\n            \"format\": \"date\"\n          },\n          \"tokens\": {\n            \"type\": \"array\"\n          }\n        }\n      },\n      \"Users\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"$ref\": \"#/components/schemas/UserSchema\"\n        }\n      },\n      \"Error\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"status\",\n          \"message\"\n        ],\n        \"properties\": {\n          \"status\": {\n            \"type\": \"integer\",\n            \"description\": \"HTTP status code\",\n            \"example\": 200\n          },\n          \"message\": {\n            \"type\": \"string\",\n            \"description\": \"Error description\",\n            \"example\": \"User created\"\n          }\n        }\n      }\n    },\n    \"securitySchemes\": {\n      \"bearerAuth\": {\n        \"type\": \"http\",\n        \"scheme\": \"bearer\",\n        \"bearerFormat\": \"JWT\"\n      }\n    }\n  },\n  \"tags\": []\n}"
		}
	},
	"Error": "panic: runtime error: index out of range [0] with length 0"
}