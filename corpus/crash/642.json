{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/disit/snap4city"
		},
		"file": {
			"name": "eventlogger-openapiv3.json",
			"path": "swagger/internal/eventlogger-openapiv3.json",
			"content": "{\n  \"openapi\": \"3.0.1\",\n  \"info\": {\n    \"title\": \"EventLogger API v.2.0\",\n    \"description\": \"An operative documentation of the EventLogger API. The EventLogger API are HTTP REST API through which it is possible to call and instantiate a logging action by the EventLogger tool, exploiting the Rsyslog protocol on the EventLogger tool without the requirement to install nor configuring Rsyslog also on the different clients.\",\n    \"version\": \"1.0\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"http://{EVENTLOGGER_HOST}/RsyslogAPI\",\n      \"variables\": {\n        \"EVENTLOGGER_HOST\": {\n          \"description\": \"The IP or name of the server where the API has been deployed.\",\n          \"default\": \"localhost\"\n        }\n      }\n    }\n  ],\n  \"paths\": {\n    \"/rsyslog.php\": {\n      \"get\": {\n        \"tags\": [\n          \"Rsyslog\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"p\",\n            \"in\": \"query\",\n            \"description\": \"Type of operation.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"p\"\n              ]\n            }\n          },\n          {\n            \"name\": \"pid\",\n            \"in\": \"query\",\n            \"description\": \"\\n* __For Node-RED/IoT__: it is the Container ID of the Process which is calling the EventLogger API. It must be a unique identifier string.\\n\\n* __For ETL__: it is the name of the Process which is calling the EventLogger API. It must be unique. It must be a unique identifier string.\\n\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"tmstmp\",\n            \"in\": \"query\",\n            \"description\": \"The current Millisecond Timestamp (Unix-Epoch) the IoT-Node-RED or ETL Process when calling the EventLogger API.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"date-time\"\n            }\n          },\n          {\n            \"name\": \"modCom\",\n            \"in\": \"query\",\n            \"description\": \"Communication mode is a codified parameter describing if the IoT device or ETL process is in transmission mode (__TX__) or in receiving mode (__RX__).\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"TX\",\n                \"RX\"\n              ]\n            }\n          },\n          {\n            \"name\": \"appName\",\n            \"in\": \"query\",\n            \"description\": \"Name of the Node-RED / ETL Application.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"IP_local\",\n            \"in\": \"query\",\n            \"description\": \"IP of the current Microservice (IoT or host where the ETL Process is executed) calling the EventLogger API.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"IP_ext\",\n            \"in\": \"query\",\n            \"description\": \"IP of the external host to / from which the current agent represented by __IP_local__ is transmitting / receiving data, according to the __modCom__ parameter. It can be of both forms IPv4 or DNS.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"payloadSize\",\n            \"in\": \"query\",\n            \"description\": \"Measure of data flow traffic (transmitted or received, according to the __modCom__ parameter) between __IP_local__ and __IP_ext__. It must be expressed in KyloBytes (KB).\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"number\",\n              \"format\": \"double\"\n            }\n          },\n          {\n            \"name\": \"counts\",\n            \"in\": \"query\",\n            \"description\": \"Number of counts (transmitted or received, according to the __modCom__ parameter) between __IP_local__ and __IP_ext__, for example the number of services retrieved around a given GPS point. If __payloadSize__ is null or empty, this parameter becomes mandatory.\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          },\n          {\n            \"name\": \"agent\",\n            \"in\": \"query\",\n            \"description\": \"Codified parameter defining the agent type.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"Node-Red\",\n                \"ETL\",\n                \"Data-Analytics\"\n              ]\n            }\n          },\n          {\n            \"name\": \"motivation\",\n            \"in\": \"query\",\n            \"description\": \"Codified parameter defining the type of operation performed by the Microservice calling the EventLogger API.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"ASCAPI\",\n                \"Dashboard\",\n                \"DB_Storage\",\n                \"External_Service\",\n                \"FileSystem_Storage\",\n                \"IoT_Count\",\n                \"IoT_Service\",\n                \"Message_Control\",\n                \"Message_Count\",\n                \"User_Count\"\n              ]\n            }\n          },\n          {\n            \"name\": \"lang\",\n            \"in\": \"query\",\n            \"description\": \"Language of data transmitted to / by the current Microservice.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"lat\",\n            \"in\": \"query\",\n            \"description\": \"\\n* __For Node-RED/IoT__: it is the GPS Latitude of Microservice owner.\\n\\n* __For ETL__: it is the Latitude of the service / device involved in the Process.\\n\",\n            \"schema\": {\n              \"type\": \"number\",\n              \"format\": \"double\"\n            }\n          },\n          {\n            \"name\": \"lon\",\n            \"in\": \"query\",\n            \"description\": \"\\n* __For Node-RED/IoT__: it is the GPS Longitude of Microservice owner.\\n\\n* __For ETL__: it is the Longitude of the service / device involved in the Process.\\n\",\n            \"schema\": {\n              \"type\": \"number\",\n              \"format\": \"double\"\n            }\n          },\n          {\n            \"name\": \"serviceUri\",\n            \"in\": \"query\",\n            \"description\": \"Km4City URI of the service involved in the Process.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"message\",\n            \"in\": \"query\",\n            \"description\": \"Text message for additional notes.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"default\": {\n            \"description\": \"The requested action is performed.\"\n          }\n        }\n      }\n    }\n  }\n}"
		}
	},
	"Error": "panic: runtime error: index out of range [0] with length 0"
}