{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/DefiLlama/defillama-app"
		},
		"file": {
			"name": "resolvedSpec.json",
			"path": "src/docs/resolvedSpec.json",
			"content": "{\n    \"openapi\": \"3.0.0\",\n    \"info\": {\n        \"title\": \"DefiLlama API\",\n        \"description\": \"Docs for defillama's open API\\n\",\n        \"version\": \"1.0.0-oas3\"\n    },\n    \"servers\": [\n        {\n            \"url\": \"https://api.llama.fi\"\n        }\n    ],\n    \"tags\": [\n        {\n            \"name\": \"TVL\",\n            \"description\": \"Retrieve TVL data\"\n        },\n        {\n            \"name\": \"coins\",\n            \"description\": \"General blockchain data used by defillama and open-sourced\"\n        }\n    ],\n    \"paths\": {\n        \"/protocols\": {\n            \"get\": {\n                \"tags\": [\n                    \"TVL\"\n                ],\n                \"summary\": \"List all protocols on defillama along with their tvl\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"successful operation\"\n                    }\n                }\n            }\n        },\n        \"/protocol/{protocol}\": {\n            \"get\": {\n                \"tags\": [\n                    \"TVL\"\n                ],\n                \"summary\": \"Get historical TVL of a protocol and breakdowns by token and chain\",\n                \"parameters\": [\n                    {\n                        \"name\": \"protocol\",\n                        \"in\": \"path\",\n                        \"description\": \"protocol slug\",\n                        \"required\": true,\n                        \"style\": \"simple\",\n                        \"explode\": false,\n                        \"schema\": {\n                            \"type\": \"string\",\n                            \"example\": \"aave\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"successful operation\"\n                    }\n                }\n            }\n        },\n        \"/charts\": {\n            \"get\": {\n                \"tags\": [\n                    \"TVL\"\n                ],\n                \"summary\": \"Get historical TVL of DeFi on all chains\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"successful operation\"\n                    }\n                }\n            }\n        },\n        \"/charts/{chain}\": {\n            \"get\": {\n                \"tags\": [\n                    \"TVL\"\n                ],\n                \"summary\": \"Get historical TVL of a chain\",\n                \"parameters\": [\n                    {\n                        \"name\": \"chain\",\n                        \"in\": \"path\",\n                        \"description\": \"chain slug, you can get these from /chains or the chains property on /protocols\",\n                        \"required\": true,\n                        \"style\": \"simple\",\n                        \"explode\": false,\n                        \"schema\": {\n                            \"type\": \"string\",\n                            \"example\": \"Ethereum\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"successful operation\"\n                    }\n                }\n            }\n        },\n        \"/tvl/{protocol}\": {\n            \"get\": {\n                \"tags\": [\n                    \"TVL\"\n                ],\n                \"summary\": \"Get only protocol TVL\",\n                \"description\": \"Simplified endpoint that only returns a number, the current TVL of a protocol\",\n                \"parameters\": [\n                    {\n                        \"name\": \"protocol\",\n                        \"in\": \"path\",\n                        \"description\": \"protocol slug\",\n                        \"required\": true,\n                        \"style\": \"simple\",\n                        \"explode\": false,\n                        \"schema\": {\n                            \"type\": \"string\",\n                            \"example\": \"uniswap\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"successful operation\"\n                    }\n                }\n            }\n        },\n        \"/chains\": {\n            \"get\": {\n                \"tags\": [\n                    \"TVL\"\n                ],\n                \"summary\": \"Get current TVL of all chains\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"successful operation\"\n                    }\n                }\n            }\n        },\n        \"/block/{chain}/{timestamp}\": {\n            \"get\": {\n                \"tags\": [\n                    \"coins\"\n                ],\n                \"summary\": \"Get the closest block to a timestamp\",\n                \"description\": \"Runs binary search over a blockchain's blocks to get the closest one to a timestamp.\\n\\nEvery time this is run we add new data to our database, so each query permanently speeds up future queries.\\n\",\n                \"parameters\": [\n                    {\n                        \"name\": \"chain\",\n                        \"in\": \"path\",\n                        \"description\": \"Chain which you want to get the block from\",\n                        \"required\": true,\n                        \"style\": \"simple\",\n                        \"explode\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"timestamp\",\n                        \"in\": \"path\",\n                        \"description\": \"UNIX timestamp of the block you are searching for\",\n                        \"required\": true,\n                        \"style\": \"simple\",\n                        \"explode\": false,\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"successful operation\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/inline_response_200\"\n                                }\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Invalid chain or timestamp provided\"\n                    }\n                },\n                \"servers\": [\n                    {\n                        \"url\": \"https://coins.llama.fi\"\n                    }\n                ]\n            }\n        },\n        \"/prices\": {\n            \"post\": {\n                \"tags\": [\n                    \"coins\"\n                ],\n                \"summary\": \"Get current or historical prices of tokens by contract address\",\n                \"description\": \"TODO\",\n                \"requestBody\": {\n                    \"description\": \"If timestamp is not provided we just return the latest data\",\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/prices_body\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"successful operation\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/inline_response_200\"\n                                }\n                            }\n                        }\n                    },\n                    \"502\": {\n                        \"description\": \"Internal error\"\n                    }\n                },\n                \"servers\": [\n                    {\n                        \"url\": \"https://coins.llama.fi\"\n                    }\n                ]\n            }\n        }\n    },\n    \"components\": {\n        \"schemas\": {\n            \"inline_response_200\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"height\": {\n                        \"type\": \"integer\",\n                        \"format\": \"uint\",\n                        \"example\": 11150916\n                    },\n                    \"timestamp\": {\n                        \"type\": \"integer\",\n                        \"format\": \"uint\",\n                        \"example\": 1603964988\n                    }\n                }\n            },\n            \"prices_body\": {\n                \"required\": [\n                    \"coins\"\n                ],\n                \"type\": \"object\",\n                \"properties\": {\n                    \"coins\": {\n                        \"type\": \"array\",\n                        \"example\": [\n                            \"ethereum:0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n                            \"avax:0xd586e7f844cea2f87f50152665bcbc2c279d8d70\"\n                        ],\n                        \"items\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    \"timestamp\": {\n                        \"type\": \"integer\",\n                        \"format\": \"uint\",\n                        \"example\": 1603964988\n                    }\n                }\n            }\n        }\n    }\n}"
		}
	},
	"Error": "panic: runtime error: index out of range [0] with length 0"
}