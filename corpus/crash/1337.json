{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/uwblueprint/starter-code-v2"
		},
		"file": {
			"name": "openapi.json",
			"path": "backend/python/app/static/openapi.json",
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"version\": \"1.0.0\",\n    \"title\": \"UW Blueprint Starter Code Python API\",\n    \"description\": \"An API for the Python Backend of Starter Code\"\n  },\n  \"components\": {\n    \"securitySchemes\": {\n      \"bearerAuth\": {\n        \"type\": \"http\",\n        \"scheme\": \"bearer\",\n        \"bearerFormat\": \"JWT\"\n      }\n    },\n    \"schemas\": {\n      \"PasswordLogin\": {\n        \"type\": \"object\",\n        \"required\": [\"email\", \"password\"],\n        \"properties\": {\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"OAuthLogin\": {\n        \"type\": \"object\",\n        \"required\": [\"id_token\"],\n        \"properties\": {\n          \"id_token\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  },\n  \"paths\": {\n    \"/entities\": {\n      \"get\": {\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"tags\": [\n          \"Entity\"\n        ],\n        \"description\": \"Returns a list of entities\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully returned a list of entities\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"required\": [\n                      \"int_field, string_field, bool_field, enum_field, string_array_field\"\n                    ],\n                    \"properties\": {\n                      \"int_field\": {\n                        \"type\": \"integer\"\n                      },\n                      \"string_field\": {\n                        \"type\": \"string\"\n                      },\n                      \"string_array_field\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"enum_field\": {\n                        \"type\": \"string\",\n                        \"enum\": [\n                          \"A\",\n                          \"B\",\n                          \"C\",\n                          \"D\"\n                        ]\n                      },\n                      \"bool_field\": {\n                        \"type\": \"boolean\"\n                      },\n                      \"file_name\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"500\": {\n            \"description\": \"Invalid request\"\n          }\n        }\n      },\n      \"post\": {\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"tags\": [\n          \"Entity\"\n        ],\n        \"description\": \"Create a new entity\",\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"int_field, string_field, bool_field, enum_field, string_array_field\"\n                ],\n                \"properties\": {\n                  \"int_field\": {\n                    \"type\": \"integer\"\n                  },\n                  \"string_field\": {\n                    \"type\": \"string\"\n                  },\n                  \"string_array_field\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"enum_field\": {\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"A\",\n                      \"B\",\n                      \"C\",\n                      \"D\"\n                    ]\n                  },\n                  \"bool_field\": {\n                    \"type\": \"boolean\"\n                  }\n                }\n              }\n            },\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"body\": {\n                    \"type\": \"string\"\n                  },\n                  \"file\": {\n                    \"type\": \"string\",\n                    \"format\": \"binary\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Successfully created a new entity\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"int_field, string_field, bool_field, enum_field, string_array_field\"\n                  ],\n                  \"properties\": {\n                    \"int_field\": {\n                      \"type\": \"integer\"\n                    },\n                    \"string_field\": {\n                      \"type\": \"string\"\n                    },\n                    \"string_array_field\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"enum_field\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"A\",\n                        \"B\",\n                        \"C\",\n                        \"D\"\n                      ]\n                    },\n                    \"bool_field\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"file_name\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"500\": {\n            \"description\": \"Invalid request\"\n          }\n        }\n      }\n    },\n    \"/entities/{id}\": {\n      \"get\": {\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"The entity ID\"\n          }\n        ],\n        \"tags\": [\n          \"Entity\"\n        ],\n        \"description\": \"Returns an entity based on its ID\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully returns entity based on ID\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"int_field, string_field, bool_field, enum_field, string_array_field\"\n                  ],\n                  \"properties\": {\n                    \"int_field\": {\n                      \"type\": \"integer\"\n                    },\n                    \"string_field\": {\n                      \"type\": \"string\"\n                    },\n                    \"string_array_field\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"enum_field\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"A\",\n                        \"B\",\n                        \"C\",\n                        \"D\"\n                      ]\n                    },\n                    \"bool_field\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"file_name\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"500\": {\n            \"description\": \"Invalid ID\"\n          }\n        }\n      },\n      \"put\": {\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"The entity ID\"\n          }\n        ],\n        \"tags\": [\n          \"Entity\"\n        ],\n        \"description\": \"Edit an entity based on its ID\",\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"int_field, string_field, bool_field, enum_field, string_array_field\"\n                ],\n                \"properties\": {\n                  \"int_field\": {\n                    \"type\": \"integer\"\n                  },\n                  \"string_field\": {\n                    \"type\": \"string\"\n                  },\n                  \"string_array_field\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"enum_field\": {\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"A\",\n                      \"B\",\n                      \"C\",\n                      \"D\"\n                    ]\n                  },\n                  \"bool_field\": {\n                    \"type\": \"boolean\"\n                  }\n                }\n              }\n            },\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"body\": {\n                    \"type\": \"string\"\n                  },\n                  \"file\": {\n                    \"type\": \"string\",\n                    \"format\": \"binary\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully edited entity based on ID\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"500\": {\n            \"description\": \"Invalid request\"\n          }\n        }\n      },\n      \"delete\": {\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"The entity ID\"\n          }\n        ],\n        \"tags\": [\n          \"Entity\"\n        ],\n        \"description\": \"Delete an entity based on its ID\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully deleted entity based on ID\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"500\": {\n            \"description\": \"Invalid ID\"\n          }\n        }\n      }\n    },\n    \"/entities/files/{file_name}\": {\n      \"get\": {\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"file_name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"The name of the file (UUID) associated with an entity\"\n          }\n        ],\n        \"tags\": [\n          \"Entity\"\n        ],\n        \"description\": \"Returns a signed URL to the file associated with an entity\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully returns the signed URL of the file\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"file_url\"\n                  ],\n                  \"properties\": {\n                    \"file_url\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"500\": {\n            \"description\": \"Invalid ID\"\n          }\n        }\n      }\n    },\n    \"/auth/login\": {\n      \"post\": {\n        \"tags\": [\n          \"Auth\"\n        ],\n        \"description\": \"Login user. Supply either both email and password, or an Google OAuth id_token.\",\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"oneOf\": [\n                  { \"$ref\": \"#/components/schemas/PasswordLogin\" },\n                  { \"$ref\": \"#/components/schemas/OAuthLogin\" }\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns access token in response body and sets refreshToken as an httpOnly cookie\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"access_token\": {\n                      \"type\": \"string\"\n                    },\n                    \"id\": {\n                      \"type\": \"string\"\n                    },\n                    \"first_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"last_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\"\n                    },\n                    \"role\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Invalid request\"\n          }\n        }\n      }\n    },\n    \"/auth/register\": {\n      \"post\": {\n        \"tags\": [\n          \"Auth\"\n        ],\n        \"description\": \"Register a new user\",\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"email\", \"password\", \"first_name\", \"last_name\"\n                ],\n                \"properties\": {\n                  \"email\": {\n                    \"type\": \"string\"\n                  },\n                  \"password\": {\n                    \"type\": \"string\"\n                  },\n                  \"first_name\": {\n                    \"type\": \"string\"\n                  },\n                  \"last_name\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns access token in response body and sets refreshToken as an httpOnly cookie\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"access_token\": {\n                      \"type\": \"string\"\n                    },\n                    \"id\": {\n                      \"type\": \"string\"\n                    },\n                    \"first_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"last_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\"\n                    },\n                    \"role\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Invalid request\"\n          }\n        }\n      }\n    },\n    \"/auth/refresh\": {\n      \"post\": {\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"tags\": [\n          \"Auth\"\n        ],\n        \"description\": \"Refresh auth credentials\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns access token in response body and sets refreshToken as an httpOnly cookie\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"access_token\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"500\": {\n            \"description\": \"Invalid request\"\n          }\n        }\n      }\n    },\n    \"/auth/logout/{userid}\": {\n      \"post\": {\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userid\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"The user ID\"\n          }\n        ],\n        \"tags\": [\n          \"Auth\"\n        ],\n        \"description\": \"Logout as user\",\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Revokes all of the specified user's refresh tokens\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"500\": {\n            \"description\": \"Invalid request\"\n          }\n        }\n      }\n    },\n    \"/auth/resetPassword/{email}\": {\n      \"post\": {\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"email\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"tags\": [\n          \"Auth\"\n        ],\n        \"description\": \"Triggers password reset for user with specified email (reset link will be emailed)\",\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Successfully sent password reset email\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"500\": {\n            \"description\": \"Invalid request\"\n          }\n        }\n      }\n    },\n    \"/users\": {\n      \"get\": {\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"user_id\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"The user ID\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"email\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"The user's email\"\n          }\n        ],\n        \"tags\": [\n          \"User\"\n        ],\n        \"description\": \"Get all users, optionally filter by a user_id or email query parameter to retrieve a single user\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully returned a list of users, or a user filtered by id or email\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"required\": [\n                      \"id, first_name, last_name, email, role\"\n                    ],\n                    \"properties\": {\n                      \"id\": {\n                        \"type\": \"string\"\n                      },\n                      \"first_name\": {\n                        \"type\": \"string\"\n                      },\n                      \"last_name\": {\n                        \"type\": \"string\"\n                      },\n                      \"email\": {\n                        \"type\": \"string\"\n                      },\n                      \"role\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Cannot query by both user and email\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"500\": {\n            \"description\": \"Invalid request\"\n          }\n        }\n      },\n      \"post\": {\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"tags\": [\n          \"User\"\n        ],\n        \"description\": \"Create new user\",\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"first_name, last_name, role, email\"\n                ],\n                \"properties\": {\n                  \"first_name\": {\n                    \"type\": \"string\"\n                  },\n                  \"last_name\": {\n                    \"type\": \"string\"\n                  },\n                  \"role\": {\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"User\",\n                      \"Admin\"\n                    ]\n                  },\n                  \"email\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Successfully created a new user\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"id, first_name, last_name, email, role\"\n                  ],\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    },\n                    \"first_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"last_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\"\n                    },\n                    \"role\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"500\": {\n            \"description\": \"Invalid request\"\n          }\n        }\n      },\n      \"delete\": {\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"user_id\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"The user ID\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"email\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"The user's email\"\n          }\n        ],\n        \"tags\": [\n          \"User\"\n        ],\n        \"description\": \"Deletes a user by user_id or email, specified through a query parameter\",\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Succesfully deleted user\"\n          },\n          \"400\": {\n            \"description\": \"Cannot query by both user_id and email, invalid user_id or email, user_id or email is not a string, user_id or email not supplied\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"500\": {\n            \"description\": \"Invalid request\"\n          }\n        }\n      }\n    },\n    \"/users/{user_id}\": {\n      \"put\": {\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"user_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"The user ID\"\n          }\n        ],\n        \"tags\": [\n          \"User\"\n        ],\n        \"description\": \"Update the user with the specified user_id\",\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"first_name, last_name, role, email\"\n                ],\n                \"properties\": {\n                  \"first_name\": {\n                    \"type\": \"string\"\n                  },\n                  \"last_name\": {\n                    \"type\": \"string\"\n                  },\n                  \"role\": {\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"User\",\n                      \"Admin\"\n                    ]\n                  },\n                  \"email\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully updated user\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"id, first_name, last_name, email, role\"\n                  ],\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    },\n                    \"first_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"last_name\": {\n                      \"type\": \"string\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\"\n                    },\n                    \"role\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"500\": {\n            \"description\": \"Invalid request\"\n          }\n        }\n      }\n    }\n  }\n}"
		}
	},
	"Error": "panic: runtime error: index out of range [0] with length 0"
}