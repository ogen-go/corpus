{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/readmeio/api-explorer"
		},
		"file": {
			"name": "discriminators.json",
			"path": "example/swagger-files/discriminators.json",
			"content": "{\n    \"openapi\": \"3.0.0\",\n    \"servers\": [\n      {\n        \"url\": \"https://httpbin.org\"\n      }\n    ],\n    \"info\": {\n      \"version\": \"1.0.0\",\n      \"title\": \"polymorphism support\"\n    },\n    \"paths\": {\n      \"/oneOfWithTopLevelDiscriminatorAndMapping\": {\n        \"patch\": {\n          \"summary\": \"oneOf with top level discriminator and mapping\",\n          \"requestBody\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"oneOf\": [\n                    {\n                      \"$ref\": \"#/components/schemas/OptionOneNoDisc\"\n                    },\n                    {\n                      \"$ref\": \"#/components/schemas/OptionTwoNoDisc\"\n                    }\n                  ],\n                  \"discriminator\": {\n                    \"propertyName\": \"discrim\",\n                    \"mapping\": {\n                      \"Option One\": \"#/components/schemas/OptionOneNoDisc\",\n                      \"Option Two\": \"#/components/schemas/OptionTwoNoDisc\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Updated\"\n            }\n          }\n        }\n      },\n      \"/oneOfWithTopLevelDiscriminatorNoMapping\": {\n        \"patch\": {\n          \"summary\": \"oneOf with top level discriminator and NO mapping\",\n          \"requestBody\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"oneOf\": [\n                    {\n                      \"$ref\": \"#/components/schemas/OptionOneNoDisc\"\n                    },\n                    {\n                      \"$ref\": \"#/components/schemas/OptionTwoNoDisc\"\n                    }\n                  ],\n                  \"discriminator\": {\n                    \"propertyName\": \"discrim\"\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Updated\"\n            }\n          }\n        }\n      },\n      \"/pets\": {\n        \"patch\": {\n          \"summary\": \"oneOf request with a nested allOf and embedded discriminator\",\n          \"requestBody\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"oneOf\": [\n                    {\n                      \"$ref\": \"#/components/schemas/Cat\"\n                    },\n                    {\n                      \"$ref\": \"#/components/schemas/Dog\"\n                    }\n                  ]\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Updated\"\n            }\n          }\n        }\n      },\n      \"/oneof-allof-top level disc\": {\n        \"patch\": {\n          \"summary\": \"oneOf request with a nested allOf and top level discriminator\",\n          \"requestBody\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"oneOf\": [\n                    {\n                      \"$ref\": \"#/components/schemas/CatNoDisc\"\n                    },\n                    {\n                      \"$ref\": \"#/components/schemas/DogNoDisc\"\n                    }\n                  ],\n                  \"discriminator\": {\n                    \"propertyName\": \"pet_type\"\n                  }\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"Updated\"\n            }\n          }\n        }\n      },\n      \"/anything/nested-one-of-object-with-nested-one-of\": {\n        \"post\": {\n          \"summary\": \"oneOf request with a nested oneOf, and embedded discriminator\",\n          \"requestBody\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"config\": {\n                      \"oneOf\": [\n                        {\n                          \"$ref\": \"#/components/schemas/object1\"\n                        },\n                        {\n                          \"$ref\": \"#/components/schemas/object2\"\n                        },\n                        {\n                          \"oneOf\": [\n                            {\n                              \"$ref\": \"#/components/schemas/Cat\"\n                            },\n                            {\n                              \"$ref\": \"#/components/schemas/Dog\"\n                            }\n                          ]\n                        }\n                      ]\n                    }\n                  },\n                  \"additionalProperties\": false\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"OK\"\n            }\n          }\n        }\n      }\n    },\n    \"components\": {\n      \"requestBodies\": {\n        \"nested-one-of-ref\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"config\": {\n                    \"oneOf\": [\n                      {\n                        \"$ref\": \"#/components/schemas/string1\"\n                      },\n                      {\n                        \"$ref\": \"#/components/schemas/string2\"\n                      }\n                    ]\n                  }\n                },\n                \"additionalProperties\": false\n              }\n            }\n          }\n        }\n      },\n      \"schemas\": {\n        \"OptionOneNoDisc\": {\n          \"type\": \"object\",\n          \"required\": [\n              \"discrim\"\n          ],\n          \"properties\": {\n              \"discrim\": {\n                \"type\": \"string\"\n              },\n              \"optionone\": {\n                \"type\": \"number\"\n              }\n          }\n        },\n        \"OptionTwoNoDisc\": {\n          \"type\": \"object\",\n          \"required\": [\n              \"discrim\"\n          ],\n          \"properties\": {\n              \"discrim\": {\n                \"type\": \"string\"\n              },\n              \"optiontwo\": {\n                \"type\": \"string\"\n              }\n          }\n        },\n        \"Pet\": {\n          \"type\": \"object\",\n          \"required\": [\n            \"pet_type\"\n          ],\n          \"properties\": {\n            \"pet_type\": {\n              \"type\": \"string\"\n            }\n          },\n          \"discriminator\": {\n            \"propertyName\": \"pet_type\"\n          }\n        },\n        \"Dog\": {\n          \"title\": \"Woof\",\n          \"allOf\": [\n            {\n              \"$ref\": \"#/components/schemas/Pet\"\n            },\n            {\n              \"type\": \"object\",\n              \"properties\": {\n                \"bark\": {\n                  \"type\": \"boolean\"\n                },\n                \"breed\": {\n                  \"type\": \"string\",\n                  \"enum\": [\"Dingo\", \"Husky\", \"Retriever\", \"Shepherd\"]\n                }\n              }\n            }\n          ]\n        },\n        \"Cat\": {\n          \"title\": \"Meow\",\n          \"type\": \"object\",\n          \"allOf\": [\n            {\n              \"$ref\": \"#/components/schemas/Pet\"\n            },\n            {\n              \"type\": \"object\",\n              \"properties\": {\n                \"hunts\": {\n                  \"type\": \"boolean\"\n                },\n                \"age\": {\n                  \"type\": \"integer\"\n                }\n              }\n            }\n          ]\n        },\n        \"object1\": {\n          \"title\": \"First type of object\",\n          \"type\": \"object\",\n          \"properties\": {\n            \"a\": {\n              \"type\": \"string\"\n            },\n            \"b\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"object2\": {\n          \"title\": \"Second type of object\",\n          \"type\": \"object\",\n          \"properties\": {\n            \"c\": {\n              \"type\": \"string\"\n            },\n            \"d\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"string1\": {\n          \"type\": \"string\"\n        },\n        \"string2\": {\n          \"type\": \"string\"\n        },\n        \"PetNoDisc\": {\n          \"type\": \"object\",\n          \"required\": [\n            \"pet_type\"\n          ],\n          \"properties\": {\n            \"pet_type\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"DogNoDisc\": {\n          \"title\": \"Woof\",\n          \"allOf\": [\n            {\n              \"$ref\": \"#/components/schemas/PetNoDisc\"\n            },\n            {\n              \"type\": \"object\",\n              \"properties\": {\n                \"bark\": {\n                  \"type\": \"boolean\"\n                },\n                \"breed\": {\n                  \"type\": \"string\",\n                  \"enum\": [\"Dingo\", \"Husky\", \"Retriever\", \"Shepherd\"]\n                }\n              }\n            }\n          ]\n        },\n        \"CatNoDisc\": {\n          \"title\": \"Meow\",\n          \"type\": \"object\",\n          \"allOf\": [\n            {\n              \"$ref\": \"#/components/schemas/PetNoDisc\"\n            },\n            {\n              \"type\": \"object\",\n              \"properties\": {\n                \"hunts\": {\n                  \"type\": \"boolean\"\n                },\n                \"age\": {\n                  \"type\": \"integer\"\n                }\n              }\n            }\n          ]\n        }\n      }\n    }\n  }\n"
		}
	},
	"Error": "panic: runtime error: index out of range [0] with length 0"
}