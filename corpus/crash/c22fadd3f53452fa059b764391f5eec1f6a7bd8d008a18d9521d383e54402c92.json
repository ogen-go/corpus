{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/apideck-libraries/portman"
		},
		"file": {
			"name": "crm-fuzzing.yml",
			"size": 0,
			"path": "__tests__/fixtures/crm-fuzzing.yml",
			"byteSize": 129518,
			"content": "openapi: 3.0.3\ninfo:\n  version: 4.1.0\n  title: CRM API\n  description: \"Welcome to the CRM API.\"\n  contact:\n    email: hello@apideck.com\n    url: 'https://developers.apideck.com'\n  x-logo:\n    url: 'https://developers.apideck.com/icon.png'\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\nexternalDocs:\n  description: Apideck Developer Docs\n  url: 'https://developers.apideck.com'\nservers:\n  - url: 'https://unify.apideck.com'\n    description: Production\nsecurity:\n  - apiKey: []\n    applicationId: []\n    consumerId: []\ntags:\n  - name: Companies\n    description: ''\n  - name: Opportunities\n    description: ''\n  - name: Leads\n    description: ''\n  - name: Contacts\n    description: ''\n  - name: Pipelines\n    description: ''\n  - name: Notes\n    description: ''\n  - name: Users\n    description: ''\n  - name: Activities\n    description: ''\ncomponents:\n  schemas:\n    Activity:\n      type: object\n      additionalProperties: false\n      required:\n        - type\n      properties:\n        id:\n          type: string\n          readOnly: true\n          example: '12345'\n        activity_datetime:\n          type: string\n          example: '2021-05-01T12:00:00.000Z'\n          minLength: 1\n          nullable: true\n        duration_seconds:\n          type: integer\n          example: 1800\n          minimum: 0\n          nullable: true\n        account_id:\n          type: string\n          example: '12345'\n          nullable: true\n        contact_id:\n          type: string\n          example: '12345'\n          nullable: true\n        company_id:\n          type: string\n          example: '12345'\n          nullable: true\n        opportunity_id:\n          type: string\n          example: '12345'\n          nullable: true\n        lead_id:\n          type: string\n          example: '12345'\n          nullable: true\n        owner_id:\n          type: string\n          example: '12345'\n          nullable: true\n        campaign_id:\n          type: string\n          example: '12345'\n          nullable: true\n        case_id:\n          type: string\n          example: '12345'\n          nullable: true\n        asset_id:\n          type: string\n          example: '12345'\n          nullable: true\n        contract_id:\n          type: string\n          example: '12345'\n          nullable: true\n        product_id:\n          type: string\n          example: '12345'\n          nullable: true\n        solution_id:\n          type: string\n          example: '12345'\n          nullable: true\n        custom_object_id:\n          type: string\n          example: '12345'\n          nullable: true\n        type:\n          type: string\n          enum:\n            - call\n            - meeting\n            - email\n            - note\n            - task\n            - send-letter\n            - send-quote\n            - other\n          example: meeting\n        title:\n          type: string\n          example: Meeting\n          nullable: true\n        description:\n          type: string\n          example: More info about the meeting\n          nullable: true\n        location:\n          type: string\n          example: Space\n          nullable: true\n        all_day_event:\n          type: boolean\n          example: false\n        private:\n          type: boolean\n          example: true\n        group_event:\n          type: boolean\n          example: true\n        event_sub_type:\n          type: string\n          example: debrief\n          nullable: true\n        group_event_type:\n          type: string\n          example: Proposed\n          nullable: true\n        child:\n          type: boolean\n          example: false\n        archived:\n          type: boolean\n          example: false\n        deleted:\n          type: boolean\n          example: false\n        show_as:\n          type: string\n          enum:\n            - free\n            - busy\n          example: busy\n        activity_date:\n          type: string\n          example: '2021-05-01'\n          nullable: true\n        duration_minutes:\n          type: integer\n          example: 30\n          nullable: true\n        start_datetime:\n          type: string\n          example: '2021-05-01T12:00:00.000Z'\n          nullable: true\n        end_datetime:\n          type: string\n          example: '2021-05-01T12:30:00.000Z'\n          nullable: true\n        end_date:\n          type: string\n          example: '2021-05-01'\n          nullable: true\n        recurrent:\n          type: boolean\n          example: false\n        reminder_datetime:\n          type: string\n          example: '2021-05-01T17:00:00.000Z'\n          nullable: true\n        reminder_set:\n          type: boolean\n          example: false\n          nullable: true\n        custom_fields:\n          type: array\n          items:\n            $ref: '#/components/schemas/CustomField'\n        updated_by:\n          type: string\n          example: '12345'\n          readOnly: true\n          nullable: true\n        created_by:\n          type: string\n          example: '12345'\n          readOnly: true\n          nullable: true\n        updated_at:\n          type: string\n          example: '2020-09-30T07:43:32.000Z'\n          readOnly: true\n        created_at:\n          type: string\n          example: '2020-09-30T07:43:32.000Z'\n          readOnly: true\n    Address:\n      type: object\n      properties:\n        id:\n          type: string\n          example: '123'\n          nullable: true\n        type:\n          type: string\n          x-graphql-type-name: AddressType\n          enum:\n            - primary\n            - secondary\n            - home\n            - office\n            - shipping\n            - billing\n            - other\n          example: primary\n        name:\n          type: string\n          example: HQ US\n          nullable: true\n        line1:\n          type: string\n          example: Main street\n          description: 'Line 1 of the address e.g. number, street, suite, apt #, etc.'\n          nullable: true\n        line2:\n          type: string\n          example: 'apt #'\n          description: Line 2 of the address\n          nullable: true\n        city:\n          type: string\n          example: San Francisco\n          description: Name of city.\n          nullable: true\n        state:\n          type: string\n          example: CA\n          description: Name of state\n          nullable: true\n        postal_code:\n          type: string\n          example: '94104'\n          description: Zip code or equivalent.\n          nullable: true\n        country:\n          type: string\n          example: US\n          description: country code according to ISO 3166-1 alpha-2.\n          nullable: true\n        latitude:\n          type: string\n          example: '40.759211'\n          nullable: true\n        longitude:\n          type: string\n          example: '-73.984638'\n          nullable: true\n    BadRequest:\n      properties:\n        status_code:\n          type: number\n          description: HTTP status code\n          example: 400\n        error:\n          type: string\n          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)\n          example: Bad Request\n        typeName:\n          type: string\n          description: The type of error returned\n          example: RequestHeadersValidationError\n        message:\n          type: string\n          description: A human-readable message providing more details about the error.\n          example: Invalid Params\n        detail:\n          anyOf:\n            - type: string\n              example: Missing property foobar\n            - type: object\n              example:\n                missing:\n                  - - foobar: required\n          description: Contains parameter or domain specific information related to the error and why it occured.\n        ref:\n          type: string\n          description: Link to documentation of error type\n          example: 'https://developers.apideck.com/errors#requestbodyvalidationerror'\n    BankAccount:\n      type: object\n      properties:\n        iban:\n          type: string\n          example: CH2989144532982975332\n          nullable: true\n        bic:\n          type: string\n          example: AUDSCHGGXXX\n          nullable: true\n    CompaniesFilter:\n      type: object\n      x-graphql-type-name: CompaniesFilter\n      example:\n        name: SpaceX\n      properties:\n        name:\n          type: string\n          description: Name of the company to filter on\n          example: SpaceX\n      additionalProperties: false\n    CompaniesSort:\n      type: object\n      x-graphql-type-name: CompaniesSort\n      example:\n        by: created_at\n        direction: desc\n      properties:\n        by:\n          type: string\n          description: The field on which to sort the Companies\n          enum:\n            - created_at\n            - updated_at\n            - name\n          example: created_at\n        direction:\n          type: string\n          description: The direction in which to sort the Companies\n          enum:\n            - asc\n            - desc\n          default: asc\n      required:\n        - by\n      additionalProperties: false\n    Company:\n      type: object\n      required:\n        - name\n      additionalProperties: false\n      properties:\n        id:\n          type: string\n          readOnly: true\n          example: '12345'\n        name:\n          type: string\n          example: Copper\n          minLength: 1\n        interaction_count:\n          type: integer\n          example: 1\n          readOnly: true\n          nullable: true\n        owner_id:\n          type: string\n          example: '12345'\n        image_url:\n          type: string\n          example: 'https://www.spacex.com/static/images/share.jpg'\n          nullable: true\n        description:\n          type: string\n          example: 'A crm that works for you, so you can spend time on relationships instead of data.'\n          nullable: true\n        vat_number:\n          description: VAT number\n          type: string\n          example: BE0689615164\n          nullable: true\n        currency:\n          type: string\n          example: USD\n          nullable: true\n        status:\n          type: string\n          minLength: 1\n          example: Open\n          nullable: true\n        fax:\n          type: string\n          example: '+12129876543'\n          nullable: true\n        bank_accounts:\n          type: array\n          items:\n            $ref: '#/components/schemas/BankAccount'\n        websites:\n          type: array\n          items:\n            $ref: '#/components/schemas/Website'\n        addresses:\n          type: array\n          items:\n            $ref: '#/components/schemas/Address'\n        social_links:\n          type: array\n          items:\n            $ref: '#/components/schemas/SocialLink'\n        phone_numbers:\n          type: array\n          items:\n            $ref: '#/components/schemas/PhoneNumber'\n        emails:\n          type: array\n          items:\n            $ref: '#/components/schemas/Email'\n        custom_fields:\n          type: array\n          items:\n            $ref: '#/components/schemas/CustomField'\n        tags:\n          $ref: '#/components/schemas/Tags'\n        updated_by:\n          type: string\n          example: '12345'\n          readOnly: true\n          nullable: true\n        created_by:\n          type: string\n          example: '12345'\n          readOnly: true\n          nullable: true\n        updated_at:\n          type: string\n          example: '2020-09-30T07:43:32.000Z'\n          readOnly: true\n        created_at:\n          type: string\n          example: '2020-09-30T07:43:32.000Z'\n          readOnly: true\n    Contact:\n      required:\n        - name\n      x-pii:\n        - name\n        - first_name\n        - middle_name\n        - last_name\n        - email\n      properties:\n        id:\n          type: string\n          example: '12345'\n          readOnly: true\n        name:\n          type: string\n          example: Elon Musk\n          minLength: 1\n        owner_id:\n          type: string\n          example: '54321'\n          nullable: true\n        company_id:\n          type: string\n          example: '23456'\n          nullable: true\n        company_name:\n          type: string\n          example: '23456'\n          nullable: true\n        lead_id:\n          type: string\n          example: '34567'\n          nullable: true\n        first_name:\n          type: string\n          example: Elon\n          nullable: true\n        middle_name:\n          type: string\n          example: D.\n          nullable: true\n        last_name:\n          type: string\n          example: Musk\n          nullable: true\n        prefix:\n          type: string\n          example: Mr.\n          nullable: true\n        suffix:\n          type: string\n          example: PhD\n          nullable: true\n        title:\n          type: string\n          example: CEO\n          nullable: true\n        department:\n          type: string\n          example: Engineering\n          nullable: true\n        language:\n          type: string\n          example: EN\n          description: language code according to ISO 639-1. For the United States - EN\n          nullable: true\n        gender:\n          type: string\n          enum:\n            - male\n            - female\n            - unisex\n          example: female\n          nullable: true\n        birthday:\n          type: string\n          example: '2000-08-12'\n          nullable: true\n        image:\n          type: string\n          example: 'https://logo.clearbit.com/spacex.com?s=128'\n          nullable: true\n        lead_source:\n          type: string\n          minLength: 1\n          example: Cold Call\n          nullable: true\n        fax:\n          type: string\n          example: '+12129876543'\n          nullable: true\n        description:\n          type: string\n          example: Internal champion\n          nullable: true\n        status:\n          type: string\n          example: open\n          nullable: true\n        websites:\n          type: array\n          items:\n            $ref: '#/components/schemas/Website'\n        addresses:\n          type: array\n          items:\n            $ref: '#/components/schemas/Address'\n        social_links:\n          type: array\n          items:\n            $ref: '#/components/schemas/SocialLink'\n        phone_numbers:\n          type: array\n          items:\n            $ref: '#/components/schemas/PhoneNumber'\n        emails:\n          type: array\n          items:\n            $ref: '#/components/schemas/Email'\n        custom_fields:\n          type: array\n          items:\n            $ref: '#/components/schemas/CustomField'\n        tags:\n          $ref: '#/components/schemas/Tags'\n        updated_at:\n          type: string\n          example: '2017-08-12T20:43:21.291Z'\n          readOnly: true\n        created_at:\n          type: string\n          example: '2017-08-12T20:43:21.291Z'\n          readOnly: true\n      additionalProperties: false\n    ContactsFilter:\n      type: object\n      x-graphql-type-name: ContactsFilter\n      example:\n        first_name: Elon\n        last_name: Musk\n        email: elon@tesla.com\n      properties:\n        name:\n          type: string\n          description: Name of the contact to filter on\n          example: Elon Musk\n        first_name:\n          type: string\n          description: First name of the contact to filter on\n          example: Elon\n        last_name:\n          type: string\n          description: Last name of the contact to filter on\n          example: Musk\n        email:\n          type: string\n          description: E-mail of the contact to filter on\n          example: elon@tesla.com\n      additionalProperties: false\n    ContactsSort:\n      type: object\n      x-graphql-type-name: ContactsSort\n      example:\n        by: created_at\n        direction: desc\n      properties:\n        by:\n          type: string\n          description: The field on which to sort the Contacts\n          enum:\n            - created_at\n            - updated_at\n            - name\n            - first_name\n            - last_name\n            - email\n          example: created_at\n        direction:\n          type: string\n          description: The direction in which to sort the Contacts\n          enum:\n            - asc\n            - desc\n          default: asc\n      required:\n        - by\n      additionalProperties: false\n    CreateActivityResponse:\n      type: object\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      properties:\n        status_code:\n          type: integer\n          description: HTTP Response Status Code\n          example: 200\n        status:\n          type: string\n          description: HTTP Response Status\n          example: OK\n        service:\n          type: string\n          description: Apideck ID of service provider\n          example: zoho-crm\n        resource:\n          type: string\n          description: Unified API resource name\n          example: activities\n        operation:\n          type: string\n          description: Operation performed\n          example: one\n        data:\n          $ref: '#/components/schemas/UnifiedId'\n    CreateCompanyResponse:\n      type: object\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      properties:\n        status_code:\n          type: integer\n          description: HTTP Response Status Code\n          example: 200\n        status:\n          type: string\n          description: HTTP Response Status\n          example: OK\n        service:\n          type: string\n          description: Apideck ID of service provider\n          example: zoho-crm\n        resource:\n          type: string\n          description: Unified API resource name\n          example: companies\n        operation:\n          type: string\n          description: Operation performed\n          example: one\n        data:\n          $ref: '#/components/schemas/UnifiedId'\n    CreateContactResponse:\n      type: object\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      properties:\n        status_code:\n          type: integer\n          description: HTTP Response Status Code\n          example: 200\n        status:\n          type: string\n          description: HTTP Response Status\n          example: OK\n        service:\n          type: string\n          description: Apideck ID of service provider\n          example: zoho-crm\n        resource:\n          type: string\n          description: Unified API resource name\n          example: companies\n        operation:\n          type: string\n          description: Operation performed\n          example: one\n        data:\n          $ref: '#/components/schemas/UnifiedId'\n    CreateLeadResponse:\n      type: object\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      properties:\n        status_code:\n          type: integer\n          description: HTTP Response Status Code\n          example: 200\n        status:\n          type: string\n          description: HTTP Response Status\n          example: OK\n        service:\n          type: string\n          description: Apideck ID of service provider\n          example: zoho-crm\n        resource:\n          type: string\n          description: Unified API resource name\n          example: companies\n        operation:\n          type: string\n          description: Operation performed\n          example: one\n        data:\n          $ref: '#/components/schemas/UnifiedId'\n    CreateNoteResponse:\n      type: object\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      properties:\n        status_code:\n          type: integer\n          description: HTTP Response Status Code\n          example: 200\n        status:\n          type: string\n          description: HTTP Response Status\n          example: OK\n        service:\n          type: string\n          description: Apideck ID of service provider\n          example: zoho-crm\n        resource:\n          type: string\n          description: Unified API resource name\n          example: notes\n        operation:\n          type: string\n          description: Operation performed\n          example: one\n        data:\n          $ref: '#/components/schemas/UnifiedId'\n    CreateOpportunityResponse:\n      type: object\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      properties:\n        status_code:\n          type: integer\n          description: HTTP Response Status Code\n          example: 200\n        status:\n          type: string\n          description: HTTP Response Status\n          example: OK\n        service:\n          type: string\n          description: Apideck ID of service provider\n          example: zoho-crm\n        resource:\n          type: string\n          description: Unified API resource name\n          example: opportunities\n        operation:\n          type: string\n          description: Operation performed\n          example: one\n        data:\n          $ref: '#/components/schemas/UnifiedId'\n    CreatePipelineResponse:\n      type: object\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      properties:\n        status_code:\n          type: integer\n          description: HTTP Response Status Code\n          example: 200\n        status:\n          type: string\n          description: HTTP Response Status\n          example: OK\n        service:\n          type: string\n          description: Apideck ID of service provider\n          example: zoho-crm\n        resource:\n          type: string\n          description: Unified API resource name\n          example: pipelines\n        operation:\n          type: string\n          description: Operation performed\n          example: one\n        data:\n          $ref: '#/components/schemas/UnifiedId'\n    CreateUserResponse:\n      type: object\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      properties:\n        status_code:\n          type: integer\n          description: HTTP Response Status Code\n          example: 200\n        status:\n          type: string\n          description: HTTP Response Status\n          example: OK\n        service:\n          type: string\n          description: Apideck ID of service provider\n          example: zoho-crm\n        resource:\n          type: string\n          description: Unified API resource name\n          example: users\n        operation:\n          type: string\n          description: Operation performed\n          example: one\n        data:\n          $ref: '#/components/schemas/UnifiedId'\n    CustomField:\n      type: object\n      required:\n        - id\n      additionalProperties: false\n      properties:\n        id:\n          type: string\n          example: custom_technologies\n        value:\n          anyOf:\n            - type: string\n              example: Uses Salesforce and Marketo\n              nullable: true\n            - type: number\n              example: 10\n              nullable: true\n            - type: boolean\n              example: true\n              nullable: true\n            - type: array\n              items:\n                type: string\n    DeleteActivityResponse:\n      type: object\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      properties:\n        status_code:\n          type: integer\n          description: HTTP Response Status Code\n          example: 200\n        status:\n          type: string\n          description: HTTP Response Status\n          example: OK\n        service:\n          type: string\n          description: Apideck ID of service provider\n          example: zoho-crm\n        resource:\n          type: string\n          description: Unified API resource name\n          example: activities\n        operation:\n          type: string\n          description: Operation performed\n          example: one\n        data:\n          $ref: '#/components/schemas/UnifiedId'\n    DeleteCompanyResponse:\n      type: object\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      properties:\n        status_code:\n          type: integer\n          description: HTTP Response Status Code\n          example: 200\n        status:\n          type: string\n          description: HTTP Response Status\n          example: OK\n        service:\n          type: string\n          description: Apideck ID of service provider\n          example: zoho-crm\n        resource:\n          type: string\n          description: Unified API resource name\n          example: companies\n        operation:\n          type: string\n          description: Operation performed\n          example: one\n        data:\n          $ref: '#/components/schemas/UnifiedId'\n    DeleteContactResponse:\n      type: object\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      properties:\n        status_code:\n          type: integer\n          description: HTTP Response Status Code\n          example: 200\n        status:\n          type: string\n          description: HTTP Response Status\n          example: OK\n        service:\n          type: string\n          description: Apideck ID of service provider\n          example: zoho-crm\n        resource:\n          type: string\n          description: Unified API resource name\n          example: companies\n        operation:\n          type: string\n          description: Operation performed\n          example: one\n        data:\n          $ref: '#/components/schemas/UnifiedId'\n    DeleteLeadResponse:\n      type: object\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      properties:\n        status_code:\n          type: integer\n          description: HTTP Response Status Code\n          example: 200\n        status:\n          type: string\n          description: HTTP Response Status\n          example: OK\n        service:\n          type: string\n          description: Apideck ID of service provider\n          example: zoho-crm\n        resource:\n          type: string\n          description: Unified API resource name\n          example: companies\n        operation:\n          type: string\n          description: Operation performed\n          example: one\n        data:\n          $ref: '#/components/schemas/UnifiedId'\n    DeleteNoteResponse:\n      type: object\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      properties:\n        status_code:\n          type: integer\n          description: HTTP Response Status Code\n          example: 200\n        status:\n          type: string\n          description: HTTP Response Status\n          example: OK\n        service:\n          type: string\n          description: Apideck ID of service provider\n          example: zoho-crm\n        resource:\n          type: string\n          description: Unified API resource name\n          example: notes\n        operation:\n          type: string\n          description: Operation performed\n          example: one\n        data:\n          $ref: '#/components/schemas/UnifiedId'\n    DeleteOpportunityResponse:\n      type: object\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      properties:\n        status_code:\n          type: integer\n          description: HTTP Response Status Code\n          example: 200\n        status:\n          type: string\n          description: HTTP Response Status\n          example: OK\n        service:\n          type: string\n          description: Apideck ID of service provider\n          example: zoho-crm\n        resource:\n          type: string\n          description: Unified API resource name\n          example: companies\n        operation:\n          type: string\n          description: Operation performed\n          example: one\n        data:\n          $ref: '#/components/schemas/UnifiedId'\n    DeletePipelineResponse:\n      type: object\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      properties:\n        status_code:\n          type: integer\n          description: HTTP Response Status Code\n          example: 200\n        status:\n          type: string\n          description: HTTP Response Status\n          example: OK\n        service:\n          type: string\n          description: Apideck ID of service provider\n          example: zoho-crm\n        resource:\n          type: string\n          description: Unified API resource name\n          example: companies\n        operation:\n          type: string\n          description: Operation performed\n          example: one\n        data:\n          $ref: '#/components/schemas/UnifiedId'\n    DeleteUserResponse:\n      type: object\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      properties:\n        status_code:\n          type: integer\n          description: HTTP Response Status Code\n          example: 200\n        status:\n          type: string\n          description: HTTP Response Status\n          example: OK\n        service:\n          type: string\n          description: Apideck ID of service provider\n          example: zoho-crm\n        resource:\n          type: string\n          description: Unified API resource name\n          example: users\n        operation:\n          type: string\n          description: Operation performed\n          example: one\n        data:\n          $ref: '#/components/schemas/UnifiedId'\n    Email:\n      required:\n        - email\n      type: object\n      properties:\n        id:\n          type: string\n          example: '123'\n        email:\n          type: string\n          format: email\n          example: elon@musk.com\n          minLength: 1\n        type:\n          type: string\n          x-graphql-type-name: EmailType\n          enum:\n            - primary\n            - secondary\n            - work\n            - personal\n            - billing\n            - other\n          example: primary\n    GetActivitiesResponse:\n      x-graphql-type-name: ActivityList\n      type: object\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      properties:\n        status_code:\n          type: integer\n          description: HTTP Response Status Code\n          example: 200\n        status:\n          type: string\n          description: HTTP Response Status\n          example: OK\n        service:\n          type: string\n          description: Apideck ID of service provider\n          example: zoho-crm\n        resource:\n          type: string\n          description: Unified API resource name\n          example: activities\n        operation:\n          type: string\n          description: Operation performed\n          example: one\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/Activity'\n        meta:\n          $ref: '#/components/schemas/Meta'\n        links:\n          $ref: '#/components/schemas/Links'\n    GetActivityResponse:\n      x-graphql-type-name: activity\n      type: object\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      properties:\n        status_code:\n          type: integer\n          description: HTTP Response Status Code\n          example: 200\n        status:\n          type: string\n          description: HTTP Response Status\n          example: OK\n        service:\n          type: string\n          description: Apideck ID of service provider\n          example: zoho-crm\n        resource:\n          type: string\n          description: Unified API resource name\n          example: activities\n        operation:\n          type: string\n          description: Operation performed\n          example: one\n        data:\n          $ref: '#/components/schemas/Activity'\n    GetCompaniesResponse:\n      x-graphql-type-name: CompanyList\n      type: object\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      properties:\n        status_code:\n          type: integer\n          description: HTTP Response Status Code\n          example: 200\n        status:\n          type: string\n          description: HTTP Response Status\n          example: OK\n        service:\n          type: string\n          description: Apideck ID of service provider\n          example: zoho-crm\n        resource:\n          type: string\n          description: Unified API resource name\n          example: companies\n        operation:\n          type: string\n          description: Operation performed\n          example: one\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/Company'\n        meta:\n          $ref: '#/components/schemas/Meta'\n        links:\n          $ref: '#/components/schemas/Links'\n    GetCompanyResponse:\n      x-graphql-type-name: company\n      type: object\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      properties:\n        status_code:\n          type: integer\n          description: HTTP Response Status Code\n          example: 200\n        status:\n          type: string\n          description: HTTP Response Status\n          example: OK\n        service:\n          type: string\n          description: Apideck ID of service provider\n          example: zoho-crm\n        resource:\n          type: string\n          description: Unified API resource name\n          example: companies\n        operation:\n          type: string\n          description: Operation performed\n          example: one\n        data:\n          $ref: '#/components/schemas/Company'\n    GetContactResponse:\n      type: object\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      properties:\n        status_code:\n          type: integer\n          description: HTTP Response Status Code\n          example: 200\n        status:\n          type: string\n          description: HTTP Response Status\n          example: OK\n        service:\n          type: string\n          description: Apideck ID of service provider\n          example: zoho-crm\n        resource:\n          type: string\n          description: Unified API resource name\n          example: companies\n        operation:\n          type: string\n          description: Operation performed\n          example: one\n        data:\n          $ref: '#/components/schemas/Contact'\n    GetContactsResponse:\n      x-graphql-type-name: ContactList\n      type: object\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      properties:\n        status_code:\n          type: integer\n          description: HTTP Response Status Code\n          example: 200\n        status:\n          type: string\n          description: HTTP Response Status\n          example: OK\n        service:\n          type: string\n          description: Apideck ID of service provider\n          example: zoho-crm\n        resource:\n          type: string\n          description: Unified API resource name\n          example: companies\n        operation:\n          type: string\n          description: Operation performed\n          example: one\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/Contact'\n        meta:\n          $ref: '#/components/schemas/Meta'\n        links:\n          $ref: '#/components/schemas/Links'\n    GetLeadResponse:\n      type: object\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      properties:\n        status_code:\n          type: integer\n          description: HTTP Response Status Code\n          example: 200\n        status:\n          type: string\n          description: HTTP Response Status\n          example: OK\n        service:\n          type: string\n          description: Apideck ID of service provider\n          example: zoho-crm\n        resource:\n          type: string\n          description: Unified API resource name\n          example: companies\n        operation:\n          type: string\n          description: Operation performed\n          example: one\n        data:\n          $ref: '#/components/schemas/Lead'\n    GetLeadsResponse:\n      x-graphql-type-name: LeadList\n      type: object\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      properties:\n        status_code:\n          type: integer\n          description: HTTP Response Status Code\n          example: 200\n        status:\n          type: string\n          description: HTTP Response Status\n          example: OK\n        service:\n          type: string\n          description: Apideck ID of service provider\n          example: zoho-crm\n        resource:\n          type: string\n          description: Unified API resource name\n          example: companies\n        operation:\n          type: string\n          description: Operation performed\n          example: one\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/Lead'\n        meta:\n          $ref: '#/components/schemas/Meta'\n        links:\n          $ref: '#/components/schemas/Links'\n    GetNoteResponse:\n      x-graphql-type-name: note\n      type: object\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      properties:\n        status_code:\n          type: integer\n          description: HTTP Response Status Code\n          example: 200\n        status:\n          type: string\n          description: HTTP Response Status\n          example: OK\n        service:\n          type: string\n          description: Apideck ID of service provider\n          example: zoho-crm\n        resource:\n          type: string\n          description: Unified API resource name\n          example: notes\n        operation:\n          type: string\n          description: Operation performed\n          example: one\n        data:\n          $ref: '#/components/schemas/Note'\n    GetNotesResponse:\n      x-graphql-type-name: NoteList\n      type: object\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      properties:\n        status_code:\n          type: integer\n          description: HTTP Response Status Code\n          example: 200\n        status:\n          type: string\n          description: HTTP Response Status\n          example: OK\n        service:\n          type: string\n          description: Apideck ID of service provider\n          example: zoho-crm\n        resource:\n          type: string\n          description: Unified API resource name\n          example: notes\n        operation:\n          type: string\n          description: Operation performed\n          example: one\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/Note'\n        meta:\n          $ref: '#/components/schemas/Meta'\n        links:\n          $ref: '#/components/schemas/Links'\n    GetOpportunitiesResponse:\n      x-graphql-type-name: OpportunityList\n      type: object\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      properties:\n        status_code:\n          type: integer\n          description: HTTP Response Status Code\n          example: 200\n        status:\n          type: string\n          description: HTTP Response Status\n          example: OK\n        service:\n          type: string\n          description: Apideck ID of service provider\n          example: zoho-crm\n        resource:\n          type: string\n          description: Unified API resource name\n          example: opportunities\n        operation:\n          type: string\n          description: Operation performed\n          example: one\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/Opportunity'\n        meta:\n          $ref: '#/components/schemas/Meta'\n        links:\n          $ref: '#/components/schemas/Links'\n    GetOpportunityResponse:\n      type: object\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      properties:\n        status_code:\n          type: integer\n          description: HTTP Response Status Code\n          example: 200\n        status:\n          type: string\n          description: HTTP Response Status\n          example: OK\n        service:\n          type: string\n          description: Apideck ID of service provider\n          example: zoho-crm\n        resource:\n          type: string\n          description: Unified API resource name\n          example: opportunities\n        operation:\n          type: string\n          description: Operation performed\n          example: one\n        data:\n          $ref: '#/components/schemas/Opportunity'\n    GetPipelineResponse:\n      type: object\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      properties:\n        status_code:\n          type: integer\n          description: HTTP Response Status Code\n          example: 200\n        status:\n          type: string\n          description: HTTP Response Status\n          example: OK\n        service:\n          type: string\n          description: Apideck ID of service provider\n          example: zoho-crm\n        resource:\n          type: string\n          description: Unified API resource name\n          example: pipelines\n        operation:\n          type: string\n          description: Operation performed\n          example: one\n        data:\n          $ref: '#/components/schemas/Pipeline'\n    GetPipelinesResponse:\n      x-graphql-type-name: PipelinesList\n      type: object\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      properties:\n        status_code:\n          type: integer\n          description: HTTP Response Status Code\n          example: 200\n        status:\n          type: string\n          description: HTTP Response Status\n          example: OK\n        service:\n          type: string\n          description: Apideck ID of service provider\n          example: zoho-crm\n        resource:\n          type: string\n          description: Unified API resource name\n          example: pipelines\n        operation:\n          type: string\n          description: Operation performed\n          example: one\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/Pipeline'\n        meta:\n          $ref: '#/components/schemas/Meta'\n        links:\n          $ref: '#/components/schemas/Links'\n    GetUserResponse:\n      type: object\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      properties:\n        status_code:\n          type: integer\n          description: HTTP Response Status Code\n          example: 200\n        status:\n          type: string\n          description: HTTP Response Status\n          example: OK\n        service:\n          type: string\n          description: Apideck ID of service provider\n          example: zoho-crm\n        resource:\n          type: string\n          description: Unified API resource name\n          example: companies\n        operation:\n          type: string\n          description: Operation performed\n          example: one\n        data:\n          $ref: '#/components/schemas/User'\n    GetUsersResponse:\n      x-graphql-type-name: UserList\n      type: object\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      properties:\n        status_code:\n          type: integer\n          description: HTTP Response Status Code\n          example: 200\n        status:\n          type: string\n          description: HTTP Response Status\n          example: OK\n        service:\n          type: string\n          description: Apideck ID of service provider\n          example: zoho-crm\n        resource:\n          type: string\n          description: Unified API resource name\n          example: users\n        operation:\n          type: string\n          description: Operation performed\n          example: one\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/User'\n        meta:\n          $ref: '#/components/schemas/Meta'\n        links:\n          $ref: '#/components/schemas/Links'\n    Lead:\n      required:\n        - name\n        - company_name\n      x-pii:\n        - name\n        - email\n        - first_name\n        - last_name\n      additionalProperties: false\n      properties:\n        id:\n          type: string\n          example: '12345'\n          readOnly: true\n        name:\n          type: string\n          example: Elon Musk\n          minLength: 1\n        company_name:\n          type: string\n          example: Spacex\n          nullable: true\n        owner_id:\n          type: string\n          example: '54321'\n        company_id:\n          type: string\n          example: '2'\n          nullable: true\n        contact_id:\n          type: string\n          example: '2'\n          nullable: true\n        lead_source:\n          type: string\n          example: Cold Call\n          nullable: true\n        first_name:\n          type: string\n          example: Elon\n          nullable: true\n        last_name:\n          type: string\n          example: Musk\n          nullable: true\n        description:\n          type: string\n          example: A thinker\n          nullable: true\n        prefix:\n          type: string\n          example: Sir\n          nullable: true\n        title:\n          type: string\n          example: CEO\n          nullable: true\n        language:\n          type: string\n          example: EN\n          description: language code according to ISO 639-1. For the United States - EN\n          nullable: true\n        status:\n          type: string\n          example: New\n          nullable: true\n        monetary_amount:\n          type: number\n          example: 75000\n          nullable: true\n        currency:\n          type: string\n          example: USD\n          nullable: true\n        fax:\n          type: string\n          example: '+12129876543'\n          nullable: true\n        websites:\n          type: array\n          items:\n            $ref: '#/components/schemas/Website'\n        addresses:\n          type: array\n          items:\n            $ref: '#/components/schemas/Address'\n        social_links:\n          type: array\n          items:\n            $ref: '#/components/schemas/SocialLink'\n        phone_numbers:\n          type: array\n          items:\n            $ref: '#/components/schemas/PhoneNumber'\n        emails:\n          type: array\n          items:\n            $ref: '#/components/schemas/Email'\n        custom_fields:\n          type: array\n          items:\n            $ref: '#/components/schemas/CustomField'\n        tags:\n          $ref: '#/components/schemas/Tags'\n        updated_at:\n          type: string\n          example: '2020-09-30T07:43:32.000Z'\n          readOnly: true\n        created_at:\n          type: string\n          example: '2020-09-30T07:43:32.000Z'\n          readOnly: true\n    LeadsFilter:\n      type: object\n      x-graphql-type-name: LeadsFilter\n      example:\n        first_name: Elon\n        last_name: Musk\n        email: elon@tesla.com\n      properties:\n        name:\n          type: string\n          description: Name of the lead to filter on\n          example: Elon Musk\n        first_name:\n          type: string\n          description: First name of the lead to filter on\n          example: Elon\n        last_name:\n          type: string\n          description: Last name of the lead to filter on\n          example: Musk\n        email:\n          type: string\n          description: E-mail of the lead to filter on\n          example: elon@tesla.com\n      additionalProperties: false\n    LeadsSort:\n      type: object\n      x-graphql-type-name: LeadsSort\n      example:\n        by: created_at\n        direction: desc\n      properties:\n        by:\n          type: string\n          description: The field on which to sort the Leads\n          enum:\n            - created_at\n            - updated_at\n            - name\n            - first_name\n            - last_name\n            - email\n          example: created_at\n        direction:\n          type: string\n          description: The direction in which to sort the Leads\n          enum:\n            - asc\n            - desc\n          default: asc\n      required:\n        - by\n      additionalProperties: false\n    Links:\n      type: object\n      description: Links to navigate to previous or next pages through the API\n      properties:\n        previous:\n          type: string\n          description: Link to navigate to the previous page through the API\n          example: 'https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D'\n          nullable: true\n        current:\n          type: string\n          description: Link to navigate to the current page through the API\n          example: 'https://unify.apideck.com/crm/companies'\n        next:\n          type: string\n          description: Link to navigate to the previous page through the API\n          example: 'https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM'\n          nullable: true\n    Meta:\n      type: object\n      description: Reponse metadata\n      properties:\n        items_on_page:\n          type: integer\n          description: Number of items returned in the data property of the response\n          example: 50\n        cursors:\n          type: object\n          description: Cursors to navigate to previous or next pages through the API\n          properties:\n            previous:\n              type: string\n              description: Cursor to navigate to the previous page of results through the API\n              example: em9oby1jcm06OnBhZ2U6OjE=\n              nullable: true\n            current:\n              type: string\n              description: Cursor to navigate to the current page of results through the API\n              example: em9oby1jcm06OnBhZ2U6OjI=\n              nullable: true\n            next:\n              type: string\n              description: Cursor to navigate to the next page of results through the API\n              example: em9oby1jcm06OnBhZ2U6OjM=\n              nullable: true\n    NotFoundResponse:\n      properties:\n        status_code:\n          type: number\n          description: HTTP status code\n          example: 404\n        error:\n          type: string\n          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)\n          example: Not Found\n        typeName:\n          type: string\n          description: The type of error returned\n          example: EntityNotFoundError\n        message:\n          type: string\n          description: A human-readable message providing more details about the error.\n          example: Unknown Widget\n        detail:\n          anyOf:\n            - type: string\n              example: \"Could not find widget with id: '123'\"\n            - type: object\n              example:\n                not_found:\n                  entity: widget\n                  id: '123'\n          description: Contains parameter or domain specific information related to the error and why it occured.\n        ref:\n          type: string\n          description: Link to documentation of error type\n          example: 'https://developers.apideck.com/errors#entitynotfounderror'\n    NotImplemented:\n      properties:\n        status_code:\n          type: number\n          description: HTTP status code\n          example: 501\n        error:\n          type: string\n          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)\n          example: Not Implemented\n        typeName:\n          type: string\n          description: The type of error returned\n          example: MappingError\n        message:\n          type: string\n          description: A human-readable message providing more details about the error.\n          example: Unmapped Attribute\n        detail:\n          anyOf:\n            - type: string\n              example: Failed to retrieve Widget tokenUrl from 'components.securitySchemes.oauth2.flows'\n            - type: object\n          description: Contains parameter or domain specific information related to the error and why it occured.\n        ref:\n          type: string\n          description: Link to documentation of error type\n          example: 'https://developers.apideck.com/errors#mappingerror'\n    Note:\n      type: object\n      additionalProperties: false\n      properties:\n        id:\n          type: string\n          readOnly: true\n          example: '12345'\n        title:\n          type: string\n          example: Meeting Notes\n        content:\n          type: string\n          example: Office hours are 9AM-6PM\n        owner_id:\n          type: string\n          example: '12345'\n        updated_by:\n          type: string\n          example: '12345'\n          readOnly: true\n          nullable: true\n        created_by:\n          type: string\n          example: '12345'\n          readOnly: true\n          nullable: true\n        updated_at:\n          type: string\n          example: '2020-09-30T07:43:32.000Z'\n          readOnly: true\n        created_at:\n          type: string\n          example: '2020-09-30T07:43:32.000Z'\n          readOnly: true\n    OpportunitiesFilter:\n      type: object\n      x-graphql-type-name: OpportunitiesFilter\n      example:\n        status: Completed\n        monetary_amount: 75000\n      properties:\n        title:\n          type: string\n          description: Title of the opportunity to filter on\n          example: Tesla deal\n        status:\n          type: string\n          description: Status to filter on\n          example: Completed\n        monetary_amount:\n          type: number\n          description: Monetary amount to filter on\n          example: 75000\n        win_probability:\n          type: number\n          description: Win probability to filter on\n          example: 50\n      additionalProperties: false\n    OpportunitiesSort:\n      type: object\n      x-graphql-type-name: OpportunitiesSort\n      example:\n        by: created_at\n        direction: desc\n      properties:\n        by:\n          type: string\n          description: The field on which to sort the Opportunities\n          enum:\n            - created_at\n            - updated_at\n            - title\n            - win_probability\n            - monetary_amount\n            - status\n          example: created_at\n        direction:\n          type: string\n          description: The direction in which to sort the Opportunities\n          enum:\n            - asc\n            - desc\n          default: asc\n      required:\n        - by\n      additionalProperties: false\n    Opportunity:\n      type: object\n      required:\n        - title\n        - primary_contact_id\n      additionalProperties: false\n      properties:\n        id:\n          type: string\n          example: '12345'\n          readOnly: true\n        title:\n          type: string\n          example: New Rocket\n          minLength: 1\n        primary_contact_id:\n          type: string\n          example: '12345'\n          nullable: true\n        description:\n          type: string\n          minLength: 1\n          example: Opportunities are created for People and Companies that are interested in buying your products or services. Create Opportunities for People and Companies to move them through one of your Pipelines.\n          nullable: true\n        monetary_amount:\n          type: number\n          example: 75000\n          nullable: true\n        currency:\n          type: string\n          example: USD\n          nullable: true\n        win_probability:\n          type: number\n          example: 40\n          nullable: true\n        close_date:\n          type: string\n          example: '2020-10-30'\n          format: date\n          nullable: true\n        loss_reason_id:\n          type: string\n          example: '12345'\n          nullable: true\n        loss_reason:\n          type: string\n          example: No budget\n          nullable: true\n        won_reason_id:\n          type: string\n          example: '12345'\n          nullable: true\n        won_reason:\n          type: string\n          example: Best pitch\n          nullable: true\n        pipeline_id:\n          type: string\n          example: '12345'\n          nullable: true\n        pipeline_stage_id:\n          type: string\n          example: '12345'\n          nullable: true\n        source_id:\n          type: string\n          example: '12345'\n          nullable: true\n        lead_id:\n          type: string\n          example: '12345'\n          nullable: true\n        contact_id:\n          type: string\n          example: '12345'\n          nullable: true\n        company_id:\n          type: string\n          example: '12345'\n          nullable: true\n        company_name:\n          type: string\n          example: Copper\n          nullable: true\n        owner_id:\n          type: string\n          example: '12345'\n          nullable: true\n        priority:\n          type: string\n          minLength: 1\n          example: None\n          nullable: true\n        status:\n          type: string\n          minLength: 1\n          example: Open\n          nullable: true\n        status_id:\n          type: string\n          example: '12345'\n          nullable: true\n        tags:\n          $ref: '#/components/schemas/Tags'\n        interaction_count:\n          type: number\n          example: 0\n          readOnly: true\n          nullable: true\n        custom_fields:\n          type: array\n          items:\n            $ref: '#/components/schemas/CustomField'\n        date_stage_changed:\n          type: string\n          example: '2020-09-30T00:00:00.000Z'\n          format: date-time\n          nullable: true\n          readOnly: true\n        date_last_contacted:\n          type: string\n          example: '2020-09-30T00:00:00.000Z'\n          format: date-time\n          nullable: true\n          readOnly: true\n        date_lead_created:\n          type: string\n          example: '2020-09-30T00:00:00.000Z'\n          format: date-time\n          nullable: true\n          readOnly: true\n        updated_by:\n          type: string\n          example: '12345'\n          nullable: true\n          readOnly: true\n        created_by:\n          type: string\n          example: '12345'\n          nullable: true\n          readOnly: true\n        updated_at:\n          type: string\n          example: '2020-09-30T07:43:32.000Z'\n          format: date-time\n          readOnly: true\n        created_at:\n          type: string\n          example: '2020-09-30T07:43:32.000Z'\n          format: date-time\n          readOnly: true\n    PaymentRequired:\n      properties:\n        status_code:\n          type: number\n          description: HTTP status code\n          example: 402\n        error:\n          type: string\n          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)\n          example: Payment Required\n        typeName:\n          type: string\n          description: The type of error returned\n          example: RequestLimitError\n        message:\n          type: string\n          description: A human-readable message providing more details about the error.\n          example: Request Limit Reached\n        detail:\n          type: string\n          description: Contains parameter or domain specific information related to the error and why it occured.\n          example: You have reached your limit of 2000\n        ref:\n          type: string\n          description: Link to documentation of error type\n          example: 'https://developers.apideck.com/errors#requestlimiterror'\n    PhoneNumber:\n      required:\n        - number\n      type: object\n      properties:\n        id:\n          type: string\n          example: '12345'\n          nullable: true\n        number:\n          type: string\n          example: 111-111-1111\n          minLength: 1\n        type:\n          type: string\n          x-graphql-type-name: PhoneType\n          enum:\n            - primary\n            - secondary\n            - home\n            - office\n            - mobile\n            - assistant\n            - fax\n            - other\n          example: primary\n    Pipeline:\n      required:\n        - name\n      x-pii: []\n      properties:\n        id:\n          type: string\n          example: default\n        name:\n          type: string\n          example: Sales Pipeline\n          minLength: 1\n        currency:\n          type: string\n          example: USD\n        archived:\n          type: boolean\n          example: false\n        display_order:\n          type: integer\n          example: 1\n        stages:\n          type: array\n          items:\n            type: object\n            properties:\n              id:\n                type: string\n                example: contractsent\n                readOnly: true\n              name:\n                type: string\n                example: Contract Sent\n              value:\n                type: string\n                example: CONTRACT_SENT\n              display_order:\n                type: integer\n                example: 1\n        updated_at:\n          type: string\n          example: '2017-08-12T20:43:21.291Z'\n          readOnly: true\n        created_at:\n          type: string\n          example: '2017-08-12T20:43:21.291Z'\n          readOnly: true\n      additionalProperties: false\n    SocialLink:\n      required:\n        - url\n      type: object\n      properties:\n        id:\n          type: string\n          example: '12345'\n          nullable: true\n        code:\n          type: number\n          example: 1\n          minimum: 1\n          maximum: 100\n          nullable: true\n        url:\n          type: string\n          example: 'https://www.twitter.com/apideck-io'\n          minLength: 1\n        type:\n          type: string\n          example: twitter\n          nullable: true\n    Tags:\n      type: array\n      items:\n        type: string\n      example:\n        - New\n    User:\n      required:\n        - email\n      x-pii:\n        - username\n        - first_name\n        - last_name\n        - email\n      properties:\n        id:\n          type: string\n          example: '12345'\n          readOnly: true\n        email:\n          type: string\n          format: email\n          example: elon@musk.com\n          minLength: 1\n        parent_id:\n          type: string\n          example: '54321'\n          nullable: true\n        username:\n          type: string\n          example: masterofcoin\n          nullable: true\n        first_name:\n          type: string\n          example: Elon\n          nullable: true\n        last_name:\n          type: string\n          example: Musk\n          nullable: true\n        image:\n          type: string\n          example: 'https://logo.clearbit.com/spacex.com?s=128'\n          nullable: true\n        language:\n          type: string\n          example: EN\n          nullable: true\n        status:\n          type: string\n          example: active\n          nullable: true\n        password:\n          type: string\n          example: supersecretpassword\n          writeOnly: true\n        updated_at:\n          type: string\n          example: '2017-08-12T20:43:21.291Z'\n          readOnly: true\n        created_at:\n          type: string\n          example: '2017-08-12T20:43:21.291Z'\n          readOnly: true\n    Unauthorized:\n      properties:\n        status_code:\n          type: number\n          description: HTTP status code\n          example: 401\n        error:\n          type: string\n          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)\n          example: Unauthorized\n        typeName:\n          type: string\n          description: The type of error returned\n          example: UnauthorizedError\n        message:\n          type: string\n          description: A human-readable message providing more details about the error.\n          example: Unauthorized Request\n        detail:\n          type: string\n          description: Contains parameter or domain specific information related to the error and why it occured.\n          example: Failed to generate valid JWT Session. Verify applicationId is correct\n        ref:\n          type: string\n          description: Link to documentation of error type\n          example: 'https://developers.apideck.com/errors#unauthorizederror'\n    UnexpectedError:\n      properties:\n        status_code:\n          type: number\n          description: HTTP status code\n          example: 400\n        error:\n          type: string\n          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)\n          example: Bad Request\n        typeName:\n          type: string\n          description: The type of error returned\n          example: RequestHeadersValidationError\n        message:\n          type: string\n          description: A human-readable message providing more details about the error.\n          example: Invalid Params\n        detail:\n          anyOf:\n            - type: string\n              example: 'Missing Header: x-apideck-consumer-id'\n            - type: object\n              example:\n                missing:\n                  - - x-apideck-consumer-id: required\n          description: Contains parameter or domain specific information related to the error and why it occured.\n        ref:\n          type: string\n          description: Link to documentation of error type\n          example: 'https://developers.apideck.com/errors#unauthorizederror'\n    UnifiedId:\n      title: UnifiedId\n      required:\n        - id\n      properties:\n        id:\n          type: string\n          readOnly: true\n          example: '12345'\n    Unprocessable:\n      properties:\n        status_code:\n          type: number\n          description: HTTP status code\n          example: 422\n        error:\n          type: string\n          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)\n          example: Unprocessable Entity\n        typeName:\n          type: string\n          description: The type of error returned\n          example: InvalidStateError\n        message:\n          type: string\n          description: A human-readable message providing more details about the error.\n          example: Invalid State\n        detail:\n          type: string\n          description: Contains parameter or domain specific information related to the error and why it occured.\n          example: State did not include unified_api\n        ref:\n          type: string\n          description: Link to documentation of error type\n          example: 'https://developers.apideck.com/errors#invalidstateerror'\n    UpdateActivityResponse:\n      type: object\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      properties:\n        status_code:\n          type: integer\n          description: HTTP Response Status Code\n          example: 200\n        status:\n          type: string\n          description: HTTP Response Status\n          example: OK\n        service:\n          type: string\n          description: Apideck ID of service provider\n          example: zoho-crm\n        resource:\n          type: string\n          description: Unified API resource name\n          example: activities\n        operation:\n          type: string\n          description: Operation performed\n          example: one\n        data:\n          $ref: '#/components/schemas/UnifiedId'\n    UpdateCompanyResponse:\n      type: object\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      properties:\n        status_code:\n          type: integer\n          description: HTTP Response Status Code\n          example: 200\n        status:\n          type: string\n          description: HTTP Response Status\n          example: OK\n        service:\n          type: string\n          description: Apideck ID of service provider\n          example: zoho-crm\n        resource:\n          type: string\n          description: Unified API resource name\n          example: companies\n        operation:\n          type: string\n          description: Operation performed\n          example: one\n        data:\n          $ref: '#/components/schemas/UnifiedId'\n    UpdateContactResponse:\n      type: object\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      properties:\n        status_code:\n          type: integer\n          description: HTTP Response Status Code\n          example: 200\n        status:\n          type: string\n          description: HTTP Response Status\n          example: OK\n        service:\n          type: string\n          description: Apideck ID of service provider\n          example: zoho-crm\n        resource:\n          type: string\n          description: Unified API resource name\n          example: companies\n        operation:\n          type: string\n          description: Operation performed\n          example: one\n        data:\n          $ref: '#/components/schemas/UnifiedId'\n    UpdateLeadResponse:\n      type: object\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      properties:\n        status_code:\n          type: integer\n          description: HTTP Response Status Code\n          example: 200\n        status:\n          type: string\n          description: HTTP Response Status\n          example: OK\n        service:\n          type: string\n          description: Apideck ID of service provider\n          example: zoho-crm\n        resource:\n          type: string\n          description: Unified API resource name\n          example: companies\n        operation:\n          type: string\n          description: Operation performed\n          example: one\n        data:\n          $ref: '#/components/schemas/UnifiedId'\n    UpdateNoteResponse:\n      type: object\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      properties:\n        status_code:\n          type: integer\n          description: HTTP Response Status Code\n          example: 200\n        status:\n          type: string\n          description: HTTP Response Status\n          example: OK\n        service:\n          type: string\n          description: Apideck ID of service provider\n          example: zoho-crm\n        resource:\n          type: string\n          description: Unified API resource name\n          example: notes\n        operation:\n          type: string\n          description: Operation performed\n          example: one\n        data:\n          $ref: '#/components/schemas/UnifiedId'\n    UpdateOpportunityResponse:\n      type: object\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      properties:\n        status_code:\n          type: integer\n          description: HTTP Response Status Code\n          example: 200\n        status:\n          type: string\n          description: HTTP Response Status\n          example: OK\n        service:\n          type: string\n          description: Apideck ID of service provider\n          example: zoho-crm\n        resource:\n          type: string\n          description: Unified API resource name\n          example: companies\n        operation:\n          type: string\n          description: Operation performed\n          example: one\n        data:\n          $ref: '#/components/schemas/UnifiedId'\n    UpdatePipelineResponse:\n      type: object\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      properties:\n        status_code:\n          type: integer\n          description: HTTP Response Status Code\n          example: 200\n        status:\n          type: string\n          description: HTTP Response Status\n          example: OK\n        service:\n          type: string\n          description: Apideck ID of service provider\n          example: zoho-crm\n        resource:\n          type: string\n          description: Unified API resource name\n          example: pipelines\n        operation:\n          type: string\n          description: Operation performed\n          example: one\n        data:\n          $ref: '#/components/schemas/UnifiedId'\n    UpdateUserResponse:\n      type: object\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      properties:\n        status_code:\n          type: integer\n          description: HTTP Response Status Code\n          example: 200\n        status:\n          type: string\n          description: HTTP Response Status\n          example: OK\n        service:\n          type: string\n          description: Apideck ID of service provider\n          example: zoho-crm\n        resource:\n          type: string\n          description: Unified API resource name\n          example: companies\n        operation:\n          type: string\n          description: Operation performed\n          example: one\n        data:\n          $ref: '#/components/schemas/UnifiedId'\n    Website:\n      type: object\n      required:\n        - url\n      properties:\n        id:\n          type: string\n          example: '12345'\n          nullable: true\n        url:\n          type: string\n          example: 'http://example.com'\n          minLength: 1\n        type:\n          type: string\n          x-graphql-type-name: WebsiteType\n          enum:\n            - primary\n            - secondary\n            - work\n            - personal\n            - other\n          example: primary\n  parameters:\n    applicationId:\n      name: x-apideck-app-id\n      in: header\n      required: true\n      description: The ID of your Unify application\n      example: Foo Bar\n      schema:\n        type: string\n        minLength: 2\n        maxLength: 15\n    serviceId:\n      name: x-apideck-service-id\n      in: header\n      description: 'Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.'\n      schema:\n        type: string\n    consumerId:\n      name: x-apideck-consumer-id\n      in: header\n      required: true\n      description: ID of the consumer which you want to get or push data from\n      example: 10\n      schema:\n        type: number\n        minimum: 10\n        maximum: 100\n    raw:\n      name: raw\n      in: query\n      description: Include raw response. Mostly used for debugging purposes\n      schema:\n        type: boolean\n        default: true\n    id:\n      in: path\n      name: id\n      schema:\n        type: string\n      required: true\n      description: ID of the record you are acting upon.\n    limit:\n      name: limit\n      in: query\n      description: Number of records to return\n      schema:\n        type: integer\n        minimum: 1\n        maximum: 200\n        default: 20\n    cursor:\n      name: cursor\n      in: query\n      description: Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.\n      schema:\n        type: string\n        nullable: true\n        default: null\n    contactsFilter:\n      name: filter\n      in: query\n      description: Apply filters (beta)\n      style: deepObject\n      explode: true\n      schema:\n        $ref: '#/components/schemas/ContactsFilter'\n    contactsSort:\n      name: sort\n      in: query\n      description: Apply sorting (beta)\n      style: deepObject\n      explode: true\n      schema:\n        $ref: '#/components/schemas/ContactsSort'\n    opportunitiesFilter:\n      name: filter\n      in: query\n      description: Apply filters (beta)\n      style: deepObject\n      explode: true\n      schema:\n        $ref: '#/components/schemas/OpportunitiesFilter'\n    opportunitiesSort:\n      name: sort\n      in: query\n      description: Apply sorting (beta)\n      style: deepObject\n      explode: true\n      schema:\n        $ref: '#/components/schemas/OpportunitiesSort'\n    companiesFilter:\n      name: filter\n      in: query\n      description: Apply filters (beta)\n      style: deepObject\n      explode: true\n      schema:\n        $ref: '#/components/schemas/CompaniesFilter'\n    companiesSort:\n      name: sort\n      in: query\n      description: Apply sorting (beta)\n      style: deepObject\n      explode: true\n      schema:\n        $ref: '#/components/schemas/CompaniesSort'\n    leadsFilter:\n      name: filter\n      in: query\n      description: Apply filters (beta)\n      style: deepObject\n      explode: true\n      schema:\n        $ref: '#/components/schemas/LeadsFilter'\n    leadsSort:\n      name: sort\n      in: query\n      description: Apply sorting (beta)\n      style: deepObject\n      explode: true\n      schema:\n        $ref: '#/components/schemas/LeadsSort'\n  responses:\n    BadRequest:\n      description: Bad Request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/BadRequest'\n    CreateActivityResponse:\n      description: Activity\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CreateActivityResponse'\n    CreateCompany:\n      description: Company created\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CreateCompanyResponse'\n    CreateContact:\n      description: Contact created\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CreateContactResponse'\n    CreateLead:\n      description: Lead created\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CreateLeadResponse'\n    CreateNoteResponse:\n      description: Note\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CreateNoteResponse'\n    CreateOpportunity:\n      description: Opportunity\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CreateOpportunityResponse'\n    CreatePipeline:\n      description: Pipeline created\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CreatePipelineResponse'\n    CreateUser:\n      description: User created\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CreateUserResponse'\n    DeleteActivityResponse:\n      description: Activity\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/DeleteActivityResponse'\n    DeleteCompany:\n      description: Company deleted\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/DeleteCompanyResponse'\n    DeleteContact:\n      description: Contact deleted\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/DeleteContactResponse'\n    DeleteLead:\n      description: Lead deleted\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/DeleteLeadResponse'\n    DeleteNoteResponse:\n      description: Note\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/DeleteNoteResponse'\n    DeleteOpportunity:\n      description: Opportunity deleted\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/DeleteOpportunityResponse'\n    DeletePipeline:\n      description: Pipeline deleted\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/DeletePipelineResponse'\n    DeleteUser:\n      description: User deleted\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/DeleteUserResponse'\n    GetActivitiesResponse:\n      description: Activities\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GetActivitiesResponse'\n    GetActivityResponse:\n      description: Activity\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GetActivityResponse'\n    GetCompanies:\n      description: Companies\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GetCompaniesResponse'\n    GetCompany:\n      description: Company\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GetCompanyResponse'\n    GetContact:\n      description: Contact\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GetContactResponse'\n    GetContacts:\n      description: Contacts\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GetContactsResponse'\n    GetLead:\n      description: Lead\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GetLeadResponse'\n    GetLeads:\n      description: Leads\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GetLeadsResponse'\n    GetNoteResponse:\n      description: Note\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GetNoteResponse'\n    GetNotesResponse:\n      description: Notes\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GetNotesResponse'\n    GetOpportunities:\n      description: Opportunities\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GetOpportunitiesResponse'\n    GetOpportunity:\n      description: Opportunity\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GetOpportunityResponse'\n    GetPipeline:\n      description: Pipeline\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GetPipelineResponse'\n    GetPipelines:\n      description: Pipelines\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GetPipelinesResponse'\n    GetUsers:\n      description: Users\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GetUsersResponse'\n    GetUser:\n      description: User\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GetUserResponse'\n    NotFound:\n      description: The specified resource was not found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/NotFoundResponse'\n    NotImplemented:\n      description: Not Implemented\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/NotImplemented'\n    PaymentRequired:\n      description: Payment Required\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/PaymentRequired'\n    Unauthorized:\n      description: Unauthorized\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Unauthorized'\n    UnexpectedError:\n      description: Unexpected error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UnexpectedError'\n    Unprocessable:\n      description: Unprocessable\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Unprocessable'\n    UpdateActivityResponse:\n      description: Activity\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UpdateActivityResponse'\n    UpdateCompany:\n      description: Company updated\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UpdateCompanyResponse'\n    UpdateContact:\n      description: Contact updated\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UpdateContactResponse'\n    UpdateLead:\n      description: Lead updated\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UpdateLeadResponse'\n    UpdateNoteResponse:\n      description: Note\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UpdateNoteResponse'\n    UpdateOpportunity:\n      description: Opportunity updated\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UpdateOpportunityResponse'\n    UpdatePipeline:\n      description: Pipeline updated\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UpdatePipelineResponse'\n    UpdateUser:\n      description: User updated\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UpdateUserResponse'\n  securitySchemes:\n    apiKey:\n      type: http\n      scheme: bearer\n      description: |\n        To use API you have to sign up and get your own API key. Unify API accounts have sandbox mode and live mode API keys.\n        To change modes just use the appropriate key to get a live or test object. You can find your API keys on the unify settings of your Apideck app.\n        Your Apideck application_id can also be found on the same page.\n\n        Authenticate your API requests by including your test or live secret API key in the request header.\n\n        - Bearer authorization header: `Authorization: Bearer \u003cyour-apideck-api-key\u003e`\n        - Application id header: `x-apideck-app-id: \u003cyour-apideck-app-id\u003e`\n\n        You should use the public keys on the SDKs and the secret keys to authenticate API requests.\n\n        **Do not share or include your secret API keys on client side code.** Your API keys carry significant privileges. Please ensure to keep them 100% secure and be sure to not share your secret API keys in areas that are publicly accessible like GitHub.\n\n        Learn how to set the Authorization header inside Postman https://learning.postman.com/docs/postman/sending-api-requests/authorization/#api-key\n\n        Go to Unify to grab your API KEY https://app.apideck.com/unify/api-keys\n    applicationId:\n      type: apiKey\n      in: header\n      name: x-apideck-app-id\n      description: The ID of your Unify application\n    consumerId:\n      type: apiKey\n      in: header\n      name: x-apideck-consumer-id\n      description: The ID of the consumer which you want to get or push data from\npaths:\n  /crm/companies:\n    get:\n      tags:\n        - Companies\n      operationId: companiesAll\n      x-graphql-field-name: companies\n      summary: List companies\n      description: List companies\n      parameters:\n        - $ref: '#/components/parameters/raw'\n        - $ref: '#/components/parameters/consumerId'\n        - $ref: '#/components/parameters/applicationId'\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/cursor'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/companiesFilter'\n        - $ref: '#/components/parameters/companiesSort'\n      security:\n        - apiKey: []\n      responses:\n        '200':\n          $ref: '#/components/responses/GetCompanies'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '402':\n          $ref: '#/components/responses/PaymentRequired'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '422':\n          $ref: '#/components/responses/Unprocessable'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n    post:\n      tags:\n        - Companies\n      operationId: companiesAdd\n      summary: Create company\n      description: Create company\n      parameters:\n        - $ref: '#/components/parameters/raw'\n        - $ref: '#/components/parameters/consumerId'\n        - $ref: '#/components/parameters/applicationId'\n        - $ref: '#/components/parameters/serviceId'\n      security:\n        - apiKey: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Company'\n      responses:\n        '201':\n          $ref: '#/components/responses/CreateCompany'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '402':\n          $ref: '#/components/responses/PaymentRequired'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '422':\n          $ref: '#/components/responses/Unprocessable'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n  '/crm/companies/{id}':\n    get:\n      tags:\n        - Companies\n      operationId: companiesOne\n      summary: Get company\n      description: Get company\n      parameters:\n        - $ref: '#/components/parameters/id'\n        - $ref: '#/components/parameters/raw'\n        - $ref: '#/components/parameters/consumerId'\n        - $ref: '#/components/parameters/applicationId'\n        - $ref: '#/components/parameters/serviceId'\n      security:\n        - apiKey: []\n      responses:\n        '200':\n          $ref: '#/components/responses/GetCompany'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '402':\n          $ref: '#/components/responses/PaymentRequired'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '422':\n          $ref: '#/components/responses/Unprocessable'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n    patch:\n      tags:\n        - Companies\n      operationId: companiesUpdate\n      summary: Update company\n      description: Update company\n      parameters:\n        - $ref: '#/components/parameters/id'\n        - $ref: '#/components/parameters/raw'\n        - $ref: '#/components/parameters/consumerId'\n        - $ref: '#/components/parameters/applicationId'\n        - $ref: '#/components/parameters/serviceId'\n      security:\n        - apiKey: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Company'\n      responses:\n        '200':\n          $ref: '#/components/responses/UpdateCompany'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '402':\n          $ref: '#/components/responses/PaymentRequired'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '422':\n          $ref: '#/components/responses/Unprocessable'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n    delete:\n      tags:\n        - Companies\n      operationId: companiesDelete\n      summary: Delete company\n      description: Delete company\n      parameters:\n        - $ref: '#/components/parameters/id'\n        - $ref: '#/components/parameters/raw'\n        - $ref: '#/components/parameters/consumerId'\n        - $ref: '#/components/parameters/applicationId'\n        - $ref: '#/components/parameters/serviceId'\n      security:\n        - apiKey: []\n      responses:\n        '200':\n          $ref: '#/components/responses/DeleteCompany'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '402':\n          $ref: '#/components/responses/PaymentRequired'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '422':\n          $ref: '#/components/responses/Unprocessable'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n  /crm/contacts:\n    get:\n      tags:\n        - Contacts\n      x-graphql-field-name: contacts\n      operationId: contactsAll\n      summary: List contacts\n      description: List contacts\n      parameters:\n        - $ref: '#/components/parameters/raw'\n        - $ref: '#/components/parameters/consumerId'\n        - $ref: '#/components/parameters/applicationId'\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/cursor'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/contactsFilter'\n        - $ref: '#/components/parameters/contactsSort'\n      security:\n        - apiKey: []\n      responses:\n        '200':\n          $ref: '#/components/responses/GetContacts'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '402':\n          $ref: '#/components/responses/PaymentRequired'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '422':\n          $ref: '#/components/responses/Unprocessable'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n    post:\n      tags:\n        - Contacts\n      operationId: contactsAdd\n      summary: Create contact\n      description: Create contact\n      parameters:\n        - $ref: '#/components/parameters/raw'\n        - $ref: '#/components/parameters/consumerId'\n        - $ref: '#/components/parameters/applicationId'\n        - $ref: '#/components/parameters/serviceId'\n      security:\n        - apiKey: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Contact'\n      responses:\n        '201':\n          $ref: '#/components/responses/CreateContact'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '402':\n          $ref: '#/components/responses/PaymentRequired'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '422':\n          $ref: '#/components/responses/Unprocessable'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n  '/crm/contacts/{id}':\n    get:\n      tags:\n        - Contacts\n      operationId: contactsOne\n      summary: Get contact\n      description: Get contact\n      parameters:\n        - $ref: '#/components/parameters/id'\n        - $ref: '#/components/parameters/consumerId'\n        - $ref: '#/components/parameters/applicationId'\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/raw'\n      security:\n        - apiKey: []\n      responses:\n        '200':\n          $ref: '#/components/responses/GetContact'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '402':\n          $ref: '#/components/responses/PaymentRequired'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '422':\n          $ref: '#/components/responses/Unprocessable'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n    patch:\n      tags:\n        - Contacts\n      operationId: contactsUpdate\n      summary: Update contact\n      description: Update contact\n      parameters:\n        - $ref: '#/components/parameters/id'\n        - $ref: '#/components/parameters/consumerId'\n        - $ref: '#/components/parameters/applicationId'\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/raw'\n      security:\n        - apiKey: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Contact'\n      responses:\n        '200':\n          $ref: '#/components/responses/UpdateContact'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '402':\n          $ref: '#/components/responses/PaymentRequired'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '422':\n          $ref: '#/components/responses/Unprocessable'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n    delete:\n      tags:\n        - Contacts\n      operationId: contactsDelete\n      summary: Delete contact\n      description: Delete contact\n      parameters:\n        - $ref: '#/components/parameters/id'\n        - $ref: '#/components/parameters/consumerId'\n        - $ref: '#/components/parameters/applicationId'\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/raw'\n      security:\n        - apiKey: []\n      responses:\n        '200':\n          $ref: '#/components/responses/DeleteContact'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '402':\n          $ref: '#/components/responses/PaymentRequired'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '422':\n          $ref: '#/components/responses/Unprocessable'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n  /crm/opportunities:\n    get:\n      tags:\n        - Opportunities\n      x-graphql-field-name: opportunities\n      operationId: opportunitiesAll\n      summary: List opportunities\n      description: List opportunities\n      parameters:\n        - $ref: '#/components/parameters/raw'\n        - $ref: '#/components/parameters/consumerId'\n        - $ref: '#/components/parameters/applicationId'\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/cursor'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/opportunitiesFilter'\n        - $ref: '#/components/parameters/opportunitiesSort'\n      security:\n        - apiKey: []\n      responses:\n        '200':\n          $ref: '#/components/responses/GetOpportunities'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '402':\n          $ref: '#/components/responses/PaymentRequired'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '422':\n          $ref: '#/components/responses/Unprocessable'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n    post:\n      tags:\n        - Opportunities\n      operationId: opportunitiesAdd\n      summary: Create opportunity\n      description: Create opportunity\n      parameters:\n        - $ref: '#/components/parameters/raw'\n        - $ref: '#/components/parameters/consumerId'\n        - $ref: '#/components/parameters/applicationId'\n        - $ref: '#/components/parameters/serviceId'\n      security:\n        - apiKey: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Opportunity'\n      responses:\n        '201':\n          $ref: '#/components/responses/CreateOpportunity'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '402':\n          $ref: '#/components/responses/PaymentRequired'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '422':\n          $ref: '#/components/responses/Unprocessable'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n  '/crm/opportunities/{id}':\n    get:\n      tags:\n        - Opportunities\n      operationId: opportunitiesOne\n      summary: Get opportunity\n      description: Get opportunity\n      parameters:\n        - $ref: '#/components/parameters/id'\n        - $ref: '#/components/parameters/consumerId'\n        - $ref: '#/components/parameters/applicationId'\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/raw'\n      security:\n        - apiKey: []\n      responses:\n        '200':\n          $ref: '#/components/responses/GetOpportunity'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '402':\n          $ref: '#/components/responses/PaymentRequired'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '422':\n          $ref: '#/components/responses/Unprocessable'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n    patch:\n      tags:\n        - Opportunities\n      operationId: opportunitiesUpdate\n      summary: Update opportunity\n      description: Update opportunity\n      parameters:\n        - $ref: '#/components/parameters/id'\n        - $ref: '#/components/parameters/consumerId'\n        - $ref: '#/components/parameters/applicationId'\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/raw'\n      security:\n        - apiKey: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Opportunity'\n      responses:\n        '200':\n          $ref: '#/components/responses/UpdateOpportunity'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '402':\n          $ref: '#/components/responses/PaymentRequired'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '422':\n          $ref: '#/components/responses/Unprocessable'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n    delete:\n      tags:\n        - Opportunities\n      operationId: opportunitiesDelete\n      summary: Delete opportunity\n      description: Delete opportunity\n      parameters:\n        - $ref: '#/components/parameters/id'\n        - $ref: '#/components/parameters/consumerId'\n        - $ref: '#/components/parameters/applicationId'\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/raw'\n      security:\n        - apiKey: []\n      responses:\n        '200':\n          $ref: '#/components/responses/DeleteOpportunity'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '402':\n          $ref: '#/components/responses/PaymentRequired'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '422':\n          $ref: '#/components/responses/Unprocessable'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n  /crm/leads:\n    get:\n      tags:\n        - Leads\n      x-graphql-field-name: leads\n      operationId: leadsAll\n      summary: List leads\n      description: List leads\n      parameters:\n        - $ref: '#/components/parameters/raw'\n        - $ref: '#/components/parameters/consumerId'\n        - $ref: '#/components/parameters/applicationId'\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/cursor'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/leadsFilter'\n        - $ref: '#/components/parameters/leadsSort'\n      security:\n        - apiKey: []\n      responses:\n        '200':\n          $ref: '#/components/responses/GetLeads'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '402':\n          $ref: '#/components/responses/PaymentRequired'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '422':\n          $ref: '#/components/responses/Unprocessable'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n    post:\n      tags:\n        - Leads\n      operationId: leadsAdd\n      summary: Create lead\n      description: Create lead\n      parameters:\n        - $ref: '#/components/parameters/raw'\n        - $ref: '#/components/parameters/consumerId'\n        - $ref: '#/components/parameters/applicationId'\n        - $ref: '#/components/parameters/serviceId'\n      security:\n        - apiKey: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Lead'\n      responses:\n        '201':\n          $ref: '#/components/responses/CreateLead'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '402':\n          $ref: '#/components/responses/PaymentRequired'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '422':\n          $ref: '#/components/responses/Unprocessable'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n  '/crm/leads/{id}':\n    get:\n      tags:\n        - Leads\n      operationId: leadsOne\n      summary: Get lead\n      description: Get lead\n      parameters:\n        - $ref: '#/components/parameters/id'\n        - $ref: '#/components/parameters/consumerId'\n        - $ref: '#/components/parameters/applicationId'\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/raw'\n      security:\n        - apiKey: []\n      responses:\n        '200':\n          $ref: '#/components/responses/GetLead'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '402':\n          $ref: '#/components/responses/PaymentRequired'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '422':\n          $ref: '#/components/responses/Unprocessable'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n    patch:\n      tags:\n        - Leads\n      operationId: leadsUpdate\n      summary: Update lead\n      description: Update lead\n      parameters:\n        - $ref: '#/components/parameters/id'\n        - $ref: '#/components/parameters/consumerId'\n        - $ref: '#/components/parameters/applicationId'\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/raw'\n      security:\n        - apiKey: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Lead'\n      responses:\n        '200':\n          $ref: '#/components/responses/UpdateLead'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '402':\n          $ref: '#/components/responses/PaymentRequired'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '422':\n          $ref: '#/components/responses/Unprocessable'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n    delete:\n      tags:\n        - Leads\n      operationId: leadsDelete\n      summary: Delete lead\n      description: Delete lead\n      parameters:\n        - $ref: '#/components/parameters/id'\n        - $ref: '#/components/parameters/consumerId'\n        - $ref: '#/components/parameters/applicationId'\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/raw'\n      security:\n        - apiKey: []\n      responses:\n        '200':\n          $ref: '#/components/responses/DeleteLead'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '402':\n          $ref: '#/components/responses/PaymentRequired'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '422':\n          $ref: '#/components/responses/Unprocessable'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n  /crm/pipelines:\n    get:\n      tags:\n        - Pipelines\n      x-graphql-field-name: pipelines\n      operationId: pipelinesAll\n      summary: List pipelines\n      description: List pipelines\n      parameters:\n        - $ref: '#/components/parameters/raw'\n        - $ref: '#/components/parameters/consumerId'\n        - $ref: '#/components/parameters/applicationId'\n        - $ref: '#/components/parameters/serviceId'\n      security:\n        - apiKey: []\n      responses:\n        '200':\n          $ref: '#/components/responses/GetPipelines'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '402':\n          $ref: '#/components/responses/PaymentRequired'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '422':\n          $ref: '#/components/responses/Unprocessable'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n    post:\n      tags:\n        - Pipelines\n      operationId: pipelinesAdd\n      summary: Create pipeline\n      description: Create pipeline\n      x-apideck-upcoming: true\n      parameters:\n        - $ref: '#/components/parameters/raw'\n        - $ref: '#/components/parameters/consumerId'\n        - $ref: '#/components/parameters/applicationId'\n        - $ref: '#/components/parameters/serviceId'\n      security:\n        - apiKey: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Pipeline'\n      responses:\n        '201':\n          $ref: '#/components/responses/CreatePipeline'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '402':\n          $ref: '#/components/responses/PaymentRequired'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '422':\n          $ref: '#/components/responses/Unprocessable'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n  '/crm/pipelines/{id}':\n    get:\n      tags:\n        - Pipelines\n      operationId: pipelinesOne\n      summary: Get pipeline\n      description: Get pipeline\n      x-apideck-upcoming: true\n      parameters:\n        - $ref: '#/components/parameters/id'\n        - $ref: '#/components/parameters/consumerId'\n        - $ref: '#/components/parameters/applicationId'\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/raw'\n      security:\n        - apiKey: []\n      responses:\n        '200':\n          $ref: '#/components/responses/GetPipeline'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '402':\n          $ref: '#/components/responses/PaymentRequired'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '422':\n          $ref: '#/components/responses/Unprocessable'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n    patch:\n      tags:\n        - Pipelines\n      operationId: pipelinesUpdate\n      summary: Update pipeline\n      description: Update pipeline\n      x-apideck-upcoming: true\n      parameters:\n        - $ref: '#/components/parameters/id'\n        - $ref: '#/components/parameters/consumerId'\n        - $ref: '#/components/parameters/applicationId'\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/raw'\n      security:\n        - apiKey: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Pipeline'\n      responses:\n        '200':\n          $ref: '#/components/responses/UpdatePipeline'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '402':\n          $ref: '#/components/responses/PaymentRequired'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '422':\n          $ref: '#/components/responses/Unprocessable'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n    delete:\n      tags:\n        - Pipelines\n      operationId: pipelinesDelete\n      summary: Delete pipeline\n      description: Delete pipeline\n      x-apideck-upcoming: true\n      parameters:\n        - $ref: '#/components/parameters/id'\n        - $ref: '#/components/parameters/consumerId'\n        - $ref: '#/components/parameters/applicationId'\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/raw'\n      security:\n        - apiKey: []\n      responses:\n        '200':\n          $ref: '#/components/responses/DeletePipeline'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '402':\n          $ref: '#/components/responses/PaymentRequired'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '422':\n          $ref: '#/components/responses/Unprocessable'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n  /crm/notes:\n    get:\n      tags:\n        - Notes\n      x-graphql-field-name: notes\n      operationId: notesAll\n      summary: List notes\n      description: List notes\n      parameters:\n        - $ref: '#/components/parameters/raw'\n        - $ref: '#/components/parameters/consumerId'\n        - $ref: '#/components/parameters/applicationId'\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/cursor'\n        - $ref: '#/components/parameters/limit'\n      security:\n        - apiKey: []\n      responses:\n        '200':\n          $ref: '#/components/responses/GetNotesResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '402':\n          $ref: '#/components/responses/PaymentRequired'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '422':\n          $ref: '#/components/responses/Unprocessable'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n    post:\n      tags:\n        - Notes\n      operationId: notesAdd\n      summary: Create note\n      description: Create note\n      parameters:\n        - $ref: '#/components/parameters/raw'\n        - $ref: '#/components/parameters/consumerId'\n        - $ref: '#/components/parameters/applicationId'\n        - $ref: '#/components/parameters/serviceId'\n      security:\n        - apiKey: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Note'\n      responses:\n        '201':\n          $ref: '#/components/responses/CreateNoteResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '402':\n          $ref: '#/components/responses/PaymentRequired'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '422':\n          $ref: '#/components/responses/Unprocessable'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n  '/crm/notes/{id}':\n    get:\n      tags:\n        - Notes\n      operationId: notesOne\n      summary: Get note\n      description: Get note\n      parameters:\n        - $ref: '#/components/parameters/id'\n        - $ref: '#/components/parameters/consumerId'\n        - $ref: '#/components/parameters/applicationId'\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/raw'\n      security:\n        - apiKey: []\n      responses:\n        '200':\n          $ref: '#/components/responses/GetNoteResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '402':\n          $ref: '#/components/responses/PaymentRequired'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '422':\n          $ref: '#/components/responses/Unprocessable'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n    patch:\n      tags:\n        - Notes\n      operationId: notesUpdate\n      summary: Update note\n      description: Update note\n      parameters:\n        - $ref: '#/components/parameters/id'\n        - $ref: '#/components/parameters/consumerId'\n        - $ref: '#/components/parameters/applicationId'\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/raw'\n      security:\n        - apiKey: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Note'\n      responses:\n        '200':\n          $ref: '#/components/responses/UpdateNoteResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '402':\n          $ref: '#/components/responses/PaymentRequired'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '422':\n          $ref: '#/components/responses/Unprocessable'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n    delete:\n      tags:\n        - Notes\n      operationId: notesDelete\n      summary: Delete note\n      description: Delete note\n      parameters:\n        - $ref: '#/components/parameters/id'\n        - $ref: '#/components/parameters/consumerId'\n        - $ref: '#/components/parameters/applicationId'\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/raw'\n      security:\n        - apiKey: []\n      responses:\n        '200':\n          $ref: '#/components/responses/DeleteNoteResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '402':\n          $ref: '#/components/responses/PaymentRequired'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '422':\n          $ref: '#/components/responses/Unprocessable'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n  /crm/users:\n    get:\n      tags:\n        - Users\n      x-graphql-field-name: users\n      operationId: usersAll\n      summary: List users\n      description: List users\n      parameters:\n        - $ref: '#/components/parameters/raw'\n        - $ref: '#/components/parameters/consumerId'\n        - $ref: '#/components/parameters/applicationId'\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/cursor'\n        - $ref: '#/components/parameters/limit'\n      security:\n        - apiKey: []\n      responses:\n        '200':\n          $ref: '#/components/responses/GetUsers'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '402':\n          $ref: '#/components/responses/PaymentRequired'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '422':\n          $ref: '#/components/responses/Unprocessable'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n    post:\n      tags:\n        - Users\n      operationId: usersAdd\n      summary: Create user\n      description: Create user\n      parameters:\n        - $ref: '#/components/parameters/raw'\n        - $ref: '#/components/parameters/consumerId'\n        - $ref: '#/components/parameters/applicationId'\n        - $ref: '#/components/parameters/serviceId'\n      security:\n        - apiKey: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n      responses:\n        '201':\n          $ref: '#/components/responses/CreateUser'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '402':\n          $ref: '#/components/responses/PaymentRequired'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '422':\n          $ref: '#/components/responses/Unprocessable'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n  '/crm/users/{id}':\n    get:\n      tags:\n        - Users\n      operationId: usersOne\n      summary: Get user\n      description: Get user\n      parameters:\n        - $ref: '#/components/parameters/id'\n        - $ref: '#/components/parameters/consumerId'\n        - $ref: '#/components/parameters/applicationId'\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/raw'\n      security:\n        - apiKey: []\n      responses:\n        '200':\n          $ref: '#/components/responses/GetUser'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '402':\n          $ref: '#/components/responses/PaymentRequired'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '422':\n          $ref: '#/components/responses/Unprocessable'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n    patch:\n      tags:\n        - Users\n      operationId: usersUpdate\n      summary: Update user\n      description: Update user\n      parameters:\n        - $ref: '#/components/parameters/id'\n        - $ref: '#/components/parameters/consumerId'\n        - $ref: '#/components/parameters/applicationId'\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/raw'\n      security:\n        - apiKey: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n      responses:\n        '200':\n          $ref: '#/components/responses/UpdateUser'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '402':\n          $ref: '#/components/responses/PaymentRequired'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '422':\n          $ref: '#/components/responses/Unprocessable'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n    delete:\n      tags:\n        - Users\n      operationId: usersDelete\n      summary: Delete user\n      description: Delete user\n      parameters:\n        - $ref: '#/components/parameters/id'\n        - $ref: '#/components/parameters/consumerId'\n        - $ref: '#/components/parameters/applicationId'\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/raw'\n      security:\n        - apiKey: []\n      responses:\n        '200':\n          $ref: '#/components/responses/DeleteUser'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '402':\n          $ref: '#/components/responses/PaymentRequired'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '422':\n          $ref: '#/components/responses/Unprocessable'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n  /crm/activities:\n    get:\n      tags:\n        - Activities\n      x-graphql-field-name: activities\n      operationId: activitiesAll\n      summary: List activities\n      description: List activities\n      parameters:\n        - $ref: '#/components/parameters/raw'\n        - $ref: '#/components/parameters/consumerId'\n        - $ref: '#/components/parameters/applicationId'\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/cursor'\n        - $ref: '#/components/parameters/limit'\n      security:\n        - apiKey: []\n      responses:\n        '200':\n          $ref: '#/components/responses/GetActivitiesResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '402':\n          $ref: '#/components/responses/PaymentRequired'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '422':\n          $ref: '#/components/responses/Unprocessable'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n    post:\n      tags:\n        - Activities\n      operationId: activitiesAdd\n      summary: Create activity\n      description: Create activity\n      parameters:\n        - $ref: '#/components/parameters/raw'\n        - $ref: '#/components/parameters/consumerId'\n        - $ref: '#/components/parameters/applicationId'\n        - $ref: '#/components/parameters/serviceId'\n      security:\n        - apiKey: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Activity'\n      responses:\n        '201':\n          $ref: '#/components/responses/CreateActivityResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '402':\n          $ref: '#/components/responses/PaymentRequired'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '422':\n          $ref: '#/components/responses/Unprocessable'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n  '/crm/activities/{id}':\n    get:\n      tags:\n        - Activities\n      operationId: activitiesOne\n      summary: Get activity\n      description: Get activity\n      parameters:\n        - $ref: '#/components/parameters/id'\n        - $ref: '#/components/parameters/consumerId'\n        - $ref: '#/components/parameters/applicationId'\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/raw'\n      security:\n        - apiKey: []\n      responses:\n        '200':\n          $ref: '#/components/responses/GetActivityResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '402':\n          $ref: '#/components/responses/PaymentRequired'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '422':\n          $ref: '#/components/responses/Unprocessable'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n    patch:\n      tags:\n        - Activities\n      operationId: activitiesUpdate\n      summary: Update activity\n      description: Update activity\n      parameters:\n        - $ref: '#/components/parameters/id'\n        - $ref: '#/components/parameters/consumerId'\n        - $ref: '#/components/parameters/applicationId'\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/raw'\n      security:\n        - apiKey: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Activity'\n      responses:\n        '200':\n          $ref: '#/components/responses/UpdateActivityResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '402':\n          $ref: '#/components/responses/PaymentRequired'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '422':\n          $ref: '#/components/responses/Unprocessable'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n    delete:\n      tags:\n        - Activities\n      operationId: activitiesDelete\n      summary: Delete activity\n      description: Delete activity\n      parameters:\n        - $ref: '#/components/parameters/id'\n        - $ref: '#/components/parameters/consumerId'\n        - $ref: '#/components/parameters/applicationId'\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/raw'\n      security:\n        - apiKey: []\n      responses:\n        '200':\n          $ref: '#/components/responses/DeleteActivityResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '402':\n          $ref: '#/components/responses/PaymentRequired'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '422':\n          $ref: '#/components/responses/Unprocessable'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n"
		}
	},
	"Error": "panic: runtime error: invalid memory address or nil pointer dereference"
}