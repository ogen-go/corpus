{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/lucas-a-pelegrino/node-bloodboiler"
		},
		"file": {
			"name": "swagger.json",
			"path": "src/config/swagger/swagger.json",
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"title\": \"Node Bloodboiler\",\n    \"version\": \"v2.0.0\",\n    \"description\": \"A API boilerplate built on top of expressJS\",\n    \"license\": {\n      \"name\": \"MIT\",\n      \"url\": \"https://opensource.org/licenses/MIT\"\n    }\n  },\n  \"servers\": [\n    {\n      \"url\": \"http://localhost:3000/api/v1\",\n      \"description\": \"Development Environment - v1\"\n    }\n  ],\n  \"externalDocs\": {\n    \"url\": \"https://documenter.getpostman.com/view/2660803/S1TN61BV\",\n    \"description\": \"Postman\"\n  },\n  \"tags\": [\n    {\n      \"name\": \"Auth\"\n    },\n    {\n      \"name\": \"User\"\n    }\n  ],\n  \"paths\": {\n    \"/auth/register\": {\n      \"post\": {\n        \"summary\": \"User's self registration\",\n        \"description\": \"User's self registration\",\n        \"tags\": [\"Auth\"],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\"\n                  },\n                  \"email\": {\n                    \"type\": \"string\"\n                  },\n                  \"password\": {\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"example\": {\n                \"name\": \"John Doe\",\n                \"email\": \"johndoe@ioasys.com.br\",\n                \"password\": \"P@ssw0rd\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Succesfully register an user\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                },\n                \"example\": {\n                  \"_id\": \"5e98e39dc0a02022f2d02b4c\",\n                  \"passwordResetToken\": null,\n                  \"name\": \"John Doe\",\n                  \"email\": \"johndoe@ioasys.com.br\",\n                  \"createdAt\": \"2020-04-16T23:00:45.179Z\",\n                  \"updatedAt\": \"2020-04-16T23:41:38.451Z\"\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"Returned if the email sent on body is already taken\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                },\n                \"example\": {\n                  \"name\": \"ApplicationError\",\n                  \"messages\": [\"Email already in use\"]\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/auth/signin\": {\n      \"post\": {\n        \"tags\": [\"Auth\"],\n        \"summary\": \"Authenticates the user\",\n        \"description\": \"Authenticates the user\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"email\": {\n                    \"type\": \"string\"\n                  },\n                  \"password\": {\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"example\": {\n                \"email\": \"johndoe@ioasys.com.br\",\n                \"password\": \"P@ssw0rd\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully authenticates the user\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"token\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                },\n                \"example\": {\n                  \"accessToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOnsiaWQiOiI1ZmU1MjYzZWRkMTkxNTAxMjRjZWQxYWEiLCJuYW1lIjoiSm9obiBEb2UiLCJlbWFpbCI6ImpvaG5kb2VAZXhhbXBsZS5jb20ifSwiaWF0IjoxNjA4ODUzNDA5fQ.WjEIkJohurkk7wHDFxPxAitEE-rXkP7_4VqhJASH_lE\",\n                  \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOnsiaWQiOiI1ZmU1MjYzZWRkMTkxNTAxMjRjZWQxYWEifSwiaWF0IjoxNjA4ODUzNDA5fQ.B8vGNL4jl_twji4iRyHW83C-Jc9ry-iyNnhXd6nKH3g\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"The password used is invalid\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                },\n                \"example\": {\n                  \"name\": \"ApplicationError\",\n                  \"messages\": [\"Invalid Password\"]\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"No user was found for the email used\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                },\n                \"example\": {\n                  \"name\": \"ApplicationError\",\n                  \"messages\": [\"User Not Found\"]\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/auth/forgot-password\": {\n      \"post\": {\n        \"tags\": [\"Auth\"],\n        \"summary\": \"Sends an email to reset the users's password\",\n        \"description\": \"Sends an email to reset the users's password\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"email\": {\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"example\": {\n                \"email\": \"johndoe@ioasys.com.br\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"204\": {\n            \"description\": \"An email was sent for the email address provided\"\n          },\n          \"404\": {\n            \"description\": \"No user was found for the email used\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                },\n                \"example\": {\n                  \"name\": \"ApplicationError\",\n                  \"messages\": [\"User Not Found\"]\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/auth/{token}/reset-password\": {\n      \"post\": {\n        \"tags\": [\"Auth\"],\n        \"summary\": \"Resets the user's password with the new password provided\",\n        \"description\": \"Resets the user's password with the new password provided\",\n        \"parameters\": [\n          {\n            \"name\": \"token\",\n            \"in\": \"path\",\n            \"description\": \"Password Reset Token\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": {\n              \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZTk5M2E2ZjI0Yzc1ODZjNmFjYmIxNDYiLCJpYXQiOjE1ODcxOTE3NzYsImV4cCI6MTU4NzE5MzU3Nn0.ccInU_Rv-NraFAZSHnp7rQnTg_PQwgYmciFYwvopjy8\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"The password was updated and the user can try to authenticate again\"\n          },\n          \"401\": {\n            \"description\": \"The token provided has expired\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                },\n                \"example\": {\n                  \"name\": \"ApplicationError\",\n                  \"messages\": [\"Token Expired\"]\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"No user was found for the token provided\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                },\n                \"example\": {\n                  \"name\": \"ApplicationError\",\n                  \"messages\": [\"User Not Found\"]\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/users/\": {\n      \"summary\": \"Users CRUD\",\n      \"get\": {\n        \"description\": \"Returns a list of all users registered with pagination\",\n        \"summary\": \"Returns a list of all users registered with pagination\",\n        \"security\": [{ \"BearerToken\": [] }],\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"page\",\n            \"schema\": {\n              \"type\": \"integer\"\n            },\n            \"description\": \"The page to be returned\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"perPage\",\n            \"schema\": {\n              \"type\": \"integer\"\n            },\n            \"description\": \"The number of documents to limit per page\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"sortBy\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Sort order of the documents returned, ex: createdAt:desc. Format: attribute:value -\u003e ['asc', 'desc']\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"List of users with metadata details\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"metadata\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"total\": {\n                          \"type\": \"integer\"\n                        },\n                        \"currentPage\": {\n                          \"type\": \"integer\"\n                        },\n                        \"totalPages\": {\n                          \"type\": \"integer\"\n                        }\n                      }\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/User\"\n                      }\n                    }\n                  }\n                },\n                \"example\": {\n                  \"metadata\": {\n                    \"total\": 1,\n                    \"currentPage\": 1,\n                    \"totalPages\": 1\n                  },\n                  \"data\": [\n                    {\n                      \"_id\": \"5e98e39dc0a02022f2d02b4c\",\n                      \"passwordResetToken\": null,\n                      \"name\": \"John Doe\",\n                      \"email\": \"johndoe@ioasys.com.br\",\n                      \"createdAt\": \"2020-04-16T23:00:45.179Z\",\n                      \"updatedAt\": \"2020-04-16T23:41:38.451Z\"\n                    }\n                  ]\n                }\n              }\n            }\n          },\n          \"204\": {\n            \"description\": \"No users were found for the used criteria\"\n          },\n          \"401\": {\n            \"description\": \"The authorization header is missing or the token is invalid\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                },\n                \"example\": {\n                  \"name\": \"ApplicationError\",\n                  \"messages\": [\"Invalid Token\"]\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\"User\"]\n      },\n      \"post\": {\n        \"summary\": \"Creates an user\",\n        \"description\": \"Creates an user in the application\",\n        \"security\": [{ \"BearerToken\": [] }],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\"\n                  },\n                  \"email\": {\n                    \"type\": \"string\"\n                  },\n                  \"password\": {\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"example\": {\n                \"name\": \"John Doe\",\n                \"email\": \"johndoe@ioasys.com.br\",\n                \"password\": \"P@ssw0rd\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Succesfully creates a new user\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                },\n                \"example\": {\n                  \"_id\": \"5e98e39dc0a02022f2d02b4c\",\n                  \"passwordResetToken\": null,\n                  \"name\": \"John Doe\",\n                  \"email\": \"johndoe@ioasys.com.br\",\n                  \"createdAt\": \"2020-04-16T23:00:45.179Z\",\n                  \"updatedAt\": \"2020-04-16T23:41:38.451Z\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"The authorization header is missing or the token is invalid\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                },\n                \"example\": {\n                  \"name\": \"ApplicationError\",\n                  \"messages\": [\"Invalid Token\"]\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"The email used is already registered\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                },\n                \"example\": {\n                  \"name\": \"ApplicationError\",\n                  \"messages\": [\"Email already in use\"]\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\"User\"]\n      }\n    },\n    \"/users/{id}\": {\n      \"parameters\": [\n        {\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"description\": \"User ID\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n      ],\n      \"get\": {\n        \"description\": \"Returns the user's data\",\n        \"summary\": \"Returns the user's data\",\n        \"security\": [{ \"BearerToken\": [] }],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Return a user based on its id\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                },\n                \"example\": {\n                  \"_id\": \"5e98e39dc0a02022f2d02b4c\",\n                  \"passwordResetToken\": null,\n                  \"name\": \"John Doe\",\n                  \"email\": \"johndoe@ioasys.com.br\",\n                  \"createdAt\": \"2020-04-16T23:00:45.179Z\",\n                  \"updatedAt\": \"2020-04-16T23:41:38.451Z\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"The authorization header is missing or the token is invalid\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                },\n                \"example\": {\n                  \"name\": \"ApplicationError\",\n                  \"messages\": [\"Invalid Token\"]\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"No user was found for the id\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                },\n                \"example\": {\n                  \"name\": \"ApplicationError\",\n                  \"messages\": [\"User Not Found\"]\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\"User\"]\n      },\n      \"patch\": {\n        \"description\": \"Updates the user's information\",\n        \"summary\": \"Updates the user's information\",\n        \"security\": [{ \"BearerToken\": [] }],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\"\n                  },\n                  \"email\": {\n                    \"type\": \"string\"\n                  },\n                  \"password\": {\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"example\": {\n                \"name\": \"John Doe\",\n                \"email\": \"johndoe@ioasys.com.br\",\n                \"password\": \"P@ssw0rd\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Succesfully updated an user\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                },\n                \"example\": {\n                  \"_id\": \"5e98e39dc0a02022f2d02b4c\",\n                  \"passwordResetToken\": null,\n                  \"name\": \"John Doe\",\n                  \"email\": \"johndoe@ioasys.com.br\",\n                  \"createdAt\": \"2020-04-16T23:00:45.179Z\",\n                  \"updatedAt\": \"2020-04-16T23:41:38.451Z\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"The authorization header is missing or the token is invalid\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                },\n                \"example\": {\n                  \"name\": \"ApplicationError\",\n                  \"messages\": [\"Invalid Token\"]\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"No user was found for the id\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                },\n                \"example\": {\n                  \"name\": \"ApplicationError\",\n                  \"messages\": [\"User Not Found\"]\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\"User\"]\n      },\n      \"delete\": {\n        \"summary\": \"Deletes the user from the application\",\n        \"description\": \"Deletes the user from the application\",\n        \"security\": [{ \"BearerToken\": [] }],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"No Content\"\n          },\n          \"401\": {\n            \"description\": \"The authorization header is missing or the token is invalid\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                },\n                \"example\": {\n                  \"name\": \"ApplicationError\",\n                  \"messages\": [\"Invalid Token\"]\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"No user was found for the id\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                },\n                \"example\": {\n                  \"name\": \"ApplicationError\",\n                  \"messages\": [\"User Not Found\"]\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\"User\"]\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"User\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"_id\": {\n            \"type\": \"string\"\n          },\n          \"passwordResetToken\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"createdAt\": {\n            \"type\": \"string\"\n          },\n          \"updatedAt\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ErrorResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"messages\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      }\n    },\n    \"securitySchemes\": {\n      \"BearerToken\": {\n        \"type\": \"http\",\n        \"scheme\": \"bearer\",\n        \"bearerFormat\": \"JWT\",\n        \"description\": \"Bearer token to authenticate the user\"\n      }\n    }\n  }\n}\n"
		}
	},
	"Error": "panic: runtime error: index out of range [0] with length 0"
}