{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi/shipstation/openapi.yaml",
			"byteSize": 268075,
			"content": "openapi: 3.0.0\ninfo:\n  title: ShipStation Developer Portal\n  x-ballerina-display:\n    label: ShipStation\n    iconPath: \"icon.png\"\n  description: |\n    This is a generated connector for [ShipStation API v1.0](https://www.shipstation.com/docs/api/) OpenAPI specification.\n    ShipStation strives to streamline shipping for online sellers, no matter where they sell their products online.\n  contact: {}\n  x-ballerina-init-description: |\n    The connector initialization requires setting the API credentials. \n    Create a [ShipStation account](https://www.shipstation.com/step1/) and obtain tokens by following [this guide](https://www.shipstation.com/docs/api/requirements/#authentication).\n  version: \"1.0\"\n  \nservers:\n  - url: https://ssapi.shipstation.com/\n    variables: {}\n \npaths:\n  /accounts/registeraccount:\n    post:\n      tags:\n        - Accounts\n      summary: Creates a new ShipStation account and generates an apiKey and apiSecret to be used by the newly created account.\n      description: |-\n        Creates a new ShipStation account and generates an apiKey and apiSecret to be used by the newly created account. PLEASE NOTE: This endpoint does not require API key and API Secret credentials.  The Authorization header can be left off. Use of this specific endpoint requires approval, and is meant only for direct partners of ShipStation. This is the only endpoint to require approval. All other endpoints listed in this document can be accessed by submitting proper authorization credentials in the header of the request. To become a direct partner of ShipStation, or to request more information on becoming a direct partner, we recommend reaching out to our Partners and Integrations team here: https://info.shipstation.com/become-a-partner-api-and-custom-store-integrations\n        The body of this request has the following attributes:\n        Name               |Data Type          |Description\n        -------------------|-------------------|-------------------\n        ``firstName``  | string, required | First Name\n        ``lastName`` | string, required | Last Name\n        ``email`` | string, required | Email address. This will also be the username of the account.\n        ``password`` | string, required | Password to set for account access.\n        ``companyName`` | string, optional | Name of Company.\n        ``addr1`` | string, optional | Company Address - Street 1\n        ``addr2`` | string, optional | Company Address - Street 2\n        ``city`` | string, optional | Company Address - City\n        ``state`` | string, optional | Company Address - State \n        ``zip`` | string, optional | Company Address - Zip Code\n        ``countryCode`` |string, optional | Company Address - Country.  Please use a 2-character country code.\n        ``phone`` | string, optional | Company Phone number.\n      operationId: RegisterAccount\n      parameters:\n        - name: Content-Type\n          in: header\n          description: \"\"\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n            example: application/json\n      requestBody:\n        description: \"\"\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RegisterAccountrequest\"\n            example: |-\n              {\n                \"firstName\": \"John\",\n                \"lastName\": \"Smith\",\n                \"email\": \"jsmithtest@gmail.com\",\n                \"password\": \"testpw1234\",\n                \"shippingOriginCountryCode\": \"US\",\n                \"companyName\": \"Droid Repair LLC\",\n                \"addr1\": \"542 Midichlorian Rd.\",\n                \"addr2\": \"\",\n                \"city\": \"Austin\",\n                \"state\": \"TX\",\n                \"zip\": \"78703\",\n                \"countryCode\": \"US\",\n                \"phone\": \"5124111234\"\n              }\n        required: true\n      responses:\n        \"200\":\n          description: \"\"\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RegisterAccountresponse\"\n              example:\n                message: ShipStation account created.\n                sellerId: 123456\n                success: true\n                apiKey: abcdt9845hjmgfklj3498gkljdkuyekl\n                apiSecret: 1234iou983lkj8mnxgfwu509hkhdy7u3\n      deprecated: false\n  /accounts/listtags:\n    get:\n      tags:\n        - Accounts\n      summary: Lists all tags defined for this account.\n      operationId: ListTags\n      parameters: []\n      responses:\n        \"200\":\n          description: \"\"\n          headers: {}\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/ListTagsresponse\"\n                description: \"\"\n              example:\n                - tagId: 8362\n                  name: Backorder\n                  color: \"#800080\"\n                - tagId: 8324\n                  name: Canada\n                  color: \"#ff0000\"\n                - tagId: 8336\n                  name: Fragile\n                  color: \"#33CCCC\"\n                - tagId: 8221\n                  name: Repeat Buyer\n                  color: \"#CC99FF\"\n      deprecated: false\n  /carriers:\n    get:\n      tags:\n        - Carriers\n      summary: Lists all shipping providers connected to this account.\n      operationId: ListCarriers\n      parameters: []\n      responses:\n        \"200\":\n          description: \"\"\n          headers: {}\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/ListCarriersresponse\"\n                description: \"\"\n              example:\n                - name: Stamps.com\n                  code: stamps_com\n                  accountNumber: SS123\n                  requiresFundedAccount: true\n                  balance: 24.27\n                  nickname: \"null\"\n                  shippingProviderId: 12345\n                  primary: true\n                - name: Stamps.com\n                  code: stamps_com\n                  accountNumber: SS1234\n                  requiresFundedAccount: true\n                  balance: 2400.27\n                  nickname: Stamps.com 2\n                  shippingProviderId: 12346\n                  primary: false\n                - name: UPS\n                  code: ups\n                  accountNumber: ABCR80\n                  requiresFundedAccount: false\n                  balance: 0\n                  nickname: \"null\"\n                  shippingProviderId: 12347\n                  primary: true\n                - name: FedEx\n                  code: fedex\n                  accountNumber: \"297929999\"\n                  requiresFundedAccount: false\n                  balance: 0\n                  nickname: SS\n                  shippingProviderId: 12348\n                  primary: true\n                - name: Endicia\n                  code: endicia\n                  accountNumber: \"913999\"\n                  requiresFundedAccount: true\n                  balance: 0\n                  nickname: \"null\"\n                  shippingProviderId: 12349\n                  primary: true\n      deprecated: false\n  /carriers/getcarrier:\n    get:\n      tags:\n        - Carriers\n      summary: Retrieves the shipping carrier account details for the specified carrierCode. Use this method to determine a carrier's account balance.\n      operationId: GetCarrier\n      parameters:\n        - name: carrierCode\n          in: query\n          description: The code for the carrier account to retrieve.\n          required: true\n          schema:\n            type: string\n            example: stamps_com\n      responses:\n        \"200\":\n          description: \"\"\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetCarrierresponse\"\n              example:\n                name: Stamps.com\n                code: stamps_com\n                accountNumber: SS123\n                requiresFundedAccount: true\n                balance: 24.27\n                nickname: null\n                shippingProviderId: 12345\n                primary: true\n      deprecated: false\n  /carriers/addfunds:\n    post:\n      tags:\n        - Carriers\n      summary: Adds funds to a carrier account using the payment information on file.\n      description: |-\n        Adds funds to a carrier account using the payment information on file. The body of this request should specify the following attributes:\n        Name               |Data Type          |Description\n        -------------------|-------------------|-------------------\n         ``carrierCode`` | string, required |  The carrier to add funds to.\n         ``amount`` | number, required | The dollar amount to add to the account.  The minimum value that can be added is $10.00.  The maximum value is $10,000.00.\n      operationId: AddFunds\n      parameters: []\n      requestBody:\n        description: \"\"\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AddFundsrequest\"\n            example: |-\n              {\n                \"carrierCode\": \"fedex\",\n                \"amount\": 20.00\n              }\n        required: true\n      responses:\n        \"200\":\n          description: \"\"\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AddFundsresponse\"\n              example:\n                name: Stamps.com\n                code: stamps_com\n                accountNumber: SS123\n                requiresFundedAccount: true\n                balance: 24.14\n      deprecated: false\n  /carriers/listpackages:\n    get:\n      tags:\n        - Carriers\n      summary: Retrieves a list of packages for the specified carrier\n      operationId: ListPackages\n      parameters:\n        - name: carrierCode\n          in: query\n          description: The carrier's code\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          headers: {}\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/ListPackagesresponse\"\n                description: \"\"\n              example:\n                - carrierCode: express_1\n                  code: cubic\n                  name: Cubic\n                  domestic: true\n                  international: false\n                - carrierCode: express_1\n                  code: dvd_flat_rate_box\n                  name: DVD Flat Rate Box\n                  domestic: false\n                  international: true\n                - carrierCode: express_1\n                  code: flat_rate_envelope\n                  name: Flat Rate Envelope\n                  domestic: true\n                  international: true\n                - carrierCode: express_1\n                  code: flat_rate_legal_envelope\n                  name: Flat Rate Legal Envelope\n                  domestic: true\n                  international: true\n                - carrierCode: express_1\n                  code: flat_rate_padded_envelope\n                  name: Flat Rate Padded Envelope\n                  domestic: true\n                  international: true\n                - carrierCode: express_1\n                  code: large_envelope_or_flat\n                  name: Large Envelope or Flat\n                  domestic: true\n                  international: true\n                - carrierCode: express_1\n                  code: large_flat_rate_box\n                  name: Large Flat Rate Box\n                  domestic: true\n                  international: true\n                - carrierCode: express_1\n                  code: large_package\n                  name: Large Package (any side \u003e 12\")\n                  domestic: true\n                  international: true\n                - carrierCode: express_1\n                  code: large_video_flat_rate_box\n                  name: Large Video Flat Rate Box\n                  domestic: false\n                  international: true\n                - carrierCode: express_1\n                  code: letter\n                  name: Letter\n                  domestic: true\n                  international: true\n                - carrierCode: express_1\n                  code: medium_flat_rate_box\n                  name: Medium Flat Rate Box\n                  domestic: true\n                  international: true\n                - carrierCode: express_1\n                  code: package\n                  name: Package\n                  domestic: true\n                  international: true\n                - carrierCode: express_1\n                  code: regional_rate_box_a\n                  name: Regional Rate Box A\n                  domestic: true\n                  international: false\n                - carrierCode: express_1\n                  code: regional_rate_box_b\n                  name: Regional Rate Box B\n                  domestic: true\n                  international: false\n                - carrierCode: express_1\n                  code: regional_rate_box_c\n                  name: Regional Rate Box C\n                  domestic: true\n                  international: false\n                - carrierCode: express_1\n                  code: small_flat_rate_box\n                  name: Small Flat Rate Box\n                  domestic: true\n                  international: true\n                - carrierCode: express_1\n                  code: thick_envelope\n                  name: Thick Envelope\n                  domestic: true\n                  international: true\n      deprecated: false\n  /carriers/listservices:\n    get:\n      tags:\n        - Carriers\n      summary: Retrieves the list of available shipping services provided by the specified carrier\n      operationId: ListServices\n      parameters:\n        - name: carrierCode\n          in: query\n          description: The carrier's code\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          headers: {}\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/ListServicesresponse\"\n                description: \"\"\n              example:\n                - carrierCode: fedex\n                  code: fedex_ground\n                  name: FedEx Ground®\n                  domestic: true\n                  international: false\n                - carrierCode: fedex\n                  code: fedex_home_delivery\n                  name: FedEx Home Delivery®\n                  domestic: true\n                  international: false\n                - carrierCode: fedex\n                  code: fedex_2day\n                  name: FedEx 2Day®\n                  domestic: true\n                  international: false\n                - carrierCode: fedex\n                  code: fedex_2day_am\n                  name: FedEx 2Day® A.M.\n                  domestic: true\n                  international: false\n                - carrierCode: fedex\n                  code: fedex_express_saver\n                  name: FedEx Express Saver®\n                  domestic: true\n                  international: false\n                - carrierCode: fedex\n                  code: fedex_standard_overnight\n                  name: FedEx Standard Overnight®\n                  domestic: true\n                  international: false\n                - carrierCode: fedex\n                  code: fedex_priority_overnight\n                  name: FedEx Priority Overnight®\n                  domestic: true\n                  international: false\n                - carrierCode: fedex\n                  code: fedex_first_overnight\n                  name: FedEx First Overnight®\n                  domestic: true\n                  international: false\n                - carrierCode: fedex\n                  code: fedex_1_day_freight\n                  name: FedEx 1 Day® Freight\n                  domestic: true\n                  international: false\n                - carrierCode: fedex\n                  code: fedex_2_day_freight\n                  name: FedEx 2 Day® Freight\n                  domestic: true\n                  international: false\n                - carrierCode: fedex\n                  code: fedex_3_day_freight\n                  name: FedEx 3 Day® Freight\n                  domestic: true\n                  international: false\n                - carrierCode: fedex\n                  code: fedex_first_overnight_freight\n                  name: FedEx First Overnight® Freight\n                  domestic: true\n                  international: false\n                - carrierCode: fedex\n                  code: fedex_ground_international\n                  name: FedEx Ground® International\n                  domestic: false\n                  international: true\n                - carrierCode: fedex\n                  code: fedex_international_economy\n                  name: FedEx International Economy®\n                  domestic: false\n                  international: true\n                - carrierCode: fedex\n                  code: fedex_international_priority\n                  name: FedEx International Priority®\n                  domestic: false\n                  international: true\n                - carrierCode: fedex\n                  code: fedex_international_first\n                  name: FedEx International First®\n                  domestic: false\n                  international: true\n                - carrierCode: fedex\n                  code: fedex_europe_first\n                  name: FedEx Europe First®\n                  domestic: false\n                  international: true\n                - carrierCode: fedex\n                  code: fedex_international_economy_freight\n                  name: FedEx International Economy® Freight\n                  domestic: false\n                  international: true\n                - carrierCode: fedex\n                  code: fedex_international_priority_freight\n                  name: FedEx International Priority® Freight\n                  domestic: false\n                  international: true\n      deprecated: false\n  /customers/{customerId}:\n    get:\n      tags:\n        - Customers\n      summary: Get Customer\n      description: \"\"\n      operationId: GetCustomer\n      parameters:\n        - name: customerId\n          in: path\n          description: The system generated identifier for the Customer.\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: integer\n            example: 12345678\n      responses:\n        \"200\":\n          description: \"\"\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetCustomerresponse\"\n              example:\n                customerId: 12345678\n                createDate: '\"2014-11-18T10:33:01.19\"'\n                modifyDate: '\"2014-11-18T10:33:01.19\"'\n                name: Cam Newton\n                company: Test Company\n                street1: 123 War Eagle Lane\n                street2: \"\"\n                city: Auburn\n                state: AL\n                postalCode: \"36830\"\n                countryCode: US\n                phone: 555-555-5555\n                email: supermancam@example.com\n                addressVerified: Verified\n                marketplaceUsernames:\n                  - customerUserId: 67195020\n                    customerId: 12345678\n                    createDate: '\"2015-04-27T12:35:03.83\"'\n                    modifyDate: '\"2015-05-14T08:16:15.27\"'\n                    marketplaceId: 0\n                    marketplace: ShipStation\n                    username: camtheman@gmail.com\n                  - customerUserId: 37568588\n                    customerId: 12345678\n                    createDate: '\"2014-11-18T10:33:01.197\"'\n                    modifyDate: '\"2014-11-18T10:33:01.197\"'\n                    marketplaceId: 36\n                    marketplace: WooCommerce\n                    username: supercam@example.com\n                  - customerUserId: 46038940\n                    customerId: 12345678\n                    createDate: \"null\"\n                    modifyDate: \"null\"\n                    marketplaceId: 67\n                    marketplace: TradeGecko\n                    username: camtheman@gmail.com\n                tags:\n                  - tagId: 1234\n                    name: Expedited\n                  - tagId: 9725\n                    name: 00 BULK ORDERED\n      deprecated: false\n  /customers:\n    get:\n      tags:\n        - Customers\n      summary: Obtains a list of customers that match the specified criteria.\n      operationId: ListCustomers\n      parameters:\n        - name: stateCode\n          in: query\n          description: Returns customers that reside in the specified stateCode.\n          schema:\n            type: string\n        - name: countryCode\n          in: query\n          description: Returns customers that reside in the specified countryCode.\n          schema:\n            type: string\n        - name: marketplaceId\n          in: query\n          description: Returns customers that purchased items from the specified marketplaceId.\n          schema:\n            type: integer\n        - name: tagId\n          in: query\n          description: Returns customers that have been tagged with the specified tagId.\n          schema:\n            type: integer\n        - name: sortBy\n          in: query\n          description: Sorts the order of the response based off the specified value.\n          schema:\n            $ref: \"#/components/schemas/sortBy\"\n        - name: sortDir\n          in: query\n          description: Sets the direction of the sort order.\n          schema:\n            $ref: \"#/components/schemas/sortDir\"\n        - name: page\n          in: query\n          description: Page number.\n          schema:\n            type: integer\n        - name: pageSize\n          in: query\n          description: Requested page size. Max value is 500.\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: \"\"\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListCustomersResponse\"\n              example:\n                customers:\n                  - customerId: 12345678\n                    createDate: '\"2014-11-18T10:33:01.19\"'\n                    modifyDate: '\"2014-11-18T10:33:01.19\"'\n                    name: Cam Newton\n                    company: Test Company\n                    street1: 123 War Eagle Lane\n                    street2: \"\"\n                    city: Auburn\n                    state: AL\n                    postalCode: \"36830\"\n                    countryCode: US\n                    phone: 555-555-5555\n                    email: supermancam@example.com\n                    addressVerified: Verified\n                    marketplaceUsernames:\n                      - customerUserId: 67195020\n                        customerId: 12345678\n                        createDate: '\"2015-04-27T12:35:03.83\"'\n                        modifyDate: '\"2015-05-14T08:16:15.27\"'\n                        marketplaceId: 0\n                        marketplace: ShipStation\n                        username: camtheman@gmail.com\n                      - customerUserId: 37568588\n                        customerId: 12345678\n                        createDate: '\"2014-11-18T10:33:01.197\"'\n                        modifyDate: '\"2014-11-18T10:33:01.197\"'\n                        marketplaceId: 36\n                        marketplace: WooCommerce\n                        username: supercam@example.com\n                      - customerUserId: 46038940\n                        customerId: 12345678\n                        createDate: \"null\"\n                        modifyDate: \"null\"\n                        marketplaceId: 67\n                        marketplace: TradeGecko\n                        username: camtheman@gmail.com\n                    tags:\n                      - tagId: 1234\n                        name: Expedited\n                      - tagId: 9725\n                        name: 00 BULK ORDERED\n                  - customerId: 87654321\n                    createDate: '\"2015-06-21T12:48:07.54\"'\n                    name: Bo Jackson\n                    company: Test Company\n                    street1: 456 Heisman Ave\n                    street2: \"\"\n                    city: Auburn\n                    state: AL\n                    postalCode: \"36830\"\n                    countryCode: US\n                    phone: 555-555-5555\n                    email: boknows@example.com\n                    addressVerified: Verified\n                    marketplaceUsernames:\n                      - customerUserId: 77215410\n                        customerId: 87654321\n                        createDate: '\"2015-08-27T14:36:05.75\"'\n                        modifyDate: '\"2015-09-01T09:18:25.31\"'\n                        marketplaceId: 0\n                        marketplace: ShipStation\n                        username: boknows@gmail.com\n                      - customerUserId: 43759100\n                        customerId: 87654321\n                        createDate: '\"2015-07-05T11:38:01.197\"'\n                        modifyDate: '\"2015-07-05T11:38:01.197\"'\n                        marketplaceId: 36\n                        marketplace: WooCommerce\n                        username: boknows@example.com\n                      - customerUserId: 81565241\n                        customerId: 87654321\n                        createDate: \"null\"\n                        modifyDate: \"null\"\n                        marketplaceId: 67\n                        marketplace: TradeGecko\n                        username: bo@gmail.com\n                    tags:\n                      - tagId: 1234\n                        name: Expedited\n                      - tagId: 9725\n                        name: 00 BULK ORDERED\n                total: 2\n                page: 1\n                pages: 1\n      deprecated: false\n  /fulfillments:\n    get:\n      tags:\n        - List Fulfillments with parameters\n      description: |-\n        Obtains a list of fulfillments that match the specified criteria.  Please note the following:\n        - Orders that have been marked as shipped either through the UI or the API will appear in the response as they are considered fulfillments.\n        All of the available filters are optional.  They do not need to be included in the URL.  If you do include them, here's what the URL may look like:\n        Url format with filters:\n        ```\n        fulfillments?fulfillmentId={fulfillmentId}\n        \u0026orderId={orderId}\n        \u0026orderNumber={orderNumber}\n        \u0026trackingNumber={trackingNumber}\n        \u0026recipientName={recipientName}\n        \u0026createDateStart={createDateStart}\n        \u0026createDateEnd={createDateEnd}\n        \u0026shipDateStart={shipDateStart}\n        \u0026shipDateEnd={shipDateEnd}\n        \u0026sortBy={sortBy}\n        \u0026sortDir={sortDir}\n        \u0026page={page}\n        \u0026pageSize={pageSize}\n        ```\n      operationId: ListFulfillments\n      parameters:\n        - name: fulfillmentId\n          in: query\n          description: Returns the fulfillment with the specified fulfillment ID.\n          schema:\n            type: integer\n        - name: orderId\n          in: query\n          description: Returns fulfillments whose orders have the specified order ID.\n          schema:\n            type: integer\n        - name: orderNumber\n          in: query\n          description: Returns fulfillments whose orders have the specified order number.\n          schema:\n            type: string\n        - name: trackingNumber\n          in: query\n          description: Returns fulfillments with the specified tracking number.\n          schema:\n            type: string\n        - name: recipientName\n          in: query\n          description: Returns fulfillments shipped to the specified recipient name.\n          schema:\n            type: string\n        - name: createDateStart\n          in: query\n          description: Returns fulfillments created on or after the specified ``createDate``\n          schema:\n            type: string\n            example: \"2015-01-01 00:00:00\"\n        - name: createDateEnd\n          in: query\n          description: Returns fulfillments created on or before the specified ``createDate``\n          schema:\n            type: string\n            example: \"2015-01-08 00:00:00\"\n        - name: shipDateStart\n          in: query\n          description: Returns fulfillments with the ``shipDate`` on or after the specified date\n          schema:\n            type: string\n            example: \"2015-01-01\"\n        - name: shipDateEnd\n          in: query\n          description: Returns fulfillments with the ``shipDate`` on or before the specified date\n          schema:\n            type: string\n            example: \"2015-01-08\"\n        - name: sortBy\n          in: query\n          description: Sort the responses by a set value.  The response will be sorted based off the ascending dates (oldest to most current.)  If left empty, the response will be sorted by ascending ``createDate``.\n          schema:\n            $ref: \"#/components/schemas/sortBy1\"\n        - name: sortDir\n          in: query\n          description: Sets the direction of the sort order.\n          schema:\n            $ref: \"#/components/schemas/sortDir\"\n        - name: page\n          in: query\n          description: page number.\n          schema:\n            type: integer\n        - name: pageSize\n          in: query\n          description: page size.\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: \"\"\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListFulfillmentsResponse\"\n              example:\n                fulfillments:\n                  - fulfillmentId: 33974374\n                    orderId: 191759016\n                    orderNumber: \"101\"\n                    userId: c9f06d74-95de-4263-9b04-e87095cababf\n                    customerEmail: apisupport@shipstation.com\n                    trackingNumber: \"783408231234\"\n                    createDate: \"2016-06-07T08:50:50.067\"\n                    shipDate: \"2016-06-07T00:00:00\"\n                    voidDate: null\n                    deliveryDate: null\n                    carrierCode: USPS\n                    fulfillmentProviderCode: null\n                    fulfillmentServiceCode: null\n                    fulfillmentFee: 0\n                    voidRequested: false\n                    voided: false\n                    marketplaceNotified: true\n                    notifyErrorMessage: null\n                    shipTo:\n                      name: Yoda\n                      company: null\n                      street1: \"3800 N Lamar Blvd # 220\"\n                      street2: null\n                      street3: null\n                      city: AUSTIN\n                      state: TX\n                      postalCode: \"78756\"\n                      country: US\n                      phone: 512-485-4282\n                      residential: null\n                      addressVerified: null\n                  - fulfillmentId: 246310\n                    orderId: 193699927\n                    orderNumber: \"101\"\n                    userId: c9f06d74-95de-4263-9b04-e87095cababf\n                    customerEmail: apisupport@shipstation.com\n                    trackingNumber: \"664756278745\"\n                    createDate: \"2016-06-08T12:54:53.347\"\n                    shipDate: \"2016-06-08T00:00:00\"\n                    voidDate: null\n                    deliveryDate: null\n                    carrierCode: FedEx\n                    fulfillmentProviderCode: null\n                    fulfillmentServiceCode: null\n                    fulfillmentFee: 0\n                    voidRequested: false\n                    voided: false\n                    marketplaceNotified: true\n                    notifyErrorMessage: null\n                    shipTo:\n                      name: Yoda\n                      company: null\n                      street1: \"3800 N Lamar Blvd # 220\"\n                      street2: null\n                      street3: null\n                      city: AUSTIN\n                      state: TX\n                      postalCode: \"78756\"\n                      country: US\n                      phone: 512-485-4282\n                      residential: null\n                      addressVerified: null\n                total: 2\n                page: 1\n                pages: 0\n      deprecated: false\n  /orders/{orderId}:\n    get:\n      tags:\n        - Orders\n      summary: Retrieves a single order from the database.\n      operationId: GetOrder\n      parameters:\n        - name: orderId\n          in: path\n          description: The system generated identifier for the order.\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: integer\n            example: 123456789\n      responses:\n        \"200\":\n          description: \"\"\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetOrderresponse\"\n      deprecated: false\n    delete:\n      tags:\n        - Orders\n      summary: Removes order from ShipStation's UI. Note this is a \"soft\" delete action so the order will still exist in the database, but will be set to ``inactive``\n      operationId: DeleteOrder\n      parameters:\n        - name: orderId\n          in: path\n          description: The system generated identifier for the order.\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: integer\n            example: 123456789\n      responses:\n        \"200\":\n          description: \"\"\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeleteOrderresponse\"\n              example:\n                success: true\n                message: The requested order has been deleted.\n      deprecated: false\n  /orders/addtag:\n    post:\n      tags:\n        - Orders\n      summary: Adds a tag to an order\n      description: |-\n        Adds a tag to an order.  The body of this request should specify the following attributes:\n        Name               |Data Type          |Description\n        -------------------|-------------------|-------------------\n        ``orderId`` | number, required | Identifies the order that will be tagged.\n        ``tagId`` | number, required | Identifies the tag that will be applied to the order.\n      operationId: AddTagToOrder\n      parameters:\n        - name: Content-Type\n          in: header\n          description: \"\"\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n            example: application/json\n      requestBody:\n        description: \"\"\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AddTagtoOrderrequest\"\n            example: |-\n              {\n                \"orderId\": 123456,\n                \"tagId\": 1234\n              }\n        required: true\n      responses:\n        \"200\":\n          description: \"\"\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AddTagtoOrderresponse\"\n              example:\n                success: true\n                message: Tag added successfully.\n      deprecated: false\n  /orders/assignuser:\n    post:\n      tags:\n        - Orders\n      summary: Assigns a user to an order\n      description: |-\n        Assigns a user to an order.  The body of this request should specify the following attributes:\n        Name               |Data Type          |Description\n        -------------------|-------------------|-------------------\n        ``orderIds`` | number, required | Identifies set of orders that will be assigned the user.  Please note that if ANY of the orders within the array are not found, no orders will have a user assigned to them.\n        ``userId`` | number, required | Identifies the user that will be applied to the orders.  It should contain a GUID of the user to be assigned to the array of orders.\n      operationId: AssignUserToOrder\n      parameters:\n        - name: Content-Type\n          in: header\n          description: \"\"\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n            example: application/json\n      requestBody:\n        description: \"\"\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AssignUsertoOrderrequest\"\n            example: |-\n              {\n                \"orderIds\": [\n                  123456789,\n                  12345679\n                  ],\n                \"userId\": \"123456AB-ab12-3c4d-5e67-89f1abc1defa\"\n              }\n        required: true\n      responses:\n        \"200\":\n          description: \"\"\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AssignUsertoOrderresponse\"\n              example:\n                success: true\n                message: User assigned successfully.\n      deprecated: false\n  /orders/createlabelfororder:\n    post:\n      tags:\n        - Orders\n      summary: Creates a shipping label for a given order.\n      description: |-\n        Creates a shipping label for a given order.  The ``labelData`` field returned in the response is a base64 encoded PDF value. Simply decode and save the output as a PDF file to retrieve a printable label.  The body of this request should specify the following attributes:\n        Name               |Data Type          |Description\n        -------------------|-------------------|-------------------\n        ``orderId`` | number, required | Identifies the order that will be shipped.\n        ``carrierCode`` | string, required | The code for the carrier that is to be used for the label.\n        ``serviceCode`` | string, required | The code for the shipping service that is to be used for the label.\n        ``confirmation`` | string, required | The type of delivery confirmation that is to be used once the shipment is created.  Possible values: ``none``, ``delivery``, ``signature``, ``adult_signature``, and ``direct_signature``.  ``direct_signature`` is available for FedEx only.\n        ``shipDate`` | string, required | The date the order should be shipped.\n        ``weight`` | Weight, optional | Weight of the order.  Use the [**Weight**](http://www.shipstation.com/developer-api/#/reference/model-weight) model.\n        ``dimensions`` | Dimensions, optional | Dimensions of the order.  Use [**Dimensions**](http://www.shipstation.com/developer-api/#/reference/model-dimensions) model.\n        ``insuranceOptions`` | InsuranceOptions, optional | The shipping insurance information associated with this label.  Use the [**InsuranceOptions**](http://www.shipstation.com/developer-api/#/reference/model-insuranceoptions) model.\n        ``internationalOptions`` | InternationalOptions, optional | Customs information that can be used to generate customs documents for international orders.  Use the [**InternationalOptions**](http://www.shipstation.com/developer-api/#/reference/model-internationaloptions) model.\n        ``advancedOptions`` | AdvancedOptions, optional | Various advanced options that may be available depending on the shipping carrier that is used to ship the order. Use the Customs information that can be used to generate customs documents for international orders.  Use the [**AdvancedOptions**](http://www.shipstation.com/developer-api/#/reference/model-advancedoptions) model.\n        ``testLabel`` | boolean, required | Specifies whether a test label should be created.\n      operationId: CreateLabelForOrder\n      parameters:\n        - name: Content-Type\n          in: header\n          description: \"\"\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n            example: application/json\n      requestBody:\n        description: \"\"\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateLabelforOrderrequest\"\n            example: |-\n              {\n                \"orderId\": 93348442,\n                \"carrierCode\": \"fedex\",\n                \"serviceCode\": \"fedex_2day\",\n                \"packageCode\": \"package\",\n                \"confirmation\": null,\n                \"shipDate\": \"2014-04-03\",\n                \"weight\": {\n                  \"value\": 2,\n                  \"units\": \"pounds\"\n                },\n                \"dimensions\": null,\n                \"insuranceOptions\": null,\n                \"internationalOptions\": null,\n                \"advancedOptions\": null,\n                \"testLabel\": false\n              }\n        required: true\n      responses:\n        \"200\":\n          description: \"\"\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateLabelforOrderresponse\"\n              example:\n                shipmentId: 72513480\n                shipmentCost: 7.3\n                insuranceCost: 0\n                trackingNumber: \"248201115029520\"\n                labelData: JVBERi0xLjQKJeLjz9MKMiAwIG9iago8PC9MZW5ndGggNjIvRmlsdGVyL0ZsYXRlRGVjb2RlPj5zdHJlYW0KeJwr5HIK4TI2UzC2NFMISeFyDeEK5CpUMFQwAEJDBV0jCz0LBV1jY0M9I4XkXAX9iDRDBZd8hUAuAEdGC7cKZW5kc3RyZWFtCmVuZG9iago0IDAgb2JqCjw8L1R5cGUvUGFnZS9NZWRpYUJveFswIDAgMjg4IDQzMl0vUmVzb3VyY2VzPDwvUHJvY1NldCBbL1BERiAvVGV4dCAvSW1hZ2VCIC9JbWFnZUMgL0ltYWdlSV0vWE9iamVjdDw8L1hmMSAxIDAgUj4+Pj4vQ29udGVudHMgMiAwIFIvUGFyZW50....\n                formData: null\n      deprecated: false\n  /orders/createorder:\n    post:\n      tags:\n        - Orders\n      summary: Create a new order or update an existing order. If the orderKey is specified, ShipStation will attempt to locate the order with the specified orderKey. If found, the existing order with that key will be updated. If the orderKey is not found, a new order will be created with that orderKey.\n      description: |-\n        If the ``orderKey`` is specified, the method becomes idempotent and the existing order with that key will be updated. Note: Only orders in an open status in ShipStation (``awaiting_payment``,``awaiting_shipment``, and ``on_hold``) can be updated through this method. ``cancelled`` and ``shipped`` are locked from modification through the API.  The body of this request should specify an [**Order**](https://www.shipstation.com/developer-api/#/reference/model-order) object:\n        Name               |Data Type          |Description\n        -------------------|-------------------|-------------------\n        ``orderNumber`` | string, required | A user-defined order number used to identify an order.\n        ``orderKey`` | string, optional | A user-provided key that should be unique to each order.  If an orderKey is not provided, ShipStation will create a new order and generate a unique orderKey for that order.  If the orderKey *is* provided, the **createorder** method will either: create a new order if the provided orderKey is not found, or, update the existing order if the orderKey is found.\n        ``orderDate`` | string, required | The date the order was placed.\n        ``paymentDate`` | string, optional | The date the order was paid for.\n        ``shipByDate`` | string, optional | The date the order is to be shipped before or on. This field is a suggested value generated by the order source/platform/cart and passed to ShipStation.\n        ``orderStatus`` | string, required | The order's status. Possible values: ``awaiting_payment``, ``awaiting_shipment``, ``shipped``, ``on_hold``, ``cancelled``\n        ``customerUsername`` | string, optional | The customer's username.\n        ``customerEmail`` | string, optional | The customer's email address.\n        ``billTo`` | Address, required | The recipients billing address. Use the [**Address**](https://www.shipstation.com/developer-api/#/reference/model-address) model.\n        ``shipTo`` | Address, required | The recipient's shipping address. Use the [**Address**](http://www.shipstation.com/developer-api/#/reference/model-address) model.\n        ``items`` | OrderItem, optional | An array of item objects.  Use an array of [**OrderItem**](http://www.shipstation.com/developer-api/#/reference/model-orderitem) models.\n        ``amountPaid`` | number, optional | The total amount paid for the Order.\n        ``taxAmount`` | number, optional | The total tax amount for the Order.\n        ``shippingAmount`` | number, optional | Shipping amount paid by the customer, if any.\n        ``customerNotes`` | string, optional | Notes left by the customer when placing the order.\n        ``internalNotes`` | string, optional | Private notes that are only visible to the seller.\n        ``gift`` | boolean, optional | Specifies whether or not this Order is a gift\n        ``giftMessage`` | string, optional | Gift message left by the customer when placing the order.\n        ``paymentMethod`` | string, optional | Method of payment used by the customer.\n        ``requestedShippingService`` | string, optional |Identifies the shipping service selected by the customer when placing this order. This value is given to ShipStation by the marketplace/cart and helps identify what shipping service the customer selected upon checkout.\n        ``carrierCode`` | string, optional | The code for the carrier that is to be used(or was used) when this order is shipped(was shipped).\n        ``serviceCode`` | string, optional | The code for the shipping service that is to be used(or was used) when this order is shipped(was shipped).\n        ``packageCode`` | string, optional | The code for the package type that is to be used(or was used) when this order is shipped(was shipped).\n        ``confirmation`` | string, optional | The type of delivery confirmation that is to be used(or was used) when this order is shipped(was shipped). Possible values: ``none``, ``delivery``, ``signature``, ``adult_signature``, and ``direct_signature``.  ``direct_signature`` is available for FedEx only.  \n        ``shipDate`` | string, optional | The date the order was shipped.\n        ``weight`` | Weight, optional | Weight of the order.  Use the [**Weight**](http://www.shipstation.com/developer-api/#/reference/model-weight) model.\n        ``dimensions`` | Dimensions, optional | Dimensions of the order.  Use the [**Dimensions**](http://www.shipstation.com/developer-api/#/reference/model-dimensions) model.\n        ``insuranceOptions`` | InsuranceOptions, optional | The shipping insurance information associated with this order.  Use the [**InsuranceOptions**](http://www.shipstation.com/developer-api/#/reference/model-insuranceoptions) model.\n        ``internationalOptions`` | InternationalOptions, optional | Customs information that can be used to generate customs documents for international orders.  Use the [**InternationalOptions**](http://www.shipstation.com/developer-api/#/reference/model-internationaloptions) model.\n        ``advancedOptions`` | AdvancedOptions, optional | Various advanced options that may be available depending on the shipping carrier that is used to ship the order. Use the [**AdvancedOptions**](http://www.shipstation.com/developer-api/#/reference/model-advancedoptions) model.\n        ``tagIds``|number[]|Array of tagIds.  Each tagId identifies a tag that has been associated with this order.\n      operationId: Create/updateOrder\n      parameters:\n        - name: Content-Type\n          in: header\n          description: \"\"\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n            example: application/json\n      requestBody:\n        description: \"\"\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateOrUpdateOrderrequest\"\n        required: true\n      responses:\n        \"200\":\n          description: \"\"\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateOrUpdateOrderresponse\"\n      deprecated: false\n  /orders/createorders:\n    post:\n      tags:\n        - Orders\n      summary: Create or update multiple orders in one request. If the orderKey is specified, ShipStation will attempt to locate the order with the specified orderKey. If found, the existing order with that key will be updated. If the orderKey is not found, a new order will be created with that orderKey.\n      description: |-\n        This endpoint can be used to create or update multiple orders in one request. If the ``orderKey`` is specified in an order, the existing order with that key will be updated. Note: Only orders in an open status in ShipStation (``awaiting_payment``,``awaiting_shipment``, and ``on_hold``) can be updated through this method. ``cancelled`` and ``shipped`` are locked from modification through the API.\n        Data Type          |Description\n        -------------------|-------------------\n        Order, required | An array of [**Order**](http://www.shipstation.com/developer-api/#/reference/model-order) objects (maximum of 100 per request)\n      operationId: Create/updateMultipleOrders\n      parameters:\n        - name: Content-Type\n          in: header\n          description: \"\"\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n            example: application/json\n      requestBody:\n        description: \"\"\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: \"#/components/schemas/CreateOrUpdateMultipleOrdersrequest\"\n              description: \"\"\n        required: true\n      responses:\n        \"200\":\n          description: \"\"\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateOrUpdateMultipleOrdersresponse\"\n              example:\n                hasErrors: false\n                results:\n                  - orderId: 58345234\n                    orderNumber: TEST-ORDER-API-DOCS\n                    orderKey: 0f6bec18-3e89-4881-83aa-f392d84f4c74\n                    success: true\n                    errorMessage: null\n      deprecated: false\n  /orders/holduntil:\n    post:\n      tags:\n        - Orders\n      summary: Change the status of the given order to On Hold until the date specified, when the status will automatically change to Awaiting Shipment.\n      description: |-\n        This method will change the status of the given order to On Hold until the date specified, when the status will automatically change to Awaiting Shipment.\n        The body of this request should specify the following attributes:\n        Name               |Data Type          |Description\n        -------------------|-------------------|-------------------\n        ``orderId`` | number, required | Identifies the order that will be held.\n        ``holdUntilDate`` | string, required | Date when order is moved from ``on_hold`` status to ``awaiting_shipment``.\n      operationId: HoldOrderUntil\n      parameters:\n        - name: Content-Type\n          in: header\n          description: \"\"\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n            example: application/json\n      requestBody:\n        description: \"\"\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/HoldOrderUntilrequest\"\n            example: |-\n              {\n                \"orderId\": 1072467,\n                \"holdUntilDate\": \"2014-12-01\"\n              }\n        required: true\n      responses:\n        \"200\":\n          description: \"\"\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HoldOrderUntilresponse\"\n              example:\n                success: true\n                message: Order held successfully.\n      deprecated: false\n  /orders:\n    get:\n      tags:\n        - Orders\n      summary: List orders.\n      description: |-\n        Obtains a list of orders that match the specified criteria.  All of the available filters are optional.  They do not need to be included in the URL.  If you do include them, here's what the URL may look like:\n        Url format with filters:\n        ```\n        /orders?customerName={customerName}\n        \u0026itemKeyword={itemKeyword}\n        \u0026createDateStart={createDateStart}\n        \u0026createDateEnd={createDateEnd}\n        \u0026modifyDateStart={modifyDateStart}\n        \u0026modifyDateEnd={modifyDateEnd}\n        \u0026orderDateStart={orderDateStart}\n        \u0026orderDateEnd={orderDateEnd}\n        \u0026orderNumber={orderNumber}\n        \u0026orderStatus={orderStatus}\n        \u0026paymentDateStart={paymentDateStart}\n        \u0026paymentDateEnd={paymentDateEnd}\n        \u0026storeId={storeId}\n        \u0026sortBy={sortBy}\n        \u0026sortDir={sortDir}\n        \u0026page={page}\n        \u0026pageSize={pageSize}\n        ```\n      operationId: ListOrders\n      parameters:\n        - name: customerName\n          in: query\n          description: Returns orders that match the specified name.\n          schema:\n            type: string\n            example: Smith\n        - name: itemKeyword\n          in: query\n          description: Returns orders that contain items that match the specified keyword. Fields searched are Sku, Description, and Options\n          schema:\n            type: string\n            example: ABC123\n        - name: createDateStart\n          in: query\n          description: Returns orders that were created in ShipStation after the specified date\n          schema:\n            type: string\n            example: \"2015-01-01 00:00:00\"\n        - name: createDateEnd\n          in: query\n          description: Returns orders that were created in ShipStation before the specified date\n          schema:\n            type: string\n            example: \"2015-01-08 00:00:00\"\n        - name: modifyDateStart\n          in: query\n          description: Returns orders that were modified after the specified date\n          schema:\n            type: string\n            example: \"2015-01-01 00:00:00\"\n        - name: modifyDateEnd\n          in: query\n          description: Returns orders that were modified before the specified date\n          schema:\n            type: string\n            example: \"2015-01-08 00:00:00\"\n        - name: orderDateStart\n          in: query\n          description: Returns orders greater than the specified date\n          schema:\n            type: string\n            example: \"2015-01-01 00:00:00\"\n        - name: orderDateEnd\n          in: query\n          description: Returns orders less than or equal to the specified date\n          schema:\n            type: string\n            example: \"2015-01-08 00:00:00\"\n        - name: orderNumber\n          in: query\n          description: Filter by order number, performs a \"starts with\" search.\n          schema:\n            type: string\n            example: \"12345\"\n        - name: orderStatus\n          in: query\n          description: Filter by order status.  If left empty, orders of all statuses are returned.\n          schema:\n            $ref: \"#/components/schemas/orderStatus\"\n        - name: paymentDateStart\n          in: query\n          description: Returns orders that were paid after the specified date\n          schema:\n            type: string\n            example: \"2015-01-01\"\n        - name: paymentDateEnd\n          in: query\n          description: Returns orders that were paid before the specified date\n          schema:\n            type: string\n            example: \"2015-01-08\"\n        - name: storeId\n          in: query\n          description: Filters orders to a single store. Call List Stores to obtain a list of store Ids.\n          schema:\n            type: integer\n            example: 123456\n        - name: sortBy\n          in: query\n          description: Sort the responses by a set value.  The response will be sorted based off the ascending dates (oldest to most current.)  If left empty, the response will be sorted by ascending ``orderId``.\n          schema:\n            $ref: \"#/components/schemas/sortBy2\"\n        - name: sortDir\n          in: query\n          description: Sets the direction of the sort order.\n          schema:\n            $ref: \"#/components/schemas/sortDir\"\n        - name: page\n          in: query\n          description: Page number\n          schema:\n            type: string\n        - name: pageSize\n          in: query\n          description: Requested page size. Max value is 500.\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListOrdersResponse\"\n      deprecated: false\n  /orders/listbytag:\n    get:\n      tags:\n        - Orders\n      summary: Lists all orders that match the specified status and tag ID\n      description: |-\n        Lists all orders that match the specified status and tag ID.\n        Url format with filters:\n        ```\n        /listbytag?orderStatus={orderStatus}\n        \u0026tagId={tagId}\n        \u0026page={page}\n        \u0026pageSize={pageSize}\n        ```\n      operationId: ListOrdersByTag\n      parameters:\n        - name: orderStatus\n          in: query\n          description: The order's status.\n          schema:\n            $ref: \"#/components/schemas/orderStatus\"\n        - name: tagId\n          in: query\n          description: ID of the tag. Call Accounts/ListTags to obtain a list of tags for this account.\n          schema:\n            type: integer\n        - name: page\n          in: query\n          description: Page number\n          schema:\n            type: string\n        - name: pageSize\n          in: query\n          description: Requested page size. Max value is 500.\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListOrdersbyTagresponse\"\n      deprecated: false\n  /orders/markasshipped:\n    post:\n      tags:\n        - Orders\n      summary: Marks an order as shipped without creating a label in ShipStation.\n      description: |-\n        Marks an order as shipped without creating a label in ShipStation. The body of this request has the following attributes:\n        Name               |Data Type          |Description\n        -------------------|-------------------|-------------------\n         ``orderId`` | number, required | Identifies the order that will be marked as shipped.\n         ``carrierCode`` | string, required | Code of the carrier that is marked as having shipped the order.\n         ``shipDate`` | string, optional | Date order was shipped.\n         ``trackingNumber`` | string, optional | Tracking number of shipment.\n         ``notifyCustomer``  | boolean, optional | Specifies whether the customer should be notified of the shipment. Default value: false\n         ``notifySalesChannel`` | boolean, optional | Specifies whether the sales channel should be notified of the shipment. Default value: false\n      operationId: MarkAnOrderAsShipped\n      parameters:\n        - name: Content-Type\n          in: header\n          description: \"\"\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n            example: application/json\n      requestBody:\n        description: \"\"\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/MarkanOrderasShippedrequest\"\n            example: |-\n              {\n                  \"orderId\": 93348442,\n                  \"carrierCode\": \"usps\",\n                  \"shipDate\": \"2014-04-01\",\n                  \"trackingNumber\": \"913492493294329421\",\n                  \"notifyCustomer\": true,\n                  \"notifySalesChannel\": true\n              }\n        required: true\n      responses:\n        \"200\":\n          description: \"\"\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MarkanOrderasShippedresponse\"\n              example:\n                orderId: 123456789\n                orderNumber: ABC123\n      deprecated: false\n  /orders/removetag:\n    post:\n      tags:\n        - Orders\n      summary: Removes a tag from the specified order.\n      description: |-\n        Removes a tag from the specified order.  The body of this request has the following attributes:\n        Name               |Data Type          |Description\n        -------------------|-------------------|-------------------\n        ``orderId`` | number, required | Identifies the order whose tag will be removed.\n        ``tagId`` | number, required | Identifies the tag to remove.\n      operationId: RemoveTagFromOrder\n      parameters:\n        - name: Content-Type\n          in: header\n          description: \"\"\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n            example: application/json\n      requestBody:\n        description: \"\"\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RemoveTagfromOrderrequest\"\n            example: |-\n              {\n                \"orderId\": 123456,\n                \"tagId\": 1234\n              }\n        required: true\n      responses:\n        \"200\":\n          description: \"\"\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RemoveTagfromOrderresponse\"\n              example:\n                success: true\n                message: Tag removed successfully.\n      deprecated: false\n  /orders/restorefromhold:\n    post:\n      tags:\n        - Orders\n      summary: Change the status of the given order from On Hold to Awaiting Shipment\n      description: |-\n        This method will change the status of the given order from On Hold to Awaiting Shipment. This endpoint is used when a holdUntil Date is attached to an order.\n        The body of this request should specify the following attributes:\n        Name               |Data Type          |Description\n        -------------------|-------------------|-------------------\n        ``orderId`` | number, required | Identifies the order that will be restored to ``awaiting_shipment`` from ``on_hold``.\n      operationId: RestoreOrderFromOnHold\n      parameters:\n        - name: Content-Type\n          in: header\n          description: \"\"\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n            example: application/json\n      requestBody:\n        description: \"\"\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RestoreOrderfromOnHoldrequest\"\n            example: |-\n              {\n                \"orderId\": 1234567\n              }\n        required: true\n      responses:\n        \"200\":\n          description: \"\"\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RestoreOrderfromOnHoldresponse\"\n              example:\n                success: true\n                message: The requested order has been restored\n      deprecated: false\n  /orders/unassignuser:\n    post:\n      tags:\n        - Orders\n      summary: Unassigns a user from an order.\n      description: |-\n        Unassigns a user from an order.  The body of this request should specify the following attributes:\n        Name               |Data Type          |Description\n        -------------------|-------------------|-------------------\n        ``orderIds`` | number, required | Identifies set of orders that will have the user unassigned.  Please note that if ANY of the orders within the array are not found, then no orders will have their users unassigned.\n      operationId: UnassignUserFromOrder\n      parameters:\n        - name: Content-Type\n          in: header\n          description: \"\"\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n            example: application/json\n      requestBody:\n        description: \"\"\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UnassignUserfromOrderrequest\"\n            example: |-\n              {\n                \"orderIds\": [\n                  123456789,\n                  12345679\n                  ]\n              }\n        required: true\n      responses:\n        \"200\":\n          description: \"\"\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnassignUserfromOrderresponse\"\n              example:\n                success: true\n                message: User unassigned successfully.\n      deprecated: false\n  /products/{productId}:\n    get:\n      tags:\n        - Products\n      summary: Get product\n      description: \"\"\n      operationId: GetProduct\n      parameters:\n        - name: productId\n          in: path\n          description: The system generated identifier for the Product.\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: integer\n            example: 12345678\n      responses:\n        \"200\":\n          description: \"\"\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetProductresponse\"\n              example:\n                aliases: null\n                productId: 12345678\n                sku: \"1004\"\n                name: Coffee Mug\n                price: 26\n                defaultCost: 0\n                length: 3\n                width: 3\n                height: 3\n                weightOz: 26\n                internalNotes: null\n                fulfillmentSku: F1004\n                createDate: \"2014-09-04T09:18:01.293\"\n                modifyDate: \"2014-09-18T12:38:43.893\"\n                active: true\n                productCategory:\n                  categoryId: 9999\n                  name: Door Closers\n                productType: null\n                warehouseLocation: Bin 22\n                defaultCarrierCode: fedex\n                defaultServiceCode: fedex_home_delivery\n                defaultPackageCode: package\n                defaultIntlCarrierCode: ups\n                defaultIntlServiceCode: ups_worldwide_saver\n                defaultIntlPackageCode: package\n                defaultConfirmation: direct_signature\n                defaultIntlConfirmation: adult_signature\n                customsDescription: null\n                customsValue: null\n                customsTariffNo: null\n                customsCountryCode: null\n                noCustoms: null\n                tags:\n                  - tagId: 9180\n                    name: APItest\n      deprecated: false\n    put:\n      tags:\n        - Products\n      summary: Updates an existing product.\n      description: Updates an existing product. This call does not currently support partial updates. The entire resource must be provided in the body of the request.\n      operationId: UpdateProduct\n      parameters:\n        - name: productId\n          in: path\n          description: The system generated identifier for the Product.\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: integer\n            example: 12345678\n        - name: Content-Type\n          in: header\n          description: \"\"\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n            example: application/json\n      requestBody:\n        description: \"\"\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateProductrequest\"\n            example: |-\n              {\n                      \"aliases\": null,\n                      \"productId\": 123456789,\n                      \"sku\": \"\",\n                      \"name\": \"Beautiful\",\n                      \"price\": 0,\n                      \"defaultCost\": null,\n                      \"length\": null,\n                      \"width\": null,\n                      \"height\": null,\n                      \"weightOz\": null,\n                      \"internalNotes\": null,\n                      \"fulfillmentSku\": null,\n                      \"active\": true,\n                      \"productCategory\": null,\n                      \"productType\": null,\n                      \"warehouseLocation\": null,\n                      \"defaultCarrierCode\": null,\n                      \"defaultServiceCode\": null,\n                      \"defaultPackageCode\": null,\n                      \"defaultIntlCarrierCode\": null,\n                      \"defaultIntlServiceCode\": null,\n                      \"defaultIntlPackageCode\": null,\n                      \"defaultConfirmation\": null,\n                      \"defaultIntlConfirmation\": null,\n                      \"customsDescription\": null,\n                      \"customsValue\": null,\n                      \"customsTariffNo\": null,\n                      \"customsCountryCode\": null,\n                      \"noCustoms\": null,\n                      \"tags\": null\n                  }\n        required: true\n      responses:\n        \"200\":\n          description: \"\"\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UpdateProductresponse\"\n              example:\n                success: true\n                message: The requested product has been updated\n      deprecated: false\n  /products:\n    get:\n      tags:\n        - Products\n      summary: List products.\n      description: |-\n        Obtains a list of products that match the specified criteria.  All of the available filters are optional.  They do not need to be included in the URL.  If you do include them, here's what the URL may look like:\n        Url format with filters:\n        ```\n        /products?sku={sku}\n        \u0026name={name}\n        \u0026productCategoryId={productCategoryId}\n        \u0026productTypeId={productTypeId}\n        \u0026tagId={tagId}\n        \u0026startDate={startDate}\n        \u0026endDate={endDate}\n        \u0026showInactive={showInactive}\n        \u0026sortBy={sortBy}\n        \u0026sortDir={sortDir}\n        \u0026page={page}\n        \u0026pageSize={pageSize}\n        ```\n      operationId: ListProducts\n      parameters:\n        - name: sku\n          in: query\n          description: Returns products that match the specified SKU.\n          schema:\n            type: string\n        - name: name\n          in: query\n          description: Returns products that match the specified product name.\n          schema:\n            type: string\n        - name: productCategoryId\n          in: query\n          description: Returns products that match the specified productCategoryId.\n          schema:\n            type: string\n        - name: productTypeId\n          in: query\n          description: Returns products that match the specified productTypeId.\n          schema:\n            type: string\n        - name: tagId\n          in: query\n          description: Returns products that match the specified tagId.\n          schema:\n            type: string\n        - name: startDate\n          in: query\n          description: Returns products that were created after the specified date.\n          schema:\n            type: string\n        - name: endDate\n          in: query\n          description: Returns products that were created before the specified date.\n          schema:\n            type: string\n        - name: sortBy\n          in: query\n          description: Sorts the order of the response based off the specified value.\n          schema:\n            $ref: \"#/components/schemas/sortBy3\"\n        - name: sortDir\n          in: query\n          description: Sets the direction of the sort order.\n          schema:\n            $ref: \"#/components/schemas/sortDir\"\n        - name: page\n          in: query\n          description: Page number.\n          schema:\n            type: string\n        - name: pageSize\n          in: query\n          description: Requested page size. Max value is 500.\n          schema:\n            type: string\n        - name: showInactive\n          in: query\n          description: Specifies whether the list should include inactive products.\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListProductsResponse\"\n      deprecated: false\n  /shipments:\n    get:\n      tags:\n        - Shipments\n      summary: List shipments.\n      description: |-\n        Obtains a list of shipments that match the specified criteria.  Please note the following:\n        - Only valid shipments with labels generated in ShipStation will be returned in the response. Orders that have been marked as shipped either through the UI or the API will not appear as they are considered external shipments.\n        - To include every shipment's associated shipmentItems in the response, be sure to set the `includeShipmentItems` parameter to `true`.\n        All of the available filters are optional.  They do not need to be included in the URL.  If you do include them, here's what the URL may look like:\n        Url format with filters:\n        ```\n        shipments?recipientName={recipientName}\n        \u0026recipientCountryCode={recipientCountryCode}\n        \u0026orderNumber={orderNumber}\n        \u0026orderId={orderId}\n        \u0026carrierCode={carrierCode}\n        \u0026serviceCode={serviceCode}\n        \u0026trackingNumber={trackingNumber}\n        \u0026createDateStart={createDateStart}\n        \u0026createDateEnd={createDateEnd}\n        \u0026shipDateStart={shipDateStart}\n        \u0026shipDateEnd={shipDateEnd}\n        \u0026voidDateStart={voidDateStart}\n        \u0026voidDateEnd={voidDateEnd}\n        \u0026storeId={storeId}\n        \u0026includeShipmentItems={includeShipmentItems}\n        \u0026sortBy={sortBy}\n        \u0026sortDir={sortDir}\n        \u0026page={page}\n        \u0026pageSize={pageSize}\n        ```\n      operationId: ListShipments\n      parameters:\n        - name: recipientName\n          in: query\n          description: Returns shipments shipped to the specified recipient name.\n          schema:\n            type: string\n        - name: recipientCountryCode\n          in: query\n          description: Returns shipments shipped to the specified country code.\n          schema:\n            type: string\n        - name: orderNumber\n          in: query\n          description: Returns shipments whose orders have the specified order number.\n          schema:\n            type: string\n        - name: orderId\n          in: query\n          description: Returns shipments whose orders have the specified order ID.\n          schema:\n            type: integer\n        - name: carrierCode\n          in: query\n          description: Returns shipments shipped with the specified carrier.\n          schema:\n            type: string\n        - name: serviceCode\n          in: query\n          description: Returns shipments shipped with the specified shipping service.\n          schema:\n            type: string\n        - name: trackingNumber\n          in: query\n          description: Returns shipments with the specified tracking number.\n          schema:\n            type: string\n        - name: createDateStart\n          in: query\n          description: Returns shipments created on or after the specified ``createDate``\n          schema:\n            type: string\n            example: \"2015-01-01 00:00:00\"\n        - name: createDateEnd\n          in: query\n          description: Returns shipments created on or before the specified ``createDate``\n          schema:\n            type: string\n            example: \"2015-01-08 00:00:00\"\n        - name: shipDateStart\n          in: query\n          description: Returns shipments with the ``shipDate`` on or after the specified date\n          schema:\n            type: string\n            example: \"2015-01-01\"\n        - name: shipDateEnd\n          in: query\n          description: Returns shipments with the ``shipDate`` on or before the specified date\n          schema:\n            type: string\n            example: \"2015-01-08\"\n        - name: voidDateStart\n          in: query\n          description: Returns shipments voided on or after the specified date\n          schema:\n            type: string\n            example: \"2015-01-01 00:00:00\"\n        - name: voidDateEnd\n          in: query\n          description: Returns shipments voided on or before the specified date\n          schema:\n            type: string\n            example: \"2015-01-08 00:00:00\"\n        - name: storeId\n          in: query\n          description: Returns shipments whose orders belong to the specified store ID.\n          schema:\n            type: integer\n            example: 304352\n        - name: includeShipmentItems\n          in: query\n          description: \"Specifies whether to include shipment items with results Default value: false.\"\n          schema:\n            type: boolean\n            example: false\n        - name: sortBy\n          in: query\n          description: Sort the responses by a set value.  The response will be sorted based off the ascending dates (oldest to most current.)  If left empty, the response will be sorted by ascending ``createDate``.\n          schema:\n            $ref: \"#/components/schemas/sortBy1\"\n        - name: sortDir\n          in: query\n          description: Sets the direction of the sort order.\n          schema:\n            $ref: \"#/components/schemas/sortDir\"\n        - name: page\n          in: query\n          description: page number.\n          schema:\n            type: integer\n        - name: pageSize\n          in: query\n          description: page size.\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: \"\"\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListShipmentsResponse\"\n              example:\n                shipments:\n                  - shipmentId: 33974374\n                    orderId: 43945660\n                    orderKey: 8061c220f0794a9b92460b8bae6837e4\n                    userId: 123456AB-ab12-3c4d-5e67-89f1abc1defa\n                    orderNumber: 100038-1\n                    createDate: \"2014-10-03T06:51:33.627\"\n                    shipDate: \"2014-10-03\"\n                    shipmentCost: 1.93\n                    insuranceCost: 0\n                    trackingNumber: \"9400111899561704681189\"\n                    isReturnLabel: false\n                    batchNumber: \"100301\"\n                    carrierCode: stamps_com\n                    serviceCode: usps_first_class_mail\n                    packageCode: package\n                    confirmation: delivery\n                    warehouseId: 16079\n                    voided: false\n                    voidDate: null\n                    marketplaceNotified: true\n                    notifyErrorMessage: null\n                    shipTo:\n                      name: Yoda\n                      company: \"\"\n                      street1: 12223 LOWDEN LN\n                      street2: \"\"\n                      street3: null\n                      city: MANCHACA\n                      state: TX\n                      postalCode: 78652-3602\n                      country: US\n                      phone: \"2101235544\"\n                      residential: null\n                    weight:\n                      value: 1\n                      units: ounces\n                    dimensions: null\n                    insuranceOptions:\n                      provider: null\n                      insureShipment: false\n                      insuredValue: 0\n                    advancedOptions: null\n                    shipmentItems:\n                      - orderItemId: 56568665\n                        lineItemKey: null\n                        sku: SQ3785739\n                        name: Potato Kitten -\n                        imageUrl: null\n                        weight: null\n                        quantity: 1\n                        unitPrice: 1\n                        warehouseLocation: null\n                        options: null\n                        productId: 7565777\n                        fulfillmentSku: null\n                    labelData: null\n                    formData: null\n                  - shipmentId: 33974373\n                    orderId: 43337328\n                    userId: 123456AB-ab12-3c4d-5e67-89f1abc1defa\n                    orderNumber: \"100028\"\n                    createDate: \"2014-10-03T06:51:59.943\"\n                    shipDate: \"2014-10-03\"\n                    shipmentCost: 1.93\n                    insuranceCost: 0\n                    trackingNumber: \"9400111899561704681196\"\n                    isReturnLabel: false\n                    batchNumber: \"100300\"\n                    carrierCode: stamps_com\n                    serviceCode: usps_first_class_mail\n                    packageCode: package\n                    confirmation: delivery\n                    warehouseId: 14265\n                    voided: false\n                    voidDate: null\n                    marketplaceNotified: true\n                    notifyErrorMessage: null\n                    shipTo:\n                      name: Luke Skywalker\n                      company: SS\n                      street1: 2815 EXPOSITION BLVD\n                      street2: \"\"\n                      street3: null\n                      city: AUSTIN\n                      state: TX\n                      postalCode: 78703-1221\n                      country: US\n                      phone: \"\"\n                      residential: null\n                    weight:\n                      value: 1\n                      units: ounces\n                    dimensions: null\n                    insuranceOptions:\n                      provider: null\n                      insureShipment: false\n                      insuredValue: 0\n                    advancedOptions: null\n                    shipmentItems:\n                      - orderItemId: 55827278\n                        lineItemKey: null\n                        sku: test\n                        name: test\n                        imageUrl: null\n                        weight: null\n                        quantity: 1\n                        unitPrice: 1\n                        warehouseLocation: null\n                        options: null\n                        productId: 7541107\n                        fulfillmentSku: null\n                    labelData: null\n                    formData: null\n                total: 2\n                page: 1\n                pages: 0\n      deprecated: false\n  /shipments/createlabel:\n    post:\n      tags:\n        - Shipments\n      summary: Create a shipment label\n      description: |-\n        Creates a shipping label.  The ``labelData`` field returned in the response is a base64 encoded PDF value. Simply decode and save the output as a PDF file to retrieve a printable label.  The body of this request has the following attributes:\n        Name               |Data Type          |Description\n        -------------------|-------------------|-------------------\n         ``carrierCode`` | string, required | Identifies the carrier to be used for this label.\n         ``serviceCode`` | string, required | Identifies the shipping service to be used for this label.\n         ``packageCode`` | string, required | Identifies the packing type that should be used for this label.\n         ``confirmation`` | string, optional | The type of delivery confirmation that is to be used once the shipment is created.  Possible values: ``none``, ``delivery``, ``signature``, ``adult_signature``, and ``direct_signature``.  ``direct_signature`` is available for FedEx only.\n         ``shipDate`` | string, required | The date the shipment will be shipped.\n         ``weight`` | Weight, required | Shipment's weight.  Use the [**Weight**](https://www.shipstation.com/developer-api/#/reference/model-weight) model.\n         ``dimensions`` | Dimensions, optional | Shipment's dimensions.  Use the [**Dimensions**](https://www.shipstation.com/developer-api/#/reference/model-dimensions) model.\n         ``shipFrom`` | Address, required | Address indicating shipment's origin.  Use the [**Address**](https://www.shipstation.com/developer-api/#/reference/model-address) model.\n         ``shipTo`` | Address, required | Address indicating shipment's destination.  Use the [**Address**](https://www.shipstation.com/developer-api/#/reference/model-address) model.\n         ``returnTo`` | Address, optional | Address indicating return address displayed on the label.  Use the [**Address**](https://www.shipstation.com/developer-api/#/reference/model-address) model.\n         ``insuranceOptions`` | InsuranceOptions, optional | The shipping insurance information associated with this order.  \n         ``internationalOptions`` | InternationalOptions, optional | Customs information that can be used to generate customs documents for international orders.  Use the [**InternationalOptions**](https://www.shipstation.com/developer-api/#/reference/model-internationaloptions) model.\n         ``advancedOptions`` | AdvancedOptions, optional | Various advanced options that may be available depending on the shipping carrier that is used to ship the order.  Use the [**AdvancedOptions**](https://www.shipstation.com/developer-api/#/reference/model-advancedoptions) model. \n         ``testLabel`` | boolean, optional | Specifies whether a test label should be created. Default value: false.\n      operationId: CreateShipmentLabel\n      parameters:\n        - name: Content-Type\n          in: header\n          description: \"\"\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n            example: application/json\n      requestBody:\n        description: \"\"\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateShipmentLabelrequest\"\n            example: |-\n              {\n                \"carrierCode\": \"fedex\",\n                \"serviceCode\": \"fedex_ground\",\n                \"packageCode\": \"package\",\n                \"confirmation\": \"delivery\",\n                \"shipDate\": \"2014-04-03\",\n                \"weight\": {\n                  \"value\": 3,\n                  \"units\": \"ounces\"\n                },\n                \"dimensions\": {\n                  \"units\": \"inches\",\n                  \"length\": 7,\n                  \"width\": 5,\n                  \"height\": 6\n                },\n                \"shipFrom\": {\n                  \"name\": \"Jason Hodges\",\n                  \"company\": \"ShipStation\",\n                  \"street1\": \"2815 Exposition Blvd\",\n                  \"street2\": \"Ste 2353242\",\n                  \"street3\": null,\n                  \"city\": \"Austin\",\n                  \"state\": \"TX\",\n                  \"postalCode\": \"78703\",\n                  \"country\": \"US\",\n                  \"phone\": null,\n                  \"residential\": false\n                },\n                \"shipTo\": {\n                  \"name\": \"The President\",\n                  \"company\": \"US Govt\",\n                  \"street1\": \"1600 Pennsylvania Ave\",\n                  \"street2\": \"Oval Office\",\n                  \"street3\": null,\n                  \"city\": \"Washington\",\n                  \"state\": \"DC\",\n                  \"postalCode\": \"20500\",\n                  \"country\": \"US\",\n                  \"phone\": null,\n                  \"residential\": false\n                },\n                \"insuranceOptions\": null,\n                \"internationalOptions\": null,\n                \"advancedOptions\": null,\n                \"testLabel\": false\n              }\n        required: true\n      responses:\n        \"200\":\n          description: \"\"\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateShipmentLabelresponse\"\n              example:\n                shipmentId: 123456789\n                orderId: null\n                userId: null\n                customerEmail: null\n                orderNumber: null\n                createDate: \"2016-04-03T12:11:36.863\"\n                shipDate: \"2016-04-03\"\n                shipmentCost: 9.06\n                insuranceCost: 0\n                trackingNumber: \"782390443992\"\n                isReturnLabel: false\n                batchNumber: null\n                carrierCode: fedex\n                serviceCode: fedex_ground\n                packageCode: package\n                confirmation: delivery\n                warehouseId: null\n                voided: false\n                voidDate: null\n                marketplaceNotified: false\n                notifyErrorMessage: null\n                shipTo: null\n                weight: null\n                dimensions: null\n                insuranceOptions: null\n                advancedOptions: null\n                shipmentItems: null\n                labelData: JVBERi0xLjQKJeLjz9MKMiAwIG9iago8PC9MZW5ndGggNjIvRmlsdGVyL0ZsYXRlRGVjb2RlPj5zdHJlYW0KeJwr5HIK4TI2U...\n                formData: null\n      deprecated: false\n  /shipments/getrates:\n    post:\n      tags:\n        - Shipments\n      summary: Retrieves shipping rates for the specified shipping details.\n      description: |-\n        Retrieves shipping rates for the specified shipping details.  The body of this request should specify the following attributes:\n        Name               |Data Type          |Description\n        -------------------|-------------------|-------------------\n         ``carrierCode`` | string, required | Returns rates for the specified carrier.\n         ``serviceCode`` | string, optional | Returns rates for the specified shipping service.\n         ``packageCode`` | string, optional | Returns rates for the specified package type.\n         ``fromPostalCode`` | string, required | Originating postal code.\n         ``toState`` | string, optional | Destination State/Province. Please use two-character state/province abbreviation. Note this field is required for the following carriers: UPS\n         ``toCountry`` | string, required | Destination Country.  Please use the two-character ISO country code.\n         ``toPostalCode`` | string, required | Destination Postal Code.\n         ``toCity`` | string, optional | Destination City.\n         ``weight`` | Weight, required | Shipment's weight.  Use ``Weight`` object.\n         ``dimensions`` | Dimensions, optional | Shipment's dimensions.  Use ``Dimensions`` object. \n         ``confirmation`` | string, optional | The type of delivery confirmation that is to be used once the shipment is created.  Possible values: ``none``, ``delivery``, ``signature``, ``adult_signature``, and ``direct_signature``.  ``direct_signature`` is available for FedEx only.\n         ``residential`` | boolean, optional | Returns rates that account for the specified delivery confirmation type. Default value: false\n      operationId: GetRates\n      parameters:\n        - name: Content-Type\n          in: header\n          description: \"\"\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n            example: application/json\n      requestBody:\n        description: \"\"\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GetRatesrequest\"\n            example: |-\n              {\n                \"carrierCode\": \"fedex\",\n                \"serviceCode\": null,\n                \"packageCode\": null,\n                \"fromPostalCode\": \"78703\",\n                \"toState\": \"DC\",\n                \"toCountry\": \"US\",\n                \"toPostalCode\": \"20500\",\n                \"toCity\": \"Washington\",\n                \"weight\": {\n                  \"value\": 3,\n                  \"units\": \"ounces\"\n                },\n                \"dimensions\": {\n                  \"units\": \"inches\",\n                  \"length\": 7,\n                  \"width\": 5,\n                  \"height\": 6\n                },\n                \"confirmation\": \"delivery\",\n                \"residential\": false\n              }\n        required: true\n      responses:\n        \"200\":\n          description: \"\"\n          headers: {}\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/GetRatesresponse\"\n                description: \"\"\n              example:\n                - serviceName: FedEx First Overnight®\n                  serviceCode: fedex_first_overnight\n                  shipmentCost: 87.8\n                  otherCost: 2.63\n                - serviceName: FedEx Priority Overnight®\n                  serviceCode: fedex_priority_overnight\n                  shipmentCost: 50.23\n                  otherCost: 1.51\n                - serviceName: FedEx Standard Overnight®\n                  serviceCode: fedex_standard_overnight\n                  shipmentCost: 46.96\n                  otherCost: 1.41\n                - serviceName: FedEx 2Day® A.M.\n                  serviceCode: fedex_2day_am\n                  shipmentCost: 23.04\n                  otherCost: 0.69\n                - serviceName: FedEx 2Day®\n                  serviceCode: fedex_2day\n                  shipmentCost: 20.03\n                  otherCost: 0.6\n                - serviceName: FedEx Express Saver®\n                  serviceCode: fedex_express_saver\n                  shipmentCost: 14.28\n                  otherCost: 0.43\n                - serviceName: FedEx Ground®\n                  serviceCode: fedex_ground\n                  shipmentCost: 8.25\n                  otherCost: 0.33\n      deprecated: false\n  /shipments/voidlabel:\n    post:\n      tags:\n        - Shipments\n      summary: Voids the specified label by shipmentId.\n      description: |-\n        Voids the specified label by shipmentId.  The body of this request should specify the following attributes:\n        Name               |Data Type          |Description\n        -------------------|-------------------|-------------------\n         ``shipmentId`` | number, required | ID of the shipment to void.\n      operationId: VoidLabel\n      parameters:\n        - name: Content-Type\n          in: header\n          description: \"\"\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n            example: application/json\n      requestBody:\n        description: \"\"\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/VoidLabelrequest\"\n            example: |-\n              {\n                \"shipmentId\": 12345\n              }\n        required: true\n      responses:\n        \"200\":\n          description: \"\"\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/VoidLabelresponse\"\n              example:\n                approved: true\n                message: Label voided successfully\n      deprecated: false\n  /stores/{storeId}:\n    get:\n      tags:\n        - Stores\n      summary: Get store\n      description: \"\"\n      operationId: GetStore\n      parameters:\n        - name: storeId\n          in: path\n          description: A unique ID generated by ShipStation and assigned to each store.\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: integer\n            example: 12345\n      responses:\n        \"200\":\n          description: \"\"\n          headers:\n            Authorization:\n              content:\n                text/plain:\n                  schema:\n                    type: string\n                  example: \u003c Enter your Basic Authorization string here \u003e\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetStoreresponse\"\n              example:\n                storeId: 12345\n                storeName: WooCommerce Store\n                marketplaceId: 36\n                marketplaceName: WooCommerce\n                accountName: null\n                email: null\n                integrationUrl: http://shipstation-test.wpengine.com\n                active: true\n                companyName: \"\"\n                phone: \"\"\n                publicEmail: \"\"\n                website: \"\"\n                refreshDate: \"2014-12-16T17:47:05.457\"\n                lastRefreshAttempt: \"2014-12-16T09:47:05.457\"\n                createDate: \"2014-11-06T15:21:13.223\"\n                modifyDate: \"2014-11-10T08:02:19.117\"\n                autoRefresh: true\n                statusMappings:\n                  - orderStatus: awaiting_payment\n                    statusKey: Pending\n                  - orderStatus: awaiting_shipment\n                    statusKey: Processing\n                  - orderStatus: shipped\n                    statusKey: Completed\n                  - orderStatus: cancelled\n                    statusKey: Cancelled\n                  - orderStatus: on_hold\n                    statusKey: On-hold\n      deprecated: false\n    put:\n      tags:\n        - Stores\n      summary: Update store\n      description: Updates an existing store. This call does not currently support partial updates. The entire resource must be provided in the body of the request.\n      operationId: UpdateStore\n      parameters:\n        - name: storeId\n          in: path\n          description: A unique ID generated by ShipStation and assigned to each store.\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: integer\n            example: 12345\n        - name: Content-Type\n          in: header\n          description: \"\"\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n            example: application/json\n      requestBody:\n        description: \"\"\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateStorerequest\"\n            example: |-\n              {\n                  \"storeId\": 12345,\n                  \"storeName\": \"WooCommerce Store\",\n                  \"marketplaceId\": 36,\n                  \"marketplaceName\": \"WooCommerce\",\n                  \"accountName\": null,\n                  \"email\": null,\n                  \"integrationUrl\": \"http://shipstation-test.wpengine.com\",\n                  \"active\": true,\n                  \"companyName\": \"\",\n                  \"phone\": \"\",\n                  \"publicEmail\": \"\",\n                  \"website\": \"\",\n                  \"refreshDate\": \"2014-12-16T17:47:05.457\",\n                  \"lastRefreshAttempt\": \"2014-12-16T09:47:05.457\",\n                  \"createDate\": \"2014-11-06T15:21:13.223\",\n                  \"modifyDate\": \"2014-11-10T08:02:19.117\",\n                  \"autoRefresh\": true,\n                  \"statusMappings\": [\n                      {\n                          \"orderStatus\": \"awaiting_payment\",\n                          \"statusKey\": \"Pending\"\n                      },\n                      {\n                          \"orderStatus\": \"awaiting_shipment\",\n                          \"statusKey\": \"Processing\"\n                      },\n                      {\n                          \"orderStatus\": \"shipped\",\n                          \"statusKey\": \"Completed\"\n                      },\n                      {\n                          \"orderStatus\": \"cancelled\",\n                          \"statusKey\": \"Cancelled\"\n                      },\n                      {\n                          \"orderStatus\": \"on_hold\",\n                          \"statusKey\": \"On-hold\"\n                      }\n                  ]\n              }\n        required: true\n      responses:\n        \"200\":\n          description: \"\"\n          headers:\n            Authorization:\n              content:\n                text/plain:\n                  schema:\n                    type: string\n                  example: \u003c Enter your Basic Authorization string here \u003e\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UpdateStoreresponse\"\n              example:\n                storeId: 12345\n                storeName: WooCommerce Store\n                marketplaceId: 36\n                marketplaceName: WooCommerce\n                accountName: null\n                email: null\n                integrationUrl: http://shipstation-test.wpengine.com\n                active: true\n                companyName: \"\"\n                phone: \"\"\n                publicEmail: \"\"\n                website: \"\"\n                refreshDate: \"2014-12-16T17:47:05.457\"\n                lastRefreshAttempt: \"2014-12-16T09:47:05.457\"\n                createDate: \"2014-11-06T15:21:13.223\"\n                modifyDate: \"2014-11-10T08:02:19.117\"\n                autoRefresh: true\n                statusMappings:\n                  - orderStatus: awaiting_payment\n                    statusKey: Pending\n                  - orderStatus: awaiting_shipment\n                    statusKey: Processing\n                  - orderStatus: shipped\n                    statusKey: Completed\n                  - orderStatus: cancelled\n                    statusKey: Cancelled\n                  - orderStatus: on_hold\n                    statusKey: On-hold\n      deprecated: false\n  /stores/getrefreshstatus:\n    get:\n      tags:\n        - Stores\n      summary: Retrieves the refresh status of a given store.\n      operationId: GetStoreRefreshStatus\n      parameters:\n        - name: storeId\n          in: query\n          description: Specifies the store whose status will be retrieved.\n          schema:\n            type: integer\n            example: 12345\n      responses:\n        \"200\":\n          description: \"\"\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetStoreRefreshStatusresponse\"\n              example:\n                storeId: 12345\n                refreshStatusId: 2\n                refreshStatus: Updating orders\n                lastRefreshAttempt: 8-13-2014\n                refreshDate: 8-13-2014\n      deprecated: false\n  /stores/refreshstore:\n    post:\n      tags:\n        - Stores\n      summary: Refresh store\n      description: Initiates a store refresh.\n      operationId: RefreshStore\n      parameters:\n        - name: Content-Type\n          in: header\n          description: \"\"\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n            example: application/json\n        - name: storeId\n          in: query\n          description: Specifies the store which will get refreshed.  If the storeId is not specified, a store refresh will be initiated for all refreshable stores on that account.\n          schema:\n            type: integer\n        - name: refreshDate\n          in: query\n          description: Specifies the starting date for new order imports.  If the refreshDate is not specified, ShipStation will use the last recorded refreshDate for that store.\n          schema:\n            type: string\n      requestBody:\n        description: \"\"\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RefreshStorerequest\"\n            example: |-\n              {\n                \"storeId\": 12345,\n                \"refreshDate\": \"12-08-2014\"\n              }\n        required: true\n      responses:\n        \"200\":\n          description: \"\"\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RefreshStoreresponse\"\n              example:\n                success: true\n                message: A store refresh has been initiated for Store ID 12345\n      deprecated: false\n  /stores:\n    get:\n      tags:\n        - Stores\n      summary: Retrieve the list of installed stores on the account.\n      operationId: ListStores\n      parameters:\n        - name: showInactive\n          in: query\n          description: Determines whether inactive stores will be returned in the list of stores.\n          schema:\n            type: boolean\n            example: false\n        - name: marketplaceId\n          in: query\n          description: Returns stores of this marketplace type.\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: \"\"\n          headers: {}\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/ListStoresresponse\"\n                description: \"\"\n              example:\n                - storeId: 22766\n                  storeName: ShipStation Manual Store\n                  marketplaceId: 0\n                  marketplaceName: ShipStation\n                  accountName: null\n                  email: null\n                  integrationUrl: null\n                  active: true\n                  companyName: \"\"\n                  phone: \"\"\n                  publicEmail: testemail@email.com\n                  website: \"\"\n                  refreshDate: \"2014-12-03T11:46:11.283\"\n                  lastRefreshAttempt: \"2014-12-03T11:46:53.433\"\n                  createDate: \"2014-07-25T11:05:55.307\"\n                  modifyDate: \"2014-11-12T08:45:20.55\"\n                  autoRefresh: false\n                - storeId: 25748\n                  storeName: Ashley's Test WooCommerce\n                  marketplaceId: 36\n                  marketplaceName: WooCommerce\n                  accountName: null\n                  email: null\n                  integrationUrl: http://shipstation.wpengine.com/\n                  active: true\n                  companyName: \"\"\n                  phone: \"\"\n                  publicEmail: \"\"\n                  website: \"\"\n                  refreshDate: \"2014-11-26T22:28:14.07\"\n                  lastRefreshAttempt: \"2014-11-26T14:28:14.07\"\n                  createDate: \"2014-11-10T08:53:48.077\"\n                  modifyDate: \"2014-12-03T14:53:50.557\"\n                  autoRefresh: true\n      deprecated: false\n  /stores/marketplaces:\n    get:\n      tags:\n        - Stores\n      summary: Lists the marketplaces that can be integrated with ShipStation.\n      operationId: ListMarketplaces\n      parameters: []\n      responses:\n        \"200\":\n          description: \"\"\n          headers: {}\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/ListMarketplacesresponse\"\n                description: \"\"\n              example:\n                - name: 3DCart\n                  marketplaceId: 23\n                  canRefresh: true\n                  supportsCustomMappings: true\n                  supportsCustomStatuses: false\n                  canConfirmShipments: true\n                - name: Amazon\n                  marketplaceId: 2\n                  canRefresh: true\n                  supportsCustomMappings: true\n                  supportsCustomStatuses: false\n                  canConfirmShipments: true\n                - name: Amazon CA\n                  marketplaceId: 32\n                  canRefresh: true\n                  supportsCustomMappings: true\n                  supportsCustomStatuses: false\n                  canConfirmShipments: true\n      deprecated: false\n  /stores/deactivate:\n    post:\n      tags:\n        - Stores\n      summary: Deactivate store\n      description: |-\n        Deactivates the specified store.\n        The body of this request has the following attributes:\n        Name               |Data Type          |Description\n        -------------------|-------------------|-------------------\n        ``storeId``  | number, required | ID of the store to deactivate.\n      operationId: DeactivateStore\n      parameters:\n        - name: Content-Type\n          in: header\n          description: \"\"\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n            example: application/json\n      requestBody:\n        description: \"\"\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DeactivateStorerequest\"\n            example: |-\n              {\n                \"storeId\": \"12345\"\n              }\n        required: true\n      responses:\n        \"200\":\n          description: \"\"\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeactivateStoreresponse\"\n              example:\n                success: \"true\"\n                message: The requested store has been reactivated.\n      deprecated: false\n  /stores/reactivate:\n    post:\n      tags:\n        - Stores\n      summary: Reactivate store\n      description: |-\n        Reactivates the specified store. Note: stores are active by default\n        The body of this request has the following attributes:\n        Name               |Data Type          |Description\n        -------------------|-------------------|-------------------\n        ``storeId``  | number, required | ID of the store to reactivate.\n      operationId: ReactivateStore\n      parameters:\n        - name: Content-Type\n          in: header\n          description: \"\"\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n            example: application/json\n      requestBody:\n        description: \"\"\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ReactivateStorerequest\"\n            example: |-\n              {\n                \"storeId\": \"12345\"\n              }\n        required: true\n      responses:\n        \"200\":\n          description: \"\"\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ReactivateStoreresponse\"\n              example:\n                success: \"true\"\n                message: The requested store has been reactivated.\n      deprecated: false\n  /users:\n    get:\n      tags:\n        - Users\n      summary: List users\n      description: \"\"\n      operationId: ListUsers\n      parameters:\n        - name: showInactive\n          in: query\n          description: Determines whether inactive users will be returned in the response.\n          schema:\n            type: boolean\n            example: false\n      responses:\n        \"200\":\n          description: \"\"\n          headers:\n            Authorization:\n              content:\n                text/plain:\n                  schema:\n                    type: string\n                  example: \u003c Enter your Basic Authorization string here \u003e\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListUsersresponse\"\n              example:\n                userId: 123456AB-ab12-3c4d-5e67-89f1abc1defa\n                userName: SS-user1\n                name: Shipping Employee 1\n      deprecated: false\n  /warehouses/{warehouseId}:\n    get:\n      tags:\n        - Warehouses\n      summary: Returns a list of active Ship From Locations (formerly known as warehouses) on the ShipStation account. Warehouses are now called \"Ship From Locations\" in the UI.\n      operationId: GetWarehouse\n      parameters:\n        - name: warehouseId\n          in: path\n          description: A unique ID generated by ShipStation and assigned to each Ship From Location (formerly known as warehouse).\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: integer\n            example: 12345678\n      responses:\n        \"200\":\n          description: \"\"\n          headers:\n            Authorization:\n              content:\n                text/plain:\n                  schema:\n                    type: string\n                  example: \u003c Enter your Basic Authorization string here \u003e\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetWarehouseresponse\"\n              example:\n                warehouseId: 12345\n                warehouseName: API Ship From Location\n                originAddress:\n                  name: API Warehouse\n                  company: ShipStation\n                  street1: 2815 Exposition Blvd\n                  street2: null\n                  street3: null\n                  city: Austin\n                  state: TX\n                  postalCode: \"78703\"\n                  country: US\n                  phone: 512-555-5555\n                  residential: true\n                  addressVerified: null\n                returnAddress:\n                  name: API Ship From Location\n                  company: ShipStation\n                  street1: 2815 Exposition Blvd\n                  street2: null\n                  street3: null\n                  city: Austin\n                  state: TX\n                  postalCode: \"78703\"\n                  country: US\n                  phone: 512-555-5555\n                  residential: null\n                  addressVerified: null\n                createDate: \"2015-07-02T08:38:31.487\"\n                isDefault: true\n      deprecated: false\n    put:\n      tags:\n        - Warehouses\n      summary: Updates an existing Ship From Location (formerly known as warehouse). \n      description: Updates an existing Ship From Location (formerly known as warehouse). This call does not currently support partial updates. The entire resource must be provided in the body of the request. If a \"returnAddress\" object is not specified, your \"originAddress\" will be used as your \"returnAddress\".\n      operationId: UpdateWarehouse\n      parameters:\n        - name: Content-Type\n          in: header\n          description: \"\"\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n            example: application/json\n        - name: warehouseId\n          in: path\n          description: A unique ID generated by ShipStation and assigned to each Ship From Location (formerly known as warehouse).\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: integer\n            example: 12345678\n      requestBody:\n        description: \"\"\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateWarehouserequest\"\n            example: |-\n              {\n                  \"warehouseId\": 12345,\n                  \"warehouseName\": \"API Ship From Location\",\n                  \"originAddress\": {\n                    \"name\": \"API Warehouse\",\n                    \"company\": \"ShipStation\",\n                    \"street1\": \"2815 Exposition Blvd\",\n                    \"street2\": null,\n                    \"street3\": null,\n                    \"city\": \"Austin\",\n                    \"state\": \"TX\",\n                    \"postalCode\": \"78703\",\n                    \"country\": \"US\",\n                    \"phone\": \"512-555-5555\",\n                    \"residential\": true,\n                    \"addressVerified\": null\n                  },\n                  \"returnAddress\": {\n                    \"name\": \"API Ship From Location\",\n                    \"company\": \"ShipStation\",\n                    \"street1\": \"2815 Exposition Blvd\",\n                    \"street2\": null,\n                    \"street3\": null,\n                    \"city\": \"Austin\",\n                    \"state\": \"TX\",\n                    \"postalCode\": \"78703\",\n                    \"country\": \"US\",\n                    \"phone\": \"512-555-5555\",\n                    \"residential\": null,\n                    \"addressVerified\": null\n                  },\n                  \"createDate\": \"2015-07-02T08:38:31.4870000\",\n                  \"isDefault\": true\n                }\n        required: true\n      responses:\n        \"200\":\n          description: \"\"\n          headers:\n            Authorization:\n              content:\n                text/plain:\n                  schema:\n                    type: string\n                  example: \u003c Enter your Basic Authorization string here \u003e\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UpdateWarehouseresponse\"\n              example:\n                warehouseId: 12345\n                warehouseName: API Ship From Location\n                originAddress:\n                  name: API Warehouse\n                  company: ShipStation\n                  street1: 2815 Exposition Blvd\n                  street2: null\n                  street3: null\n                  city: Austin\n                  state: TX\n                  postalCode: \"78703\"\n                  country: US\n                  phone: 512-555-5555\n                  residential: true\n                  addressVerified: null\n                returnAddress:\n                  name: API Ship From Location\n                  company: ShipStation\n                  street1: 2815 Exposition Blvd\n                  street2: null\n                  street3: null\n                  city: Austin\n                  state: TX\n                  postalCode: \"78703\"\n                  country: US\n                  phone: 512-555-5555\n                  residential: null\n                  addressVerified: null\n                createDate: \"2015-07-02T08:38:31.487\"\n                isDefault: true\n      deprecated: false\n    delete:\n      tags:\n        - Warehouses\n      summary: Delete warehouse\n      description: Removes warehouse from ShipStation's UI. Note this is a \"soft\" delete action so the warehouse will still exist in the database, but will be set to inactive\n      operationId: DeleteWarehouse\n      parameters:\n        - name: warehouseId\n          in: path\n          description: A unique ID generated by ShipStation and assigned to each Ship From Location (formerly known as warehouse).\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: integer\n            example: 12345678\n      responses:\n        \"200\":\n          description: \"\"\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeleteWarehouseresponse\"\n              example:\n                success: true\n                message: The requested warehouse has been deleted.\n      deprecated: false\n  /warehouses/createwarehouse:\n    post:\n      tags:\n        - Warehouses\n      summary: Create warehouse\n      description: |-\n        Adds a Ship From Location (formerly known as warehouse) to your account.  The body of this request should specify the following attributes:\n        Name               |Data Type          |Description\n        -------------------|-------------------|-------------------\n         ``warehouseName`` | string, optional | Name of Ship From Location.\n         ``originAddress`` | Address, required | The origin address.  Shipping rates will be calculated from this address.  Use the [**Address**](https://www.shipstation.com/developer-api/#/reference/model-address) model.\n         ``returnAddress`` | Address, optional | The return address.  If a \"returnAddress\" is not specified, your \"originAddress\" will be used as your \"returnAddress\". Use the [**Address**](https://www.shipstation.com/developer-api/#/reference/model-address) model.\n         ``isDefault`` | boolean, optional | Specifies whether or not this will be your default Ship From Location.\n      operationId: CreateWarehouse\n      parameters:\n        - name: Content-Type\n          in: header\n          description: \"\"\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n            example: application/json\n      requestBody:\n        description: \"\"\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateWarehouserequest\"\n            example: |-\n              {\n                \"warehouseName\": \"New Ship From Location\",\n                \"originAddress\": {\n                  \"name\": \"NM Warehouse\",\n                  \"company\": \"White Sands Co.\",\n                  \"street1\": \"4704 Arabela Dr.\",\n                  \"street2\": null,\n                  \"street3\": null,\n                  \"city\": \"Las Cruces\",\n                  \"state\": \"NM\",\n                  \"postalCode\": \"80012\",\n                  \"country\": \"US\",\n                  \"phone\": \"512-111-2222\",\n                  \"residential\": true\n                },\n                \"returnAddress\": null,\n                \"isDefault\": false\n              }\n        required: true\n      responses:\n        \"200\":\n          description: \"\"\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateWarehouseresponse\"\n              example:\n                warehouseId: 17977\n                warehouseName: New Ship From Location\n                originAddress:\n                  name: NM Warehouse\n                  company: White Sands Co\n                  street1: 4704 Arabela Dr.\n                  street2: \"\"\n                  street3: \"\"\n                  city: Las Cruces\n                  state: NM\n                  postalCode: \"88012\"\n                  country: US\n                  phone: 512-111-2222\n                  residential: true\n                returnAddress:\n                  name: NM Warehouse\n                  company: White Sands Co\n                  street1: 4704 Arabela Dr.\n                  street2: \"\"\n                  street3: \"\"\n                  city: Las Cruces\n                  state: NM\n                  postalCode: \"88012\"\n                  country: US\n                  phone: 512-111-2222\n                  residential: null\n                createDate: \"2014-10-21T08:11:43.88\"\n                isDefault: false\n      deprecated: false\n  /warehouses:\n    get:\n      tags:\n        - Warehouses\n      summary: Retrieves a list of your Ship From Locations (formerly known as warehouses).\n      operationId: ListWarehouses\n      parameters: []\n      responses:\n        \"200\":\n          description: \"\"\n          headers: {}\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/ListWarehousesresponse\"\n                description: \"\"\n              example:\n                - warehouseId: 17977\n                  warehouseName: Main warehouse\n                  originAddress:\n                    name: Spring warehouse\n                    company: \"\"\n                    street1: \"123 S SPRING RD  \"\n                    street2: \"\"\n                    street3: \"\"\n                    city: Elmurst\n                    state: IL\n                    postalCode: \"60126\"\n                    country: US\n                    phone: \"5121112222\"\n                    residential: false\n                  returnAddress:\n                    name: Chicago House\n                    company: \"\"\n                    street1: \"123 S SPRING RD  \"\n                    street2: \"\"\n                    street3: \"\"\n                    city: Elmurst\n                    state: IL\n                    postalCode: \"60126\"\n                    country: US\n                    phone: \"5121112222\"\n                    residential: null\n                  createDate: \"2014-10-21T08:11:43.88\"\n                  isDefault: true\n                - warehouseId: 14265\n                  warehouseName: Austin\n                  originAddress:\n                    name: Austin\n                    company: ShipStation\n                    street1: 2815 Exposition Blvd\n                    street2: \"\"\n                    street3: \"\"\n                    city: Austin\n                    state: TX\n                    postalCode: \"78703\"\n                    country: US\n                    phone: \"5124445555\"\n                    residential: false\n                  returnAddress:\n                    name: ShipStation\n                    company: ShipStation\n                    street1: 2815 Exposition Blvd\n                    street2: \"\"\n                    street3: \"\"\n                    city: Austin\n                    state: TX\n                    postalCode: \"78703\"\n                    country: US\n                    phone: \"5124445555\"\n                    residential: null\n                  createDate: \"2014-05-27T09:54:29.96\"\n                  isDefault: false\n      deprecated: false\n  /webhooks:\n    get:\n      tags:\n        - Webhooks\n      summary: Retrieves a list of registered webhooks for the account\n      operationId: ListWebhooks\n      parameters: []\n      responses:\n        \"200\":\n          description: \"\"\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListWebhooksresponse\"\n              example:\n                webhooks:\n                  - IsLabelAPIHook: false\n                    WebHookID: 123\n                    SellerID: 100000\n                    StoreID: 12345\n                    HookType: ITEM_ORDER_NOTIFY\n                    MessageFormat: Json\n                    Url: http://example.endpoint/orders\n                    Name: My Order Webhook\n                    BulkCopyBatchID: null\n                    BulkCopyRecordID: null\n                    Active: true\n                    WebhookLogs: []\n                    Seller: null\n                    Store: null\n                  - IsLabelAPIHook: false\n                    WebHookID: 456\n                    SellerID: 100000\n                    StoreID: 98765\n                    HookType: SHIP_NOTIFY\n                    MessageFormat: Json\n                    Url: https://example.endpoint/shipment\n                    Name: My Shipment Webhook\n                    BulkCopyBatchID: null\n                    BulkCopyRecordID: null\n                    Active: true\n                    WebhookLogs: []\n                    Seller: null\n                    Store: null\n      deprecated: false\n  /webhooks/subscribe:\n    post:\n      tags:\n        - Webhooks\n      summary: Subscribe to webhook\n      description: |-\n        Subscribes to a specific type of webhook. If a ``store_id`` is passed in, the webhooks will only be triggered for that specific ``store_id``.\n        The ``event`` type that is passed in will determine what type of webhooks will be sent.\n        Webhooks can be viewed \u0026 edited via the ShipStation Application under Integrations in the [**Account Settings**](https://ss.shipstation.com/#/settings/integrations).\n        NOTE: Webhooks will be sent to the URL specified in the ``target_url``. The HTTP request will be sent via POST and will contain a [**webhook JSON object**](https://www.shipstation.com/developer-api/#/reference/model-webhook) in the body.\n        The body of this request to subscribe has the following attributes:\n        Name               |Data Type          |Description\n        -------------------|-------------------|-------------------\n        ``target_url``  | string, required | The URL to send the webhooks to\n        ``event`` | string, required | The type of webhook to subscribe to. Must contain one of the following values: ORDER_NOTIFY, ITEM_ORDER_NOTIFY, SHIP_NOTIFY, ITEM_SHIP_NOTIFY\n        ``store_id`` | int, optional | If passed in, the webhooks will only be triggered for this ``store_id``\n        ``friendly_name`` | string, optional | Display name for the webhook\n      operationId: SubscribeToWebhook\n      parameters:\n        - name: Content-Type\n          in: header\n          description: \"\"\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n            example: application/json\n      requestBody:\n        description: \"\"\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SubscribetoWebhookrequest\"\n            example: |-\n              {\n                \"target_url\": \"http://someexamplewebhookurl.com/neworder\",\n                \"event\": \"ORDER_NOTIFY\",\n                \"store_id\": null,\n                \"friendly_name\": \"My Webhook\"\n              }\n        required: true\n      responses:\n        \"200\":\n          description: \"\"\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SubscribetoWebhookresponse\"\n              example:\n                id: 123456\n      deprecated: false\n  /webhooks/{webhookId}:\n    delete:\n      tags:\n        - Webhooks\n      summary: Unsubscribe to Webhook\n      description: Unsubscribes from a certain webhook.\n      operationId: UnsubscribeToWebhook\n      parameters:\n        - name: webhookId\n          in: path\n          description: A unique ID generated by ShipStation and assigned to each webhook.\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: integer\n            example: 12345\n        - name: Content-Type\n          in: header\n          description: \"\"\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n            example: application/json\n      responses:\n        \"200\":\n          description: \"\"\n          headers: {}\n      deprecated: false\ncomponents:\n  schemas:\n    RegisterAccountrequest:\n      title: RegisterAccountrequest\n      required:\n        - firstName\n        - lastName\n        - email\n        - password\n      type: object\n      properties:\n        firstName:\n          type: string\n        lastName:\n          type: string\n        email:\n          type: string\n        password:\n          type: string\n        companyName:\n          type: string\n        addr1:\n          type: string\n        addr2:\n          type: string\n        city:\n          type: string\n        state:\n          type: string\n        zip:\n          type: string\n        countryCode:\n          type: string\n        phone:\n          type: string\n      example:\n        firstName: John\n        lastName: Smith\n        email: jsmithtest@gmail.com\n        password: testpw1234\n        shippingOriginCountryCode: US\n        companyName: Droid Repair LLC\n        addr1: 542 Midichlorian Rd.\n        addr2: \"\"\n        city: Austin\n        state: TX\n        zip: \"78703\"\n        countryCode: US\n        phone: \"5124111234\"\n    RegisterAccountresponse:\n      title: RegisterAccountresponse\n      required:\n        - message\n        - sellerId\n        - success\n        - apiKey\n        - apiSecret\n      type: object\n      properties:\n        message:\n          type: string\n        sellerId:\n          type: integer\n          format: int32\n        success:\n          type: boolean\n        apiKey:\n          type: string\n        apiSecret:\n          type: string\n      example:\n        message: ShipStation account created.\n        sellerId: 123456\n        success: true\n        apiKey: abcdt9845hjmgfklj3498gkljdkuyekl\n        apiSecret: 1234iou983lkj8mnxgfwu509hkhdy7u3\n    ListTagsresponse:\n      title: ListTagsresponse\n      required:\n        - tagId\n        - name\n        - color\n      type: object\n      properties:\n        tagId:\n          type: integer\n          format: int32\n          example: 8362\n        name:\n          type: string\n          example: Backorder\n        color:\n          type: string\n          example: \"#800080\"\n      example:\n        tagId: 8362\n        name: Backorder\n        color: \"#800080\"\n    ListCarriersresponse:\n      title: ListCarriersresponse\n      required:\n        - name\n        - code\n        - accountNumber\n        - requiresFundedAccount\n        - balance\n        - shippingProviderId\n        - primary\n      type: object\n      properties:\n        name:\n          type: string\n          example: Stamps.com\n        code:\n          type: string\n          example: stamps_com\n        accountNumber:\n          type: string\n          example: SS123\n        requiresFundedAccount:\n          type: boolean\n          example: true\n        balance:\n          type: number\n          example: 24.27\n        nickname:\n          type: string\n          nullable: true\n        shippingProviderId:\n          type: integer\n          format: int32\n          example: 12345\n        primary:\n          type: boolean\n          example: true\n      example:\n        name: Stamps.com\n        code: stamps_com\n        accountNumber: SS123\n        requiresFundedAccount: true\n        balance: 24.27\n        nickname: \"null\"\n        shippingProviderId: 12345\n        primary: true\n    GetCarrierresponse:\n      title: GetCarrierresponse\n      required:\n        - name\n        - code\n        - accountNumber\n        - requiresFundedAccount\n        - balance\n        - shippingProviderId\n        - primary\n      type: object\n      properties:\n        name:\n          type: string\n        code:\n          type: string\n        accountNumber:\n          type: string\n        requiresFundedAccount:\n          type: boolean\n        balance:\n          type: number\n        nickname:\n          type: string\n          nullable: true\n        shippingProviderId:\n          type: integer\n          format: int32\n        primary:\n          type: boolean\n      example:\n        name: Stamps.com\n        code: stamps_com\n        accountNumber: SS123\n        requiresFundedAccount: true\n        balance: 24.27\n        nickname: null\n        shippingProviderId: 12345\n        primary: true\n    AddFundsrequest:\n      title: AddFundsrequest\n      required:\n        - carrierCode\n        - amount\n      type: object\n      properties:\n        carrierCode:\n          type: string\n        amount:\n          type: number\n      example:\n        carrierCode: fedex\n        amount: 20\n    AddFundsresponse:\n      title: AddFundsresponse\n      required:\n        - name\n        - code\n        - accountNumber\n        - requiresFundedAccount\n        - balance\n      type: object\n      properties:\n        name:\n          type: string\n        code:\n          type: string\n        accountNumber:\n          type: string\n        requiresFundedAccount:\n          type: boolean\n        balance:\n          type: number\n      example:\n        name: Stamps.com\n        code: stamps_com\n        accountNumber: SS123\n        requiresFundedAccount: true\n        balance: 24.14\n    ListPackagesresponse:\n      title: ListPackagesresponse\n      required:\n        - carrierCode\n        - code\n        - name\n        - domestic\n        - international\n      type: object\n      properties:\n        carrierCode:\n          type: string\n          example: express_1\n        code:\n          type: string\n          example: cubic\n        name:\n          type: string\n          example: Cubic\n        domestic:\n          type: boolean\n          example: true\n        international:\n          type: boolean\n          example: false\n      example:\n        carrierCode: express_1\n        code: cubic\n        name: Cubic\n        domestic: true\n        international: false\n    ListServicesresponse:\n      title: ListServicesresponse\n      required:\n        - carrierCode\n        - code\n        - name\n        - domestic\n        - international\n      type: object\n      properties:\n        carrierCode:\n          type: string\n          example: fedex\n        code:\n          type: string\n          example: fedex_ground\n        name:\n          type: string\n          example: FedEx Ground®\n        domestic:\n          type: boolean\n          example: true\n        international:\n          type: boolean\n          example: false\n      example:\n        carrierCode: fedex\n        code: fedex_ground\n        name: FedEx Ground®\n        domestic: true\n        international: false\n    GetCustomerresponse:\n      title: GetCustomerresponse\n      required:\n        - customerId\n        - createDate\n        - modifyDate\n        - name\n        - company\n        - street1\n        - street2\n        - city\n        - state\n        - postalCode\n        - countryCode\n        - phone\n        - email\n        - addressVerified\n        - marketplaceUsernames\n        - tags\n      type: object\n      properties:\n        customerId:\n          type: integer\n          format: int32\n        createDate:\n          type: string\n        modifyDate:\n          type: string\n        name:\n          type: string\n        company:\n          type: string\n        street1:\n          type: string\n        street2:\n          type: string\n        city:\n          type: string\n        state:\n          type: string\n        postalCode:\n          type: string\n        countryCode:\n          type: string\n        phone:\n          type: string\n        email:\n          type: string\n        addressVerified:\n          type: string\n        marketplaceUsernames:\n          type: array\n          items:\n            $ref: \"#/components/schemas/MarketplaceUsername\"\n          description: \"\"\n        tags:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Tag\"\n          description: \"\"\n      example:\n        customerId: 12345678\n        createDate: '\"2014-11-18T10:33:01.19\"'\n        modifyDate: '\"2014-11-18T10:33:01.19\"'\n        name: Cam Newton\n        company: Test Company\n        street1: 123 War Eagle Lane\n        street2: \"\"\n        city: Auburn\n        state: AL\n        postalCode: \"36830\"\n        countryCode: US\n        phone: 555-555-5555\n        email: supermancam@example.com\n        addressVerified: Verified\n        marketplaceUsernames:\n          - customerUserId: 67195020\n            customerId: 12345678\n            createDate: '\"2015-04-27T12:35:03.83\"'\n            modifyDate: '\"2015-05-14T08:16:15.27\"'\n            marketplaceId: 0\n            marketplace: ShipStation\n            username: camtheman@gmail.com\n          - customerUserId: 37568588\n            customerId: 12345678\n            createDate: '\"2014-11-18T10:33:01.197\"'\n            modifyDate: '\"2014-11-18T10:33:01.197\"'\n            marketplaceId: 36\n            marketplace: WooCommerce\n            username: supercam@example.com\n          - customerUserId: 46038940\n            customerId: 12345678\n            createDate: \"null\"\n            modifyDate: \"null\"\n            marketplaceId: 67\n            marketplace: TradeGecko\n            username: camtheman@gmail.com\n        tags:\n          - tagId: 1234\n            name: Expedited\n          - tagId: 9725\n            name: 00 BULK ORDERED\n    MarketplaceUsername:\n      title: MarketplaceUsername\n      required:\n        - customerUserId\n        - customerId\n        - createDate\n        - modifyDate\n        - marketplaceId\n        - marketplace\n        - username\n      type: object\n      properties:\n        customerUserId:\n          type: integer\n          format: int32\n          example: 67195020\n        customerId:\n          type: integer\n          format: int32\n          example: 12345678\n        createDate:\n          type: string\n          example: 4/27/2015 12:35:03 PM\n        modifyDate:\n          type: string\n          example: 5/14/2015 8:16:15 AM\n        marketplaceId:\n          type: integer\n          format: int32\n          example: 0\n        marketplace:\n          type: string\n          example: ShipStation\n        username:\n          type: string\n          example: camtheman@gmail.com\n      example:\n        customerUserId: 67195020\n        customerId: 12345678\n        createDate: '\"2015-04-27T12:35:03.83\"'\n        modifyDate: '\"2015-05-14T08:16:15.27\"'\n        marketplaceId: 0\n        marketplace: ShipStation\n        username: camtheman@gmail.com\n    Tag:\n      title: Tag\n      required:\n        - tagId\n        - name\n      type: object\n      properties:\n        tagId:\n          type: integer\n          format: int32\n          example: 1234\n        name:\n          type: string\n          example: Expedited\n      example:\n        tagId: 1234\n        name: Expedited\n    sortBy:\n      title: sortBy\n      enum:\n        - Name\n        - ModifyDate\n        - CreateDate\n      type: string\n      example: Name\n    sortDir:\n      title: sortDir\n      enum:\n        - ASC\n        - DESC\n      type: string\n      example: ASC\n    ListCustomersResponse:\n      title: ListCustomersResponse\n      required:\n        - customers\n        - total\n        - page\n        - pages\n      type: object\n      properties:\n        customers:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Customer\"\n          description: \"\"\n        total:\n          type: integer\n          format: int32\n        page:\n          type: integer\n          format: int32\n        pages:\n          type: integer\n          format: int32\n      example:\n        customers:\n          - customerId: 12345678\n            createDate: '\"2014-11-18T10:33:01.19\"'\n            modifyDate: '\"2014-11-18T10:33:01.19\"'\n            name: Cam Newton\n            company: Test Company\n            street1: 123 War Eagle Lane\n            street2: \"\"\n            city: Auburn\n            state: AL\n            postalCode: \"36830\"\n            countryCode: US\n            phone: 555-555-5555\n            email: supermancam@example.com\n            addressVerified: Verified\n            marketplaceUsernames:\n              - customerUserId: 67195020\n                customerId: 12345678\n                createDate: '\"2015-04-27T12:35:03.83\"'\n                modifyDate: '\"2015-05-14T08:16:15.27\"'\n                marketplaceId: 0\n                marketplace: ShipStation\n                username: camtheman@gmail.com\n              - customerUserId: 37568588\n                customerId: 12345678\n                createDate: '\"2014-11-18T10:33:01.197\"'\n                modifyDate: '\"2014-11-18T10:33:01.197\"'\n                marketplaceId: 36\n                marketplace: WooCommerce\n                username: supercam@example.com\n              - customerUserId: 46038940\n                customerId: 12345678\n                createDate: \"null\"\n                modifyDate: \"null\"\n                marketplaceId: 67\n                marketplace: TradeGecko\n                username: camtheman@gmail.com\n            tags:\n              - tagId: 1234\n                name: Expedited\n              - tagId: 9725\n                name: 00 BULK ORDERED\n          - customerId: 87654321\n            createDate: '\"2015-06-21T12:48:07.54\"'\n            name: Bo Jackson\n            company: Test Company\n            street1: 456 Heisman Ave\n            street2: \"\"\n            city: Auburn\n            state: AL\n            postalCode: \"36830\"\n            countryCode: US\n            phone: 555-555-5555\n            email: boknows@example.com\n            addressVerified: Verified\n            marketplaceUsernames:\n              - customerUserId: 77215410\n                customerId: 87654321\n                createDate: '\"2015-08-27T14:36:05.75\"'\n                modifyDate: '\"2015-09-01T09:18:25.31\"'\n                marketplaceId: 0\n                marketplace: ShipStation\n                username: boknows@gmail.com\n              - customerUserId: 43759100\n                customerId: 87654321\n                createDate: '\"2015-07-05T11:38:01.197\"'\n                modifyDate: '\"2015-07-05T11:38:01.197\"'\n                marketplaceId: 36\n                marketplace: WooCommerce\n                username: boknows@example.com\n              - customerUserId: 81565241\n                customerId: 87654321\n                createDate: \"null\"\n                modifyDate: \"null\"\n                marketplaceId: 67\n                marketplace: TradeGecko\n                username: bo@gmail.com\n            tags:\n              - tagId: 1234\n                name: Expedited\n              - tagId: 9725\n                name: 00 BULK ORDERED\n        total: 2\n        page: 1\n        pages: 1\n    Customer:\n      title: Customer\n      required:\n        - customerId\n        - createDate\n        - name\n        - company\n        - street1\n        - street2\n        - city\n        - state\n        - postalCode\n        - countryCode\n        - phone\n        - email\n        - addressVerified\n        - marketplaceUsernames\n        - tags\n      type: object\n      properties:\n        customerId:\n          type: integer\n          format: int32\n          example: 12345678\n        createDate:\n          type: string\n          example: 11/18/2014 10:33:01 AM\n        modifyDate:\n          type: string\n          example: 11/18/2014 10:33:01 AM\n        name:\n          type: string\n          example: Cam Newton\n        company:\n          type: string\n          example: Test Company\n        street1:\n          type: string\n          example: 123 War Eagle Lane\n        street2:\n          type: string\n        city:\n          type: string\n          example: Auburn\n        state:\n          type: string\n          example: AL\n        postalCode:\n          type: string\n          example: \"36830\"\n        countryCode:\n          type: string\n          example: US\n        phone:\n          type: string\n          example: 555-555-5555\n        email:\n          type: string\n          example: supermancam@example.com\n        addressVerified:\n          type: string\n          example: Verified\n        marketplaceUsernames:\n          type: array\n          items:\n            $ref: \"#/components/schemas/MarketplaceUsername\"\n          description: \"\"\n        tags:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Tag\"\n          description: \"\"\n    Fulfillment:\n      title: Fulfillment\n      required:\n        - fulfillmentId\n        - orderId\n        - orderNumber\n        - userId\n        - customerEmail\n        - trackingNumber\n        - createDate\n        - shipDate\n        - carrierCode\n        - fulfillmentFee\n        - voidRequested\n        - voided\n        - marketplaceNotified\n        - shipTo\n      type: object\n      properties:\n        fulfillmentId:\n          type: integer\n          format: int32\n          example: 33974374\n        orderId:\n          type: integer\n          format: int32\n          example: 191759016\n        orderNumber:\n          type: string\n          example: \"101\"\n        userId:\n          type: string\n          example: c9f06d74-95de-4263-9b04-e87095cababf\n        customerEmail:\n          type: string\n          example: apisupport@shipstation.com\n        trackingNumber:\n          type: string\n          example: \"783408231234\"\n        createDate:\n          type: string\n          example: 6/7/2016 8:50:50 AM\n        shipDate:\n          type: string\n          example: 6/7/2016 12:00:00 AM\n        voidDate:\n          type: string\n          nullable: true\n        deliveryDate:\n          type: string\n          nullable: true\n        carrierCode:\n          type: string\n          example: USPS\n        fulfillmentProviderCode:\n          type: string\n          nullable: true\n        fulfillmentServiceCode:\n          type: string\n          nullable: true\n        fulfillmentFee:\n          type: integer\n          format: int32\n          example: 0\n        voidRequested:\n          type: boolean\n          example: false\n        voided:\n          type: boolean\n          example: false\n        marketplaceNotified:\n          type: boolean\n          example: true\n        notifyErrorMessage:\n          type: string\n          nullable: true\n        shipTo:\n          $ref: \"#/components/schemas/ShipTo\"\n    ShipTo:\n      title: ShipTo\n      required:\n        - name\n        - street1\n        - city\n        - state\n        - postalCode\n        - country\n        - phone\n      type: object\n      properties:\n        name:\n          type: string\n          example: Yoda\n        company:\n          type: string\n          nullable: true\n        street1:\n          type: string\n          example: \"3800 N Lamar Blvd # 220\"\n        street2:\n          type: string\n          nullable: true\n        street3:\n          type: string\n          nullable: true\n        city:\n          type: string\n          example: AUSTIN\n        state:\n          type: string\n          example: TX\n        postalCode:\n          type: string\n          example: \"78756\"\n        country:\n          type: string\n          example: US\n        phone:\n          type: string\n          example: 512-485-4282\n        residential:\n          type: string\n          nullable: true\n        addressVerified:\n          type: string\n          nullable: true\n      example:\n        name: Yoda\n        company: null\n        street1: \"3800 N Lamar Blvd # 220\"\n        street2: null\n        street3: null\n        city: AUSTIN\n        state: TX\n        postalCode: \"78756\"\n        country: US\n        phone: 512-485-4282\n        residential: null\n        addressVerified: null\n    sortBy1:\n      title: sortBy1\n      enum:\n        - ShipDate\n        - CreateDate\n      type: string\n      example: ShipDate\n    ListFulfillmentsResponse:\n      title: ListFulfillmentsResponse\n      required:\n        - fulfillments\n        - total\n        - page\n        - pages\n      type: object\n      properties:\n        fulfillments:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Fulfillment\"\n          description: \"\"\n        total:\n          type: integer\n          format: int32\n        page:\n          type: integer\n          format: int32\n        pages:\n          type: integer\n          format: int32\n      example:\n        fulfillments:\n          - fulfillmentId: 33974374\n            orderId: 191759016\n            orderNumber: \"101\"\n            userId: c9f06d74-95de-4263-9b04-e87095cababf\n            customerEmail: apisupport@shipstation.com\n            trackingNumber: \"783408231234\"\n            createDate: \"2016-06-07T08:50:50.067\"\n            shipDate: \"2016-06-07T00:00:00\"\n            voidDate: null\n            deliveryDate: null\n            carrierCode: USPS\n            fulfillmentProviderCode: null\n            fulfillmentServiceCode: null\n            fulfillmentFee: 0\n            voidRequested: false\n            voided: false\n            marketplaceNotified: true\n            notifyErrorMessage: null\n            shipTo:\n              name: Yoda\n              company: null\n              street1: \"3800 N Lamar Blvd # 220\"\n              street2: null\n              street3: null\n              city: AUSTIN\n              state: TX\n              postalCode: \"78756\"\n              country: US\n              phone: 512-485-4282\n              residential: null\n              addressVerified: null\n          - fulfillmentId: 246310\n            orderId: 193699927\n            orderNumber: \"101\"\n            userId: c9f06d74-95de-4263-9b04-e87095cababf\n            customerEmail: apisupport@shipstation.com\n            trackingNumber: \"664756278745\"\n            createDate: \"2016-06-08T12:54:53.347\"\n            shipDate: \"2016-06-08T00:00:00\"\n            voidDate: null\n            deliveryDate: null\n            carrierCode: FedEx\n            fulfillmentProviderCode: null\n            fulfillmentServiceCode: null\n            fulfillmentFee: 0\n            voidRequested: false\n            voided: false\n            marketplaceNotified: true\n            notifyErrorMessage: null\n            shipTo:\n              name: Yoda\n              company: null\n              street1: \"3800 N Lamar Blvd # 220\"\n              street2: null\n              street3: null\n              city: AUSTIN\n              state: TX\n              postalCode: \"78756\"\n              country: US\n              phone: 512-485-4282\n              residential: null\n              addressVerified: null\n        total: 2\n        page: 1\n        pages: 0\n    GetOrderresponse:\n      title: GetOrderresponse\n      required:\n        - orderId\n        - orderNumber\n        - orderKey\n        - orderDate\n        - createDate\n        - modifyDate\n        - paymentDate\n        - shipByDate\n        - orderStatus\n        - customerId\n        - customerUsername\n        - customerEmail\n        - billTo\n        - shipTo\n        - items\n        - orderTotal\n        - amountPaid\n        - taxAmount\n        - shippingAmount\n        - customerNotes\n        - internalNotes\n        - gift\n        - giftMessage\n        - paymentMethod\n        - requestedShippingService\n        - carrierCode\n        - serviceCode\n        - packageCode\n        - confirmation\n        - shipDate\n        - weight\n        - dimensions\n        - insuranceOptions\n        - internationalOptions\n        - advancedOptions\n        - externallyFulfilled\n      type: object\n      properties:\n        orderId:\n          type: integer\n          format: int32\n        orderNumber:\n          type: string\n        orderKey:\n          type: string\n        orderDate:\n          type: string\n        createDate:\n          type: string\n        modifyDate:\n          type: string\n        paymentDate:\n          type: string\n        shipByDate:\n          type: string\n        orderStatus:\n          type: string\n        customerId:\n          type: integer\n          format: int32\n        customerUsername:\n          type: string\n        customerEmail:\n          type: string\n        billTo:\n          $ref: \"#/components/schemas/BillTo\"\n        shipTo:\n          $ref: \"#/components/schemas/ShipTo2\"\n        items:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Item\"\n          description: \"\"\n        orderTotal:\n          type: number\n        amountPaid:\n          type: number\n        taxAmount:\n          type: integer\n          format: int32\n        shippingAmount:\n          type: integer\n          format: int32\n        customerNotes:\n          type: string\n        internalNotes:\n          type: string\n        gift:\n          type: boolean\n        giftMessage:\n          type: string\n        paymentMethod:\n          type: string\n        requestedShippingService:\n          type: string\n        carrierCode:\n          type: string\n        serviceCode:\n          type: string\n        packageCode:\n          type: string\n        confirmation:\n          type: string\n        shipDate:\n          type: string\n        holdUntilDate:\n          type: string\n          nullable: true\n        weight:\n          $ref: \"#/components/schemas/Weight\"\n        dimensions:\n          $ref: \"#/components/schemas/Dimensions\"\n        insuranceOptions:\n          $ref: \"#/components/schemas/InsuranceOptions\"\n        internationalOptions:\n          $ref: \"#/components/schemas/InternationalOptions\"\n        advancedOptions:\n          $ref: \"#/components/schemas/AdvancedOptions\"\n        tagIds:\n          type: string\n          nullable: true\n        userId:\n          type: string\n          nullable: true\n        externallyFulfilled:\n          type: boolean\n        externallyFulfilledBy:\n          type: string\n          nullable: true\n    BillTo:\n      title: BillTo\n      required:\n        - name\n      type: object\n      properties:\n        name:\n          type: string\n        company:\n          type: string\n          nullable: true\n        street1:\n          type: string\n          nullable: true\n        street2:\n          type: string\n          nullable: true\n        street3:\n          type: string\n          nullable: true\n        city:\n          type: string\n          nullable: true\n        state:\n          type: string\n          nullable: true\n        postalCode:\n          type: string\n          nullable: true\n        country:\n          type: string\n          nullable: true\n        phone:\n          type: string\n          nullable: true\n        residential:\n          type: string\n          nullable: true\n        addressVerified:\n          type: string\n          nullable: true\n      example:\n        name: Sherlock Holmes\n        company: null\n        street1: null\n        street2: null\n        street3: null\n        city: null\n        state: null\n        postalCode: null\n        country: null\n        phone: null\n        residential: null\n        addressVerified: null\n    ShipTo2:\n      title: ShipTo2\n      required:\n        - name\n        - company\n        - street1\n        - street2\n        - city\n        - state\n        - postalCode\n        - country\n        - phone\n        - residential\n        - addressVerified\n      type: object\n      properties:\n        name:\n          type: string\n        company:\n          type: string\n        street1:\n          type: string\n        street2:\n          type: string\n        street3:\n          type: string\n          nullable: true\n        city:\n          type: string\n        state:\n          type: string\n        postalCode:\n          type: string\n        country:\n          type: string\n        phone:\n          type: string\n        residential:\n          type: boolean\n        addressVerified:\n          type: string\n      example:\n        name: The President\n        company: US Govt\n        street1: 1600 Pennsylvania Ave\n        street2: Oval Office\n        street3: null\n        city: Washington\n        state: DC\n        postalCode: \"20500\"\n        country: US\n        phone: 555-555-5555\n        residential: false\n        addressVerified: Address validation warning\n    Item:\n      title: Item\n      required:\n        - orderItemId\n        - lineItemKey\n        - sku\n        - name\n        - weight\n        - quantity\n        - unitPrice\n        - warehouseLocation\n        - options\n        - productId\n        - adjustment\n        - createDate\n        - modifyDate\n      type: object\n      properties:\n        orderItemId:\n          type: integer\n          format: int32\n          example: 128836912\n        lineItemKey:\n          type: string\n          example: vd08-MSLbtx\n        sku:\n          type: string\n          example: ABC123\n        name:\n          type: string\n          example: \"Test item #1\"\n        imageUrl:\n          type: string\n          nullable: true\n        weight:\n          $ref: \"#/components/schemas/Weight\"\n        quantity:\n          type: integer\n          format: int32\n          example: 2\n        unitPrice:\n          type: number\n          example: 99.99\n        taxAmount:\n          type: string\n          nullable: true\n        shippingAmount:\n          type: string\n          nullable: true\n        warehouseLocation:\n          type: string\n          example: Aisle 1, Bin 7\n        options:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Option\"\n          description: \"\"\n        productId:\n          type: integer\n          format: int32\n          example: 7239919\n        fulfillmentSku:\n          type: string\n          nullable: true\n        adjustment:\n          type: boolean\n          example: false\n        upc:\n          type: string\n          nullable: true\n        createDate:\n          type: string\n          example: 7/16/2015 2:00:34 PM\n        modifyDate:\n          type: string\n          example: 7/16/2015 2:00:34 PM\n    Weight:\n      title: Weight\n      required:\n        - value\n        - units\n      type: object\n      properties:\n        value:\n          type: integer\n          format: int32\n          example: 24\n        units:\n          type: string\n          example: ounces\n      example:\n        value: 24\n        units: ounces\n    Option:\n      title: Option\n      type: object\n      properties:\n        name:\n          type: string\n          example: Size\n        value:\n          type: string\n          example: Large\n      example:\n        name: Size\n        value: Large\n    Dimensions:\n      title: Dimensions\n      required:\n        - units\n        - length\n        - width\n        - height\n      type: object\n      properties:\n        units:\n          type: string\n        length:\n          type: integer\n          format: int32\n        width:\n          type: integer\n          format: int32\n        height:\n          type: integer\n          format: int32\n      example:\n        units: inches\n        length: 7\n        width: 5\n        height: 6\n    InsuranceOptions:\n      title: InsuranceOptions\n      required:\n        - provider\n        - insureShipment\n        - insuredValue\n      type: object\n      properties:\n        provider:\n          type: string\n        insureShipment:\n          type: boolean\n        insuredValue:\n          type: integer\n          format: int32\n      example:\n        provider: carrier\n        insureShipment: true\n        insuredValue: 200\n    InternationalOptions:\n      title: InternationalOptions\n      type: object\n      properties:\n        contents:\n          type: string\n          nullable: true\n        customsItems:\n          type: string\n          nullable: true\n        nonDelivery:\n          type: string\n          nullable: true\n      example:\n        contents: null\n        customsItems: null\n        nonDelivery: null\n    AdvancedOptions:\n      title: AdvancedOptions\n      required:\n        - warehouseId\n        - nonMachinable\n        - saturdayDelivery\n        - containsAlcohol\n        - mergedOrSplit\n        - mergedIds\n        - storeId\n        - customField1\n        - customField2\n        - customField3\n        - source\n      type: object\n      properties:\n        warehouseId:\n          type: integer\n          format: int32\n        nonMachinable:\n          type: boolean\n        saturdayDelivery:\n          type: boolean\n        containsAlcohol:\n          type: boolean\n        mergedOrSplit:\n          type: boolean\n        mergedIds:\n          type: array\n          items:\n            type: string\n          description: \"\"\n        parentId:\n          type: string\n          nullable: true\n        storeId:\n          type: integer\n          format: int32\n        customField1:\n          type: string\n        customField2:\n          type: string\n        customField3:\n          type: string\n        source:\n          type: string\n        billToParty:\n          type: string\n          nullable: true\n        billToAccount:\n          type: string\n          nullable: true\n        billToPostalCode:\n          type: string\n          nullable: true\n        billToCountryCode:\n          type: string\n          nullable: true\n      example:\n        warehouseId: 98765\n        nonMachinable: false\n        saturdayDelivery: false\n        containsAlcohol: false\n        mergedOrSplit: false\n        mergedIds: []\n        parentId: null\n        storeId: 12345\n        customField1: \"Custom data that you can add to an order. See Custom Field #2 \u0026 #3 for more info!\"\n        customField2: Per UI settings, this information can appear on some carrier's shipping labels. See link below\n        customField3: https://help.shipstation.com/hc/en-us/articles/206639957\n        source: Webstore\n        billToParty: null\n        billToAccount: null\n        billToPostalCode: null\n        billToCountryCode: null\n    DeleteOrderresponse:\n      title: DeleteOrderresponse\n      required:\n        - success\n        - message\n      type: object\n      properties:\n        success:\n          type: boolean\n        message:\n          type: string\n      example:\n        success: true\n        message: The requested order has been deleted.\n    AddTagtoOrderrequest:\n      title: AddTagtoOrderrequest\n      required:\n        - orderId\n        - tagId\n      type: object\n      properties:\n        orderId:\n          type: integer\n          format: int32\n        tagId:\n          type: integer\n          format: int32\n      example:\n        orderId: 123456\n        tagId: 1234\n    AddTagtoOrderresponse:\n      title: AddTagtoOrderresponse\n      required:\n        - success\n        - message\n      type: object\n      properties:\n        success:\n          type: boolean\n        message:\n          type: string\n      example:\n        success: true\n        message: Tag added successfully.\n    AssignUsertoOrderrequest:\n      title: AssignUsertoOrderrequest\n      required:\n        - orderIds\n        - userId\n      type: object\n      properties:\n        orderIds:\n          type: array\n          items:\n            type: integer\n            format: int32\n          description: \"\"\n        userId:\n          type: string\n      example:\n        orderIds:\n          - 123456789\n          - 12345679\n        userId: 123456AB-ab12-3c4d-5e67-89f1abc1defa\n    AssignUsertoOrderresponse:\n      title: AssignUsertoOrderresponse\n      required:\n        - success\n        - message\n      type: object\n      properties:\n        success:\n          type: boolean\n        message:\n          type: string\n      example:\n        success: true\n        message: User assigned successfully.\n    CreateLabelforOrderrequest:\n      title: CreateLabelforOrderrequest\n      required:\n        - orderId\n        - carrierCode\n        - serviceCode\n        - packageCode\n        - shipDate\n        - weight\n        - testLabel\n      type: object\n      properties:\n        orderId:\n          type: integer\n          format: int32\n        carrierCode:\n          type: string\n        serviceCode:\n          type: string\n        packageCode:\n          type: string\n        confirmation:\n          type: string\n          nullable: true\n        shipDate:\n          type: string\n        weight:\n          $ref: \"#/components/schemas/Weight\"\n        dimensions:\n          type: string\n          nullable: true\n        insuranceOptions:\n          type: string\n          nullable: true\n        internationalOptions:\n          type: string\n          nullable: true\n        advancedOptions:\n          type: string\n          nullable: true\n        testLabel:\n          type: boolean\n      example:\n        orderId: 93348442\n        carrierCode: fedex\n        serviceCode: fedex_2day\n        packageCode: package\n        confirmation: null\n        shipDate: \"2014-04-03\"\n        weight:\n          value: 2\n          units: pounds\n        dimensions: null\n        insuranceOptions: null\n        internationalOptions: null\n        advancedOptions: null\n        testLabel: false\n    CreateLabelforOrderresponse:\n      title: CreateLabelforOrderresponse\n      required:\n        - shipmentId\n        - shipmentCost\n        - insuranceCost\n        - trackingNumber\n        - labelData\n      type: object\n      properties:\n        shipmentId:\n          type: integer\n          format: int32\n        shipmentCost:\n          type: number\n        insuranceCost:\n          type: integer\n          format: int32\n        trackingNumber:\n          type: string\n        labelData:\n          type: string\n        formData:\n          type: string\n          nullable: true\n      example:\n        shipmentId: 72513480\n        shipmentCost: 7.3\n        insuranceCost: 0\n        trackingNumber: \"248201115029520\"\n        labelData: JVBERi0xLjQKJeLjz9MKMiAwIG9iago8PC9MZW5ndGggNjIvRmlsdGVyL0ZsYXRlRGVjb2RlPj5zdHJlYW0KeJwr5HIK4TI2UzC2NFMISeFyDeEK5CpUMFQwAEJDBV0jCz0LBV1jY0M9I4XkXAX9iDRDBZd8hUAuAEdGC7cKZW5kc3RyZWFtCmVuZG9iago0IDAgb2JqCjw8L1R5cGUvUGFnZS9NZWRpYUJveFswIDAgMjg4IDQzMl0vUmVzb3VyY2VzPDwvUHJvY1NldCBbL1BERiAvVGV4dCAvSW1hZ2VCIC9JbWFnZUMgL0ltYWdlSV0vWE9iamVjdDw8L1hmMSAxIDAgUj4+Pj4vQ29udGVudHMgMiAwIFIvUGFyZW50....\n        formData: null\n    CreateOrUpdateOrderrequest:\n      title: Create/UpdateOrderrequest\n      required:\n        - orderNumber\n        - orderKey\n        - orderDate\n        - paymentDate\n        - shipByDate\n        - orderStatus\n        - customerId\n        - customerUsername\n        - customerEmail\n        - billTo\n        - shipTo\n        - items\n        - amountPaid\n        - taxAmount\n        - shippingAmount\n        - customerNotes\n        - internalNotes\n        - gift\n        - giftMessage\n        - paymentMethod\n        - requestedShippingService\n        - carrierCode\n        - serviceCode\n        - packageCode\n        - confirmation\n        - shipDate\n        - weight\n        - dimensions\n        - insuranceOptions\n        - internationalOptions\n        - advancedOptions\n        - tagIds\n      type: object\n      properties:\n        orderNumber:\n          type: string\n        orderKey:\n          type: string\n        orderDate:\n          type: string\n        paymentDate:\n          type: string\n        shipByDate:\n          type: string\n        orderStatus:\n          type: string\n        customerId:\n          type: integer\n          format: int32\n        customerUsername:\n          type: string\n        customerEmail:\n          type: string\n        billTo:\n          $ref: \"#/components/schemas/BillTo1\"\n        shipTo:\n          $ref: \"#/components/schemas/ShipTo3\"\n        items:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Item1\"\n          description: \"\"\n        amountPaid:\n          type: number\n        taxAmount:\n          type: integer\n          format: int32\n        shippingAmount:\n          type: integer\n          format: int32\n        customerNotes:\n          type: string\n        internalNotes:\n          type: string\n        gift:\n          type: boolean\n        giftMessage:\n          type: string\n        paymentMethod:\n          type: string\n        requestedShippingService:\n          type: string\n        carrierCode:\n          type: string\n        serviceCode:\n          type: string\n        packageCode:\n          type: string\n        confirmation:\n          type: string\n        shipDate:\n          type: string\n        weight:\n          $ref: \"#/components/schemas/Weight\"\n        dimensions:\n          $ref: \"#/components/schemas/Dimensions\"\n        insuranceOptions:\n          $ref: \"#/components/schemas/InsuranceOptions\"\n        internationalOptions:\n          $ref: \"#/components/schemas/InternationalOptions1\"\n        advancedOptions:\n          $ref: \"#/components/schemas/AdvancedOptions\"\n        tagIds:\n          type: array\n          items:\n            type: integer\n            format: int32\n          description: \"\"\n    BillTo1:\n      title: BillTo1\n      required:\n        - name\n      type: object\n      properties:\n        name:\n          type: string\n        company:\n          type: string\n          nullable: true\n        street1:\n          type: string\n          nullable: true\n        street2:\n          type: string\n          nullable: true\n        street3:\n          type: string\n          nullable: true\n        city:\n          type: string\n          nullable: true\n        state:\n          type: string\n          nullable: true\n        postalCode:\n          type: string\n          nullable: true\n        country:\n          type: string\n          nullable: true\n        phone:\n          type: string\n          nullable: true\n        residential:\n          type: string\n          nullable: true\n      example:\n        name: The President\n        company: null\n        street1: null\n        street2: null\n        street3: null\n        city: null\n        state: null\n        postalCode: null\n        country: null\n        phone: null\n        residential: null\n    ShipTo3:\n      title: ShipTo3\n      required:\n        - name\n        - company\n        - street1\n        - street2\n        - city\n        - state\n        - postalCode\n        - country\n        - phone\n        - residential\n      type: object\n      properties:\n        name:\n          type: string\n        company:\n          type: string\n        street1:\n          type: string\n        street2:\n          type: string\n        street3:\n          type: string\n          nullable: true\n        city:\n          type: string\n        state:\n          type: string\n        postalCode:\n          type: string\n        country:\n          type: string\n        phone:\n          type: string\n        residential:\n          type: boolean\n      example:\n        name: The President\n        company: US Govt\n        street1: 1600 Pennsylvania Ave\n        street2: Oval Office\n        street3: null\n        city: Washington\n        state: DC\n        postalCode: \"20500\"\n        country: US\n        phone: 555-555-5555\n        residential: true\n    Item1:\n      title: Item1\n      required:\n        - lineItemKey\n        - sku\n        - name\n        - weight\n        - quantity\n        - unitPrice\n        - taxAmount\n        - shippingAmount\n        - warehouseLocation\n        - options\n        - productId\n        - adjustment\n        - upc\n      type: object\n      properties:\n        lineItemKey:\n          type: string\n          example: vd08-MSLbtx\n        sku:\n          type: string\n          example: ABC123\n        name:\n          type: string\n          example: \"Test item #1\"\n        imageUrl:\n          type: string\n          nullable: true\n        weight:\n          $ref: \"#/components/schemas/Weight\"\n        quantity:\n          type: integer\n          format: int32\n          example: 2\n        unitPrice:\n          type: number\n          example: 99.99\n        taxAmount:\n          type: number\n          example: 2.5\n        shippingAmount:\n          type: number\n          example: 5\n        warehouseLocation:\n          type: string\n          example: Aisle 1, Bin 7\n        options:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Option\"\n          description: \"\"\n        productId:\n          type: integer\n          format: int32\n          example: 123456\n        fulfillmentSku:\n          type: string\n          nullable: true\n        adjustment:\n          type: boolean\n          example: false\n        upc:\n          type: string\n          example: 32-65-98\n    InternationalOptions1:\n      title: InternationalOptions1\n      type: object\n      properties:\n        contents:\n          type: string\n          nullable: true\n        customsItems:\n          type: string\n          nullable: true\n      example:\n        contents: null\n        customsItems: null\n    CreateOrUpdateOrderresponse:\n      title: Create/UpdateOrderresponse\n      required:\n        - orderId\n        - orderNumber\n        - orderKey\n        - orderDate\n        - createDate\n        - modifyDate\n        - paymentDate\n        - shipByDate\n        - orderStatus\n        - customerUsername\n        - customerEmail\n        - billTo\n        - shipTo\n        - items\n        - orderTotal\n        - amountPaid\n        - taxAmount\n        - shippingAmount\n        - customerNotes\n        - internalNotes\n        - gift\n        - giftMessage\n        - paymentMethod\n        - requestedShippingService\n        - carrierCode\n        - serviceCode\n        - packageCode\n        - confirmation\n        - shipDate\n        - weight\n        - dimensions\n        - insuranceOptions\n        - internationalOptions\n        - advancedOptions\n        - externallyFulfilled\n      type: object\n      properties:\n        orderId:\n          type: integer\n          format: int32\n        orderNumber:\n          type: string\n        orderKey:\n          type: string\n        orderDate:\n          type: string\n        createDate:\n          type: string\n        modifyDate:\n          type: string\n        paymentDate:\n          type: string\n        shipByDate:\n          type: string\n        orderStatus:\n          type: string\n        customerId:\n          type: string\n          nullable: true\n        customerUsername:\n          type: string\n        customerEmail:\n          type: string\n        billTo:\n          $ref: \"#/components/schemas/BillTo\"\n        shipTo:\n          $ref: \"#/components/schemas/ShipTo2\"\n        items:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Item2\"\n          description: \"\"\n        orderTotal:\n          type: number\n        amountPaid:\n          type: number\n        taxAmount:\n          type: integer\n          format: int32\n        shippingAmount:\n          type: integer\n          format: int32\n        customerNotes:\n          type: string\n        internalNotes:\n          type: string\n        gift:\n          type: boolean\n        giftMessage:\n          type: string\n        paymentMethod:\n          type: string\n        requestedShippingService:\n          type: string\n        carrierCode:\n          type: string\n        serviceCode:\n          type: string\n        packageCode:\n          type: string\n        confirmation:\n          type: string\n        shipDate:\n          type: string\n        holdUntilDate:\n          type: string\n          nullable: true\n        weight:\n          $ref: \"#/components/schemas/Weight\"\n        dimensions:\n          $ref: \"#/components/schemas/Dimensions\"\n        insuranceOptions:\n          $ref: \"#/components/schemas/InsuranceOptions\"\n        internationalOptions:\n          $ref: \"#/components/schemas/InternationalOptions\"\n        advancedOptions:\n          $ref: \"#/components/schemas/AdvancedOptions\"\n        tagIds:\n          type: string\n          nullable: true\n        userId:\n          type: string\n          nullable: true\n        externallyFulfilled:\n          type: boolean\n        externallyFulfilledBy:\n          type: string\n          nullable: true\n    Item2:\n      title: Item2\n      required:\n        - orderItemId\n        - lineItemKey\n        - sku\n        - name\n        - weight\n        - quantity\n        - unitPrice\n        - taxAmount\n        - shippingAmount\n        - warehouseLocation\n        - options\n        - adjustment\n        - upc\n        - createDate\n        - modifyDate\n      type: object\n      properties:\n        orderItemId:\n          type: integer\n          format: int32\n          example: 192210956\n        lineItemKey:\n          type: string\n          example: vd08-MSLbtx\n        sku:\n          type: string\n          example: ABC123\n        name:\n          type: string\n          example: \"Test item #1\"\n        imageUrl:\n          type: string\n          nullable: true\n        weight:\n          $ref: \"#/components/schemas/Weight\"\n        quantity:\n          type: integer\n          format: int32\n          example: 2\n        unitPrice:\n          type: number\n          example: 99.99\n        taxAmount:\n          type: number\n          example: 2.5\n        shippingAmount:\n          type: integer\n          format: int32\n          example: 5\n        warehouseLocation:\n          type: string\n          example: Aisle 1, Bin 7\n        options:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Option\"\n          description: \"\"\n        productId:\n          type: string\n          nullable: true\n        fulfillmentSku:\n          type: string\n          nullable: true\n        adjustment:\n          type: boolean\n          example: false\n        upc:\n          type: string\n          example: 32-65-98\n        createDate:\n          type: string\n          example: 2/16/2016 3:16:53 PM\n        modifyDate:\n          type: string\n          example: 2/16/2016 3:16:53 PM\n    CreateOrUpdateMultipleOrdersrequest:\n      title: Create/UpdateMultipleOrdersrequest\n      required:\n        - orderNumber\n        - orderKey\n        - orderDate\n        - paymentDate\n        - shipByDate\n        - orderStatus\n        - customerId\n        - customerUsername\n        - customerEmail\n        - billTo\n        - shipTo\n        - items\n        - amountPaid\n        - taxAmount\n        - shippingAmount\n        - customerNotes\n        - internalNotes\n        - gift\n        - giftMessage\n        - paymentMethod\n        - requestedShippingService\n        - carrierCode\n        - serviceCode\n        - packageCode\n        - confirmation\n        - shipDate\n        - weight\n        - dimensions\n        - insuranceOptions\n        - internationalOptions\n        - advancedOptions\n        - tagIds\n      type: object\n      properties:\n        orderNumber:\n          type: string\n          example: TEST-ORDER-API-DOCS\n        orderKey:\n          type: string\n          example: 0f6bec18-3e89-4881-83aa-f392d84f4c74\n        orderDate:\n          type: string\n          example: 6/29/2015 8:46:27 AM\n        paymentDate:\n          type: string\n          example: 6/29/2015 8:46:27 AM\n        shipByDate:\n          type: string\n          example: 7/5/2015 12:00:00 AM\n        orderStatus:\n          type: string\n          example: awaiting_shipment\n        customerId:\n          type: integer\n          format: int32\n          example: 37701499\n        customerUsername:\n          type: string\n          example: headhoncho@whitehouse.gov\n        customerEmail:\n          type: string\n          example: headhoncho@whitehouse.gov\n        billTo:\n          $ref: \"#/components/schemas/BillTo1\"\n        shipTo:\n          $ref: \"#/components/schemas/ShipTo3\"\n        items:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Item1\"\n          description: \"\"\n        amountPaid:\n          type: number\n          example: 218.73\n        taxAmount:\n          type: integer\n          format: int32\n          example: 5\n        shippingAmount:\n          type: integer\n          format: int32\n          example: 10\n        customerNotes:\n          type: string\n          example: Please ship as soon as possible!\n        internalNotes:\n          type: string\n          example: Customer called and would like to upgrade shipping\n        gift:\n          type: boolean\n          example: true\n        giftMessage:\n          type: string\n          example: Thank you!\n        paymentMethod:\n          type: string\n          example: Credit Card\n        requestedShippingService:\n          type: string\n          example: Priority Mail\n        carrierCode:\n          type: string\n          example: fedex\n        serviceCode:\n          type: string\n          example: fedex_2day\n        packageCode:\n          type: string\n          example: package\n        confirmation:\n          type: string\n          example: delivery\n        shipDate:\n          type: string\n          example: \"2015-07-02\"\n        weight:\n          $ref: \"#/components/schemas/Weight\"\n        dimensions:\n          $ref: \"#/components/schemas/Dimensions\"\n        insuranceOptions:\n          $ref: \"#/components/schemas/InsuranceOptions\"\n        internationalOptions:\n          $ref: \"#/components/schemas/InternationalOptions1\"\n        advancedOptions:\n          $ref: \"#/components/schemas/AdvancedOptions\"\n        tagIds:\n          type: array\n          items:\n            type: integer\n            format: int32\n          description: \"\"\n    CreateOrUpdateMultipleOrdersresponse:\n      title: Create/UpdateMultipleOrdersresponse\n      required:\n        - hasErrors\n        - results\n      type: object\n      properties:\n        hasErrors:\n          type: boolean\n        results:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Result\"\n          description: \"\"\n      example:\n        hasErrors: false\n        results:\n          - orderId: 58345234\n            orderNumber: TEST-ORDER-API-DOCS\n            orderKey: 0f6bec18-3e89-4881-83aa-f392d84f4c74\n            success: true\n            errorMessage: null\n    Result:\n      title: Result\n      required:\n        - orderId\n        - orderNumber\n        - orderKey\n        - success\n      type: object\n      properties:\n        orderId:\n          type: integer\n          format: int32\n          example: 58345234\n        orderNumber:\n          type: string\n          example: TEST-ORDER-API-DOCS\n        orderKey:\n          type: string\n          example: 0f6bec18-3e89-4881-83aa-f392d84f4c74\n        success:\n          type: boolean\n          example: true\n        errorMessage:\n          type: string\n          nullable: true\n    HoldOrderUntilrequest:\n      title: HoldOrderUntilrequest\n      required:\n        - orderId\n        - holdUntilDate\n      type: object\n      properties:\n        orderId:\n          type: integer\n          format: int32\n        holdUntilDate:\n          type: string\n      example:\n        orderId: 1072467\n        holdUntilDate: \"2014-12-01\"\n    HoldOrderUntilresponse:\n      title: HoldOrderUntilresponse\n      required:\n        - success\n        - message\n      type: object\n      properties:\n        success:\n          type: boolean\n        message:\n          type: string\n      example:\n        success: true\n        message: Order held successfully.\n    Order:\n      title: Order\n      required:\n        - orderId\n        - orderNumber\n        - orderKey\n        - orderDate\n        - createDate\n        - modifyDate\n        - paymentDate\n        - shipByDate\n        - orderStatus\n        - customerId\n        - customerUsername\n        - customerEmail\n        - billTo\n        - shipTo\n        - items\n        - orderTotal\n        - amountPaid\n        - taxAmount\n        - shippingAmount\n        - customerNotes\n        - internalNotes\n        - gift\n        - requestedShippingService\n        - carrierCode\n        - serviceCode\n        - packageCode\n        - confirmation\n        - shipDate\n        - weight\n        - dimensions\n        - insuranceOptions\n        - internationalOptions\n        - advancedOptions\n        - externallyFulfilled\n      type: object\n      properties:\n        orderId:\n          type: integer\n          format: int32\n          example: 987654321\n        orderNumber:\n          type: string\n          example: Test-International-API-DOCS\n        orderKey:\n          type: string\n          example: Test-International-API-DOCS\n        orderDate:\n          type: string\n          example: 6/28/2015 5:46:27 PM\n        createDate:\n          type: string\n          example: 8/17/2015 9:24:14 AM\n        modifyDate:\n          type: string\n          example: 8/17/2015 9:24:16 AM\n        paymentDate:\n          type: string\n          example: 6/28/2015 5:46:27 PM\n        shipByDate:\n          type: string\n          example: 7/5/2015 12:00:00 AM\n        orderStatus:\n          type: string\n          example: awaiting_shipment\n        customerId:\n          type: integer\n          format: int32\n          example: 63310475\n        customerUsername:\n          type: string\n          example: sholmes1854@methodsofdetection.com\n        customerEmail:\n          type: string\n          example: sholmes1854@methodsofdetection.com\n        billTo:\n          $ref: \"#/components/schemas/BillTo\"\n        shipTo:\n          $ref: \"#/components/schemas/ShipTo6\"\n        items:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Item4\"\n          description: \"\"\n        orderTotal:\n          type: number\n          example: 387.97\n        amountPaid:\n          type: number\n          example: 412.97\n        taxAmount:\n          type: number\n          example: 27.99\n        shippingAmount:\n          type: integer\n          format: int32\n          example: 35\n        customerNotes:\n          type: string\n          example: Please be careful when packing the disguise kits in with the cane.\n        internalNotes:\n          type: string\n          example: Mr. Holmes called to upgrade his shipping to expedited\n        gift:\n          type: boolean\n          example: false\n        giftMessage:\n          type: string\n          nullable: true\n        paymentMethod:\n          type: string\n          nullable: true\n        requestedShippingService:\n          type: string\n          example: Priority Mail Int\n        carrierCode:\n          type: string\n          example: stamps_com\n        serviceCode:\n          type: string\n          example: usps_priority_mail_international\n        packageCode:\n          type: string\n          example: package\n        confirmation:\n          type: string\n          example: delivery\n        shipDate:\n          type: string\n          example: \"2015-04-25\"\n        holdUntilDate:\n          type: string\n          nullable: true\n        weight:\n          $ref: \"#/components/schemas/Weight\"\n        dimensions:\n          $ref: \"#/components/schemas/Dimensions\"\n        insuranceOptions:\n          $ref: \"#/components/schemas/InsuranceOptions4\"\n        internationalOptions:\n          $ref: \"#/components/schemas/InternationalOptions4\"\n        advancedOptions:\n          $ref: \"#/components/schemas/AdvancedOptions4\"\n        tagIds:\n          type: string\n          nullable: true\n        userId:\n          type: string\n          nullable: true\n        externallyFulfilled:\n          type: boolean\n          example: false\n        externallyFulfilledBy:\n          type: string\n          nullable: true\n    ShipTo6:\n      title: ShipTo6\n      required:\n        - name\n        - company\n        - street1\n        - street2\n        - city\n        - state\n        - postalCode\n        - country\n        - residential\n        - addressVerified\n      type: object\n      properties:\n        name:\n          type: string\n          example: Sherlock Holmes\n        company:\n          type: string\n        street1:\n          type: string\n          example: 221 B Baker St\n        street2:\n          type: string\n        street3:\n          type: string\n          nullable: true\n        city:\n          type: string\n          example: London\n        state:\n          type: string\n        postalCode:\n          type: string\n          example: NW1 6XE\n        country:\n          type: string\n          example: GB\n        phone:\n          type: string\n          nullable: true\n        residential:\n          type: boolean\n          example: true\n        addressVerified:\n          type: string\n          example: Address not yet validated\n      example:\n        name: Sherlock Holmes\n        company: \"\"\n        street1: 221 B Baker St\n        street2: \"\"\n        street3: null\n        city: London\n        state: \"\"\n        postalCode: NW1 6XE\n        country: GB\n        phone: null\n        residential: true\n        addressVerified: Address not yet validated\n    Item4:\n      title: Item4\n      required:\n        - orderItemId\n        - sku\n        - name\n        - weight\n        - quantity\n        - unitPrice\n        - warehouseLocation\n        - options\n        - productId\n        - fulfillmentSku\n        - adjustment\n        - createDate\n        - modifyDate\n      type: object\n      properties:\n        orderItemId:\n          type: integer\n          format: int32\n          example: 136282568\n        lineItemKey:\n          type: string\n          nullable: true\n        sku:\n          type: string\n          example: Ele-1234\n        name:\n          type: string\n          example: Elementary Disguise Kit\n        imageUrl:\n          type: string\n          nullable: true\n        weight:\n          $ref: \"#/components/schemas/Weight\"\n        quantity:\n          type: integer\n          format: int32\n          example: 2\n        unitPrice:\n          type: number\n          example: 49.99\n        taxAmount:\n          type: string\n          nullable: true\n        shippingAmount:\n          type: string\n          nullable: true\n        warehouseLocation:\n          type: string\n          example: Aisle 1, Bin 7\n        options:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Option\"\n          description: \"\"\n        productId:\n          type: integer\n          format: int32\n          example: 11780610\n        fulfillmentSku:\n          type: string\n          example: Ele-1234\n        adjustment:\n          type: boolean\n          example: false\n        upc:\n          type: string\n          nullable: true\n        createDate:\n          type: string\n          example: 8/17/2015 9:24:14 AM\n        modifyDate:\n          type: string\n          example: 8/17/2015 9:24:14 AM\n      example:\n        orderItemId: 136282568\n        lineItemKey: \"null\"\n        sku: Ele-1234\n        name: Elementary Disguise Kit\n        imageUrl: \"null\"\n        weight:\n          value: 12\n          units: ounces\n        quantity: 2\n        unitPrice: 49.99\n        taxAmount: \"null\"\n        shippingAmount: \"null\"\n        warehouseLocation: Aisle 1, Bin 7\n        options: []\n        productId: 11780610\n        fulfillmentSku: Ele-1234\n        adjustment: false\n        upc: \"null\"\n        createDate: '\"2015-08-17T09:24:14.78\"'\n        modifyDate: '\"2015-08-17T09:24:14.78\"'\n    InsuranceOptions4:\n      title: InsuranceOptions4\n      required:\n        - insureShipment\n        - insuredValue\n      type: object\n      properties:\n        provider:\n          type: string\n          nullable: true\n        insureShipment:\n          type: boolean\n          example: false\n        insuredValue:\n          type: integer\n          format: int32\n          example: 0\n      example:\n        provider: null\n        insureShipment: false\n        insuredValue: 0\n    InternationalOptions4:\n      title: InternationalOptions4\n      required:\n        - contents\n        - customsItems\n        - nonDelivery\n      type: object\n      properties:\n        contents:\n          type: string\n          example: merchandise\n        customsItems:\n          type: array\n          items:\n            $ref: \"#/components/schemas/CustomsItem\"\n          description: \"\"\n        nonDelivery:\n          type: string\n          example: return_to_sender\n    CustomsItem:\n      title: CustomsItem\n      required:\n        - customsItemId\n        - description\n        - quantity\n        - value\n        - countryOfOrigin\n      type: object\n      properties:\n        customsItemId:\n          type: integer\n          format: int32\n          example: 11558268\n        description:\n          type: string\n          example: Fine White Oak Cane\n        quantity:\n          type: integer\n          format: int32\n          example: 1\n        value:\n          type: integer\n          format: int32\n          example: 225\n        harmonizedTariffCode:\n          type: string\n          nullable: true\n        countryOfOrigin:\n          type: string\n          example: US\n    AdvancedOptions4:\n      title: AdvancedOptions4\n      required:\n        - warehouseId\n        - nonMachinable\n        - saturdayDelivery\n        - containsAlcohol\n        - mergedOrSplit\n        - mergedIds\n        - storeId\n        - customField1\n        - customField2\n      type: object\n      properties:\n        warehouseId:\n          type: integer\n          format: int32\n          example: 98765\n        nonMachinable:\n          type: boolean\n          example: false\n        saturdayDelivery:\n          type: boolean\n          example: false\n        containsAlcohol:\n          type: boolean\n          example: false\n        mergedOrSplit:\n          type: boolean\n          example: false\n        mergedIds:\n          type: array\n          items:\n            type: string\n          description: \"\"\n        parentId:\n          type: string\n          nullable: true\n        storeId:\n          type: integer\n          format: int32\n          example: 12345\n        customField1:\n          type: string\n          example: \"SKU: CN-9876 x 1\"\n        customField2:\n          type: string\n          example: \"SKU: Ele-123 x 2\"\n        customField3:\n          type: string\n          nullable: true\n        source:\n          type: string\n          nullable: true\n        billToParty:\n          type: string\n          nullable: true\n        billToAccount:\n          type: string\n          nullable: true\n        billToPostalCode:\n          type: string\n          nullable: true\n        billToCountryCode:\n          type: string\n          nullable: true\n      example:\n        warehouseId: 98765\n        nonMachinable: false\n        saturdayDelivery: false\n        containsAlcohol: false\n        mergedOrSplit: false\n        mergedIds: []\n        parentId: null\n        storeId: 12345\n        customField1: \"SKU: CN-9876 x 1\"\n        customField2: \"SKU: Ele-123 x 2\"\n        customField3: null\n        source: null\n        billToParty: null\n        billToAccount: null\n        billToPostalCode: null\n        billToCountryCode: null\n    orderStatus:\n      title: orderStatus\n      enum:\n        - awaiting_payment\n        - awaiting_shipment\n        - pending_fulfillment\n        - shipped\n        - on_hold\n        - cancelled\n      type: string\n      example: awaiting_payment\n    sortBy2:\n      title: sortBy2\n      enum:\n        - OrderDate\n        - ModifyDate\n        - CreateDate\n      type: string\n      example: OrderDate\n    ListOrdersResponse:\n      title: ListOrdersResponse\n      required:\n        - orders\n        - total\n        - page\n        - pages\n      type: object\n      properties:\n        orders:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Order\"\n          description: \"\"\n        total:\n          type: integer\n          format: int32\n        page:\n          type: integer\n          format: int32\n        pages:\n          type: integer\n          format: int32\n    ListOrdersbyTagresponse:\n      title: ListOrdersbyTagresponse\n      required:\n        - orders\n        - total\n        - page\n        - pages\n      type: object\n      properties:\n        orders:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Order2\"\n          description: \"\"\n        total:\n          type: integer\n          format: int32\n        page:\n          type: integer\n          format: int32\n        pages:\n          type: integer\n          format: int32\n    Order2:\n      title: Order2\n      required:\n        - orderId\n        - orderNumber\n        - orderKey\n        - orderDate\n        - createDate\n        - modifyDate\n        - paymentDate\n        - shipByDate\n        - orderStatus\n        - customerId\n        - customerUsername\n        - customerEmail\n        - billTo\n        - shipTo\n        - items\n        - orderTotal\n        - amountPaid\n        - taxAmount\n        - shippingAmount\n        - customerNotes\n        - internalNotes\n        - gift\n        - giftMessage\n        - paymentMethod\n        - requestedShippingService\n        - carrierCode\n        - serviceCode\n        - packageCode\n        - confirmation\n        - shipDate\n        - weight\n        - dimensions\n        - insuranceOptions\n        - internationalOptions\n        - advancedOptions\n        - tagIds\n        - userId\n        - externallyFulfilled\n      type: object\n      properties:\n        orderId:\n          type: integer\n          format: int32\n          example: 123456789\n        orderNumber:\n          type: string\n          example: TEST-ORDER-API-DOCS\n        orderKey:\n          type: string\n          example: 0f6bec18-3e89-4881-83aa-f392d84f4c74\n        orderDate:\n          type: string\n          example: 6/29/2015 8:46:27 AM\n        createDate:\n          type: string\n          example: 8/17/2015 9:43:03 AM\n        modifyDate:\n          type: string\n          example: 8/17/2015 9:43:12 AM\n        paymentDate:\n          type: string\n          example: 6/29/2015 8:46:27 AM\n        shipByDate:\n          type: string\n          example: 7/5/2015 12:00:00 AM\n        orderStatus:\n          type: string\n          example: awaiting_shipment\n        customerId:\n          type: integer\n          format: int32\n          example: 37701499\n        customerUsername:\n          type: string\n          example: headhoncho@whitehouse.gov\n        customerEmail:\n          type: string\n          example: headhoncho@whitehouse.gov\n        billTo:\n          $ref: \"#/components/schemas/BillTo\"\n        shipTo:\n          $ref: \"#/components/schemas/ShipTo2\"\n        items:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Item6\"\n          description: \"\"\n        orderTotal:\n          type: number\n          example: 194.43\n        amountPaid:\n          type: number\n          example: 218.73\n        taxAmount:\n          type: integer\n          format: int32\n          example: 5\n        shippingAmount:\n          type: integer\n          format: int32\n          example: 10\n        customerNotes:\n          type: string\n          example: Please ship as soon as possible!\n        internalNotes:\n          type: string\n          example: Customer called and would like to upgrade shipping\n        gift:\n          type: boolean\n          example: true\n        giftMessage:\n          type: string\n          example: Thank you!\n        paymentMethod:\n          type: string\n          example: Credit Card\n        requestedShippingService:\n          type: string\n          example: Priority Mail\n        carrierCode:\n          type: string\n          example: fedex\n        serviceCode:\n          type: string\n          example: fedex_2day\n        packageCode:\n          type: string\n          example: package\n        confirmation:\n          type: string\n          example: delivery\n        shipDate:\n          type: string\n          example: \"2015-07-02\"\n        holdUntilDate:\n          type: string\n          nullable: true\n        weight:\n          $ref: \"#/components/schemas/Weight\"\n        dimensions:\n          $ref: \"#/components/schemas/Dimensions\"\n        insuranceOptions:\n          $ref: \"#/components/schemas/InsuranceOptions\"\n        internationalOptions:\n          $ref: \"#/components/schemas/InternationalOptions\"\n        advancedOptions:\n          $ref: \"#/components/schemas/AdvancedOptions\"\n        tagIds:\n          type: array\n          items:\n            type: integer\n            format: int32\n          description: \"\"\n        userId:\n          type: string\n          example: b854f701-e0c2-4156-90fe-19c77cdef27c\n        externallyFulfilled:\n          type: boolean\n          example: false\n        externallyFulfilledBy:\n          type: string\n          nullable: true\n    Item6:\n      title: Item6\n      required:\n        - orderItemId\n        - lineItemKey\n        - sku\n        - name\n        - weight\n        - quantity\n        - unitPrice\n        - taxAmount\n        - shippingAmount\n        - warehouseLocation\n        - options\n        - productId\n        - adjustment\n        - upc\n        - createDate\n        - modifyDate\n      type: object\n      properties:\n        orderItemId:\n          type: integer\n          format: int32\n          example: 136289188\n        lineItemKey:\n          type: string\n          example: vd08-MSLbtx\n        sku:\n          type: string\n          example: ABC123\n        name:\n          type: string\n          example: \"Test item #1\"\n        imageUrl:\n          type: string\n          nullable: true\n        weight:\n          $ref: \"#/components/schemas/Weight\"\n        quantity:\n          type: integer\n          format: int32\n          example: 2\n        unitPrice:\n          type: number\n          example: 99.99\n        taxAmount:\n          type: number\n          example: 2.5\n        shippingAmount:\n          type: integer\n          format: int32\n          example: 5\n        warehouseLocation:\n          type: string\n          example: Aisle 1, Bin 7\n        options:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Option\"\n          description: \"\"\n        productId:\n          type: integer\n          format: int32\n          example: 7239919\n        fulfillmentSku:\n          type: string\n          nullable: true\n        adjustment:\n          type: boolean\n          example: false\n        upc:\n          type: string\n          example: 32-65-98\n        createDate:\n          type: string\n          example: 8/17/2015 9:43:03 AM\n        modifyDate:\n          type: string\n          example: 8/17/2015 9:43:03 AM\n    MarkanOrderasShippedrequest:\n      title: MarkanOrderasShippedrequest\n      required:\n        - orderId\n        - carrierCode\n        - shipDate\n        - trackingNumber\n        - notifyCustomer\n        - notifySalesChannel\n      type: object\n      properties:\n        orderId:\n          type: integer\n          format: int32\n        carrierCode:\n          type: string\n        shipDate:\n          type: string\n        trackingNumber:\n          type: string\n        notifyCustomer:\n          type: boolean\n        notifySalesChannel:\n          type: boolean\n      example:\n        orderId: 93348442\n        carrierCode: usps\n        shipDate: \"2014-04-01\"\n        trackingNumber: \"913492493294329421\"\n        notifyCustomer: true\n        notifySalesChannel: true\n    MarkanOrderasShippedresponse:\n      title: MarkanOrderasShippedresponse\n      required:\n        - orderId\n        - orderNumber\n      type: object\n      properties:\n        orderId:\n          type: integer\n          format: int32\n        orderNumber:\n          type: string\n      example:\n        orderId: 123456789\n        orderNumber: ABC123\n    RemoveTagfromOrderrequest:\n      title: RemoveTagfromOrderrequest\n      required:\n        - orderId\n        - tagId\n      type: object\n      properties:\n        orderId:\n          type: integer\n          format: int32\n        tagId:\n          type: integer\n          format: int32\n      example:\n        orderId: 123456\n        tagId: 1234\n    RemoveTagfromOrderresponse:\n      title: RemoveTagfromOrderresponse\n      required:\n        - success\n        - message\n      type: object\n      properties:\n        success:\n          type: boolean\n        message:\n          type: string\n      example:\n        success: true\n        message: Tag removed successfully.\n    RestoreOrderfromOnHoldrequest:\n      title: RestoreOrderfromOnHoldrequest\n      required:\n        - orderId\n      type: object\n      properties:\n        orderId:\n          type: integer\n          format: int32\n      example:\n        orderId: 1234567\n    RestoreOrderfromOnHoldresponse:\n      title: RestoreOrderfromOnHoldresponse\n      required:\n        - success\n        - message\n      type: object\n      properties:\n        success:\n          type: boolean\n        message:\n          type: string\n      example:\n        success: true\n        message: The requested order has been restored\n    UnassignUserfromOrderrequest:\n      title: UnassignUserfromOrderrequest\n      required:\n        - orderIds\n      type: object\n      properties:\n        orderIds:\n          type: array\n          items:\n            type: integer\n            format: int32\n          description: \"\"\n      example:\n        orderIds:\n          - 123456789\n          - 12345679\n    UnassignUserfromOrderresponse:\n      title: UnassignUserfromOrderresponse\n      required:\n        - success\n        - message\n      type: object\n      properties:\n        success:\n          type: boolean\n        message:\n          type: string\n      example:\n        success: true\n        message: User unassigned successfully.\n    GetProductresponse:\n      title: GetProductresponse\n      required:\n        - productId\n        - sku\n        - name\n        - price\n        - defaultCost\n        - length\n        - width\n        - height\n        - weightOz\n        - fulfillmentSku\n        - createDate\n        - modifyDate\n        - active\n        - productCategory\n        - warehouseLocation\n        - defaultCarrierCode\n        - defaultServiceCode\n        - defaultPackageCode\n        - defaultIntlCarrierCode\n        - defaultIntlServiceCode\n        - defaultIntlPackageCode\n        - defaultConfirmation\n        - defaultIntlConfirmation\n        - tags\n      type: object\n      properties:\n        aliases:\n          type: string\n          nullable: true\n        productId:\n          type: integer\n          format: int32\n        sku:\n          type: string\n        name:\n          type: string\n        price:\n          type: integer\n          format: int32\n        defaultCost:\n          type: integer\n          format: int32\n        length:\n          type: integer\n          format: int32\n        width:\n          type: integer\n          format: int32\n        height:\n          type: integer\n          format: int32\n        weightOz:\n          type: integer\n          format: int32\n        internalNotes:\n          type: string\n          nullable: true\n        fulfillmentSku:\n          type: string\n        createDate:\n          type: string\n        modifyDate:\n          type: string\n        active:\n          type: boolean\n        productCategory:\n          $ref: \"#/components/schemas/ProductCategory\"\n        productType:\n          type: string\n          nullable: true\n        warehouseLocation:\n          type: string\n        defaultCarrierCode:\n          type: string\n        defaultServiceCode:\n          type: string\n        defaultPackageCode:\n          type: string\n        defaultIntlCarrierCode:\n          type: string\n        defaultIntlServiceCode:\n          type: string\n        defaultIntlPackageCode:\n          type: string\n        defaultConfirmation:\n          type: string\n        defaultIntlConfirmation:\n          type: string\n        customsDescription:\n          type: string\n          nullable: true\n        customsValue:\n          type: string\n          nullable: true\n        customsTariffNo:\n          type: string\n          nullable: true\n        customsCountryCode:\n          type: string\n          nullable: true\n        noCustoms:\n          type: string\n          nullable: true\n        tags:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Tag\"\n          description: \"\"\n      example:\n        aliases: null\n        productId: 12345678\n        sku: \"1004\"\n        name: Coffee Mug\n        price: 26\n        defaultCost: 0\n        length: 3\n        width: 3\n        height: 3\n        weightOz: 26\n        internalNotes: null\n        fulfillmentSku: F1004\n        createDate: \"2014-09-04T09:18:01.293\"\n        modifyDate: \"2014-09-18T12:38:43.893\"\n        active: true\n        productCategory:\n          categoryId: 9999\n          name: Door Closers\n        productType: null\n        warehouseLocation: Bin 22\n        defaultCarrierCode: fedex\n        defaultServiceCode: fedex_home_delivery\n        defaultPackageCode: package\n        defaultIntlCarrierCode: ups\n        defaultIntlServiceCode: ups_worldwide_saver\n        defaultIntlPackageCode: package\n        defaultConfirmation: direct_signature\n        defaultIntlConfirmation: adult_signature\n        customsDescription: null\n        customsValue: null\n        customsTariffNo: null\n        customsCountryCode: null\n        noCustoms: null\n        tags:\n          - tagId: 9180\n            name: APItest\n    ProductCategory:\n      title: ProductCategory\n      required:\n        - categoryId\n        - name\n      type: object\n      properties:\n        categoryId:\n          type: integer\n          format: int32\n        name:\n          type: string\n      example:\n        categoryId: 9999\n        name: Door Closers\n    UpdateProductrequest:\n      title: UpdateProductrequest\n      required:\n        - productId\n        - sku\n        - name\n        - price\n        - active\n      type: object\n      properties:\n        aliases:\n          type: string\n          nullable: true\n        productId:\n          type: integer\n          format: int32\n        sku:\n          type: string\n        name:\n          type: string\n        price:\n          type: integer\n          format: int32\n        defaultCost:\n          type: string\n          nullable: true\n        length:\n          type: string\n          nullable: true\n        width:\n          type: string\n          nullable: true\n        height:\n          type: string\n          nullable: true\n        weightOz:\n          type: string\n          nullable: true\n        internalNotes:\n          type: string\n          nullable: true\n        fulfillmentSku:\n          type: string\n          nullable: true\n        active:\n          type: boolean\n        productCategory:\n          type: string\n          nullable: true\n        productType:\n          type: string\n          nullable: true\n        warehouseLocation:\n          type: string\n          nullable: true\n        defaultCarrierCode:\n          type: string\n          nullable: true\n        defaultServiceCode:\n          type: string\n          nullable: true\n        defaultPackageCode:\n          type: string\n          nullable: true\n        defaultIntlCarrierCode:\n          type: string\n          nullable: true\n        defaultIntlServiceCode:\n          type: string\n          nullable: true\n        defaultIntlPackageCode:\n          type: string\n          nullable: true\n        defaultConfirmation:\n          type: string\n          nullable: true\n        defaultIntlConfirmation:\n          type: string\n          nullable: true\n        customsDescription:\n          type: string\n          nullable: true\n        customsValue:\n          type: string\n          nullable: true\n        customsTariffNo:\n          type: string\n          nullable: true\n        customsCountryCode:\n          type: string\n          nullable: true\n        noCustoms:\n          type: string\n          nullable: true\n        tags:\n          type: string\n          nullable: true\n      example:\n        aliases: null\n        productId: 123456789\n        sku: \"\"\n        name: Beautiful\n        price: 0\n        defaultCost: null\n        length: null\n        width: null\n        height: null\n        weightOz: null\n        internalNotes: null\n        fulfillmentSku: null\n        active: true\n        productCategory: null\n        productType: null\n        warehouseLocation: null\n        defaultCarrierCode: null\n        defaultServiceCode: null\n        defaultPackageCode: null\n        defaultIntlCarrierCode: null\n        defaultIntlServiceCode: null\n        defaultIntlPackageCode: null\n        defaultConfirmation: null\n        defaultIntlConfirmation: null\n        customsDescription: null\n        customsValue: null\n        customsTariffNo: null\n        customsCountryCode: null\n        noCustoms: null\n        tags: null\n    UpdateProductresponse:\n      title: UpdateProductresponse\n      required:\n        - success\n        - message\n      type: object\n      properties:\n        success:\n          type: boolean\n        message:\n          type: string\n      example:\n        success: true\n        message: The requested product has been updated\n    Product:\n      title: Product\n      required:\n        - productId\n        - sku\n        - name\n        - price\n        - defaultCost\n        - length\n        - width\n        - height\n        - weightOz\n        - fulfillmentSku\n        - createDate\n        - modifyDate\n        - active\n        - productCategory\n        - warehouseLocation\n        - defaultCarrierCode\n        - defaultServiceCode\n        - defaultPackageCode\n        - defaultIntlCarrierCode\n        - defaultIntlServiceCode\n        - defaultIntlPackageCode\n        - defaultConfirmation\n        - defaultIntlConfirmation\n        - tags\n      type: object\n      properties:\n        aliases:\n          type: string\n          nullable: true\n        productId:\n          type: integer\n          format: int32\n          example: 7854008\n        sku:\n          type: string\n          example: \"1004\"\n        name:\n          type: string\n          example: Coffee Mug\n        price:\n          type: integer\n          format: int32\n          example: 26\n        defaultCost:\n          type: integer\n          format: int32\n          example: 0\n        length:\n          type: integer\n          format: int32\n          example: 3\n        width:\n          type: integer\n          format: int32\n          example: 3\n        height:\n          type: integer\n          format: int32\n          example: 3\n        weightOz:\n          type: integer\n          format: int32\n          example: 26\n        internalNotes:\n          type: string\n          nullable: true\n        fulfillmentSku:\n          type: string\n          example: F1004\n        createDate:\n          type: string\n          example: 9/4/2014 9:18:01 AM\n        modifyDate:\n          type: string\n          example: 9/18/2014 12:38:43 PM\n        active:\n          type: boolean\n          example: true\n        productCategory:\n          $ref: \"#/components/schemas/ProductCategory\"\n        productType:\n          type: string\n          nullable: true\n        warehouseLocation:\n          type: string\n          example: Bin 22\n        defaultCarrierCode:\n          type: string\n          example: fedex\n        defaultServiceCode:\n          type: string\n          example: fedex_home_delivery\n        defaultPackageCode:\n          type: string\n          example: package\n        defaultIntlCarrierCode:\n          type: string\n          example: ups\n        defaultIntlServiceCode:\n          type: string\n          example: ups_worldwide_saver\n        defaultIntlPackageCode:\n          type: string\n          example: package\n        defaultConfirmation:\n          type: string\n          example: direct_signature\n        defaultIntlConfirmation:\n          type: string\n          example: adult_signature\n        customsDescription:\n          type: string\n          nullable: true\n        customsValue:\n          type: string\n          nullable: true\n        customsTariffNo:\n          type: string\n          nullable: true\n        customsCountryCode:\n          type: string\n          nullable: true\n        noCustoms:\n          type: string\n          nullable: true\n        tags:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Tag\"\n          description: \"\"\n    sortBy3:\n      title: sortBy3\n      enum:\n        - SKU\n        - ModifyDate\n        - CreateDate\n      type: string\n      example: SKU\n    ListProductsResponse:\n      title: ListProductsResponse\n      required:\n        - products\n        - total\n        - page\n        - pages\n      type: object\n      properties:\n        products:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Product\"\n          description: \"\"\n        total:\n          type: integer\n          format: int32\n        page:\n          type: integer\n          format: int32\n        pages:\n          type: integer\n          format: int32\n    Shipment:\n      title: Shipment\n      required:\n        - shipmentId\n        - orderId\n        - userId\n        - orderNumber\n        - createDate\n        - shipDate\n        - shipmentCost\n        - insuranceCost\n        - trackingNumber\n        - isReturnLabel\n        - batchNumber\n        - carrierCode\n        - serviceCode\n        - packageCode\n        - confirmation\n        - warehouseId\n        - voided\n        - marketplaceNotified\n        - shipTo\n        - weight\n        - insuranceOptions\n        - shipmentItems\n      type: object\n      properties:\n        shipmentId:\n          type: integer\n          format: int32\n          example: 33974374\n        orderId:\n          type: integer\n          format: int32\n          example: 43945660\n        orderKey:\n          type: string\n          example: 8061c220f0794a9b92460b8bae6837e4\n        userId:\n          type: string\n          example: 123456AB-ab12-3c4d-5e67-89f1abc1defa\n        orderNumber:\n          type: string\n          example: 100038-1\n        createDate:\n          type: string\n          example: 10/3/2014 6:51:33 AM\n        shipDate:\n          type: string\n          example: \"2014-10-03\"\n        shipmentCost:\n          type: number\n          example: 1.93\n        insuranceCost:\n          type: integer\n          format: int32\n          example: 0\n        trackingNumber:\n          type: string\n          example: \"9400111899561704681189\"\n        isReturnLabel:\n          type: boolean\n          example: false\n        batchNumber:\n          type: string\n          example: \"100301\"\n        carrierCode:\n          type: string\n          example: stamps_com\n        serviceCode:\n          type: string\n          example: usps_first_class_mail\n        packageCode:\n          type: string\n          example: package\n        confirmation:\n          type: string\n          example: delivery\n        warehouseId:\n          type: integer\n          format: int32\n          example: 16079\n        voided:\n          type: boolean\n          example: false\n        voidDate:\n          type: string\n          nullable: true\n        marketplaceNotified:\n          type: boolean\n          example: true\n        notifyErrorMessage:\n          type: string\n          nullable: true\n        shipTo:\n          $ref: \"#/components/schemas/ShipTo9\"\n        weight:\n          $ref: \"#/components/schemas/Weight\"\n        dimensions:\n          type: string\n          nullable: true\n        insuranceOptions:\n          $ref: \"#/components/schemas/InsuranceOptions4\"\n        advancedOptions:\n          type: string\n          nullable: true\n        shipmentItems:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ShipmentItem\"\n          description: \"\"\n        labelData:\n          type: string\n          nullable: true\n        formData:\n          type: string\n          nullable: true\n    ShipTo9:\n      title: ShipTo9\n      required:\n        - name\n        - company\n        - street1\n        - street2\n        - city\n        - state\n        - postalCode\n        - country\n        - phone\n      type: object\n      properties:\n        name:\n          type: string\n          example: Yoda\n        company:\n          type: string\n        street1:\n          type: string\n          example: 12223 LOWDEN LN\n        street2:\n          type: string\n        street3:\n          type: string\n          nullable: true\n        city:\n          type: string\n          example: MANCHACA\n        state:\n          type: string\n          example: TX\n        postalCode:\n          type: string\n          example: 78652-3602\n        country:\n          type: string\n          example: US\n        phone:\n          type: string\n          example: \"2101235544\"\n        residential:\n          type: string\n          nullable: true\n      example:\n        name: Yoda\n        company: \"\"\n        street1: 12223 LOWDEN LN\n        street2: \"\"\n        street3: null\n        city: MANCHACA\n        state: TX\n        postalCode: 78652-3602\n        country: US\n        phone: \"2101235544\"\n        residential: null\n    ShipmentItem:\n      title: ShipmentItem\n      required:\n        - orderItemId\n        - sku\n        - name\n        - quantity\n        - unitPrice\n        - productId\n      type: object\n      properties:\n        orderItemId:\n          type: integer\n          format: int32\n          example: 56568665\n        lineItemKey:\n          type: string\n          nullable: true\n        sku:\n          type: string\n          example: SQ3785739\n        name:\n          type: string\n          example: Potato Kitten -\n        imageUrl:\n          type: string\n          nullable: true\n        weight:\n          type: string\n          nullable: true\n        quantity:\n          type: integer\n          format: int32\n          example: 1\n        unitPrice:\n          type: integer\n          format: int32\n          example: 1\n        warehouseLocation:\n          type: string\n          nullable: true\n        options:\n          type: string\n          nullable: true\n        productId:\n          type: integer\n          format: int32\n          example: 7565777\n        fulfillmentSku:\n          type: string\n          nullable: true\n      example:\n        orderItemId: 56568665\n        lineItemKey: null\n        sku: SQ3785739\n        name: Potato Kitten -\n        imageUrl: null\n        weight: null\n        quantity: 1\n        unitPrice: 1\n        warehouseLocation: null\n        options: null\n        productId: 7565777\n        fulfillmentSku: null\n    ListShipmentsResponse:\n      title: ListShipmentsResponse\n      required:\n        - shipments\n        - total\n        - page\n        - pages\n      type: object\n      properties:\n        shipments:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Shipment\"\n          description: \"\"\n        total:\n          type: integer\n          format: int32\n        page:\n          type: integer\n          format: int32\n        pages:\n          type: integer\n          format: int32\n      example:\n        shipments:\n          - shipmentId: 33974374\n            orderId: 43945660\n            orderKey: 8061c220f0794a9b92460b8bae6837e4\n            userId: 123456AB-ab12-3c4d-5e67-89f1abc1defa\n            orderNumber: 100038-1\n            createDate: \"2014-10-03T06:51:33.627\"\n            shipDate: \"2014-10-03\"\n            shipmentCost: 1.93\n            insuranceCost: 0\n            trackingNumber: \"9400111899561704681189\"\n            isReturnLabel: false\n            batchNumber: \"100301\"\n            carrierCode: stamps_com\n            serviceCode: usps_first_class_mail\n            packageCode: package\n            confirmation: delivery\n            warehouseId: 16079\n            voided: false\n            voidDate: null\n            marketplaceNotified: true\n            notifyErrorMessage: null\n            shipTo:\n              name: Yoda\n              company: \"\"\n              street1: 12223 LOWDEN LN\n              street2: \"\"\n              street3: null\n              city: MANCHACA\n              state: TX\n              postalCode: 78652-3602\n              country: US\n              phone: \"2101235544\"\n              residential: null\n            weight:\n              value: 1\n              units: ounces\n            dimensions: null\n            insuranceOptions:\n              provider: null\n              insureShipment: false\n              insuredValue: 0\n            advancedOptions: null\n            shipmentItems:\n              - orderItemId: 56568665\n                lineItemKey: null\n                sku: SQ3785739\n                name: Potato Kitten -\n                imageUrl: null\n                weight: null\n                quantity: 1\n                unitPrice: 1\n                warehouseLocation: null\n                options: null\n                productId: 7565777\n                fulfillmentSku: null\n            labelData: null\n            formData: null\n          - shipmentId: 33974373\n            orderId: 43337328\n            userId: 123456AB-ab12-3c4d-5e67-89f1abc1defa\n            orderNumber: \"100028\"\n            createDate: \"2014-10-03T06:51:59.943\"\n            shipDate: \"2014-10-03\"\n            shipmentCost: 1.93\n            insuranceCost: 0\n            trackingNumber: \"9400111899561704681196\"\n            isReturnLabel: false\n            batchNumber: \"100300\"\n            carrierCode: stamps_com\n            serviceCode: usps_first_class_mail\n            packageCode: package\n            confirmation: delivery\n            warehouseId: 14265\n            voided: false\n            voidDate: null\n            marketplaceNotified: true\n            notifyErrorMessage: null\n            shipTo:\n              name: Luke Skywalker\n              company: SS\n              street1: 2815 EXPOSITION BLVD\n              street2: \"\"\n              street3: null\n              city: AUSTIN\n              state: TX\n              postalCode: 78703-1221\n              country: US\n              phone: \"\"\n              residential: null\n            weight:\n              value: 1\n              units: ounces\n            dimensions: null\n            insuranceOptions:\n              provider: null\n              insureShipment: false\n              insuredValue: 0\n            advancedOptions: null\n            shipmentItems:\n              - orderItemId: 55827278\n                lineItemKey: null\n                sku: test\n                name: test\n                imageUrl: null\n                weight: null\n                quantity: 1\n                unitPrice: 1\n                warehouseLocation: null\n                options: null\n                productId: 7541107\n                fulfillmentSku: null\n            labelData: null\n            formData: null\n        total: 2\n        page: 1\n        pages: 0\n    CreateShipmentLabelrequest:\n      title: CreateShipmentLabelrequest\n      required:\n        - carrierCode\n        - serviceCode\n        - packageCode\n        - shipDate\n        - weight\n        - shipFrom\n        - shipTo\n        - testLabel\n      type: object\n      properties:\n        carrierCode:\n          type: string\n        serviceCode:\n          type: string\n        packageCode:\n          type: string\n        confirmation:\n          type: string\n        shipDate:\n          type: string\n        weight:\n          $ref: \"#/components/schemas/Weight\"\n        dimensions:\n          $ref: \"#/components/schemas/Dimensions\"\n        shipFrom:\n          $ref: \"#/components/schemas/ShipFrom\"\n        shipTo:\n          $ref: \"#/components/schemas/ShipTo11\"\n        insuranceOptions:\n          type: string\n          nullable: true\n        internationalOptions:\n          type: string\n          nullable: true\n        advancedOptions:\n          type: string\n          nullable: true\n        testLabel:\n          type: boolean\n      example:\n        carrierCode: fedex\n        serviceCode: fedex_ground\n        packageCode: package\n        confirmation: delivery\n        shipDate: \"2014-04-03\"\n        weight:\n          value: 3\n          units: ounces\n        dimensions:\n          units: inches\n          length: 7\n          width: 5\n          height: 6\n        shipFrom:\n          name: Jason Hodges\n          company: ShipStation\n          street1: 2815 Exposition Blvd\n          street2: Ste 2353242\n          street3: null\n          city: Austin\n          state: TX\n          postalCode: \"78703\"\n          country: US\n          phone: null\n          residential: false\n        shipTo:\n          name: The President\n          company: US Govt\n          street1: 1600 Pennsylvania Ave\n          street2: Oval Office\n          street3: null\n          city: Washington\n          state: DC\n          postalCode: \"20500\"\n          country: US\n          phone: null\n          residential: false\n        insuranceOptions: null\n        internationalOptions: null\n        advancedOptions: null\n        testLabel: false\n    ShipFrom:\n      title: ShipFrom\n      required:\n        - name\n        - company\n        - street1\n        - street2\n        - city\n        - state\n        - postalCode\n        - country\n        - residential\n      type: object\n      properties:\n        name:\n          type: string\n        company:\n          type: string\n        street1:\n          type: string\n        street2:\n          type: string\n        street3:\n          type: string\n          nullable: true\n        city:\n          type: string\n        state:\n          type: string\n        postalCode:\n          type: string\n        country:\n          type: string\n        phone:\n          type: string\n          nullable: true\n        residential:\n          type: boolean\n    ShipTo11:\n      title: ShipTo11\n      required:\n        - name\n        - company\n        - street1\n        - street2\n        - city\n        - state\n        - postalCode\n        - country\n        - residential\n      type: object\n      properties:\n        name:\n          type: string\n        company:\n          type: string\n        street1:\n          type: string\n        street2:\n          type: string\n        street3:\n          type: string\n          nullable: true\n        city:\n          type: string\n        state:\n          type: string\n        postalCode:\n          type: string\n        country:\n          type: string\n        phone:\n          type: string\n          nullable: true\n        residential:\n          type: boolean\n    CreateShipmentLabelresponse:\n      title: CreateShipmentLabelresponse\n      required:\n        - shipmentId\n        - createDate\n        - shipDate\n        - shipmentCost\n        - insuranceCost\n        - trackingNumber\n        - isReturnLabel\n        - carrierCode\n        - serviceCode\n        - packageCode\n        - confirmation\n        - voided\n        - marketplaceNotified\n        - labelData\n      type: object\n      properties:\n        shipmentId:\n          type: integer\n          format: int32\n        orderId:\n          type: string\n          nullable: true\n        userId:\n          type: string\n          nullable: true\n        customerEmail:\n          type: string\n          nullable: true\n        orderNumber:\n          type: string\n          nullable: true\n        createDate:\n          type: string\n        shipDate:\n          type: string\n        shipmentCost:\n          type: number\n        insuranceCost:\n          type: integer\n          format: int32\n        trackingNumber:\n          type: string\n        isReturnLabel:\n          type: boolean\n        batchNumber:\n          type: string\n          nullable: true\n        carrierCode:\n          type: string\n        serviceCode:\n          type: string\n        packageCode:\n          type: string\n        confirmation:\n          type: string\n        warehouseId:\n          type: string\n          nullable: true\n        voided:\n          type: boolean\n        voidDate:\n          type: string\n          nullable: true\n        marketplaceNotified:\n          type: boolean\n        notifyErrorMessage:\n          type: string\n          nullable: true\n        shipTo:\n          type: string\n          nullable: true\n        weight:\n          type: string\n          nullable: true\n        dimensions:\n          type: string\n          nullable: true\n        insuranceOptions:\n          type: string\n          nullable: true\n        advancedOptions:\n          type: string\n          nullable: true\n        shipmentItems:\n          type: string\n          nullable: true\n        labelData:\n          type: string\n        formData:\n          type: string\n          nullable: true\n      example:\n        shipmentId: 123456789\n        orderId: null\n        userId: null\n        customerEmail: null\n        orderNumber: null\n        createDate: \"2016-04-03T12:11:36.863\"\n        shipDate: \"2016-04-03\"\n        shipmentCost: 9.06\n        insuranceCost: 0\n        trackingNumber: \"782390443992\"\n        isReturnLabel: false\n        batchNumber: null\n        carrierCode: fedex\n        serviceCode: fedex_ground\n        packageCode: package\n        confirmation: delivery\n        warehouseId: null\n        voided: false\n        voidDate: null\n        marketplaceNotified: false\n        notifyErrorMessage: null\n        shipTo: null\n        weight: null\n        dimensions: null\n        insuranceOptions: null\n        advancedOptions: null\n        shipmentItems: null\n        labelData: JVBERi0xLjQKJeLjz9MKMiAwIG9iago8PC9MZW5ndGggNjIvRmlsdGVyL0ZsYXRlRGVjb2RlPj5zdHJlYW0KeJwr5HIK4TI2U...\n        formData: null\n    GetRatesrequest:\n      title: GetRatesrequest\n      required:\n        - carrierCode\n        - fromPostalCode\n        - toState\n        - toCountry\n        - toPostalCode\n        - toCity\n        - weight\n        - dimensions\n        - confirmation\n        - residential\n      type: object\n      properties:\n        carrierCode:\n          type: string\n        serviceCode:\n          type: string\n          nullable: true\n        packageCode:\n          type: string\n          nullable: true\n        fromPostalCode:\n          type: string\n        toState:\n          type: string\n        toCountry:\n          type: string\n        toPostalCode:\n          type: string\n        toCity:\n          type: string\n        weight:\n          $ref: \"#/components/schemas/Weight\"\n        dimensions:\n          $ref: \"#/components/schemas/Dimensions\"\n        confirmation:\n          type: string\n        residential:\n          type: boolean\n      example:\n        carrierCode: fedex\n        serviceCode: null\n        packageCode: null\n        fromPostalCode: \"78703\"\n        toState: DC\n        toCountry: US\n        toPostalCode: \"20500\"\n        toCity: Washington\n        weight:\n          value: 3\n          units: ounces\n        dimensions:\n          units: inches\n          length: 7\n          width: 5\n          height: 6\n        confirmation: delivery\n        residential: false\n    GetRatesresponse:\n      title: GetRatesresponse\n      required:\n        - serviceName\n        - serviceCode\n        - shipmentCost\n        - otherCost\n      type: object\n      properties:\n        serviceName:\n          type: string\n          example: FedEx First Overnight®\n        serviceCode:\n          type: string\n          example: fedex_first_overnight\n        shipmentCost:\n          type: number\n          example: 87.8\n        otherCost:\n          type: number\n          example: 2.63\n      example:\n        serviceName: FedEx First Overnight®\n        serviceCode: fedex_first_overnight\n        shipmentCost: 87.8\n        otherCost: 2.63\n    VoidLabelrequest:\n      title: VoidLabelrequest\n      required:\n        - shipmentId\n      type: object\n      properties:\n        shipmentId:\n          type: integer\n          format: int32\n      example:\n        shipmentId: 12345\n    VoidLabelresponse:\n      title: VoidLabelresponse\n      required:\n        - approved\n        - message\n      type: object\n      properties:\n        approved:\n          type: boolean\n        message:\n          type: string\n      example:\n        approved: true\n        message: Label voided successfully\n    GetStoreresponse:\n      title: GetStoreresponse\n      required:\n        - storeId\n        - storeName\n        - marketplaceId\n        - marketplaceName\n        - integrationUrl\n        - active\n        - companyName\n        - phone\n        - publicEmail\n        - website\n        - refreshDate\n        - lastRefreshAttempt\n        - createDate\n        - modifyDate\n        - autoRefresh\n        - statusMappings\n      type: object\n      properties:\n        storeId:\n          type: integer\n          format: int32\n        storeName:\n          type: string\n        marketplaceId:\n          type: integer\n          format: int32\n        marketplaceName:\n          type: string\n        accountName:\n          type: string\n          nullable: true\n        email:\n          type: string\n          nullable: true\n        integrationUrl:\n          type: string\n        active:\n          type: boolean\n        companyName:\n          type: string\n        phone:\n          type: string\n        publicEmail:\n          type: string\n        website:\n          type: string\n        refreshDate:\n          type: string\n        lastRefreshAttempt:\n          type: string\n        createDate:\n          type: string\n        modifyDate:\n          type: string\n        autoRefresh:\n          type: boolean\n        statusMappings:\n          type: array\n          items:\n            $ref: \"#/components/schemas/StatusMapping\"\n          description: \"\"\n      example:\n        storeId: 12345\n        storeName: WooCommerce Store\n        marketplaceId: 36\n        marketplaceName: WooCommerce\n        accountName: null\n        email: null\n        integrationUrl: http://shipstation-test.wpengine.com\n        active: true\n        companyName: \"\"\n        phone: \"\"\n        publicEmail: \"\"\n        website: \"\"\n        refreshDate: \"2014-12-16T17:47:05.457\"\n        lastRefreshAttempt: \"2014-12-16T09:47:05.457\"\n        createDate: \"2014-11-06T15:21:13.223\"\n        modifyDate: \"2014-11-10T08:02:19.117\"\n        autoRefresh: true\n        statusMappings:\n          - orderStatus: awaiting_payment\n            statusKey: Pending\n          - orderStatus: awaiting_shipment\n            statusKey: Processing\n          - orderStatus: shipped\n            statusKey: Completed\n          - orderStatus: cancelled\n            statusKey: Cancelled\n          - orderStatus: on_hold\n            statusKey: On-hold\n    StatusMapping:\n      title: StatusMapping\n      required:\n        - orderStatus\n        - statusKey\n      type: object\n      properties:\n        orderStatus:\n          type: string\n          example: awaiting_payment\n        statusKey:\n          type: string\n          example: Pending\n    UpdateStorerequest:\n      title: UpdateStorerequest\n      required:\n        - storeId\n        - storeName\n        - marketplaceId\n        - marketplaceName\n        - integrationUrl\n        - active\n        - companyName\n        - phone\n        - publicEmail\n        - website\n        - refreshDate\n        - lastRefreshAttempt\n        - createDate\n        - modifyDate\n        - autoRefresh\n        - statusMappings\n      type: object\n      properties:\n        storeId:\n          type: integer\n          format: int32\n        storeName:\n          type: string\n        marketplaceId:\n          type: integer\n          format: int32\n        marketplaceName:\n          type: string\n        accountName:\n          type: string\n          nullable: true\n        email:\n          type: string\n          nullable: true\n        integrationUrl:\n          type: string\n        active:\n          type: boolean\n        companyName:\n          type: string\n        phone:\n          type: string\n        publicEmail:\n          type: string\n        website:\n          type: string\n        refreshDate:\n          type: string\n        lastRefreshAttempt:\n          type: string\n        createDate:\n          type: string\n        modifyDate:\n          type: string\n        autoRefresh:\n          type: boolean\n        statusMappings:\n          type: array\n          items:\n            $ref: \"#/components/schemas/StatusMapping\"\n          description: \"\"\n      example:\n        storeId: 12345\n        storeName: WooCommerce Store\n        marketplaceId: 36\n        marketplaceName: WooCommerce\n        accountName: null\n        email: null\n        integrationUrl: http://shipstation-test.wpengine.com\n        active: true\n        companyName: \"\"\n        phone: \"\"\n        publicEmail: \"\"\n        website: \"\"\n        refreshDate: \"2014-12-16T17:47:05.457\"\n        lastRefreshAttempt: \"2014-12-16T09:47:05.457\"\n        createDate: \"2014-11-06T15:21:13.223\"\n        modifyDate: \"2014-11-10T08:02:19.117\"\n        autoRefresh: true\n        statusMappings:\n          - orderStatus: awaiting_payment\n            statusKey: Pending\n          - orderStatus: awaiting_shipment\n            statusKey: Processing\n          - orderStatus: shipped\n            statusKey: Completed\n          - orderStatus: cancelled\n            statusKey: Cancelled\n          - orderStatus: on_hold\n            statusKey: On-hold\n    UpdateStoreresponse:\n      title: UpdateStoreresponse\n      required:\n        - storeId\n        - storeName\n        - marketplaceId\n        - marketplaceName\n        - integrationUrl\n        - active\n        - companyName\n        - phone\n        - publicEmail\n        - website\n        - refreshDate\n        - lastRefreshAttempt\n        - createDate\n        - modifyDate\n        - autoRefresh\n        - statusMappings\n      type: object\n      properties:\n        storeId:\n          type: integer\n          format: int32\n        storeName:\n          type: string\n        marketplaceId:\n          type: integer\n          format: int32\n        marketplaceName:\n          type: string\n        accountName:\n          type: string\n          nullable: true\n        email:\n          type: string\n          nullable: true\n        integrationUrl:\n          type: string\n        active:\n          type: boolean\n        companyName:\n          type: string\n        phone:\n          type: string\n        publicEmail:\n          type: string\n        website:\n          type: string\n        refreshDate:\n          type: string\n        lastRefreshAttempt:\n          type: string\n        createDate:\n          type: string\n        modifyDate:\n          type: string\n        autoRefresh:\n          type: boolean\n        statusMappings:\n          type: array\n          items:\n            $ref: \"#/components/schemas/StatusMapping\"\n          description: \"\"\n      example:\n        storeId: 12345\n        storeName: WooCommerce Store\n        marketplaceId: 36\n        marketplaceName: WooCommerce\n        accountName: null\n        email: null\n        integrationUrl: http://shipstation-test.wpengine.com\n        active: true\n        companyName: \"\"\n        phone: \"\"\n        publicEmail: \"\"\n        website: \"\"\n        refreshDate: \"2014-12-16T17:47:05.457\"\n        lastRefreshAttempt: \"2014-12-16T09:47:05.457\"\n        createDate: \"2014-11-06T15:21:13.223\"\n        modifyDate: \"2014-11-10T08:02:19.117\"\n        autoRefresh: true\n        statusMappings:\n          - orderStatus: awaiting_payment\n            statusKey: Pending\n          - orderStatus: awaiting_shipment\n            statusKey: Processing\n          - orderStatus: shipped\n            statusKey: Completed\n          - orderStatus: cancelled\n            statusKey: Cancelled\n          - orderStatus: on_hold\n            statusKey: On-hold\n    GetStoreRefreshStatusresponse:\n      title: GetStoreRefreshStatusresponse\n      required:\n        - storeId\n        - refreshStatusId\n        - refreshStatus\n        - lastRefreshAttempt\n        - refreshDate\n      type: object\n      properties:\n        storeId:\n          type: integer\n          format: int32\n        refreshStatusId:\n          type: integer\n          format: int32\n        refreshStatus:\n          type: string\n        lastRefreshAttempt:\n          type: string\n        refreshDate:\n          type: string\n      example:\n        storeId: 12345\n        refreshStatusId: 2\n        refreshStatus: Updating orders\n        lastRefreshAttempt: 8-13-2014\n        refreshDate: 8-13-2014\n    RefreshStorerequest:\n      title: RefreshStorerequest\n      required:\n        - storeId\n        - refreshDate\n      type: object\n      properties:\n        storeId:\n          type: integer\n          format: int32\n        refreshDate:\n          type: string\n      example:\n        storeId: 12345\n        refreshDate: 12-08-2014\n    RefreshStoreresponse:\n      title: RefreshStoreresponse\n      required:\n        - success\n        - message\n      type: object\n      properties:\n        success:\n          type: boolean\n        message:\n          type: string\n      example:\n        success: true\n        message: A store refresh has been initiated for Store ID 12345\n    ListStoresresponse:\n      title: ListStoresresponse\n      required:\n        - storeId\n        - storeName\n        - marketplaceId\n        - marketplaceName\n        - active\n        - companyName\n        - phone\n        - publicEmail\n        - website\n        - refreshDate\n        - lastRefreshAttempt\n        - createDate\n        - modifyDate\n        - autoRefresh\n      type: object\n      properties:\n        storeId:\n          type: integer\n          format: int32\n          example: 22766\n        storeName:\n          type: string\n          example: ShipStation Manual Store\n        marketplaceId:\n          type: integer\n          format: int32\n          example: 0\n        marketplaceName:\n          type: string\n          example: ShipStation\n        accountName:\n          type: string\n          nullable: true\n        email:\n          type: string\n          nullable: true\n        integrationUrl:\n          type: string\n          nullable: true\n        active:\n          type: boolean\n          example: true\n        companyName:\n          type: string\n        phone:\n          type: string\n        publicEmail:\n          type: string\n          example: testemail@email.com\n        website:\n          type: string\n        refreshDate:\n          type: string\n          example: 12/3/2014 11:46:11 AM\n        lastRefreshAttempt:\n          type: string\n          example: 12/3/2014 11:46:53 AM\n        createDate:\n          type: string\n          example: 7/25/2014 11:05:55 AM\n        modifyDate:\n          type: string\n          example: 11/12/2014 8:45:20 AM\n        autoRefresh:\n          type: boolean\n          example: false\n      example:\n        storeId: 22766\n        storeName: ShipStation Manual Store\n        marketplaceId: 0\n        marketplaceName: ShipStation\n        accountName: null\n        email: null\n        integrationUrl: null\n        active: true\n        companyName: \"\"\n        phone: \"\"\n        publicEmail: testemail@email.com\n        website: \"\"\n        refreshDate: \"2014-12-03T11:46:11.283\"\n        lastRefreshAttempt: \"2014-12-03T11:46:53.433\"\n        createDate: \"2014-07-25T11:05:55.307\"\n        modifyDate: \"2014-11-12T08:45:20.55\"\n        autoRefresh: false\n    ListMarketplacesresponse:\n      title: ListMarketplacesresponse\n      required:\n        - name\n        - marketplaceId\n        - canRefresh\n        - supportsCustomMappings\n        - supportsCustomStatuses\n        - canConfirmShipments\n      type: object\n      properties:\n        name:\n          type: string\n          example: 3DCart\n        marketplaceId:\n          type: integer\n          format: int32\n          example: 23\n        canRefresh:\n          type: boolean\n          example: true\n        supportsCustomMappings:\n          type: boolean\n          example: true\n        supportsCustomStatuses:\n          type: boolean\n          example: false\n        canConfirmShipments:\n          type: boolean\n          example: true\n      example:\n        name: 3DCart\n        marketplaceId: 23\n        canRefresh: true\n        supportsCustomMappings: true\n        supportsCustomStatuses: false\n        canConfirmShipments: true\n    DeactivateStorerequest:\n      title: DeactivateStorerequest\n      required:\n        - storeId\n      type: object\n      properties:\n        storeId:\n          type: string\n      example:\n        storeId: \"12345\"\n    DeactivateStoreresponse:\n      title: DeactivateStoreresponse\n      required:\n        - success\n        - message\n      type: object\n      properties:\n        success:\n          type: string\n        message:\n          type: string\n      example:\n        success: \"true\"\n        message: The requested store has been reactivated.\n    ReactivateStorerequest:\n      title: ReactivateStorerequest\n      required:\n        - storeId\n      type: object\n      properties:\n        storeId:\n          type: string\n      example:\n        storeId: \"12345\"\n    ReactivateStoreresponse:\n      title: ReactivateStoreresponse\n      required:\n        - success\n        - message\n      type: object\n      properties:\n        success:\n          type: string\n        message:\n          type: string\n      example:\n        success: \"true\"\n        message: The requested store has been reactivated.\n    ListUsersresponse:\n      title: ListUsersresponse\n      required:\n        - userId\n        - userName\n        - name\n      type: object\n      properties:\n        userId:\n          type: string\n        userName:\n          type: string\n        name:\n          type: string\n      example:\n        userId: 123456AB-ab12-3c4d-5e67-89f1abc1defa\n        userName: SS-user1\n        name: Shipping Employee 1\n    GetWarehouseresponse:\n      title: GetWarehouseresponse\n      required:\n        - warehouseId\n        - warehouseName\n        - originAddress\n        - returnAddress\n        - createDate\n        - isDefault\n      type: object\n      properties:\n        warehouseId:\n          type: integer\n          format: int32\n        warehouseName:\n          type: string\n        originAddress:\n          $ref: \"#/components/schemas/OriginAddress\"\n        returnAddress:\n          $ref: \"#/components/schemas/ReturnAddress\"\n        createDate:\n          type: string\n        isDefault:\n          type: boolean\n      example:\n        warehouseId: 12345\n        warehouseName: API Ship From Location\n        originAddress:\n          name: API Warehouse\n          company: ShipStation\n          street1: 2815 Exposition Blvd\n          street2: null\n          street3: null\n          city: Austin\n          state: TX\n          postalCode: \"78703\"\n          country: US\n          phone: 512-555-5555\n          residential: true\n          addressVerified: null\n        returnAddress:\n          name: API Ship From Location\n          company: ShipStation\n          street1: 2815 Exposition Blvd\n          street2: null\n          street3: null\n          city: Austin\n          state: TX\n          postalCode: \"78703\"\n          country: US\n          phone: 512-555-5555\n          residential: null\n          addressVerified: null\n        createDate: \"2015-07-02T08:38:31.487\"\n        isDefault: true\n    OriginAddress:\n      title: OriginAddress\n      required:\n        - name\n        - company\n        - street1\n        - city\n        - state\n        - postalCode\n        - country\n        - phone\n        - residential\n      type: object\n      properties:\n        name:\n          type: string\n        company:\n          type: string\n        street1:\n          type: string\n        street2:\n          type: string\n          nullable: true\n        street3:\n          type: string\n          nullable: true\n        city:\n          type: string\n        state:\n          type: string\n        postalCode:\n          type: string\n        country:\n          type: string\n        phone:\n          type: string\n        residential:\n          type: boolean\n        addressVerified:\n          type: string\n          nullable: true\n    ReturnAddress:\n      title: ReturnAddress\n      required:\n        - name\n        - company\n        - street1\n        - city\n        - state\n        - postalCode\n        - country\n        - phone\n      type: object\n      properties:\n        name:\n          type: string\n        company:\n          type: string\n        street1:\n          type: string\n        street2:\n          type: string\n          nullable: true\n        street3:\n          type: string\n          nullable: true\n        city:\n          type: string\n        state:\n          type: string\n        postalCode:\n          type: string\n        country:\n          type: string\n        phone:\n          type: string\n        residential:\n          type: string\n          nullable: true\n        addressVerified:\n          type: string\n          nullable: true\n    UpdateWarehouserequest:\n      title: UpdateWarehouserequest\n      required:\n        - warehouseId\n        - warehouseName\n        - originAddress\n        - returnAddress\n        - createDate\n        - isDefault\n      type: object\n      properties:\n        warehouseId:\n          type: integer\n          format: int32\n        warehouseName:\n          type: string\n        originAddress:\n          $ref: \"#/components/schemas/OriginAddress\"\n        returnAddress:\n          $ref: \"#/components/schemas/ReturnAddress\"\n        createDate:\n          type: string\n        isDefault:\n          type: boolean\n      example:\n        warehouseId: 12345\n        warehouseName: API Ship From Location\n        originAddress:\n          name: API Warehouse\n          company: ShipStation\n          street1: 2815 Exposition Blvd\n          street2: null\n          street3: null\n          city: Austin\n          state: TX\n          postalCode: \"78703\"\n          country: US\n          phone: 512-555-5555\n          residential: true\n          addressVerified: null\n        returnAddress:\n          name: API Ship From Location\n          company: ShipStation\n          street1: 2815 Exposition Blvd\n          street2: null\n          street3: null\n          city: Austin\n          state: TX\n          postalCode: \"78703\"\n          country: US\n          phone: 512-555-5555\n          residential: null\n          addressVerified: null\n        createDate: \"2015-07-02T08:38:31.487\"\n        isDefault: true\n    UpdateWarehouseresponse:\n      title: UpdateWarehouseresponse\n      required:\n        - warehouseId\n        - warehouseName\n        - originAddress\n        - returnAddress\n        - createDate\n        - isDefault\n      type: object\n      properties:\n        warehouseId:\n          type: integer\n          format: int32\n        warehouseName:\n          type: string\n        originAddress:\n          $ref: \"#/components/schemas/OriginAddress\"\n        returnAddress:\n          $ref: \"#/components/schemas/ReturnAddress\"\n        createDate:\n          type: string\n        isDefault:\n          type: boolean\n      example:\n        warehouseId: 12345\n        warehouseName: API Ship From Location\n        originAddress:\n          name: API Warehouse\n          company: ShipStation\n          street1: 2815 Exposition Blvd\n          street2: null\n          street3: null\n          city: Austin\n          state: TX\n          postalCode: \"78703\"\n          country: US\n          phone: 512-555-5555\n          residential: true\n          addressVerified: null\n        returnAddress:\n          name: API Ship From Location\n          company: ShipStation\n          street1: 2815 Exposition Blvd\n          street2: null\n          street3: null\n          city: Austin\n          state: TX\n          postalCode: \"78703\"\n          country: US\n          phone: 512-555-5555\n          residential: null\n          addressVerified: null\n        createDate: \"2015-07-02T08:38:31.487\"\n        isDefault: true\n    DeleteWarehouseresponse:\n      title: DeleteWarehouseresponse\n      required:\n        - success\n        - message\n      type: object\n      properties:\n        success:\n          type: boolean\n        message:\n          type: string\n      example:\n        success: true\n        message: The requested warehouse has been deleted.\n    CreateWarehouserequest:\n      title: CreateWarehouserequest\n      required:\n        - warehouseName\n        - originAddress\n        - isDefault\n      type: object\n      properties:\n        warehouseName:\n          type: string\n        originAddress:\n          $ref: \"#/components/schemas/OriginAddress3\"\n        returnAddress:\n          type: string\n          nullable: true\n        isDefault:\n          type: boolean\n      example:\n        warehouseName: New Ship From Location\n        originAddress:\n          name: NM Warehouse\n          company: White Sands Co.\n          street1: 4704 Arabela Dr.\n          street2: null\n          street3: null\n          city: Las Cruces\n          state: NM\n          postalCode: \"80012\"\n          country: US\n          phone: 512-111-2222\n          residential: true\n        returnAddress: null\n        isDefault: false\n    OriginAddress3:\n      title: OriginAddress3\n      required:\n        - name\n        - company\n        - street1\n        - city\n        - state\n        - postalCode\n        - country\n        - phone\n        - residential\n      type: object\n      properties:\n        name:\n          type: string\n        company:\n          type: string\n        street1:\n          type: string\n        street2:\n          type: string\n          nullable: true\n        street3:\n          type: string\n          nullable: true\n        city:\n          type: string\n        state:\n          type: string\n        postalCode:\n          type: string\n        country:\n          type: string\n        phone:\n          type: string\n        residential:\n          type: boolean\n    CreateWarehouseresponse:\n      title: CreateWarehouseresponse\n      required:\n        - warehouseId\n        - warehouseName\n        - originAddress\n        - returnAddress\n        - createDate\n        - isDefault\n      type: object\n      properties:\n        warehouseId:\n          type: integer\n          format: int32\n        warehouseName:\n          type: string\n        originAddress:\n          $ref: \"#/components/schemas/OriginAddress4\"\n        returnAddress:\n          $ref: \"#/components/schemas/ReturnAddress3\"\n        createDate:\n          type: string\n        isDefault:\n          type: boolean\n      example:\n        warehouseId: 17977\n        warehouseName: New Ship From Location\n        originAddress:\n          name: NM Warehouse\n          company: White Sands Co\n          street1: 4704 Arabela Dr.\n          street2: \"\"\n          street3: \"\"\n          city: Las Cruces\n          state: NM\n          postalCode: \"88012\"\n          country: US\n          phone: 512-111-2222\n          residential: true\n        returnAddress:\n          name: NM Warehouse\n          company: White Sands Co\n          street1: 4704 Arabela Dr.\n          street2: \"\"\n          street3: \"\"\n          city: Las Cruces\n          state: NM\n          postalCode: \"88012\"\n          country: US\n          phone: 512-111-2222\n          residential: null\n        createDate: \"2014-10-21T08:11:43.88\"\n        isDefault: false\n    OriginAddress4:\n      title: OriginAddress4\n      required:\n        - name\n        - company\n        - street1\n        - street2\n        - street3\n        - city\n        - state\n        - postalCode\n        - country\n        - phone\n        - residential\n      type: object\n      properties:\n        name:\n          type: string\n        company:\n          type: string\n        street1:\n          type: string\n        street2:\n          type: string\n        street3:\n          type: string\n        city:\n          type: string\n        state:\n          type: string\n        postalCode:\n          type: string\n        country:\n          type: string\n        phone:\n          type: string\n        residential:\n          type: boolean\n      example:\n        name: Spring warehouse\n        company: \"\"\n        street1: \"123 S SPRING RD  \"\n        street2: \"\"\n        street3: \"\"\n        city: Elmurst\n        state: IL\n        postalCode: \"60126\"\n        country: US\n        phone: \"5121112222\"\n        residential: false\n    ReturnAddress3:\n      title: ReturnAddress3\n      required:\n        - name\n        - company\n        - street1\n        - street2\n        - street3\n        - city\n        - state\n        - postalCode\n        - country\n        - phone\n      type: object\n      properties:\n        name:\n          type: string\n        company:\n          type: string\n        street1:\n          type: string\n        street2:\n          type: string\n        street3:\n          type: string\n        city:\n          type: string\n        state:\n          type: string\n        postalCode:\n          type: string\n        country:\n          type: string\n        phone:\n          type: string\n        residential:\n          type: string\n          nullable: true\n      example:\n        name: Chicago House\n        company: \"\"\n        street1: \"123 S SPRING RD  \"\n        street2: \"\"\n        street3: \"\"\n        city: Elmurst\n        state: IL\n        postalCode: \"60126\"\n        country: US\n        phone: \"5121112222\"\n        residential: null\n    ListWarehousesresponse:\n      title: ListWarehousesresponse\n      required:\n        - warehouseId\n        - warehouseName\n        - originAddress\n        - returnAddress\n        - createDate\n        - isDefault\n      type: object\n      properties:\n        warehouseId:\n          type: integer\n          format: int32\n          example: 17977\n        warehouseName:\n          type: string\n          example: Main warehouse\n        originAddress:\n          $ref: \"#/components/schemas/OriginAddress4\"\n        returnAddress:\n          $ref: \"#/components/schemas/ReturnAddress3\"\n        createDate:\n          type: string\n          example: 10/21/2014 8:11:43 AM\n        isDefault:\n          type: boolean\n          example: true\n      example:\n        warehouseId: 17977\n        warehouseName: Main warehouse\n        originAddress:\n          name: Spring warehouse\n          company: \"\"\n          street1: \"123 S SPRING RD  \"\n          street2: \"\"\n          street3: \"\"\n          city: Elmurst\n          state: IL\n          postalCode: \"60126\"\n          country: US\n          phone: \"5121112222\"\n          residential: false\n        returnAddress:\n          name: Chicago House\n          company: \"\"\n          street1: \"123 S SPRING RD  \"\n          street2: \"\"\n          street3: \"\"\n          city: Elmurst\n          state: IL\n          postalCode: \"60126\"\n          country: US\n          phone: \"5121112222\"\n          residential: null\n        createDate: \"2014-10-21T08:11:43.88\"\n        isDefault: true\n    ListWebhooksresponse:\n      title: ListWebhooksresponse\n      required:\n        - webhooks\n      type: object\n      properties:\n        webhooks:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Webhook\"\n          description: \"\"\n      example:\n        webhooks:\n          - IsLabelAPIHook: false\n            WebHookID: 123\n            SellerID: 100000\n            StoreID: 12345\n            HookType: ITEM_ORDER_NOTIFY\n            MessageFormat: Json\n            Url: http://example.endpoint/orders\n            Name: My Order Webhook\n            BulkCopyBatchID: null\n            BulkCopyRecordID: null\n            Active: true\n            WebhookLogs: []\n            Seller: null\n            Store: null\n          - IsLabelAPIHook: false\n            WebHookID: 456\n            SellerID: 100000\n            StoreID: 98765\n            HookType: SHIP_NOTIFY\n            MessageFormat: Json\n            Url: https://example.endpoint/shipment\n            Name: My Shipment Webhook\n            BulkCopyBatchID: null\n            BulkCopyRecordID: null\n            Active: true\n            WebhookLogs: []\n            Seller: null\n            Store: null\n    Webhook:\n      title: Webhook\n      required:\n        - IsLabelAPIHook\n        - WebHookID\n        - SellerID\n        - StoreID\n        - HookType\n        - MessageFormat\n        - Url\n        - Name\n        - Active\n        - WebhookLogs\n      type: object\n      properties:\n        IsLabelAPIHook:\n          type: boolean\n          example: false\n        WebHookID:\n          type: integer\n          format: int32\n          example: 123\n        SellerID:\n          type: integer\n          format: int32\n          example: 100000\n        StoreID:\n          type: integer\n          format: int32\n          example: 12345\n        HookType:\n          type: string\n          example: ITEM_ORDER_NOTIFY\n        MessageFormat:\n          type: string\n          example: Json\n        Url:\n          type: string\n          example: http://example.endpoint/orders\n        Name:\n          type: string\n          example: My Order Webhook\n        BulkCopyBatchID:\n          type: string\n          nullable: true\n        BulkCopyRecordID:\n          type: string\n          nullable: true\n        Active:\n          type: boolean\n          example: true\n        WebhookLogs:\n          type: array\n          items:\n            type: string\n          description: \"\"\n        Seller:\n          type: string\n          nullable: true\n        Store:\n          type: string\n          nullable: true\n    SubscribetoWebhookrequest:\n      title: SubscribetoWebhookrequest\n      required:\n        - target_url\n        - event\n        - friendly_name\n      type: object\n      properties:\n        target_url:\n          type: string\n        event:\n          type: string\n        store_id:\n          type: string\n          nullable: true\n        friendly_name:\n          type: string\n      example:\n        target_url: http://someexamplewebhookurl.com/neworder\n        event: ORDER_NOTIFY\n        store_id: null\n        friendly_name: My Webhook\n    SubscribetoWebhookresponse:\n      title: SubscribetoWebhookresponse\n      required:\n        - id\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int32\n      example:\n        id: 123456\n  securitySchemes:\n    httpBasic:\n      type: http\n      scheme: basic\nsecurity:\n  - httpBasic: []\ntags:\n  - name: Accounts\n    description: \"\"\n  - name: Carriers\n    description: \"\"\n  - name: Customers\n    description: \"\"\n  - name: Fulfillments\n    description: \"\"\n  - name: Orders\n    description: \"\"\n  - name: Products\n    description: \"\"\n  - name: Shipments\n    description: \"\"\n  - name: Stores\n    description: \"\"\n  - name: Users\n    description: \"\"\n  - name: Warehouses\n    description: \"\"\n  - name: Webhooks\n    description: \"\"\n"
		}
	},
	"Error": "panic: runtime error: invalid memory address or nil pointer dereference"
}