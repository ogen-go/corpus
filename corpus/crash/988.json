{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/m3o/m3o-cli"
		},
		"file": {
			"name": "db.json",
			"path": "api/spec/db.json",
			"content": "{\n  \"components\": {\n    \"requestBodies\": {\n      \"DbCountRequest\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/CountRequest\"\n            }\n          }\n        },\n        \"description\": \"DbCountRequest\"\n      },\n      \"DbCreateRequest\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/CreateRequest\"\n            }\n          }\n        },\n        \"description\": \"DbCreateRequest\"\n      },\n      \"DbDeleteRequest\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/DeleteRequest\"\n            }\n          }\n        },\n        \"description\": \"DbDeleteRequest\"\n      },\n      \"DbDropTableRequest\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/DropTableRequest\"\n            }\n          }\n        },\n        \"description\": \"DbDropTableRequest\"\n      },\n      \"DbListTablesRequest\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/ListTablesRequest\"\n            }\n          }\n        },\n        \"description\": \"DbListTablesRequest\"\n      },\n      \"DbReadRequest\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/ReadRequest\"\n            }\n          }\n        },\n        \"description\": \"DbReadRequest\"\n      },\n      \"DbRenameTableRequest\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/RenameTableRequest\"\n            }\n          }\n        },\n        \"description\": \"DbRenameTableRequest\"\n      },\n      \"DbTruncateRequest\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/TruncateRequest\"\n            }\n          }\n        },\n        \"description\": \"DbTruncateRequest\"\n      },\n      \"DbUpdateRequest\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/UpdateRequest\"\n            }\n          }\n        },\n        \"description\": \"DbUpdateRequest\"\n      }\n    },\n    \"responses\": {\n      \"DbCountResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/CountResponse\"\n            }\n          }\n        },\n        \"description\": \"DbCountResponse\"\n      },\n      \"DbCreateResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/CreateResponse\"\n            }\n          }\n        },\n        \"description\": \"DbCreateResponse\"\n      },\n      \"DbDeleteResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/DeleteResponse\"\n            }\n          }\n        },\n        \"description\": \"DbDeleteResponse\"\n      },\n      \"DbDropTableResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/DropTableResponse\"\n            }\n          }\n        },\n        \"description\": \"DbDropTableResponse\"\n      },\n      \"DbListTablesResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/ListTablesResponse\"\n            }\n          }\n        },\n        \"description\": \"DbListTablesResponse\"\n      },\n      \"DbReadResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/ReadResponse\"\n            }\n          }\n        },\n        \"description\": \"DbReadResponse\"\n      },\n      \"DbRenameTableResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/RenameTableResponse\"\n            }\n          }\n        },\n        \"description\": \"DbRenameTableResponse\"\n      },\n      \"DbTruncateResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/TruncateResponse\"\n            }\n          }\n        },\n        \"description\": \"DbTruncateResponse\"\n      },\n      \"DbUpdateResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/UpdateResponse\"\n            }\n          }\n        },\n        \"description\": \"DbUpdateResponse\"\n      },\n      \"MicroAPIError\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"properties\": {\n                \"Code\": {\n                  \"description\": \"Error code\",\n                  \"example\": 500,\n                  \"type\": \"number\"\n                },\n                \"Detail\": {\n                  \"description\": \"Error detail\",\n                  \"example\": \"service not found\",\n                  \"type\": \"string\"\n                },\n                \"Id\": {\n                  \"description\": \"Error ID\",\n                  \"type\": \"string\"\n                },\n                \"Status\": {\n                  \"description\": \"Error status message\",\n                  \"example\": \"Internal Server Error\",\n                  \"type\": \"string\"\n                }\n              },\n              \"title\": \"MicroAPIError\",\n              \"type\": \"object\"\n            }\n          }\n        },\n        \"description\": \"Error from the Micro API\"\n      }\n    },\n    \"schemas\": {\n      \"CountRequest\": {\n        \"description\": \"Count records in a table\",\n        \"properties\": {\n          \"table\": {\n            \"description\": \"specify the table name\",\n            \"type\": \"string\"\n          }\n        },\n        \"title\": \"CountRequest\",\n        \"type\": \"object\"\n      },\n      \"CountResponse\": {\n        \"properties\": {\n          \"count\": {\n            \"description\": \"the number of records in the table\",\n            \"format\": \"int32\",\n            \"type\": \"number\"\n          }\n        },\n        \"title\": \"CountResponse\",\n        \"type\": \"object\"\n      },\n      \"CreateRequest\": {\n        \"description\": \"Create a record in the database. Optionally include an \\\"id\\\" field otherwise it's set automatically.\",\n        \"properties\": {\n          \"id\": {\n            \"description\": \"optional record id to use\",\n            \"type\": \"string\"\n          },\n          \"record\": {\n            \"description\": \"JSON encoded record or records (can be array or object)\",\n            \"type\": \"object\"\n          },\n          \"table\": {\n            \"description\": \"Optional table name. Defaults to 'default'\",\n            \"type\": \"string\"\n          }\n        },\n        \"title\": \"CreateRequest\",\n        \"type\": \"object\"\n      },\n      \"CreateResponse\": {\n        \"properties\": {\n          \"id\": {\n            \"description\": \"The id of the record (either specified or automatically created)\",\n            \"type\": \"string\"\n          }\n        },\n        \"title\": \"CreateResponse\",\n        \"type\": \"object\"\n      },\n      \"DeleteRequest\": {\n        \"description\": \"Delete a record in the database by id.\",\n        \"properties\": {\n          \"id\": {\n            \"description\": \"id of the record\",\n            \"type\": \"string\"\n          },\n          \"table\": {\n            \"description\": \"Optional table name. Defaults to 'default'\",\n            \"type\": \"string\"\n          }\n        },\n        \"title\": \"DeleteRequest\",\n        \"type\": \"object\"\n      },\n      \"DeleteResponse\": {\n        \"title\": \"DeleteResponse\",\n        \"type\": \"object\"\n      },\n      \"DropTableRequest\": {\n        \"description\": \"Drop a table in the DB\",\n        \"properties\": {\n          \"table\": {\n            \"type\": \"string\"\n          }\n        },\n        \"title\": \"DropTableRequest\",\n        \"type\": \"object\"\n      },\n      \"DropTableResponse\": {\n        \"title\": \"DropTableResponse\",\n        \"type\": \"object\"\n      },\n      \"ListTablesRequest\": {\n        \"description\": \"List tables in the DB\",\n        \"title\": \"ListTablesRequest\",\n        \"type\": \"object\"\n      },\n      \"ListTablesResponse\": {\n        \"properties\": {\n          \"tables\": {\n            \"description\": \"list of tables\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"title\": \"ListTablesResponse\",\n        \"type\": \"object\"\n      },\n      \"ReadRequest\": {\n        \"description\": \"Read data from a table. Lookup can be by ID or via querying any field in the record.\",\n        \"properties\": {\n          \"id\": {\n            \"description\": \"Read by id. Equivalent to 'id == \\\"your-id\\\"'\",\n            \"type\": \"string\"\n          },\n          \"limit\": {\n            \"description\": \"Maximum number of records to return. Default limit is 25.\\n Maximum limit is 1000. Anything higher will return an error.\",\n            \"format\": \"int32\",\n            \"type\": \"number\"\n          },\n          \"offset\": {\n            \"format\": \"int32\",\n            \"type\": \"number\"\n          },\n          \"order\": {\n            \"description\": \"'asc' (default), 'desc'\",\n            \"type\": \"string\"\n          },\n          \"orderBy\": {\n            \"description\": \"field name to order by\",\n            \"type\": \"string\"\n          },\n          \"query\": {\n            \"description\": \"Examples: 'age \\u003e= 18', 'age \\u003e= 18 and verified == true'\\n Comparison operators: '==', '!=', '\\u003c', '\\u003e', '\\u003c=', '\\u003e='\\n Logical operator: 'and'\\n Dot access is supported, eg: 'user.age == 11'\\n Accessing list elements is not supported yet.\",\n            \"type\": \"string\"\n          },\n          \"table\": {\n            \"description\": \"Optional table name. Defaults to 'default'\",\n            \"type\": \"string\"\n          }\n        },\n        \"title\": \"ReadRequest\",\n        \"type\": \"object\"\n      },\n      \"ReadResponse\": {\n        \"properties\": {\n          \"records\": {\n            \"description\": \"JSON encoded records\",\n            \"items\": {\n              \"type\": \"object\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"title\": \"ReadResponse\",\n        \"type\": \"object\"\n      },\n      \"RenameTableRequest\": {\n        \"description\": \"Rename a table\",\n        \"properties\": {\n          \"from\": {\n            \"description\": \"current table name\",\n            \"type\": \"string\"\n          },\n          \"to\": {\n            \"description\": \"new table name\",\n            \"type\": \"string\"\n          }\n        },\n        \"title\": \"RenameTableRequest\",\n        \"type\": \"object\"\n      },\n      \"RenameTableResponse\": {\n        \"title\": \"RenameTableResponse\",\n        \"type\": \"object\"\n      },\n      \"TruncateRequest\": {\n        \"description\": \"Truncate the records in a table\",\n        \"properties\": {\n          \"table\": {\n            \"type\": \"string\"\n          }\n        },\n        \"title\": \"TruncateRequest\",\n        \"type\": \"object\"\n      },\n      \"TruncateResponse\": {\n        \"title\": \"TruncateResponse\",\n        \"type\": \"object\"\n      },\n      \"UpdateRequest\": {\n        \"description\": \"Update a record in the database. Include an \\\"id\\\" in the record to update.\",\n        \"properties\": {\n          \"id\": {\n            \"description\": \"The id of the record. If not specified it is inferred from the 'id' field of the record\",\n            \"type\": \"string\"\n          },\n          \"record\": {\n            \"description\": \"record, JSON object\",\n            \"type\": \"object\"\n          },\n          \"table\": {\n            \"description\": \"Optional table name. Defaults to 'default'\",\n            \"type\": \"string\"\n          }\n        },\n        \"title\": \"UpdateRequest\",\n        \"type\": \"object\"\n      },\n      \"UpdateResponse\": {\n        \"title\": \"UpdateResponse\",\n        \"type\": \"object\"\n      }\n    },\n    \"securitySchemes\": {\n      \"M3OAPIToken\": {\n        \"bearerFormat\": \"token\",\n        \"description\": \"M3O API token\",\n        \"scheme\": \"bearer\",\n        \"type\": \"http\"\n      }\n    }\n  },\n  \"info\": {\n    \"description\": \"Generated by protoc-gen-openapi\",\n    \"title\": \"Db\",\n    \"version\": \"1\",\n    \"x-logo\": {\n      \"altText\": \"M3O logo\",\n      \"backgroundColor\": \"#000000\",\n      \"url\": \"https://raw.githubusercontent.com/m3o/m3o/main/images/logo.png\"\n    }\n  },\n  \"openapi\": \"3.0.0\",\n  \"paths\": {\n    \"/db/Db/Count\": {\n      \"parameters\": [\n        {\n          \"in\": \"header\",\n          \"name\": \"Micro-Namespace\",\n          \"required\": true,\n          \"schema\": {\n            \"default\": \"micro\",\n            \"type\": \"string\"\n          }\n        }\n      ],\n      \"post\": {\n        \"requestBody\": {\n          \"$ref\": \"#/components/requestBodies/DbCountRequest\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/DbCountResponse\"\n          },\n          \"default\": {\n            \"$ref\": \"#/components/responses/MicroAPIError\"\n          }\n        },\n        \"security\": [\n          {\n            \"MicroAPIToken\": []\n          }\n        ],\n        \"summary\": \"Db.Count(CountRequest)\"\n      }\n    },\n    \"/db/Db/Create\": {\n      \"parameters\": [\n        {\n          \"in\": \"header\",\n          \"name\": \"Micro-Namespace\",\n          \"required\": true,\n          \"schema\": {\n            \"default\": \"micro\",\n            \"type\": \"string\"\n          }\n        }\n      ],\n      \"post\": {\n        \"requestBody\": {\n          \"$ref\": \"#/components/requestBodies/DbCreateRequest\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/DbCreateResponse\"\n          },\n          \"default\": {\n            \"$ref\": \"#/components/responses/MicroAPIError\"\n          }\n        },\n        \"security\": [\n          {\n            \"MicroAPIToken\": []\n          }\n        ],\n        \"summary\": \"Db.Create(CreateRequest)\"\n      }\n    },\n    \"/db/Db/Delete\": {\n      \"parameters\": [\n        {\n          \"in\": \"header\",\n          \"name\": \"Micro-Namespace\",\n          \"required\": true,\n          \"schema\": {\n            \"default\": \"micro\",\n            \"type\": \"string\"\n          }\n        }\n      ],\n      \"post\": {\n        \"requestBody\": {\n          \"$ref\": \"#/components/requestBodies/DbDeleteRequest\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/DbDeleteResponse\"\n          },\n          \"default\": {\n            \"$ref\": \"#/components/responses/MicroAPIError\"\n          }\n        },\n        \"security\": [\n          {\n            \"MicroAPIToken\": []\n          }\n        ],\n        \"summary\": \"Db.Delete(DeleteRequest)\"\n      }\n    },\n    \"/db/Db/DropTable\": {\n      \"parameters\": [\n        {\n          \"in\": \"header\",\n          \"name\": \"Micro-Namespace\",\n          \"required\": true,\n          \"schema\": {\n            \"default\": \"micro\",\n            \"type\": \"string\"\n          }\n        }\n      ],\n      \"post\": {\n        \"requestBody\": {\n          \"$ref\": \"#/components/requestBodies/DbDropTableRequest\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/DbDropTableResponse\"\n          },\n          \"default\": {\n            \"$ref\": \"#/components/responses/MicroAPIError\"\n          }\n        },\n        \"security\": [\n          {\n            \"MicroAPIToken\": []\n          }\n        ],\n        \"summary\": \"Db.DropTable(DropTableRequest)\"\n      }\n    },\n    \"/db/Db/ListTables\": {\n      \"parameters\": [\n        {\n          \"in\": \"header\",\n          \"name\": \"Micro-Namespace\",\n          \"required\": true,\n          \"schema\": {\n            \"default\": \"micro\",\n            \"type\": \"string\"\n          }\n        }\n      ],\n      \"post\": {\n        \"requestBody\": {\n          \"$ref\": \"#/components/requestBodies/DbListTablesRequest\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/DbListTablesResponse\"\n          },\n          \"default\": {\n            \"$ref\": \"#/components/responses/MicroAPIError\"\n          }\n        },\n        \"security\": [\n          {\n            \"MicroAPIToken\": []\n          }\n        ],\n        \"summary\": \"Db.ListTables(ListTablesRequest)\"\n      }\n    },\n    \"/db/Db/Read\": {\n      \"parameters\": [\n        {\n          \"in\": \"header\",\n          \"name\": \"Micro-Namespace\",\n          \"required\": true,\n          \"schema\": {\n            \"default\": \"micro\",\n            \"type\": \"string\"\n          }\n        }\n      ],\n      \"post\": {\n        \"requestBody\": {\n          \"$ref\": \"#/components/requestBodies/DbReadRequest\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/DbReadResponse\"\n          },\n          \"default\": {\n            \"$ref\": \"#/components/responses/MicroAPIError\"\n          }\n        },\n        \"security\": [\n          {\n            \"MicroAPIToken\": []\n          }\n        ],\n        \"summary\": \"Db.Read(ReadRequest)\"\n      }\n    },\n    \"/db/Db/RenameTable\": {\n      \"parameters\": [\n        {\n          \"in\": \"header\",\n          \"name\": \"Micro-Namespace\",\n          \"required\": true,\n          \"schema\": {\n            \"default\": \"micro\",\n            \"type\": \"string\"\n          }\n        }\n      ],\n      \"post\": {\n        \"requestBody\": {\n          \"$ref\": \"#/components/requestBodies/DbRenameTableRequest\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/DbRenameTableResponse\"\n          },\n          \"default\": {\n            \"$ref\": \"#/components/responses/MicroAPIError\"\n          }\n        },\n        \"security\": [\n          {\n            \"MicroAPIToken\": []\n          }\n        ],\n        \"summary\": \"Db.RenameTable(RenameTableRequest)\"\n      }\n    },\n    \"/db/Db/Truncate\": {\n      \"parameters\": [\n        {\n          \"in\": \"header\",\n          \"name\": \"Micro-Namespace\",\n          \"required\": true,\n          \"schema\": {\n            \"default\": \"micro\",\n            \"type\": \"string\"\n          }\n        }\n      ],\n      \"post\": {\n        \"requestBody\": {\n          \"$ref\": \"#/components/requestBodies/DbTruncateRequest\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/DbTruncateResponse\"\n          },\n          \"default\": {\n            \"$ref\": \"#/components/responses/MicroAPIError\"\n          }\n        },\n        \"security\": [\n          {\n            \"MicroAPIToken\": []\n          }\n        ],\n        \"summary\": \"Db.Truncate(TruncateRequest)\"\n      }\n    },\n    \"/db/Db/Update\": {\n      \"parameters\": [\n        {\n          \"in\": \"header\",\n          \"name\": \"Micro-Namespace\",\n          \"required\": true,\n          \"schema\": {\n            \"default\": \"micro\",\n            \"type\": \"string\"\n          }\n        }\n      ],\n      \"post\": {\n        \"requestBody\": {\n          \"$ref\": \"#/components/requestBodies/DbUpdateRequest\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/DbUpdateResponse\"\n          },\n          \"default\": {\n            \"$ref\": \"#/components/responses/MicroAPIError\"\n          }\n        },\n        \"security\": [\n          {\n            \"MicroAPIToken\": []\n          }\n        ],\n        \"summary\": \"Db.Update(UpdateRequest)\"\n      }\n    }\n  },\n  \"servers\": [\n    {\n      \"url\": \"https://api.m3o.com/v1\",\n      \"description\": \"M3O platform\"\n    }\n  ]\n}"
		}
	},
	"Error": "panic: runtime error: index out of range [0] with length 0"
}