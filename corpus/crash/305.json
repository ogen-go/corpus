{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/IBM/openapi-to-graphql"
		},
		"file": {
			"name": "example_oas4.json",
			"path": "packages/openapi-to-graphql/test/fixtures/example_oas4.json",
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"title\": \"Example API 4\",\n    \"description\": \"An API to test converting Open API Specs 3.0 to GraphQL\",\n    \"version\": \"1.0.0\",\n    \"termsOfService\": \"http://example.com/terms/\",\n    \"contact\": {\n      \"name\": \"Erik Wittern\",\n      \"url\": \"http://www.example.com/support\"\n    },\n    \"license\": {\n      \"name\": \"Apache 2.0\",\n      \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n    }\n  },\n  \"externalDocs\": {\n    \"url\": \"http://example.com/docs\",\n    \"description\": \"Some more natural language description.\"\n  },\n  \"tags\": [\n    {\n      \"name\": \"test\",\n      \"description\": \"Indicates this API is for testing\"\n    }\n  ],\n  \"servers\": [\n    {\n      \"url\": \"http://localhost:{port}/{basePath}\",\n      \"description\": \"The location of the local test server.\",\n      \"variables\": {\n        \"port\": {\n          \"default\": \"3004\"\n        },\n        \"basePath\": {\n          \"default\": \"api\"\n        }\n      }\n    }\n  ],\n  \"paths\": {\n    \"/oneOf\": {\n      \"get\": {\n        \"description\": \"Basic oneOf test\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"oneOf\": [\n                    {\n                      \"$ref\": \"#/components/schemas/commonAttributeObject\"\n                    },\n                    {\n                      \"$ref\": \"#/components/schemas/differentAttributeObject\"\n                    }\n                  ]\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/oneOf2\": {\n      \"get\": {\n        \"description\": \"oneOf test with non-object type member schema\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"oneOf\": [\n                    {\n                      \"$ref\": \"#/components/schemas/commonAttributeObject\"\n                    },\n                    {\n                      \"type\": \"integer\"\n                    }\n                  ]\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/oneOf3\": {\n      \"get\": {\n        \"description\": \"oneOf test with no object type member schemas\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"oneOf\": [\n                    {\n                      \"type\": \"string\"\n                    },\n                    {\n                      \"type\": \"integer\"\n                    }\n                  ]\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/oneOf4\": {\n      \"get\": {\n        \"description\": \"oneOf test with extraneous member schemas\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"oneOf\": [\n                    {\n                      \"minimum\": -90\n                    },\n                    {\n                      \"maximum\": 90\n                    }\n                  ]\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/oneOf5\": {\n      \"get\": {\n        \"description\": \"Basic oneOf test with allOf\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"oneOf\": [\n                    {\n                      \"$ref\": \"#/components/schemas/commonAttributeObject\"\n                    },\n                    {\n                      \"$ref\": \"#/components/schemas/differentAttributeObject\"\n                    }\n                  ],\n                  \"allOf\": [\n                    {\n                      \"$ref\": \"#/components/schemas/anotherAttributeObject\"\n                    }\n                  ]\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/oneOf6\": {\n      \"get\": {\n        \"description\": \"oneOf test with allOf, requiring oneOf collapse\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"oneOf\": [\n                    {\n                      \"$ref\": \"#/components/schemas/commonAttributeObject\"\n                    },\n                    {\n                      \"$ref\": \"#/components/schemas/differentAttributeObject\"\n                    }\n                  ],\n                  \"allOf\": [\n                    {\n                      \"oneOf\": [\n                        {\n                          \"$ref\": \"#/components/schemas/anotherAttributeObject\"\n                        }\n                      ]\n                    }\n                  ]\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/anyOf\": {\n      \"get\": {\n        \"description\": \"Basic anyOf test using the same member schemas\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"anyOf\": [\n                    {\n                      \"$ref\": \"#/components/schemas/commonAttributeObject\"\n                    },\n                    {\n                      \"$ref\": \"#/components/schemas/commonAttributeObject\"\n                    }\n                  ]\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/anyOf2\": {\n      \"get\": {\n        \"description\": \"Basic anyOf test with different member schemas\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"anyOf\": [\n                    {\n                      \"$ref\": \"#/components/schemas/commonAttributeObject\"\n                    },\n                    {\n                      \"$ref\": \"#/components/schemas/differentAttributeObject\"\n                    }\n                  ]\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/anyOf3\": {\n      \"get\": {\n        \"description\": \"anyOf test with the same nested member schemas\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"anyOf\": [\n                    {\n                      \"properties\": {\n                        \"commonAttribute\": {\n                          \"$ref\": \"#/components/schemas/commonAttributeObject\"\n                        }\n                      }\n                    },\n                    {\n                      \"properties\": {\n                        \"commonAttribute\": {\n                          \"$ref\": \"#/components/schemas/commonAttributeObject\"\n                        }\n                      }\n                    }\n                  ]\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/anyOf4\": {\n      \"get\": {\n        \"description\": \"anyOf test with different nested member schemas\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"anyOf\": [\n                    {\n                      \"properties\": {\n                        \"commonAttribute\": {\n                          \"$ref\": \"#/components/schemas/commonAttributeObject\"\n                        }\n                      }\n                    },\n                    {\n                      \"properties\": {\n                        \"differentAttribute\": {\n                          \"$ref\": \"#/components/schemas/commonAttributeObject\"\n                        }\n                      }\n                    }\n                  ]\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/anyOf5\": {\n      \"get\": {\n        \"description\": \"anyOf test with different nested member schemas, leading to conflict\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"anyOf\": [\n                    {\n                      \"properties\": {\n                        \"commonAttribute\": {\n                          \"$ref\": \"#/components/schemas/commonAttributeObject\"\n                        }\n                      }\n                    },\n                    {\n                      \"properties\": {\n                        \"commonAttribute\": {\n                          \"$ref\": \"#/components/schemas/differentAttributeObject\"\n                        }\n                      }\n                    }\n                  ]\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/anyOf6\": {\n      \"get\": {\n        \"description\": \"anyOf test with incompatible member schema types\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"anyOf\": [\n                    {\n                      \"$ref\": \"#/components/schemas/commonAttributeObject\"\n                    },\n                    {\n                      \"type\": \"string\"\n                    }\n                  ]\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/anyOf7\": {\n      \"get\": {\n        \"description\": \"anyOf test with some extraneous member schemas\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"anyOf\": [\n                    {\n                      \"$ref\": \"#/components/schemas/commonAttributeObject\"\n                    },\n                    {\n                      \"minimum\": -90\n                    },\n                    {\n                      \"maximum\": 90\n                    }\n                  ]\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/anyOf8\": {\n      \"get\": {\n        \"description\": \"anyOf test with no object type member schemas\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"anyOf\": [\n                    {\n                      \"type\": \"integer\"\n                    },\n                    {\n                      \"minimum\": -90\n                    },\n                    {\n                      \"maximum\": 90\n                    }\n                  ]\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/anyOf9\": {\n      \"get\": {\n        \"description\": \"anyOf test with extraneous member schemas with external type\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"anyOf\": [\n                    {\n                      \"minimum\": -90\n                    },\n                    {\n                      \"maximum\": 90\n                    }\n                  ]\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/anyOf10\": {\n      \"get\": {\n        \"description\": \"Basic anyOf test with allOf\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"anyOf\": [\n                    {\n                      \"$ref\": \"#/components/schemas/commonAttributeObject\"\n                    },\n                    {\n                      \"$ref\": \"#/components/schemas/differentAttributeObject\"\n                    }\n                  ],\n                  \"allOf\": [\n                    {\n                      \"$ref\": \"#/components/schemas/anotherAttributeObject\"\n                    }\n                  ]\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/anyOf11\": {\n      \"get\": {\n        \"description\": \"anyOf test with allOf, requiring anyOf collapse\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"anyOf\": [\n                    {\n                      \"$ref\": \"#/components/schemas/commonAttributeObject\"\n                    },\n                    {\n                      \"$ref\": \"#/components/schemas/differentAttributeObject\"\n                    }\n                  ],\n                  \"allOf\": [\n                    {\n                      \"anyOf\": [\n                        {\n                          \"$ref\": \"#/components/schemas/anotherAttributeObject\"\n                        }\n                      ]\n                    }\n                  ]\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/testLink\": {\n      \"get\": {\n        \"operationId\": \"testLink\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/oneOfWithAllOfsAndLink\": {\n      \"get\": {\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Return a user.\\n\\nEquivalent to GET /oneOfWithAllOfsAndLink\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OneOfWithAllOfsAndLink\"\n                }\n              }\n            },\n            \"links\": {\n              \"testLink\": {\n                \"operationId\": \"testLink\",\n                \"parameters\": {\n                  \"someId\": \"$request.path.id\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"commonAttributeObject\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"commonAttribute\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"differentAttributeObject\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"differentAttribute\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"anotherAttributeObject\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"anotherAttribute\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"OneOfWithAllOfsAndLink\": {\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/One\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/Two\"\n          }\n        ]\n      },\n      \"Abstract\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"commonProp\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"OneProps\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"differentOneProp\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"TwoProps\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"differentTwoProp\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"One\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/Abstract\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/OneProps\"\n          }\n        ]\n      },\n      \"Two\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/Abstract\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/TwoProps\"\n          }\n        ]\n      }\n    }\n  }\n}\n"
		}
	},
	"Error": "panic: runtime error: index out of range [0] with length 0"
}