{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/openintegrationhub/openintegrationhub"
		},
		"file": {
			"name": "openapi.json",
			"path": "services/meta-data-repository/doc/openapi.json",
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"title\": \"OIH MetaData Service REST API\",\n    \"description\": \"REST API for the OIH MetaData Service.\",\n    \"version\": \"0.0.6\",\n    \"license\": {\n      \"name\": \"Apache 2.0\",\n      \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n    }\n  },\n  \"tags\": [\n    {\n      \"name\": \"Domains\",\n      \"description\": \"Domain management\"\n    }\n  ],\n  \"servers\": [\n    {\n      \"url\": \"http://metadata.openintegrationhub.com/api/v1\"\n    }\n  ],\n  \"paths\": {\n    \"/domains\": {\n      \"get\": {\n        \"tags\": [\n          \"Domains\"\n        ],\n        \"summary\": \"Retrieve the available domains for the authenticated user\",\n        \"security\": [\n          {\n            \"BearerAuth\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Domain\"\n                      }\n                    },\n                    \"meta\": {\n                      \"$ref\": \"#/components/schemas/Meta\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"Domains\"\n        ],\n        \"summary\": \"Create a new Domain.\",\n        \"security\": [\n          {\n            \"BearerAuth\": []\n          }\n        ],\n        \"description\": \"Creates a new Domain for the authenticated user.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MutableDomain\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Domain\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/domains/{domainId}\": {\n      \"get\": {\n        \"tags\": [\n          \"Domains\"\n        ],\n        \"summary\": \"Retrieve a domain with given ID.\",\n        \"security\": [\n          {\n            \"BearerAuth\": []\n          }\n        ],\n        \"description\": \"Provides details of a domain with a given ID.\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"domainId\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Domain\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"Domains\"\n        ],\n        \"summary\": \"Update a domain by ID.\",\n        \"security\": [\n          {\n            \"BearerAuth\": []\n          }\n        ],\n        \"description\": \"Updates details of a domain with a given ID.\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"domainId\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MutableDomain\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Domain\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Domains\"\n        ],\n        \"summary\": \"Delete a domain by ID.\",\n        \"security\": [\n          {\n            \"BearerAuth\": []\n          }\n        ],\n        \"description\": \"Removes any linked schema and deletes Domain.\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"domainId\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Domain\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/domains/{domainId}/schemas\": {\n      \"get\": {\n        \"tags\": [\n          \"Domains\"\n        ],\n        \"summary\": \"Retrieve the available models for the authenticated user.\",\n        \"security\": [\n          {\n            \"BearerAuth\": []\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"domainId\",\n            \"required\": true,\n            \"description\": \"ID of the domain to retrieve models of\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Domain\"\n                      }\n                    },\n                    \"meta\": {\n                      \"$ref\": \"#/components/schemas/Meta\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"Domains\"\n        ],\n        \"summary\": \"Create schema.\",\n        \"security\": [\n          {\n            \"BearerAuth\": []\n          }\n        ],\n        \"description\": \"This endpoint is used to send new schema for a given domain.\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"domainId\",\n            \"required\": true,\n            \"description\": \"ID of the domain to import model into\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MutableSchema\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Schema\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/domains/{domainId}/schemas/import\": {\n      \"post\": {\n        \"tags\": [\n          \"Domains\"\n        ],\n        \"summary\": \"Bulk import models.\",\n        \"security\": [\n          {\n            \"BearerAuth\": []\n          }\n        ],\n        \"description\": \"This endpoint is used to upload multiple new models for a given domain. Accepts zip or tgz archive format.\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"domainId\",\n            \"required\": true,\n            \"description\": \"ID of the domain to import models into\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"archive\": {\n                    \"type\": \"string\",\n                    \"format\": \"binary\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/domains/{domainId}/schemas/{uri}\": {\n      \"get\": {\n        \"tags\": [\n          \"Domains\"\n        ],\n        \"summary\": \"Retrieve a schema by URI.\",\n        \"security\": [\n          {\n            \"BearerAuth\": []\n          }\n        ],\n        \"description\": \"Provides details of a schema with a given URI.\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"domainId\",\n            \"required\": true,\n            \"description\": \"ID of the domain to retrieve schema of\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"uri\",\n            \"required\": true,\n            \"description\": \"URI of the schema\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"#address\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Schema\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"Domains\"\n        ],\n        \"summary\": \"Update a schema with given URI.\",\n        \"security\": [\n          {\n            \"BearerAuth\": []\n          }\n        ],\n        \"description\": \"Updates a schema with given URI.\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"domainId\",\n            \"required\": true,\n            \"description\": \"ID of the domain to update schema for\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"uri\",\n            \"required\": true,\n            \"description\": \"URI of the schema to update\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MutableSchema\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Schema\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Domains\"\n        ],\n        \"summary\": \"Delete a schema by uri\",\n        \"security\": [\n          {\n            \"BearerAuth\": []\n          }\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"domainId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"uri\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"The model was successfully deleted\"\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"securitySchemes\": {\n      \"BearerAuth\": {\n        \"type\": \"http\",\n        \"scheme\": \"bearer\"\n      }\n    },\n    \"schemas\": {\n      \"Domain\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/MutableDomain\"\n          },\n          {\n            \"type\": \"object\",\n            \"required\": [\n              \"id\",\n              \"createdAt\"\n            ],\n            \"properties\": {\n              \"id\": {\n                \"type\": \"string\"\n              },\n              \"createdAt\": {\n                \"type\": \"string\",\n                \"description\": \"Client creation time\",\n                \"format\": \"date-time\"\n              },\n              \"updatedAt\": {\n                \"type\": \"string\",\n                \"description\": \"Client update time\",\n                \"format\": \"date-time\"\n              }\n            }\n          }\n        ]\n      },\n      \"MutableDomain\": {\n        \"required\": [\n          \"name\"\n        ],\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"public\": {\n            \"type\": \"boolean\"\n          },\n          \"owners\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Owner\"\n            }\n          }\n        }\n      },\n      \"SchemaBase\": {\n        \"required\": [\n          \"name\",\n          \"uri\",\n          \"payload\"\n        ],\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"value\": {\n            \"type\": \"object\",\n            \"example\": {\n              \"$id\": \"address\",\n              \"required\": [\n                \"street_address\",\n                \"city\",\n                \"state\"\n              ],\n              \"properties\": {\n                \"street_address\": {\n                  \"type\": \"string\"\n                },\n                \"city\": {\n                  \"type\": \"string\"\n                },\n                \"state\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"MutableSchema\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/SchemaBase\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"owners\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/Owner\"\n                }\n              }\n            }\n          }\n        ]\n      },\n      \"Schema\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/MutableSchema\"\n          },\n          {\n            \"type\": \"object\",\n            \"required\": [\n              \"id\",\n              \"createdAt\"\n            ],\n            \"properties\": {\n              \"id\": {\n                \"type\": \"string\"\n              },\n              \"uri\": {\n                \"type\": \"string\"\n              },\n              \"createdAt\": {\n                \"type\": \"string\",\n                \"description\": \"Client creation time\",\n                \"format\": \"date-time\"\n              },\n              \"updatedAt\": {\n                \"type\": \"string\",\n                \"description\": \"Client update time\",\n                \"format\": \"date-time\"\n              }\n            }\n          }\n        ]\n      },\n      \"Owner\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"entityId\",\n          \"entityType\"\n        ],\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"description\": \"Type of Owner entity, e.g. GROUP, TENANT, USER, etc.\"\n          }\n        }\n      },\n      \"Meta\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"page\": {\n            \"type\": \"integer\"\n          },\n          \"perPage\": {\n            \"type\": \"integer\"\n          },\n          \"total\": {\n            \"type\": \"integer\"\n          },\n          \"totalPages\": {\n            \"type\": \"integer\"\n          }\n        }\n      }\n    }\n  }\n}"
		}
	},
	"Error": "panic: runtime error: index out of range [0] with length 0"
}