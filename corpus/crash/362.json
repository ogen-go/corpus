{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Radarr/Radarr"
		},
		"file": {
			"name": "swagger.json",
			"path": "src/Radarr.Api.V3/swagger.json",
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"title\": \"Radarr\",\n    \"version\": \"3\",\n    \"description\": \"The way users should interact with Radarr programatically. To utilize any of these endpoints you will need a few pieces of information:\\n\\nex: localhost:7878/api/v3/movies?apiKey={key_here}\\n\\n* url: localhost, 10.1.0.1, 192.168.1.1, etc\\n* port: 7878 (unless you modify it)\\n* apiKey: Located in Settings \u003e General \u003e Security\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"{protocol}://{hostPath}/api/v3\",\n      \"variables\": {\n        \"protocol\": {\n          \"enum\": [\n            \"https\",\n            \"http\"\n          ],\n          \"default\": \"https\"\n        },\n        \"hostPath\": {\n          \"default\": \"localhost:7878\",\n          \"description\": \"Your Radarr Server URL\"\n        }\n      }\n    }\n  ],\n  \"paths\": {\n    \"/movie\": {\n      \"get\": {\n        \"tags\": [\n          \"Movie\"\n        ],\n        \"summary\": \"Get All Movies\",\n        \"description\": \"Returns all movies stored in the database\",\n        \"operationId\": \"getMovie\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"tmdbId\",\n            \"schema\": {\n              \"type\": \"integer\"\n            },\n            \"required\": false,\n            \"description\": \"TMDb id of the movie to get\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Movie\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"401\": {\n            \"description\": \"Invalid API Key\"\n          },\n          \"404\": {\n            \"description\": \"Movie not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          },\n          {\n            \"apikey\": []\n          }\n        ]\n      },\n      \"post\": {\n        \"tags\": [\n          \"Movie\"\n        ],\n        \"summary\": \"Add new movie\",\n        \"requestBody\": {\n          \"description\": \"Movie object that needs to be added\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Movie\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"integer\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Invalid API Key\"\n          },\n          \"405\": {\n            \"description\": \"Validation exception\"\n          }\n        },\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          }\n        ],\n        \"description\": \"Adds a movie to the database\"\n      },\n      \"put\": {\n        \"tags\": [\n          \"Movie\"\n        ],\n        \"summary\": \"Edit existing movie\",\n        \"requestBody\": {\n          \"description\": \"Movie object that needs to be edited\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Movie\"\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"moveFiles\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            },\n            \"required\": false,\n            \"description\": \"Have radarr move files when updating\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Movie\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Movie not found\"\n          },\n          \"405\": {\n            \"description\": \"Validation exception\"\n          }\n        },\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          }\n        ],\n        \"description\": \"Updates a movie in the database\"\n      }\n    },\n    \"/movie/{id}\": {\n      \"get\": {\n        \"tags\": [\n          \"Movie\"\n        ],\n        \"summary\": \"Get a Movie\",\n        \"description\": \"Returns a single movie\",\n        \"operationId\": \"getMovieById\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"Database Id of movie to return\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Movie\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"401\": {\n            \"description\": \"Invalid API Key\"\n          },\n          \"404\": {\n            \"description\": \"Movie not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          },\n          {\n            \"apikey\": []\n          }\n        ]\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Movie\"\n        ],\n        \"summary\": \"Delete a Movie\",\n        \"description\": \"Delete a single movie by database id\",\n        \"operationId\": \"deleteMovie\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"Database Id of movie to delete\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"addImportExclusion\",\n            \"in\": \"query\",\n            \"description\": \"Add deleted movies to List Exclusions\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"deleteFiles\",\n            \"in\": \"query\",\n            \"description\": \"Delete movie files when deleting movies\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"401\": {\n            \"description\": \"Invalid API Key\"\n          },\n          \"404\": {\n            \"description\": \"Movie not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          }\n        ]\n      }\n    },\n    \"/tag/detail/{id}\": {\n      \"get\": {\n        \"tags\": [\n          \"Tag\"\n        ],\n        \"summary\": \"Get a Tag Details\",\n        \"description\": \"Returns the id of all items in the database which use the specified tag\",\n        \"operationId\": \"\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TagDetail\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Invalid API Key\"\n          }\n        },\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          },\n          {\n            \"apikey\": []\n          }\n        ]\n      },\n      \"parameters\": [\n        {\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"description\": \"Database id of tag\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"integer\"\n          }\n        }\n      ]\n    },\n    \"/tag/detail\": {\n      \"get\": {\n        \"tags\": [\n          \"Tag\"\n        ],\n        \"summary\": \"Get All Tag Details\",\n        \"description\": \"Returns a list of tag detail objects for all tags in the database.\",\n        \"operationId\": \"\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/TagDetail\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Invalid API Key\"\n          }\n        },\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          },\n          {\n            \"apikey\": []\n          }\n        ]\n      },\n      \"parameters\": []\n    },\n    \"/tag/{id}\": {\n      \"get\": {\n        \"tags\": [\n          \"Tag\"\n        ],\n        \"summary\": \"Get a Tag\",\n        \"description\": \"Return a given tag and its label by the database id.\",\n        \"operationId\": \"\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Tag\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Invalid API Key\"\n          }\n        },\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          },\n          {\n            \"apikey\": []\n          }\n        ]\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Tag\"\n        ],\n        \"summary\": \"Delete a Tag\",\n        \"description\": \"Delete a tag\",\n        \"operationId\": \"\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\"\n          },\n          \"401\": {\n            \"description\": \"Invalid API Key\"\n          }\n        },\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          }\n        ]\n      },\n      \"parameters\": [\n        {\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"description\": \"ID of tag\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"integer\"\n          }\n        }\n      ],\n      \"put\": {\n        \"summary\": \"Edit a Tag\",\n        \"operationId\": \"put-tag-id\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          }\n        },\n        \"tags\": [\n          \"Tag\"\n        ],\n        \"description\": \"Edit a Tag by its database id\",\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          },\n          {\n            \"apikey\": []\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Tag\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/tag\": {\n      \"get\": {\n        \"summary\": \"Get All Tags\",\n        \"description\": \"Get all tags in the database\",\n        \"operationId\": \"\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Tag\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Invalid API Key\"\n          }\n        },\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          },\n          {\n            \"apikey\": []\n          }\n        ],\n        \"tags\": [\n          \"Tag\"\n        ]\n      },\n      \"post\": {\n        \"tags\": [\n          \"Tag\"\n        ],\n        \"summary\": \"Create a Tag\",\n        \"description\": \"Create a new tag that can be assigned to a movie, list, delay profile, notification, or restriction\",\n        \"operationId\": \"\",\n        \"requestBody\": {\n          \"description\": \"Tag object that needs to be added\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Tag\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\"\n          },\n          \"401\": {\n            \"description\": \"Invalid API Key\"\n          }\n        },\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          }\n        ]\n      },\n      \"parameters\": []\n    },\n    \"/diskspace\": {\n      \"get\": {\n        \"summary\": \"Get System Diskspace Information\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\"\n                  }\n                },\n                \"examples\": {\n                  \"Response\": {\n                    \"value\": [\n                      {\n                        \"path\": \"D:\\\\\",\n                        \"label\": \"DrivePool\",\n                        \"freeSpace\": 16187217043456,\n                        \"totalSpace\": 56009755148288\n                      },\n                      {\n                        \"path\": \"C:\\\\\",\n                        \"label\": \"Windows\",\n                        \"freeSpace\": 78659211264,\n                        \"totalSpace\": 239409819648\n                      }\n                    ]\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Invalid API Key\"\n          }\n        },\n        \"operationId\": \"get-diskspace\",\n        \"description\": \"Query Radarr for disk usage information\\n\\nLocation: System \u003e Status\",\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          },\n          {\n            \"apikey\": []\n          }\n        ],\n        \"tags\": [\n          \"Disk Space\"\n        ]\n      }\n    },\n    \"/system/status\": {\n      \"get\": {\n        \"summary\": \"Get Application Status\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"version\": {\n                      \"type\": \"string\"\n                    },\n                    \"buildTime\": {\n                      \"type\": \"string\"\n                    },\n                    \"isDebug\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"isProduction\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"isAdmin\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"isUserInteractive\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"startupPath\": {\n                      \"type\": \"string\"\n                    },\n                    \"appData\": {\n                      \"type\": \"string\"\n                    },\n                    \"osName\": {\n                      \"type\": \"string\"\n                    },\n                    \"osVersion\": {\n                      \"type\": \"string\"\n                    },\n                    \"isNetCore\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"isMono\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"isLinux\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"isOsx\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"isWindows\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"isDocker\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"mode\": {\n                      \"type\": \"string\"\n                    },\n                    \"branch\": {\n                      \"type\": \"string\"\n                    },\n                    \"authentication\": {\n                      \"type\": \"string\"\n                    },\n                    \"sqliteVersion\": {\n                      \"type\": \"string\"\n                    },\n                    \"migrationVersion\": {\n                      \"type\": \"integer\"\n                    },\n                    \"urlBase\": {\n                      \"type\": \"string\"\n                    },\n                    \"runtimeVersion\": {\n                      \"type\": \"string\"\n                    },\n                    \"runtimeName\": {\n                      \"type\": \"string\"\n                    },\n                    \"startTime\": {\n                      \"type\": \"string\"\n                    },\n                    \"packageUpdateMechanism\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"Response\": {\n                    \"value\": {\n                      \"version\": \"10.0.0.34882\",\n                      \"buildTime\": \"2020-09-01T23:23:23.9621974Z\",\n                      \"isDebug\": true,\n                      \"isProduction\": false,\n                      \"isAdmin\": false,\n                      \"isUserInteractive\": true,\n                      \"startupPath\": \"C:\\\\ProgramData\\\\Radarr\",\n                      \"appData\": \"C:\\\\ProgramData\\\\Radarr\",\n                      \"osName\": \"Windows\",\n                      \"osVersion\": \"10.0.18363.0\",\n                      \"isNetCore\": true,\n                      \"isMono\": false,\n                      \"isLinux\": false,\n                      \"isOsx\": false,\n                      \"isWindows\": true,\n                      \"isDocker\": false,\n                      \"mode\": \"console\",\n                      \"branch\": \"nightly\",\n                      \"authentication\": \"none\",\n                      \"sqliteVersion\": \"3.32.1\",\n                      \"migrationVersion\": 180,\n                      \"urlBase\": \"\",\n                      \"runtimeVersion\": \"3.1.10\",\n                      \"runtimeName\": \"netCore\",\n                      \"startTime\": \"2020-09-01T23:50:20.2415965Z\",\n                      \"packageUpdateMechanism\": \"builtIn\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Invalid API Key\"\n          }\n        },\n        \"operationId\": \"get-status\",\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          },\n          {\n            \"apikey\": []\n          }\n        ],\n        \"description\": \"Find out information such as OS, version, paths used, etc\",\n        \"parameters\": [],\n        \"tags\": [\n          \"System\"\n        ]\n      },\n      \"parameters\": []\n    },\n    \"/health\": {\n      \"get\": {\n        \"summary\": \"Get Failed Health Checks\",\n        \"tags\": [\n          \"Health\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\"\n                  }\n                },\n                \"examples\": {\n                  \"Response\": {\n                    \"value\": [\n                      {\n                        \"source\": \"ImportMechanismCheck\",\n                        \"type\": \"warning\",\n                        \"message\": \"Enable Completed Download Handling\",\n                        \"wikiUrl\": \"https://wiki.servarr.com/radarr/system#completed-failed-download-handling\"\n                      },\n                      {\n                        \"source\": \"DownloadClientCheck\",\n                        \"type\": \"error\",\n                        \"message\": \"Unable to communicate with qBittorrent. Failed to connect to qBittorrent, check your settings.\",\n                        \"wikiUrl\": \"https://wiki.servarr.com/radarr/system#download-clients\"\n                      }\n                    ]\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Invalid API Key\"\n          }\n        },\n        \"operationId\": \"get-health\",\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          },\n          {\n            \"apikey\": []\n          }\n        ],\n        \"description\": \"Query radarr for health information\\n\\nLocation: System \u003e Status\"\n      }\n    },\n    \"/command\": {\n      \"post\": {\n        \"summary\": \"Post a Command\",\n        \"tags\": [\n          \"Command\"\n        ],\n        \"operationId\": \"post-command\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\"\n          },\n          \"201\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"required\": [\n                    \"name\"\n                  ]\n                },\n                \"examples\": {\n                  \"Example\": {\n                    \"value\": {\n                      \"name\": \"Backup\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Invalid API Key\"\n          }\n        },\n        \"description\": \"Pushes commands to Radarr using a key:value pair. The main key is \\\"name\\\" and below are acceptable values but it can also accept other key:value pairs (listed under each command):\\n\\n* ApplicationUpdate - Trigger an update of Radarr\\n* Backup - Trigger a backup routine\\n* CheckHealth - Trigger a system health check\\n* ClearBlocklist - Triggers the removal of all blocklisted movies\\n* CleanUpRecycleBin - Trigger a recycle bin cleanup check\\n* DeleteLogFiles - Triggers the removal of all Info/Debug/Trace log files\\n* DeleteUpdateLogFiles - Triggers the removal of all Update log files\\n* DownloadedMoviesScan - Triggers the scan of downloaded movies\\n* MissingMoviesSearch - Triggers a search of all missing movies\\n* RefreshMonitoredDownloads - Triggers the scan of monitored downloads\\n* RefreshMovie - Trigger a refresh / scan of library\\n    * movieIds:int[] - Specify a list of ids (comma separated) for individual movies to refresh\",\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          }\n        ],\n        \"parameters\": []\n      }\n    },\n    \"/update\": {\n      \"get\": {\n        \"summary\": \"Get Recent Updates\",\n        \"tags\": [\n          \"Update\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"version\": {\n                      \"type\": \"string\"\n                    },\n                    \"branch\": {\n                      \"type\": \"string\"\n                    },\n                    \"releaseDate\": {\n                      \"type\": \"string\"\n                    },\n                    \"fileName\": {\n                      \"type\": \"string\"\n                    },\n                    \"url\": {\n                      \"type\": \"string\"\n                    },\n                    \"installed\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"installable\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"latest\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"changes\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"new\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"string\"\n                          }\n                        },\n                        \"fixed\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"string\"\n                          }\n                        }\n                      }\n                    },\n                    \"hash\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"Example\": {\n                    \"value\": {\n                      \"version\": \"3.0.0.3553\",\n                      \"branch\": \"nightly\",\n                      \"releaseDate\": \"2020-09-02T05:36:13.047313Z\",\n                      \"fileName\": \"Radarr.nightly.3.0.0.3553.windows-core-x64.zip\",\n                      \"url\": \"https://dev.azure.com/Radarr/Radarr/_apis/build/builds/1896/artifacts?artifactName=Packages\u0026fileId=A710686A9CB6848E73C3DDCA5F2B0D83C6189546E66DD3EF2D0D30B20735F6E802\u0026fileName=Radarr.aphrodite.3.0.0.3553.windows-core-x64.zip\u0026api-version=5.1\",\n                      \"installed\": false,\n                      \"installable\": false,\n                      \"latest\": false,\n                      \"changes\": {\n                        \"new\": [],\n                        \"fixed\": [\n                          \"Importing completed downloads from NZBGet with post processing script failing\",\n                          \"Importing of completed download when not a child of the download client output path\",\n                          \"Getting parent of UNC paths\"\n                        ]\n                      },\n                      \"hash\": \"a95c855cbc3ee253fd0b74181e866106daffc7b71b4a9e2d57cfbeede4333aee\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Invalid API Key\"\n          }\n        },\n        \"operationId\": \"get-update\",\n        \"description\": \"Will return a list of recent updates to Radarr\\n\\nLocation: System \u003e Updates\",\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          },\n          {\n            \"apikey\": []\n          }\n        ]\n      }\n    },\n    \"/qualityProfile\": {\n      \"get\": {\n        \"summary\": \"Get All Quality Profiles\",\n        \"tags\": [\n          \"Quality\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/QualityProfile\"\n                  }\n                },\n                \"examples\": {}\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Invalid API Key\"\n          }\n        },\n        \"operationId\": \"get-add-discover\",\n        \"description\": \"Query Radarr for quality profiles \",\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          },\n          {\n            \"apikey\": []\n          }\n        ]\n      },\n      \"parameters\": []\n    },\n    \"/calendar\": {\n      \"get\": {\n        \"summary\": \"Get Calendar Events\",\n        \"tags\": [\n          \"Calendar\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\"\n          },\n          \"401\": {\n            \"description\": \"Invalid API Key\"\n          }\n        },\n        \"operationId\": \"get-calendar\",\n        \"description\": \"Get a list of movies based on calendar parameters\",\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          },\n          {\n            \"apikey\": []\n          }\n        ],\n        \"parameters\": [\n          {\n            \"schema\": {\n              \"type\": \"boolean\"\n            },\n            \"in\": \"query\",\n            \"name\": \"unmonitored\",\n            \"required\": true\n          },\n          {\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"in\": \"query\",\n            \"name\": \"start\",\n            \"description\": \"ISO 8601\",\n            \"required\": true\n          },\n          {\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"in\": \"query\",\n            \"name\": \"end\",\n            \"description\": \"ISO 8601\",\n            \"required\": true\n          }\n        ]\n      }\n    },\n    \"/queue\": {\n      \"get\": {\n        \"summary\": \"Get Activity Queue\",\n        \"tags\": [\n          \"Queue\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\"\n          },\n          \"401\": {\n            \"description\": \"Invalid API Key\"\n          }\n        },\n        \"operationId\": \"get-queue\",\n        \"description\": \"Return a json object list of items in the queue\",\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          },\n          {\n            \"apikey\": []\n          }\n        ],\n        \"parameters\": [\n          {\n            \"schema\": {\n              \"type\": \"integer\"\n            },\n            \"in\": \"query\",\n            \"name\": \"page\",\n            \"description\": \"1\",\n            \"required\": true\n          },\n          {\n            \"schema\": {\n              \"type\": \"integer\"\n            },\n            \"in\": \"query\",\n            \"name\": \"pageSize\",\n            \"description\": \"20\",\n            \"required\": true\n          },\n          {\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"in\": \"query\",\n            \"name\": \"sortDirection\",\n            \"description\": \"ascending\",\n            \"required\": true\n          },\n          {\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"in\": \"query\",\n            \"name\": \"sortKey\",\n            \"description\": \"timeLeft\",\n            \"required\": true\n          },\n          {\n            \"schema\": {\n              \"type\": \"boolean\"\n            },\n            \"in\": \"query\",\n            \"name\": \"includeUnknownMovieItems\",\n            \"description\": \"true\",\n            \"required\": true\n          }\n        ]\n      }\n    },\n    \"/history\": {\n      \"get\": {\n        \"summary\": \"Get History\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"page\": {\n                      \"type\": \"integer\"\n                    },\n                    \"pageSize\": {\n                      \"type\": \"integer\"\n                    },\n                    \"sortDirection\": {\n                      \"type\": \"string\"\n                    },\n                    \"totalRecords\": {\n                      \"type\": \"integer\"\n                    },\n                    \"records\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/History\"\n                      }\n                    }\n                  }\n                },\n                \"examples\": {}\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Invalid API Key\"\n          }\n        },\n        \"operationId\": \"get-history\",\n        \"description\": \"Return a json object list of items in your history\",\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          },\n          {\n            \"apikey\": []\n          }\n        ],\n        \"parameters\": [\n          {\n            \"schema\": {\n              \"type\": \"integer\"\n            },\n            \"in\": \"query\",\n            \"name\": \"page\",\n            \"description\": \"1\",\n            \"required\": true\n          },\n          {\n            \"schema\": {\n              \"type\": \"integer\"\n            },\n            \"in\": \"query\",\n            \"name\": \"pageSize\",\n            \"description\": \"20\",\n            \"required\": true\n          },\n          {\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"in\": \"query\",\n            \"name\": \"sortDirection\",\n            \"description\": \"descending\",\n            \"required\": true\n          },\n          {\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"in\": \"query\",\n            \"name\": \"sortKey\",\n            \"description\": \"date\",\n            \"required\": true\n          }\n        ],\n        \"tags\": [\n          \"History\"\n        ]\n      }\n    },\n    \"/customfilter\": {\n      \"get\": {\n        \"summary\": \"Get UI Custom Filters\",\n        \"tags\": [\n          \"Custom Filters\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"description\": \"\",\n                  \"minItems\": 1,\n                  \"uniqueItems\": true,\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"type\": {\n                        \"type\": \"string\",\n                        \"minLength\": 1\n                      },\n                      \"label\": {\n                        \"type\": \"string\",\n                        \"minLength\": 1\n                      },\n                      \"filters\": {\n                        \"type\": \"array\",\n                        \"uniqueItems\": true,\n                        \"minItems\": 1,\n                        \"items\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"key\": {\n                              \"type\": \"string\",\n                              \"minLength\": 1\n                            },\n                            \"value\": {\n                              \"type\": \"array\",\n                              \"items\": {\n                                \"type\": \"string\"\n                              }\n                            },\n                            \"type\": {\n                              \"type\": \"string\"\n                            }\n                          },\n                          \"required\": [\n                            \"key\",\n                            \"type\"\n                          ]\n                        }\n                      },\n                      \"id\": {\n                        \"type\": \"integer\"\n                      }\n                    },\n                    \"required\": [\n                      \"type\",\n                      \"label\",\n                      \"filters\",\n                      \"id\"\n                    ]\n                  }\n                },\n                \"examples\": {\n                  \"Example\": {\n                    \"value\": [\n                      {\n                        \"type\": \"movieIndex\",\n                        \"label\": \"Rated G\",\n                        \"filters\": [\n                          {\n                            \"key\": \"certification\",\n                            \"value\": [\n                              \"G\"\n                            ],\n                            \"type\": \"equal\"\n                          }\n                        ],\n                        \"id\": 10\n                      }\n                    ]\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Invalid API Key\"\n          }\n        },\n        \"operationId\": \"get-customFilter\",\n        \"description\": \"Query Radarr for custom filters\",\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          },\n          {\n            \"apikey\": []\n          }\n        ]\n      },\n      \"parameters\": []\n    },\n    \"/importlist\": {\n      \"get\": {\n        \"summary\": \"Get All Import Lists\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ImportList\"\n                  }\n                },\n                \"examples\": {\n                  \"Example\": {\n                    \"value\": [\n                      {\n                        \"enabled\": true,\n                        \"enableAuto\": true,\n                        \"shouldMonitor\": true,\n                        \"rootFolderPath\": \"D:\\\\Plex\\\\Movies\\\\\",\n                        \"qualityProfileId\": 4,\n                        \"searchOnAdd\": false,\n                        \"minimumAvailability\": \"announced\",\n                        \"listType\": \"other\",\n                        \"listOrder\": 3,\n                        \"name\": \"IMDb List\",\n                        \"fields\": [\n                          {\n                            \"order\": 0,\n                            \"name\": \"listId\",\n                            \"label\": \"List/User ID\",\n                            \"helpText\": \"IMDb list ID (e.g ls12345678), IMDb user ID (e.g. ur12345678), 'top250' or 'popular'\",\n                            \"value\": \"ur109135197\",\n                            \"type\": \"textbox\",\n                            \"advanced\": false\n                          }\n                        ],\n                        \"implementationName\": \"IMDb Lists\",\n                        \"implementation\": \"IMDbListImport\",\n                        \"configContract\": \"IMDbListSettings\",\n                        \"infoLink\": \"https://wiki.servarr.com/radarr/settings#lists\",\n                        \"tags\": [\n                          2\n                        ],\n                        \"id\": 1\n                      }\n                    ]\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Invalid API Key\"\n          }\n        },\n        \"operationId\": \"get-importList\",\n        \"description\": \"Query Radarr for all lists\",\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          },\n          {\n            \"apikey\": []\n          }\n        ],\n        \"tags\": [\n          \"Import Lists\"\n        ]\n      },\n      \"parameters\": []\n    },\n    \"/config/ui\": {\n      \"get\": {\n        \"summary\": \"Get UI Settings\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"firstDayOfWeek\": {\n                      \"type\": \"integer\"\n                    },\n                    \"calendarWeekColumnHeader\": {\n                      \"type\": \"string\"\n                    },\n                    \"movieRuntimeFormat\": {\n                      \"type\": \"string\"\n                    },\n                    \"shortDateFormat\": {\n                      \"type\": \"string\"\n                    },\n                    \"longDateFormat\": {\n                      \"type\": \"string\"\n                    },\n                    \"timeFormat\": {\n                      \"type\": \"string\"\n                    },\n                    \"showRelativeDates\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"enableColorImpairedMode\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"movieInfoLanguage\": {\n                      \"type\": \"integer\"\n                    },\n                    \"id\": {\n                      \"type\": \"integer\"\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"Example\": {\n                    \"value\": {\n                      \"firstDayOfWeek\": 0,\n                      \"calendarWeekColumnHeader\": \"ddd M/D\",\n                      \"movieRuntimeFormat\": \"hoursMinutes\",\n                      \"shortDateFormat\": \"MMM D YYYY\",\n                      \"longDateFormat\": \"dddd, MMMM D YYYY\",\n                      \"timeFormat\": \"h(:mm)a\",\n                      \"showRelativeDates\": true,\n                      \"enableColorImpairedMode\": false,\n                      \"movieInfoLanguage\": 1,\n                      \"id\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Invalid API Key\"\n          }\n        },\n        \"operationId\": \"get-ui\",\n        \"description\": \"Query Radarr for UI settings\",\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          },\n          {\n            \"apikey\": []\n          }\n        ],\n        \"tags\": [\n          \"Settings\"\n        ]\n      },\n      \"parameters\": [],\n      \"put\": {\n        \"summary\": \"Edit UI Settings\",\n        \"operationId\": \"putconfig-ui\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {}\n                }\n              }\n            }\n          }\n        },\n        \"description\": \"Edit one or many UI settings and save to to the database\",\n        \"tags\": [\n          \"Settings\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"description\": \"\",\n                \"type\": \"object\",\n                \"properties\": {\n                  \"firstDayOfWeek\": {\n                    \"type\": \"integer\"\n                  },\n                  \"calendarWeekColumnHeader\": {\n                    \"type\": \"string\",\n                    \"minLength\": 1\n                  },\n                  \"movieRuntimeFormat\": {\n                    \"type\": \"string\",\n                    \"minLength\": 1,\n                    \"enum\": [\n                      \"hoursMinutes\",\n                      \"minutes\"\n                    ]\n                  },\n                  \"shortDateFormat\": {\n                    \"type\": \"string\",\n                    \"minLength\": 1\n                  },\n                  \"longDateFormat\": {\n                    \"type\": \"string\",\n                    \"minLength\": 1\n                  },\n                  \"timeFormat\": {\n                    \"type\": \"string\",\n                    \"minLength\": 1\n                  },\n                  \"showRelativeDates\": {\n                    \"type\": \"boolean\"\n                  },\n                  \"enableColorImpairedMode\": {\n                    \"type\": \"boolean\"\n                  },\n                  \"movieInfoLanguage\": {\n                    \"type\": \"number\"\n                  },\n                  \"id\": {\n                    \"type\": \"integer\"\n                  }\n                },\n                \"required\": [\n                  \"id\"\n                ]\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          },\n          {\n            \"apikey\": []\n          }\n        ]\n      }\n    },\n    \"/remotePathMapping\": {\n      \"get\": {\n        \"summary\": \"Get All Remote Path Mappings\",\n        \"tags\": [\n          \"Remote Path Mapping\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"description\": \"\",\n                  \"minItems\": 1,\n                  \"uniqueItems\": true,\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"host\": {\n                        \"type\": \"string\",\n                        \"minLength\": 1\n                      },\n                      \"remotePath\": {\n                        \"type\": \"string\",\n                        \"minLength\": 1\n                      },\n                      \"localPath\": {\n                        \"type\": \"string\",\n                        \"minLength\": 1\n                      },\n                      \"id\": {\n                        \"type\": \"integer\"\n                      }\n                    },\n                    \"required\": [\n                      \"host\",\n                      \"remotePath\",\n                      \"localPath\",\n                      \"id\"\n                    ]\n                  }\n                },\n                \"examples\": {\n                  \"Example\": {\n                    \"value\": [\n                      {\n                        \"host\": \"localhost\",\n                        \"remotePath\": \"B:\\\\\",\n                        \"localPath\": \"A:\\\\Movies\\\\\",\n                        \"id\": 1\n                      },\n                      {\n                        \"host\": \"localhost\",\n                        \"remotePath\": \"C:\\\\\",\n                        \"localPath\": \"A:\\\\Movies\\\\\",\n                        \"id\": 2\n                      }\n                    ]\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Invalid API Key\"\n          }\n        },\n        \"operationId\": \"get-remotePathMapping\",\n        \"description\": \"Get a list of remote paths being mapped and used by Radarr\",\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          },\n          {\n            \"apikey\": []\n          }\n        ]\n      }\n    },\n    \"/downloadclient\": {\n      \"get\": {\n        \"summary\": \"Get All Download Clients\",\n        \"tags\": [\n          \"Download Client\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/DownloadClient\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Invalid API Key\"\n          }\n        },\n        \"operationId\": \"get-downloadClient\",\n        \"description\": \"Get a list of all the download clients added in Radarr\",\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          },\n          {\n            \"apikey\": []\n          }\n        ]\n      },\n      \"parameters\": []\n    },\n    \"/blocklist\": {\n      \"get\": {\n        \"summary\": \"Get Blocklisted Releases\",\n        \"tags\": [\n          \"Blocklist\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Invalid API Key\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"page\": {\n                      \"type\": \"integer\",\n                      \"description\": \"1\"\n                    },\n                    \"pageSize\": {\n                      \"type\": \"integer\",\n                      \"description\": \"20\"\n                    },\n                    \"sortDirection\": {\n                      \"type\": \"string\",\n                      \"description\": \"descending\"\n                    },\n                    \"sortKey\": {\n                      \"type\": \"string\",\n                      \"description\": \"date\"\n                    },\n                    \"totalRecords\": {\n                      \"type\": \"integer\"\n                    },\n                    \"records\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Blocklist\"\n                      }\n                    }\n                  },\n                  \"required\": [\n                    \"page\",\n                    \"pageSize\",\n                    \"sortDirection\",\n                    \"sortKey\"\n                  ]\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Invalid API Key\"\n          }\n        },\n        \"operationId\": \"get-blockList\",\n        \"description\": \"Returns blocklisted releases\",\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          }\n        ],\n        \"parameters\": [\n          {\n            \"schema\": {\n              \"type\": \"integer\"\n            },\n            \"in\": \"query\",\n            \"name\": \"page\",\n            \"description\": \"1\",\n            \"required\": true\n          },\n          {\n            \"schema\": {\n              \"type\": \"integer\"\n            },\n            \"in\": \"query\",\n            \"name\": \"pageSize\",\n            \"description\": \"20\",\n            \"required\": true\n          },\n          {\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"in\": \"query\",\n            \"name\": \"sortDirection\",\n            \"description\": \"descending\",\n            \"required\": true\n          },\n          {\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"in\": \"query\",\n            \"name\": \"sortKey\",\n            \"description\": \"date\",\n            \"required\": true\n          }\n        ]\n      },\n      \"delete\": {\n        \"summary\": \"Delete a Blocklisted Release\",\n        \"operationId\": \"delete-blockList\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\"\n          },\n          \"401\": {\n            \"description\": \"Invalid API Key\"\n          }\n        },\n        \"description\": \"Removes a specific release (the id provided) from the blocklist\",\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          },\n          {\n            \"apikey\": []\n          }\n        ],\n        \"parameters\": [\n          {\n            \"schema\": {\n              \"type\": \"integer\"\n            },\n            \"in\": \"query\",\n            \"name\": \"id\",\n            \"required\": true\n          }\n        ],\n        \"tags\": [\n          \"Blocklist\"\n        ]\n      },\n      \"parameters\": []\n    },\n    \"/blocklist/movie\": {\n      \"get\": {\n        \"summary\": \"Get Blocklisted Releases for a Movie\",\n        \"tags\": [\n          \"Blocklist\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Blocklist\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          }\n        },\n        \"operationId\": \"get-blocklist-movie\",\n        \"description\": \"Retrieves blocklisted releases that are tied to a given movie in the database\",\n        \"parameters\": [\n          {\n            \"schema\": {\n              \"type\": \"integer\"\n            },\n            \"in\": \"query\",\n            \"name\": \"movieId\",\n            \"description\": \"Database Id for the movie \",\n            \"required\": true\n          }\n        ],\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          },\n          {\n            \"apikey\": []\n          }\n        ]\n      }\n    },\n    \"/blocklist/bulk\": {\n      \"delete\": {\n        \"summary\": \"Delete Blocklisted Releases\",\n        \"operationId\": \"delete-blocklist-bulk\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          }\n        },\n        \"description\": \"Delete blocklisted releases in bulk\",\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"description\": \"\",\n                \"type\": \"object\",\n                \"properties\": {\n                  \"ids\": {\n                    \"type\": \"array\",\n                    \"description\": \"Database ids of the blocklist items to delete\",\n                    \"items\": {\n                      \"type\": \"integer\"\n                    }\n                  }\n                },\n                \"required\": [\n                  \"ids\"\n                ]\n              },\n              \"examples\": {}\n            }\n          }\n        },\n        \"tags\": [\n          \"Blocklist\"\n        ]\n      }\n    },\n    \"/indexer\": {\n      \"get\": {\n        \"summary\": \"Get All Indexers\",\n        \"tags\": [\n          \"Indexer\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"description\": \"\",\n                  \"minItems\": 1,\n                  \"uniqueItems\": true,\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Indexer\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"description\": \"\",\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"minLength\": 1\n                    }\n                  },\n                  \"required\": [\n                    \"error\"\n                  ]\n                }\n              }\n            }\n          }\n        },\n        \"operationId\": \"get-indexer\",\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          },\n          {\n            \"apikey\": []\n          }\n        ],\n        \"description\": \"Get all indexers\"\n      }\n    },\n    \"/indexer/{id}\": {\n      \"parameters\": [\n        {\n          \"schema\": {\n            \"type\": \"integer\"\n          },\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"required\": true,\n          \"description\": \"Database Id of the indexer\"\n        }\n      ],\n      \"get\": {\n        \"summary\": \"Get an Indexer\",\n        \"tags\": [\n          \"Indexer\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Indexer\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          }\n        },\n        \"operationId\": \"get-indexer-id\",\n        \"description\": \"Get Indexer by its database Id\",\n        \"parameters\": [],\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          },\n          {\n            \"apikey\": []\n          }\n        ]\n      },\n      \"put\": {\n        \"summary\": \"Edit an Indexer\",\n        \"operationId\": \"put-indexer-id\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          }\n        },\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          },\n          {\n            \"apikey\": []\n          }\n        ],\n        \"tags\": [\n          \"Indexer\"\n        ]\n      },\n      \"delete\": {\n        \"summary\": \"Delete an Indexer\",\n        \"operationId\": \"delete-indexer-id\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          }\n        },\n        \"description\": \"Delete Indexer by database id\",\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          },\n          {\n            \"apikey\": []\n          }\n        ],\n        \"tags\": [\n          \"Indexer\"\n        ]\n      }\n    },\n    \"/downloadclient/{id}\": {\n      \"parameters\": [\n        {\n          \"schema\": {\n            \"type\": \"integer\"\n          },\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"required\": true,\n          \"description\": \"Database id of the download client\"\n        }\n      ],\n      \"get\": {\n        \"summary\": \"Get a Download Client\",\n        \"tags\": [\n          \"Download Client\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/DownloadClient\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          }\n        },\n        \"operationId\": \"get-downloadclient-id\",\n        \"description\": \"Get a single download client by database id\",\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          },\n          {\n            \"apikey\": []\n          }\n        ]\n      },\n      \"delete\": {\n        \"summary\": \"Delete a Download Client\",\n        \"operationId\": \"delete-downloadclient-id\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          }\n        },\n        \"description\": \"Delete a download client by database id\",\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          }\n        ],\n        \"tags\": [\n          \"Download Client\"\n        ]\n      },\n      \"put\": {\n        \"summary\": \"Edit a Download Client\",\n        \"operationId\": \"put-downloadclient-id\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          }\n        },\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          },\n          {\n            \"apikey\": []\n          }\n        ],\n        \"description\": \"Edit a downloadclient by database id\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/DownloadClient\"\n              }\n            }\n          },\n          \"description\": \"\"\n        },\n        \"tags\": [\n          \"Download Client\"\n        ]\n      }\n    },\n    \"/notification\": {\n      \"get\": {\n        \"summary\": \"Get All Notifications\",\n        \"tags\": [\n          \"Notification\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Notification\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          }\n        },\n        \"operationId\": \"get-notifications\",\n        \"description\": \"Get all notifications\",\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          },\n          {\n            \"apikey\": []\n          }\n        ]\n      },\n      \"parameters\": []\n    },\n    \"/notification/{id}\": {\n      \"parameters\": [\n        {\n          \"schema\": {\n            \"type\": \"integer\"\n          },\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"required\": true,\n          \"description\": \"Database id of notification\"\n        }\n      ],\n      \"get\": {\n        \"summary\": \"Get a Notification\",\n        \"tags\": [\n          \"Notification\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Notification\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          }\n        },\n        \"operationId\": \"get-notification-id\",\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          },\n          {\n            \"apikey\": []\n          }\n        ],\n        \"description\": \"Get Notification by database id\"\n      },\n      \"delete\": {\n        \"summary\": \"Delete a Notification\",\n        \"operationId\": \"delete-notification-id\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          }\n        },\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          },\n          {\n            \"apikey\": []\n          }\n        ],\n        \"description\": \"Delete Notification by database id\",\n        \"tags\": [\n          \"Notification\"\n        ]\n      },\n      \"put\": {\n        \"summary\": \"Edit a Notification\",\n        \"operationId\": \"put-notification-id\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          }\n        },\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          },\n          {\n            \"apikey\": []\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Notification\"\n              }\n            }\n          }\n        },\n        \"description\": \"Edit Notification by database id\",\n        \"tags\": [\n          \"Notification\"\n        ]\n      }\n    },\n    \"/metadata\": {\n      \"get\": {\n        \"summary\": \"Get All Metadata\",\n        \"tags\": [\n          \"Metadata\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Metadata\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          }\n        },\n        \"operationId\": \"get-metadata\",\n        \"description\": \"Get all metadata consumer settings\",\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          },\n          {\n            \"apikey\": []\n          }\n        ]\n      }\n    },\n    \"/movie/lookup\": {\n      \"get\": {\n        \"summary\": \"Lookup a Movie to Add\",\n        \"tags\": [\n          \"Movie\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Movie\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          }\n        },\n        \"operationId\": \"get-movie-lookup\",\n        \"description\": \"Search for a movie to add to the database (Uses TMDB for search results)\",\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          },\n          {\n            \"apikey\": []\n          }\n        ],\n        \"parameters\": [\n          {\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"in\": \"query\",\n            \"name\": \"term\",\n            \"description\": \"search term to use for lookup\",\n            \"required\": true\n          }\n        ]\n      }\n    },\n    \"/history/movie\": {\n      \"get\": {\n        \"summary\": \"Get History for a Movie\",\n        \"tags\": [\n          \"History\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/History\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          }\n        },\n        \"operationId\": \"get-history-movie\",\n        \"description\": \"Get history for a given movie in database by its database id\",\n        \"parameters\": [\n          {\n            \"schema\": {\n              \"type\": \"integer\"\n            },\n            \"in\": \"query\",\n            \"name\": \"movieId\",\n            \"description\": \"database id of movie\",\n            \"required\": true\n          },\n          {\n            \"schema\": {\n              \"type\": \"integer\"\n            },\n            \"in\": \"query\",\n            \"name\": \"eventType\",\n            \"description\": \"history event type to retrieve\"\n          }\n        ],\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          },\n          {\n            \"apikey\": []\n          }\n        ]\n      }\n    },\n    \"/movie/editor\": {\n      \"put\": {\n        \"summary\": \"Edit Multiple Movies\",\n        \"operationId\": \"put-movie-editor\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Movie\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          }\n        },\n        \"description\": \"Editor endpoint is used by the movie editor in Radarr. The Edit operation allows to edit properties of multiple movies at once\",\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          },\n          {\n            \"apikey\": []\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"movieIds\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"monitored\": {\n                    \"type\": \"boolean\"\n                  },\n                  \"qualityProfileId\": {\n                    \"type\": \"integer\"\n                  },\n                  \"minimumAvailability\": {\n                    \"type\": \"string\"\n                  },\n                  \"rootFolderPath\": {\n                    \"type\": \"string\"\n                  },\n                  \"tags\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"applyTags\": {\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"add\",\n                      \"remove\",\n                      \"replace\"\n                    ]\n                  },\n                  \"moveFiles\": {\n                    \"type\": \"boolean\"\n                  }\n                },\n                \"required\": [\n                  \"movieIds\"\n                ]\n              }\n            }\n          }\n        },\n        \"tags\": [\n          \"Movie\"\n        ]\n      },\n      \"delete\": {\n        \"summary\": \"Delete Multiple Movies\",\n        \"operationId\": \"delete-movie-editor\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          }\n        },\n        \"description\": \"Editor endpoint is used by the movie editor in Radarr. The Delete operation allows mass deletion of movies (and optionally files).\",\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          },\n          {\n            \"apikey\": []\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"movieIds\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"deleteFIles\": {\n                    \"type\": \"boolean\"\n                  },\n                  \"addImportExclusion\": {\n                    \"type\": \"boolean\"\n                  }\n                },\n                \"required\": [\n                  \"movieIds\",\n                  \"deleteFIles\",\n                  \"addImportExclusion\"\n                ]\n              }\n            }\n          }\n        },\n        \"tags\": [\n          \"Movie\"\n        ]\n      }\n    },\n    \"/movie/import\": {\n      \"post\": {\n        \"summary\": \"Add Movies From Folders\",\n        \"operationId\": \"post-movie-import\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Movie\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          }\n        },\n        \"description\": \"The movie import endpoint is used by the bulk import view in Radarr UI. It allows movies to be bulk added to the Radarr database.\",\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          },\n          {\n            \"apikey\": []\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/Movie\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\n          \"Movie\"\n        ]\n      }\n    },\n    \"/moviefile\": {\n      \"get\": {\n        \"summary\": \"Get Multiple MovieFiles\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/MovieFile\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          }\n        },\n        \"operationId\": \"get-moviefile\",\n        \"description\": \"The moviefile endpoint allows for retrieval of all moviefile by a list of ids or by the associated movieid. Either the moviefileids OR movieid query parameter must be passed.\",\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          },\n          {\n            \"apikey\": []\n          }\n        ],\n        \"parameters\": [\n          {\n            \"schema\": {\n              \"type\": \"array\"\n            },\n            \"in\": \"query\",\n            \"name\": \"moviefileids\",\n            \"description\": \"Comma separated list of moviefile ids\",\n            \"required\": true\n          },\n          {\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"in\": \"query\",\n            \"name\": \"movieid\",\n            \"description\": \"Database id of movie to retrieve files for\",\n            \"required\": true\n          }\n        ],\n        \"tags\": [\n          \"MovieFile\"\n        ]\n      }\n    },\n    \"/moviefile/{id}\": {\n      \"parameters\": [\n        {\n          \"schema\": {\n            \"type\": \"string\"\n          },\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"required\": true\n        }\n      ],\n      \"get\": {\n        \"summary\": \"Get a MovieFile\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/MovieFile\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          }\n        },\n        \"operationId\": \"get-moviefile-id\",\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          },\n          {\n            \"apikey\": []\n          }\n        ],\n        \"description\": \"Get a movie file object by its database id.\",\n        \"tags\": [\n          \"MovieFile\"\n        ]\n      },\n      \"delete\": {\n        \"summary\": \"Delete a Movie\",\n        \"operationId\": \"delete-moviefile-id\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          }\n        },\n        \"description\": \"Allows for deletion of a moviefile by its database id.\",\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          },\n          {\n            \"apikey\": []\n          }\n        ],\n        \"tags\": [\n          \"MovieFile\"\n        ]\n      }\n    },\n    \"/importlist/{id}\": {\n      \"parameters\": [\n        {\n          \"schema\": {\n            \"type\": \"string\"\n          },\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"required\": true\n        }\n      ],\n      \"get\": {\n        \"summary\": \"Get an Import List\",\n        \"tags\": [\n          \"Import Lists\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ImportList\"\n                }\n              }\n            }\n          }\n        },\n        \"operationId\": \"get-importlist-id\",\n        \"description\": \"\",\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          },\n          {\n            \"apikey\": []\n          }\n        ]\n      },\n      \"put\": {\n        \"summary\": \"Edit an Import List\",\n        \"operationId\": \"put-importlist-id\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          }\n        },\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          },\n          {\n            \"apikey\": []\n          }\n        ],\n        \"tags\": [\n          \"Import Lists\"\n        ]\n      },\n      \"delete\": {\n        \"summary\": \"Delete an Import List\",\n        \"operationId\": \"delete-importlist-id\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          }\n        },\n        \"description\": \"\",\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          },\n          {\n            \"apikey\": []\n          }\n        ],\n        \"tags\": [\n          \"Import Lists\"\n        ]\n      }\n    },\n    \"/config/host\": {\n      \"get\": {\n        \"summary\": \"Get Host Settings\",\n        \"tags\": [\n          \"Settings\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"description\": \"\",\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"bindAddress\": {\n                      \"type\": \"string\",\n                      \"minLength\": 1\n                    },\n                    \"port\": {\n                      \"type\": \"integer\"\n                    },\n                    \"sslPort\": {\n                      \"type\": \"integer\"\n                    },\n                    \"enableSsl\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"launchBrowser\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"authenticationMethod\": {\n                      \"type\": \"string\",\n                      \"minLength\": 1\n                    },\n                    \"analyticsEnabled\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"username\": {\n                      \"type\": \"string\",\n                      \"minLength\": 1\n                    },\n                    \"password\": {\n                      \"type\": \"string\",\n                      \"minLength\": 1\n                    },\n                    \"logLevel\": {\n                      \"type\": \"string\",\n                      \"minLength\": 1\n                    },\n                    \"consoleLogLevel\": {\n                      \"type\": \"string\"\n                    },\n                    \"branch\": {\n                      \"type\": \"string\",\n                      \"minLength\": 1\n                    },\n                    \"apiKey\": {\n                      \"type\": \"string\",\n                      \"minLength\": 1\n                    },\n                    \"sslCertPath\": {\n                      \"type\": \"string\"\n                    },\n                    \"sslCertPassword\": {\n                      \"type\": \"string\"\n                    },\n                    \"urlBase\": {\n                      \"type\": \"string\"\n                    },\n                    \"updateAutomatically\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"updateMechanism\": {\n                      \"type\": \"string\",\n                      \"minLength\": 1\n                    },\n                    \"updateScriptPath\": {\n                      \"type\": \"string\"\n                    },\n                    \"proxyEnabled\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"proxyType\": {\n                      \"type\": \"string\",\n                      \"minLength\": 1\n                    },\n                    \"proxyHostname\": {\n                      \"type\": \"string\"\n                    },\n                    \"proxyPort\": {\n                      \"type\": \"integer\"\n                    },\n                    \"proxyUsername\": {\n                      \"type\": \"string\"\n                    },\n                    \"proxyPassword\": {\n                      \"type\": \"string\"\n                    },\n                    \"proxyBypassFilter\": {\n                      \"type\": \"string\"\n                    },\n                    \"proxyBypassLocalAddresses\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"certificateValidation\": {\n                      \"type\": \"string\",\n                      \"minLength\": 1\n                    },\n                    \"backupFolder\": {\n                      \"type\": \"string\",\n                      \"minLength\": 1\n                    },\n                    \"backupInterval\": {\n                      \"type\": \"integer\"\n                    },\n                    \"backupRetention\": {\n                      \"type\": \"integer\"\n                    },\n                    \"id\": {\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"required\": [\n                    \"bindAddress\",\n                    \"port\",\n                    \"sslPort\",\n                    \"enableSsl\",\n                    \"launchBrowser\",\n                    \"authenticationMethod\",\n                    \"analyticsEnabled\",\n                    \"username\",\n                    \"password\",\n                    \"logLevel\",\n                    \"consoleLogLevel\",\n                    \"branch\",\n                    \"apiKey\",\n                    \"sslCertPath\",\n                    \"sslCertPassword\",\n                    \"urlBase\",\n                    \"updateAutomatically\",\n                    \"updateMechanism\",\n                    \"updateScriptPath\",\n                    \"proxyEnabled\",\n                    \"proxyType\",\n                    \"proxyHostname\",\n                    \"proxyPort\",\n                    \"proxyUsername\",\n                    \"proxyPassword\",\n                    \"proxyBypassFilter\",\n                    \"proxyBypassLocalAddresses\",\n                    \"certificateValidation\",\n                    \"backupFolder\",\n                    \"backupInterval\",\n                    \"backupRetention\",\n                    \"id\"\n                  ]\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          }\n        },\n        \"operationId\": \"get-config-host\",\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          },\n          {\n            \"apikey\": []\n          }\n        ],\n        \"description\": \"Get General/Host settings for Radarr.\"\n      },\n      \"put\": {\n        \"summary\": \"Edit Host Settings\",\n        \"operationId\": \"put-config-host\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          }\n        },\n        \"description\": \"Edit General/Host settings for Radarr.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"description\": \"\",\n                \"type\": \"object\",\n                \"properties\": {\n                  \"bindAddress\": {\n                    \"type\": \"string\",\n                    \"minLength\": 1\n                  },\n                  \"port\": {\n                    \"type\": \"number\"\n                  },\n                  \"sslPort\": {\n                    \"type\": \"number\"\n                  },\n                  \"enableSsl\": {\n                    \"type\": \"boolean\"\n                  },\n                  \"launchBrowser\": {\n                    \"type\": \"boolean\"\n                  },\n                  \"authenticationMethod\": {\n                    \"type\": \"string\",\n                    \"minLength\": 1\n                  },\n                  \"analyticsEnabled\": {\n                    \"type\": \"boolean\"\n                  },\n                  \"username\": {\n                    \"type\": \"string\",\n                    \"minLength\": 1\n                  },\n                  \"password\": {\n                    \"type\": \"string\",\n                    \"minLength\": 1\n                  },\n                  \"logLevel\": {\n                    \"type\": \"string\",\n                    \"minLength\": 1\n                  },\n                  \"consoleLogLevel\": {\n                    \"type\": \"string\"\n                  },\n                  \"branch\": {\n                    \"type\": \"string\",\n                    \"minLength\": 1\n                  },\n                  \"apiKey\": {\n                    \"type\": \"string\",\n                    \"minLength\": 1\n                  },\n                  \"sslCertPath\": {\n                    \"type\": \"string\"\n                  },\n                  \"sslCertPassword\": {\n                    \"type\": \"string\"\n                  },\n                  \"urlBase\": {\n                    \"type\": \"string\"\n                  },\n                  \"updateAutomatically\": {\n                    \"type\": \"boolean\"\n                  },\n                  \"updateMechanism\": {\n                    \"type\": \"string\",\n                    \"minLength\": 1\n                  },\n                  \"updateScriptPath\": {\n                    \"type\": \"string\"\n                  },\n                  \"proxyEnabled\": {\n                    \"type\": \"boolean\"\n                  },\n                  \"proxyType\": {\n                    \"type\": \"string\",\n                    \"minLength\": 1\n                  },\n                  \"proxyHostname\": {\n                    \"type\": \"string\"\n                  },\n                  \"proxyPort\": {\n                    \"type\": \"number\"\n                  },\n                  \"proxyUsername\": {\n                    \"type\": \"string\"\n                  },\n                  \"proxyPassword\": {\n                    \"type\": \"string\"\n                  },\n                  \"proxyBypassFilter\": {\n                    \"type\": \"string\"\n                  },\n                  \"proxyBypassLocalAddresses\": {\n                    \"type\": \"boolean\"\n                  },\n                  \"certificateValidation\": {\n                    \"type\": \"string\",\n                    \"minLength\": 1\n                  },\n                  \"backupFolder\": {\n                    \"type\": \"string\",\n                    \"minLength\": 1\n                  },\n                  \"backupInterval\": {\n                    \"type\": \"number\"\n                  },\n                  \"backupRetention\": {\n                    \"type\": \"number\"\n                  },\n                  \"id\": {\n                    \"type\": \"number\"\n                  }\n                },\n                \"required\": [\n                  \"bindAddress\",\n                  \"port\",\n                  \"sslPort\",\n                  \"enableSsl\",\n                  \"launchBrowser\",\n                  \"authenticationMethod\",\n                  \"analyticsEnabled\",\n                  \"username\",\n                  \"password\",\n                  \"logLevel\",\n                  \"consoleLogLevel\",\n                  \"branch\",\n                  \"apiKey\",\n                  \"sslCertPath\",\n                  \"sslCertPassword\",\n                  \"urlBase\",\n                  \"updateAutomatically\",\n                  \"updateMechanism\",\n                  \"updateScriptPath\",\n                  \"proxyEnabled\",\n                  \"proxyType\",\n                  \"proxyHostname\",\n                  \"proxyPort\",\n                  \"proxyUsername\",\n                  \"proxyPassword\",\n                  \"proxyBypassFilter\",\n                  \"proxyBypassLocalAddresses\",\n                  \"certificateValidation\",\n                  \"backupFolder\",\n                  \"backupInterval\",\n                  \"backupRetention\",\n                  \"id\"\n                ]\n              }\n            }\n          },\n          \"description\": \"\"\n        },\n        \"tags\": [\n          \"Settings\"\n        ],\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          },\n          {\n            \"apikey\": []\n          }\n        ]\n      }\n    },\n    \"/config/naming\": {\n      \"get\": {\n        \"summary\": \"Get Naming Settings\",\n        \"tags\": [\n          \"Settings\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"description\": \"\",\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"renameMovies\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"replaceIllegalCharacters\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"colonReplacementFormat\": {\n                      \"type\": \"string\",\n                      \"minLength\": 1\n                    },\n                    \"standardMovieFormat\": {\n                      \"type\": \"string\",\n                      \"minLength\": 1\n                    },\n                    \"movieFolderFormat\": {\n                      \"type\": \"string\",\n                      \"minLength\": 1\n                    },\n                    \"includeQuality\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"replaceSpaces\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"id\": {\n                      \"type\": \"number\"\n                    }\n                  },\n                  \"required\": [\n                    \"renameMovies\",\n                    \"replaceIllegalCharacters\",\n                    \"colonReplacementFormat\",\n                    \"standardMovieFormat\",\n                    \"movieFolderFormat\",\n                    \"includeQuality\",\n                    \"replaceSpaces\",\n                    \"id\"\n                  ]\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          }\n        },\n        \"operationId\": \"get-config-naming\",\n        \"description\": \"Get Settings for movie file and folder naming.\",\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          },\n          {\n            \"apikey\": []\n          }\n        ]\n      },\n      \"put\": {\n        \"summary\": \"Edit Naming Settings\",\n        \"operationId\": \"put-config-naming\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          }\n        },\n        \"tags\": [\n          \"Settings\"\n        ],\n        \"description\": \"Edit Settings for movie file and folder naming.\",\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          },\n          {\n            \"apikey\": []\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"description\": \"\",\n                \"type\": \"object\",\n                \"properties\": {\n                  \"renameMovies\": {\n                    \"type\": \"boolean\"\n                  },\n                  \"replaceIllegalCharacters\": {\n                    \"type\": \"boolean\"\n                  },\n                  \"colonReplacementFormat\": {\n                    \"type\": \"string\",\n                    \"minLength\": 1\n                  },\n                  \"standardMovieFormat\": {\n                    \"type\": \"string\",\n                    \"minLength\": 1\n                  },\n                  \"movieFolderFormat\": {\n                    \"type\": \"string\",\n                    \"minLength\": 1\n                  },\n                  \"includeQuality\": {\n                    \"type\": \"boolean\"\n                  },\n                  \"replaceSpaces\": {\n                    \"type\": \"boolean\"\n                  },\n                  \"id\": {\n                    \"type\": \"number\"\n                  }\n                },\n                \"required\": [\n                  \"renameMovies\",\n                  \"replaceIllegalCharacters\",\n                  \"colonReplacementFormat\",\n                  \"standardMovieFormat\",\n                  \"movieFolderFormat\",\n                  \"includeQuality\",\n                  \"replaceSpaces\",\n                  \"id\"\n                ]\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/queue/{id}\": {\n      \"parameters\": [\n        {\n          \"schema\": {\n            \"type\": \"string\"\n          },\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"required\": true\n        }\n      ],\n      \"delete\": {\n        \"summary\": \"Remove Item from Queue\",\n        \"operationId\": \"delete-queue-id\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"401\": {\n            \"description\": \"Invalid API Key\"\n          }\n        },\n        \"description\": \"Remove an item from the queue and optionally blocklist it\",\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          },\n          {\n            \"apikey\": []\n          }\n        ],\n        \"parameters\": [\n          {\n            \"schema\": {\n              \"type\": \"boolean\"\n            },\n            \"in\": \"query\",\n            \"name\": \"removeFromClient\"\n          },\n          {\n            \"schema\": {\n              \"type\": \"boolean\"\n            },\n            \"in\": \"query\",\n            \"name\": \"blocklist\"\n          }\n        ],\n        \"tags\": [\n          \"Queue\"\n        ]\n      }\n    },\n    \"/queue/bulk\": {\n      \"delete\": {\n        \"summary\": \"Remove Items from Queue\",\n        \"operationId\": \"delete-queue-bulk\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"401\": {\n            \"description\": \"Invalid API Key\"\n          }\n        },\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          },\n          {\n            \"apikey\": []\n          }\n        ],\n        \"parameters\": [\n          {\n            \"schema\": {\n              \"type\": \"boolean\"\n            },\n            \"in\": \"query\",\n            \"name\": \"removeFromClient\"\n          },\n          {\n            \"schema\": {\n              \"type\": \"boolean\"\n            },\n            \"in\": \"query\",\n            \"name\": \"blocklist\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"description\": \"\",\n                \"type\": \"object\",\n                \"properties\": {\n                  \"ids\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"integer\"\n                    }\n                  }\n                },\n                \"required\": [\n                  \"ids\"\n                ]\n              }\n            }\n          },\n          \"description\": \"\"\n        },\n        \"tags\": [\n          \"Queue\"\n        ],\n        \"description\": \"Remove multiple items from queue by their ids\"\n      }\n    },\n    \"/queue/details\": {\n      \"get\": {\n        \"summary\": \"Get Queue Item Details\",\n        \"tags\": [\n          \"Queue\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"description\": \"\",\n                  \"minItems\": 1,\n                  \"uniqueItems\": true,\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"languages\": {\n                        \"type\": \"array\",\n                        \"uniqueItems\": true,\n                        \"minItems\": 1,\n                        \"items\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"id\": {\n                              \"type\": \"integer\"\n                            },\n                            \"name\": {\n                              \"type\": \"string\",\n                              \"minLength\": 1\n                            }\n                          },\n                          \"required\": [\n                            \"id\",\n                            \"name\"\n                          ]\n                        }\n                      },\n                      \"quality\": {\n                        \"$ref\": \"#/components/schemas/Quality\"\n                      },\n                      \"customFormats\": {\n                        \"type\": \"array\",\n                        \"uniqueItems\": true,\n                        \"minItems\": 1,\n                        \"items\": {\n                          \"$ref\": \"#/components/schemas/CustomFormat\"\n                        }\n                      },\n                      \"size\": {\n                        \"type\": \"number\"\n                      },\n                      \"title\": {\n                        \"type\": \"string\",\n                        \"minLength\": 1\n                      },\n                      \"sizeleft\": {\n                        \"type\": \"number\"\n                      },\n                      \"timeleft\": {\n                        \"type\": \"string\",\n                        \"minLength\": 1\n                      },\n                      \"estimatedCompletionTime\": {\n                        \"type\": \"string\",\n                        \"minLength\": 1\n                      },\n                      \"status\": {\n                        \"type\": \"string\",\n                        \"minLength\": 1\n                      },\n                      \"trackedDownloadStatus\": {\n                        \"type\": \"string\",\n                        \"minLength\": 1\n                      },\n                      \"trackedDownloadState\": {\n                        \"type\": \"string\",\n                        \"minLength\": 1\n                      },\n                      \"statusMessages\": {\n                        \"type\": \"array\",\n                        \"uniqueItems\": true,\n                        \"minItems\": 1,\n                        \"items\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"title\": {\n                              \"type\": \"string\",\n                              \"minLength\": 1\n                            },\n                            \"messages\": {\n                              \"type\": \"array\",\n                              \"items\": {\n                                \"type\": \"object\"\n                              }\n                            }\n                          },\n                          \"required\": [\n                            \"title\"\n                          ]\n                        }\n                      },\n                      \"errorMessage\": {\n                        \"type\": \"string\",\n                        \"minLength\": 1\n                      },\n                      \"downloadId\": {\n                        \"type\": \"string\",\n                        \"minLength\": 1\n                      },\n                      \"protocol\": {\n                        \"type\": \"string\",\n                        \"minLength\": 1\n                      },\n                      \"downloadClient\": {\n                        \"type\": \"string\",\n                        \"minLength\": 1\n                      },\n                      \"indexer\": {\n                        \"type\": \"string\",\n                        \"minLength\": 1\n                      },\n                      \"outputPath\": {\n                        \"type\": \"string\",\n                        \"minLength\": 1\n                      },\n                      \"id\": {\n                        \"type\": \"integer\"\n                      }\n                    },\n                    \"required\": [\n                      \"languages\",\n                      \"quality\",\n                      \"customFormats\",\n                      \"size\",\n                      \"title\",\n                      \"sizeleft\",\n                      \"timeleft\",\n                      \"estimatedCompletionTime\",\n                      \"status\",\n                      \"trackedDownloadStatus\",\n                      \"trackedDownloadState\",\n                      \"statusMessages\",\n                      \"errorMessage\",\n                      \"downloadId\",\n                      \"protocol\",\n                      \"downloadClient\",\n                      \"indexer\",\n                      \"outputPath\",\n                      \"id\"\n                    ]\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Invalid API Key\"\n          }\n        },\n        \"operationId\": \"get-queue-details\",\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          },\n          {\n            \"apikey\": []\n          }\n        ],\n        \"parameters\": [\n          {\n            \"schema\": {\n              \"type\": \"boolean\"\n            },\n            \"in\": \"query\",\n            \"name\": \"includeMovie\",\n            \"description\": \"Include Movie object if linked\"\n          }\n        ],\n        \"description\": \"Get details of all items in queue\"\n      }\n    },\n    \"/queue/status\": {\n      \"get\": {\n        \"summary\": \"Get Queue Status\",\n        \"tags\": [\n          \"Queue\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"description\": \"\",\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"totalCount\": {\n                      \"type\": \"integer\"\n                    },\n                    \"count\": {\n                      \"type\": \"integer\"\n                    },\n                    \"unknownCount\": {\n                      \"type\": \"integer\"\n                    },\n                    \"errors\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"warnings\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"unknownErrors\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"unknownWarnings\": {\n                      \"type\": \"boolean\"\n                    }\n                  },\n                  \"required\": [\n                    \"totalCount\",\n                    \"count\",\n                    \"unknownCount\",\n                    \"errors\",\n                    \"warnings\",\n                    \"unknownErrors\",\n                    \"unknownWarnings\"\n                  ]\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Invalid API Key\"\n          }\n        },\n        \"operationId\": \"get-queue-status\",\n        \"description\": \"Stats on items in queue\",\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          },\n          {\n            \"apikey\": []\n          }\n        ]\n      }\n    },\n    \"/queue/grab/{id}\": {\n      \"parameters\": [\n        {\n          \"schema\": {\n            \"type\": \"string\"\n          },\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"required\": true\n        }\n      ],\n      \"post\": {\n        \"summary\": \"\",\n        \"operationId\": \"post-queue-grab-id\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"401\": {\n            \"description\": \"Invalid API Key\"\n          }\n        },\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          },\n          {\n            \"apikey\": []\n          }\n        ],\n        \"description\": \"Perform a Radarr \\\"force grab\\\" on a pending queue item by its ID.\",\n        \"tags\": [\n          \"Queue\"\n        ]\n      }\n    },\n    \"/rootfolder\": {\n      \"get\": {\n        \"summary\": \"Gets root folder\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\"\n                  }\n                },\n                \"examples\": {\n                  \"Response\": {\n                    \"value\": [\n                      {\n                        \"path\": \"C:\\\\Downloads\\\\Movies\",\n                        \"freeSpace\": 282500063232,\n                        \"unmappedFolders\": [],\n                        \"id\": 1\n                      }\n                    ]\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Invalid API Key\"\n          }\n        },\n        \"operationId\": \"get-rootfolder\",\n        \"description\": \"Query Radarr for root folder information\\n\\nSettings: Media Management \u003e Root Folders\",\n        \"security\": [\n          {\n            \"X-API-Key\": []\n          },\n          {\n            \"apikey\": []\n          }\n        ],\n        \"tags\": [\n          \"Root Folder\"\n        ]\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"Movie\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"title\"\n        ],\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"title\": {\n            \"type\": \"string\",\n            \"example\": \"Dark Phoenix\"\n          },\n          \"sortTitle\": {\n            \"type\": \"string\",\n            \"example\": \"dark phoenix\"\n          },\n          \"sizeOnDisk\": {\n            \"type\": \"number\"\n          },\n          \"overview\": {\n            \"type\": \"string\"\n          },\n          \"inCinemas\": {\n            \"type\": \"string\"\n          },\n          \"physicalRelease\": {\n            \"type\": \"string\"\n          },\n          \"images\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Image\"\n            }\n          },\n          \"website\": {\n            \"type\": \"string\",\n            \"example\": \"http://darkphoenix.com\"\n          },\n          \"year\": {\n            \"type\": \"integer\"\n          },\n          \"hasFile\": {\n            \"type\": \"boolean\"\n          },\n          \"youTubeTrailerId\": {\n            \"type\": \"string\"\n          },\n          \"studio\": {\n            \"type\": \"string\"\n          },\n          \"path\": {\n            \"type\": \"string\"\n          },\n          \"rootFolderPath\": {\n            \"type\": \"string\"\n          },\n          \"qualityProfileId\": {\n            \"type\": \"integer\"\n          },\n          \"monitored\": {\n            \"type\": \"boolean\"\n          },\n          \"minimumAvailability\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"announced\",\n              \"inCinema\",\n              \"released\"\n            ]\n          },\n          \"isAvailable\": {\n            \"type\": \"boolean\"\n          },\n          \"folderName\": {\n            \"type\": \"string\"\n          },\n          \"runtime\": {\n            \"type\": \"integer\"\n          },\n          \"cleanTitle\": {\n            \"type\": \"string\"\n          },\n          \"imdbId\": {\n            \"type\": \"string\"\n          },\n          \"tmdbId\": {\n            \"type\": \"integer\"\n          },\n          \"titleSlug\": {\n            \"type\": \"string\"\n          },\n          \"certification\": {\n            \"type\": \"string\"\n          },\n          \"genres\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\"\n            }\n          },\n          \"added\": {\n            \"type\": \"string\"\n          },\n          \"ratings\": {\n            \"$ref\": \"#/components/schemas/Rating\"\n          },\n          \"collection\": {\n            \"$ref\": \"#/components/schemas/Collection\"\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"description\": \"movie status\",\n            \"enum\": [\n              \"deleted\",\n              \"tba\",\n              \"announced\",\n              \"inCinema\",\n              \"released\"\n            ]\n          }\n        },\n        \"xml\": {\n          \"name\": \"Movie\"\n        }\n      },\n      \"Image\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"coverType\": {\n            \"type\": \"string\",\n            \"enum\": [\"poster\", \"fanart\"],\n            \"example\": \"poster\"\n          },\n          \"url\": {\n            \"type\": \"string\",\n            \"summary\": \"A path that can be used together with the host to find the image - requires API key\",\n            \"example\": \"/radarr/MediaCover/39/poster.jpg?lastWrite=637618111851086964\"\n          },\n          \"remoteUrl\": {\n            \"type\": \"string\",\n            \"summary\": \"A full URL of the TMDB source\",\n            \"example\": \"https://image.tmdb.org/t/p/original/i0FHyNF9VvQTXOi4yKnZJ1zql1.jpg\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"Image\"\n        }\n      },\n      \"Collection\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"tmdbId\": {\n            \"type\": \"integer\"\n          },\n          \"images\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Image\"\n            }\n          }\n        },\n        \"xml\": {\n          \"name\": \"Collection\"\n        }\n      },\n      \"Rating\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"votes\": {\n            \"type\": \"integer\"\n          },\n          \"value\": {\n            \"type\": \"number\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"Rating\"\n        }\n      },\n      \"Tag\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\"\n          },\n          \"label\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"TagDetail\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\"\n          },\n          \"label\": {\n            \"type\": \"string\"\n          },\n          \"delayProfileIds\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\"\n            }\n          },\n          \"notificationIds\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\"\n            }\n          },\n          \"restrictionIds\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\"\n            }\n          },\n          \"netImportIds\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\"\n            }\n          },\n          \"movieIds\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\"\n            }\n          }\n        }\n      },\n      \"Indexer\": {\n        \"description\": \"\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"enableRss\": {\n            \"type\": \"boolean\"\n          },\n          \"enableAutomaticSearch\": {\n            \"type\": \"boolean\"\n          },\n          \"enableInteractiveSearch\": {\n            \"type\": \"boolean\"\n          },\n          \"supportsRss\": {\n            \"type\": \"boolean\"\n          },\n          \"supportsSearch\": {\n            \"type\": \"boolean\"\n          },\n          \"protocol\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"priority\": {\n            \"type\": \"integer\",\n            \"minimum\": 0,\n            \"maximum\": 50\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"fields\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ProviderField\"\n            }\n          },\n          \"implementationName\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"implementation\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"configContract\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"infoLink\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\"\n            }\n          },\n          \"id\": {\n            \"type\": \"number\"\n          }\n        },\n        \"required\": [\n          \"enableRss\",\n          \"enableAutomaticSearch\",\n          \"enableInteractiveSearch\",\n          \"supportsRss\",\n          \"supportsSearch\",\n          \"protocol\",\n          \"priority\",\n          \"name\",\n          \"fields\",\n          \"implementationName\",\n          \"implementation\",\n          \"configContract\",\n          \"infoLink\",\n          \"tags\",\n          \"id\"\n        ]\n      },\n      \"DownloadClient\": {\n        \"description\": \"\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"enable\": {\n            \"type\": \"boolean\"\n          },\n          \"protocol\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"priority\": {\n            \"type\": \"integer\",\n            \"minimum\": 0,\n            \"maximum\": 50\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"fields\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ProviderField\"\n            }\n          },\n          \"implementationName\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"implementation\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"configContract\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"infoLink\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\"\n            }\n          },\n          \"id\": {\n            \"type\": \"integer\"\n          }\n        },\n        \"required\": [\n          \"enable\",\n          \"protocol\",\n          \"priority\",\n          \"name\",\n          \"fields\",\n          \"implementationName\",\n          \"implementation\",\n          \"configContract\",\n          \"infoLink\",\n          \"tags\",\n          \"id\"\n        ]\n      },\n      \"Notification\": {\n        \"description\": \"\",\n        \"type\": \"object\",\n        \"title\": \"\",\n        \"properties\": {\n          \"onGrab\": {\n            \"type\": \"boolean\"\n          },\n          \"onDownload\": {\n            \"type\": \"boolean\"\n          },\n          \"onUpgrade\": {\n            \"type\": \"boolean\"\n          },\n          \"onRename\": {\n            \"type\": \"boolean\"\n          },\n          \"onDelete\": {\n            \"type\": \"boolean\"\n          },\n          \"onHealthIssue\": {\n            \"type\": \"boolean\"\n          },\n          \"supportsOnGrab\": {\n            \"type\": \"boolean\"\n          },\n          \"supportsOnDownload\": {\n            \"type\": \"boolean\"\n          },\n          \"supportsOnUpgrade\": {\n            \"type\": \"boolean\"\n          },\n          \"supportsOnRename\": {\n            \"type\": \"boolean\"\n          },\n          \"supportsOnDelete\": {\n            \"type\": \"boolean\"\n          },\n          \"supportsOnHealthIssue\": {\n            \"type\": \"boolean\"\n          },\n          \"includeHealthWarnings\": {\n            \"type\": \"boolean\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"fields\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ProviderField\"\n            }\n          },\n          \"implementationName\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"implementation\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"configContract\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"infoLink\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"message\": {\n            \"type\": \"object\",\n            \"required\": [\n              \"message\",\n              \"type\"\n            ],\n            \"properties\": {\n              \"message\": {\n                \"type\": \"string\",\n                \"minLength\": 1\n              },\n              \"type\": {\n                \"type\": \"string\",\n                \"minLength\": 1\n              }\n            }\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\"\n            }\n          },\n          \"id\": {\n            \"type\": \"integer\"\n          }\n        },\n        \"required\": [\n          \"onGrab\",\n          \"onDownload\",\n          \"onUpgrade\",\n          \"onRename\",\n          \"onDelete\",\n          \"onHealthIssue\",\n          \"supportsOnGrab\",\n          \"supportsOnDownload\",\n          \"supportsOnUpgrade\",\n          \"supportsOnRename\",\n          \"supportsOnDelete\",\n          \"supportsOnHealthIssue\",\n          \"includeHealthWarnings\",\n          \"name\",\n          \"fields\",\n          \"implementationName\",\n          \"implementation\",\n          \"configContract\",\n          \"infoLink\",\n          \"message\",\n          \"tags\",\n          \"id\"\n        ]\n      },\n      \"Metadata\": {\n        \"description\": \"\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"enable\": {\n            \"type\": \"boolean\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"fields\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ProviderField\"\n            }\n          },\n          \"implementationName\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"implementation\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"configContract\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"infoLink\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\"\n            }\n          },\n          \"id\": {\n            \"type\": \"integer\"\n          }\n        },\n        \"required\": [\n          \"enable\",\n          \"name\",\n          \"fields\",\n          \"implementationName\",\n          \"implementation\",\n          \"configContract\",\n          \"infoLink\",\n          \"tags\",\n          \"id\"\n        ]\n      },\n      \"ImportList\": {\n        \"description\": \"\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"enabled\": {\n            \"type\": \"boolean\"\n          },\n          \"enableAuto\": {\n            \"type\": \"boolean\"\n          },\n          \"shouldMonitor\": {\n            \"type\": \"boolean\"\n          },\n          \"rootFolderPath\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"qualityProfileId\": {\n            \"type\": \"number\"\n          },\n          \"searchOnAdd\": {\n            \"type\": \"boolean\"\n          },\n          \"minimumAvailability\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"listType\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"listOrder\": {\n            \"type\": \"number\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"fields\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ProviderField\"\n            }\n          },\n          \"implementationName\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"implementation\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"configContract\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"infoLink\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\"\n            }\n          },\n          \"id\": {\n            \"type\": \"integer\"\n          }\n        },\n        \"required\": [\n          \"enabled\",\n          \"enableAuto\",\n          \"shouldMonitor\",\n          \"rootFolderPath\",\n          \"qualityProfileId\",\n          \"searchOnAdd\",\n          \"minimumAvailability\",\n          \"listType\",\n          \"listOrder\",\n          \"name\",\n          \"fields\",\n          \"implementationName\",\n          \"implementation\",\n          \"configContract\",\n          \"infoLink\",\n          \"tags\",\n          \"id\"\n        ]\n      },\n      \"ProviderField\": {\n        \"description\": \"\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"order\": {\n            \"type\": \"integer\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"label\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"helpText\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"value\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"advanced\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"required\": [\n          \"order\",\n          \"name\",\n          \"label\",\n          \"helpText\",\n          \"value\",\n          \"type\",\n          \"advanced\"\n        ]\n      },\n      \"History\": {\n        \"description\": \"\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"movieId\": {\n            \"type\": \"number\"\n          },\n          \"sourceTitle\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"languages\": {\n            \"type\": \"array\",\n            \"uniqueItems\": true,\n            \"minItems\": 1,\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"number\"\n                },\n                \"name\": {\n                  \"type\": \"string\",\n                  \"minLength\": 1\n                }\n              },\n              \"required\": [\n                \"id\",\n                \"name\"\n              ]\n            }\n          },\n          \"quality\": {\n            \"$ref\": \"#/components/schemas/Quality\"\n          },\n          \"customFormats\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/CustomFormat\"\n            }\n          },\n          \"qualityCutoffNotMet\": {\n            \"type\": \"boolean\"\n          },\n          \"date\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"downloadId\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"eventType\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"data\": {\n            \"type\": \"object\"\n          },\n          \"id\": {\n            \"type\": \"number\"\n          }\n        },\n        \"required\": [\n          \"movieId\",\n          \"sourceTitle\",\n          \"languages\",\n          \"quality\",\n          \"customFormats\",\n          \"qualityCutoffNotMet\",\n          \"date\",\n          \"downloadId\",\n          \"eventType\",\n          \"data\",\n          \"id\"\n        ]\n      },\n      \"CustomFormat\": {\n        \"description\": \"\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"includeCustomFormatWhenRenaming\": {\n            \"type\": \"boolean\"\n          },\n          \"specifications\": {\n            \"type\": \"array\",\n            \"uniqueItems\": true,\n            \"minItems\": 1,\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"name\": {\n                  \"type\": \"string\",\n                  \"minLength\": 1\n                },\n                \"implementation\": {\n                  \"type\": \"string\",\n                  \"minLength\": 1\n                },\n                \"implementationName\": {\n                  \"type\": \"string\",\n                  \"minLength\": 1\n                },\n                \"infoLink\": {\n                  \"type\": \"string\",\n                  \"minLength\": 1\n                },\n                \"negate\": {\n                  \"type\": \"boolean\"\n                },\n                \"required\": {\n                  \"type\": \"boolean\"\n                },\n                \"fields\": {\n                  \"type\": \"array\",\n                  \"uniqueItems\": true,\n                  \"minItems\": 1,\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ProviderField\"\n                  }\n                }\n              },\n              \"required\": [\n                \"name\",\n                \"implementation\",\n                \"implementationName\",\n                \"infoLink\",\n                \"negate\",\n                \"required\"\n              ]\n            }\n          }\n        },\n        \"required\": [\n          \"id\",\n          \"name\",\n          \"includeCustomFormatWhenRenaming\",\n          \"specifications\"\n        ]\n      },\n      \"Quality\": {\n        \"description\": \"\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"quality\": {\n            \"type\": \"object\",\n            \"required\": [\n              \"id\",\n              \"name\",\n              \"source\",\n              \"resolution\",\n              \"modifier\"\n            ],\n            \"properties\": {\n              \"id\": {\n                \"type\": \"integer\"\n              },\n              \"name\": {\n                \"type\": \"string\",\n                \"minLength\": 1\n              },\n              \"source\": {\n                \"type\": \"string\",\n                \"minLength\": 1\n              },\n              \"resolution\": {\n                \"type\": \"integer\"\n              },\n              \"modifier\": {\n                \"type\": \"string\",\n                \"minLength\": 1\n              }\n            }\n          },\n          \"revision\": {\n            \"type\": \"object\",\n            \"required\": [\n              \"version\",\n              \"real\",\n              \"isRepack\"\n            ],\n            \"properties\": {\n              \"version\": {\n                \"type\": \"integer\"\n              },\n              \"real\": {\n                \"type\": \"integer\"\n              },\n              \"isRepack\": {\n                \"type\": \"boolean\"\n              }\n            }\n          }\n        },\n        \"required\": [\n          \"quality\",\n          \"revision\"\n        ]\n      },\n      \"QualityProfile\": {\n        \"description\": \"\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"upgradeAllowed\": {\n            \"type\": \"boolean\"\n          },\n          \"cutoff\": {\n            \"type\": \"integer\"\n          },\n          \"items\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\"\n            }\n          },\n          \"minFormatScore\": {\n            \"type\": \"integer\"\n          },\n          \"cutoffFormatScore\": {\n            \"type\": \"integer\"\n          },\n          \"formatItems\": {\n            \"type\": \"array\",\n            \"uniqueItems\": true,\n            \"minItems\": 1,\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"format\": {\n                  \"type\": \"integer\"\n                },\n                \"name\": {\n                  \"type\": \"string\",\n                  \"minLength\": 1\n                },\n                \"score\": {\n                  \"type\": \"integer\"\n                }\n              },\n              \"required\": [\n                \"format\",\n                \"name\",\n                \"score\"\n              ]\n            }\n          },\n          \"language\": {\n            \"type\": \"object\",\n            \"required\": [\n              \"id\",\n              \"name\"\n            ],\n            \"properties\": {\n              \"id\": {\n                \"type\": \"integer\"\n              },\n              \"name\": {\n                \"type\": \"string\",\n                \"minLength\": 1\n              }\n            }\n          },\n          \"id\": {\n            \"type\": \"integer\"\n          }\n        },\n        \"required\": [\n          \"name\",\n          \"upgradeAllowed\",\n          \"cutoff\",\n          \"items\",\n          \"minFormatScore\",\n          \"cutoffFormatScore\",\n          \"formatItems\",\n          \"language\",\n          \"id\"\n        ]\n      },\n      \"Blocklist\": {\n        \"description\": \"\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"movieId\": {\n            \"type\": \"number\"\n          },\n          \"sourceTitle\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"languages\": {\n            \"type\": \"array\",\n            \"uniqueItems\": true,\n            \"minItems\": 1,\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"number\"\n                },\n                \"name\": {\n                  \"type\": \"string\",\n                  \"minLength\": 1\n                }\n              },\n              \"required\": [\n                \"id\",\n                \"name\"\n              ]\n            }\n          },\n          \"quality\": {\n            \"$ref\": \"#/components/schemas/Quality\"\n          },\n          \"customFormats\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/CustomFormat\"\n            }\n          },\n          \"date\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"protocol\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"indexer\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"message\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"id\": {\n            \"type\": \"number\"\n          }\n        },\n        \"required\": [\n          \"movieId\",\n          \"sourceTitle\",\n          \"languages\",\n          \"quality\",\n          \"customFormats\",\n          \"date\",\n          \"protocol\",\n          \"indexer\",\n          \"message\",\n          \"id\"\n        ]\n      },\n      \"MovieFile\": {\n        \"description\": \"\",\n        \"type\": \"object\",\n        \"title\": \"\",\n        \"properties\": {\n          \"movieId\": {\n            \"type\": \"integer\"\n          },\n          \"relativePath\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"path\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"size\": {\n            \"type\": \"number\"\n          },\n          \"dateAdded\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"indexerFlags\": {\n            \"type\": \"integer\"\n          },\n          \"quality\": {\n            \"$ref\": \"#/components/schemas/Quality\"\n          },\n          \"mediaInfo\": {\n            \"type\": \"object\",\n            \"required\": [\n              \"audioAdditionalFeatures\",\n              \"audioBitrate\",\n              \"audioChannels\",\n              \"audioCodec\",\n              \"audioLanguages\",\n              \"audioStreamCount\",\n              \"videoBitDepth\",\n              \"videoBitrate\",\n              \"videoCodec\",\n              \"videoFps\",\n              \"resolution\",\n              \"runTime\",\n              \"scanType\",\n              \"subtitles\"\n            ],\n            \"properties\": {\n              \"audioAdditionalFeatures\": {\n                \"type\": \"string\"\n              },\n              \"audioBitrate\": {\n                \"type\": \"number\"\n              },\n              \"audioChannels\": {\n                \"type\": \"number\"\n              },\n              \"audioCodec\": {\n                \"type\": \"string\",\n                \"minLength\": 1\n              },\n              \"audioLanguages\": {\n                \"type\": \"string\"\n              },\n              \"audioStreamCount\": {\n                \"type\": \"number\"\n              },\n              \"videoBitDepth\": {\n                \"type\": \"number\"\n              },\n              \"videoBitrate\": {\n                \"type\": \"number\"\n              },\n              \"videoCodec\": {\n                \"type\": \"string\",\n                \"minLength\": 1\n              },\n              \"videoFps\": {\n                \"type\": \"number\"\n              },\n              \"resolution\": {\n                \"type\": \"string\",\n                \"minLength\": 1\n              },\n              \"runTime\": {\n                \"type\": \"string\",\n                \"minLength\": 1\n              },\n              \"scanType\": {\n                \"type\": \"string\",\n                \"minLength\": 1\n              },\n              \"subtitles\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"qualityCutoffNotMet\": {\n            \"type\": \"boolean\"\n          },\n          \"languages\": {\n            \"type\": \"array\",\n            \"uniqueItems\": true,\n            \"minItems\": 1,\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"number\"\n                },\n                \"name\": {\n                  \"type\": \"string\",\n                  \"minLength\": 1\n                }\n              },\n              \"required\": [\n                \"id\",\n                \"name\"\n              ]\n            }\n          },\n          \"releaseGroup\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"id\": {\n            \"type\": \"integer\"\n          }\n        },\n        \"required\": [\n          \"movieId\",\n          \"relativePath\",\n          \"path\",\n          \"size\",\n          \"dateAdded\",\n          \"indexerFlags\",\n          \"quality\",\n          \"mediaInfo\",\n          \"qualityCutoffNotMet\",\n          \"languages\",\n          \"releaseGroup\",\n          \"id\"\n        ]\n      }\n    },\n    \"securitySchemes\": {\n      \"X-API-Key\": {\n        \"type\": \"http\",\n        \"scheme\": \"basic\",\n        \"description\": \"Used when not providing the key via URL\"\n      },\n      \"apikey\": {\n        \"name\": \"apikey\",\n        \"type\": \"apiKey\",\n        \"in\": \"query\",\n        \"description\": \"Used when not providing the key via header\"\n      }\n    }\n  },\n  \"tags\": [\n    {\n      \"name\": \"Movie\"\n    },\n    {\n      \"name\": \"MovieFile\"\n    },\n    {\n      \"name\": \"History\"\n    },\n    {\n      \"name\": \"Blocklist\"\n    },\n    {\n      \"name\": \"Queue\"\n    },\n    {\n      \"name\": \"Indexer\"\n    },\n    {\n      \"name\": \"Download Client\"\n    },\n    {\n      \"name\": \"Import Lists\"\n    },\n    {\n      \"name\": \"Notification\"\n    },\n    {\n      \"name\": \"Tag\"\n    },\n    {\n      \"name\": \"Disk Space\"\n    },\n    {\n      \"name\": \"Settings\"\n    },\n    {\n      \"name\": \"Metadata\"\n    },\n    {\n      \"name\": \"System\"\n    }\n  ]\n}\n"
		}
	},
	"Error": "panic: runtime error: index out of range [0] with length 0"
}