{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/tezedge/tezedge-debugger"
		},
		"file": {
			"name": "openapi.json",
			"path": "tezedge-recorder/openapi.json",
			"content": "{\n    \"openapi\": \"3.0.0\",\n    \"info\": {\n        \"title\": \"Tezedge Network Recorder\",\n        \"description\": \"Records p2p messages of sent and received by the node. Can work with multiple nodes simultaneously.\",\n        \"contact\": {\n            \"name\": \"API Support\",\n            \"url\": \"https://github.com/tezedge/tezedge-debugger\",\n            \"email\": \"vladislav.melnik@viablesystems.io\"\n        },\n        \"license\": {\n            \"name\": \"MIT License\",\n            \"url\": \"https://github.com/tezedge/tezedge-debugger/blob/master/LICENSE\"\n        },\n        \"version\": \"1.6.7\"\n    },\n    \"servers\": [\n        {\n            \"url\": \"http://develop.dev.tezedge.com:{port}\",\n            \"description\": \"Network Recorder\",\n            \"variables\": {\n                \"port\": {\n                    \"enum\": [\n                        \"17732\"\n                    ],\n                    \"default\": \"17732\"\n                }\n            }\n        },\n        {\n            \"url\": \"http://master.dev.tezedge.com:{port}\",\n            \"description\": \"Network Recorder\",\n            \"variables\": {\n                \"port\": {\n                    \"enum\": [\n                        \"17732\"\n                    ],\n                    \"default\": \"17732\"\n                }\n            }\n        }\n    ],\n    \"paths\": {\n        \"/v2/version\": {\n            \"get\": {\n                \"description\": \"Get git commit hash\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Git commit hash\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"string\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/v2/log\": {\n            \"get\": {\n                \"description\": \"Get a list of log records emitted by the node\",\n                \"parameters\": [\n                    {\n                        \"name\": \"limit\",\n                        \"in\": \"query\",\n                        \"description\": \"Maximal number of records to fetch\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    },\n                    {\n                        \"name\": \"cursor\",\n                        \"in\": \"query\",\n                        \"description\": \"Offset in the database\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    },\n                    {\n                        \"name\": \"log_level\",\n                        \"in\": \"query\",\n                        \"description\": \"The log level filter\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"from\",\n                        \"in\": \"query\",\n                        \"description\": \"The minimal timestamp\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    },\n                    {\n                        \"name\": \"to\",\n                        \"in\": \"query\",\n                        \"description\": \"The maximal timestamp\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    },\n                    {\n                        \"name\": \"timestamp\",\n                        \"in\": \"query\",\n                        \"description\": \"The timestamp from which the logs are shown\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    },\n                    {\n                        \"name\": \"query\",\n                        \"in\": \"query\",\n                        \"description\": \"Full text search query. See https://docs.rs/tantivy/0.15.3/tantivy/query/struct.QueryParser.html.\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"node_name\",\n                        \"in\": \"query\",\n                        \"description\": \"The name of the node from which the logs are shown\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"A log record\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"level\": {\n                                            \"type\": \"string\"\n                                        },\n                                        \"timestamp\": {\n                                            \"type\": \"integer\"\n                                        },\n                                        \"section\": {\n                                            \"type\": \"string\"\n                                        },\n                                        \"message\": {\n                                            \"type\": \"string\"\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/v2/p2p\": {\n            \"get\": {\n                \"description\": \"Get a list of p2p messages sent and received by the node\",\n                \"parameters\": [\n                    {\n                        \"name\": \"limit\",\n                        \"in\": \"query\",\n                        \"description\": \"Maximal number of message to fetch\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    },\n                    {\n                        \"name\": \"cursor\",\n                        \"in\": \"query\",\n                        \"description\": \"Offset in the database\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    },\n                    {\n                        \"name\": \"remote_addr\",\n                        \"in\": \"query\",\n                        \"description\": \"Fetch the messages sent to received from the particular node at the address\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"source_type\",\n                        \"in\": \"query\",\n                        \"description\": \"Fetch only messages originating from 'local' node or from 'remote' node\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"incoming\",\n                        \"in\": \"query\",\n                        \"description\": \"Filter to fetch only incoming or outgoing messages\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"boolean\"\n                        }\n                    },\n                    {\n                        \"name\": \"types\",\n                        \"in\": \"query\",\n                        \"description\": \"Comma separated types of messages to fetch\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"from\",\n                        \"in\": \"query\",\n                        \"description\": \"The minimal timestamp\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    },\n                    {\n                        \"name\": \"to\",\n                        \"in\": \"query\",\n                        \"description\": \"The maximal timestamp\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    },\n                    {\n                        \"name\": \"timestamp\",\n                        \"in\": \"query\",\n                        \"description\": \"The timestamp from which the p2p messages are shown\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"The list\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/p2pBrief\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/v2/p2p/{id}\": {\n            \"get\": {\n                \"description\": \"Get a full p2p message by its id\",\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"in\": \"path\",\n                        \"description\": \"An id of the message\",\n                        \"required\": true,\n                        \"schema\": {\n                          \"type\": \"integer\"\n                        }\n                    },\n                    {\n                        \"name\": \"node_name\",\n                        \"in\": \"query\",\n                        \"description\": \"A port where the node which sent or received the p2p message is running\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"A full p2p message\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/p2p\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    },\n    \"components\": {\n        \"schemas\": {\n            \"p2p\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"integer\"\n                    },\n                    \"message\": {\n                        \"type\": \"object\"\n                    },\n                    \"original_bytes\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    \"decrypted_bytes\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    \"error\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"id\"\n                ]\n            },\n            \"p2pBrief\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"integer\"\n                    },\n                    \"timestamp\": {\n                        \"type\": \"integer\"\n                    },\n                    \"remote_addr\": {\n                        \"type\": \"string\"\n                    },\n                    \"source_type\": {\n                        \"type\": \"string\"\n                    },\n                    \"incoming\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"category\": {\n                        \"type\": \"string\"\n                    },\n                    \"kind\": {\n                        \"type\": \"string\"\n                    },\n                    \"message_preview\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"id\",\n                    \"timestamp\",\n                    \"remote_addr\",\n                    \"source_type\",\n                    \"incoming\",\n                    \"category\",\n                    \"kind\",\n                    \"message_preview\"\n                ]\n            }\n        }\n    }\n}"
		}
	},
	"Error": "panic: runtime error: index out of range [0] with length 0"
}