{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/CodeForBaltimore/Bmore-Responsive"
		},
		"file": {
			"name": "swagger.json",
			"path": "swagger.json",
			"content": "{\n  \"openapi\": \"3.0.1\",\n  \"servers\": [\n    {\n      \"description\": \"localhost\",\n      \"url\": \"http://localhost:3001\"\n    }\n  ],\n  \"info\": {\n    \"description\": \"An emergency response and contact management API.\",\n    \"version\": \"1.3.4\",\n    \"title\": \"Bmore Responsive\",\n    \"contact\": {\n      \"email\": \"hello@codeforbaltimore.org\"\n    },\n    \"license\": {\n      \"name\": \"Apache 2.0\",\n      \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n    }\n  },\n  \"tags\": [\n    {\n      \"name\": \"developer\",\n      \"description\": \"Operations available to regular developers\"\n    },\n    {\n      \"name\": \"user\",\n      \"description\": \"Operations related to system users\"\n    },\n    {\n      \"name\": \"userRole\",\n      \"description\": \"Operations related to userRole\"\n    },\n    {\n      \"name\": \"entity\",\n      \"description\": \"Operations related to entities\"\n    },\n    {\n      \"name\": \"contact\",\n      \"description\": \"Operations related to contacts\"\n    },\n    {\n      \"name\": \"csv\",\n      \"description\": \"Operations related to csv\"\n    }\n  ],\n  \"security\": [\n    {\n      \"bearerAuth\": []\n    }\n  ],\n  \"paths\": {\n    \"/health\": {\n      \"get\": {\n        \"security\": [],\n        \"tags\": [\n          \"developer\"\n        ],\n        \"summary\": \"returns a healthcheck\",\n        \"description\": \"This returns simple system information\\n\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"the system healthcheck\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HealthcheckItem\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Server error\"\n          }\n        }\n      }\n    },\n    \"/user/login\": {\n      \"post\": {\n        \"security\": [],\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"logs in a system user\",\n        \"description\": \"The system login endpoint.\",\n        \"requestBody\": {\n          \"description\": \"The body of the payload\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"email\",\n                  \"password\"\n                ],\n                \"properties\": {\n                  \"email\": {\n                    \"type\": \"string\",\n                    \"format\": \"email\",\n                    \"example\": \"test@test.test\"\n                  },\n                  \"password\": {\n                    \"type\": \"string\",\n                    \"example\": \"test\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"login token\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"422\": {\n            \"description\": \"Invalid input\"\n          },\n          \"500\": {\n            \"description\": \"Server error\"\n          }\n        }\n      }\n    },\n    \"/user\": {\n      \"post\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"creates a new user\",\n        \"description\": \"The new user endpoint.  Note that displayname and phone are not written to the database.\",\n        \"requestBody\": {\n          \"description\": \"The body of the payload\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"email\",\n                  \"password\"\n                ],\n                \"properties\": {\n                  \"email\": {\n                    \"type\": \"string\",\n                    \"format\": \"email\",\n                    \"example\": \"homer2.simpson@sfpp.com\"\n                  },\n                  \"password\": {\n                    \"type\": \"string\",\n                    \"format\": \"password\",\n                    \"example\": \"donuts123@A\"\n                  },\n                  \"roles\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"string\",\n                      \"example\": \"user\"\n                    }\n                  },\n                  \"displayName\": {\n                    \"type\": \"string\",\n                    \"example\": \"Homer Simpson\"\n                  },\n                  \"phone\": {\n                    \"type\": \"string\",\n                    \"example\": \"1234567890\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"user created\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"422\": {\n            \"description\": \"Invalid input\"\n          },\n          \"500\": {\n            \"description\": \"Server error\"\n          }\n        }\n      },\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"returns all system users\",\n        \"description\": \"Returns all users within the system and their information.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"header\",\n            \"name\": \"token\",\n            \"required\": false,\n            \"deprecated\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3QiLCJpYXQiOjE1ODA3NTM0MDUsImV4cCI6MTU4MDgzOTgwNX0.Q6W7Vo6By35yjZBeLKkk96s8LyqIE2G39AG1H3LRD9M\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"List of all users in the system and their information.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"_meta\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"total\": {\n                          \"type\": \"number\",\n                          \"example\": 1\n                        }\n                      }\n                    },\n                    \"results\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/UserItem\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"500\": {\n            \"description\": \"Server error\"\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"updates any single system user\",\n        \"description\": \"By sending a valid payload you can update a user.  Note that displayname and phone are not stored in the database.\",\n        \"parameters\": [\n          {\n            \"in\": \"header\",\n            \"name\": \"token\",\n            \"required\": false,\n            \"deprecated\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3QiLCJpYXQiOjE1ODA3NTM0MDUsImV4cCI6MTU4MDgzOTgwNX0.Q6W7Vo6By35yjZBeLKkk96s8LyqIE2G39AG1H3LRD9M\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"The body of the payload\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"email\",\n                  \"password\"\n                ],\n                \"properties\": {\n                  \"email\": {\n                    \"type\": \"string\",\n                    \"format\": \"email\",\n                    \"example\": \"homer.simpson@sfpp.com\"\n                  },\n                  \"password\": {\n                    \"type\": \"string\",\n                    \"format\": \"password\",\n                    \"example\": \"donuts\"\n                  },\n                  \"roles\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"string\",\n                      \"example\": \"admin\"\n                    }\n                  },\n                  \"displayName\": {\n                    \"type\": \"string\",\n                    \"example\": \"Homer Simpson\"\n                  },\n                  \"phone\": {\n                    \"type\": \"string\",\n                    \"example\": \"1234567890\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"user updated\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"422\": {\n            \"description\": \"Invalid input\"\n          },\n          \"500\": {\n            \"description\": \"Server error\"\n          }\n        }\n      }\n    },\n    \"/user/{email}\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"returns a single system user\",\n        \"description\": \"By passing the username, you can lookup a user.\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"email\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"email\"\n            },\n            \"required\": true,\n            \"description\": \"email of the user\"\n          },\n          {\n            \"in\": \"header\",\n            \"name\": \"token\",\n            \"required\": false,\n            \"deprecated\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3QiLCJpYXQiOjE1ODA3NTM0MDUsImV4cCI6MTU4MDgzOTgwNX0.Q6W7Vo6By35yjZBeLKkk96s8LyqIE2G39AG1H3LRD9M\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"the user object\",\n            \"content\": {\n              \"session/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserItem\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"422\": {\n            \"description\": \"Invalid input\"\n          },\n          \"500\": {\n            \"description\": \"Server error\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"deletes a single system user\",\n        \"description\": \"By sending a valid payload you can delete a user.\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"email\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"email\"\n            },\n            \"required\": true,\n            \"description\": \"the email of the user to delete.\"\n          },\n          {\n            \"in\": \"header\",\n            \"name\": \"token\",\n            \"required\": false,\n            \"deprecated\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3QiLCJpYXQiOjE1ODA3NTM0MDUsImV4cCI6MTU4MDgzOTgwNX0.Q6W7Vo6By35yjZBeLKkk96s8LyqIE2G39AG1H3LRD9M\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"user deleted\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"422\": {\n            \"description\": \"Invalid input\"\n          },\n          \"500\": {\n            \"description\": \"Server error\"\n          }\n        }\n      }\n    },\n    \"/userRole\": {\n      \"post\": {\n        \"tags\": [\n          \"userRole\"\n        ],\n        \"summary\": \"creates a new user role\",\n        \"description\": \"The new user role endpoint.\",\n        \"parameters\": [\n          {\n            \"in\": \"header\",\n            \"name\": \"token\",\n            \"required\": false,\n            \"deprecated\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3QiLCJpYXQiOjE1ODA3NTM0MDUsImV4cCI6MTU4MDgzOTgwNX0.Q6W7Vo6By35yjZBeLKkk96s8LyqIE2G39AG1H3LRD9M\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"The body of the payload\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"role\"\n                ],\n                \"properties\": {\n                  \"role\": {\n                    \"type\": \"string\",\n                    \"example\": \"test\"\n                  },\n                  \"path\": {\n                    \"type\": \"string\",\n                    \"example\": \"/test\"\n                  },\n                  \"method\": {\n                    \"type\": \"string\",\n                    \"example\": \"GET\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"policy created\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"422\": {\n            \"description\": \"Invalid input\"\n          },\n          \"500\": {\n            \"description\": \"Server error\"\n          }\n        }\n      },\n      \"get\": {\n        \"tags\": [\n          \"userRole\"\n        ],\n        \"summary\": \"returns all system user roles\",\n        \"description\": \"By passing in the appropriate options, you can search for\\navailable user roles in the system\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"header\",\n            \"name\": \"token\",\n            \"required\": false,\n            \"deprecated\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3QiLCJpYXQiOjE1ODA3NTM0MDUsImV4cCI6MTU4MDgzOTgwNX0.Q6W7Vo6By35yjZBeLKkk96s8LyqIE2G39AG1H3LRD9M\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"search results matching criteria\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"500\": {\n            \"description\": \"Server error\"\n          }\n        }\n      }\n    },\n    \"/userRole/delete\": {\n      \"post\": {\n        \"tags\": [\n          \"userRole\"\n        ],\n        \"summary\": \"deletes a single system user role\",\n        \"description\": \"By sending a valid payload you can delete a user role. Note that this is not an idempotent operation. You can't delete the same role twice. To create a role use POST /userRole.\",\n        \"parameters\": [\n          {\n            \"in\": \"header\",\n            \"name\": \"token\",\n            \"required\": false,\n            \"deprecated\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3QiLCJpYXQiOjE1ODA3NTM0MDUsImV4cCI6MTU4MDgzOTgwNX0.Q6W7Vo6By35yjZBeLKkk96s8LyqIE2G39AG1H3LRD9M\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"The body of the payload\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"role\"\n                ],\n                \"properties\": {\n                  \"role\": {\n                    \"type\": \"string\",\n                    \"example\": \"user\"\n                  },\n                  \"path\": {\n                    \"type\": \"string\",\n                    \"example\": \"/entity\"\n                  },\n                  \"method\": {\n                    \"type\": \"string\",\n                    \"example\": \"GET\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Policy deleted\"\n          },\n\t  \"400\": {\n            \"description\": \"Request does not inclue required parameters\"\n\t  },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"422\": {\n            \"description\": \"All fields are present but they contain values which are inconsistent with the current casbin policy\"\n          },\n          \"500\": {\n            \"description\": \"Server error\"\n          }\n        }\n      }\n    },\n    \"/entity\": {\n      \"post\": {\n        \"tags\": [\n          \"entity\"\n        ],\n        \"summary\": \"creates a new entity\",\n        \"description\": \"The new entity endpoint.\",\n        \"requestBody\": {\n          \"description\": \"The body of the payload.  Contact ids must be populated if part of the body with existinct contactids.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"name\",\n                  \"type\"\n                ],\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\",\n                    \"example\": \"The Leftorium\"\n                  },\n                  \"type\": {\n                    \"type\": \"string\",\n                    \"example\": \"Assisted Living Facility\"\n                  },\n                  \"address\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"street\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"string\",\n                          \"example\": \"123 Anyplace St.\"\n                        }\n                      },\n                      \"city\": {\n                        \"type\": \"string\",\n                        \"example\": \"Baltimore\"\n                      },\n                      \"state\": {\n                        \"type\": \"string\",\n                        \"example\": \"MD\"\n                      },\n                      \"zip\": {\n                        \"type\": \"string\",\n                        \"example\": \"12345\"\n                      }\n                    }\n                  },\n                  \"description\": {\n                    \"type\": \"string\",\n                    \"example\": \"Everything for the left handed man, woman, and child!\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"entity created\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"422\": {\n            \"description\": \"Invalid input\"\n          },\n          \"500\": {\n            \"description\": \"Server error\"\n          }\n        }\n      },\n      \"get\": {\n        \"tags\": [\n          \"entity\"\n        ],\n        \"summary\": \"returns all system entities\",\n        \"description\": \"By passing in the appropriate options, you can search for\\navailable entities in the system\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"header\",\n            \"name\": \"token\",\n            \"required\": false,\n            \"deprecated\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3QiLCJpYXQiOjE1ODA3NTM0MDUsImV4cCI6MTU4MDgzOTgwNX0.Q6W7Vo6By35yjZBeLKkk96s8LyqIE2G39AG1H3LRD9M\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"type\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"name\"\n            },\n            \"description\": \"The type of field you are searching on\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"value\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"The Leftorium\"\n            },\n            \"description\": \"The value you are searching for\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"search results matching criteria\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"500\": {\n            \"description\": \"Server error\"\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"entity\"\n        ],\n        \"summary\": \"updates any single system entity\",\n        \"description\": \"By sending a valid payload you can update an entity.\",\n        \"parameters\": [\n          {\n            \"in\": \"header\",\n            \"name\": \"token\",\n            \"required\": false,\n            \"deprecated\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3QiLCJpYXQiOjE1ODA3NTM0MDUsImV4cCI6MTU4MDgzOTgwNX0.Q6W7Vo6By35yjZBeLKkk96s8LyqIE2G39AG1H3LRD9M\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"The body of the payload\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"id\"\n                ],\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"string\",\n                    \"format\": \"uuid\",\n                    \"example\": \"05533f95-b440-4f9d-876d-653636dce0c8\"\n                  },\n                  \"name\": {\n                    \"type\": \"string\",\n                    \"example\": \"The Leftorium\"\n                  },\n                  \"address\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"street\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"string\",\n                          \"example\": \"123 Anyplace St.\"\n                        }\n                      },\n                      \"city\": {\n                        \"type\": \"string\",\n                        \"example\": \"Baltimore\"\n                      },\n                      \"state\": {\n                        \"type\": \"string\",\n                        \"example\": \"MD\"\n                      },\n                      \"zip\": {\n                        \"type\": \"string\",\n                        \"example\": \"12345\"\n                      }\n                    }\n                  },\n                  \"checkIn\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"updatedAt\": {\n                          \"type\": \"string\",\n                          \"format\": \"date-time\",\n                          \"example\": \"2020-01-21T13:45:52.348Z\"\n                        },\n                        \"status\": {\n                          \"type\": \"string\",\n                          \"example\": \"Safe\"\n                        },\n                        \"UserId\": {\n                          \"type\": \"string\",\n                          \"format\": \"uuid\",\n                          \"example\": \"4d9721a2-07f8-45ac-9570-682f4774cfa5\"\n                        },\n                        \"ContactId\": {\n                          \"type\": \"string\",\n                          \"format\": \"uuid\",\n                          \"example\": \"4d9721a2-07f8-45ac-9570-682f4774cfa5\"\n                        },\n                        \"questionnaire\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"id\": {\n                              \"type\": \"number\",\n                              \"example\": 1\n                            },\n                            \"question1\": {\n                              \"type\": \"string\",\n                              \"example\": \"They have left handed can openers\"\n                            },\n                            \"question2\": {\n                              \"type\": \"boolean\",\n                              \"example\": false\n                            }\n                          }\n                        },\n                        \"notes\": {\n                          \"type\": \"string\",\n                          \"example\": \"Everything is okilly dokilly\"\n                        }\n                      }\n                    }\n                  },\n                  \"description\": {\n                    \"type\": \"string\",\n                    \"example\": \"Everything for the left-handed man, woman, and child!\"\n                  },\n                  \"attributes\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"capacity\": {\n                        \"type\": \"number\",\n                        \"example\": 42\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"entity updated\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"422\": {\n            \"description\": \"Invalid input\"\n          },\n          \"500\": {\n            \"description\": \"Server error\"\n          }\n        }\n      }\n    },\n    \"/entity/{entity_id}\": {\n      \"get\": {\n        \"tags\": [\n          \"entity\"\n        ],\n        \"summary\": \"returns a single system entity\",\n        \"description\": \"By passing the entity id, you can lookup an entity.\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"entity_id\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"uuid\"\n            },\n            \"required\": true,\n            \"description\": \"id of the entity\"\n          },\n          {\n            \"in\": \"header\",\n            \"name\": \"token\",\n            \"required\": false,\n            \"deprecated\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3QiLCJpYXQiOjE1ODA3NTM0MDUsImV4cCI6MTU4MDgzOTgwNX0.Q6W7Vo6By35yjZBeLKkk96s8LyqIE2G39AG1H3LRD9M\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"the entity object\",\n            \"content\": {\n              \"session/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/EntityItem\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"422\": {\n            \"description\": \"Invalid input\"\n          },\n          \"500\": {\n            \"description\": \"Server error\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"entity\"\n        ],\n        \"summary\": \"deletes a single system entity\",\n        \"description\": \"By sending a valid payload you can delete a user.\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"entity_id\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"uuid\"\n            },\n            \"required\": true,\n            \"description\": \"the id of the entity to delete.\"\n          },\n          {\n            \"in\": \"header\",\n            \"name\": \"token\",\n            \"required\": false,\n            \"deprecated\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3QiLCJpYXQiOjE1ODA3NTM0MDUsImV4cCI6MTU4MDgzOTgwNX0.Q6W7Vo6By35yjZBeLKkk96s8LyqIE2G39AG1H3LRD9M\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"entity_id deleted\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"422\": {\n            \"description\": \"Invalid input\"\n          },\n          \"500\": {\n            \"description\": \"Server error\"\n          }\n        }\n      }\n    },\n    \"/entity/link/{entity_id}\": {\n      \"post\": {\n        \"tags\": [\n          \"entity\"\n        ],\n        \"summary\": \"links an entity with a list of given contacts\",\n        \"description\": \"By passing the entity id and list of contacts, you can link the entity to each contact.\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"entity_id\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"uuid\"\n            },\n            \"required\": true,\n            \"description\": \"id of the entity\"\n          },\n          {\n            \"in\": \"header\",\n            \"name\": \"token\",\n            \"required\": false,\n            \"deprecated\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3QiLCJpYXQiOjE1ODA3NTM0MDUsImV4cCI6MTU4MDgzOTgwNX0.Q6W7Vo6By35yjZBeLKkk96s8LyqIE2G39AG1H3LRD9M\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"The body of the payload\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"contacts\"\n                ],\n                \"properties\": {\n                  \"contacts\": {\n                    \"type\": \"string\",\n                    \"example\": [\n                      {\n                        \"id\": \"\"\n                      },\n                      {\n                        \"id\": \"\",\n                        \"title\": \"\"\n                      }\n                    ]\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful/already exists\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"422\": {\n            \"description\": \"Invalid input\"\n          },\n          \"500\": {\n            \"description\": \"Server error\"\n          }\n        }\n      }\n    },\n    \"/entity/unlink/{entity_id}\": {\n      \"post\": {\n        \"tags\": [\n          \"entity\"\n        ],\n        \"summary\": \"unlinks an entity from a list of given contacts\",\n        \"description\": \"By passing the entity id and list of contacts, you can unlink the entity from each contact.\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"entity_id\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"uuid\"\n            },\n            \"required\": true,\n            \"description\": \"id of the entity\"\n          },\n          {\n            \"in\": \"header\",\n            \"name\": \"token\",\n            \"required\": false,\n            \"deprecated\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3QiLCJpYXQiOjE1ODA3NTM0MDUsImV4cCI6MTU4MDgzOTgwNX0.Q6W7Vo6By35yjZBeLKkk96s8LyqIE2G39AG1H3LRD9M\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"The body of the payload\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"contacts\"\n                ],\n                \"properties\": {\n                  \"contacts\": {\n                    \"type\": \"string\",\n                    \"example\": [\n                      {\n                        \"id\": \"\"\n                      },\n                      {\n                        \"id\": \"\"\n                      }\n                    ]\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful/already exists\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"422\": {\n            \"description\": \"Invalid input\"\n          },\n          \"500\": {\n            \"description\": \"Server error\"\n          }\n        }\n      }\n    },\n    \"/contact\": {\n      \"post\": {\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"tags\": [\n          \"contact\"\n        ],\n        \"summary\": \"creates a new contact\",\n        \"description\": \"The new contact endpoint.\",\n        \"requestBody\": {\n          \"description\": \"The body of the payload\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"name\"\n                ],\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\",\n                    \"example\": \"The Leftorium\"\n                  },\n                  \"address\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"street\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"string\",\n                          \"example\": \"123 Anyplace St.\"\n                        }\n                      },\n                      \"city\": {\n                        \"type\": \"string\",\n                        \"example\": \"Baltimore\"\n                      },\n                      \"state\": {\n                        \"type\": \"string\",\n                        \"example\": \"MD\"\n                      },\n                      \"zip\": {\n                        \"type\": \"string\",\n                        \"example\": \"12345\"\n                      }\n                    }\n                  },\n                  \"phone\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"address\": {\n                          \"type\": \"string\",\n                          \"example\": 9.87654321E8\n                        },\n                        \"isPrimary\": {\n                          \"type\": \"boolean\",\n                          \"example\": true\n                        }\n                      }\n                    }\n                  },\n                  \"email\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"address\": {\n                          \"type\": \"string\",\n                          \"format\": \"email\",\n                          \"example\": \"hello@leftorium.com\"\n                        },\n                        \"isPrimary\": {\n                          \"type\": \"boolean\",\n                          \"example\": true\n                        }\n                      }\n                    }\n                  },\n                  \"UserID\": {\n                    \"type\": \"string\",\n                    \"format\": \"uuid\",\n                    \"example\": \"abafa852-ecd0-4d57-9083-85f4dfd9c402\"\n                  },\n                  \"entities\": {\n                    \"type\": \"string\",\n                    \"example\": [\n                      {\n                        \"id\": \"\"\n                      },\n                      {\n                        \"id\": \"\",\n                        \"title\": \"\"\n                      }\n                    ]\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"contact created\"\n          },\n          \"400\": {\n            \"description\": \"Bad Request\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"500\": {\n            \"description\": \"Server error\"\n          }\n        }\n      },\n      \"get\": {\n        \"tags\": [\n          \"contact\"\n        ],\n        \"summary\": \"returns all, or searched for, system contacts\",\n        \"description\": \"By passing in the appropriate options, you can search for\\navailable contacts in the system\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"header\",\n            \"name\": \"token\",\n            \"required\": false,\n            \"deprecated\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3QiLCJpYXQiOjE1ODA3NTM0MDUsImV4cCI6MTU4MDgzOTgwNX0.Q6W7Vo6By35yjZBeLKkk96s8LyqIE2G39AG1H3LRD9M\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"type\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"email\"\n            },\n            \"description\": \"The type of field you are searching on\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"value\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"ned.flanders@leftorium.com\"\n            },\n            \"description\": \"The value you are searching for\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"search results matching criteria\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"_meta\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"total\": {\n                          \"type\": \"number\",\n                          \"example\": 1\n                        }\n                      }\n                    },\n                    \"results\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/ContactItem\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid input\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"500\": {\n            \"description\": \"Server error\"\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"contact\"\n        ],\n        \"summary\": \"updates any single system contact\",\n        \"description\": \"By sending a valid payload you can update a contact.\",\n        \"parameters\": [\n          {\n            \"in\": \"header\",\n            \"name\": \"token\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3QiLCJpYXQiOjE1ODA3NTM0MDUsImV4cCI6MTU4MDgzOTgwNX0.Q6W7Vo6By35yjZBeLKkk96s8LyqIE2G39AG1H3LRD9M\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"The body of the payload\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"id\"\n                ],\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"string\",\n                    \"format\": \"uuid\",\n                    \"example\": \"05533f95-b440-4f9d-876d-653636dce0c8\"\n                  },\n                  \"name\": {\n                    \"type\": \"string\",\n                    \"example\": \"The Leftorium\"\n                  },\n                  \"address\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"street\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"string\",\n                          \"example\": \"123 Anyplace St.\"\n                        }\n                      },\n                      \"city\": {\n                        \"type\": \"string\",\n                        \"example\": \"Baltimore\"\n                      },\n                      \"state\": {\n                        \"type\": \"string\",\n                        \"example\": \"MD\"\n                      },\n                      \"zip\": {\n                        \"type\": \"string\",\n                        \"example\": \"12345\"\n                      }\n                    }\n                  },\n                  \"phone\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"address\": {\n                          \"type\": \"string\",\n                          \"example\": 9.87654321E8\n                        },\n                        \"isPrimary\": {\n                          \"type\": \"boolean\",\n                          \"example\": true\n                        }\n                      }\n                    }\n                  },\n                  \"email\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"address\": {\n                          \"type\": \"string\",\n                          \"format\": \"email\",\n                          \"example\": \"hello@leftorium.com\"\n                        },\n                        \"isPrimary\": {\n                          \"type\": \"boolean\",\n                          \"example\": true\n                        }\n                      }\n                    }\n                  },\n                  \"UserID\": {\n                    \"type\": \"string\",\n                    \"format\": \"uuid\",\n                    \"example\": \"abafa852-ecd0-4d57-9083-85f4dfd9c402\"\n                  },\n                  \"entities\": {\n                    \"type\": \"string\",\n                    \"example\": [\n                      {\n                        \"id\": \"\"\n                      },\n                      {\n                        \"id\": \"\",\n                        \"title\": \"\"\n                      }\n                    ]\n                  },\n                  \"attributes\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"notes\": {\n                        \"type\": \"string\",\n                        \"example\": \"Neighbor\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"contact updated\"\n          },\n          \"400\": {\n            \"description\": \"Bad Request\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"500\": {\n            \"description\": \"Server error\"\n          }\n        }\n      }\n    },\n    \"/contact/send\": {\n      \"post\": {\n        \"tags\": [\n          \"contact\"\n        ],\n        \"summary\": \"sends a check-in email to all contacts\",\n        \"description\": \"By sending a request to this endpoint, you can send an email to a single contact or all contacts based on entity or contact id. By sending entity ids you will send an email to each contact associated with each entity id passed. By passed contact ids you will send an email to each contact for each entity they are associated with. By passing nothing you will send an email to every contact and every association.\",\n        \"parameters\": [\n          {\n            \"in\": \"header\",\n            \"name\": \"token\",\n            \"required\": false,\n            \"deprecated\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3QiLCJpYXQiOjE1ODA3NTM0MDUsImV4cCI6MTU4MDgzOTgwNX0.Q6W7Vo6By35yjZBeLKkk96s8LyqIE2G39AG1H3LRD9M\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"The body of the payload\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"entityType\": {\n                    \"type\": \"string\",\n                    \"description\": \"A list of entity (facility) types, the associated contacts will receive emails.\",\n                    \"example\": \"Test\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"contacts emailed\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"results\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"total\": {\n                          \"type\": \"number\",\n                          \"example\": 1\n                        },\n                        \"message\": {\n                          \"type\": \"string\",\n                          \"example\": \"Contacts emailed\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"500\": {\n            \"description\": \"Server error\"\n          }\n        }\n      }\n    },\n    \"/contact/send/{type}/{id}\": {\n      \"post\": {\n        \"tags\": [\n          \"contact\"\n        ],\n        \"summary\": \"sends a check-in email to all contacts\",\n        \"description\": \"By sending a request to this endpoint, you can send an email to a single contact or all contacts based on entity or contact id. By sending entity ids you will send an email to each contact associated with each entity id passed. By passed contact ids you will send an email to each contact for each entity they are associated with. By passing nothing you will send an email to every contact and every association.\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"id\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"uuid\"\n            },\n            \"required\": true,\n            \"description\": \"id of the entity\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"type\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"entity\"\n            },\n            \"required\": true,\n            \"description\": \"type of the id\"\n          },\n          {\n            \"in\": \"header\",\n            \"name\": \"token\",\n            \"required\": false,\n            \"deprecated\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3QiLCJpYXQiOjE1ODA3NTM0MDUsImV4cCI6MTU4MDgzOTgwNX0.Q6W7Vo6By35yjZBeLKkk96s8LyqIE2G39AG1H3LRD9M\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"The body of the payload\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {}\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"contact emailed\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"results\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"totalContacts\": {\n                          \"type\": \"number\",\n                          \"example\": 1\n                        },\n                        \"totalEntities\": {\n                          \"type\": \"number\",\n                          \"example\": 1\n                        },\n                        \"message\": {\n                          \"type\": \"string\",\n                          \"example\": \"Contact email sent\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"500\": {\n            \"description\": \"Server error\"\n          }\n        }\n      }\n    },\n    \"/contact/{contact_id}\": {\n      \"get\": {\n        \"tags\": [\n          \"contact\"\n        ],\n        \"summary\": \"returns a single system contact\",\n        \"description\": \"By passing the contact id, you can lookup a contact.\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"contact_id\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"uuid\"\n            },\n            \"required\": true,\n            \"description\": \"id of the contact\"\n          },\n          {\n            \"in\": \"header\",\n            \"name\": \"token\",\n            \"required\": false,\n            \"deprecated\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3QiLCJpYXQiOjE1ODA3NTM0MDUsImV4cCI6MTU4MDgzOTgwNX0.Q6W7Vo6By35yjZBeLKkk96s8LyqIE2G39AG1H3LRD9M\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"the contact object\",\n            \"content\": {\n              \"session/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ContactItem\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"500\": {\n            \"description\": \"Server error\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"contact\"\n        ],\n        \"summary\": \"deletes a single system contact\",\n        \"description\": \"By sending a valid payload you can delete a user.\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"contact_id\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"uuid\"\n            },\n            \"required\": true,\n            \"description\": \"the id of the contact to delete.\"\n          },\n          {\n            \"in\": \"header\",\n            \"name\": \"token\",\n            \"required\": false,\n            \"deprecated\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3QiLCJpYXQiOjE1ODA3NTM0MDUsImV4cCI6MTU4MDgzOTgwNX0.Q6W7Vo6By35yjZBeLKkk96s8LyqIE2G39AG1H3LRD9M\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"contact_id deleted\"\n          },\n          \"400\": {\n            \"description\": \"Bad Request\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"500\": {\n            \"description\": \"Server error\"\n          }\n        }\n      }\n    },\n    \"/contact/link/{contact_id}\": {\n      \"post\": {\n        \"tags\": [\n          \"contact\"\n        ],\n        \"summary\": \"links a contact with a list of given entities\",\n        \"description\": \"By passing the contact id and list of entities, you can link the contact to each entity.\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"contact_id\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"uuid\"\n            },\n            \"required\": true,\n            \"description\": \"id of the contact\"\n          },\n          {\n            \"in\": \"header\",\n            \"name\": \"token\",\n            \"required\": false,\n            \"deprecated\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3QiLCJpYXQiOjE1ODA3NTM0MDUsImV4cCI6MTU4MDgzOTgwNX0.Q6W7Vo6By35yjZBeLKkk96s8LyqIE2G39AG1H3LRD9M\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"The body of the payload\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"entities\"\n                ],\n                \"properties\": {\n                  \"entities\": {\n                    \"type\": \"string\",\n                    \"example\": [\n                      {\n                        \"id\": \"\"\n                      },\n                      {\n                        \"id\": \"\",\n                        \"title\": \"\"\n                      }\n                    ]\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful/already exists\"\n          },\n          \"400\": {\n            \"description\": \"Bad Request\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"500\": {\n            \"description\": \"Server error\"\n          }\n        }\n      }\n    },\n    \"/contact/unlink/{contact_id}\": {\n      \"post\": {\n        \"tags\": [\n          \"contact\"\n        ],\n        \"summary\": \"unlinks a contact from a list of given entities\",\n        \"description\": \"By passing the contact id and list of entities, you can unlink the contact from each entity.\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"contact_id\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"uuid\"\n            },\n            \"required\": true,\n            \"description\": \"id of the contact\"\n          },\n          {\n            \"in\": \"header\",\n            \"name\": \"token\",\n            \"required\": false,\n            \"deprecated\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3QiLCJpYXQiOjE1ODA3NTM0MDUsImV4cCI6MTU4MDgzOTgwNX0.Q6W7Vo6By35yjZBeLKkk96s8LyqIE2G39AG1H3LRD9M\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"The body of the payload\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"entities\"\n                ],\n                \"properties\": {\n                  \"entities\": {\n                    \"type\": \"string\",\n                    \"example\": [\n                      {\n                        \"id\": \"\"\n                      },\n                      {\n                        \"id\": \"\"\n                      }\n                    ]\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful/already exists\"\n          },\n          \"400\": {\n            \"description\": \"Bad Request\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"500\": {\n            \"description\": \"Server error\"\n          }\n        }\n      }\n    },\n    \"/csv/{model_type}\": {\n      \"get\": {\n        \"tags\": [\n          \"csv\"\n        ],\n        \"summary\": \"returns a comma separated list of the model_type requested\",\n        \"description\": \"By passing the model_type, you are returned a comma separated list of that model_type.  Valid model types are Entity, EntityContact, and Contact.\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"model_type\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"type of model you want a csv data dump for.  Options are Contact, Entity, and EntityContact.\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"filter\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"Ned Flanders\"\n            },\n            \"description\": \"The name filter of field you are searching on\"\n          },\n          {\n            \"in\": \"header\",\n            \"name\": \"token\",\n            \"required\": false,\n            \"deprecated\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3QiLCJpYXQiOjE1ODA3NTM0MDUsImV4cCI6MTU4MDgzOTgwNX0.Q6W7Vo6By35yjZBeLKkk96s8LyqIE2G39AG1H3LRD9M\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"the csv data dump with column headers\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"422\": {\n            \"description\": \"Invalid input\"\n          },\n          \"500\": {\n            \"description\": \"Server error\"\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"securitySchemes\": {\n      \"bearerAuth\": {\n        \"type\": \"http\",\n        \"scheme\": \"bearer\",\n        \"bearerFormat\": \"JWT\"\n      }\n    },\n    \"schemas\": {\n      \"HealthcheckItem\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"uptime\",\n          \"environment\",\n          \"version\",\n          \"requestId\"\n        ],\n        \"properties\": {\n          \"uptime\": {\n            \"type\": \"string\",\n            \"example\": \"42:42:42\"\n          },\n          \"environment\": {\n            \"type\": \"string\",\n            \"example\": \"dev\"\n          },\n          \"version\": {\n            \"type\": \"string\",\n            \"example\": \"0.0.1\"\n          },\n          \"requestId\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"example\": \"602e1bd9-3eb1-4a26-a0d1-6bf08e8c0a66\"\n          }\n        }\n      },\n      \"UserItem\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"email\"\n        ],\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"example\": \"4d9721a2-07f8-45ac-9570-682f4774cfa5\"\n          },\n          \"email\": {\n            \"type\": \"string\",\n            \"format\": \"email\",\n            \"example\": \"homer.simpson@sfpp.com\"\n          },\n          \"displayNamme\": {\n            \"type\": \"string\",\n            \"example\": \"Homer Simpson\"\n          },\n          \"phone\": {\n            \"type\": \"string\",\n            \"example\": \"1234567890\"\n          },\n          \"attributes\": {\n            \"type\": \"string\",\n            \"example\": null\n          },\n          \"createdAt\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"example\": \"2020-01-21T13:45:52.348Z\"\n          },\n          \"updatedAt\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"example\": \"2020-01-21T13:45:52.348Z\"\n          },\n          \"roles\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"example\": \"user\"\n            }\n          }\n        }\n      },\n      \"EntityItem\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"example\": \"c2fb852c-17fd-4e2b-9ea4-78128af9a5e9\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"example\": \"The Leftorium\"\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"example\": \"Test\"\n          },\n          \"address\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"address\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\",\n                  \"example\": \"123 Anyplace St.\"\n                }\n              },\n              \"city\": {\n                \"type\": \"string\",\n                \"example\": \"Baltimore\"\n              },\n              \"state\": {\n                \"type\": \"string\",\n                \"example\": \"MD\"\n              },\n              \"zip\": {\n                \"type\": \"string\",\n                \"example\": \"12345\"\n              }\n            }\n          },\n          \"checkIn\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"updatedAt\": {\n                  \"type\": \"string\",\n                  \"format\": \"date-time\",\n                  \"example\": \"2020-01-21T13:45:52.348Z\"\n                },\n                \"status\": {\n                  \"type\": \"string\",\n                  \"example\": \"Safe\"\n                },\n                \"UserId\": {\n                  \"type\": \"string\",\n                  \"format\": \"uuid\",\n                  \"example\": \"4d9721a2-07f8-45ac-9570-682f4774cfa5\"\n                },\n                \"ContactId\": {\n                  \"type\": \"string\",\n                  \"format\": \"uuid\",\n                  \"example\": \"4d9721a2-07f8-45ac-9570-682f4774cfa5\"\n                },\n                \"questionnaire\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"number\",\n                      \"example\": 1\n                    },\n                    \"question1\": {\n                      \"type\": \"string\",\n                      \"example\": \"They have left handed can openers\"\n                    },\n                    \"question2\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    }\n                  }\n                },\n                \"notes\": {\n                  \"type\": \"string\",\n                  \"example\": \"Everything is okilly dokilly\"\n                }\n              }\n            }\n          },\n          \"description\": {\n            \"type\": \"string\",\n            \"example\": \"Everything for the left handed man, woman, and child!\"\n          },\n          \"createdAt\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"example\": \"2020-01-21T13:45:52.348Z\"\n          },\n          \"updatedAt\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"example\": \"2020-01-21T13:45:52.348Z\"\n          }\n        }\n      },\n      \"ContactItem\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"example\": \"abafa852-ecd0-4d57-9083-85f4dfd9c402\"\n          },\n          \"UserID\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"example\": \"abafa852-ecd0-4d57-9083-85f4dfd9c402\"\n          },\n          \"EntityId\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"example\": \"c2fb852c-17fd-4e2b-9ea4-78128af9a5e9\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"example\": \"Ned Flanders\"\n          },\n          \"phone\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"address\": {\n                  \"type\": \"string\",\n                  \"example\": 6.54987321E8\n                },\n                \"isPrimary\": {\n                  \"type\": \"boolean\",\n                  \"example\": true\n                }\n              }\n            }\n          },\n          \"email\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"address\": {\n                  \"type\": \"string\",\n                  \"format\": \"email\",\n                  \"example\": \"ned.flanders@leftorium.com\"\n                },\n                \"isPrimary\": {\n                  \"type\": \"boolean\",\n                  \"example\": true\n                }\n              }\n            }\n          },\n          \"createdAt\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"example\": \"2020-01-21T13:45:52.348Z\"\n          },\n          \"updatedAt\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"example\": \"2020-01-21T13:45:52.348Z\"\n          }\n        }\n      }\n    }\n  }\n}\n"
		}
	},
	"Error": "panic: runtime error: index out of range [0] with length 0"
}