{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/mercadopago/devsite-docs"
		},
		"file": {
			"name": "qr-dynamic.yaml",
			"size": 0,
			"path": "reference/api/qr-dynamic.yaml",
			"byteSize": 15457,
			"content": "openapi: 3.0.0\nservers:\n  - url: https://api.mercadopago.com\ninfo:\n  title: Mercado Pago API Reference\n  version: '1.0'\npaths:\n  /instore/orders/qr/seller/collectors/{user_id}/pos/{external_pos_id}/qrs:\n    post:\n      tags:\n        - $ref: '#/tags/qr-code'\n      summary: Create a QR tramma\n      description: Generates a QR tramma that will be added to an image\n      parameters:\n        - name: user_id\n          in: path\n          description: Find the User ID in your developer dashboard at our devsite\n          required: true\n          schema:\n            type: string\n            example: 446566691\n        - name: external_pos_id\n          in: path\n          description: Custom POS ID associated to the order\n          required: true\n          schema:\n            type: string\n            example: SUC001POS001\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                external_reference:\n                  type: string\n                  description: Custom order ID you can synchronize with your sale system\n                  example: 12345\n                title:\n                  type: string\n                  description: Purchase title.\n                  example: Product order\n                description:\n                  type: string\n                  description: Purchase description.\n                notification_url:\n                  type: string\n                  description: URL where you'd like to receive a payment or merchant_order notification.\n                  example: www.yourserver.com\n                expiration_date:\n                  type: string\n                  description: Expiration date with format \"2020-08-22T16:34:56.559-04:00\"\n                total_amount:\n                  type: number\n                  description: Total amount of the transaction in local currency.\n                  example: 100\n                items:\n                  type: array\n                  description: Information on the products involved in the order.\n                  items:\n                    type: object\n                    properties:\n                      sku_number:\n                        type: string\n                        description: Item code.\n                        example: A123K9191938\n                      category:\n                        type: string\n                        description: Item category.\n                        example: marketplace\n                      title:\n                        type: string\n                        description: Item title.\n                        example: Point Mini\n                      description:\n                        type: string\n                        description: Item description.\n                        example: This is the Point Mini\n                      unit_price:\n                        type: number\n                        description: Unit price of the item (maximum 2 decimals).\n                        example: 100\n                      quantity:\n                        type: number\n                        description: Number of item units.\n                        example: 1\n                      unit_measure:\n                        $ref: '#/components/schemas/unit_measure'\n                      total_amount:\n                        type: string\n                        description: Item total.\n                        example: 100\n                taxes:\n                  type: array\n                  description: Information about the paid taxes\n                  items:\n                    type: object\n                    properties:\n                      value:\n                        type: number\n                        description: Total amount of tax payed. This amount is not included in the total sum of the order\n                        example: 19\n                      type:\n                        type: string\n                        description: type of tax paid\n                        example: IVA\n                sponsor: \n                  type: object\n                  description: Integrator information.\n                  properties:\n                    id:\n                      type: number\n                      description: Mercado Pago's USER_ID of the integrator system.\n                      example: 446566691\n                cash_out:\n                  type: object\n                  description: Cash withdrawal (Commercial contact required)\n                  properties:\n                    amount:\n                      type: number\n                      description: Amount to withdraw in local currency.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  qr_data:\n                    type: string\n                    description: EMVCo tramma for the QR generation\n                    example: 00020101021243650016COM.MERCADOLIBRE02013063638f1192a-5fd1-4180-a180-8bcae3556bc35204000053039865802BR5925IZABEL AAAA DE MELO6007BARUERI62070503***63040B6D\n        '400':\n          description: Error\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  errorKey:\n                    type: string\n                    enum:\n                      - invalid_collectorId--user-id-must-be-a-number-\n                      - invalid_externalPosId--externalPosId-must-be-present-\n                      - \u003e-\n                        invalid_external_reference--external-reference-must-be-present-\n                      - invalid_total_amount--total-amount-must-be-present-\n                      - \u003e-\n                        invalid_items.sku_number--items-sku-number-must-be-string-\n                      - invalid_items.category--items-category-must-be-string-\n                      - invalid_items.title--items-title-must-be-string-\n                      - \u003e-\n                        invalid_items.description--items-description-must-be-string-\n                      - \u003e-\n                        invalid_items.unit_measure--items-unit-measure-must-be-string-\n                      - invalid_items.quantity--items-quantity-must-be-number-\n                      - \u003e-\n                        invalid_items.currency_id--items-currency-id-must-be-string-\n                      - \u003e-\n                        invalid_items.unit_price--items-unit-price-must-be-number-\n                      - \u003e-\n                        invalid_items.total_amount--items-total-amount-must-be-number-\n                      - invalid_title--title-must-be-string-\n                      - invalid_unit_measure--unit-measure-must-be-present-\n                      - invalid_quantity--quantity-must-be-present-\n                      - invalid_unit_price--unit-price-must-be-present-\n                      - invalid_description--description-must-be-present-\n                      - invalid_sponsor.id--sponsor-id-must-be-number-\n                      - invalid_id--sponsor-id-must-be-present-\n                      - invalid_cash_out.amount--cash-out-amount-must-be-number-\n                      - invalid_amount--cash-out-amount-must-be-present-\n                      - \u003e-\n                        error_creating_seller_qr_order--The-cash-out-is-required-when-order-has-no-items-\n                      - \u003e-\n                        invalid_expiration_date--Expiration-date-must-be-a-valid-and-future-date-\n        '500':\n          description: Error\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  errorKey:\n                    type: string\n                    enum:\n                      - in_store_order_creation_error--Failed-to-create-order-\n    put:\n      tags:\n        - $ref: '#/tags/qr-code'\n      summary: Create an order\n      description: Generates a payment order with all the payment information for your product or service and associate it with the Point of Sale you want. The success response consists of an empty 201 code.\n      parameters:\n        - name: user_id\n          in: path\n          description: Find the User ID in your developer dashboard at our devsite\n          required: true\n          schema:\n            type: string\n            example: 446566691\n        - name: external_pos_id\n          in: path\n          description: Custom POS ID associated to the order\n          required: true\n          schema:\n            type: string\n            example: SUC001POS001\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                external_reference:\n                  type: string\n                  description: Custom order ID you can synchronize with your sale system\n                  example: 12345\n                title:\n                  type: string\n                  description: Purchase title.\n                  example: Product order\n                description:\n                  type: string\n                  description: Purchase description.\n                notification_url:\n                  type: string\n                  description: URL where you'd like to receive a payment or merchant_order notification.\n                  example: www.yourserver.com\n                expiration_date:\n                  type: string\n                  description: Expiration date with format \"2020-08-22T16:34:56.559-04:00\"\n                total_amount:\n                  type: number\n                  description: Total amount of the transaction in local currency.\n                  example: 100\n                items:\n                  type: array\n                  description: Information on the products involved in the order.\n                  items:\n                    type: object\n                    properties:\n                      sku_number:\n                        type: string\n                        description: Item code.\n                        example: A123K9191938\n                      category:\n                        type: string\n                        description: Item category.\n                        example: marketplace\n                      title:\n                        type: string\n                        description: Item title.\n                        example: Point Mini\n                      description:\n                        type: string\n                        description: Item description.\n                        example: This is the Point Mini\n                      unit_price:\n                        type: number\n                        description: Unit price of the item (maximum 2 decimals).\n                        example: 100\n                      quantity:\n                        type: number\n                        description: Number of item units.\n                        example: 1\n                      unit_measure:\n                        $ref: '#/components/schemas/unit_measure'\n                      total_amount:\n                        type: string\n                        description: Item total.\n                        example: 100\n                taxes:\n                  type: array\n                  description: Information about the paid taxes\n                  items:\n                    type: object\n                    properties:\n                      value:\n                        type: number\n                        description: Total amount of tax payed. This amount is not included in the total sum of the order\n                        example: 19\n                      type:\n                        type: string\n                        description: type of tax paid\n                        example: IVA\n                sponsor: \n                  type: object\n                  description: Integrator information.\n                  properties:\n                    id:\n                      type: number\n                      description: Mercado Pago's USER_ID of the integrator system.\n                      example: 446566691\n                cash_out:\n                  type: object\n                  description: Cash withdrawal (Commercial contact required)\n                  properties:\n                    amount:\n                      type: number\n                      description: Amount to withdraw in local currency.\n      responses:\n        '400':\n          description: Error\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  errorKey:\n                    type: string\n                    enum:\n                      - invalid_collectorId--user-id-must-be-a-number-\n                      - invalid_externalPosId--externalPosId-must-be-present-\n                      - \u003e-\n                        invalid_external_reference--external-reference-must-be-present-\n                      - invalid_total_amount--total-amount-must-be-present-\n                      - \u003e-\n                        invalid_items.sku_number--items-sku-number-must-be-string-\n                      - invalid_items.category--items-category-must-be-string-\n                      - invalid_items.title--items-title-must-be-string-\n                      - \u003e-\n                        invalid_items.description--items-description-must-be-string-\n                      - \u003e-\n                        invalid_items.unit_measure--items-unit-measure-must-be-string-\n                      - invalid_items.quantity--items-quantity-must-be-number-\n                      - \u003e-\n                        invalid_items.currency_id--items-currency-id-must-be-string-\n                      - \u003e-\n                        invalid_items.unit_price--items-unit-price-must-be-number-\n                      - \u003e-\n                        invalid_items.total_amount--items-total-amount-must-be-number-\n                      - invalid_title--title-must-be-string-\n                      - invalid_unit_measure--unit-measure-must-be-present-\n                      - invalid_quantity--quantity-must-be-present-\n                      - invalid_unit_price--unit-price-must-be-present-\n                      - invalid_description--description-must-be-present-\n                      - invalid_sponsor.id--sponsor-id-must-be-number-\n                      - invalid_id--sponsor-id-must-be-present-\n                      - invalid_cash_out.amount--cash-out-amount-must-be-number-\n                      - invalid_amount--cash-out-amount-must-be-present-\n                      - \u003e-\n                        error_creating_seller_qr_order--The-cash-out-is-required-when-order-has-no-items-\n                      - \u003e-\n                        invalid_expiration_date--Expiration-date-must-be-a-valid-and-future-date-\n        '500':\n          description: Error\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  errorKey:\n                    type: string\n                    enum:\n                      - in_store_order_creation_error--Failed-to-create-order-\ncomponents:\n  schemas:\n    unit_measure:\n      type: string\n      description: Unit of measure of the item.\n      example: unit\n      enum: \n        - unit -- Unit\n        - pack -- Pack\n"
		}
	},
	"Error": "unmarshal: json: cannot unmarshal object into Go struct field Operation.paths.post.tags of type string"
}