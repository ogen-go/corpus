{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/livechat/livechat-public-docs"
		},
		"file": {
			"name": "specv2.yml",
			"size": 0,
			"path": "src/configs/redoc/customer-accounts-api/specv2.yml",
			"byteSize": 19461,
			"content": "openapi: 3.0.0\ninfo:\n  title: Customer Accounts API\n  description: \u003e-\n    Customer Accounts API is responsible for the authentication and authorization processes of customers in LiveChat.\n  version: 2.0.0\nservers:\n  - url: 'https://accounts.livechat.com/v2/customer'\n    description: Main production server URL\npaths:\n  /info:\n    get:\n      summary: Get token details\n      description: \u003e-\n        Retrieve information about an access token. You can provide the token via authorization or a query string.\n      security:\n        - OAuth2 Bearer Token: []\n      parameters:\n        - in: query\n          name: code\n          schema:\n            type: string\n            example: 'fra-a:vky95357S7KM1E4dXwv1DQ'\n      tags:\n        - Tokens\n      responses:\n        '200':\n          description: 'OK: Returns token details.'\n          content:\n            application/json:\n              schema:\n                description: OAuth 2 `Bearer` token\n                type: object\n                properties:\n                  access_token:\n                    type: string\n                    description: Access token value\n                    example: 'fra-a:vky95357S7KM1E4dXwv1DQ'\n                  client_id:\n                    type: string\n                    format: hex\n                    description: Client ID for which the token was issued\n                    example: c6e4f62e2a2dab12531235b12c5a2a6b\n                  entity_id:\n                    type: string\n                    format: uuid\n                    description: Entity ID for which the token was issued\n                    example: 3aa138c1-c137-41c6-6b26-cface5857378\n                  expires_in:\n                    type: integer\n                    format: uint64\n                    description: Access token lifetime (in seconds)\n                    example: 28800\n                  organization_id:\n                    type: string\n                    format: uuid\n                    description: Organization ID for which the token was issued\n                    example: 390e44e6-f1e6-0368c-z6ddb-74g14508c2e\n                  token_type:\n                    type: string\n                    description: Access token type\n                    example: Bearer\n        '401':\n          description: Unauthorized, missing or invalid authorization\n          content:\n            application/json:\n              schema: \u0026ref_0\n                description: Default error object\n                type: object\n                properties:\n                  oauth_exception:\n                    type: string\n                    example: invalid_request\n                    enum:\n                      - bad_request\n                      - invalid_request\n                      - unauthorized_client\n                      - access_denied\n                      - server_error\n                      - temporarily_unavailable\n                      - unsupported_grant_type\n                      - invalid_grant\n                      - invalid_client\n                      - forbidden\n                      - conflict\n                      - resource_not_found\n                  exception_description:\n                    type: string\n                    example: \u003e-\n                      The request is missing a required parameter, includes an invalid parameter value,\n                      includes a parameter more than once, or is otherwise malformed.\n        '500':\n          description: Server Error\n  /token:\n    post:\n      summary: Create a token\n      description: Creates a new customer access token.\n      security:\n        - {}\n        - Cookie Auth: []\n        - OAuth2 Agent Bearer Token: []\n      tags:\n        - Tokens\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                grant_type:\n                  type: string\n                  enum:\n                    - agent_token\n                    - cookie\n                    - identity_token\n                  example: agent_token\n                  description: Grant type\n                client_id:\n                  type: string\n                  format: hex\n                  description: Client ID for which the token is being issued\n                  example: c6e4f62e2a2dab12531235b12c5a2a6b\n                redirect_uri:\n                  type: string\n                  format: url\n                  example: https://my-application.com\n                  description: \u003e-\n                    Redirect URI; default: the value of the `Origin` header; it can be used only for `grant_type=cookie`\n                organization_id:\n                  type: string\n                  format: uuid\n                  description: Organization ID for which the token is being issued, required only if `grant_type=cookie`\n                  example: 390e44e6-f1e6-0368c-z6ddb-74g14508c2e\n                entity_id:\n                  type: string\n                  format: uuid\n                  description: \u003e-\n                    Entity ID for which the token is being issued; the entity (customer) should already exist;\n                    it can be used only for `grant_type=agent_token`\n                  example: 3aa138c1-c137-41c6-6b26-cface5857378\n                expires_in:\n                  type: integer\n                  format: uint64\n                  description: Access token lifetime (in seconds)\n                  example: 28800\n                code:\n                  type: string\n                  description: \u003e-\n                    Code is an identity transfer token; it can be used only for `grant_type=identity_token`\n                  example: fra-a:vky95357S7KM1E4dXwv1DV\n                code_verifier:\n                  type: string\n                  description: \u003e-\n                    Code verifier, as in OAuth2 PKCE flow; it can be used only for `grant_type=identity_token`\n                  example: y4jtqb2noru3vc23pefs\n\n              required:\n                - grant_type\n                - client_id\n      responses:\n        '200':\n          description: 'OK: Returns token details.'\n          headers:\n            Set-Cookie:\n              schema:\n                type: string\n                description: Customer ID cookie, returned only if `grant_type=cookie`\n                example: \u003e-\n                  __lc_cid=3aa138c1-c137-41c6-6b26-cface5857378; Path=/customer; Domain=accounts.livechat.com;\n                  Expires=Sun, 18 Jun 2023 12:26:02 GMT; Max-Age=63072000; HttpOnly; Secure; SameSite=None\n            \"\\0Set-Cookie\":\n              schema:\n                type: string\n                description: Customer Secure Token cookie, returned only if `grant_type=cookie`\n                example: \u003e-\n                  __lc_cst=87b9d0222e63e349da85535d07c81e1e1fb938de41f4e16e1d9ba5965f25db4aeea46b39d0fb;\n                  Path=/customer; Domain=accounts.livechat.com; Expires=Sun, 18 Jun 2023 12:26:02 GMT;\n                  Max-Age=63072000; HttpOnly; Secure; SameSite=None\n          content:\n            application/json:\n              schema:\n                description: OAuth 2 `Bearer` token\n                type: object\n                properties:\n                  access_token:\n                    type: string\n                    description: Access token value\n                    example: 'fra-a:vky95357S7KM1E4dXwv1DQ'\n                  client_id:\n                    type: string\n                    format: hex\n                    description: Client ID for which the token was issued\n                    example: c6e4f62e2a2dab12531235b12c5a2a6b\n                  entity_id:\n                    type: string\n                    format: uuid\n                    description: Entity ID for which the token was issued\n                    example: 3aa138c1-c137-41c6-6b26-cface5857378\n                  expires_in:\n                    type: integer\n                    format: uint64\n                    description: Access token lifetime (in seconds)\n                    example: 28800\n                  token_type:\n                    type: string\n                    description: Access token type\n                    example: Bearer\n                  organization_id:\n                    type: string\n                    format: uuid\n                    description: Organization ID for which the token was issued\n                    example: 390e44e6-f1e6-0368c-z6ddb-74g14508c2e\n        '401':\n          description: Unauthorized, missing or invalid authorization\n          content:\n            application/json:\n              schema: *ref_0\n        '500':\n          description: Server Error\n    delete:\n      summary: Revoke token\n      description: \u003e-\n        Revoke a token provided via authorization.\n      security:\n        - OAuth2 Bearer Token: []\n      tags:\n        - Tokens\n      responses:\n        '200':\n          description: 'OK: Returns no content.'\n        '401':\n          description: Unauthorized, missing or invalid authorization\n          content:\n            application/json:\n              schema: *ref_0\n        '500':\n          description: Server Error\n  /identity_transfer:\n    post:\n      summary: Create an identity transfer token\n      description: Creates a new identity transfer token, which can be exchanged for a customer access token.\n      security:\n        - OAuth2 Bearer Token: []\n        - OAuth2 Agent Bearer Token: []\n      tags:\n        - Tokens\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                bearer_type:\n                  type: string\n                  enum:\n                    - agent\n                    - customer\n                  example: agent\n                  description: Authorization token type; `agent` for OAuth2 Agent Bearer Token and `customer` for OAuth2 Bearer Token\n                customer_id:\n                  type: string\n                  format: uuid\n                  description: \u003e-\n                    Customer ID for which the identity transfer token is being issued; the customer should already exist;\n                    required only if `bearer_type=agent`\n                  example: 3aa138c1-c137-41c6-6b26-cface5857378\n                client_id:\n                  type: string\n                  format: hex\n                  description: Client ID for which the token is being issued\n                  example: c6e4f62e2a2dab12531235b12c5a2a6b\n                code_challenge:\n                  type: string\n                  description: Code challenge, as in OAuth2 \u003ca href=\"https://developers.livechat.com/docs/authorization/authorizing-api-calls/#pkce-extension\"\u003ePKCE flow.\u003c/a\u003e\n                  example: 9_r7xBQQ8RJ3NOr0AMDBqASrf5ZT41PG1qjuLEYDs-c\n\n              required:\n                - bearer_type\n                - client_id\n      responses:\n        '200':\n          description: 'OK: returns identity transfer token details.'\n          content:\n            application/json:\n              schema:\n                description: Identity transfer token\n                type: object\n                properties:\n                  identity_transfer_token:\n                    type: string\n                    description: Identity transfer token value\n                    example: fra-a:vky95357S7KM1E4dXwv1DV\n                  expires_in:\n                    type: integer\n                    format: uint64\n                    description: Identity transfer token lifetime (in seconds)\n                    example: 3600\n        '401':\n          description: Unauthorized, missing or invalid authorization\n          content:\n            application/json:\n              schema: *ref_0\n        '500':\n          description: Server Error\n\n  /{organization_id}/{group_id}/token/:\n    post:\n      summary: Create a group token\n      description: Creates a new customer access token for a different group within the same organization. Use this token to separate customer identity across groups within one organization, \u003ca href=\"https://developers.livechat.com/docs/authorization/authorizing-api-calls#case-existing-customer-chatting-in-different-groups\"\u003eclick here for more information.\u003c/a\u003e\n      security:\n        - {}\n        - Cookie Auth: []\n        - OAuth2 Agent Bearer Token: []\n      tags:\n        - Tokens\n      parameters:\n        - in: path\n          name: organization_id\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: Unique organization identifier.\n        - in: path\n          name: group_id\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: Unique group identifier.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                grant_type:\n                  type: string\n                  enum:\n                    - agent_token\n                    - cookie\n                    - identity_token\n                  example: agent_token\n                  description: Grant type\n                client_id:\n                  type: string\n                  format: hex\n                  description: Client ID for which the token is being issued\n                  example: c6e4f62e2a2dab12531235b12c5a2a6b\n                redirect_uri:\n                  type: string\n                  format: url\n                  example: https://my-application.com\n                  description: \u003e-\n                    Redirect URI; default: the value of the `Origin` header; it can be used only for `grant_type=cookie`\n                license_id:\n                  type: integer\n                  format: uint64\n                  description: License ID for which the token is being issued, required only if `grant_type=cookie`\n                  example: 2491303\n                entity_id:\n                  type: string\n                  format: uuid\n                  description: \u003e-\n                    Entity ID for which the token is being issued; the entity (customer) should already exist;\n                    it can be used only for `grant_type=agent_token`\n                  example: 3aa138c1-c137-41c6-6b26-cface5857378\n                expires_in:\n                  type: integer\n                  format: uint64\n                  description: Access token lifetime (in seconds)\n                  example: 28800\n                code:\n                  type: string\n                  description: \u003e-\n                    Code is an identity transfer token; it can be used only for `grant_type=identity_token`\n                  example: fra-a:vky95357S7KM1E4dXwv1DV\n                code_verifier:\n                  type: string\n                  description: \u003e-\n                    Code verifier, as in OAuth2 PKCE flow; it can be used only for `grant_type=identity_token`\n                  example: y4jtqb2noru3vc23pefs\n\n              required:\n                - grant_type\n                - client_id\n      responses:\n        '200':\n          description: 'OK: Returns token details.'\n          headers: \n            Set-Cookie:\n              schema: \n                type: string\n                description: Customer ID cookie, returned only if `grant_type=cookie`\n                example: \u003e-\n                  __lc_cid=3aa138c1-c137-41c6-6b26-cface5857378; Path=/customer; Domain=accounts.livechat.com;\n                  Expires=Sun, 18 Jun 2023 12:26:02 GMT; Max-Age=63072000; HttpOnly; Secure; SameSite=None\n            \"\\0Set-Cookie\":\n              schema: \n                type: string\n                description: Customer Secure Token cookie, returned only if `grant_type=cookie`\n                example: \u003e-\n                  __lc_cst=87b9d0222e63e349da85535d07c81e1e1fb938de41f4e16e1d9ba5965f25db4aeea46b39d0fb;\n                  Path=/customer; Domain=accounts.livechat.com; Expires=Sun, 18 Jun 2023 12:26:02 GMT;\n                  Max-Age=63072000; HttpOnly; Secure; SameSite=None\n          content:\n            application/json:\n              schema:\n                description: OAuth 2 `Bearer` token\n                type: object\n                properties:\n                  access_token:\n                    type: string\n                    description: Access token value\n                    example: 'fra-a:vky95357S7KM1E4dXwv1DQ'\n                  client_id:\n                    type: string\n                    format: hex\n                    description: Client ID for which the token was issued\n                    example: c6e4f62e2a2dab12531235b12c5a2a6b\n                  entity_id:\n                    type: string\n                    format: uuid\n                    description: Entity ID for which the token was issued\n                    example: 3aa138c1-c137-41c6-6b26-cface5857378\n                  expires_in:\n                    type: integer\n                    format: uint64\n                    description: Access token lifetime (in seconds)\n                    example: 28800\n                  token_type:\n                    type: string\n                    description: Access token type\n                    example: Bearer\n        '401':\n          description: Unauthorized, missing or invalid authorization\n          content:\n            application/json:\n              schema: \u0026ref_0\n                description: Default error object\n                type: object\n                properties:\n                  oauth_exception:\n                    type: string\n                    example: invalid_request\n                    enum:\n                      - bad_request\n                      - invalid_request\n                      - unauthorized_client\n                      - access_denied\n                      - server_error\n                      - temporarily_unavailable\n                      - unsupported_grant_type\n                      - invalid_grant\n                      - invalid_client\n                      - forbidden\n                      - conflict\n                      - resource_not_found\n                  exception_description:\n                    type: string\n                    example: \u003e-\n                      The request is missing a required parameter, includes an invalid parameter value,\n                      includes a parameter more than once, or is otherwise malformed.\n        '500':\n          description: Server Error\n\n\ncomponents:\n  schemas: {}\n  securitySchemes:\n    OAuth2 Bearer Token:\n      description: This API uses OAuth2 tokens.\n      type: oauth2\n      flows:\n        implicit:\n          authorizationUrl: 'https://accounts.livechat.com/v2/customer'\n    OAuth2 Agent Bearer Token:\n      description: \u003e-\n        This API uses OAuth2 for agents with the Implicit grant flow. \u003ca\n        href=\"https://developers.livechat.com/docs/authorization/authorizing-api-calls/#implicit-grant\"\u003eLearn\n        about the implicit grant flow.\u003c/a\u003e\n      type: oauth2\n      flows:\n        implicit:\n          authorizationUrl: 'https://accounts.livechat.com'\n        authorizationCode:\n          authorizationUrl: 'https://accounts.livechat.com'\n          tokenUrl: 'https://accounts.livechat.com/token'\n    Cookie Auth:\n      type: apiKey\n      in: cookie\n      name:\n        - __lc_cid\n        - __lc_cst\n",
			"canonicalURL": "/github.com/livechat/livechat-public-docs@1ac734a714b8cbece56f1fed9d6fc499348a5ce0/-/blob/src/configs/redoc/customer-accounts-api/specv2.yml",
			"externalURLs": [
				{
					"url": "https://github.com/livechat/livechat-public-docs/blob/1ac734a714b8cbece56f1fed9d6fc499348a5ce0/src/configs/redoc/customer-accounts-api/specv2.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 1: cannot unmarshal !!seq into string"
}