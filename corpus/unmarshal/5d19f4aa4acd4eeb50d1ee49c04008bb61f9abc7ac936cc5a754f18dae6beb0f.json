{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/opengeospatial/weather-on-the-web"
		},
		"file": {
			"name": "wotw_domain.yaml",
			"size": 0,
			"path": "candidate-specification/openapi/wotw_domain.yaml",
			"byteSize": 59784,
			"content": "openapi: 3.0.2\ninfo:\n    title: weather_on_the_web_core\n    description: 'Core methods for Weather on the Web API''s'\n    version: 1.0.0\nservers:\n    -\n        url: 'http://data.example.org/wotw'\n        description: \"\"\npaths:\n    /:\n        get:\n            tags:\n                - Capabilities\n            summary: 'landing page of this API'\n            description: 'The landing page provides links to the API definition, the Conformance statements and the metadata about the feature data in this dataset.'\n            operationId: getLandingPage\n            responses:\n                '200':\n                    description: 'links to the API capabilities'\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/root'\n                        text/html:\n                            schema:\n                                type: string\n            parameters:\n            -\n                $ref: '#/components/parameters/outputFormat'                              \n    /conformance:\n        get:\n            tags:\n                - Capabilities\n            summary: 'information about standards that this API conforms to'\n            description: 'list all requirements classes specified in a standard that the server conforms to'\n            operationId: getRequirementsClasses\n            responses:\n                '200':\n                    description: 'the URIs of all requirements classes supported by the server'\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/req-classes'\n                        text/html:\n                            schema:\n                                type: string\n            parameters:\n              -\n                  $ref: '#/components/parameters/outputFormat'                                \n    /groups:\n        get:\n            tags:\n                - Capabilities\n            summary: 'Provide a list of avialable data groups'\n            operationId: listGroups\n            responses:\n                '200':\n                    description: 'List the available data groups.'\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/groups'\n                        text/html:\n                            schema:\n                                type: string\n                default:\n                    description: 'An error occured.'\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/exception'\n                        text/html:\n                            schema:\n                                type: string\n            parameters:\n              -\n                 $ref: '#/components/parameters/outputFormat'\n    '/groups/{groupId}':\n        get:\n            tags:\n                - Capabilities\n            summary: 'List of links to information available in the group'\n            operationId: groupInfomation\n            responses:\n                '200':\n                    description: 'List the available data for a group.'\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/groups'\n                        text/html:\n                            schema:\n                                type: string\n                default:\n                    description: 'An error occured.'\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/exception'\n                        text/html:\n                            schema:\n                                type: string        \n        parameters:\n            -\n                $ref: '#/components/parameters/groupId'\n            -\n                $ref: '#/components/parameters/bbox'\n            -\n                $ref: '#/components/parameters/time'\n            -\n                $ref: '#/components/parameters/outputFormat'\n    /collections:\n        get:\n            tags:\n                - Capabilities\n            summary: 'List the avialable collections from the service'\n            operationId: listCollections\n            responses:\n                '200':\n                    description: 'Metdata about the weather on the web collections shared by this API.'\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/content'\n                        text/html:\n                            schema:\n                                type: string\n                default:\n                    description: 'An error occured.'\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/exception'\n                        text/html:\n                            schema:\n                                type: string\n        parameters:\n            -\n                $ref: '#/components/parameters/bbox'\n            -\n                $ref: '#/components/parameters/time'\n            -\n                $ref: '#/components/parameters/outputFormat'\n    '/collections/{collectionId}':\n        get:\n            tags:\n                - Metadata\n            summary: 'list data instances of  {collectionId}'\n            description: 'This will provide information about the available instances for the chosen collection Use content negotiation to request HTML or GeoJSON.'\n            operationId: getCollection\n            responses:\n                '200':\n                    description: 'Metadata about the {collectionId} collection shared by this API.'\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/collectionDetail'\n                        text/html:\n                            schema:\n                                type: string\n                default:\n                    description: 'An error occured.'\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/exception'\n                        text/html:\n                            schema:\n                                type: string\n        parameters:\n            -\n                $ref: '#/components/parameters/collectionId'\n            -\n                $ref: '#/components/parameters/outputFormat'                  \n    '/collections/{collectionId}/{instanceId}':\n        get:\n            tags:\n                - Metadata\n            summary: 'list data instances of  {collectionId}'\n            description: 'This will provide metadata for the chosen instance of a collection Use content negotiation to request HTML or GeoJSON.'\n            operationId: getCollectionInstance\n            responses:\n                '200':\n                    description: 'Metadata about the instance of  {collectionId} collection shared by this API.'\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/instanceDetail'\n                        text/html:\n                            schema:\n                                type: string\n                default:\n                    description: 'An error occured.'\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/exception'\n                        text/html:\n                            schema:\n                                type: string\n        parameters:\n            -\n                $ref: '#/components/parameters/collectionId'\n            -\n                $ref: '#/components/parameters/instanceId'\n            -\n                $ref: '#/components/parameters/outputFormat'                \n\n    '/collections/{collectionId}/{instanceId}/point':\n        get:\n            tags:\n                - Data\n            summary: 'Query end point for point queries of instance {instanceId} of collection {collectionId}'\n            description: 'Query end point for point queries'\n            operationId: getDataFromPoint\n            parameters:\n                -\n                    $ref: '#/components/parameters/collectionId'\n                -\n                    $ref: '#/components/parameters/instanceId'\n                -\n                    name: parametername\n                    in: query\n                    description: \"comma delimited list of parameters to retrieve data for.  Valid parameters are\\nlisted in the collections metadata\"\n                    required: false\n                    explode: false\n                    schema:\n                        minItems: 1\n                        type: array\n                        items:\n                            type: string\n                -\n                    name: time\n                    in: query\n                    description: 'Period to return data for in the RFC 3339 profile of ISO 8601, datetime values MUST be defined to seconds i.e. 2019-02-05T21:15:00 (YYYY-MM-DDTHH:MM:SSZ).  A time range MUST be defined as Start_Time/End_Time i.e. (2019-02-05T21:15:00Z/2019-02-06T12:45:00Z) and time range with fixed intervals MUST be defined as Intervals/Start_Time/End_Time i.e. (R6/2019-02-05T21:15:00Z/2019-02-05T22:45:00Z would be 15 minute timesteps between 2019-02-05T21:15:00Z and 019-02-05T22:45:00Z)'\n                    required: false\n                    schema:\n                        format: date-time\n                        type: string\n                -\n                    name: crs\n                    in: query\n                    description: 'The EPSG code for the coordinate system of the X and Y values (i.e. EPSG:3857), if not defined X and Y will default to EPSG:4326 longitude and latitude values'\n                    schema:\n                        type: string\n                -\n                    name: outputFormat\n                    in: query\n                    description: 'Data format to return the query results in (if not specified this will default to CoverageJSON)'\n                    required: false\n                    schema:\n                        enum:\n                            - CoverageJSON\n                            - netCDF\n                            - GML\n                -\n                    name: interpolation\n                    in: query\n                    description: \"This defines the algorithm that identifies the best data match for the requested location\\nThe valid interpolation method values are available in the results of the \\ncapabilities query methods of this API\\n\"\n                    schema:\n                        type: string\n                -\n                    name: coords\n                    in: query\n                    description: \"location(s) to return data for, the coordinates are defined by a Well Known Text\\n(wkt) string. to retrieve a single location :\\n\\nPOINT(x y) i.e. POINT(0,51.48) for Greenwich, London\\n\\nAnd for a list of locations\\n\\nMULTIPOINT((x y),(x1 y1),(x2 y2),(x3 y3))\\n\\ni.e.\\nMULTIPOINT((38.9 -77),(48.85 2.35),(39.92 116.38),(-35.29 149.1),(51.5 -0.1))\\n\\n\\nsee http://portal.opengeospatial.org/files/?artifact_id=25355 and https://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry\\n\\nthe coordinate values will depend on the CRS parameter, if this is not defined\\nthe values will be assumed to WGS85 values (i.e x=longitude and y=latitude)\\n\"\n                    required: true\n                    schema:\n                        type: string\n                -\n                    $ref: '#/components/parameters/outputFormat'                        \n            responses:\n                '200':\n                    description: 'Data ranges required to construct valid queries for the choosen data collection'\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/CoverageJSON'\n                        application/x-netcdf: {}\n                        text/xml: {}\n                default:\n                    description: 'An error occured.'\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/exception'\n                        text/html:\n                            schema:\n                                type: string\n    '/collections/{collectionId}/{instanceId}/polygon':\n        get:\n            tags:\n                - Data\n            summary: 'Query end point for area queries of instance {instanceId} of collection {collectionId} defined by a polygon'\n            description: 'Return the data values for the data Polygon defined by the query parameters'\n            operationId: GetDataFromArea\n            parameters:\n                -\n                    $ref: '#/components/parameters/collectionId'\n                -\n                    $ref: '#/components/parameters/instanceId'\n                -\n                    name: parametername\n                    in: query\n                    description: \"comma delimited list of parameters to retrieve data for.  Valid parameters are\\nlisted in the collections metadata\"\n                    required: false\n                    explode: false\n                    schema:\n                        minItems: 1\n                        type: array\n                        items:\n                            type: string\n                -\n                    name: outputFormat\n                    in: query\n                    description: 'Data format of the returned the data values'\n                    required: true\n                    schema:\n                        enum:\n                            - application/json\n                            - application/x-netcdf\n                            - application/x-grib\n                        type: string\n                -\n                    name: crs\n                    in: query\n                    description: \"Coordinate system that the data should be returned in, defined as an EPSG code \\nvalue e.g. EPSG:4326.  If not specified output will be in the native coordinate \\nsystem of the data\"\n                    required: false\n                    schema:\n                        type: string\n                -\n                    name: coords\n                    in: query\n                    description: \"Only data that has a geometry that intersects the area defined by the polygon\\nare selected. \\n\\nThe polygon is defined using a Well Known Text string following \\n\\ncoords=POLYGON((x y,x1 y1,x2 y2,...,xn yn x y))\\n\\nwhich are values in the coordinate system defined by the crs query parameter \\n(if crs is not defined the values will be assumed to be WGS84 longitude/latitude coordinates).  \\n\\nFor instance a polygon that roughly describes an area that contains \\nSouth West England in WGS84 would look like: \\n\\ncoords=POLYGON((-6.1 50.3,-4.35 51.4,-2.6 51.6,-2.8 50.6,-5.3 49.9,-6.1,50.3))\\n\\nsee http://portal.opengeospatial.org/files/?artifact_id=25355 and https://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry\\n\\nThe coords parameter will only support 2D POLYGON definitions\"\n                    required: true\n                    schema:\n                        type: string\n                -\n                    name: time\n                    in: query\n                    description: \"Either a date-time or a period string that adheres to RFC 3339, Only data that \\nhas a temporal property that intersects the value of time are selected. \\n\\n datetime values MUST be defined to seconds i.e. 2019-02-05T21:15:00 (YYYY-MM-DDTHH:MM:SSZ). A time range MUST be defined as Start_Time/End_Time i.e. (2019-02-05T21:15:00Z/2019-02-06T12:45:00Z) and time range with fixed intervals MUST be defined as Repition/Start_Time/End_Time i.e. (R3/2019-02-05T21:15:00Z/2019-02-05T22:00:00Z would be 15 minute timesteps between 2019-02-05T21:15:00Z and 019-02-05T22:00:00Z) \\n \"\n                    required: false\n                    schema:\n                        type: string\n                -\n                    name: interpolationX\n                    in: query\n                    description: \"This is defined if the query doesn't require data at its native X coordinate resolution, the format is:\\n\\ninterpolationX=R<interpolation resolution>/<interpolation method> e.g. interpolationX=R15/linear\\n\\nThe interpolation resolution is the number of intervals the user requires between the minimum X value of the bounding box and the maximum X value of the bounding box.\\n\\nThe valid interpolation method values are available in the results of the capabilities query methods of this API\\n\\n\"\n                    schema:\n                        type: string\n                -\n                    name: interpolationY\n                    in: query\n                    description: \"This is defined if the query doesn't require data at its native Y coordinate \\nresolution, the format is:\\n\\ninterpolationY=R<interpolation resolution>/<interpolation method> \\ne.g.\\ninterpolationY=R5/linear\\n\\nThe interpolation resolution is the number of intervals the user requires between\\nthe minimum Y value of the bounding box and the maximum Y value of the bounding box.\\n\\nThe valid interpolation method values are available in the results of the \\ncapabilities query methods of this API\\n\"\n                    schema:\n                        type: string\n                -\n                    name: z\n                    in: query\n                    description: \"Define the vertical level to return data from \\ni.e. Z=level\\n\\nfor instance if the 850hPa pressure level is being queried\\n\\nZ=850\\n\\nWhen not specified data from the lowest (i.e. nearest the surface) level of\\ndata in the collection.\\n\"\n                    schema:\n                        type: string\n                -\n                    $ref: '#/components/parameters/outputFormat'                        \n                        \n            responses:\n                '200':\n                    description: 'A coverage'\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/CoverageJSON'\n                        application/x-netcdf:\n                            schema:\n                                format: binary\n                                type: string\n                        application/x-grib:\n                            schema:\n                                format: binary\n                                type: string\n                        text/html:\n                            schema:\n                                type: string\n                default:\n                    description: 'An error occured.'\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/exception'\n                        text/html:\n                            schema:\n                                type: string\n    '/collections/{collectionId}/{instanceId}/trajectory':\n        summary: 'query the collection data'\n        description: 'Return the data requested with the chosen parameters'\n        get:\n            tags:\n                - Data\n            summary: Trajectory query\n            description: 'Returns data for a route based on the values passed in the coordinate query parameters.'\n            operationId: getTrajectoryData\n            responses:\n                '200':\n                    description: Data\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/CoverageJSON'\n                        application/x-netcdf: {}\n                        application/x-grib: {}\n        parameters:\n            -\n                $ref: '#/components/parameters/collectionId'\n            -\n                $ref: '#/components/parameters/instanceId'\n            -\n                name: parametername\n                in: query\n                description: \"comma delimited list of parameters to retrieve data for.  Valid parameters are\\nlisted in the collections metadata\"\n                required: false\n                explode: false\n                schema:\n                    minItems: 1\n                    type: array\n                    items:\n                        type: string\n            -\n                name: crs\n                in: query\n                description: 'The EPSG code for the coordinate system of the X and Y values (i.e. EPSG:3857), if not defined X and Y will default to EPSG:4326 longitude and latitude values'\n                schema:\n                    type: string\n            -\n                name: outputFormat\n                in: query\n                description: 'Data format to return the query results in (if not specified this will default to CoverageJSON)'\n                required: false\n                schema:\n                    enum:\n                        - CoverageJSON\n                        - netCDF\n                        - GML\n            -\n                name: interpolationX\n                in: query\n                description: \"This is defined if the query doesn't require data at its native resolution, the format is:\\n\\ninterpolationX=R<interpolation resolution>/<interpolation method> \\n\\ne.g. \\ninterpolationX=R15/linear\\n\\nThe interpolation resolution is the number of intervals the user requires widthin the defined corridor_width value\\n\\nThe valid interpolation method values are available in the collection metadata\\n\\n\"\n                schema:\n                    type: string\n            -\n                name: interpolationZ\n                in: query\n                description: \"\\n\\nBusiness rule for interpolating the requested height coordinates from the available \\ndata. The format is R{interpolated resolution}/{interpolation method}\\n\\nexample:\\n\\n\\ninterpolationZ=R10/log_pressure\\n\\nWould request the 10 vertical levels within the range defined in the corridor_height parameter.\\n\\nA list of valid interpolation methods for the coordinate will be listed by the \\ncapabilites response from the API\\n\"\n                schema:\n                    type: string\n            -\n                name: collectionid\n                in: path\n                description: 'Unique idenfifier for the collection'\n                required: true\n                schema:\n                    type: string\n            -\n                name: coords\n                in: query\n                description: \"Coordinates which describe the path to return data for, the values are \\ndescribed as a Well Known Text LINESTRING.\\n\\nThe query supports either 2D LINESTRINGS(x,y),3D LINESTRINGS(x,y,m) or 4D LINESTRINGS(x,y,z,m) \\nto define a trajectory where:\\n\\nx is the x position, \\ny is the y position, \\nz is the height value, \\nm is the time at the coordinate as an epoc value.\\n\\ni.e. with no level defined or time defined:\\ncoords=LINESTRING (x y,x1 y1,x2 y2)\\n\\ni.e. with a time defined for each point:\\ncoords=LINESTRING (x y m,x1 y1 m1,x2 y2 m2)\\n\\ni.e. with a time and height defined for each point:\\ncoords=LINESTRING (x y z m,x1 y1 z1 m1,x2 y2 z2 m2)\\n\\nExample:\\nAlong a path (collection does not include height values)\\ncoords=LINESTRING (-2.4 52.5 1554015600,-1.4 53.5 1554019200,1.1 53.75 1554023700)\\n\\nAlong a path (collection that includes height values)\\ncoords=LINESTRING (-2.4 52.5 800 1554015600,-1.4 53.5 850 1554019200,1.1 53.75 900 1554023700)\\n \\nThe coordinate values for x, y and z will be defined by the crs value, if no\\ncrs is defined the x and y coordinates will be assumed to be WGS84 latitude and\\nlongitude values and any z coordinate default to the units of the source data.\\n\\nsee http://portal.opengeospatial.org/files/?artifact_id=25355 and https://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry\\nand https://en.wikipedia.org/wiki/Unix_time\"\n                required: true\n                schema:\n                    type: string\n            -\n                name: corridor_width\n                in: query\n                description: \"Defines the distance around the defined coordinates to retreive data for with\\nthe units that the distance is measure in:\\n\\ncorridor_width=<width_value>/<width_units>\\n\\ni.e.\\ncorridor_width=50/km\\n\\nValid width units will be defined in the Collection metadata, if no units are defined in the metadata then the width values will be based\\non the native coordinate system.\\n\\n\\n\\n\\n\"\n                schema:\n                    type: string\n            -\n                name: corridor_height\n                in: query\n                description: \"Defines the distance around the defined coordinates to retreive data for with\\nthe units that the distance is measure in:\\n\\ncorridor_height=<height_value>/<height_units>\\n\\ni.e.\\ncorridor_height=50/hPa\\n\\nValid height units will be defined in the Collection metadata, if no units are defined in the metadata then the height values will be based\\non the native coordinate system.\\n\"\n                schema:\n                    type: string\n            -\n                $ref: '#/components/parameters/outputFormat'                        \n                    \ncomponents:\n    schemas:\n        exception:\n            required:\n                - code\n            type: object\n            properties:\n                code:\n                    type: string\n                description:\n                    type: string\n        root:\n            required:\n                - links\n            type: object\n            properties:\n                links:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/link'\n                    example:\n                        -\n                            href: 'http://data.example.org/'\n                            rel: self\n                            type: application/json\n                            title: 'this document'\n                        -\n                            href: 'http://data.example.org/api'\n                            rel: service\n                            type: application/openapi+json;version=3.0\n                            title: 'the API definition'\n                        -\n                            href: 'http://data.example.org/conformance'\n                            rel: conformance\n                            type: application/json\n                            title: 'WFS 3.0 conformance classes implemented by this server'\n                        -\n                            href: 'http://data.example.org/groups'\n                            rel: data\n                            type: application/json\n                            title: 'List of available groups'\n                        -\n                            href: 'http://data.example.org/collections'\n                            rel: data\n                            type: application/json\n                            title: 'List the available collections'\n\n        req-classes:\n            required:\n                - conformsTo\n            type: object\n            properties:\n                conformsTo:\n                    type: array\n                    items:\n                        type: string\n                    example:\n                        - 'http://www.opengis.net/spec/wfs-1/3.0/req/core'\n                        - 'http://www.opengis.net/spec/wfs-1/3.0/req/oas30'\n                        - 'http://www.opengis.net/spec/wfs-1/3.0/req/html'\n                        - 'http://www.opengis.net/spec/wfs-1/3.0/req/geojson'\n        bbox:\n          type: array\n          minItems: 4\n          maxItems: 6\n          items:\n            type: number                        \n        link:\n            required:\n                - href\n            type: object\n            properties:\n                href:\n                    type: string\n                rel:\n                    type: string\n                    example: prev\n                type:\n                    type: string\n                    example: application/geo+json\n                hreflang:\n                    type: string\n                    example: en\n        groups:\n            required:\n                - links\n                - members\n            type: object\n            properties:\n                links:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/link'\n                    example:\n                        -\n                            href: 'http://data.example.org/collections.json'\n                            rel: self\n                            type: application/json\n                            title: 'this document'\n                        -\n                            href: 'http://data.example.org/collections.html'\n                            rel: alternate\n                            type: text/html\n                            title: 'this document as HTML'\n                        -\n                            href: 'http://schemas.example.org/1.0/foobar.xsd'\n                            rel: describedBy\n                            type: application/xml\n                            title: 'XML schema for Acme Corporation data'\n                members:\n                    type: array\n                    items:\n                      type: array\n                      items:\n                         $ref: '#/components/schemas/link'\n        content:\n            required:\n                - links\n                - collections\n            type: object\n            properties:\n                links:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/link'\n                    example:\n                        -\n                            href: 'http://data.example.org/collections.json'\n                            rel: self\n                            type: application/json\n                            title: 'this document'\n                        -\n                            href: 'http://data.example.org/collections.html'\n                            rel: alternate\n                            type: text/html\n                            title: 'this document as HTML'\n                        -\n                            href: 'http://schemas.example.org/1.0/foobar.xsd'\n                            rel: describedBy\n                            type: application/xml\n                            title: 'XML schema for Acme Corporation data'\n                collections:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/collectionInfo'\n\n        collectionInfo:\n            required:\n                - id\n                - links\n            type: object\n            properties:\n                id:\n                    description: 'identifier for the instance of the collection'\n                    type: string\n                    example: '2019-08-01T00:00:00Z'\n                title:\n                    description: 'human readable title for the collection instance'\n                    type: string\n                    example: '2019-08-01T00:00:00Z model run'\n                description:\n                    description: 'a description of the collection instance'\n                    type: string\n                    example: 'Global surface values from the 2019-08-01T00:00:00Z model run'\n                links:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/link'\n                    example:\n                        -\n                            href: 'http://data.example.org/collections/observations'\n                            rel: item\n                            type: application/geo+json\n                            title: 'Observation data'\n                        -\n                            href: 'http://example.org/concepts/building.html'\n                            rel: describedBy\n                            type: text/html\n                            title: 'List of available observation types'\n                extent:\n                    $ref: '#/components/schemas/bbox'\n                crs:\n                    description: 'The coordinate reference systems in which geometries may be retrieved. Coordinate reference systems are identified by a URI. The first coordinate reference system is the coordinate reference system that is used by default. This is always \"http://www.opengis.net/def/crs/OGC/1.3/CRS84\", i.e. WGS84 longitude/latitude.'\n                    default:\n                        - 'http://www.opengis.net/def/crs/OGC/1.3/CRS84'\n                    type: array\n                    items:\n                        type: string\n        collectionDetail:\n            required:\n                - links\n                - instances\n            type: object\n            properties:\n                links:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/link'\n                    example:\n                        -\n                            href: 'http://data.example.org/collections/observations'\n                            rel: item\n                            type: application/geo+json\n                            title: 'Observation data'\n                        -\n                            href: 'http://example.org/concepts/building.html'\n                            rel: describedBy\n                            type: text/html\n                            title: 'List of available observation types'\n                instances:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/instanceInfo'\n        instanceInfo:\n            required:\n                - id\n                - links\n            type: object\n            properties:\n                id:\n                    description: 'identifier for the instance of the collection'\n                    type: string\n                    example: '2019-08-01T00:00:00Z'\n                title:\n                    description: 'human readable title for the collection instance'\n                    type: string\n                    example: '2019-08-01T00:00:00Z model run'\n                description:\n                    description: 'a description of the collection instance'\n                    type: string\n                    example: 'Global surface values from the 2019-08-01T00:00:00Z model run'\n                links:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/link'\n                    example:\n                        -\n                            href: 'http://data.example.org/collections/observations'\n                            rel: item\n                            type: application/geo+json\n                            title: 'Observation data'\n                        -\n                            href: 'http://example.org/concepts/building.html'\n                            rel: describedBy\n                            type: text/html\n                            title: 'List of available observation types'\n                extent:\n                    $ref: 'https://raw.githubusercontent.com/opengeospatial/oapi_common/master/OAPI-Common/openapi/schemas/extent.yaml'\n                crs:\n                    description: 'The coordinate reference systems in which geometries may be retrieved. Coordinate reference systems are identified by a URI. The first coordinate reference system is the coordinate reference system that is used by default. This is always \"http://www.opengis.net/def/crs/OGC/1.3/CRS84\", i.e. WGS84 longitude/latitude.'\n                    default:\n                        - 'http://www.opengis.net/def/crs/OGC/1.3/CRS84'\n                    type: array\n                    items:\n                        type: string\n        instanceDetail:\n            required:\n                - links\n                - collection\n            type: object\n            properties:\n                links:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/link'\n                    example:\n                        -\n                            href: 'http://data.example.org/collections/observations'\n                            rel: item\n                            type: application/geo+json\n                            title: 'Observation data'\n                        -\n                            href: 'http://example.org/concepts/building.html'\n                            rel: describedBy\n                            type: text/html\n                            title: 'List of available observation types'\n                collection:\n                  type: object\n                  properties:\n                    id:\n                        description: 'identifier for the instance of the collection'\n                        type: string\n                        example: '2019-08-01T00:00:00Z'\n                    title:\n                        description: 'human readable title for the collection instance'\n                        type: string\n                        example: '2019-08-01T00:00:00Z model run'\n                    description:\n                        description: 'a description of the collection instance'\n                        type: string\n                        example: 'Global surface values from the 2019-08-01T00:00:00Z model run'\n                    extent:\n                      $ref: '#/components/schemas/collection_extent'\n                    links:\n                      type: array\n                      items:\n                        $ref: '#/components/schemas/link'\n                    parameters:\n                      type: array\n                      items:\n                        $ref: '#/components/schemas/Parameter'\n                    outputCRS:\n                      type: array\n                      items:\n                        $ref: '#/components/schemas/outputCRS'\n                    interpolationX:\n                      description: 'X coordinate interpolation options'\n                      type: array\n                      items:\n                        type: string\n                    interpolationY:\n                      description: 'Y coordinate interpolation options'\n                      type: array\n                      items:\n                        type: string\n                    interpolationZ:\n                      description: 'Z coordinate interpolation options'\n                      type: array\n                      items:\n                        type: string\n                    outputFormat:\n                      description: 'output format options for the query'\n                      type: array\n                      items:\n                        type: string\n\n        collection_extent:\n            description: 'Definition of the geo-temporal extent of the collection instance'\n            required:\n                - dimensions\n                - wkt\n                - horizontal\n            type: object\n            properties:\n                dimensions:\n                    $ref: '#/components/schemas/dimension'\n                wkt:\n                    description: \"Well Known Text description of the collections coordinate reference system\\n\\nsee http://docs.opengeospatial.org/is/12-063r5/12-063r5.html\"\n                    type: string\n                horizontal:\n                    $ref: '#/components/schemas/horizontal'\n                vertical:\n                    $ref: '#/components/schemas/vertical'\n                temporal:\n                    $ref: '#/components/schemas/temporal'\n            example: {\"dimensions\": {\"x\": 92,\"y\": 33,\"z\": 8,\"time\": 98},\n    \"wkt\": \"GEOGCS[\\\"WGS 84\\\",DATUM[\\\"WGS_1984\\\",SPHEROID[\\\"WGS 84\\\",6378137,298.257223563,AUTHORITY[\\\"EPSG\\\",\\\"7030\\\"]],AUTHORITY[\\\"EPSG\\\",\\\"6326\\\"]],PRIMEM[\\\"Greenwich\\\",0,AUTHORITY[\\\"EPSG\\\",\\\"8901\\\"]],UNIT[\\\"degree\\\",0.01745329251994328,AUTHORITY[\\\"EPSG\\\",\\\"9122\\\"]],AUTHORITY[\\\"EPSG\\\",\\\"4326\\\"],TIMEEXTENT[2019-05-28T06:00:00Z,2019-05-30T06:00:00Z],VERTICALEXTENT[2.0,2.0,LENGTHUNIT[\\\"metre\\\",1.0]]]\",\n    \"horizontal\": {\"name\": [\"longitude\",\"latitude\"],\"coordinates\": [\"x\",\"y\"],\"geographic\": \"BBOX[359.875,90.125,-0.125,-90.125]\"},\"vertical\": {\"name\": [\"height_above_ground\"],\"coordinates\": [\"z\"],\"range\": [36.47,99.07]},\"temporal\": {\"name\": \"time\",\"coordinates\": [\"time\"],\"range\": [\"2019-05-28T06:00:00Z\",\"2019-05-28T18:00:00Z\",\"2019-05-29T06:00:00Z\",\"2019-05-29T18:00:00Z\",\"2019-05-30T06:00:00Z\"]}}\n        dimension:\n            title: 'Root Type for dimension'\n            description: 'definition of the resolution of the collection'\n            required:\n                - x\n                - y\n            type: object\n            properties:\n                x:\n                    format: int32\n                    description: 'x coordinate resolution'\n                    type: integer\n                y:\n                    format: int32\n                    description: 'y coordinate resolution'\n                    type: integer\n                z:\n                    format: int32\n                    description: 'vertical level resolution'\n                    type: integer\n                time:\n                    format: int32\n                    description: 'Time step resolution'\n                    type: integer\n            example: {\"x\": 720,\"y\": 360,\"z\": 1,\"time\": 5}\n        horizontal:\n            title: 'Root Type for horizontal'\n            description: 'Definition of the spatial aspects of the collection'\n            required:\n                - coordinates\n                - geographic\n            type: object\n            properties:\n                name:\n                    description: 'A list of the names of the coordinates MUST be in the same order as the values in the coordinates array'\n                    type: array\n                    items: {}\n                coordinates:\n                    description: 'A list of the coordinates'\n                    type: array\n                    items:\n                        type: string\n                        \n                \n                geographic:\n                    description: 'Definition of the area covered by the collection as a Well Know Text Bounding Box'\n                    type: string\n            example: {\"name\": [\"longitude\",\"latitude\"],\"coordinates\": [\"x\",\"y\"],\"geographic\": \"BBOX[359.875,90.125,-0.125,-90.125]\"}\n        vertical:\n            title: 'Root Type for vertical'\n            description: 'Description of the vertical dimensions of the collection '\n            required:\n                - name\n                - coordinates\n                - range\n            type: object\n            properties:\n                name:\n                    description: 'Name of the coordinates'\n                    type: array\n                    items:\n                        type: string\n                coordinates:\n                    description: coordinate\n                    type: array\n                    items:\n                        type: string\n                range:\n                    type: array\n                    items:\n                        type: number\n            example: {\"name\": [\"height_above_ground\"],\"coordinates\": [\"z\"],\"range\": [2]}\n        temporal:\n            title: 'Root Type for temporal'\n            description: 'Description of the time dimensions of the collection'\n            required:\n                - coordinates\n                - name\n                - range\n            type: object\n            properties:\n                name:\n                    description: 'Array of coordinate names MUST be in the same order as the coordinates array'\n                    type: string\n                coordinates:\n                    description: 'Coordinate axes names'\n                    type: array\n                    items:\n                        type: string\n                range:\n                    description: 'List of the available time dimension values in the collection'\n                    type: array\n                    items:\n                        type: string\n            example: {\"name\": \"time\",\"coordinates\": [\"time\"],\"range\": [\"2019-05-28T06:00:00Z\",\"2019-05-28T18:00:00Z\",\"2019-05-29T06:00:00Z\",\"2019-05-29T18:00:00Z\",\"2019-05-30T06:00:00Z\"]}\n        Parameter:\n            title: 'Root Type for Parameter'\n            description: 'Definition of data parameter'\n            required:\n                - type\n                - unit\n                - description\n                - observedProperty\n                - id\n            type: object\n            properties:\n                type:\n                    description: type\n                    enum:\n                        - Parameter\n                description:\n                    $ref: '#/components/schemas/descriptionInfo'\n                unit:\n                    $ref: '#/components/schemas/units'\n                observedProperty:\n                    $ref: '#/components/schemas/ObservedProperty'\n                id:\n                    description: 'Unique ID of the parameter, this is the value used for querying the data'\n                    type: string\n            example: {\"type\" : \"Parameter\",\"id\" : \"sea_ice\",\"description\": {\"en\": \"Sea Ice concentration (ice=1;no ice=0)\"},\"unit\" : {\"label\": {\"en\": \"Ratio\"},\"symbol\": {\"value\": \"1\",\"type\": \"http://www.opengis.net/def/uom/UCUM/\"}},\"observedProperty\" : {\"id\" : \"http://vocab.nerc.ac.uk/standard_name/sea_ice_area_fraction/\",\"label\" : {\"en\": \"Sea Ice Concentration\"}}}\n        units:\n            title: 'Root Type for units'\n            description: 'definition of data units'\n            required:\n                - symbol\n                - label\n            type: object\n            properties:\n                label:\n                  type: object\n                  additionalProperties:\n                    type: string\n                symbol:\n                    $ref: '#/components/schemas/symbol'\n            example: {\"label\": {\"en\": \"<unit Label>\"},\"symbol\": {\"value\": \"<unit symbol>\",\"type\": \"<href to unit metadata description>\"}}\n        symbol:\n            title: 'Root Type for symbol'\n            description: 'Information about the symbol used to describe the units'\n            required:\n                - value\n                - type\n            type: object\n            properties:\n                value:\n                   type: string\n            example: {\"value\": \"hPa\",\"type\": \"http://www.opengis.net/def/uom/UCUM/\"}\n        descriptionInfo:\n            required:\n                - summary\n                - created\n                - axes\n            type: object\n            properties:\n                summary:\n                    description: 'brief description of the collection'\n                    type: string\n                created:\n                    format: dateTime\n                    description: 'time that the coverage collection was created/modified'\n                    type: string\n                axes:\n                    $ref: '#/components/schemas/axesInfo'\n        axesInfo:\n            required:\n                - x\n                - y\n                - t\n            type: object\n            properties:\n                x:\n                    $ref: '#/components/schemas/axesDefInfo'\n                y:\n                    $ref: '#/components/schemas/axesDefInfo'\n                z:\n                    $ref: '#/components/schemas/axesListDefInfo'\n                t:\n                    $ref: '#/components/schemas/axesDefInfo'\n            example: {\"x\": {\"units\": \"some text\",\"lowerBound\": \"some text\",\"upperBound\": \"some text\"},\"y\": {\"units\": \"some text\",\"lowerBound\": \"some text\",\"upperBound\": \"some text\"},\"z\": {\"units\": \"some text\",\"values\": [\"some text\",\"some text\"]},\"t\": {\"units\": \"some text\",\"lowerBound\":\"some text\",\"upperBound\": \"some text\"}}\n        axesDefInfo:\n            description: 'Definition of the axis coordinate range'\n            required:\n                - units\n                - lowerBound\n                - upperBound\n            type: object\n            properties:\n                units:\n                    $ref: '#/components/schemas/units'\n                lowerBound:\n                    description: 'minimum value of the axes'\n                    type: string\n                upperBound:\n                    description: 'maximum value of the axes'\n                    type: string\n            example: {\"units\": {\"label\": {\"en\": \"some text\"},\"symbol\": {\"value\": \"some text\",\"type\": \"some text\"}},\"lowerBound\": \"some text\",\"upperBound\": \"some text\"}\n        axesListDefInfo:\n            description: 'Definition for those axis which are not based on regular intervals'\n            required:\n                - units\n                - values\n            type: object\n            properties:\n                units:\n                    $ref: '#/components/schemas/units'\n                values:\n                    description: 'list of the valid values for the axis'\n                    type: array\n                    items:\n                        type: string\n            example: {\"units\": {\"label\": {\"en\": \"some text\"},\"symbol\": {\"value\": \"some text\",\"type\": \"some text\"}},\"values\": [\"some text\",\"some text\"]}\n        ObservedProperty:\n            title: 'Root Type for ObservedProperty'\n            description: 'Observed property detail'\n            required:\n                - id\n                - label\n            type: object\n            properties:\n                id:\n                    description: \"URI linking to an external registry which contains the definitive definition of\\nthe observed property\"\n                    type: string\n                label:\n                    $ref: '#/components/schemas/descriptionInfo'\n            example: {\"id\": \"http://vocab.nerc.ac.uk/standard_name/sea_ice_area_fraction/\",\"label\": {\"en\": \"Sea Ice Concentration\"}}\n        CoverageJSON:\n            title: 'Root Type for CoverageJSON'\n            description: 'JSON output format '\n            required:\n                - type\n                - domain\n                - parameters\n                - ranges\n            type: object\n            properties:\n                type:\n                    description: 'Coverage domain type'\n                    enum:\n                        - Coverage\n                domain:\n                    $ref: '#/components/schemas/Domain'\n                parameters:\n                    type: object\n                    additionalProperties:\n                      $ref: '#/components/schemas/Parameter'\n                ranges:\n                    type: object\n                    additionalProperties:\n                      $ref: '#/components/schemas/range'\n\n        Domain:\n            title: 'Root Type for Domain'\n            description: 'Coverage geotemporal area description'\n            required:\n                - axes\n                - domainType\n                - type\n            type: object\n            properties:\n                type:\n                    description: Type\n                    enum:\n                        - Domain\n                domainType:\n                    description: 'Domain type'\n                    enum:\n                        - Grid\n                axes:\n                    $ref: '#/components/schemas/axes'\n\n            example: {\"type\" : \"Domain\",\"domainType\" : \"Grid\",\"axes\": {\"x\" : {\"values\": [-10,-5,0] },\"y\" : {\"values\": [40,50] },\"z\" : {\"values\": [ 5] },\"t\" : {\"values\": [\"2010-01-01T00:12:20Z\"] }}}\n        axes:\n            title: 'Root Type for axes'\n            description: 'geotemporal axes for a CoverageJSON domain'\n            required:\n                - t\n                - x\n                - y\n            type: object\n            properties:\n                x:\n                    $ref: '#/components/schemas/numeric_axis_values'\n                y:\n                    $ref: '#/components/schemas/numeric_axis_values'\n                z:\n                    description: 'Z axis coordinates'\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/string_axis_values'\n                    properties:\n                        values:\n                            type: array\n                            items: {}\n                t:\n                    $ref: '#/components/schemas/string_axis_values'\n            example: {\"x\": {\"values\": [-10,-5,0]},\"y\": {\"values\": [40,50]},\"z\": {\"values\": [5]},\"t\": {\"values\": [\"2010-01-01T00:12:20Z\"]}}\n        numeric_axis_values:\n            title: 'Root Type for numeric_axis_values'\n            description: 'numeric coordinates definition'\n            required:\n                - values\n            type: object\n            properties:\n                values:\n                    description: 'Array of numeric values'\n                    type: array\n                    items:\n                        type: number\n            example: [-10,-5,0]\n        string_axis_values:\n            title: 'Root Type for numeric_axis_values'\n            description: 'string coordinates definition'\n            required:\n                - values\n            type: object\n            properties:\n                values:\n                    description: 'Array of numeric values'\n                    type: array\n                    items:\n                        type: string\n            example: [\"2010-01-01T00:12:20Z\",\"2010-01-02T00:12:20Z\"]\n        range:\n            title: 'Root Type for range'\n            description: 'Data values for a parameter'\n            required:\n                - type\n                - dataType\n                - values\n                - axisNames\n            type: object\n            properties:\n                type:\n                    description: 'Definition of the data structure'\n                    enum:\n                        - NdArray\n                dataType:\n                    description: 'Format of the data values in the array'\n                    enum:\n                        - int\n                        - long\n                        - float\n                        - double\n                        - string\n                axisNames:\n                    description: 'References to the axes the data values map to'\n                    type: array\n                    items:\n                        type: string\n                shape:\n                    description: 'Structure of the array data'\n                    type: array\n                    items:\n                        type: number\n                values:\n                    description: 'Parameter data values'\n                    type: array\n                    items: {}\n            example: {\"type\" : \"NdArray\",\"dataType\": \"float\",\"axisNames\": [\"t\",\"z\",\"y\",\"x\"],\"shape\": [1, 1, 2, 3],\"values\" : [ 0.5, 0.6, 0.4, 0.6, 0.2, null ]}\n        outputCRS:\n            description: 'Coordinate reference system definition as Well Known text'\n            type: object\n            properties:\n              id:\n                description: 'unique identifier for the coordinate reference system'\n                type: string\n              wkt:\n                description: 'Well known text definition of the coordinate reference system'\n                type: string\n    parameters:\n        bbox:\n            name: bbox\n            in: query\n            description: \"Only features that have a geometry that intersects the bounding box are selected. The bounding box is provided as four or six numbers, depending on whether the coordinate reference system includes a vertical axis (elevation or depth):\\n* Lower left corner, coordinate axis 1 * Lower left corner, coordinate axis 2 * Lower left corner, coordinate axis 3 (optional) * Upper right corner, coordinate axis 1 * Upper right corner, coordinate axis 2 * Upper right corner, coordinate axis 3 (optional)\\nThe coordinate reference system of the values is WGS84 longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless a different coordinate reference system is specified in the parameter `bbox-crs`.\\nFor WGS84 longitude/latitude the values are in most cases the sequence of minimum longitude, minimum latitude, maximum longitude and maximum latitude. However, in cases where the box spans the antimeridian the first value (west-most box edge) is larger than the third value (east-most box edge).\\nIf a feature has multiple spatial geometry properties, it is the decision of the server whether only a single spatial geometry property is used to determine the extent or all relevant geometries.\\n\"\n            required: false\n            style: form\n            explode: false\n            schema:\n                maxItems: 6\n                minItems: 4\n                type: array\n                items:\n                    type: number\n        time:\n            name: time\n            in: query\n            description: \"Either a date-time or a period string that adheres to RFC 3339. Examples:\\n* A date-time: \\\"2018-02-12T23:20:50Z\\\" * A period: \\\"2018-02-12T00:00:00Z/2018-03-18T12:31:12Z\\\" or \\\"2018-02-12T00:00:00Z/P1M6DT12H31M12S\\\"\\nOnly features that have a temporal property that intersects the value of `time` are selected.\\nIf a feature has multiple temporal properties, it is the decision of the server whether only a single temporal property is used to determine the extent or all relevant temporal properties.\"\n            required: false\n            style: form\n            explode: false\n            schema:\n                type: string\n        collectionId:\n            name: collectionId\n            in: path\n            description: 'Identifier (id) of a specific collection'\n            required: true\n            schema:\n                type: string\n        groupId:\n            name: groupId\n            in: path\n            description: 'Identifier (name) of a specific group'\n            required: true\n            schema:\n                type: string\n        instanceId:\n            name: instanceId\n            in: path\n            description: 'Identifier (id) of a specific instance of a collection'\n            required: true\n            schema:\n                type: string\n        outputFormat:\n            name: outputFormat\n            in: query\n            description: 'Format to return query results in'\n            required: false\n            schema:\n                type: string\n\ntags:\n    -\n        name: Capabilities\n        description: 'Essential characteristics of the information available from the API.'\n    -\n        name: Metadata\n        description: 'Essential characteristics of the collection including information about the data.'\n    -\n        name: Data\n        description: 'Data queries.'\n",
			"canonicalURL": "/github.com/opengeospatial/weather-on-the-web@7cab134af0639c54d9fb49472b5278582aeedc0d/-/blob/candidate-specification/openapi/wotw_domain.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/opengeospatial/weather-on-the-web/blob/7cab134af0639c54d9fb49472b5278582aeedc0d/candidate-specification/openapi/wotw_domain.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: json: line 1:5500: json: cannot unmarshal Go value of type ogen.Spec: spec: json: cannot unmarshal JSON boolean into Go value of type string"
}