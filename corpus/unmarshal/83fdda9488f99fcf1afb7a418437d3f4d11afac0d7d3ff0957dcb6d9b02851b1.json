{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/hirotaka/supabase-ja"
		},
		"file": {
			"name": "api_v0_openapi.json",
			"size": 0,
			"path": "spec/api_v0_openapi.json",
			"byteSize": 211332,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"paths\": {\n    \"/platform/login\": {\n      \"get\": {\n        \"operationId\": \"LoginController_redirectToDashboardHomepage\",\n        \"summary\": \"Redirects to dashboard homepage\",\n        \"parameters\": [],\n        \"responses\": { \"200\": { \"description\": \"\" } }\n      }\n    },\n    \"/platform/notifications\": {\n      \"get\": {\n        \"operationId\": \"NotificationsController_getNotifications\",\n        \"summary\": \"Get notifications\",\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"#/components/schemas/Notification\" }\n                }\n              }\n            }\n          },\n          \"500\": { \"description\": \"Failed to retrieve notifications\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      },\n      \"patch\": {\n        \"operationId\": \"NotificationsController_updateNotifications\",\n        \"summary\": \"Update notifications\",\n        \"parameters\": [],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateNotificationsBody\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"#/components/schemas/Notification\" }\n                }\n              }\n            }\n          },\n          \"500\": { \"description\": \"Failed to update notifications\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/feedback/send\": {\n      \"post\": {\n        \"operationId\": \"SendFeedbackController_sendFeedback\",\n        \"summary\": \"Send feedback\",\n        \"parameters\": [],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/SendFeedbackBody\" }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to send feedback\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/users/{gotrue_id}/roles/{role_id}\": {\n      \"post\": {\n        \"operationId\": \"SubjectRoleController_assignRoleToSubject\",\n        \"summary\": \"Assigns the given role to the given subject\",\n        \"parameters\": [\n          {\n            \"name\": \"gotrue_id\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"role_id\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"201\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/SubjectRoleParams\" }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Failed to assign the given role to the given subject\"\n          }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      },\n      \"delete\": {\n        \"operationId\": \"SubjectRoleController_unassignRoleFromSubject\",\n        \"summary\": \"Unassigns the given role from the given subject\",\n        \"parameters\": [\n          {\n            \"name\": \"gotrue_id\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"role_id\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/SubjectRoleParams\" }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Failed to unassign the given role from the given subject\"\n          }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/auth/{ref}/config\": {\n      \"get\": {\n        \"operationId\": \"GoTrueConfigController_getGoTrueConfig\",\n        \"summary\": \"Gets GoTrue config\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GetGoTrueConfigResponse\"\n                }\n              }\n            }\n          },\n          \"500\": { \"description\": \"Failed to retrieve GoTrue config\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      },\n      \"patch\": {\n        \"operationId\": \"GoTrueConfigController_updateGoTrueConfig\",\n        \"summary\": \"Updates GoTrue config\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateGoTrueConfigBody\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/GoTrueConfig\" }\n              }\n            }\n          },\n          \"500\": { \"description\": \"Failed to update GoTrue config\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/auth/{ref}/invite\": {\n      \"post\": {\n        \"operationId\": \"InviteController_sendInvite\",\n        \"summary\": \"Sends an invite to the given email\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/UserBody\" }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": { \"schema\": { \"type\": \"object\" } }\n            }\n          },\n          \"403\": { \"description\": \"\" },\n          \"500\": {\n            \"description\": \"Failed to send an invite to the given email\"\n          }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/auth/{ref}/magiclink\": {\n      \"post\": {\n        \"operationId\": \"MagicLinkController_sendMagicLink\",\n        \"summary\": \"Sends a magic link to the given email\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/UserBody\" }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": { \"schema\": { \"type\": \"object\" } }\n            }\n          },\n          \"403\": { \"description\": \"\" },\n          \"500\": {\n            \"description\": \"Failed to send a magic link to the given email\"\n          }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/auth/{ref}/otp\": {\n      \"post\": {\n        \"operationId\": \"OtpController_sendOtp\",\n        \"summary\": \"Sends an OTP to the given phone number\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/UserBody\" }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": { \"schema\": { \"type\": \"object\" } }\n            }\n          },\n          \"403\": { \"description\": \"\" },\n          \"500\": {\n            \"description\": \"Failed to send an OTP to the given phone number\"\n          }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/auth/{ref}/recover\": {\n      \"post\": {\n        \"operationId\": \"RecoverController_sendRecover\",\n        \"summary\": \"Sends a recovery email to the given email\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/UserBody\" }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": { \"schema\": { \"type\": \"object\" } }\n            }\n          },\n          \"403\": { \"description\": \"\" },\n          \"500\": {\n            \"description\": \"Failed to send a recovery email to the given email\"\n          }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/auth/{ref}/templates/{template}\": {\n      \"get\": {\n        \"operationId\": \"TemplateController_getTemplate\",\n        \"summary\": \"Gets GoTrue template\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"template\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"schema\": {\n              \"enum\": [\n                \"confirmation\",\n                \"email-change\",\n                \"invite\",\n                \"magic-link\",\n                \"recovery\"\n              ],\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": { \"schema\": { \"type\": \"string\" } }\n            }\n          },\n          \"500\": { \"description\": \"Failed to retrieve GoTrue template\" }\n        }\n      }\n    },\n    \"/platform/auth/{ref}/users\": {\n      \"get\": {\n        \"operationId\": \"UsersController_getUsers\",\n        \"summary\": \"Gets users\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          },\n          {\n            \"name\": \"keywords\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"limit\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"offset\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": { \"description\": \"\" },\n          \"403\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to retrieve users\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      },\n      \"delete\": {\n        \"operationId\": \"UsersController_deleteUser\",\n        \"summary\": \"Delete user with given ID\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/UserBody\" }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": { \"schema\": { \"type\": \"object\" } }\n            }\n          },\n          \"403\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to delete user\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/database/{ref}/backups\": {\n      \"get\": {\n        \"operationId\": \"BackupsController_getBackups\",\n        \"summary\": \"Gets project backups\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BackupsResponse\" }\n              }\n            }\n          },\n          \"500\": { \"description\": \"Failed to get project backups\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/database/{ref}/backups/download\": {\n      \"post\": {\n        \"operationId\": \"BackupsController_downloadBackup\",\n        \"summary\": \"Download project backup\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/DownloadBackupBody\" }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/DownloadBackupResponse\"\n                }\n              }\n            }\n          },\n          \"500\": { \"description\": \"Failed to download project backup\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/database/{ref}/backups/restore\": {\n      \"post\": {\n        \"operationId\": \"BackupsController_restoreBackup\",\n        \"summary\": \"Restore project backup\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/RestoreBackupBody\" }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": { \"schema\": { \"type\": \"object\" } }\n            }\n          },\n          \"500\": { \"description\": \"Failed to restore project backup\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/database/{ref}/backups/pitr\": {\n      \"post\": {\n        \"operationId\": \"BackupsController_restorePointInTimeBackup\",\n        \"summary\": \"Restore project to a previous point in time\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/PointInTimeRestoreBody\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": { \"schema\": { \"type\": \"object\" } }\n            }\n          },\n          \"500\": {\n            \"description\": \"Failed to restore project to a previous point in time\"\n          }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/database/{ref}/hook-logs\": {\n      \"get\": {\n        \"operationId\": \"HooksController_getHookLogs\",\n        \"summary\": \"Gets hook logs with the given ID\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          },\n          {\n            \"name\": \"id\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"schema\": { \"type\": \"number\" }\n          },\n          {\n            \"name\": \"limit\",\n            \"required\": false,\n            \"in\": \"query\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"offset\",\n            \"required\": false,\n            \"in\": \"query\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"x-connection-encrypted\",\n            \"required\": true,\n            \"in\": \"header\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": { \"schema\": { \"type\": \"object\" } }\n            }\n          },\n          \"403\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to get hook logs with the given ID\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/database/{ref}/hook-enable\": {\n      \"post\": {\n        \"operationId\": \"HooksController_enableHooks\",\n        \"summary\": \"Enables hooks on the project\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          },\n          {\n            \"name\": \"x-connection-encrypted\",\n            \"required\": true,\n            \"in\": \"header\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"201\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": { \"schema\": { \"type\": \"object\" } }\n            }\n          },\n          \"403\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to enable hooks on the project\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/organizations\": {\n      \"get\": {\n        \"operationId\": \"OrganizationsController_getOrganizations\",\n        \"summary\": \"Gets user's organizations\",\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"#/components/schemas/Organization\" }\n                }\n              }\n            }\n          },\n          \"500\": { \"description\": \"Failed to retrieve user's organizations\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      },\n      \"post\": {\n        \"operationId\": \"OrganizationsController_createOrganization\",\n        \"summary\": \"Creates organization\",\n        \"parameters\": [],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CreateOrganizationBody\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/Organization\" }\n              }\n            }\n          },\n          \"500\": { \"description\": \"Failed to create organization\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/organizations/{slug}\": {\n      \"patch\": {\n        \"operationId\": \"OrganizationSlugController_updateOrganization\",\n        \"summary\": \"Updates organization\",\n        \"parameters\": [\n          {\n            \"name\": \"slug\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Organization slug\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateOrganizationBody\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/Organization\" }\n              }\n            }\n          },\n          \"500\": { \"description\": \"Failed to update organization\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      },\n      \"delete\": {\n        \"operationId\": \"OrganizationSlugController_deleteOrganization\",\n        \"summary\": \"Deletes organization\",\n        \"parameters\": [\n          {\n            \"name\": \"slug\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Organization slug\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/RemovedOrganization\" }\n              }\n            }\n          },\n          \"403\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to delete organization\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/organizations/{slug}/customer\": {\n      \"get\": {\n        \"operationId\": \"CustomerController_getCustomer\",\n        \"summary\": \"Gets the Stripe customer\",\n        \"parameters\": [\n          {\n            \"name\": \"slug\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Organization slug\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to retrieve the Stripe customer\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      },\n      \"patch\": {\n        \"operationId\": \"CustomerController_updateCustomer\",\n        \"summary\": \"Updates the Stripe customer\",\n        \"parameters\": [\n          {\n            \"name\": \"slug\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Organization slug\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": { \"schema\": { \"type\": \"object\" } }\n            }\n          },\n          \"403\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to update the Stripe customer\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/organizations/{slug}/members\": {\n      \"get\": {\n        \"operationId\": \"MembersController_getOrganizationMembers\",\n        \"summary\": \"Gets organization's members\",\n        \"parameters\": [\n          {\n            \"name\": \"slug\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Organization slug\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"#/components/schemas/Member\" }\n                }\n              }\n            }\n          },\n          \"500\": { \"description\": \"Failed to retrieve organization's members\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/organizations/{slug}/members/add\": {\n      \"post\": {\n        \"operationId\": \"MembersController_addMember\",\n        \"summary\": \"Adds an organization member\",\n        \"parameters\": [\n          {\n            \"name\": \"slug\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Organization slug\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/AddMemberBody\" }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": { \"schema\": { \"type\": \"object\" } }\n            }\n          },\n          \"500\": { \"description\": \"Failed to add an organization member\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/organizations/{slug}/members/leave\": {\n      \"post\": {\n        \"operationId\": \"MembersController_leaveOrganization\",\n        \"summary\": \"Leaves the given organization\",\n        \"parameters\": [\n          {\n            \"name\": \"slug\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Organization slug\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"201\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": { \"schema\": { \"type\": \"object\" } }\n            }\n          },\n          \"500\": { \"description\": \"Failed to leave organization\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/organizations/{slug}/members/remove\": {\n      \"delete\": {\n        \"operationId\": \"MembersController_removeMember\",\n        \"summary\": \"Leaves the given organization\",\n        \"parameters\": [\n          {\n            \"name\": \"slug\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Organization slug\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/RemoveMemberBody\" }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": { \"schema\": { \"type\": \"object\" } }\n            }\n          },\n          \"500\": { \"description\": \"Failed to leave organization\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/organizations/{slug}/roles\": {\n      \"get\": {\n        \"operationId\": \"RolesController_addMember\",\n        \"summary\": \"Gets the given organization's roles\",\n        \"parameters\": [\n          {\n            \"name\": \"slug\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Organization slug\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": { \"schema\": { \"type\": \"object\" } }\n            }\n          },\n          \"500\": {\n            \"description\": \"Failed to retrieve the organization's roles\"\n          }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/organizations/{slug}/tax-ids\": {\n      \"get\": {\n        \"operationId\": \"TaxIdsController_getTaxIds\",\n        \"summary\": \"Gets the given organization's tax IDs\",\n        \"parameters\": [\n          {\n            \"name\": \"slug\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Organization slug\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": { \"schema\": { \"type\": \"object\" } }\n            }\n          },\n          \"403\": { \"description\": \"\" },\n          \"500\": {\n            \"description\": \"Failed to retrieve the organization's tax IDs\"\n          }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      },\n      \"post\": {\n        \"operationId\": \"TaxIdsController_createTaxId\",\n        \"summary\": \"Creates a tax ID for the given organization\",\n        \"parameters\": [\n          {\n            \"name\": \"slug\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Organization slug\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/CreateTaxIdBody\" }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": { \"schema\": { \"type\": \"object\" } }\n            }\n          },\n          \"403\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to create the tax ID\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      },\n      \"delete\": {\n        \"operationId\": \"TaxIdsController_deleteTaxId\",\n        \"summary\": \"Delete the tax ID with the given ID\",\n        \"parameters\": [\n          {\n            \"name\": \"slug\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Organization slug\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/DeleteTaxIdBody\" }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": { \"schema\": { \"type\": \"object\" } }\n            }\n          },\n          \"403\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to delete the tax ID\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/organizations/{slug}/transfer\": {\n      \"post\": {\n        \"operationId\": \"TransferController_transferOrganization\",\n        \"summary\": \"Transfers the organization to the given member\",\n        \"parameters\": [],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/TransferOrganizationBody\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to update owner\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/organizations/{slug}/members/invite\": {\n      \"get\": {\n        \"operationId\": \"InviteController_getInvitedUsers\",\n        \"summary\": \"Gets invited users\",\n        \"parameters\": [\n          {\n            \"name\": \"slug\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Organization slug\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to get invited users\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      },\n      \"delete\": {\n        \"operationId\": \"InviteController_deleteInvitedUser\",\n        \"summary\": \"Delete invited user\",\n        \"parameters\": [\n          {\n            \"name\": \"slug\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Organization slug\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"invited_id\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"schema\": { \"type\": \"number\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to delete invited user\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      },\n      \"post\": {\n        \"operationId\": \"InviteController_inviteUser\",\n        \"summary\": \"Invites user\",\n        \"parameters\": [\n          {\n            \"name\": \"slug\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Organization slug\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/InviteUserBody\" }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to invite user\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/organizations/{slug}/members/join\": {\n      \"get\": {\n        \"operationId\": \"JoinController_getInvite\",\n        \"summary\": \"Gets invite\",\n        \"parameters\": [\n          {\n            \"name\": \"slug\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Organization slug\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"token\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to get invite\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      },\n      \"post\": {\n        \"operationId\": \"JoinController_joinOrganization\",\n        \"summary\": \"Joins organization\",\n        \"parameters\": [\n          {\n            \"name\": \"slug\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Organization slug\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"token\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"201\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to join organization\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/organizations/{slug}/payments\": {\n      \"get\": {\n        \"operationId\": \"PaymentsController_getPaymentMethods\",\n        \"summary\": \"Gets Stripe payment methods for the given organization\",\n        \"parameters\": [\n          {\n            \"name\": \"slug\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Organization slug\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": { \"schema\": { \"type\": \"object\" } }\n            }\n          },\n          \"403\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to get Stripe payment methods\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      },\n      \"delete\": {\n        \"operationId\": \"PaymentsController_detachPaymentMethod\",\n        \"summary\": \"Detach Stripe payment method with the given card ID\",\n        \"parameters\": [],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/DetachPaymentMethodBody\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": { \"schema\": { \"type\": \"object\" } }\n            }\n          },\n          \"403\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to detach Stripe payment method\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/organizations/{slug}/payments/setup-intent\": {\n      \"post\": {\n        \"operationId\": \"SetupIntentController_setUpPaymentMethod\",\n        \"summary\": \"Sets up a payment method\",\n        \"parameters\": [\n          {\n            \"name\": \"slug\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Organization slug\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"201\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": { \"schema\": { \"type\": \"object\" } }\n            }\n          },\n          \"403\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to set up a payment method\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/pg-meta/{ref}/columns\": {\n      \"get\": {\n        \"operationId\": \"ColumnsController_getColumns\",\n        \"summary\": \"Gets project pg.columns\",\n        \"parameters\": [\n          {\n            \"name\": \"x-connection-encrypted\",\n            \"required\": true,\n            \"in\": \"header\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to get pg.columns\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      },\n      \"post\": {\n        \"operationId\": \"ColumnsController_createColumn\",\n        \"summary\": \"Creates project pg.column\",\n        \"parameters\": [\n          {\n            \"name\": \"x-connection-encrypted\",\n            \"required\": true,\n            \"in\": \"header\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/CreateColumnBody\" }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to create pg.column\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      },\n      \"patch\": {\n        \"operationId\": \"ColumnsController_updateColumn\",\n        \"summary\": \"Updates project pg.column with the given ID\",\n        \"parameters\": [\n          {\n            \"name\": \"x-connection-encrypted\",\n            \"required\": true,\n            \"in\": \"header\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          },\n          {\n            \"name\": \"id\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"description\": \"Column ID\",\n            \"schema\": { \"pattern\": {}, \"type\": \"string\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/UpdateColumnBody\" }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": { \"description\": \"\" },\n          \"500\": {\n            \"description\": \"Failed to update pg.column with the given ID\"\n          }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      },\n      \"delete\": {\n        \"operationId\": \"ColumnsController_deleteColumn\",\n        \"summary\": \"Deletes project pg.column with the given ID\",\n        \"parameters\": [\n          {\n            \"name\": \"x-connection-encrypted\",\n            \"required\": true,\n            \"in\": \"header\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          },\n          {\n            \"name\": \"id\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"description\": \"Column ID\",\n            \"schema\": { \"pattern\": {}, \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": { \"description\": \"\" },\n          \"500\": {\n            \"description\": \"Failed to delete pg.column with the given ID\"\n          }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/pg-meta/{ref}/extensions\": {\n      \"get\": {\n        \"operationId\": \"ExtensionsController_getExtensions\",\n        \"summary\": \"Gets project pg.extensions\",\n        \"parameters\": [\n          {\n            \"name\": \"x-connection-encrypted\",\n            \"required\": true,\n            \"in\": \"header\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to get pg.extensions\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      },\n      \"post\": {\n        \"operationId\": \"ExtensionsController_createExtension\",\n        \"summary\": \"Creates project pg.extension\",\n        \"parameters\": [\n          {\n            \"name\": \"x-connection-encrypted\",\n            \"required\": true,\n            \"in\": \"header\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/CreateExtensionBody\" }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to create pg.extension\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      },\n      \"delete\": {\n        \"operationId\": \"ExtensionsController_deleteExtension\",\n        \"summary\": \"Deletes project pg.extension with the given ID\",\n        \"parameters\": [\n          {\n            \"name\": \"x-connection-encrypted\",\n            \"required\": true,\n            \"in\": \"header\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          },\n          {\n            \"name\": \"id\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"description\": \"Extension ID\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": { \"description\": \"\" },\n          \"500\": {\n            \"description\": \"Failed to delete pg.extension with the given ID\"\n          }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/pg-meta/{ref}/functions\": {\n      \"get\": {\n        \"operationId\": \"FunctionsController_getFunctions\",\n        \"summary\": \"Gets project pg.functions\",\n        \"parameters\": [\n          {\n            \"name\": \"x-connection-encrypted\",\n            \"required\": true,\n            \"in\": \"header\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to get pg.functions\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      },\n      \"post\": {\n        \"operationId\": \"FunctionsController_createFunction\",\n        \"summary\": \"Creates project pg.function\",\n        \"parameters\": [\n          {\n            \"name\": \"x-connection-encrypted\",\n            \"required\": true,\n            \"in\": \"header\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/CreateFunctionBody\" }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to create pg.function\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      },\n      \"patch\": {\n        \"operationId\": \"FunctionsController_updateFunction\",\n        \"summary\": \"Updates project pg.function with the given ID\",\n        \"parameters\": [\n          {\n            \"name\": \"x-connection-encrypted\",\n            \"required\": true,\n            \"in\": \"header\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          },\n          {\n            \"name\": \"id\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"description\": \"Function ID\",\n            \"schema\": { \"type\": \"number\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/UpdateFunctionBody\" }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": { \"description\": \"\" },\n          \"500\": {\n            \"description\": \"Failed to update pg.function with the given ID\"\n          }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      },\n      \"delete\": {\n        \"operationId\": \"FunctionsController_deleteFunction\",\n        \"summary\": \"Deletes project pg.function with the given ID\",\n        \"parameters\": [\n          {\n            \"name\": \"x-connection-encrypted\",\n            \"required\": true,\n            \"in\": \"header\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          },\n          {\n            \"name\": \"id\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"description\": \"Function ID\",\n            \"schema\": { \"type\": \"number\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": { \"description\": \"\" },\n          \"500\": {\n            \"description\": \"Failed to delete pg.function with the given ID\"\n          }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/pg-meta/{ref}/policies\": {\n      \"get\": {\n        \"operationId\": \"PoliciesController_getPolicies\",\n        \"summary\": \"Gets project pg.policies\",\n        \"parameters\": [\n          {\n            \"name\": \"x-connection-encrypted\",\n            \"required\": true,\n            \"in\": \"header\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to get pg.policies\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      },\n      \"post\": {\n        \"operationId\": \"PoliciesController_createPolicy\",\n        \"summary\": \"Creates project pg.policy\",\n        \"parameters\": [\n          {\n            \"name\": \"x-connection-encrypted\",\n            \"required\": true,\n            \"in\": \"header\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/CreatePolicyBody\" }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to create pg.policy\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      },\n      \"patch\": {\n        \"operationId\": \"PoliciesController_updatePolicy\",\n        \"summary\": \"Updates project pg.policy with the given ID\",\n        \"parameters\": [\n          {\n            \"name\": \"x-connection-encrypted\",\n            \"required\": true,\n            \"in\": \"header\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          },\n          {\n            \"name\": \"id\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"description\": \"Policy ID\",\n            \"schema\": { \"type\": \"number\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/UpdatePolicyBody\" }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": { \"description\": \"\" },\n          \"500\": {\n            \"description\": \"Failed to update pg.policy with the given ID\"\n          }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      },\n      \"delete\": {\n        \"operationId\": \"PoliciesController_deletePolicy\",\n        \"summary\": \"Deletes project pg.policy with the given ID\",\n        \"parameters\": [\n          {\n            \"name\": \"x-connection-encrypted\",\n            \"required\": true,\n            \"in\": \"header\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          },\n          {\n            \"name\": \"id\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"description\": \"Policy ID\",\n            \"schema\": { \"type\": \"number\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": { \"description\": \"\" },\n          \"500\": {\n            \"description\": \"Failed to delete pg.policy with the given ID\"\n          }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/pg-meta/{ref}/publications\": {\n      \"get\": {\n        \"operationId\": \"PublicationsController_getPublications\",\n        \"summary\": \"Gets project pg.publications\",\n        \"parameters\": [\n          {\n            \"name\": \"x-connection-encrypted\",\n            \"required\": true,\n            \"in\": \"header\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to get pg.publications\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      },\n      \"post\": {\n        \"operationId\": \"PublicationsController_createPublication\",\n        \"summary\": \"Creates project pg.publication\",\n        \"parameters\": [\n          {\n            \"name\": \"x-connection-encrypted\",\n            \"required\": true,\n            \"in\": \"header\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/CreatePublicationBody\" }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to create pg.publication\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      },\n      \"patch\": {\n        \"operationId\": \"PublicationsController_updatePublication\",\n        \"summary\": \"Updates project pg.publication with the given ID\",\n        \"parameters\": [\n          {\n            \"name\": \"x-connection-encrypted\",\n            \"required\": true,\n            \"in\": \"header\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          },\n          {\n            \"name\": \"id\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"description\": \"Publication ID\",\n            \"schema\": { \"type\": \"number\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/UpdatePublicationBody\" }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": { \"description\": \"\" },\n          \"500\": {\n            \"description\": \"Failed to update pg.publication with the given ID\"\n          }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      },\n      \"delete\": {\n        \"operationId\": \"PublicationsController_deletePublication\",\n        \"summary\": \"Deletes project pg.publication with the given ID\",\n        \"parameters\": [\n          {\n            \"name\": \"x-connection-encrypted\",\n            \"required\": true,\n            \"in\": \"header\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          },\n          {\n            \"name\": \"id\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"description\": \"Publication ID\",\n            \"schema\": { \"type\": \"number\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": { \"description\": \"\" },\n          \"500\": {\n            \"description\": \"Failed to delete pg.publication with the given ID\"\n          }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/pg-meta/{ref}/query\": {\n      \"post\": {\n        \"operationId\": \"QueryController_runQuery\",\n        \"summary\": \"Run sql query\",\n        \"parameters\": [\n          {\n            \"name\": \"x-connection-encrypted\",\n            \"required\": true,\n            \"in\": \"header\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/RunQueryBody\" }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": { \"schema\": { \"type\": \"object\" } }\n            }\n          },\n          \"403\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to run sql query\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/pg-meta/{ref}/query/format\": {\n      \"post\": {\n        \"operationId\": \"QueryController_formatQuery\",\n        \"summary\": \"Format sql query\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/FormatQueryBody\" }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": { \"schema\": { \"type\": \"string\" } }\n            }\n          },\n          \"500\": { \"description\": \"Failed to format sql query\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/pg-meta/{ref}/query/validate\": {\n      \"post\": {\n        \"operationId\": \"QueryController_validateQuery\",\n        \"summary\": \"Validate sql query\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/ValidateQueryBody\" }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to validate sql query\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/pg-meta/{ref}/roles\": {\n      \"get\": {\n        \"operationId\": \"RolesController_getRoles\",\n        \"summary\": \"Gets project pg.roles\",\n        \"parameters\": [\n          {\n            \"name\": \"x-connection-encrypted\",\n            \"required\": true,\n            \"in\": \"header\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to get pg.roles\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/pg-meta/{ref}/search/tables\": {\n      \"post\": {\n        \"operationId\": \"SearchController_searchTables\",\n        \"summary\": \"Searches project pg.tables. Return maximum 50 results.\",\n        \"parameters\": [\n          {\n            \"name\": \"x-connection-encrypted\",\n            \"required\": true,\n            \"in\": \"header\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/SearchTableBody\" }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"type\": \"array\", \"items\": { \"type\": \"object\" } }\n              }\n            }\n          },\n          \"500\": { \"description\": \"Failed to search pg.tables\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/pg-meta/{ref}/search/columns\": {\n      \"post\": {\n        \"operationId\": \"SearchController_searchColumns\",\n        \"summary\": \"Searches project pg.columns. Return maximum 50 results.\",\n        \"parameters\": [\n          {\n            \"name\": \"x-connection-encrypted\",\n            \"required\": true,\n            \"in\": \"header\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/SearchColumnBody\" }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"type\": \"array\", \"items\": { \"type\": \"object\" } }\n              }\n            }\n          },\n          \"500\": { \"description\": \"Failed to search pg.columns\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/pg-meta/{ref}/schemas\": {\n      \"get\": {\n        \"operationId\": \"SchemasController_getSchemas\",\n        \"summary\": \"Gets project pg.schemas\",\n        \"parameters\": [\n          {\n            \"name\": \"x-connection-encrypted\",\n            \"required\": true,\n            \"in\": \"header\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to get pg.schemas\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      },\n      \"post\": {\n        \"operationId\": \"SchemasController_createSchema\",\n        \"summary\": \"Creates project pg.schema\",\n        \"parameters\": [\n          {\n            \"name\": \"x-connection-encrypted\",\n            \"required\": true,\n            \"in\": \"header\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/CreateSchemaBody\" }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to create pg.schema\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      },\n      \"patch\": {\n        \"operationId\": \"SchemasController_updateSchema\",\n        \"summary\": \"Updates project pg.schema with the given ID\",\n        \"parameters\": [\n          {\n            \"name\": \"x-connection-encrypted\",\n            \"required\": true,\n            \"in\": \"header\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          },\n          {\n            \"name\": \"id\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"description\": \"Schema ID\",\n            \"schema\": { \"type\": \"number\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/UpdateSchemaBody\" }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": { \"description\": \"\" },\n          \"500\": {\n            \"description\": \"Failed to update pg.schema with the given ID\"\n          }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      },\n      \"delete\": {\n        \"operationId\": \"SchemasController_deleteSchema\",\n        \"summary\": \"Deletes project pg.schema with the given ID\",\n        \"parameters\": [\n          {\n            \"name\": \"x-connection-encrypted\",\n            \"required\": true,\n            \"in\": \"header\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          },\n          {\n            \"name\": \"id\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"description\": \"Schema ID\",\n            \"schema\": { \"type\": \"number\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": { \"description\": \"\" },\n          \"500\": {\n            \"description\": \"Failed to delete pg.schema with the given ID\"\n          }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/pg-meta/{ref}/tables\": {\n      \"get\": {\n        \"operationId\": \"TablesController_getTables\",\n        \"summary\": \"Gets project pg.tables or pg.table with the given ID\",\n        \"parameters\": [\n          {\n            \"name\": \"x-connection-encrypted\",\n            \"required\": true,\n            \"in\": \"header\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          },\n          {\n            \"name\": \"id\",\n            \"required\": false,\n            \"in\": \"query\",\n            \"description\": \"Table ID\",\n            \"schema\": { \"type\": \"number\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": { \"description\": \"\" },\n          \"500\": {\n            \"description\": \"Failed to get pg.tables or pg.table with the given ID\"\n          }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      },\n      \"post\": {\n        \"operationId\": \"TablesController_createTable\",\n        \"summary\": \"Creates project pg.table\",\n        \"parameters\": [\n          {\n            \"name\": \"x-connection-encrypted\",\n            \"required\": true,\n            \"in\": \"header\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/CreateTableBody\" }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to create pg.table\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      },\n      \"patch\": {\n        \"operationId\": \"TablesController_updateTable\",\n        \"summary\": \"Updates project pg.table with the given ID\",\n        \"parameters\": [\n          {\n            \"name\": \"x-connection-encrypted\",\n            \"required\": true,\n            \"in\": \"header\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          },\n          {\n            \"name\": \"id\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"description\": \"Table ID\",\n            \"schema\": { \"type\": \"number\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/UpdateTableBody\" }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": { \"description\": \"\" },\n          \"500\": {\n            \"description\": \"Failed to update pg.table with the given ID\"\n          }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      },\n      \"delete\": {\n        \"operationId\": \"TablesController_deleteTable\",\n        \"summary\": \"Deletes project pg.table with the given ID\",\n        \"parameters\": [\n          {\n            \"name\": \"x-connection-encrypted\",\n            \"required\": true,\n            \"in\": \"header\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          },\n          {\n            \"name\": \"id\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"description\": \"Table ID\",\n            \"schema\": { \"type\": \"number\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": { \"description\": \"\" },\n          \"500\": {\n            \"description\": \"Failed to delete pg.table with the given ID\"\n          }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/pg-meta/{ref}/triggers\": {\n      \"get\": {\n        \"operationId\": \"TriggersController_getTriggers\",\n        \"summary\": \"Gets project pg.triggers\",\n        \"parameters\": [\n          {\n            \"name\": \"x-connection-encrypted\",\n            \"required\": true,\n            \"in\": \"header\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to get pg.triggers\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      },\n      \"post\": {\n        \"operationId\": \"TriggersController_createTrigger\",\n        \"summary\": \"Creates project pg.trigger\",\n        \"parameters\": [\n          {\n            \"name\": \"x-connection-encrypted\",\n            \"required\": true,\n            \"in\": \"header\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/CreateTriggerBody\" }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to create pg.trigger\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      },\n      \"patch\": {\n        \"operationId\": \"TriggersController_updateTrigger\",\n        \"summary\": \"Updates project pg.trigger with the given ID\",\n        \"parameters\": [\n          {\n            \"name\": \"x-connection-encrypted\",\n            \"required\": true,\n            \"in\": \"header\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          },\n          {\n            \"name\": \"id\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"description\": \"Trigger ID\",\n            \"schema\": { \"type\": \"number\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/UpdateTriggerBody\" }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": { \"description\": \"\" },\n          \"500\": {\n            \"description\": \"Failed to update pg.trigger with the given ID\"\n          }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      },\n      \"delete\": {\n        \"operationId\": \"TriggersController_deleteTrigger\",\n        \"summary\": \"Deletes project pg.trigger with the given ID\",\n        \"parameters\": [\n          {\n            \"name\": \"x-connection-encrypted\",\n            \"required\": true,\n            \"in\": \"header\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          },\n          {\n            \"name\": \"id\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"description\": \"Trigger ID\",\n            \"schema\": { \"type\": \"number\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": { \"description\": \"\" },\n          \"500\": {\n            \"description\": \"Failed to delete pg.trigger with the given ID\"\n          }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/pg-meta/{ref}/types\": {\n      \"get\": {\n        \"operationId\": \"TypesController_getTypes\",\n        \"summary\": \"Gets project pg.types\",\n        \"parameters\": [\n          {\n            \"name\": \"x-connection-encrypted\",\n            \"required\": true,\n            \"in\": \"header\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to get pg.types\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/profile/access-tokens\": {\n      \"get\": {\n        \"operationId\": \"AccessTokensController_getAccessTokens\",\n        \"summary\": \"Gets the user's access tokens\",\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"#/components/schemas/AccessToken\" }\n                }\n              }\n            }\n          },\n          \"500\": { \"description\": \"Failed to get user's access tokens\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      },\n      \"post\": {\n        \"operationId\": \"AccessTokensController_createAccessToken\",\n        \"summary\": \"Creates a new access token\",\n        \"parameters\": [],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/CreateAccessTokenBody\" }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CreateAccessTokenResponse\"\n                }\n              }\n            }\n          },\n          \"500\": { \"description\": \"Failed to create access token\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/profile/access-tokens/{id}\": {\n      \"get\": {\n        \"operationId\": \"AccessTokensController_getAccessToken\",\n        \"summary\": \"Gets the access token with the given ID\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Access token ID\",\n            \"schema\": { \"type\": \"number\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/AccessToken\" }\n              }\n            }\n          },\n          \"500\": { \"description\": \"Failed to get access token\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      },\n      \"delete\": {\n        \"operationId\": \"AccessTokensController_deleteAccessToken\",\n        \"summary\": \"Deletes the access token with the given ID\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Access token ID\",\n            \"schema\": { \"type\": \"number\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/AccessToken\" }\n              }\n            }\n          },\n          \"500\": { \"description\": \"Failed to delete access token\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/profile/search\": {\n      \"post\": {\n        \"operationId\": \"SearchProfileController_searchProfile\",\n        \"summary\": \"Search profiles by username, email with the given keywords\",\n        \"parameters\": [],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/SearchProfileBody\" }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"#/components/schemas/Profile\" }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Failed to search profiles with the given keywords\"\n          }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/profile/subscriptions\": {\n      \"get\": {\n        \"operationId\": \"SubscriptionsController_getSubscriptionsStatistics\",\n        \"summary\": \"Gets the user's subscription statistics\",\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SubscriptionStatisticsResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Failed to retrieve user's subscription statistics\"\n          }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/profile/password-check\": {\n      \"post\": {\n        \"operationId\": \"PasswordCheckController_checkPassword\",\n        \"summary\": \"Check password strength\",\n        \"parameters\": [],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/PasswordCheckBody\" }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/PasswordCheckResponse\"\n                }\n              }\n            }\n          },\n          \"500\": { \"description\": \"Failed to check password strength\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/profile/permissions\": {\n      \"get\": {\n        \"operationId\": \"PermissionsController_getPermissions\",\n        \"summary\": \"Gets all the user's permissions\",\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"#/components/schemas/Permission\" }\n                }\n              }\n            }\n          },\n          \"500\": { \"description\": \"Failed to retrieve permissions\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/profile\": {\n      \"get\": {\n        \"operationId\": \"ProfileController_getProfile\",\n        \"summary\": \"Gets the user's profile\",\n        \"parameters\": [\n          {\n            \"name\": \"returning\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"schema\": { \"enum\": [\"minimal\"], \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ProfileResponse\" }\n              }\n            }\n          },\n          \"500\": { \"description\": \"Failed to retrieve user's profile\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/profile/update\": {\n      \"post\": {\n        \"operationId\": \"ProfileController_updateProfile\",\n        \"summary\": \"Update user's profile\",\n        \"parameters\": [],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/UpdateProfileBody\" }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ProfileResponse\" }\n              }\n            }\n          },\n          \"500\": { \"description\": \"Failed to update user's profile\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/projects\": {\n      \"get\": {\n        \"operationId\": \"ProjectsController_getProjects\",\n        \"summary\": \"Gets all projects that belong to the authenticated user\",\n        \"description\": \"Only returns the minimal project info\",\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": { \"schema\": { \"type\": \"object\" } }\n            }\n          }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      },\n      \"post\": {\n        \"operationId\": \"ProjectsController_createProject\",\n        \"summary\": \"Creates a project\",\n        \"parameters\": [],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/CreateProjectBody\" }\n            }\n          }\n        },\n        \"responses\": { \"201\": { \"description\": \"\" } },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/projects/{ref}/daily-stats\": {\n      \"get\": {\n        \"operationId\": \"DailyStatsController_getDailyStats\",\n        \"summary\": \"Gets daily project stats\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          },\n          {\n            \"name\": \"attribute\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"interval\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"endDate\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"startDate\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": { \"schema\": { \"type\": \"object\" } }\n            }\n          },\n          \"500\": { \"description\": \"Failed to get daily project stats\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/projects/{ref}/db-password\": {\n      \"patch\": {\n        \"operationId\": \"DbPasswordController_updatePassword\",\n        \"summary\": \"Updates the database password\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/UpdatePasswordBody\" }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": { \"description\": \"\" },\n          \"403\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to update database password\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/projects/{ref}/infra-monitoring\": {\n      \"get\": {\n        \"operationId\": \"InfraMonitoringController_getUsageMetrics\",\n        \"summary\": \"Gets project's usage metrics\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          },\n          {\n            \"name\": \"attribute\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"schema\": {\n              \"enum\": [\"cpu_usage\", \"disk_io_budget\", \"ram_usage\"],\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"startDate\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"endDate\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"interval\",\n            \"required\": false,\n            \"in\": \"query\",\n            \"schema\": {\n              \"enum\": [\"1m\", \"5m\", \"10m\", \"30m\", \"1h\", \"1d\"],\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": { \"schema\": { \"type\": \"object\" } }\n            }\n          },\n          \"500\": { \"description\": \"Failed to get project's usage metrics\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/projects/{ref}/invoices\": {\n      \"head\": {\n        \"operationId\": \"InvoicesController_getInvoiceCount\",\n        \"summary\": \"Gets project's invoice count\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to get project's invoice count\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      },\n      \"get\": {\n        \"operationId\": \"InvoicesController_getInvoices\",\n        \"summary\": \"Gets project's invoices\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          },\n          {\n            \"name\": \"limit\",\n            \"required\": false,\n            \"in\": \"query\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"offset\",\n            \"required\": false,\n            \"in\": \"query\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"type\": \"array\", \"items\": { \"type\": \"object\" } }\n              }\n            }\n          },\n          \"500\": { \"description\": \"Failed to get project's invoices\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/projects/{ref}/pause\": {\n      \"post\": {\n        \"operationId\": \"PauseController_pauseProject\",\n        \"summary\": \"Pauses the project\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"201\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": { \"schema\": { \"type\": \"object\" } }\n            }\n          },\n          \"500\": { \"description\": \"Failed to pause the project\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/projects/{ref}/pooling\": {\n      \"get\": {\n        \"operationId\": \"PoolingController_getPoolingConfig\",\n        \"summary\": \"Gets project's pooling config\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/PoolingConfig\" }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Failed to retrieve project's pooling config\"\n          }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      },\n      \"patch\": {\n        \"operationId\": \"PoolingController_updatePoolingConfig\",\n        \"summary\": \"Updates project's pooling config\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdatePoolingConfigBody\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UpdatePoolingConfigResponse\"\n                }\n              }\n            }\n          },\n          \"500\": { \"description\": \"Failed to update project's pooling config\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/projects/{ref}/restart\": {\n      \"post\": {\n        \"operationId\": \"RestartController_restartServices\",\n        \"summary\": \"Restarts project\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"201\": { \"description\": \"\" },\n          \"403\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to restart project\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/projects/{ref}\": {\n      \"get\": {\n        \"operationId\": \"ProjectsRefController_getProjects\",\n        \"summary\": \"Gets all projects that belong to the authenticated user\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": { \"schema\": { \"type\": \"object\" } }\n            }\n          }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      },\n      \"delete\": {\n        \"operationId\": \"ProjectsRefController_deleteProject\",\n        \"summary\": \"Deletes the given project\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": { \"description\": \"\" },\n          \"403\": { \"description\": \"\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      },\n      \"patch\": {\n        \"operationId\": \"ProjectsRefController_updateProject\",\n        \"summary\": \"Updates the given project\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/UpdateProjectBody\" }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to update project\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/projects/{ref}/restore\": {\n      \"post\": {\n        \"operationId\": \"RestoreController_restartServices\",\n        \"summary\": \"Restores the project\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"201\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/Project\" }\n              }\n            }\n          },\n          \"500\": { \"description\": \"Failed to restore project\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/projects/{ref}/restart-services\": {\n      \"post\": {\n        \"operationId\": \"RestartServicesController_restartServices\",\n        \"summary\": \"Restarts given services\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/RestartServicesBody\" }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": { \"schema\": { \"type\": \"object\" } }\n            }\n          },\n          \"500\": { \"description\": \"Failed to restart given services\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/projects/{ref}/status\": {\n      \"get\": {\n        \"operationId\": \"StatusController_getStatus\",\n        \"summary\": \"Gets project's status\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to get project's status\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/projects/{ref}/update\": {\n      \"post\": {\n        \"operationId\": \"UpdateController_updateProject\",\n        \"summary\": \"Updates the project\",\n        \"description\": \"Replaced by PATCH /platform/projects/:ref\",\n        \"deprecated\": true,\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/UpdateProjectBody\" }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to update project\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/projects/{ref}/usage\": {\n      \"get\": {\n        \"operationId\": \"UsageController_getUsage\",\n        \"summary\": \"Gets project's usage\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          },\n          {\n            \"name\": \"x-connection-encrypted\",\n            \"required\": true,\n            \"in\": \"header\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": { \"schema\": { \"type\": \"object\" } }\n            }\n          },\n          \"403\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to retrieve project's usage\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/projects/{ref}/usage-status\": {\n      \"get\": {\n        \"operationId\": \"UsageStatusController_getUsageStatusConfig\",\n        \"summary\": \"Gets project's usage status\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/UsageStatusResponse\" }\n              }\n            }\n          },\n          \"500\": { \"description\": \"Failed to retrieve project's usage status\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/projects/{ref}/subscription/enterprise\": {\n      \"post\": {\n        \"operationId\": \"EnterpriseController_sendEnterpriseRequest\",\n        \"summary\": \"Send enterprise request\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/SendEnterpriseRequestBody\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to send enterprise request\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/projects/{ref}/subscription/preview\": {\n      \"post\": {\n        \"operationId\": \"PreviewController_previewSubscription\",\n        \"summary\": \"Preview subscription\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/PreviewSubscriptionBody\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": { \"description\": \"\" },\n          \"403\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to preview subscription\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/projects/{ref}/subscription\": {\n      \"get\": {\n        \"operationId\": \"SubscriptionController_getSubscription\",\n        \"summary\": \"Gets subscription\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to retrieve subscription\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      },\n      \"patch\": {\n        \"operationId\": \"SubscriptionController_updateSubscription\",\n        \"summary\": \"Updates subscription\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateSubscriptionBody\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": { \"description\": \"\" },\n          \"403\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to update subscription\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/projects/{ref}/config\": {\n      \"get\": {\n        \"operationId\": \"ConfigController_getConfig\",\n        \"summary\": \"Gets project's config\",\n        \"description\": \"Replaced by /config/postgrest, /config/storage, /config/secrets\",\n        \"deprecated\": true,\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          },\n          {\n            \"name\": \"app\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"schema\": { \"enum\": [\"postgrest\", \"storage\"], \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": { \"schema\": { \"type\": \"object\" } }\n            }\n          },\n          \"500\": { \"description\": \"Failed to retrieve project's config\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      },\n      \"patch\": {\n        \"operationId\": \"ConfigController_updateConfig\",\n        \"summary\": \"Updates project's config\",\n        \"description\": \"Replaced by /config/postgrest, /config/storage, /config/secrets\",\n        \"deprecated\": true,\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          },\n          {\n            \"name\": \"app\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"schema\": {\n              \"enum\": [\"postgrest\", \"secrets\", \"storage\"],\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": { \"schema\": { \"type\": \"object\" } }\n            }\n          },\n          \"500\": { \"description\": \"Failed to update project's config\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/projects/{ref}/config/postgrest\": {\n      \"get\": {\n        \"operationId\": \"PostgrestConfigController_getConfig\",\n        \"summary\": \"Gets project's postgrest config\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": { \"schema\": { \"type\": \"object\" } }\n            }\n          },\n          \"500\": {\n            \"description\": \"Failed to retrieve project's postgrest config\"\n          }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      },\n      \"patch\": {\n        \"operationId\": \"PostgrestConfigController_updateConfig\",\n        \"summary\": \"Updates project's postgrest config\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdatePostgrestConfigBody\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": { \"description\": \"\" },\n          \"500\": {\n            \"description\": \"Failed to update project's postgrest config\"\n          }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/projects/{ref}/config/secrets\": {\n      \"patch\": {\n        \"operationId\": \"SecretsConfigController_updateConfig\",\n        \"summary\": \"Updates project's secrets config\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateSecretsConfigBody\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to update project's secrets config\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/projects/{ref}/config/storage\": {\n      \"get\": {\n        \"operationId\": \"StorageConfigController_getConfig\",\n        \"summary\": \"Gets project's storage config\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": { \"description\": \"\" },\n          \"403\": { \"description\": \"\" },\n          \"500\": {\n            \"description\": \"Failed to retrieve project's storage config\"\n          }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      },\n      \"patch\": {\n        \"operationId\": \"StorageConfigController_updateConfig\",\n        \"summary\": \"Updates project's storage config\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateStorageConfigBody\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": { \"description\": \"\" },\n          \"403\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to update project's storage config\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/props/org/{slug}\": {\n      \"get\": {\n        \"operationId\": \"OrganizationSlugController_getOrganizationMembers\",\n        \"summary\": \"Gets organization's members\",\n        \"description\": \"Replaced by GET /platform/organization/:slug/members\",\n        \"deprecated\": true,\n        \"parameters\": [\n          {\n            \"name\": \"slug\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Organization slug\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrganizationMembersResponse\"\n                }\n              }\n            }\n          },\n          \"500\": { \"description\": \"Failed to retrieve organization's members\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/props/pooling/{ref}/config\": {\n      \"get\": {\n        \"operationId\": \"PoolingRefConfigController_getProjectPoolingConfig\",\n        \"summary\": \"Gets project's pooling config\",\n        \"description\": \"Replaced by GET /platform/projects/:ref/pooling\",\n        \"deprecated\": true,\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/PoolingRefConfigResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Failed to retrieve project's pooling config\"\n          }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      },\n      \"patch\": {\n        \"operationId\": \"PoolingRefConfigController_updateProjectPoolingConfig\",\n        \"summary\": \"Updates project's pooling config\",\n        \"description\": \"Replaced by PATCH /platform/projects/:ref/pooling\",\n        \"deprecated\": true,\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdatePoolingRefConfigBody\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UpdatePoolingRefConfigResponse\"\n                }\n              }\n            }\n          },\n          \"500\": { \"description\": \"Failed to update project's pooling config\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/props/project/{ref}/api\": {\n      \"get\": {\n        \"operationId\": \"ApiController_getProjectApi\",\n        \"summary\": \"Gets project's api info\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ApiResponse\" }\n              }\n            }\n          },\n          \"500\": { \"description\": \"Failed to retrieve project's api info\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/props/project/{ref}/jwt-secret-update-status\": {\n      \"get\": {\n        \"operationId\": \"JwtSecretUpdateStatusController_getJwtSecretUpdateStatus\",\n        \"summary\": \"Gets the last JWT secret update status\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/JwtSecretUpdateStatus\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Failed to retrieve JWT secret update status\"\n          }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/props/project/{ref}/settings\": {\n      \"get\": {\n        \"operationId\": \"SettingsController_getProjectApi\",\n        \"summary\": \"Gets project's settings\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/SettingsResponse\" }\n              }\n            }\n          },\n          \"500\": { \"description\": \"Failed to retrieve project's settings\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/stripe/customer\": {\n      \"post\": {\n        \"operationId\": \"CustomerController_getCustomer\",\n        \"summary\": \"Gets the Stripe customer\",\n        \"parameters\": [],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/GetCustomerBody\" }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": { \"description\": \"\" },\n          \"403\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to retrieve the Stripe customer\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/stripe/invoices\": {\n      \"head\": {\n        \"operationId\": \"InvoicesController_countInvoices\",\n        \"summary\": \"Gets the total count of Stripe invoices for the given customer\",\n        \"parameters\": [\n          {\n            \"name\": \"customer\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": { \"description\": \"\" },\n          \"500\": {\n            \"description\": \"Failed to retrieve the total count of Stripe invoice\"\n          }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      },\n      \"get\": {\n        \"operationId\": \"InvoicesController_getInvoices\",\n        \"summary\": \"Gets the Stripe invoices for the given customer\",\n        \"parameters\": [\n          {\n            \"name\": \"customer\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to retrieve Stripe invoices\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/stripe/invoices/{id}\": {\n      \"get\": {\n        \"operationId\": \"InvoicesController_getInvoice\",\n        \"summary\": \"Gets the Stripe invoice with the given invoice ID\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": { \"schema\": { \"type\": \"object\" } }\n            }\n          },\n          \"403\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to retrieve Stripe invoice\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/stripe/portal\": {\n      \"post\": {\n        \"operationId\": \"PortalController_createCustomerPortalSession\",\n        \"summary\": \"Creates a session of the customer portal\",\n        \"parameters\": [],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CreateCustomerPortalSessionBody\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": { \"description\": \"\" },\n          \"500\": {\n            \"description\": \"Failed to create a session of the customer portal\"\n          }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/stripe/products\": {\n      \"get\": {\n        \"operationId\": \"ProductsController_createCustomerPortalSession\",\n        \"summary\": \"Gets Stripe products\",\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to get Stripe products\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/telemetry/event\": {\n      \"post\": {\n        \"operationId\": \"TelemetryEventController_sendServerEvent\",\n        \"summary\": \"Sends analytics server event\",\n        \"parameters\": [],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/TelemetryEventBody\" }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to send analytics server event\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/telemetry/identify\": {\n      \"post\": {\n        \"operationId\": \"TelemetryIdentifyController_identify\",\n        \"summary\": \"Send analytics identify event\",\n        \"parameters\": [],\n        \"responses\": {\n          \"201\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to send analytics identify event\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/telemetry/page\": {\n      \"post\": {\n        \"operationId\": \"TelemetryPageController_sendServerPage\",\n        \"summary\": \"Send server page event\",\n        \"parameters\": [],\n        \"responses\": {\n          \"201\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to send server page event\" }\n        }\n      }\n    },\n    \"/platform/vercel/token\": {\n      \"get\": {\n        \"operationId\": \"VercelAccessTokenController_getAccessToken\",\n        \"summary\": \"Gets the Vercel access token for the given code\",\n        \"parameters\": [\n          {\n            \"name\": \"code\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to get Vercel access token\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/vercel/projects\": {\n      \"get\": {\n        \"operationId\": \"VercelProjectsController_getVercelProjects\",\n        \"summary\": \"Gets the project with the given ID if provided, otherwise gets the list of projects\",\n        \"parameters\": [\n          {\n            \"name\": \"vercel_authorization\",\n            \"required\": true,\n            \"in\": \"header\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"id\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"teamId\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": { \"schema\": { \"type\": \"object\" } }\n            }\n          },\n          \"500\": { \"description\": \"Failed to get project(s)\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/platform/vercel/projects/envs\": {\n      \"get\": {\n        \"operationId\": \"VercelEnvironmentVariablesController_getEnvironmentVariables\",\n        \"summary\": \"Gets the environment variables for the given project ID on behalf of the given team ID\",\n        \"parameters\": [\n          {\n            \"name\": \"vercel_authorization\",\n            \"required\": true,\n            \"in\": \"header\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"projectId\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"teamId\",\n            \"required\": false,\n            \"in\": \"query\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"type\": \"array\", \"items\": { \"type\": \"object\" } }\n              }\n            }\n          },\n          \"500\": { \"description\": \"Failed to get Vercel environment variables\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      },\n      \"post\": {\n        \"operationId\": \"VercelEnvironmentVariablesController_createEnvironmentVariable\",\n        \"summary\": \"Creates the environment variable for the given project ID on behalf of the given team ID\",\n        \"parameters\": [\n          {\n            \"name\": \"vercel_authorization\",\n            \"required\": true,\n            \"in\": \"header\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"projectId\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"teamId\",\n            \"required\": false,\n            \"in\": \"query\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CreateVercelEnvironmentVariableBody\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": { \"schema\": { \"type\": \"object\" } }\n            }\n          },\n          \"500\": { \"description\": \"Failed to get the environment variables\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/system/github-secret-alert\": {\n      \"post\": {\n        \"operationId\": \"GithubSecretAlertController_resetJwt\",\n        \"summary\": \"Reset JWT if leaked keys found by GitHub secret scanning\",\n        \"parameters\": [\n          {\n            \"name\": \"github-public-key-identifier\",\n            \"required\": true,\n            \"in\": \"header\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"github-public-key-signature\",\n            \"required\": true,\n            \"in\": \"header\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": { \"application/json\": { \"schema\": { \"type\": \"string\" } } }\n        },\n        \"responses\": {\n          \"200\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to reset JWT\" }\n        }\n      }\n    },\n    \"/system/projects/{ref}/secrets/refresh\": {\n      \"post\": {\n        \"operationId\": \"SecretsRefreshController_refreshSecrets\",\n        \"summary\": \"Refreshes secrets\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"201\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to refresh secrets\" }\n        },\n        \"security\": [{ \"apiKeyHeader\": [], \"apiKeyParam\": [] }]\n      }\n    },\n    \"/system/auth/{ref}/templates/{template}\": {\n      \"get\": {\n        \"operationId\": \"TemplateController_getTemplate\",\n        \"summary\": \"Gets GoTrue template\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"template\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"schema\": {\n              \"enum\": [\n                \"confirmation\",\n                \"email-change\",\n                \"invite\",\n                \"magic-link\",\n                \"recovery\"\n              ],\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": { \"schema\": { \"type\": \"string\" } }\n            }\n          },\n          \"500\": { \"description\": \"Failed to retrieve GoTrue template\" }\n        },\n        \"security\": [{ \"apiKeyHeader\": [], \"apiKeyParam\": [] }]\n      }\n    },\n    \"/system/stripe/subscriptions\": {\n      \"post\": {\n        \"operationId\": \"StripeSubscriptionsController_createSubscription\",\n        \"summary\": \"Creates Stripe subscription\",\n        \"parameters\": [],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CreateSubscriptionBody\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to create Stripe subscription\" }\n        },\n        \"security\": [{ \"apiKeyHeader\": [], \"apiKeyParam\": [] }]\n      }\n    },\n    \"/system/stripe/subscriptions/{projectId}\": {\n      \"delete\": {\n        \"operationId\": \"StripeSubscriptionsController_cancelSubscription\",\n        \"summary\": \"Cancels Stripe subscription\",\n        \"parameters\": [\n          {\n            \"name\": \"projectId\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"schema\": { \"type\": \"number\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to cancel Stripe subscription\" }\n        },\n        \"security\": [{ \"apiKeyHeader\": [], \"apiKeyParam\": [] }]\n      }\n    },\n    \"/system/stripe/sync\": {\n      \"post\": {\n        \"operationId\": \"StripeSyncController_syncStripe\",\n        \"summary\": \"Sync Supabase organization with Stripe customer\",\n        \"parameters\": [],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/StripeSyncBody\" }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": { \"description\": \"\" },\n          \"500\": {\n            \"description\": \"Failed to sync Supabase organization with Stripe customer\"\n          }\n        },\n        \"security\": [{ \"apiKeyHeader\": [], \"apiKeyParam\": [] }]\n      }\n    },\n    \"/system/stripe/webhooks\": {\n      \"post\": {\n        \"operationId\": \"StripeWebhooksController_processEvent\",\n        \"summary\": \"Processes Stripe event\",\n        \"parameters\": [\n          {\n            \"name\": \"stripe-signature\",\n            \"required\": true,\n            \"in\": \"header\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/Buffer\" }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to process Stripe event\" }\n        }\n      }\n    },\n    \"/v1/organizations\": {\n      \"get\": {\n        \"operationId\": \"OrganizationsController_getOrganizations\",\n        \"summary\": \"Lists all organizations\",\n        \"parameters\": [\n          {\n            \"name\": \"owned_only\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"description\": \"Only list organizations you own\",\n            \"schema\": {}\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/OrganizationResponse\"\n                  }\n                }\n              }\n            }\n          },\n          \"500\": { \"description\": \"Unexpected error listing organizations\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      },\n      \"post\": {\n        \"operationId\": \"OrganizationsController_createOrganization_\",\n        \"summary\": \"Creates an organization\",\n        \"parameters\": [],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CreateOrganizationBody\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrganizationResponse\"\n                }\n              }\n            }\n          },\n          \"500\": { \"description\": \"Unexpected error creating an organization\" }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/v1/projects\": {\n      \"get\": {\n        \"operationId\": \"ProjectsController_getProjects\",\n        \"summary\": \"Gets all projects that belong to the authenticated user\",\n        \"description\": \"Only returns the minimal project info\",\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"#/components/schemas/ProjectResponse\" }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      },\n      \"post\": {\n        \"operationId\": \"ProjectsController_createProject\",\n        \"summary\": \"Creates a project\",\n        \"parameters\": [],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/CreateProjectBody\" }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ProjectResponse\" }\n              }\n            }\n          }\n        },\n        \"security\": [{ \"bearer\": [] }]\n      }\n    }\n  },\n  \"info\": {\n    \"title\": \"Supabase API\",\n    \"description\": \"\",\n    \"version\": \"1.0.0\",\n    \"contact\": {}\n  },\n  \"tags\": [],\n  \"servers\": [],\n  \"components\": {\n    \"securitySchemes\": {\n      \"bearer\": { \"scheme\": \"bearer\", \"bearerFormat\": \"JWT\", \"type\": \"http\" },\n      \"apiKeyHeader\": { \"in\": \"header\", \"name\": \"apikey\", \"type\": \"apiKey\" },\n      \"apiKeyQuery\": { \"in\": \"query\", \"name\": \"apikey\", \"type\": \"apiKey\" }\n    },\n    \"schemas\": {\n      \"Notification\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": { \"type\": \"string\" },\n          \"inserted_at\": { \"type\": \"string\" },\n          \"project_id\": { \"type\": \"number\" },\n          \"notification_name\": { \"type\": \"string\" },\n          \"notification_status\": { \"type\": \"string\" },\n          \"data\": { \"type\": \"object\" },\n          \"meta\": { \"type\": \"object\" }\n        },\n        \"required\": [\n          \"id\",\n          \"inserted_at\",\n          \"project_id\",\n          \"notification_name\",\n          \"notification_status\",\n          \"data\",\n          \"meta\"\n        ]\n      },\n      \"UpdateNotificationsBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"ids\": { \"type\": \"array\", \"items\": { \"type\": \"string\" } }\n        },\n        \"required\": [\"ids\"]\n      },\n      \"SendFeedbackBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": { \"type\": \"string\" },\n          \"category\": { \"type\": \"string\" },\n          \"subject\": { \"type\": \"string\" },\n          \"tags\": { \"type\": \"array\", \"items\": { \"type\": \"string\" } },\n          \"additionalRedirectUrls\": { \"type\": \"string\" },\n          \"pathname\": { \"type\": \"string\" },\n          \"projectRef\": { \"type\": \"string\" },\n          \"severity\": { \"type\": \"string\" },\n          \"siteUrl\": { \"type\": \"string\" },\n          \"urlToAirTable\": { \"type\": \"string\" },\n          \"verified\": { \"type\": \"boolean\" }\n        },\n        \"required\": [\"message\", \"category\", \"tags\"]\n      },\n      \"SubjectRoleParams\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"gotrue_id\": { \"type\": \"string\" },\n          \"role_id\": { \"type\": \"string\" }\n        },\n        \"required\": [\"gotrue_id\", \"role_id\"]\n      },\n      \"GetGoTrueConfigResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"app_version\": { \"type\": \"string\" },\n          \"isFreeTier\": { \"type\": \"boolean\" },\n          \"id\": { \"type\": \"number\" },\n          \"project_id\": { \"type\": \"number\" },\n          \"updated_at\": { \"type\": \"string\" },\n          \"SITE_URL\": { \"type\": \"string\" },\n          \"OPERATOR_TOKEN\": { \"type\": \"string\" },\n          \"DISABLE_SIGNUP\": { \"type\": \"boolean\" },\n          \"RATE_LIMIT_HEADER\": { \"type\": \"string\" },\n          \"JWT_EXP\": { \"type\": \"number\" },\n          \"JWT_AUD\": { \"type\": \"string\" },\n          \"JWT_DEFAULT_GROUP_NAME\": { \"type\": \"string\" },\n          \"EXTERNAL_GITHUB_ENABLED\": { \"type\": \"boolean\" },\n          \"EXTERNAL_GITHUB_CLIENT_ID\": { \"type\": \"string\" },\n          \"EXTERNAL_GITHUB_SECRET\": { \"type\": \"string\" },\n          \"EXTERNAL_BITBUCKET_ENABLED\": { \"type\": \"boolean\" },\n          \"EXTERNAL_BITBUCKET_CLIENT_ID\": { \"type\": \"string\" },\n          \"EXTERNAL_BITBUCKET_SECRET\": { \"type\": \"string\" },\n          \"EXTERNAL_GOOGLE_ENABLED\": { \"type\": \"boolean\" },\n          \"EXTERNAL_GOOGLE_CLIENT_ID\": { \"type\": \"string\" },\n          \"EXTERNAL_GOOGLE_SECRET\": { \"type\": \"string\" },\n          \"EXTERNAL_GITLAB_ENABLED\": { \"type\": \"boolean\" },\n          \"EXTERNAL_GITLAB_CLIENT_ID\": { \"type\": \"string\" },\n          \"EXTERNAL_GITLAB_SECRET\": { \"type\": \"string\" },\n          \"EXTERNAL_GITLAB_REDIRECT_URI\": { \"type\": \"string\" },\n          \"EXTERNAL_GITLAB_URL\": { \"type\": \"string\" },\n          \"SMTP_ADMIN_EMAIL\": { \"type\": \"string\" },\n          \"SMTP_HOST\": { \"type\": \"string\" },\n          \"SMTP_PORT\": { \"type\": \"string\" },\n          \"SMTP_USER\": { \"type\": \"string\" },\n          \"SMTP_PASS\": { \"type\": \"string\" },\n          \"SMTP_MAX_FREQUENCY\": { \"type\": \"number\" },\n          \"MAILER_AUTOCONFIRM\": { \"type\": \"boolean\" },\n          \"MAILER_URLPATHS_INVITE\": { \"type\": \"string\" },\n          \"MAILER_URLPATHS_CONFIRMATION\": { \"type\": \"string\" },\n          \"MAILER_URLPATHS_RECOVERY\": { \"type\": \"string\" },\n          \"MAILER_URLPATHS_EMAIL_CHANGE\": { \"type\": \"string\" },\n          \"MAILER_SUBJECTS_INVITE\": { \"type\": \"string\" },\n          \"MAILER_SUBJECTS_CONFIRMATION\": { \"type\": \"string\" },\n          \"MAILER_SUBJECTS_RECOVERY\": { \"type\": \"string\" },\n          \"MAILER_SUBJECTS_EMAIL_CHANGE\": { \"type\": \"string\" },\n          \"MAILER_TEMPLATES_INVITE\": { \"type\": \"string\" },\n          \"MAILER_TEMPLATES_INVITE_CONTENT\": { \"type\": \"string\" },\n          \"MAILER_TEMPLATES_CONFIRMATION\": { \"type\": \"string\" },\n          \"MAILER_TEMPLATES_CONFIRMATION_CONTENT\": { \"type\": \"string\" },\n          \"MAILER_TEMPLATES_RECOVERY\": { \"type\": \"string\" },\n          \"MAILER_TEMPLATES_RECOVERY_CONTENT\": { \"type\": \"string\" },\n          \"MAILER_TEMPLATES_EMAIL_CHANGE\": { \"type\": \"string\" },\n          \"MAILER_TEMPLATES_EMAIL_CHANGE_CONTENT\": { \"type\": \"string\" },\n          \"MAILER_SUBJECTS_MAGIC_LINK\": { \"type\": \"string\" },\n          \"MAILER_TEMPLATES_MAGIC_LINK\": { \"type\": \"string\" },\n          \"MAILER_TEMPLATES_MAGIC_LINK_CONTENT\": { \"type\": \"string\" },\n          \"EXTERNAL_AZURE_ENABLED\": { \"type\": \"boolean\" },\n          \"EXTERNAL_AZURE_CLIENT_ID\": { \"type\": \"string\" },\n          \"EXTERNAL_AZURE_SECRET\": { \"type\": \"string\" },\n          \"EXTERNAL_FACEBOOK_ENABLED\": { \"type\": \"boolean\" },\n          \"EXTERNAL_FACEBOOK_CLIENT_ID\": { \"type\": \"string\" },\n          \"EXTERNAL_FACEBOOK_SECRET\": { \"type\": \"string\" },\n          \"URI_ALLOW_LIST\": { \"type\": \"string\" },\n          \"EXTERNAL_TWITTER_ENABLED\": { \"type\": \"boolean\" },\n          \"EXTERNAL_TWITTER_CLIENT_ID\": { \"type\": \"string\" },\n          \"EXTERNAL_TWITTER_SECRET\": { \"type\": \"string\" },\n          \"EXTERNAL_APPLE_ENABLED\": { \"type\": \"boolean\" },\n          \"EXTERNAL_APPLE_CLIENT_ID\": { \"type\": \"string\" },\n          \"EXTERNAL_APPLE_SECRET\": { \"type\": \"string\" },\n          \"EXTERNAL_DISCORD_ENABLED\": { \"type\": \"boolean\" },\n          \"EXTERNAL_DISCORD_CLIENT_ID\": { \"type\": \"string\" },\n          \"EXTERNAL_DISCORD_SECRET\": { \"type\": \"string\" },\n          \"EXTERNAL_TWITCH_ENABLED\": { \"type\": \"boolean\" },\n          \"EXTERNAL_TWITCH_CLIENT_ID\": { \"type\": \"string\" },\n          \"EXTERNAL_TWITCH_SECRET\": { \"type\": \"string\" },\n          \"SMTP_SENDER_NAME\": { \"type\": \"string\" },\n          \"EXTERNAL_EMAIL_ENABLED\": { \"type\": \"boolean\" },\n          \"EXTERNAL_PHONE_ENABLED\": { \"type\": \"boolean\" },\n          \"SMS_AUTOCONFIRM\": { \"type\": \"boolean\" },\n          \"SMS_MAX_FREQUENCY\": { \"type\": \"number\" },\n          \"SMS_OTP_EXP\": { \"type\": \"number\" },\n          \"SMS_OTP_LENGTH\": { \"type\": \"number\" },\n          \"SMS_PROVIDER\": { \"type\": \"string\" },\n          \"SMS_TWILIO_ACCOUNT_SID\": { \"type\": \"string\" },\n          \"SMS_TWILIO_AUTH_TOKEN\": { \"type\": \"string\" },\n          \"SMS_TWILIO_MESSAGE_SERVICE_SID\": { \"type\": \"string\" },\n          \"SMS_TEMPLATE\": { \"type\": \"string\" },\n          \"SECURITY_CAPTCHA_ENABLED\": { \"type\": \"boolean\" },\n          \"SECURITY_CAPTCHA_PROVIDER\": { \"type\": \"string\" },\n          \"SECURITY_CAPTCHA_SECRET\": { \"type\": \"string\" },\n          \"RATE_LIMIT_EMAIL_SENT\": { \"type\": \"number\" },\n          \"MAILER_SECURE_EMAIL_CHANGE_ENABLED\": { \"type\": \"boolean\" },\n          \"EXTERNAL_SPOTIFY_ENABLED\": { \"type\": \"boolean\" },\n          \"EXTERNAL_SPOTIFY_CLIENT_ID\": { \"type\": \"string\" },\n          \"EXTERNAL_SPOTIFY_SECRET\": { \"type\": \"string\" },\n          \"EXTERNAL_SLACK_ENABLED\": { \"type\": \"boolean\" },\n          \"EXTERNAL_SLACK_CLIENT_ID\": { \"type\": \"string\" },\n          \"EXTERNAL_SLACK_SECRET\": { \"type\": \"string\" },\n          \"SMS_MESSAGEBIRD_ACCESS_KEY\": { \"type\": \"string\" },\n          \"SMS_MESSAGEBIRD_ORIGINATOR\": { \"type\": \"string\" },\n          \"SMTP_PASS_ENCRYPTED\": { \"type\": \"string\" },\n          \"REFRESH_TOKEN_ROTATION_ENABLED\": { \"type\": \"boolean\" },\n          \"EXTERNAL_LINKEDIN_ENABLED\": { \"type\": \"boolean\" },\n          \"EXTERNAL_LINKEDIN_CLIENT_ID\": { \"type\": \"string\" },\n          \"EXTERNAL_LINKEDIN_SECRET\": { \"type\": \"string\" },\n          \"EXTERNAL_NOTION_ENABLED\": { \"type\": \"boolean\" },\n          \"EXTERNAL_NOTION_CLIENT_ID\": { \"type\": \"string\" },\n          \"EXTERNAL_NOTION_SECRET\": { \"type\": \"string\" },\n          \"SMS_VONAGE_API_KEY\": { \"type\": \"string\" },\n          \"SMS_VONAGE_API_SECRET\": { \"type\": \"string\" },\n          \"SMS_VONAGE_FROM\": { \"type\": \"string\" },\n          \"SMS_TEXTLOCAL_API_KEY\": { \"type\": \"string\" },\n          \"SMS_TEXTLOCAL_SENDER\": { \"type\": \"string\" },\n          \"EXTERNAL_ZOOM_ENABLED\": { \"type\": \"boolean\" },\n          \"EXTERNAL_ZOOM_CLIENT_ID\": { \"type\": \"string\" },\n          \"EXTERNAL_ZOOM_SECRET\": { \"type\": \"string\" },\n          \"EXTERNAL_AZURE_URL\": { \"type\": \"string\" },\n          \"PASSWORD_MIN_LENGTH\": { \"type\": \"number\" },\n          \"EXTERNAL_KEYCLOAK_ENABLED\": { \"type\": \"boolean\" },\n          \"EXTERNAL_KEYCLOAK_CLIENT_ID\": { \"type\": \"string\" },\n          \"EXTERNAL_KEYCLOAK_SECRET\": { \"type\": \"string\" },\n          \"EXTERNAL_KEYCLOAK_URL\": { \"type\": \"string\" },\n          \"EXTERNAL_WORKOS_ENABLED\": { \"type\": \"boolean\" },\n          \"EXTERNAL_WORKOS_CLIENT_ID\": { \"type\": \"string\" },\n          \"EXTERNAL_WORKOS_SECRET\": { \"type\": \"string\" },\n          \"EXTERNAL_WORKOS_URL\": { \"type\": \"string\" },\n          \"SECURITY_UPDATE_PASSWORD_REQUIRE_REAUTHENTICATION\": {\n            \"type\": \"boolean\"\n          },\n          \"SECURITY_REFRESH_TOKEN_REUSE_INTERVAL\": { \"type\": \"number\" },\n          \"MAILER_OTP_EXP\": { \"type\": \"number\" },\n          \"RATE_LIMIT_VERIFY\": { \"type\": \"number\" },\n          \"RATE_LIMIT_TOKEN_REFRESH\": { \"type\": \"number\" }\n        },\n        \"required\": [\n          \"app_version\",\n          \"isFreeTier\",\n          \"id\",\n          \"project_id\",\n          \"updated_at\",\n          \"SITE_URL\",\n          \"OPERATOR_TOKEN\",\n          \"DISABLE_SIGNUP\",\n          \"RATE_LIMIT_HEADER\",\n          \"JWT_EXP\",\n          \"JWT_AUD\",\n          \"JWT_DEFAULT_GROUP_NAME\",\n          \"EXTERNAL_GITHUB_ENABLED\",\n          \"EXTERNAL_GITHUB_CLIENT_ID\",\n          \"EXTERNAL_GITHUB_SECRET\",\n          \"EXTERNAL_BITBUCKET_ENABLED\",\n          \"EXTERNAL_BITBUCKET_CLIENT_ID\",\n          \"EXTERNAL_BITBUCKET_SECRET\",\n          \"EXTERNAL_GOOGLE_ENABLED\",\n          \"EXTERNAL_GOOGLE_CLIENT_ID\",\n          \"EXTERNAL_GOOGLE_SECRET\",\n          \"EXTERNAL_GITLAB_ENABLED\",\n          \"EXTERNAL_GITLAB_CLIENT_ID\",\n          \"EXTERNAL_GITLAB_SECRET\",\n          \"EXTERNAL_GITLAB_REDIRECT_URI\",\n          \"EXTERNAL_GITLAB_URL\",\n          \"SMTP_ADMIN_EMAIL\",\n          \"SMTP_HOST\",\n          \"SMTP_PORT\",\n          \"SMTP_USER\",\n          \"SMTP_PASS\",\n          \"SMTP_MAX_FREQUENCY\",\n          \"MAILER_AUTOCONFIRM\",\n          \"MAILER_URLPATHS_INVITE\",\n          \"MAILER_URLPATHS_CONFIRMATION\",\n          \"MAILER_URLPATHS_RECOVERY\",\n          \"MAILER_URLPATHS_EMAIL_CHANGE\",\n          \"MAILER_SUBJECTS_INVITE\",\n          \"MAILER_SUBJECTS_CONFIRMATION\",\n          \"MAILER_SUBJECTS_RECOVERY\",\n          \"MAILER_SUBJECTS_EMAIL_CHANGE\",\n          \"MAILER_TEMPLATES_INVITE\",\n          \"MAILER_TEMPLATES_INVITE_CONTENT\",\n          \"MAILER_TEMPLATES_CONFIRMATION\",\n          \"MAILER_TEMPLATES_CONFIRMATION_CONTENT\",\n          \"MAILER_TEMPLATES_RECOVERY\",\n          \"MAILER_TEMPLATES_RECOVERY_CONTENT\",\n          \"MAILER_TEMPLATES_EMAIL_CHANGE\",\n          \"MAILER_TEMPLATES_EMAIL_CHANGE_CONTENT\",\n          \"MAILER_SUBJECTS_MAGIC_LINK\",\n          \"MAILER_TEMPLATES_MAGIC_LINK\",\n          \"MAILER_TEMPLATES_MAGIC_LINK_CONTENT\",\n          \"EXTERNAL_AZURE_ENABLED\",\n          \"EXTERNAL_AZURE_CLIENT_ID\",\n          \"EXTERNAL_AZURE_SECRET\",\n          \"EXTERNAL_FACEBOOK_ENABLED\",\n          \"EXTERNAL_FACEBOOK_CLIENT_ID\",\n          \"EXTERNAL_FACEBOOK_SECRET\",\n          \"URI_ALLOW_LIST\",\n          \"EXTERNAL_TWITTER_ENABLED\",\n          \"EXTERNAL_TWITTER_CLIENT_ID\",\n          \"EXTERNAL_TWITTER_SECRET\",\n          \"EXTERNAL_APPLE_ENABLED\",\n          \"EXTERNAL_APPLE_CLIENT_ID\",\n          \"EXTERNAL_APPLE_SECRET\",\n          \"EXTERNAL_DISCORD_ENABLED\",\n          \"EXTERNAL_DISCORD_CLIENT_ID\",\n          \"EXTERNAL_DISCORD_SECRET\",\n          \"EXTERNAL_TWITCH_ENABLED\",\n          \"EXTERNAL_TWITCH_CLIENT_ID\",\n          \"EXTERNAL_TWITCH_SECRET\",\n          \"SMTP_SENDER_NAME\",\n          \"EXTERNAL_EMAIL_ENABLED\",\n          \"EXTERNAL_PHONE_ENABLED\",\n          \"SMS_AUTOCONFIRM\",\n          \"SMS_MAX_FREQUENCY\",\n          \"SMS_OTP_EXP\",\n          \"SMS_OTP_LENGTH\",\n          \"SMS_PROVIDER\",\n          \"SMS_TWILIO_ACCOUNT_SID\",\n          \"SMS_TWILIO_AUTH_TOKEN\",\n          \"SMS_TWILIO_MESSAGE_SERVICE_SID\",\n          \"SMS_TEMPLATE\",\n          \"SECURITY_CAPTCHA_ENABLED\",\n          \"SECURITY_CAPTCHA_PROVIDER\",\n          \"SECURITY_CAPTCHA_SECRET\",\n          \"RATE_LIMIT_EMAIL_SENT\",\n          \"MAILER_SECURE_EMAIL_CHANGE_ENABLED\",\n          \"EXTERNAL_SPOTIFY_ENABLED\",\n          \"EXTERNAL_SPOTIFY_CLIENT_ID\",\n          \"EXTERNAL_SPOTIFY_SECRET\",\n          \"EXTERNAL_SLACK_ENABLED\",\n          \"EXTERNAL_SLACK_CLIENT_ID\",\n          \"EXTERNAL_SLACK_SECRET\",\n          \"SMS_MESSAGEBIRD_ACCESS_KEY\",\n          \"SMS_MESSAGEBIRD_ORIGINATOR\",\n          \"SMTP_PASS_ENCRYPTED\",\n          \"REFRESH_TOKEN_ROTATION_ENABLED\",\n          \"EXTERNAL_LINKEDIN_ENABLED\",\n          \"EXTERNAL_LINKEDIN_CLIENT_ID\",\n          \"EXTERNAL_LINKEDIN_SECRET\",\n          \"EXTERNAL_NOTION_ENABLED\",\n          \"EXTERNAL_NOTION_CLIENT_ID\",\n          \"EXTERNAL_NOTION_SECRET\",\n          \"SMS_VONAGE_API_KEY\",\n          \"SMS_VONAGE_API_SECRET\",\n          \"SMS_VONAGE_FROM\",\n          \"SMS_TEXTLOCAL_API_KEY\",\n          \"SMS_TEXTLOCAL_SENDER\",\n          \"EXTERNAL_ZOOM_ENABLED\",\n          \"EXTERNAL_ZOOM_CLIENT_ID\",\n          \"EXTERNAL_ZOOM_SECRET\",\n          \"EXTERNAL_AZURE_URL\",\n          \"PASSWORD_MIN_LENGTH\",\n          \"EXTERNAL_KEYCLOAK_ENABLED\",\n          \"EXTERNAL_KEYCLOAK_CLIENT_ID\",\n          \"EXTERNAL_KEYCLOAK_SECRET\",\n          \"EXTERNAL_KEYCLOAK_URL\",\n          \"EXTERNAL_WORKOS_ENABLED\",\n          \"EXTERNAL_WORKOS_CLIENT_ID\",\n          \"EXTERNAL_WORKOS_SECRET\",\n          \"EXTERNAL_WORKOS_URL\",\n          \"SECURITY_UPDATE_PASSWORD_REQUIRE_REAUTHENTICATION\",\n          \"SECURITY_REFRESH_TOKEN_REUSE_INTERVAL\",\n          \"MAILER_OTP_EXP\",\n          \"RATE_LIMIT_VERIFY\",\n          \"RATE_LIMIT_TOKEN_REFRESH\"\n        ]\n      },\n      \"UpdateGoTrueConfigBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"SITE_URL\": { \"type\": \"string\" },\n          \"OPERATOR_TOKEN\": { \"type\": \"string\" },\n          \"DISABLE_SIGNUP\": { \"type\": \"boolean\" },\n          \"RATE_LIMIT_HEADER\": { \"type\": \"string\" },\n          \"JWT_EXP\": { \"type\": \"number\" },\n          \"JWT_AUD\": { \"type\": \"string\" },\n          \"JWT_DEFAULT_GROUP_NAME\": { \"type\": \"string\" },\n          \"EXTERNAL_GITHUB_ENABLED\": { \"type\": \"boolean\" },\n          \"EXTERNAL_GITHUB_CLIENT_ID\": { \"type\": \"string\" },\n          \"EXTERNAL_GITHUB_SECRET\": { \"type\": \"string\" },\n          \"EXTERNAL_BITBUCKET_ENABLED\": { \"type\": \"boolean\" },\n          \"EXTERNAL_BITBUCKET_CLIENT_ID\": { \"type\": \"string\" },\n          \"EXTERNAL_BITBUCKET_SECRET\": { \"type\": \"string\" },\n          \"EXTERNAL_GOOGLE_ENABLED\": { \"type\": \"boolean\" },\n          \"EXTERNAL_GOOGLE_CLIENT_ID\": { \"type\": \"string\" },\n          \"EXTERNAL_GOOGLE_SECRET\": { \"type\": \"string\" },\n          \"EXTERNAL_GITLAB_ENABLED\": { \"type\": \"boolean\" },\n          \"EXTERNAL_GITLAB_CLIENT_ID\": { \"type\": \"string\" },\n          \"EXTERNAL_GITLAB_SECRET\": { \"type\": \"string\" },\n          \"EXTERNAL_GITLAB_REDIRECT_URI\": { \"type\": \"string\" },\n          \"EXTERNAL_GITLAB_URL\": { \"type\": \"string\" },\n          \"SMTP_ADMIN_EMAIL\": { \"type\": \"string\" },\n          \"SMTP_HOST\": { \"type\": \"string\" },\n          \"SMTP_PORT\": { \"type\": \"string\" },\n          \"SMTP_USER\": { \"type\": \"string\" },\n          \"SMTP_PASS\": { \"type\": \"string\" },\n          \"SMTP_MAX_FREQUENCY\": { \"type\": \"number\" },\n          \"MAILER_AUTOCONFIRM\": { \"type\": \"boolean\" },\n          \"MAILER_URLPATHS_INVITE\": { \"type\": \"string\" },\n          \"MAILER_URLPATHS_CONFIRMATION\": { \"type\": \"string\" },\n          \"MAILER_URLPATHS_RECOVERY\": { \"type\": \"string\" },\n          \"MAILER_URLPATHS_EMAIL_CHANGE\": { \"type\": \"string\" },\n          \"MAILER_SUBJECTS_INVITE\": { \"type\": \"string\" },\n          \"MAILER_SUBJECTS_CONFIRMATION\": { \"type\": \"string\" },\n          \"MAILER_SUBJECTS_RECOVERY\": { \"type\": \"string\" },\n          \"MAILER_SUBJECTS_EMAIL_CHANGE\": { \"type\": \"string\" },\n          \"MAILER_TEMPLATES_INVITE\": { \"type\": \"string\" },\n          \"MAILER_TEMPLATES_INVITE_CONTENT\": { \"type\": \"string\" },\n          \"MAILER_TEMPLATES_CONFIRMATION\": { \"type\": \"string\" },\n          \"MAILER_TEMPLATES_CONFIRMATION_CONTENT\": { \"type\": \"string\" },\n          \"MAILER_TEMPLATES_RECOVERY\": { \"type\": \"string\" },\n          \"MAILER_TEMPLATES_RECOVERY_CONTENT\": { \"type\": \"string\" },\n          \"MAILER_TEMPLATES_EMAIL_CHANGE\": { \"type\": \"string\" },\n          \"MAILER_TEMPLATES_EMAIL_CHANGE_CONTENT\": { \"type\": \"string\" },\n          \"MAILER_SUBJECTS_MAGIC_LINK\": { \"type\": \"string\" },\n          \"MAILER_TEMPLATES_MAGIC_LINK\": { \"type\": \"string\" },\n          \"MAILER_TEMPLATES_MAGIC_LINK_CONTENT\": { \"type\": \"string\" },\n          \"EXTERNAL_AZURE_ENABLED\": { \"type\": \"boolean\" },\n          \"EXTERNAL_AZURE_CLIENT_ID\": { \"type\": \"string\" },\n          \"EXTERNAL_AZURE_SECRET\": { \"type\": \"string\" },\n          \"EXTERNAL_FACEBOOK_ENABLED\": { \"type\": \"boolean\" },\n          \"EXTERNAL_FACEBOOK_CLIENT_ID\": { \"type\": \"string\" },\n          \"EXTERNAL_FACEBOOK_SECRET\": { \"type\": \"string\" },\n          \"URI_ALLOW_LIST\": { \"type\": \"string\" },\n          \"EXTERNAL_TWITTER_ENABLED\": { \"type\": \"boolean\" },\n          \"EXTERNAL_TWITTER_CLIENT_ID\": { \"type\": \"string\" },\n          \"EXTERNAL_TWITTER_SECRET\": { \"type\": \"string\" },\n          \"EXTERNAL_APPLE_ENABLED\": { \"type\": \"boolean\" },\n          \"EXTERNAL_APPLE_CLIENT_ID\": { \"type\": \"string\" },\n          \"EXTERNAL_APPLE_SECRET\": { \"type\": \"string\" },\n          \"EXTERNAL_DISCORD_ENABLED\": { \"type\": \"boolean\" },\n          \"EXTERNAL_DISCORD_CLIENT_ID\": { \"type\": \"string\" },\n          \"EXTERNAL_DISCORD_SECRET\": { \"type\": \"string\" },\n          \"EXTERNAL_TWITCH_ENABLED\": { \"type\": \"boolean\" },\n          \"EXTERNAL_TWITCH_CLIENT_ID\": { \"type\": \"string\" },\n          \"EXTERNAL_TWITCH_SECRET\": { \"type\": \"string\" },\n          \"SMTP_SENDER_NAME\": { \"type\": \"string\" },\n          \"EXTERNAL_EMAIL_ENABLED\": { \"type\": \"boolean\" },\n          \"EXTERNAL_PHONE_ENABLED\": { \"type\": \"boolean\" },\n          \"SMS_AUTOCONFIRM\": { \"type\": \"boolean\" },\n          \"SMS_MAX_FREQUENCY\": { \"type\": \"number\" },\n          \"SMS_OTP_EXP\": { \"type\": \"number\" },\n          \"SMS_OTP_LENGTH\": { \"type\": \"number\" },\n          \"SMS_PROVIDER\": { \"type\": \"string\" },\n          \"SMS_TWILIO_ACCOUNT_SID\": { \"type\": \"string\" },\n          \"SMS_TWILIO_AUTH_TOKEN\": { \"type\": \"string\" },\n          \"SMS_TWILIO_MESSAGE_SERVICE_SID\": { \"type\": \"string\" },\n          \"SMS_TEMPLATE\": { \"type\": \"string\" },\n          \"SECURITY_CAPTCHA_ENABLED\": { \"type\": \"boolean\" },\n          \"SECURITY_CAPTCHA_PROVIDER\": { \"type\": \"string\" },\n          \"SECURITY_CAPTCHA_SECRET\": { \"type\": \"string\" },\n          \"RATE_LIMIT_EMAIL_SENT\": { \"type\": \"number\" },\n          \"MAILER_SECURE_EMAIL_CHANGE_ENABLED\": { \"type\": \"boolean\" },\n          \"EXTERNAL_SPOTIFY_ENABLED\": { \"type\": \"boolean\" },\n          \"EXTERNAL_SPOTIFY_CLIENT_ID\": { \"type\": \"string\" },\n          \"EXTERNAL_SPOTIFY_SECRET\": { \"type\": \"string\" },\n          \"EXTERNAL_SLACK_ENABLED\": { \"type\": \"boolean\" },\n          \"EXTERNAL_SLACK_CLIENT_ID\": { \"type\": \"string\" },\n          \"EXTERNAL_SLACK_SECRET\": { \"type\": \"string\" },\n          \"SMS_MESSAGEBIRD_ACCESS_KEY\": { \"type\": \"string\" },\n          \"SMS_MESSAGEBIRD_ORIGINATOR\": { \"type\": \"string\" },\n          \"SMTP_PASS_ENCRYPTED\": { \"type\": \"string\" },\n          \"REFRESH_TOKEN_ROTATION_ENABLED\": { \"type\": \"boolean\" },\n          \"EXTERNAL_LINKEDIN_ENABLED\": { \"type\": \"boolean\" },\n          \"EXTERNAL_LINKEDIN_CLIENT_ID\": { \"type\": \"string\" },\n          \"EXTERNAL_LINKEDIN_SECRET\": { \"type\": \"string\" },\n          \"EXTERNAL_NOTION_ENABLED\": { \"type\": \"boolean\" },\n          \"EXTERNAL_NOTION_CLIENT_ID\": { \"type\": \"string\" },\n          \"EXTERNAL_NOTION_SECRET\": { \"type\": \"string\" },\n          \"SMS_VONAGE_API_KEY\": { \"type\": \"string\" },\n          \"SMS_VONAGE_API_SECRET\": { \"type\": \"string\" },\n          \"SMS_VONAGE_FROM\": { \"type\": \"string\" },\n          \"SMS_TEXTLOCAL_API_KEY\": { \"type\": \"string\" },\n          \"SMS_TEXTLOCAL_SENDER\": { \"type\": \"string\" },\n          \"EXTERNAL_ZOOM_ENABLED\": { \"type\": \"boolean\" },\n          \"EXTERNAL_ZOOM_CLIENT_ID\": { \"type\": \"string\" },\n          \"EXTERNAL_ZOOM_SECRET\": { \"type\": \"string\" },\n          \"EXTERNAL_AZURE_URL\": { \"type\": \"string\" },\n          \"PASSWORD_MIN_LENGTH\": { \"type\": \"number\" },\n          \"EXTERNAL_KEYCLOAK_ENABLED\": { \"type\": \"boolean\" },\n          \"EXTERNAL_KEYCLOAK_CLIENT_ID\": { \"type\": \"string\" },\n          \"EXTERNAL_KEYCLOAK_SECRET\": { \"type\": \"string\" },\n          \"EXTERNAL_KEYCLOAK_URL\": { \"type\": \"string\" },\n          \"EXTERNAL_WORKOS_ENABLED\": { \"type\": \"boolean\" },\n          \"EXTERNAL_WORKOS_CLIENT_ID\": { \"type\": \"string\" },\n          \"EXTERNAL_WORKOS_SECRET\": { \"type\": \"string\" },\n          \"EXTERNAL_WORKOS_URL\": { \"type\": \"string\" },\n          \"SECURITY_UPDATE_PASSWORD_REQUIRE_REAUTHENTICATION\": {\n            \"type\": \"boolean\"\n          },\n          \"SECURITY_REFRESH_TOKEN_REUSE_INTERVAL\": { \"type\": \"number\" },\n          \"MAILER_OTP_EXP\": { \"type\": \"number\" },\n          \"RATE_LIMIT_VERIFY\": { \"type\": \"number\" },\n          \"RATE_LIMIT_TOKEN_REFRESH\": { \"type\": \"number\" }\n        },\n        \"required\": [\n          \"SITE_URL\",\n          \"OPERATOR_TOKEN\",\n          \"DISABLE_SIGNUP\",\n          \"RATE_LIMIT_HEADER\",\n          \"JWT_EXP\",\n          \"JWT_AUD\",\n          \"JWT_DEFAULT_GROUP_NAME\",\n          \"EXTERNAL_GITHUB_ENABLED\",\n          \"EXTERNAL_GITHUB_CLIENT_ID\",\n          \"EXTERNAL_GITHUB_SECRET\",\n          \"EXTERNAL_BITBUCKET_ENABLED\",\n          \"EXTERNAL_BITBUCKET_CLIENT_ID\",\n          \"EXTERNAL_BITBUCKET_SECRET\",\n          \"EXTERNAL_GOOGLE_ENABLED\",\n          \"EXTERNAL_GOOGLE_CLIENT_ID\",\n          \"EXTERNAL_GOOGLE_SECRET\",\n          \"EXTERNAL_GITLAB_ENABLED\",\n          \"EXTERNAL_GITLAB_CLIENT_ID\",\n          \"EXTERNAL_GITLAB_SECRET\",\n          \"EXTERNAL_GITLAB_REDIRECT_URI\",\n          \"EXTERNAL_GITLAB_URL\",\n          \"SMTP_ADMIN_EMAIL\",\n          \"SMTP_HOST\",\n          \"SMTP_PORT\",\n          \"SMTP_USER\",\n          \"SMTP_PASS\",\n          \"SMTP_MAX_FREQUENCY\",\n          \"MAILER_AUTOCONFIRM\",\n          \"MAILER_URLPATHS_INVITE\",\n          \"MAILER_URLPATHS_CONFIRMATION\",\n          \"MAILER_URLPATHS_RECOVERY\",\n          \"MAILER_URLPATHS_EMAIL_CHANGE\",\n          \"MAILER_SUBJECTS_INVITE\",\n          \"MAILER_SUBJECTS_CONFIRMATION\",\n          \"MAILER_SUBJECTS_RECOVERY\",\n          \"MAILER_SUBJECTS_EMAIL_CHANGE\",\n          \"MAILER_TEMPLATES_INVITE\",\n          \"MAILER_TEMPLATES_INVITE_CONTENT\",\n          \"MAILER_TEMPLATES_CONFIRMATION\",\n          \"MAILER_TEMPLATES_CONFIRMATION_CONTENT\",\n          \"MAILER_TEMPLATES_RECOVERY\",\n          \"MAILER_TEMPLATES_RECOVERY_CONTENT\",\n          \"MAILER_TEMPLATES_EMAIL_CHANGE\",\n          \"MAILER_TEMPLATES_EMAIL_CHANGE_CONTENT\",\n          \"MAILER_SUBJECTS_MAGIC_LINK\",\n          \"MAILER_TEMPLATES_MAGIC_LINK\",\n          \"MAILER_TEMPLATES_MAGIC_LINK_CONTENT\",\n          \"EXTERNAL_AZURE_ENABLED\",\n          \"EXTERNAL_AZURE_CLIENT_ID\",\n          \"EXTERNAL_AZURE_SECRET\",\n          \"EXTERNAL_FACEBOOK_ENABLED\",\n          \"EXTERNAL_FACEBOOK_CLIENT_ID\",\n          \"EXTERNAL_FACEBOOK_SECRET\",\n          \"URI_ALLOW_LIST\",\n          \"EXTERNAL_TWITTER_ENABLED\",\n          \"EXTERNAL_TWITTER_CLIENT_ID\",\n          \"EXTERNAL_TWITTER_SECRET\",\n          \"EXTERNAL_APPLE_ENABLED\",\n          \"EXTERNAL_APPLE_CLIENT_ID\",\n          \"EXTERNAL_APPLE_SECRET\",\n          \"EXTERNAL_DISCORD_ENABLED\",\n          \"EXTERNAL_DISCORD_CLIENT_ID\",\n          \"EXTERNAL_DISCORD_SECRET\",\n          \"EXTERNAL_TWITCH_ENABLED\",\n          \"EXTERNAL_TWITCH_CLIENT_ID\",\n          \"EXTERNAL_TWITCH_SECRET\",\n          \"SMTP_SENDER_NAME\",\n          \"EXTERNAL_EMAIL_ENABLED\",\n          \"EXTERNAL_PHONE_ENABLED\",\n          \"SMS_AUTOCONFIRM\",\n          \"SMS_MAX_FREQUENCY\",\n          \"SMS_OTP_EXP\",\n          \"SMS_OTP_LENGTH\",\n          \"SMS_PROVIDER\",\n          \"SMS_TWILIO_ACCOUNT_SID\",\n          \"SMS_TWILIO_AUTH_TOKEN\",\n          \"SMS_TWILIO_MESSAGE_SERVICE_SID\",\n          \"SMS_TEMPLATE\",\n          \"SECURITY_CAPTCHA_ENABLED\",\n          \"SECURITY_CAPTCHA_PROVIDER\",\n          \"SECURITY_CAPTCHA_SECRET\",\n          \"RATE_LIMIT_EMAIL_SENT\",\n          \"MAILER_SECURE_EMAIL_CHANGE_ENABLED\",\n          \"EXTERNAL_SPOTIFY_ENABLED\",\n          \"EXTERNAL_SPOTIFY_CLIENT_ID\",\n          \"EXTERNAL_SPOTIFY_SECRET\",\n          \"EXTERNAL_SLACK_ENABLED\",\n          \"EXTERNAL_SLACK_CLIENT_ID\",\n          \"EXTERNAL_SLACK_SECRET\",\n          \"SMS_MESSAGEBIRD_ACCESS_KEY\",\n          \"SMS_MESSAGEBIRD_ORIGINATOR\",\n          \"SMTP_PASS_ENCRYPTED\",\n          \"REFRESH_TOKEN_ROTATION_ENABLED\",\n          \"EXTERNAL_LINKEDIN_ENABLED\",\n          \"EXTERNAL_LINKEDIN_CLIENT_ID\",\n          \"EXTERNAL_LINKEDIN_SECRET\",\n          \"EXTERNAL_NOTION_ENABLED\",\n          \"EXTERNAL_NOTION_CLIENT_ID\",\n          \"EXTERNAL_NOTION_SECRET\",\n          \"SMS_VONAGE_API_KEY\",\n          \"SMS_VONAGE_API_SECRET\",\n          \"SMS_VONAGE_FROM\",\n          \"SMS_TEXTLOCAL_API_KEY\",\n          \"SMS_TEXTLOCAL_SENDER\",\n          \"EXTERNAL_ZOOM_ENABLED\",\n          \"EXTERNAL_ZOOM_CLIENT_ID\",\n          \"EXTERNAL_ZOOM_SECRET\",\n          \"EXTERNAL_AZURE_URL\",\n          \"PASSWORD_MIN_LENGTH\",\n          \"EXTERNAL_KEYCLOAK_ENABLED\",\n          \"EXTERNAL_KEYCLOAK_CLIENT_ID\",\n          \"EXTERNAL_KEYCLOAK_SECRET\",\n          \"EXTERNAL_KEYCLOAK_URL\",\n          \"EXTERNAL_WORKOS_ENABLED\",\n          \"EXTERNAL_WORKOS_CLIENT_ID\",\n          \"EXTERNAL_WORKOS_SECRET\",\n          \"EXTERNAL_WORKOS_URL\",\n          \"SECURITY_UPDATE_PASSWORD_REQUIRE_REAUTHENTICATION\",\n          \"SECURITY_REFRESH_TOKEN_REUSE_INTERVAL\",\n          \"MAILER_OTP_EXP\",\n          \"RATE_LIMIT_VERIFY\",\n          \"RATE_LIMIT_TOKEN_REFRESH\"\n        ]\n      },\n      \"GoTrueConfig\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"SITE_URL\": { \"type\": \"string\" },\n          \"OPERATOR_TOKEN\": { \"type\": \"string\" },\n          \"DISABLE_SIGNUP\": { \"type\": \"boolean\" },\n          \"RATE_LIMIT_HEADER\": { \"type\": \"string\" },\n          \"JWT_EXP\": { \"type\": \"number\" },\n          \"JWT_AUD\": { \"type\": \"string\" },\n          \"JWT_DEFAULT_GROUP_NAME\": { \"type\": \"string\" },\n          \"EXTERNAL_GITHUB_ENABLED\": { \"type\": \"boolean\" },\n          \"EXTERNAL_GITHUB_CLIENT_ID\": { \"type\": \"string\" },\n          \"EXTERNAL_GITHUB_SECRET\": { \"type\": \"string\" },\n          \"EXTERNAL_BITBUCKET_ENABLED\": { \"type\": \"boolean\" },\n          \"EXTERNAL_BITBUCKET_CLIENT_ID\": { \"type\": \"string\" },\n          \"EXTERNAL_BITBUCKET_SECRET\": { \"type\": \"string\" },\n          \"EXTERNAL_GOOGLE_ENABLED\": { \"type\": \"boolean\" },\n          \"EXTERNAL_GOOGLE_CLIENT_ID\": { \"type\": \"string\" },\n          \"EXTERNAL_GOOGLE_SECRET\": { \"type\": \"string\" },\n          \"EXTERNAL_GITLAB_ENABLED\": { \"type\": \"boolean\" },\n          \"EXTERNAL_GITLAB_CLIENT_ID\": { \"type\": \"string\" },\n          \"EXTERNAL_GITLAB_SECRET\": { \"type\": \"string\" },\n          \"EXTERNAL_GITLAB_REDIRECT_URI\": { \"type\": \"string\" },\n          \"EXTERNAL_GITLAB_URL\": { \"type\": \"string\" },\n          \"SMTP_ADMIN_EMAIL\": { \"type\": \"string\" },\n          \"SMTP_HOST\": { \"type\": \"string\" },\n          \"SMTP_PORT\": { \"type\": \"string\" },\n          \"SMTP_USER\": { \"type\": \"string\" },\n          \"SMTP_PASS\": { \"type\": \"string\" },\n          \"SMTP_MAX_FREQUENCY\": { \"type\": \"number\" },\n          \"MAILER_AUTOCONFIRM\": { \"type\": \"boolean\" },\n          \"MAILER_URLPATHS_INVITE\": { \"type\": \"string\" },\n          \"MAILER_URLPATHS_CONFIRMATION\": { \"type\": \"string\" },\n          \"MAILER_URLPATHS_RECOVERY\": { \"type\": \"string\" },\n          \"MAILER_URLPATHS_EMAIL_CHANGE\": { \"type\": \"string\" },\n          \"MAILER_SUBJECTS_INVITE\": { \"type\": \"string\" },\n          \"MAILER_SUBJECTS_CONFIRMATION\": { \"type\": \"string\" },\n          \"MAILER_SUBJECTS_RECOVERY\": { \"type\": \"string\" },\n          \"MAILER_SUBJECTS_EMAIL_CHANGE\": { \"type\": \"string\" },\n          \"MAILER_TEMPLATES_INVITE\": { \"type\": \"string\" },\n          \"MAILER_TEMPLATES_INVITE_CONTENT\": { \"type\": \"string\" },\n          \"MAILER_TEMPLATES_CONFIRMATION\": { \"type\": \"string\" },\n          \"MAILER_TEMPLATES_CONFIRMATION_CONTENT\": { \"type\": \"string\" },\n          \"MAILER_TEMPLATES_RECOVERY\": { \"type\": \"string\" },\n          \"MAILER_TEMPLATES_RECOVERY_CONTENT\": { \"type\": \"string\" },\n          \"MAILER_TEMPLATES_EMAIL_CHANGE\": { \"type\": \"string\" },\n          \"MAILER_TEMPLATES_EMAIL_CHANGE_CONTENT\": { \"type\": \"string\" },\n          \"MAILER_SUBJECTS_MAGIC_LINK\": { \"type\": \"string\" },\n          \"MAILER_TEMPLATES_MAGIC_LINK\": { \"type\": \"string\" },\n          \"MAILER_TEMPLATES_MAGIC_LINK_CONTENT\": { \"type\": \"string\" },\n          \"EXTERNAL_AZURE_ENABLED\": { \"type\": \"boolean\" },\n          \"EXTERNAL_AZURE_CLIENT_ID\": { \"type\": \"string\" },\n          \"EXTERNAL_AZURE_SECRET\": { \"type\": \"string\" },\n          \"EXTERNAL_FACEBOOK_ENABLED\": { \"type\": \"boolean\" },\n          \"EXTERNAL_FACEBOOK_CLIENT_ID\": { \"type\": \"string\" },\n          \"EXTERNAL_FACEBOOK_SECRET\": { \"type\": \"string\" },\n          \"URI_ALLOW_LIST\": { \"type\": \"string\" },\n          \"EXTERNAL_TWITTER_ENABLED\": { \"type\": \"boolean\" },\n          \"EXTERNAL_TWITTER_CLIENT_ID\": { \"type\": \"string\" },\n          \"EXTERNAL_TWITTER_SECRET\": { \"type\": \"string\" },\n          \"EXTERNAL_APPLE_ENABLED\": { \"type\": \"boolean\" },\n          \"EXTERNAL_APPLE_CLIENT_ID\": { \"type\": \"string\" },\n          \"EXTERNAL_APPLE_SECRET\": { \"type\": \"string\" },\n          \"EXTERNAL_DISCORD_ENABLED\": { \"type\": \"boolean\" },\n          \"EXTERNAL_DISCORD_CLIENT_ID\": { \"type\": \"string\" },\n          \"EXTERNAL_DISCORD_SECRET\": { \"type\": \"string\" },\n          \"EXTERNAL_TWITCH_ENABLED\": { \"type\": \"boolean\" },\n          \"EXTERNAL_TWITCH_CLIENT_ID\": { \"type\": \"string\" },\n          \"EXTERNAL_TWITCH_SECRET\": { \"type\": \"string\" },\n          \"SMTP_SENDER_NAME\": { \"type\": \"string\" },\n          \"EXTERNAL_EMAIL_ENABLED\": { \"type\": \"boolean\" },\n          \"EXTERNAL_PHONE_ENABLED\": { \"type\": \"boolean\" },\n          \"SMS_AUTOCONFIRM\": { \"type\": \"boolean\" },\n          \"SMS_MAX_FREQUENCY\": { \"type\": \"number\" },\n          \"SMS_OTP_EXP\": { \"type\": \"number\" },\n          \"SMS_OTP_LENGTH\": { \"type\": \"number\" },\n          \"SMS_PROVIDER\": { \"type\": \"string\" },\n          \"SMS_TWILIO_ACCOUNT_SID\": { \"type\": \"string\" },\n          \"SMS_TWILIO_AUTH_TOKEN\": { \"type\": \"string\" },\n          \"SMS_TWILIO_MESSAGE_SERVICE_SID\": { \"type\": \"string\" },\n          \"SMS_TEMPLATE\": { \"type\": \"string\" },\n          \"SECURITY_CAPTCHA_ENABLED\": { \"type\": \"boolean\" },\n          \"SECURITY_CAPTCHA_PROVIDER\": { \"type\": \"string\" },\n          \"SECURITY_CAPTCHA_SECRET\": { \"type\": \"string\" },\n          \"RATE_LIMIT_EMAIL_SENT\": { \"type\": \"number\" },\n          \"MAILER_SECURE_EMAIL_CHANGE_ENABLED\": { \"type\": \"boolean\" },\n          \"EXTERNAL_SPOTIFY_ENABLED\": { \"type\": \"boolean\" },\n          \"EXTERNAL_SPOTIFY_CLIENT_ID\": { \"type\": \"string\" },\n          \"EXTERNAL_SPOTIFY_SECRET\": { \"type\": \"string\" },\n          \"EXTERNAL_SLACK_ENABLED\": { \"type\": \"boolean\" },\n          \"EXTERNAL_SLACK_CLIENT_ID\": { \"type\": \"string\" },\n          \"EXTERNAL_SLACK_SECRET\": { \"type\": \"string\" },\n          \"SMS_MESSAGEBIRD_ACCESS_KEY\": { \"type\": \"string\" },\n          \"SMS_MESSAGEBIRD_ORIGINATOR\": { \"type\": \"string\" },\n          \"SMTP_PASS_ENCRYPTED\": { \"type\": \"string\" },\n          \"REFRESH_TOKEN_ROTATION_ENABLED\": { \"type\": \"boolean\" },\n          \"EXTERNAL_LINKEDIN_ENABLED\": { \"type\": \"boolean\" },\n          \"EXTERNAL_LINKEDIN_CLIENT_ID\": { \"type\": \"string\" },\n          \"EXTERNAL_LINKEDIN_SECRET\": { \"type\": \"string\" },\n          \"EXTERNAL_NOTION_ENABLED\": { \"type\": \"boolean\" },\n          \"EXTERNAL_NOTION_CLIENT_ID\": { \"type\": \"string\" },\n          \"EXTERNAL_NOTION_SECRET\": { \"type\": \"string\" },\n          \"SMS_VONAGE_API_KEY\": { \"type\": \"string\" },\n          \"SMS_VONAGE_API_SECRET\": { \"type\": \"string\" },\n          \"SMS_VONAGE_FROM\": { \"type\": \"string\" },\n          \"SMS_TEXTLOCAL_API_KEY\": { \"type\": \"string\" },\n          \"SMS_TEXTLOCAL_SENDER\": { \"type\": \"string\" },\n          \"EXTERNAL_ZOOM_ENABLED\": { \"type\": \"boolean\" },\n          \"EXTERNAL_ZOOM_CLIENT_ID\": { \"type\": \"string\" },\n          \"EXTERNAL_ZOOM_SECRET\": { \"type\": \"string\" },\n          \"EXTERNAL_AZURE_URL\": { \"type\": \"string\" },\n          \"PASSWORD_MIN_LENGTH\": { \"type\": \"number\" },\n          \"EXTERNAL_KEYCLOAK_ENABLED\": { \"type\": \"boolean\" },\n          \"EXTERNAL_KEYCLOAK_CLIENT_ID\": { \"type\": \"string\" },\n          \"EXTERNAL_KEYCLOAK_SECRET\": { \"type\": \"string\" },\n          \"EXTERNAL_KEYCLOAK_URL\": { \"type\": \"string\" },\n          \"EXTERNAL_WORKOS_ENABLED\": { \"type\": \"boolean\" },\n          \"EXTERNAL_WORKOS_CLIENT_ID\": { \"type\": \"string\" },\n          \"EXTERNAL_WORKOS_SECRET\": { \"type\": \"string\" },\n          \"EXTERNAL_WORKOS_URL\": { \"type\": \"string\" },\n          \"SECURITY_UPDATE_PASSWORD_REQUIRE_REAUTHENTICATION\": {\n            \"type\": \"boolean\"\n          },\n          \"SECURITY_REFRESH_TOKEN_REUSE_INTERVAL\": { \"type\": \"number\" },\n          \"MAILER_OTP_EXP\": { \"type\": \"number\" },\n          \"RATE_LIMIT_VERIFY\": { \"type\": \"number\" },\n          \"RATE_LIMIT_TOKEN_REFRESH\": { \"type\": \"number\" },\n          \"id\": { \"type\": \"number\" },\n          \"project_id\": { \"type\": \"number\" },\n          \"updated_at\": { \"type\": \"string\" }\n        },\n        \"required\": [\n          \"SITE_URL\",\n          \"OPERATOR_TOKEN\",\n          \"DISABLE_SIGNUP\",\n          \"RATE_LIMIT_HEADER\",\n          \"JWT_EXP\",\n          \"JWT_AUD\",\n          \"JWT_DEFAULT_GROUP_NAME\",\n          \"EXTERNAL_GITHUB_ENABLED\",\n          \"EXTERNAL_GITHUB_CLIENT_ID\",\n          \"EXTERNAL_GITHUB_SECRET\",\n          \"EXTERNAL_BITBUCKET_ENABLED\",\n          \"EXTERNAL_BITBUCKET_CLIENT_ID\",\n          \"EXTERNAL_BITBUCKET_SECRET\",\n          \"EXTERNAL_GOOGLE_ENABLED\",\n          \"EXTERNAL_GOOGLE_CLIENT_ID\",\n          \"EXTERNAL_GOOGLE_SECRET\",\n          \"EXTERNAL_GITLAB_ENABLED\",\n          \"EXTERNAL_GITLAB_CLIENT_ID\",\n          \"EXTERNAL_GITLAB_SECRET\",\n          \"EXTERNAL_GITLAB_REDIRECT_URI\",\n          \"EXTERNAL_GITLAB_URL\",\n          \"SMTP_ADMIN_EMAIL\",\n          \"SMTP_HOST\",\n          \"SMTP_PORT\",\n          \"SMTP_USER\",\n          \"SMTP_PASS\",\n          \"SMTP_MAX_FREQUENCY\",\n          \"MAILER_AUTOCONFIRM\",\n          \"MAILER_URLPATHS_INVITE\",\n          \"MAILER_URLPATHS_CONFIRMATION\",\n          \"MAILER_URLPATHS_RECOVERY\",\n          \"MAILER_URLPATHS_EMAIL_CHANGE\",\n          \"MAILER_SUBJECTS_INVITE\",\n          \"MAILER_SUBJECTS_CONFIRMATION\",\n          \"MAILER_SUBJECTS_RECOVERY\",\n          \"MAILER_SUBJECTS_EMAIL_CHANGE\",\n          \"MAILER_TEMPLATES_INVITE\",\n          \"MAILER_TEMPLATES_INVITE_CONTENT\",\n          \"MAILER_TEMPLATES_CONFIRMATION\",\n          \"MAILER_TEMPLATES_CONFIRMATION_CONTENT\",\n          \"MAILER_TEMPLATES_RECOVERY\",\n          \"MAILER_TEMPLATES_RECOVERY_CONTENT\",\n          \"MAILER_TEMPLATES_EMAIL_CHANGE\",\n          \"MAILER_TEMPLATES_EMAIL_CHANGE_CONTENT\",\n          \"MAILER_SUBJECTS_MAGIC_LINK\",\n          \"MAILER_TEMPLATES_MAGIC_LINK\",\n          \"MAILER_TEMPLATES_MAGIC_LINK_CONTENT\",\n          \"EXTERNAL_AZURE_ENABLED\",\n          \"EXTERNAL_AZURE_CLIENT_ID\",\n          \"EXTERNAL_AZURE_SECRET\",\n          \"EXTERNAL_FACEBOOK_ENABLED\",\n          \"EXTERNAL_FACEBOOK_CLIENT_ID\",\n          \"EXTERNAL_FACEBOOK_SECRET\",\n          \"URI_ALLOW_LIST\",\n          \"EXTERNAL_TWITTER_ENABLED\",\n          \"EXTERNAL_TWITTER_CLIENT_ID\",\n          \"EXTERNAL_TWITTER_SECRET\",\n          \"EXTERNAL_APPLE_ENABLED\",\n          \"EXTERNAL_APPLE_CLIENT_ID\",\n          \"EXTERNAL_APPLE_SECRET\",\n          \"EXTERNAL_DISCORD_ENABLED\",\n          \"EXTERNAL_DISCORD_CLIENT_ID\",\n          \"EXTERNAL_DISCORD_SECRET\",\n          \"EXTERNAL_TWITCH_ENABLED\",\n          \"EXTERNAL_TWITCH_CLIENT_ID\",\n          \"EXTERNAL_TWITCH_SECRET\",\n          \"SMTP_SENDER_NAME\",\n          \"EXTERNAL_EMAIL_ENABLED\",\n          \"EXTERNAL_PHONE_ENABLED\",\n          \"SMS_AUTOCONFIRM\",\n          \"SMS_MAX_FREQUENCY\",\n          \"SMS_OTP_EXP\",\n          \"SMS_OTP_LENGTH\",\n          \"SMS_PROVIDER\",\n          \"SMS_TWILIO_ACCOUNT_SID\",\n          \"SMS_TWILIO_AUTH_TOKEN\",\n          \"SMS_TWILIO_MESSAGE_SERVICE_SID\",\n          \"SMS_TEMPLATE\",\n          \"SECURITY_CAPTCHA_ENABLED\",\n          \"SECURITY_CAPTCHA_PROVIDER\",\n          \"SECURITY_CAPTCHA_SECRET\",\n          \"RATE_LIMIT_EMAIL_SENT\",\n          \"MAILER_SECURE_EMAIL_CHANGE_ENABLED\",\n          \"EXTERNAL_SPOTIFY_ENABLED\",\n          \"EXTERNAL_SPOTIFY_CLIENT_ID\",\n          \"EXTERNAL_SPOTIFY_SECRET\",\n          \"EXTERNAL_SLACK_ENABLED\",\n          \"EXTERNAL_SLACK_CLIENT_ID\",\n          \"EXTERNAL_SLACK_SECRET\",\n          \"SMS_MESSAGEBIRD_ACCESS_KEY\",\n          \"SMS_MESSAGEBIRD_ORIGINATOR\",\n          \"SMTP_PASS_ENCRYPTED\",\n          \"REFRESH_TOKEN_ROTATION_ENABLED\",\n          \"EXTERNAL_LINKEDIN_ENABLED\",\n          \"EXTERNAL_LINKEDIN_CLIENT_ID\",\n          \"EXTERNAL_LINKEDIN_SECRET\",\n          \"EXTERNAL_NOTION_ENABLED\",\n          \"EXTERNAL_NOTION_CLIENT_ID\",\n          \"EXTERNAL_NOTION_SECRET\",\n          \"SMS_VONAGE_API_KEY\",\n          \"SMS_VONAGE_API_SECRET\",\n          \"SMS_VONAGE_FROM\",\n          \"SMS_TEXTLOCAL_API_KEY\",\n          \"SMS_TEXTLOCAL_SENDER\",\n          \"EXTERNAL_ZOOM_ENABLED\",\n          \"EXTERNAL_ZOOM_CLIENT_ID\",\n          \"EXTERNAL_ZOOM_SECRET\",\n          \"EXTERNAL_AZURE_URL\",\n          \"PASSWORD_MIN_LENGTH\",\n          \"EXTERNAL_KEYCLOAK_ENABLED\",\n          \"EXTERNAL_KEYCLOAK_CLIENT_ID\",\n          \"EXTERNAL_KEYCLOAK_SECRET\",\n          \"EXTERNAL_KEYCLOAK_URL\",\n          \"EXTERNAL_WORKOS_ENABLED\",\n          \"EXTERNAL_WORKOS_CLIENT_ID\",\n          \"EXTERNAL_WORKOS_SECRET\",\n          \"EXTERNAL_WORKOS_URL\",\n          \"SECURITY_UPDATE_PASSWORD_REQUIRE_REAUTHENTICATION\",\n          \"SECURITY_REFRESH_TOKEN_REUSE_INTERVAL\",\n          \"MAILER_OTP_EXP\",\n          \"RATE_LIMIT_VERIFY\",\n          \"RATE_LIMIT_TOKEN_REFRESH\",\n          \"id\",\n          \"project_id\",\n          \"updated_at\"\n        ]\n      },\n      \"UserBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": { \"type\": \"string\" },\n          \"aud\": { \"type\": \"string\" },\n          \"banned_until\": { \"type\": \"string\" },\n          \"confirmation_sent_at\": { \"type\": \"string\" },\n          \"confirmation_token\": { \"type\": \"string\" },\n          \"confirmed_at\": { \"type\": \"string\" },\n          \"created_at\": { \"type\": \"string\" },\n          \"email\": { \"type\": \"string\" },\n          \"email_change\": { \"type\": \"string\" },\n          \"email_change_confirm_status\": { \"type\": \"number\" },\n          \"email_change_sent_at\": { \"type\": \"string\" },\n          \"email_change_token_current\": { \"type\": \"string\" },\n          \"email_change_token_new\": { \"type\": \"string\" },\n          \"email_confirmed_at\": { \"type\": \"string\" },\n          \"encrypted_password\": { \"type\": \"string\" },\n          \"instance_id\": { \"type\": \"string\" },\n          \"invited_at\": { \"type\": \"string\" },\n          \"is_super_admin\": { \"type\": \"boolean\" },\n          \"last_sign_in_at\": { \"type\": \"string\" },\n          \"phone\": { \"type\": \"string\" },\n          \"phone_change\": { \"type\": \"string\" },\n          \"phone_change_sent_at\": { \"type\": \"string\" },\n          \"phone_change_token\": { \"type\": \"string\" },\n          \"phone_confirmed_at\": { \"type\": \"string\" },\n          \"raw_app_meta_data\": { \"type\": \"object\" },\n          \"raw_user_meta_data\": { \"type\": \"object\" },\n          \"reauthentication_sent_at\": { \"type\": \"string\" },\n          \"reauthentication_token\": { \"type\": \"string\" },\n          \"recovery_sent_at\": { \"type\": \"string\" },\n          \"recovery_token\": { \"type\": \"string\" },\n          \"role\": { \"type\": \"string\" },\n          \"updated_at\": { \"type\": \"string\" }\n        },\n        \"required\": [\n          \"id\",\n          \"aud\",\n          \"banned_until\",\n          \"confirmation_sent_at\",\n          \"confirmation_token\",\n          \"confirmed_at\",\n          \"created_at\",\n          \"email\",\n          \"email_change\",\n          \"email_change_confirm_status\",\n          \"email_change_sent_at\",\n          \"email_change_token_current\",\n          \"email_change_token_new\",\n          \"email_confirmed_at\",\n          \"encrypted_password\",\n          \"instance_id\",\n          \"invited_at\",\n          \"is_super_admin\",\n          \"last_sign_in_at\",\n          \"phone\",\n          \"phone_change\",\n          \"phone_change_sent_at\",\n          \"phone_change_token\",\n          \"phone_confirmed_at\",\n          \"raw_app_meta_data\",\n          \"raw_user_meta_data\",\n          \"reauthentication_sent_at\",\n          \"reauthentication_token\",\n          \"recovery_sent_at\",\n          \"recovery_token\",\n          \"role\",\n          \"updated_at\"\n        ]\n      },\n      \"Backup\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": { \"type\": \"number\" },\n          \"data\": { \"type\": \"object\" },\n          \"project_id\": { \"type\": \"number\" },\n          \"status\": { \"type\": \"object\" },\n          \"s3_path\": { \"type\": \"string\" },\n          \"s3_bucket\": { \"type\": \"string\" },\n          \"inserted_at\": { \"type\": \"string\" }\n        },\n        \"required\": [\n          \"id\",\n          \"data\",\n          \"project_id\",\n          \"status\",\n          \"s3_path\",\n          \"s3_bucket\",\n          \"inserted_at\"\n        ]\n      },\n      \"BackupsResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"tierId\": { \"type\": \"string\" },\n          \"tierKey\": { \"type\": \"string\" },\n          \"region\": { \"type\": \"string\" },\n          \"walg_enabled\": { \"type\": \"boolean\" },\n          \"backups\": {\n            \"type\": \"array\",\n            \"items\": { \"$ref\": \"#/components/schemas/Backup\" }\n          },\n          \"physicalBackupData\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"earliestPhysicalBackupDateUnix\": {\n                \"required\": true,\n                \"type\": \"number\"\n              },\n              \"latestPhysicalBackupDateUnix\": {\n                \"required\": true,\n                \"type\": \"number\"\n              }\n            }\n          }\n        },\n        \"required\": [\n          \"tierId\",\n          \"tierKey\",\n          \"region\",\n          \"walg_enabled\",\n          \"backups\",\n          \"physicalBackupData\"\n        ]\n      },\n      \"DownloadBackupBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": { \"type\": \"number\" },\n          \"data\": { \"type\": \"object\" },\n          \"inserted_at\": { \"type\": \"string\" },\n          \"project_id\": { \"type\": \"number\" },\n          \"s3_bucket\": { \"type\": \"string\" },\n          \"s3_path\": { \"type\": \"string\" },\n          \"status\": { \"type\": \"string\" }\n        },\n        \"required\": [\n          \"id\",\n          \"data\",\n          \"inserted_at\",\n          \"project_id\",\n          \"s3_bucket\",\n          \"s3_path\",\n          \"status\"\n        ]\n      },\n      \"DownloadBackupResponse\": {\n        \"type\": \"object\",\n        \"properties\": { \"fileUrl\": { \"type\": \"string\" } },\n        \"required\": [\"fileUrl\"]\n      },\n      \"RestoreBackupBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": { \"type\": \"number\" },\n          \"data\": { \"type\": \"object\" },\n          \"inserted_at\": { \"type\": \"string\" },\n          \"project_id\": { \"type\": \"number\" },\n          \"s3_bucket\": { \"type\": \"string\" },\n          \"s3_path\": { \"type\": \"string\" },\n          \"status\": { \"type\": \"string\" }\n        },\n        \"required\": [\n          \"id\",\n          \"data\",\n          \"inserted_at\",\n          \"project_id\",\n          \"s3_bucket\",\n          \"s3_path\",\n          \"status\"\n        ]\n      },\n      \"PointInTimeRestoreBody\": {\n        \"type\": \"object\",\n        \"properties\": { \"recovery_time_target_unix\": { \"type\": \"number\" } },\n        \"required\": [\"recovery_time_target_unix\"]\n      },\n      \"Organization\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": { \"type\": \"number\" },\n          \"slug\": { \"type\": \"string\" },\n          \"name\": { \"type\": \"string\" },\n          \"billing_email\": { \"type\": \"string\" },\n          \"stripe_customer_id\": { \"type\": \"string\" }\n        },\n        \"required\": [\n          \"id\",\n          \"slug\",\n          \"name\",\n          \"billing_email\",\n          \"stripe_customer_id\"\n        ]\n      },\n      \"CreateOrganizationBody\": {\n        \"type\": \"object\",\n        \"properties\": { \"name\": { \"type\": \"string\" } },\n        \"required\": [\"name\"]\n      },\n      \"UpdateOrganizationBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": { \"type\": \"string\" },\n          \"billing_email\": { \"type\": \"string\" }\n        },\n        \"required\": [\"name\", \"billing_email\"]\n      },\n      \"RemovedOrganization\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": { \"type\": \"number\" },\n          \"slug\": { \"type\": \"string\" },\n          \"name\": { \"type\": \"string\" },\n          \"billing_email\": { \"type\": \"string\" },\n          \"stripe_customer_id\": { \"type\": \"string\" },\n          \"status\": { \"type\": \"string\", \"enum\": [\"ACTIVE\", \"REMOVED\"] }\n        },\n        \"required\": [\n          \"id\",\n          \"slug\",\n          \"name\",\n          \"billing_email\",\n          \"stripe_customer_id\",\n          \"status\"\n        ]\n      },\n      \"Member\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"gotrue_id\": { \"type\": \"string\" },\n          \"primary_email\": { \"type\": \"string\" },\n          \"role_ids\": { \"type\": \"array\", \"items\": { \"type\": \"number\" } },\n          \"username\": { \"type\": \"string\" }\n        },\n        \"required\": [\"gotrue_id\", \"primary_email\", \"role_ids\", \"username\"]\n      },\n      \"AddMemberBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"gotrue_id\": { \"type\": \"string\" },\n          \"org_id\": { \"type\": \"number\" },\n          \"user_id\": { \"type\": \"number\" }\n        },\n        \"required\": [\"gotrue_id\", \"user_id\"]\n      },\n      \"RemoveMemberBody\": {\n        \"type\": \"object\",\n        \"properties\": { \"member_id\": { \"type\": \"number\" } },\n        \"required\": [\"member_id\"]\n      },\n      \"CreateTaxIdBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"type\": { \"type\": \"object\" },\n          \"value\": { \"type\": \"string\" }\n        },\n        \"required\": [\"type\", \"value\"]\n      },\n      \"DeleteTaxIdBody\": {\n        \"type\": \"object\",\n        \"properties\": { \"id\": { \"type\": \"string\" } },\n        \"required\": [\"id\"]\n      },\n      \"TransferOrganizationBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"member_id\": { \"type\": \"number\" },\n          \"org_id\": { \"type\": \"number\" }\n        },\n        \"required\": [\"member_id\", \"org_id\"]\n      },\n      \"InviteUserBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"invited_email\": { \"type\": \"string\" },\n          \"owner_id\": { \"type\": \"number\" }\n        },\n        \"required\": [\"invited_email\", \"owner_id\"]\n      },\n      \"DetachPaymentMethodBody\": {\n        \"type\": \"object\",\n        \"properties\": { \"card_id\": { \"type\": \"string\" } },\n        \"required\": [\"card_id\"]\n      },\n      \"CreateColumnBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"tableId\": { \"type\": \"number\" },\n          \"name\": { \"type\": \"string\" },\n          \"type\": { \"type\": \"string\" },\n          \"check\": { \"type\": \"string\" },\n          \"comment\": { \"type\": \"string\" },\n          \"defaultValue\": { \"type\": \"object\" },\n          \"defaultValueFormat\": {\n            \"type\": \"string\",\n            \"enum\": [\"expression\", \"literal\"]\n          },\n          \"identityGeneration\": {\n            \"type\": \"string\",\n            \"enum\": [\"BY DEFAULT\", \"ALWAYS\"]\n          },\n          \"isIdentity\": { \"type\": \"boolean\" },\n          \"isNullable\": { \"type\": \"boolean\" },\n          \"isPrimaryKey\": { \"type\": \"boolean\" },\n          \"isUnique\": { \"type\": \"boolean\" }\n        },\n        \"required\": [\"tableId\", \"name\", \"type\"]\n      },\n      \"UpdateColumnBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"dropDefault\": { \"type\": \"boolean\" },\n          \"id\": { \"type\": \"number\", \"pattern\": {} },\n          \"name\": { \"type\": \"string\" },\n          \"comment\": { \"type\": \"string\" },\n          \"type\": { \"type\": \"string\" },\n          \"defaultValue\": { \"type\": \"object\" },\n          \"defaultValueFormat\": {\n            \"type\": \"string\",\n            \"enum\": [\"expression\", \"literal\"]\n          },\n          \"identityGeneration\": {\n            \"type\": \"string\",\n            \"enum\": [\"BY DEFAULT\", \"ALWAYS\"]\n          },\n          \"isIdentity\": { \"type\": \"boolean\" },\n          \"isNullable\": { \"type\": \"boolean\" },\n          \"isUnique\": { \"type\": \"boolean\" }\n        }\n      },\n      \"CreateExtensionBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"cascade\": { \"type\": \"boolean\" },\n          \"name\": { \"type\": \"string\" },\n          \"schema\": { \"type\": \"string\" },\n          \"version\": { \"type\": \"string\" }\n        },\n        \"required\": [\"cascade\", \"name\", \"schema\", \"version\"]\n      },\n      \"CreateFunctionBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"args\": { \"type\": \"array\", \"items\": { \"type\": \"string\" } },\n          \"behavior\": {\n            \"type\": \"string\",\n            \"enum\": [\"VOLATILE\", \"STABLE\", \"IMMUTABLE\"]\n          },\n          \"config_params\": { \"type\": \"object\" },\n          \"definition\": { \"type\": \"string\" },\n          \"language\": { \"type\": \"string\" },\n          \"name\": { \"type\": \"string\" },\n          \"return_type\": { \"type\": \"string\" },\n          \"schema\": { \"type\": \"string\" },\n          \"security_definer\": { \"type\": \"boolean\" }\n        },\n        \"required\": [\n          \"args\",\n          \"behavior\",\n          \"definition\",\n          \"language\",\n          \"name\",\n          \"return_type\",\n          \"schema\",\n          \"security_definer\"\n        ]\n      },\n      \"UpdateFunctionBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": { \"type\": \"number\" },\n          \"args\": { \"type\": \"array\", \"items\": { \"type\": \"string\" } },\n          \"behavior\": {\n            \"type\": \"string\",\n            \"enum\": [\"VOLATILE\", \"STABLE\", \"IMMUTABLE\"]\n          },\n          \"config_params\": { \"type\": \"object\" },\n          \"definition\": { \"type\": \"string\" },\n          \"language\": { \"type\": \"string\" },\n          \"name\": { \"type\": \"string\" },\n          \"return_type\": { \"type\": \"string\" },\n          \"schema\": { \"type\": \"string\" },\n          \"security_definer\": { \"type\": \"boolean\" }\n        }\n      },\n      \"CreatePolicyBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": { \"type\": \"string\" },\n          \"table\": { \"type\": \"string\" },\n          \"schema\": { \"type\": \"string\" },\n          \"definition\": { \"type\": \"string\" },\n          \"check\": { \"type\": \"string\" },\n          \"action\": { \"type\": \"string\", \"enum\": [\"PERMISSIVE\", \"RESTRICTIVE\"] },\n          \"command\": {\n            \"type\": \"string\",\n            \"enum\": [\"SELECT\", \"INSERT\", \"UPDATE\", \"DELETE\", \"ALL\"]\n          },\n          \"roles\": { \"type\": \"array\", \"items\": { \"type\": \"string\" } }\n        },\n        \"required\": [\"name\", \"table\"]\n      },\n      \"UpdatePolicyBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": { \"type\": \"number\" },\n          \"name\": { \"type\": \"string\" },\n          \"definition\": { \"type\": \"string\" },\n          \"check\": { \"type\": \"string\" },\n          \"roles\": { \"type\": \"array\", \"items\": { \"type\": \"string\" } }\n        }\n      },\n      \"CreatePublicationBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": { \"type\": \"string\" },\n          \"owner\": { \"type\": \"string\" },\n          \"tables\": { \"type\": \"array\", \"items\": { \"type\": \"string\" } },\n          \"publish_insert\": { \"type\": \"boolean\" },\n          \"publish_update\": { \"type\": \"boolean\" },\n          \"publish_delete\": { \"type\": \"boolean\" },\n          \"publish_truncate\": { \"type\": \"boolean\" }\n        },\n        \"required\": [\n          \"name\",\n          \"owner\",\n          \"tables\",\n          \"publish_insert\",\n          \"publish_update\",\n          \"publish_delete\",\n          \"publish_truncate\"\n        ]\n      },\n      \"UpdatePublicationBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": { \"type\": \"number\" },\n          \"name\": { \"type\": \"string\" },\n          \"tables\": { \"type\": \"array\", \"items\": { \"type\": \"string\" } },\n          \"publish_insert\": { \"type\": \"boolean\" },\n          \"publish_update\": { \"type\": \"boolean\" },\n          \"publish_delete\": { \"type\": \"boolean\" },\n          \"publish_truncate\": { \"type\": \"boolean\" }\n        }\n      },\n      \"RunQueryBody\": {\n        \"type\": \"object\",\n        \"properties\": { \"query\": { \"type\": \"string\" } },\n        \"required\": [\"query\"]\n      },\n      \"FormatQueryBody\": {\n        \"type\": \"object\",\n        \"properties\": { \"query\": { \"type\": \"string\" } },\n        \"required\": [\"query\"]\n      },\n      \"ValidateQueryBody\": {\n        \"type\": \"object\",\n        \"properties\": { \"query\": { \"type\": \"string\" } },\n        \"required\": [\"query\"]\n      },\n      \"SearchTableBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": { \"type\": \"string\" },\n          \"schema\": { \"type\": \"string\" }\n        },\n        \"required\": [\"name\", \"schema\"]\n      },\n      \"SearchColumnBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": { \"type\": \"string\" },\n          \"schema\": { \"type\": \"string\" }\n        },\n        \"required\": [\"name\", \"schema\"]\n      },\n      \"CreateSchemaBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": { \"type\": \"string\" },\n          \"owner\": { \"type\": \"string\" }\n        },\n        \"required\": [\"name\", \"owner\"]\n      },\n      \"UpdateSchemaBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": { \"type\": \"string\" },\n          \"owner\": { \"type\": \"string\" }\n        }\n      },\n      \"CreateTableBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": { \"type\": \"string\" },\n          \"schema\": { \"type\": \"string\" },\n          \"comment\": { \"type\": \"string\" }\n        },\n        \"required\": [\"name\"]\n      },\n      \"UpdateTableBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": { \"type\": \"number\" },\n          \"rls_enabled\": { \"type\": \"boolean\" },\n          \"rls_forced\": { \"type\": \"boolean\" },\n          \"replica_identity\": {\n            \"type\": \"string\",\n            \"enum\": [\"DEFAULT\", \"INDEX\", \"FULL\", \"NOTHING\"]\n          },\n          \"replica_identity_index\": { \"type\": \"string\" },\n          \"name\": { \"type\": \"string\" },\n          \"schema\": { \"type\": \"string\" },\n          \"comment\": { \"type\": \"string\" }\n        }\n      },\n      \"CreateTriggerBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"activation\": { \"type\": \"string\", \"enum\": [\"AFTER\", \"BEFORE\"] },\n          \"enabled_mode\": {\n            \"type\": \"string\",\n            \"enum\": [\"ORIGIN\", \"REPLICA\", \"ALWAYS\", \"DISABLED\"]\n          },\n          \"events\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"enum\": [\"INSERT\", \"UPDATE\", \"DELETE\"]\n            }\n          },\n          \"function_args\": { \"type\": \"array\", \"items\": { \"type\": \"string\" } },\n          \"function_name\": { \"type\": \"string\" },\n          \"function_schema\": { \"type\": \"string\" },\n          \"name\": { \"type\": \"string\" },\n          \"orientation\": { \"type\": \"string\", \"enum\": [\"ROW\", \"STATEMENT\"] },\n          \"schema\": { \"type\": \"string\" },\n          \"table\": { \"type\": \"string\" },\n          \"table_id\": { \"type\": \"number\" }\n        },\n        \"required\": [\n          \"activation\",\n          \"enabled_mode\",\n          \"events\",\n          \"function_args\",\n          \"function_name\",\n          \"function_schema\",\n          \"name\",\n          \"orientation\",\n          \"schema\",\n          \"table\"\n        ]\n      },\n      \"UpdateTriggerBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": { \"type\": \"number\" },\n          \"activation\": { \"type\": \"string\", \"enum\": [\"AFTER\", \"BEFORE\"] },\n          \"enabled_mode\": {\n            \"type\": \"string\",\n            \"enum\": [\"ORIGIN\", \"REPLICA\", \"ALWAYS\", \"DISABLED\"]\n          },\n          \"events\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"enum\": [\"INSERT\", \"UPDATE\", \"DELETE\"]\n            }\n          },\n          \"function_args\": { \"type\": \"array\", \"items\": { \"type\": \"string\" } },\n          \"function_name\": { \"type\": \"string\" },\n          \"function_schema\": { \"type\": \"string\" },\n          \"name\": { \"type\": \"string\" },\n          \"orientation\": { \"type\": \"string\", \"enum\": [\"ROW\", \"STATEMENT\"] },\n          \"schema\": { \"type\": \"string\" },\n          \"table\": { \"type\": \"string\" },\n          \"table_id\": { \"type\": \"number\" }\n        }\n      },\n      \"AccessToken\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"created_at\": { \"type\": \"string\" },\n          \"id\": { \"type\": \"number\" },\n          \"token_alias\": { \"type\": \"string\" },\n          \"name\": { \"type\": \"string\" }\n        },\n        \"required\": [\"created_at\", \"id\", \"token_alias\", \"name\"]\n      },\n      \"CreateAccessTokenBody\": {\n        \"type\": \"object\",\n        \"properties\": { \"name\": { \"type\": \"string\" } },\n        \"required\": [\"name\"]\n      },\n      \"CreateAccessTokenResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"created_at\": { \"type\": \"string\" },\n          \"id\": { \"type\": \"number\" },\n          \"token_alias\": { \"type\": \"string\" },\n          \"name\": { \"type\": \"string\" },\n          \"token\": { \"type\": \"string\" }\n        },\n        \"required\": [\"created_at\", \"id\", \"token_alias\", \"name\", \"token\"]\n      },\n      \"SearchProfileBody\": {\n        \"type\": \"object\",\n        \"properties\": { \"keywords\": { \"type\": \"string\" } },\n        \"required\": [\"keywords\"]\n      },\n      \"Profile\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"first_name\": { \"type\": \"string\" },\n          \"gotrue_id\": { \"type\": \"string\" },\n          \"id\": { \"type\": \"number\" },\n          \"last_name\": { \"type\": \"string\" },\n          \"username\": { \"type\": \"string\" }\n        },\n        \"required\": [\"first_name\", \"gotrue_id\", \"id\", \"last_name\", \"username\"]\n      },\n      \"SubscriptionStatisticsResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"total_paid_projects\": { \"type\": \"number\" },\n          \"total_free_projects\": { \"type\": \"number\" },\n          \"total_active_free_projects\": { \"type\": \"number\" },\n          \"total_paused_free_projects\": { \"type\": \"number\" },\n          \"total_pro_projects\": { \"type\": \"number\" },\n          \"total_payg_projects\": { \"type\": \"number\" },\n          \"total_enterprise_projects\": { \"type\": \"number\" }\n        },\n        \"required\": [\n          \"total_paid_projects\",\n          \"total_free_projects\",\n          \"total_active_free_projects\",\n          \"total_paused_free_projects\",\n          \"total_pro_projects\",\n          \"total_payg_projects\",\n          \"total_enterprise_projects\"\n        ]\n      },\n      \"PasswordCheckBody\": {\n        \"type\": \"object\",\n        \"properties\": { \"password\": { \"type\": \"string\" } },\n        \"required\": [\"password\"]\n      },\n      \"PasswordCheckResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"result\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"feedback\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"warning\": { \"required\": true, \"type\": \"string\" },\n                  \"suggestions\": {\n                    \"required\": true,\n                    \"type\": \"array\",\n                    \"items\": { \"type\": \"string\" }\n                  }\n                }\n              },\n              \"score\": { \"required\": true, \"type\": \"number\" }\n            }\n          }\n        },\n        \"required\": [\"result\"]\n      },\n      \"Permission\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"actions\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"analytics:Read\",\n                \"auth:Execute\",\n                \"billing:Read\",\n                \"billing:Write\",\n                \"functions:Read\",\n                \"functions:Write\",\n                \"infra:Execute\",\n                \"sql:Read:Select\",\n                \"sql:Write:Delete\",\n                \"sql:Write:Insert\",\n                \"sql:Write:Update\",\n                \"storage:Admin:Read\",\n                \"storage:Admin:Write\",\n                \"tenant:Sql:Admin:Read\",\n                \"tenant:Sql:Admin:Write\",\n                \"tenant:Sql:CreateTable\",\n                \"tenant:Sql:Write:Delete\",\n                \"tenant:Sql:Write:Insert\",\n                \"tenant:Sql:Query\",\n                \"tenant:Sql:Read:Select\",\n                \"tenant:Sql:Write:Update\"\n              ]\n            }\n          },\n          \"condition\": { \"type\": \"object\", \"nullable\": true },\n          \"organization_id\": { \"type\": \"number\" },\n          \"resources\": { \"type\": \"array\", \"items\": { \"type\": \"string\" } }\n        },\n        \"required\": [\"actions\", \"condition\", \"organization_id\", \"resources\"]\n      },\n      \"ProfileResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": { \"type\": \"number\" },\n          \"auth0_id\": { \"type\": \"string\" },\n          \"primary_email\": { \"type\": \"string\" },\n          \"username\": { \"type\": \"string\" },\n          \"first_name\": { \"type\": \"string\" },\n          \"last_name\": { \"type\": \"string\" },\n          \"mobile\": { \"type\": \"string\" },\n          \"is_alpha_user\": { \"type\": \"boolean\" },\n          \"gotrue_id\": { \"type\": \"string\" },\n          \"free_project_limit\": { \"type\": \"number\" }\n        },\n        \"required\": [\n          \"id\",\n          \"auth0_id\",\n          \"primary_email\",\n          \"username\",\n          \"first_name\",\n          \"last_name\",\n          \"mobile\",\n          \"is_alpha_user\",\n          \"gotrue_id\",\n          \"free_project_limit\"\n        ]\n      },\n      \"UpdateProfileBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"first_name\": { \"type\": \"string\" },\n          \"last_name\": { \"type\": \"string\" }\n        },\n        \"required\": [\"first_name\", \"last_name\"]\n      },\n      \"CreateProjectBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"db_pass\": { \"type\": \"string\" },\n          \"name\": { \"type\": \"string\" },\n          \"organization_id\": { \"type\": \"string\" },\n          \"plan\": { \"type\": \"string\", \"enum\": [\"free\", \"pro\"] },\n          \"region\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"us-east-1\",\n              \"us-west-1\",\n              \"ap-southeast-1\",\n              \"ap-northeast-1\",\n              \"ap-northeast-2\",\n              \"ap-southeast-2\",\n              \"eu-west-1\",\n              \"eu-west-2\",\n              \"eu-central-1\",\n              \"ca-central-1\",\n              \"ap-south-1\",\n              \"sa-east-1\"\n            ]\n          }\n        },\n        \"required\": [\"db_pass\", \"name\", \"organization_id\", \"plan\", \"region\"]\n      },\n      \"UpdatePasswordBody\": {\n        \"type\": \"object\",\n        \"properties\": { \"password\": { \"type\": \"string\" } },\n        \"required\": [\"password\"]\n      },\n      \"PoolingConfig\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"db_dns_name\": { \"type\": \"string\" },\n          \"db_host\": { \"type\": \"string\" },\n          \"db_name\": { \"type\": \"string\" },\n          \"db_port\": { \"type\": \"number\" },\n          \"db_ssl\": { \"type\": \"boolean\" },\n          \"db_user\": { \"type\": \"string\" },\n          \"default_pool_size\": { \"type\": \"number\" },\n          \"ignore_startup_parameters\": { \"type\": \"string\" },\n          \"inserted_at\": { \"type\": \"string\" },\n          \"pgbouncer_enabled\": { \"type\": \"boolean\" },\n          \"pgbouncer_status\": { \"type\": \"string\" },\n          \"pool_mode\": { \"type\": \"string\" }\n        },\n        \"required\": [\n          \"db_dns_name\",\n          \"db_host\",\n          \"db_name\",\n          \"db_port\",\n          \"db_ssl\",\n          \"db_user\",\n          \"default_pool_size\",\n          \"ignore_startup_parameters\",\n          \"inserted_at\",\n          \"pgbouncer_enabled\",\n          \"pgbouncer_status\",\n          \"pool_mode\"\n        ]\n      },\n      \"UpdatePoolingConfigBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"default_pool_size\": { \"type\": \"number\" },\n          \"ignore_startup_parameters\": { \"type\": \"string\" },\n          \"pgbouncer_enabled\": { \"type\": \"boolean\" },\n          \"pool_mode\": {\n            \"type\": \"string\",\n            \"enum\": [\"transaction\", \"session\", \"statement\"]\n          }\n        },\n        \"required\": [\n          \"default_pool_size\",\n          \"ignore_startup_parameters\",\n          \"pgbouncer_enabled\",\n          \"pool_mode\"\n        ]\n      },\n      \"UpdatePoolingConfigResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"default_pool_size\": { \"type\": \"number\" },\n          \"ignore_startup_parameters\": { \"type\": \"string\" },\n          \"pgbouncer_enabled\": { \"type\": \"boolean\" },\n          \"pool_mode\": {\n            \"enum\": [\"transaction\", \"session\", \"statement\"],\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"default_pool_size\",\n          \"ignore_startup_parameters\",\n          \"pgbouncer_enabled\",\n          \"pool_mode\"\n        ]\n      },\n      \"UpdateProjectBody\": {\n        \"type\": \"object\",\n        \"properties\": { \"name\": { \"type\": \"string\" } },\n        \"required\": [\"name\"]\n      },\n      \"Project\": { \"type\": \"object\", \"properties\": {} },\n      \"RestartRequest\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"services\": { \"type\": \"array\", \"items\": { \"type\": \"string\" } },\n          \"source_notification_id\": { \"type\": \"string\" },\n          \"region\": { \"type\": \"string\" }\n        },\n        \"required\": [\"services\", \"region\"]\n      },\n      \"RestartServicesBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"restartRequest\": { \"$ref\": \"#/components/schemas/RestartRequest\" }\n        },\n        \"required\": [\"restartRequest\"]\n      },\n      \"UsageStatusResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"database\": {\n            \"type\": \"string\",\n            \"enum\": [\"fine\", \"approaching\", \"over\"]\n          },\n          \"storage\": {\n            \"type\": \"string\",\n            \"enum\": [\"fine\", \"approaching\", \"over\"]\n          },\n          \"database_bandwidth\": {\n            \"type\": \"string\",\n            \"enum\": [\"fine\", \"approaching\", \"over\"]\n          },\n          \"storage_bandwidth\": {\n            \"type\": \"string\",\n            \"enum\": [\"fine\", \"approaching\", \"over\"]\n          },\n          \"active_users\": {\n            \"type\": \"string\",\n            \"enum\": [\"fine\", \"approaching\", \"over\"]\n          }\n        },\n        \"required\": [\n          \"database\",\n          \"storage\",\n          \"database_bandwidth\",\n          \"storage_bandwidth\",\n          \"active_users\"\n        ]\n      },\n      \"SendEnterpriseRequestBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"company\": { \"type\": \"string\" },\n          \"email\": { \"type\": \"string\" },\n          \"message\": { \"type\": \"string\" },\n          \"name\": { \"type\": \"string\" }\n        },\n        \"required\": [\"company\", \"email\", \"message\", \"name\"]\n      },\n      \"PreviewSubscriptionBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"addons\": { \"type\": \"array\", \"items\": { \"type\": \"string\" } },\n          \"payment_method\": { \"type\": \"string\" },\n          \"proration_date\": { \"type\": \"number\" },\n          \"tier\": { \"type\": \"string\" }\n        },\n        \"required\": [\"addons\", \"payment_method\", \"proration_date\", \"tier\"]\n      },\n      \"UpdateSubscriptionBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"addons\": { \"type\": \"array\", \"items\": { \"type\": \"string\" } },\n          \"payment_method\": { \"type\": \"string\" },\n          \"proration_date\": { \"type\": \"number\" },\n          \"tier\": { \"type\": \"string\" }\n        },\n        \"required\": [\"addons\", \"payment_method\", \"proration_date\", \"tier\"]\n      },\n      \"UpdatePostgrestConfigBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"db_extra_search_path\": { \"type\": \"string\" },\n          \"db_schema\": { \"type\": \"string\" },\n          \"max_rows\": { \"type\": \"number\" }\n        },\n        \"required\": [\"db_extra_search_path\", \"db_schema\", \"max_rows\"]\n      },\n      \"UpdateSecretsConfigBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"jwt_secret\": { \"type\": \"string\" },\n          \"change_tracking_id\": { \"type\": \"string\" }\n        },\n        \"required\": [\"jwt_secret\", \"change_tracking_id\"]\n      },\n      \"UpdateStorageConfigBody\": {\n        \"type\": \"object\",\n        \"properties\": { \"fileSizeLimit\": { \"type\": \"number\" } },\n        \"required\": [\"fileSizeLimit\"]\n      },\n      \"OrganizationMembersResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"members\": {\n            \"type\": \"array\",\n            \"items\": { \"$ref\": \"#/components/schemas/Member\" }\n          }\n        },\n        \"required\": [\"members\"]\n      },\n      \"PoolingRefConfig\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"db_dns_name\": { \"type\": \"string\" },\n          \"db_host\": { \"type\": \"string\" },\n          \"db_name\": { \"type\": \"string\" },\n          \"db_port\": { \"type\": \"number\" },\n          \"db_ssl\": { \"type\": \"boolean\" },\n          \"db_user\": { \"type\": \"string\" },\n          \"default_pool_size\": { \"type\": \"number\" },\n          \"ignore_startup_parameters\": { \"type\": \"string\" },\n          \"inserted_at\": { \"type\": \"string\" },\n          \"pgbouncer_enabled\": { \"type\": \"boolean\" },\n          \"pgbouncer_status\": { \"type\": \"string\" },\n          \"pool_mode\": { \"type\": \"string\" }\n        },\n        \"required\": [\n          \"db_dns_name\",\n          \"db_host\",\n          \"db_name\",\n          \"db_port\",\n          \"db_ssl\",\n          \"db_user\",\n          \"default_pool_size\",\n          \"ignore_startup_parameters\",\n          \"inserted_at\",\n          \"pgbouncer_enabled\",\n          \"pgbouncer_status\",\n          \"pool_mode\"\n        ]\n      },\n      \"PoolingRefConfigResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"project\": { \"$ref\": \"#/components/schemas/PoolingRefConfig\" }\n        },\n        \"required\": [\"project\"]\n      },\n      \"UpdatePoolingRefConfigBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"default_pool_size\": { \"type\": \"number\" },\n          \"ignore_startup_parameters\": { \"type\": \"string\" },\n          \"pgbouncer_enabled\": { \"type\": \"boolean\" },\n          \"pool_mode\": {\n            \"type\": \"string\",\n            \"enum\": [\"transaction\", \"session\", \"statement\"]\n          }\n        },\n        \"required\": [\n          \"default_pool_size\",\n          \"ignore_startup_parameters\",\n          \"pgbouncer_enabled\",\n          \"pool_mode\"\n        ]\n      },\n      \"UpdatePoolingRefConfigResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"project\": {\n            \"$ref\": \"#/components/schemas/UpdatePoolingRefConfigBody\"\n          }\n        },\n        \"required\": [\"project\"]\n      },\n      \"ServiceApiKey\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"api_key_encrypted\": { \"type\": \"string\" },\n          \"tags\": { \"type\": \"string\" },\n          \"name\": { \"type\": \"string\" }\n        },\n        \"required\": [\"api_key_encrypted\", \"tags\", \"name\"]\n      },\n      \"AutoApiService\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"endpoint\": { \"type\": \"string\" },\n          \"restUrl\": { \"type\": \"string\" },\n          \"project\": {\n            \"type\": \"object\",\n            \"properties\": { \"ref\": { \"required\": true, \"type\": \"string\" } }\n          },\n          \"defaultApiKey\": { \"type\": \"string\" },\n          \"serviceApiKey\": { \"type\": \"string\" },\n          \"id\": { \"type\": \"number\" },\n          \"name\": { \"type\": \"string\" },\n          \"app_config\": { \"type\": \"object\" },\n          \"app\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": { \"required\": true, \"type\": \"number\" },\n              \"name\": { \"required\": true, \"type\": \"string\" }\n            }\n          },\n          \"service_api_keys\": {\n            \"type\": \"array\",\n            \"items\": { \"$ref\": \"#/components/schemas/ServiceApiKey\" }\n          }\n        },\n        \"required\": [\n          \"endpoint\",\n          \"restUrl\",\n          \"project\",\n          \"defaultApiKey\",\n          \"serviceApiKey\",\n          \"id\",\n          \"name\",\n          \"app_config\",\n          \"app\",\n          \"service_api_keys\"\n        ]\n      },\n      \"ApiResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"project\": { \"$ref\": \"#/components/schemas/Project\" },\n          \"autoApiService\": { \"$ref\": \"#/components/schemas/AutoApiService\" }\n        },\n        \"required\": [\"project\", \"autoApiService\"]\n      },\n      \"JwtSecretUpdateStatus\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"jwtSecretUpdateStatus\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"change_tracking_id\": { \"required\": true, \"type\": \"string\" },\n              \"error\": {\n                \"required\": false,\n                \"enum\": [\n                  \"PostgreSQLRestartFailed\",\n                  \"APIServicesConfigurationUpdateFailed\",\n                  \"APIServicesRestartFailed\",\n                  \"DatabaseAdminAPIConfigurationUpdateFailed\",\n                  \"SupabaseAPIKeyUpdateFailed\",\n                  \"APIGatewayUpdateFailed\"\n                ],\n                \"type\": \"string\"\n              },\n              \"progress\": {\n                \"required\": false,\n                \"enum\": [\n                  \"Started\",\n                  \"RestartedPostgreSQL\",\n                  \"UpdatedAPIServicesConfiguration\",\n                  \"RestartedAPIServices\",\n                  \"UpdatedDatabaseAdminAPIConfiguration\",\n                  \"UpdatedAPIGatewayConfiguration\"\n                ],\n                \"type\": \"string\"\n              },\n              \"status\": {\n                \"required\": true,\n                \"enum\": [\"Updating\", \"Updated\", \"Failed\"],\n                \"type\": \"string\"\n              }\n            }\n          }\n        },\n        \"required\": [\"jwtSecretUpdateStatus\"]\n      },\n      \"ServiceApiKeyResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"api_key\": { \"type\": \"string\" },\n          \"api_key_encrypted\": { \"type\": \"string\" },\n          \"tags\": { \"type\": \"string\" },\n          \"name\": { \"type\": \"string\" }\n        },\n        \"required\": [\"api_key\", \"api_key_encrypted\", \"tags\", \"name\"]\n      },\n      \"ServiceResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"service_api_keys\": {\n            \"type\": \"array\",\n            \"items\": { \"$ref\": \"#/components/schemas/ServiceApiKeyResponse\" }\n          },\n          \"id\": { \"type\": \"number\" },\n          \"name\": { \"type\": \"string\" },\n          \"app_config\": { \"type\": \"object\" },\n          \"app\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": { \"required\": true, \"type\": \"number\" },\n              \"name\": { \"required\": true, \"type\": \"string\" }\n            }\n          }\n        },\n        \"required\": [\"service_api_keys\", \"id\", \"name\", \"app_config\", \"app\"]\n      },\n      \"ProjectResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": { \"type\": \"string\" },\n          \"organization_id\": { \"type\": \"string\" },\n          \"name\": { \"type\": \"string\" },\n          \"region\": { \"type\": \"string\" },\n          \"created_at\": { \"type\": \"string\" }\n        },\n        \"required\": [\"id\", \"organization_id\", \"name\", \"region\", \"created_at\"]\n      },\n      \"SettingsResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"project\": { \"$ref\": \"#/components/schemas/ProjectResponse\" },\n          \"services\": {\n            \"type\": \"array\",\n            \"items\": { \"$ref\": \"#/components/schemas/ServiceResponse\" }\n          }\n        },\n        \"required\": [\"project\", \"services\"]\n      },\n      \"GetCustomerBody\": {\n        \"type\": \"object\",\n        \"properties\": { \"stripe_customer_id\": { \"type\": \"string\" } },\n        \"required\": [\"stripe_customer_id\"]\n      },\n      \"CreateCustomerPortalSessionBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"projectRef\": { \"type\": \"string\", \"minLength\": 20, \"maxLength\": 20 },\n          \"returnTo\": { \"type\": \"string\" }\n        },\n        \"required\": [\"projectRef\", \"returnTo\"]\n      },\n      \"TelemetryEventBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"category\": { \"type\": \"string\" },\n          \"action\": { \"type\": \"string\" },\n          \"label\": { \"type\": \"object\" },\n          \"value\": { \"type\": \"string\" }\n        },\n        \"required\": [\"category\", \"action\"]\n      },\n      \"CreateVercelEnvironmentVariableBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"key\": { \"type\": \"string\" },\n          \"target\": { \"type\": \"array\", \"items\": { \"type\": \"string\" } },\n          \"type\": { \"type\": \"string\" },\n          \"value\": { \"type\": \"string\" }\n        },\n        \"required\": [\"key\", \"target\", \"type\", \"value\"]\n      },\n      \"CreateSubscriptionBody\": {\n        \"type\": \"object\",\n        \"properties\": { \"projectId\": { \"type\": \"number\" } },\n        \"required\": [\"projectId\"]\n      },\n      \"StripeSyncBody\": {\n        \"type\": \"object\",\n        \"properties\": { \"organizationId\": { \"type\": \"number\" } },\n        \"required\": [\"organizationId\"]\n      },\n      \"Buffer\": { \"type\": \"object\", \"properties\": {} },\n      \"OrganizationResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": { \"type\": \"string\" },\n          \"name\": { \"type\": \"string\" }\n        },\n        \"required\": [\"id\", \"name\"]\n      }\n    }\n  }\n}\n",
			"canonicalURL": "/github.com/hirotaka/supabase-ja@334db12b8877d93b07d16084b6fbe6986d24a48d/-/blob/spec/api_v0_openapi.json",
			"externalURLs": [
				{
					"url": "https://github.com/hirotaka/supabase-ja/blob/334db12b8877d93b07d16084b6fbe6986d24a48d/spec/api_v0_openapi.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 1378: cannot unmarshal !!map into string; yaml: line 1419: cannot unmarshal !!map into string; yaml: line 5427: cannot unmarshal !!bool `true` into []string; yaml: line 5633: cannot unmarshal !!map into string; yaml: line 5977: cannot unmarshal !!bool `true` into []string; yaml: line 6360: cannot unmarshal !!bool `true` into []string; yaml: line 6406: cannot unmarshal !!bool `true` into []string; yaml: line 6464: cannot unmarshal !!bool `true` into []string"
}