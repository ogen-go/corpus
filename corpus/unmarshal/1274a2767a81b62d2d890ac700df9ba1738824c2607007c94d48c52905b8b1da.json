{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/mongodb/docs-app-services"
		},
		"file": {
			"name": "openapi-admin-v3.yaml",
			"size": 0,
			"path": "source/openapi-admin-v3.yaml",
			"byteSize": 257909,
			"content": "---\nopenapi: 3.1.0\ninfo:\n  description: |-\n    App Services provides an API for programmatically performing\n    administrative tasks outside of the App Services UI. This includes tasks such\n    as modifying authentication providers, creating rules, and defining\n    functions. Client applications should not use the admin API. Instead,\n    use one of the Client SDKs for tasks like authenticating users, calling\n    functions, and interacting with services.\n\n    ## Project \u0026 Application IDs\n\n    **Note**: The terms _Project ID_ and _Group ID_ are interchangeable.\n\n    App Services APIs frequently require two parameters: your Atlas _Project/Group\n    ID_, and your App Services _Application ID_.\n\n    ### Project ID\n\n    You can find your Project ID from the MongoDB Atlas dashboard or CLI.\n\n    ### Application ID\n\n    To find an Application ID, make a request to the App Services [GET /groups/{groupid}/apps](#operation/adminListApplications)\n    API endpoint.\n\n    This request has the following format, referencing the `access_token`\n    and the Group ID:\n\n    ```sh\n    curl --request GET \\\n      --header 'Authorization: Bearer \u003caccess_token\u003e' \\\n      https://realm.mongodb.com/api/admin/v3.0/groups/{groupId}/apps\n    ```\n\n    This will return a list of objects describing each Atlas App Services App in the\n    provided group. For Admin API requests, your Application ID is the\n    ObjectId value in the `_id` field, _not_ the `client_app_id`.\n\n    ```json\n    [\n      {\n        \"_id\": \"5997529e46224c6e42gb6dd9\",\n        \"group_id\": \"57879f6cc4b32dbe440bb8c5\",\n        \"domain_id\": \"5886619e46124e4c42fb5dd8\",\n        \"client_app_id\": \"myapp-abcde\",\n        \"name\": \"myapp\",\n        \"location\": \"US-VA\",\n        \"deployment_model\": \"GLOBAL\",\n        \"last_used\": 1615153544,\n        \"last_modified\": 0,\n        \"product\": \"standard\",\n        \"environment\": \"\"\n      }\n    ]\n    ```\n\n    ## Get Authentication Tokens\n\n    Every request to the App Services Admin API must include a valid and current\n    authorization token from the MongoDB Cloud API as a bearer token in the\n    `Authorization` header. You will need a valid [programmatic API key](https://docs.atlas.mongodb.com/configure-api-access)\n    for MongoDB Atlas to get a token.\n\n    Once you have an API key pair, call the authentication endpoint:\n\n    ```shell\n    curl --request POST \\\n      --header 'Content-Type: application/json' \\\n      --header 'Accept: application/json' \\\n      --data '{\"username\": \"\u003cPublic API Key\u003e\", \"apiKey\": \"\u003cPrivate API Key\u003e\"}' \\\n      https://realm.mongodb.com/api/admin/v3.0/auth/providers/mongodb-cloud/login\n    ```\n\n    If authentication succeeds, App Services returns an access token as\n    part of the JSON response document:\n\n    ```json\n    {\n      \"access_token\": \"\u003caccess_token\u003e\",\n      \"refresh_token\": \"\u003crefresh_token\u003e\",\n      \"user_id\": \"\u003cuser_id\u003e\",\n      \"device_id\": \"\u003cdevice_id\u003e\"\n    }\n    ```\n\n    The `access_token` represents a limited-time authorization to interact\n    with the Admin API. To authenticate a request, include the token in a\n    [Bearer token](https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication)\n    `Authorization` header.\n\n    ```http\n    Authorization: Bearer \u003caccess_token\u003e\n    ```\n\n  version: \"3.0\"\n  title: Atlas App Services API\nservers:\n  - url: https://realm.mongodb.com/api/admin/v3.0\n    description: The root API resource and starting point for the App Services API.\npaths:\n  \"/auth/providers\":\n    get:\n      tags:\n        - admin\n      operationId: getAdminAuthProviders\n      summary: Enumerate available App Services administration authentication providers\n      responses:\n        \"200\":\n          description: Successfully enumerated available authentication providers.\n          content:\n            application/json:\n              schema:\n                type: array\n                description: An array of authentication providers.\n                items:\n                  \"$ref\": \"#/components/schemas/BaseAuthProvider\"\n      security: []\n  \"/auth/providers/{provider}/login\":\n    post:\n      tags:\n        - admin\n      operationId: adminLogin\n      summary: Authenticate as an App Services administrator\n      description: |\n        Authenticate as an App Services administrator. Use [GET\n        /auth/providers](#section/adminGetLogs) to list the available\n        authentication providers.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              properties:\n                username:\n                  type: string\n                apiKey:\n                  type: string\n              required:\n                - username\n                - apiKey\n      responses:\n        \"200\":\n          description: Authentication was successful.\n          content:\n            application/json:\n              schema:\n                properties:\n                  access_token:\n                    type: string\n                    description: |-\n                      An access token you may provide in the `Authorization` header of API\n                      requests. [The App Services API Authentication section](#section/Get-Authentication-Tokens) demonstrates how to use this token.\n                  refresh_token:\n                    type: string\n                    description: |\n                      A refresh token you may provide in the `Authorization` header of\n                      [POST auth/session](#section/adminCreateSession)\n                      to obtain a new `access_token` for the current user session.\n                  user_id:\n                    type: string\n                    description: The unique `_id` value of the MongoDB Cloud user.\n                  device_id:\n                    type: string\n      security: []\n    parameters:\n      - name: provider\n        description: The authentication provider to use.\n        in: path\n        required: true\n        schema:\n          \"$ref\": \"#/components/schemas/ProviderType\"\n  \"/auth/profile\":\n    get:\n      tags:\n        - admin\n      operationId: getAdminProfile\n      summary: Get information about the currently logged in user\n      responses:\n        \"200\":\n          description: The profile was successfully retrieved.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/AdminUser\"\n  \"/auth/session\":\n    post:\n      tags:\n        - admin\n      operationId: adminCreateSession\n      summary: Obtain a session access token\n      responses:\n        \"201\":\n          description: Successfully created.\n          content:\n            application/json:\n              schema:\n                properties:\n                  access_token:\n                    type: string\n        \"401\":\n          description: Invalid token\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - allOf:\n                      - $ref: \"#/components/schemas/Error\"\n                      - properties:\n                          error:\n                            const: \"invalid refresh token: incorrect token type\"\n                        description: |-\n                          The request did not use bearer token\n                          authentication with a valid refresh token. Make\n                          sure the Authorization header contains the\n                          `refresh_token`, not the `access_token`.\n      security:\n        - refreshAuth: []\n    delete:\n      tags:\n        - admin\n      operationId: adminDeleteSession\n      summary: Delete a session access token\n      responses:\n        \"204\":\n          description: Deleted\n        \"401\":\n          description: Invalid token or session\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - allOf:\n                      - $ref: \"#/components/schemas/Error\"\n                      - properties:\n                          error:\n                            const: \"invalid refresh token: incorrect token type\"\n                        description: |-\n                          The request did not use bearer token\n                          authentication with a valid refresh token. Make\n                          sure the Authorization header contains the\n                          `refresh_token`, not the `access_token`.\n                  - allOf:\n                      - $ref: \"#/components/schemas/Error\"\n                      - properties:\n                          error:\n                            const: \"invalid session: failed to find refresh token\"\n                          error_code:\n                            const: \"InvalidSession\"\n                        description: |-\n                          The provided refresh token does not match any\n                          current sessions.\n\n  \"/provider_regions\":\n    get:\n      tags:\n        - deploy\n      operationId: adminListAppRegions\n      summary: List all available Atlas App cloud regions\n      description: |-\n        Return a list of all supported cloud regions in which you can\n        deploy an Atlas App.\n      responses:\n        \"200\":\n          description: A list of all available Atlas App cloud region names.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/CloudProviderRegion\"\n  \"/groups/{groupId}/apps\":\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n    get:\n      tags:\n        - apps\n      operationId: adminListApplications\n      summary: List all App Services Apps in an Atlas project/group\n      description: |-\n        List all App Services Apps within an Atlas\n        [project/group](https://docs.atlas.mongodb.com/tutorial/manage-projects/).\n      parameters:\n        - in: query\n          name: product\n          required: false\n          schema:\n            type: string\n            enum:\n              - standard\n              - atlas\n              - data-api\n          style: simple\n          explode: false\n          description: |-\n            One or more specific App Services product types. If specified,\n            this endpoint only returns Apps of the specified product type(s).\n\n            Most apps use the `standard` product type, which this\n            endpoint returns by default. The `atlas` and `data-api`\n            product types represent special apps for\n            [Atlas Triggers](https://docs.mongodb.com/atlas/triggers) and\n            [Atlas Data API](https://docs.mongodb.com/atlas/api/data-api/)\n            that you can access through the Atlas UI.\n\n            You can specify multiple product types as a comma-separated list:\n\n            ```\n            /groups/{groupId}/apps?product=atlas,data-api\n            ```\n      responses:\n        \"200\":\n          description: Successfully listed.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/AppInstance\"\n    post:\n      tags:\n        - apps\n      operationId: adminCreateApplication\n      summary: Create a new app\n      parameters:\n        - name: defaults\n          in: query\n          required: false\n          schema:\n            type: boolean\n          description: Whether or not to create a default application.\n        - name: product\n          in: query\n          required: false\n          schema:\n            type: string\n            enum:\n              - standard\n              - atlas\n              - data-api\n          description: |-\n            The App's product type. Apps use the `standard` product type\n            by default. For most apps, you do not need to specify a\n            `product` at all, or should specify `standard`.\n\n            The `atlas` and `data-api` product types represent special,\n            apps for [Atlas Triggers](https://docs.mongodb.com/atlas/triggers)\n            and [Atlas Data API](https://docs.mongodb.com/atlas/api/data-api/) that you\n            can access through the Atlas UI.\n      requestBody:\n        description: The application to create.\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AppConstructor\"\n      responses:\n        \"201\":\n          description: The application was successfully created.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/AppInstance\"\n        \"400\":\n          \"$ref\": \"#/components/responses/BadRequest\"\n  \"/groups/{groupId}/apps/{appId}\":\n    get:\n      tags:\n        - apps\n      operationId: adminGetApplication\n      summary: Get an app\n      responses:\n        \"200\":\n          description: The application was successfully retrieved.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/AppInstance\"\n    delete:\n      tags:\n        - apps\n      operationId: adminDeleteApplication\n      summary: Delete an app\n      responses:\n        \"204\":\n          description: The application was successfully deleted.\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n  \"/groups/{groupId}/apps/{appId}/export\":\n    get:\n      tags:\n        - apps\n      operationId: adminExportApplication\n      summary: Export an app as a zip file\n      description: |-\n        [Export](https://www.mongodb.com/docs/atlas/app-services/manage-apps/configure/export-app#std-label-export-realm-app)\n        an application as a zip file.\n      responses:\n        \"200\":\n          description: The application was successfully exported.\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n\n  \"/groups/{groupId}/apps/{appId}/event_subscriptions\":\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n      - name: type\n        description: |-\n          The type of event subscription to return.\n\n          - `DATABASE`: Return Database Triggers\n          - `AUTHENTICATION`: Return Authentication Triggers\n          - `SCHEDULED`: Return Scheduled Triggers\n          - `SYNCTRANSLATOR`: Return Device Sync translators\n        in: query\n        required: false\n        schema:\n          type: string\n          enum:\n            - DATABASE\n            - AUTHENTICATION\n            - SCHEDULED\n            - SYNCTRANSLATOR\n          x-enumDescriptions:\n            DATABASE: Return Database Triggers\n            AUTHENTICATION: Return Authentication Triggers\n            SCHEDULED: Return Scheduled Triggers\n            SYNCTRANSLATOR: Return Device Sync translators\n    get:\n      tags:\n        - event-subscriptions\n      operationId: adminListEventSubscriptions\n      summary: List Event Subscriptions\n      description: Get all event subscriptions.\n      responses:\n        \"200\":\n          description: Success.\n          content:\n            application/json:\n              schema:\n                type: array\n                description: |-\n                  A list of all event subscriptions for the app. To see\n                  Device Sync translator subscriptions, call this\n                  endpoint with the query parameter\n                  `?type=SYNCTRANSLATOR`.\n                items:\n                  $ref: \"#/components/schemas/EventSubscription\"\n  \"/groups/{groupId}/apps/{appId}/event_subscriptions/{eventSubscriptionId}\":\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n      - \"$ref\": \"#/components/parameters/EventSubscriptionId\"\n    get:\n      tags:\n        - event-subscriptions\n      operationId: adminGetEventSubscription\n      summary: Get an Event Subscription\n      description: Return information about an event subscription.\n      responses:\n        \"200\":\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EventSubscription\"\n\n  \"/groups/{groupId}/apps/{appId}/event_subscriptions/{eventSubscriptionId}/execution\":\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n      - \"$ref\": \"#/components/parameters/EventSubscriptionId\"\n    get:\n      tags:\n        - event-subscriptions\n      operationId: adminGetLatestEventSubscriptionExecution\n      summary: Get the Latest Event Subscription Execution\n      description: Return information about the most recent execution of an event subscription.\n      responses:\n        \"200\":\n          description: Success.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: object\n                  resource_id:\n                    type: object\n                  completed_at:\n                    type: object\n                    description: |-\n                      The last time a batch was processed from the event stream.\n\n                      The value of `completed_at` should be relatively\n                      close to the current time. If `completed_at` is\n                      not updating over time, it might mean that the\n                      event processor (e.g. Device Sync) is down or\n                      stuck.\n                  cluster_time:\n                    type: object\n                    description: |-\n                      The time of the latest event in the most recently processed batch.\n\n                      If the value of `cluster_time` is significantly\n                      earlier than the `completed_at` time, the event\n                      processor (e.g. Device Sync) is lagging behind the event .\n\n  \"/groups/{groupId}/apps/{appId}/triggers\":\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n    get:\n      tags:\n        - triggers\n      operationId: adminListTriggers\n      summary: Get all triggers\n      description: Get a list of all [triggers](https://www.mongodb.com/docs/atlas/app-services/triggers/overview/) in your application.\n      responses:\n        \"200\":\n          description: Successfully listed triggers.\n          content:\n            application/json:\n              schema:\n                type: array\n                description: A list of all database, authentication, and scheduled triggers defined for the app.\n                items:\n                  \"$ref\": \"#/components/schemas/AnyTrigger\"\n    post:\n      tags:\n        - triggers\n      operationId: adminCreateTrigger\n      summary: Create a trigger\n      description: Create a new [trigger](https://www.mongodb.com/docs/atlas/app-services/triggers/overview/) in your application.\n      requestBody:\n        description: A configuration for a database, scheduled, or authentication trigger.\n        required: true\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/Trigger\"\n      responses:\n        \"201\":\n          description: Successfully created.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Trigger\"\n  \"/groups/{groupId}/apps/{appId}/triggers/{triggerId}\":\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n      - \"$ref\": \"#/components/parameters/TriggerId\"\n    get:\n      tags:\n        - triggers\n      operationId: adminGetTrigger\n      summary: Get a trigger\n      description: Get the configuration for an existing [trigger](https://www.mongodb.com/docs/atlas/app-services/triggers/overview/) in your application.\n      responses:\n        \"200\":\n          description: Successfully retrieved trigger.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Trigger\"\n    put:\n      tags:\n        - triggers\n      operationId: adminUpdateTrigger\n      summary: Update a trigger\n      description: Modify an existing [trigger](https://www.mongodb.com/docs/atlas/app-services/triggers/overview/) in your application.\n      requestBody:\n        description: The updated trigger configuration.\n        required: true\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/Trigger\"\n      responses:\n        \"204\":\n          description: Successfully updated the trigger.\n        \"409\":\n          description: Encountered an error while updating the trigger.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Error\"\n    delete:\n      tags:\n        - triggers\n      operationId: adminDeleteTrigger\n      summary: Delete a trigger\n      description: Remove an existing [trigger](https://www.mongodb.com/docs/atlas/app-services/triggers/overview/) from your application.\n      responses:\n        \"200\":\n          description: Successfully deleted the trigger.\n          content:\n            application/json:\n              schema:\n                properties: {}\n  \"/groups/{groupId}/apps/{appId}/triggers/{triggerId}/resume\":\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n      - \"$ref\": \"#/components/parameters/TriggerId\"\n    put:\n      tags:\n        - triggers\n      operationId: adminResumeTrigger\n      summary: Resume a suspended trigger\n      description: Resume a [suspended](https://www.mongodb.com/docs/atlas/app-services/triggers/database-triggers/#suspended-triggers) database trigger.\n      requestBody:\n        description: Configuration options for the resume operation.\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                disable_token:\n                  type: boolean\n                  description: |-\n                    If `true`, attempts to resume the trigger from the\n                    first change event after it failed by using a resume\n                    token. Otherwise, resumes the trigger without\n                    processing missed events.\n      responses:\n        \"204\":\n          description: Successfully resumed the trigger.\n        \"404\":\n          description: Trigger not found.\n          content:\n            application/json:\n              schema:\n                properties:\n                  error:\n                    type: string\n                    description: A description of the error that App Services encountered.\n  \"/groups/{groupId}/apps/{appId}/values\":\n    get:\n      tags:\n        - values\n      operationId: adminListValues\n      description: |-\n        List all [values](https://www.mongodb.com/docs/realm/values-and-secrets)\n        defined in an application.\n      summary: |-\n        List all values defined in an application.\n      responses:\n        \"200\":\n          description: |-\n            [values](https://www.mongodb.com/docs/realm/values-and-secrets) were\n            successfully enumerated.\n          content:\n            application/json:\n              schema:\n                items:\n                  \"$ref\": \"#/components/schemas/ValueSummary\"\n    post:\n      tags:\n        - values\n      operationId: adminCreateValue\n      summary: Define a Value in an application\n      description: |-\n        Define a [Value](https://www.mongodb.com/docs/realm/values-and-secrets) in\n        an application.\n      requestBody:\n        description: The value to create.\n        required: true\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/NewValue\"\n      responses:\n        \"201\":\n          description: |-\n            The [value](https://www.mongodb.com/docs/realm/values-and-secrets) was\n            successfully defined.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/NewValue\"\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n  \"/groups/{groupId}/apps/{appId}/values/{valueId}\":\n    get:\n      tags:\n        - values\n      operationId: adminGetValue\n      summary: |-\n        Retrieve a value definition from an application\n      description: |-\n        Retrieve a [value](https://www.mongodb.com/docs/realm/values-and-secrets)\n        definition from an application.\n      responses:\n        \"200\":\n          description: Successfully retrieved the value.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Value\"\n    delete:\n      tags:\n        - values\n      operationId: adminDeleteValue\n      summary: |-\n        Delete a value defined in an application.\n      description: |-\n        Delete a [value](https://www.mongodb.com/docs/realm/values-and-secrets)\n        defined in an application.\n      responses:\n        \"204\":\n          description: Successfully deleted the value.\n    put:\n      tags:\n        - values\n      operationId: adminUpdateValue\n      summary: Update a value definition in an application\n      description: |-\n        Update a [value](https://www.mongodb.com/docs/realm/values-and-secrets)\n        definition in an application.\n      responses:\n        \"200\":\n          description: Successfully updated the value.\n          content:\n            application/json:\n              schema:\n                items:\n                  \"$ref\": \"#/components/schemas/NewValue\"\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n      - \"$ref\": \"#/components/parameters/ValueId\"\n  \"/groups/{groupId}/apps/{appId}/services\":\n    get:\n      tags:\n        - services\n      operationId: adminListServices\n      summary: List all data sources and third-party services\n      description: |-\n        List all [data sources](https://www.mongodb.com/docs/atlas/app-services/mongodb/) and [third-party\n        services [Deprecated]](https://www.mongodb.com/docs/atlas/app-services/reference/services/).\n      responses:\n        \"200\":\n          description: Successfully listed services.\n          content:\n            application/json:\n              schema:\n                items:\n                  anyOf:\n                    - $ref: \"#/components/schemas/AtlasCluster\"\n                    - $ref: \"#/components/schemas/AtlasFederatedInstance\"\n                    - $ref: \"#/components/schemas/ThirdPartyService\"\n    post:\n      tags:\n        - services\n      operationId: adminCreateService\n      summary: Create a data source or third-party service\n      description: |-\n        Create a [data source](https://www.mongodb.com/docs/atlas/app-services/mongodb/) or [third-party\n        service [Deprecated]](https://www.mongodb.com/docs/atlas/app-services/reference/services/).\n      requestBody:\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - $ref: \"#/components/schemas/AtlasCluster\"\n                - $ref: \"#/components/schemas/AtlasFederatedInstance\"\n                - $ref: \"#/components/schemas/ThirdPartyService\"\n\n      responses:\n        \"201\":\n          description: Successfully created.\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/AtlasCluster\"\n                  - $ref: \"#/components/schemas/AtlasFederatedInstance\"\n                  - $ref: \"#/components/schemas/ThirdPartyService\"\n        \"409\":\n          description: There is already a service with the given `name`.\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n  \"/groups/{groupId}/apps/{appId}/services/{serviceId}\":\n    get:\n      tags:\n        - services\n      operationId: adminGetService\n      summary: Get a data source or third-party service\n      description: |-\n        Get a [data source](https://www.mongodb.com/docs/atlas/app-services/mongodb/)\n        or [third-party service [Deprecated]](https://www.mongodb.com/docs/atlas/app-services/reference/services/).\n      responses:\n        \"200\":\n          description: Successfully retrieved.\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/AtlasCluster\"\n                  - $ref: \"#/components/schemas/AtlasFederatedInstance\"\n                  - $ref: \"#/components/schemas/ThirdPartyService\"\n    delete:\n      tags:\n        - services\n      operationId: adminDeleteService\n      summary: Delete a data source or third-party service\n      description: |-\n        Delete a [data source](https://www.mongodb.com/docs/atlas/app-services/mongodb/)\n        or [third-party service [Deprecated]](https://www.mongodb.com/docs/atlas/app-services/reference/services/).\n      responses:\n        \"204\":\n          description: Successfully deleted.\n    patch:\n      tags:\n        - services\n      operationId: adminUpdateService\n      summary: Update a service\n      description: Update a [service](https://www.mongodb.com/docs/realm/services#std-label-services).\n      responses:\n        \"200\":\n          description: Successfully updated.\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n      - \"$ref\": \"#/components/parameters/ServiceId\"\n  \"/groups/{groupId}/apps/{appId}/services/{datasourceId}/commands/validate_documents\":\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n      - \"$ref\": \"#/components/parameters/DatasourceId\"\n    post:\n      tags:\n        - schemas\n      operationId: adminValidateDocuments\n      summary: Sample \u0026 Validate Documents\n      description: |-\n        Query a subset of documents in a collection and validate each match against a schema.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              required:\n                - database_name\n                - collection_name\n                - from_schema\n              properties:\n                database_name:\n                  type: string\n                  description: The name of the database that contains the collection to validate.\n                collection_name:\n                  type: string\n                  description: The name of the collection to validate.\n                from_schema:\n                  type: object\n                  description: The EJSON schema to validate sampled documents against.\n                query:\n                  type: object\n                  default: {}\n                  description: |-\n                    A [MongoDB query](https://www.mongodb.com/docs/manual/tutorial/query-documents/)\n                    that matches documents in the collection. The result of running this query is the\n                    sample population. Use this to narrow the sample to a subset of documents in the\n                    collection.\n                limit:\n                  type: number\n                  default: 10000\n                  description: The maximum number of documents to sample.\n                sort:\n                  type: object\n                  default: {}\n                  description: |-\n                    A [MongoDB sort](https://www.mongodb.com/docs/manual/reference/method/cursor.sort/) for the collection.\n                    Use this to determine which end of a range query to start sampling from.\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  errors:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        error_code:\n                          \"$ref\": \"#/components/schemas/ValidationError\"\n                          description: The type of the schema validation error.\n                        error_count:\n                          type: number\n                          description: The number of sampled documents that failed this validation.\n                        field:\n                          type: string\n                          description: The path of the field that failed this validation.\n                          examples:\n                            - (root)._id\n                            - (root).name\n                        failed_ids:\n                          type: array\n                          description: A list of the `_id` values for sampled documents that failed this validation.\n                          items:\n                            type: string\n                        failed_documents_query:\n                          type: object\n                          description: A MongoDB query filter that matches sampled documents that failed this validation.\n                  total_processed_count:\n                    type: number\n                    description: The total number of documents that were sampled.\n                  total_error_count:\n                    type: number\n                    description: The total number of documents that failed any validation.\n  \"/groups/{groupId}/apps/{appId}/services/{serviceId}/commands/{commandName}\":\n    post:\n      tags:\n        - services\n      operationId: adminRunCommand\n      summary: Run a command associated with a service\n      description: |-\n        Run a command associated with a\n        [service](https://www.mongodb.com/docs/realm/services#std-label-services).\n      responses:\n        \"200\":\n          description: Successfully executed.\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n      - \"$ref\": \"#/components/parameters/ServiceId\"\n      - \"$ref\": \"#/components/parameters/CommandName\"\n  \"/groups/{groupId}/apps/{appId}/services/{serviceId}/commands/build_info\":\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n      - \"$ref\": \"#/components/parameters/ServiceId\"\n    get:\n      tags:\n        - services\n      operationId: getBuildInfo\n      summary: Get information about the underlying Atlas mongod\n      responses:\n        \"200\":\n          description: The build information was successfully retrieved.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/BuildInfo\"\n  \"/groups/{groupId}/apps/{appId}/services/{serviceId}/config\":\n    get:\n      tags:\n        - services\n      operationId: adminGetServiceConfig\n      summary: Retrieve a service's configuration\n      description: |-\n        Retrieve a [service's](https://www.mongodb.com/docs/realm/services#std-label-services)\n        configuration.\n      responses:\n        \"200\":\n          description: Successfully retrieved.\n    patch:\n      tags:\n        - services\n      operationId: adminUpdateServiceConfig\n      summary: Update a service's configuration\n      description: Update a [service's](https://www.mongodb.com/docs/realm/services#std-label-services) configuration.\n      responses:\n        \"200\":\n          description: Successfully updated.\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n      - \"$ref\": \"#/components/parameters/ServiceId\"\n  \"/groups/{groupId}/apps/{appId}/services/{serviceId}/rules\":\n    get:\n      tags:\n        - rules\n      operationId: adminListRules\n      summary: Get all rules\n      description: List all [data access rules](https://www.mongodb.com/docs/atlas/app-services/rules).\n      responses:\n        \"200\":\n          description: Successfully listed.\n          content:\n            application/json:\n              schema:\n                items:\n                  oneOf:\n                    - \"$ref\": \"#/components/schemas/Rule\"\n                    - \"$ref\": \"#/components/schemas/ThirdPartyServiceRule\"\n    post:\n      tags:\n        - rules\n      operationId: adminCreateRule\n      summary: Create a rule\n      description: Create a [data access rule](https://www.mongodb.com/docs/atlas/app-services/rules).\n      requestBody:\n        required: true\n        description: The rule to create.\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - \"$ref\": \"#/components/schemas/Rule\"\n                - \"$ref\": \"#/components/schemas/ThirdPartyServiceRule\"\n      responses:\n        \"201\":\n          description: Successfully created.\n          content:\n            application/json:\n              schema:\n                properties:\n                  _id:\n                    type: string\n                  name:\n                    type: string\n        \"409\":\n          description: There is already a rule with the given `name`.\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n      - \"$ref\": \"#/components/parameters/ServiceId\"\n  \"/groups/{groupId}/apps/{appId}/services/{serviceId}/rules/{ruleId}\":\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n      - \"$ref\": \"#/components/parameters/ServiceId\"\n      - \"$ref\": \"#/components/parameters/RuleId\"\n    get:\n      tags:\n        - rules\n      operationId: adminGetRule\n      summary: Get a rule\n      description: Get a specific [data access rule](https://www.mongodb.com/docs/atlas/app-services/rules).\n      responses:\n        \"200\":\n          description: Successfully retrieved.\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - \"$ref\": \"#/components/schemas/Rule\"\n                  - \"$ref\": \"#/components/schemas/ThirdPartyServiceRule\"\n    delete:\n      tags:\n        - rules\n      operationId: adminDeleteRule\n      summary: Delete a rule\n      description: Delete a [data access rule](https://www.mongodb.com/docs/atlas/app-services/rules).\n      responses:\n        \"204\":\n          description: Successfully deleted.\n    put:\n      tags:\n        - rules\n      operationId: adminUpdateRule\n      summary: Update a rule\n      description: Update a [data access rule](https://www.mongodb.com/docs/atlas/app-services/rules).\n      requestBody:\n        required: true\n        description: The new state of the rule.\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - \"$ref\": \"#/components/schemas/Rule\"\n                - \"$ref\": \"#/components/schemas/ThirdPartyServiceRule\"\n      responses:\n        \"200\":\n          description: Successfully updated.\n  \"/groups/{groupId}/apps/{appId}/services/{serviceId}/default_rule\":\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n      - \"$ref\": \"#/components/parameters/ServiceId\"\n    get:\n      tags:\n        - rules\n      operationId: adminGetDefaultRule\n      summary: Get default roles and filters\n      description: Get the current [default roles and filters](https://www.mongodb.com/docs/atlas/app-services/rules/#default-rules).\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/DefaultRule\"\n        \"404\":\n          description: No default rule is defined.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - \"$ref\": \"#/components/schemas/BasicError\"\n                  - properties:\n                      error:\n                        enum:\n                          - \"default rule does not exist on service\"\n    post:\n      tags:\n        - rules\n      operationId: adminCreateDefaultRule\n      summary: Create default roles and filters\n      description: Create [default roles and filters](https://www.mongodb.com/docs/atlas/app-services/rules/#default-rules) for a data source.\n      requestBody:\n        required: true\n        description: A default rule configuration object.\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/DefaultRule\"\n      responses:\n        \"201\":\n          description: Created default rule.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/DefaultRule\"\n        \"400\":\n          description: Default rule already exists.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - \"$ref\": \"#/components/schemas/BasicError\"\n                  - properties:\n                      error:\n                        enum:\n                          - \"default rule already exists\"\n    put:\n      tags:\n        - rules\n      operationId: adminUpdateDefaultRule\n      summary: Update default roles and filters\n      description: Modify the [default roles and filters](https://www.mongodb.com/docs/atlas/app-services/rules/#default-rules) of a data source.\n      requestBody:\n        required: true\n        description: The updated default rule configuration object.\n        content:\n          application/json:\n            schema:\n              allOf:\n                - \"$ref\": \"#/components/schemas/DefaultRule\"\n                - required: [\"_id\"]\n      responses:\n        \"204\":\n          description: Successfully modified the default rule.\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - \"$ref\": \"#/components/schemas/BasicError\"\n                  - properties:\n                      error:\n                        enum:\n                          - \"default rule does not exist\"\n                          - \"service default rule id mismatch\"\n    delete:\n      tags:\n        - rules\n      operationId: adminDeleteDefaultRule\n      summary: Delete default roles and filters\n      description: Delete the [default roles and filters](https://www.mongodb.com/docs/atlas/app-services/rules/#default-rules) of a data source.\n      responses:\n        \"204\":\n          description: Deleted the default rule.\n        \"404\":\n          description: Default rule does not exist.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - \"$ref\": \"#/components/schemas/BasicError\"\n                  - properties:\n                      error:\n                        enum:\n                          - \"default rule does not exist for app service\"\n  \"/groups/{groupId}/apps/{appId}/services/{serviceId}/commands/generate_schema\":\n    post:\n      tags:\n        - services\n      operationId: adminGenerateSchema\n      summary: Generate a JSON schema from sample\n      description: Sample a subset of documents in a collection to generate a JSON schema.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - database_name\n                - collection_name\n                - limit\n              properties:\n                database_name:\n                  type: string\n                  description: The name of the database that contains the collection.\n                collection_name:\n                  type: string\n                  description:\n                    The name of the collection to sample and generate a\n                    schema for.\n                limit:\n                  type: integer\n                  description: The maximum number of documents to include in the sample.\n      responses:\n        \"200\":\n          description: Successfully generated schema\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  schema:\n                    type: object\n                    description: The generated JSON schema\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n      - \"$ref\": \"#/components/parameters/ServiceId\"\n  \"/groups/{groupId}/apps/{appId}/services/{serviceId}/incoming_webhooks\":\n    get:\n      tags:\n        - webhooks\n      operationId: adminListWebhooks\n      summary: List webhooks\n      description: List [webhooks](https://www.mongodb.com/docs/realm/services#std-label-service-webhooks).\n      responses:\n        \"200\":\n          description: Successfully listed incoming webhooks.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/IncomingWebhook\"\n    post:\n      tags:\n        - webhooks\n      operationId: adminCreateWebhook\n      summary: Create a webhook\n      description: Create a [webhook](https://www.mongodb.com/docs/realm/services#std-label-service-webhooks).\n      requestBody:\n        description: The webhook to create.\n        required: true\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/IncomingWebhook\"\n      responses:\n        \"201\":\n          description: Successfully created.\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n      - \"$ref\": \"#/components/parameters/ServiceId\"\n  \"/groups/{groupId}/apps/{appId}/services/{serviceId}/incoming_webhooks/{incomingWebhookId}\":\n    get:\n      tags:\n        - webhooks\n      operationId: adminGetWebhook\n      summary: Retrieve a webhook\n      description: Retrieve a [webhook](https://www.mongodb.com/docs/realm/services#std-label-service-webhooks).\n      responses:\n        \"200\":\n          description: Successfully retrieved.\n    delete:\n      tags:\n        - webhooks\n      operationId: adminDeleteWebhook\n      summary: Delete a webhook\n      description: Delete a [webhook](https://www.mongodb.com/docs/realm/services#std-label-service-webhooks).\n      responses:\n        \"204\":\n          description: Successfully deleted.\n    put:\n      tags:\n        - webhooks\n      operationId: adminUpdateWebhook\n      summary: Update a webhook\n      description: Update a [webhook](https://www.mongodb.com/docs/realm/services#std-label-service-webhooks).\n      requestBody:\n        required: true\n        description: The updated state of the webhook.\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/IncomingWebhook\"\n      responses:\n        \"200\":\n          description: Successfully updated.\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n      - \"$ref\": \"#/components/parameters/ServiceId\"\n      - \"$ref\": \"#/components/parameters/IncomingWebhookId\"\n  \"/groups/{groupId}/apps/{appId}/sync/data\":\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n    get:\n      tags:\n        - sync\n      operationId: adminGetSync\n      summary: Get sync information for a specific linked MongoDB cluster\n      description: Retrieve partition field data when using [Partition-Based Sync](https://www.mongodb.com/docs/realm/reference/partition-based-sync/).\n      responses:\n        \"200\":\n          description: Successfully retrieved.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/SyncDataResponse\"\n      parameters:\n        - in: query\n          name: service_id\n          required: true\n          schema:\n            type: string\n          description: The Service ID for the linked cluster.\n  \"/groups/{groupId}/apps/{appId}/push/notifications\":\n    get:\n      tags:\n        - notifications\n      operationId: adminListNotifications\n      summary: List push notifications\n      description: |-\n        List [push notifications](https://www.mongodb.com/docs/realm/push-notifications#std-label-push-notifications).\n      parameters:\n        - name: state\n          in: query\n          description: Only list notifications with the given state.\n          required: false\n          schema:\n            \"$ref\": \"#/components/schemas/MessageState\"\n      responses:\n        \"200\":\n          description: Successfully listed.\n          content:\n            application/json:\n              schema:\n                items:\n                  \"$ref\": \"#/components/schemas/Message\"\n    post:\n      tags:\n        - notifications\n      operationId: adminCreateNotification\n      summary: Create a push notification\n      description: |-\n        Create a [push\n        notification](https://www.mongodb.com/docs/realm/push-notifications#std-label-push-notifications).\n      requestBody:\n        required: true\n        description: The notification to create.\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/NewMessage\"\n      responses:\n        \"201\":\n          description: Successfully created.\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n  \"/groups/{groupId}/apps/{appId}/push/notifications/{messageId}\":\n    get:\n      tags:\n        - notifications\n      operationId: adminGetMessage\n      summary: Retrieve a push notification message\n      description: |-\n        Retrieve a [push\n        notification](https://www.mongodb.com/docs/realm/push-notifications#std-label-push-notifications)\n        message.\n      responses:\n        \"200\":\n          description: Successfully retrieved.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Message\"\n    delete:\n      tags:\n        - notifications\n      operationId: adminDeleteMessage\n      summary: Delete a push notification message\n      description: |-\n        Delete a [push\n        notification](https://www.mongodb.com/docs/realm/push-notifications#std-label-push-notifications)\n        message.\n      responses:\n        \"204\":\n          description: Successfully deleted.\n    put:\n      tags:\n        - notifications\n      operationId: adminUpdateMessage\n      summary: Update a push notification\n      description: |-\n        Update a [push\n        notification](https://www.mongodb.com/docs/realm/push-notifications#std-label-push-notifications)\n        message.\n      responses:\n        \"200\":\n          description: Successfully updated.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Message\"\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n      - \"$ref\": \"#/components/parameters/MessageId\"\n  \"/groups/{groupId}/apps/{appId}/push/notifications/{messageId}/type\":\n    put:\n      tags:\n        - notifications\n      operationId: adminSetMessageType\n      summary: Set a push notification's type\n      description: |-\n        Set a [push\n        notification's](https://www.mongodb.com/docs/realm/push-notifications#std-label-push-notifications)\n        type.\n      responses:\n        \"200\":\n          description: Successfully set.\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n      - \"$ref\": \"#/components/parameters/MessageId\"\n  \"/groups/{groupId}/apps/{appId}/push/notifications/{messageId}/send\":\n    post:\n      tags:\n        - notifications\n      operationId: adminSendMessage\n      summary: Send a push notification\n      description: |-\n        Send a [push\n        notification](https://www.mongodb.com/docs/realm/push-notifications#std-label-push-notifications).\n      responses:\n        \"200\":\n          description: Successfully sent.\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n      - \"$ref\": \"#/components/parameters/MessageId\"\n\n  \"/groups/{groupId}/apps/{appId}/users\":\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n    get:\n      tags:\n        - users\n      operationId: adminListUsers\n      summary: List users\n      description: List confirmed [user accounts](https://www.mongodb.com/docs/atlas/app-services/authentication#std-label-user-accounts).\n      parameters:\n        - \"$ref\": \"#/components/parameters/UsersAfter\"\n        - \"$ref\": \"#/components/parameters/UsersSort\"\n        - \"$ref\": \"#/components/parameters/UsersDesc\"\n      responses:\n        \"200\":\n          description: Successfully listed.\n          content:\n            application/json:\n              schema:\n                type: array\n                maxItems: 50\n                description: At most 50 results per request.\n                items:\n                  \"$ref\": \"#/components/schemas/User\"\n    post:\n      tags:\n        - users\n      operationId: adminCreateUser\n      summary: Create a user\n      description: |-\n        Create a new\n        [email/password](https://www.mongodb.com/docs/atlas/app-services/authentication/email-password/)\n        user account.\n\n        *Note:* You cannot create user accounts through the Admin API\n        for any authentication provider other than email/password.\n      requestBody:\n        required: true\n        description: The user to create\n        content:\n          application/json:\n            schema:\n              properties:\n                email:\n                  type: string\n                password:\n                  type: string\n              required:\n                - email\n                - password\n      responses:\n        \"201\":\n          description: Successfully created.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/User\"\n\n  \"/groups/{groupId}/apps/{appId}/users/verify_token\":\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n    post:\n      tags:\n        - users\n      operationId: adminVerifyUserAccessToken\n      summary: Verify valid client access token\n      description: |-\n        Verify a that a user's [client access\n        token](https://www.mongodb.com/docs/realm/reference/authenticate-http-client-requests#std-label-get-client-api-access-token)\n        is valid.\n      requestBody:\n        required: true\n        description: |-\n          The user's client access token. This is distinct from the\n          [API access token](https://www.mongodb.com/docs/realm/reference/authenticate-http-client-requests#std-label-get-client-api-access-token)\n          you need to authenticate to the admin API.\n        content:\n          application/json:\n            schema:\n              properties:\n                token:\n                  type: string\n              required:\n                - token\n      responses:\n        \"200\":\n          description: Token is valid or expired.\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - type: string\n                    const: \"token expired\"\n                  - properties:\n                      sub:\n                        type: string\n                        description: User ID.\n                      aud:\n                        type: string\n                        description: |-\n                          Optional; specifies which Resource Servers the JWT is valid for. Omitted\n                          if empty.\n                      exp:\n                        type: integer\n                        description: Unix timestamp after which the JWT expires.\n                      iat:\n                        type: integer\n                        description: Unix timestamp at which the JWT was issued.\n                      iss:\n                        type: string\n                        description: The issuer of the JWT.\n                      custom_user_data:\n                        type: object\n                        description: |-\n                          Optional; contains [custom user\n                          data](https://www.mongodb.com/docs/realm/users/enable-custom-user-data#std-label-custom-user-data)\n                          if it exists for the user. Only present if the access token is created\n                          after custom user data is enabled and configured. Omitted if empty.\n                      domain_id:\n                        type: string\n                      data:\n                        type: string\n                        description:\n                          \"Optional: any metadata stored with the token. Omitted\n                          if empty.\"\n                      device_id:\n                        type: string\n\n  \"/groups/{groupId}/apps/{appId}/users/{userId}\":\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n      - \"$ref\": \"#/components/parameters/UserId\"\n    get:\n      tags:\n        - users\n      operationId: adminGetUser\n      summary: Get a User\n      description: Get a specific [user account](https://www.mongodb.com/docs/realm/authentication#std-label-user-accounts) by ID.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/User\"\n    delete:\n      tags:\n        - users\n      operationId: adminDeleteUser\n      summary: Delete a user\n      description: Delete a specific [user account](https://www.mongodb.com/docs/realm/authentication#std-label-user-accounts) by ID.\n      responses:\n        \"204\":\n          description: Deleted\n\n  \"/groups/{groupId}/apps/{appId}/users/{userId}/devices\":\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n      - \"$ref\": \"#/components/parameters/UserId\"\n    get:\n      tags:\n        - users\n      operationId: adminListDevices\n      summary: List a user's devices\n      responses:\n        \"200\":\n          description: Successfully listed.\n          content:\n            application/json:\n              schema:\n                items:\n                  type: object\n\n  \"/groups/{groupId}/apps/{appId}/users/{userId}/logout\":\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n      - \"$ref\": \"#/components/parameters/UserId\"\n    put:\n      tags:\n        - users\n      operationId: adminUserLogout\n      summary: Revoke user sessions\n      description: |-\n        Revoke all of a [user](https://www.mongodb.com/docs/realm/authentication#std-label-user-accounts)'s\n        sessions.\n      responses:\n        \"204\":\n          description: Successfully revoked.\n\n  \"/groups/{groupId}/apps/{appId}/users/{userId}/enable\":\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n      - \"$ref\": \"#/components/parameters/UserId\"\n    put:\n      tags:\n        - users\n      operationId: adminEnableUser\n      summary: Enable a user\n      description: Enable a [user](https://www.mongodb.com/docs/realm/authentication#std-label-user-accounts).\n      responses:\n        \"204\":\n          description: Successfully enabled.\n\n  \"/groups/{groupId}/apps/{appId}/users/{userId}/disable\":\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n      - \"$ref\": \"#/components/parameters/UserId\"\n    put:\n      tags:\n        - users\n      operationId: adminDisableUser\n      summary: Disable a user\n      description: Disable a [user](https://www.mongodb.com/docs/realm/authentication#std-label-user-accounts).\n      responses:\n        \"204\":\n          description: Successfully disabled.\n\n  \"/groups/{groupId}/apps/{appId}/user_registrations/pending_users\":\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n    get:\n      tags:\n        - users\n      operationId: adminListPendingUsers\n      summary: List pending users\n      description: List pending user account registrations\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  required:\n                    - _id\n                    - domain_id\n                    - login_ids\n                  properties:\n                    _id:\n                      type: string\n                      description: The unique pending user account ID\n                    user_id:\n                      type: string\n                    domain_id:\n                      type: string\n                    login_ids:\n                      type: array\n                      description: A list of identities associated with the pending user\n                      items:\n                        required:\n                          - id_type\n                          - id\n                        properties:\n                          id_type:\n                            type: string\n                            enum:\n                              - email\n                          id:\n                            type: string\n                            description: The pending user's username. For example, this is an email/password user's email address.\n                example:\n                  [\n                    {\n                      \"_id\": \"63754f968a605a78ea6939e7\",\n                      \"domain_id\": \"60c8f69864c0a72d14bb534c\",\n                      \"login_ids\":\n                        [{ \"id_type\": \"email\", \"id\": \"someone@example.com\" }],\n                      \"user_id\": \"\",\n                    },\n                    {\n                      \"_id\": \"63754fd83c001970b1e5ea66\",\n                      \"domain_id\": \"60c8f69864c0a73e3e11c22b\",\n                      \"login_ids\":\n                        [{ \"id_type\": \"email\", \"id\": \"joe@example.com\" }],\n                      \"user_id\": \"\",\n                    },\n                  ]\n\n  \"/groups/{groupId}/apps/{appId}/user_registrations/by_email/{email}\":\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n      - \"$ref\": \"#/components/parameters/Email\"\n    delete:\n      tags:\n        - users\n      operationId: adminDeletePendingEmailPasswordUser\n      summary: Delete a pending email/password authentication user\n      description: Delete a pending [user](https://www.mongodb.com/docs/realm/authentication#std-label-user-accounts).\n      responses:\n        \"204\":\n          description: Successfully deleted.\n\n  \"/groups/{groupId}/apps/{appId}/user_registrations/by_email/{email}/send_confirm\":\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n      - \"$ref\": \"#/components/parameters/Email\"\n    post:\n      tags:\n        - email\n      operationId: adminSendConfirmationEmail\n      summary: Send a confirmation email\n      description: |-\n        Send a [confirmation\n        email](https://www.mongodb.com/docs/realm/authentication/email-password).\n      responses:\n        \"200\":\n          description: Successfully sent.\n\n  \"/groups/{groupId}/apps/{appId}/user_registrations/by_email/{email}/confirm\":\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n      - \"$ref\": \"#/components/parameters/Email\"\n    post:\n      tags:\n        - email\n      operationId: adminConfirmPendingUser\n      summary: Confirm a pending user\n      description: Confirm a pending [user](https://www.mongodb.com/docs/realm/authentication#std-label-user-accounts).\n      responses:\n        \"204\":\n          description: Successfully confirmed.\n\n  \"/groups/{groupId}/apps/{appId}/user_registrations/by_email/{email}/run_confirm\":\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n      - \"$ref\": \"#/components/parameters/Email\"\n    post:\n      tags:\n        - email\n      operationId: adminRerunPendingUserConfirmation\n      summary: Rerun a user confirmation workflow\n      description: |-\n        Reruns a pending user's [confirmation workflow](https://www.mongodb.com/docs/realm/authentication#std-label-user-accounts).\n      responses:\n        \"202\":\n          description: Successfully re-ran confirmation workflow.\n        \"400\":\n          description: |-\n            User is already confirmed or Email/Password authentication is not\n            enabled.\n        \"404\":\n          description: User does not exist.\n\n  \"/groups/{groupId}/apps/{appId}/debug/execute_function\":\n    post:\n      tags:\n        - functions\n      operationId: adminExecuteFunction\n      summary: Execute a function\n      description: Execute a [function](https://www.mongodb.com/docs/realm/functions#std-label-functions) for testing.\n      parameters:\n        - name: user_id\n          in: query\n          description: |-\n            The user as which to execute the function. Either `user_id` or\n            `run_as_system` is required. You cannot specify both.\n          schema:\n            type: string\n          required: true\n        - name: run_as_system\n          in: query\n          description: |-\n            Determine whether or not to run as system user. Either `run_as_system`\n            or `user_id` is required. You cannot specify both.\n          schema:\n            type: boolean\n          required: true\n      requestBody:\n        required: true\n        description: The function to execute.\n        content:\n          application/json:\n            schema:\n              properties:\n                service:\n                  type: string\n                  description: The service to use when calling this function.\n                name:\n                  type: string\n                  description: The name of the function you want to run.\n                arguments:\n                  type: array\n                  description: Any arguments that your function needs.\n                  items:\n                    type: string\n              required:\n                - name\n      responses:\n        \"200\":\n          description: Successfully executed.\n          content:\n            application/json:\n              schema:\n                properties:\n                  error:\n                    type: object\n                  logs: {}\n                  result:\n                    type: object\n                  stats:\n                    properties:\n                      execution_time:\n                        type: string\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n  \"/groups/{groupId}/apps/{appId}/debug/execute_function_source\":\n    post:\n      tags:\n        - functions\n      operationId: adminExecuteFunctionSource\n      summary: Execute a function's source code for testing\n      description: |-\n        Execute a [function](https://www.mongodb.com/docs/realm/functions#std-label-functions)'s source code\n        for testing.\n      parameters:\n        - name: user_id\n          in: query\n          description: |-\n            The user as which to execute the function. Either `user_id` or\n            `run_as_system` is required. You cannot specify both.\n          schema:\n            type: string\n          required: true\n        - name: run_as_system\n          in: query\n          description: |-\n            Determine whether or not to run as system user. Either `run_as_system`\n            or `user_id` is required. You cannot specify both.\n          schema:\n            type: boolean\n          required: true\n      requestBody:\n        required: true\n        description: The source to execute.\n        content:\n          application/json:\n            schema:\n              properties:\n                eval_source:\n                  type: string\n                  description: |-\n                    This JSON expression must evaluate to `true` before the function may\n                    run. If this field is blank, it will evaluate to `true`.\n                source:\n                  type: string\n              required:\n                - source\n      responses:\n        \"200\":\n          description: Successfully executed.\n          content:\n            application/json:\n              schema:\n                properties:\n                  error:\n                    type: object\n                  logs: {}\n                  result:\n                    type: object\n                  stats:\n                    properties:\n                      execution_time:\n                        type: string\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n\n  \"/groups/{groupId}/apps/{appId}/auth_providers\":\n    get:\n      tags:\n        - authproviders\n      operationId: adminListAuthProviders\n      summary: List authentication providers in a Atlas App Services App\n      description: |-\n        List [authentication\n        providers](https://www.mongodb.com/docs/realm/authentication/providers)\n        within a Atlas App Services App.\n      responses:\n        \"200\":\n          description: Successfully listed.\n          content:\n            application/json:\n              schema:\n                items:\n                  \"$ref\": \"#/components/schemas/BaseAuthProvider\"\n    post:\n      tags:\n        - authproviders\n      operationId: adminCreateAuthProvider\n      summary: Create an authentication provider\n      description: |-\n        Create an [authentication\n        provider](https://www.mongodb.com/docs/realm/authentication/providers).\n      requestBody:\n        required: true\n        description: \"\"\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/AuthProvider\"\n      responses:\n        \"201\":\n          description: Successfully created.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/AuthProvider\"\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n  \"/groups/{groupId}/apps/{appId}/auth_providers/{providerId}\":\n    get:\n      tags:\n        - authproviders\n      operationId: adminGetAuthProvider\n      summary: Retrieve information about authentication provider\n      description: |-\n        Retrieve information about one of an application's [authentication\n        providers](https://www.mongodb.com/docs/realm/authentication/providers)\n      responses:\n        \"200\":\n          description: Successfully retrieved.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/AuthProvider\"\n    delete:\n      tags:\n        - authproviders\n      operationId: adminDeleteAuthProvider\n      summary: Delete an authentication provider\n      description: |-\n        Delete an [authentication\n        provider](https://www.mongodb.com/docs/realm/authentication/providers).\n      responses:\n        \"204\":\n          description: Successfully deleted.\n    patch:\n      tags:\n        - authproviders\n      operationId: adminUpdateAuthProvider\n      summary: Update an authentication provider\n      description: |-\n        Update an [authentication\n        provider](https://www.mongodb.com/docs/realm/authentication/providers).\n      requestBody:\n        required: true\n        description: \"\"\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/AuthProvider\"\n      responses:\n        \"204\":\n          description: Successfully updated.\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n      - \"$ref\": \"#/components/parameters/ProviderId\"\n  \"/groups/{groupId}/apps/{appId}/auth_providers/{providerId}/disable\":\n    put:\n      tags:\n        - authproviders\n      operationId: adminDisableAuthProvider\n      summary: Disable an authentication provider\n      description: |-\n        Disable an [authentication\n        provider](https://www.mongodb.com/docs/realm/authentication/providers).\n      responses:\n        \"204\":\n          description: Successfully disabled.\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n      - \"$ref\": \"#/components/parameters/ProviderId\"\n  \"/groups/{groupId}/apps/{appId}/auth_providers/{providerId}/enable\":\n    put:\n      tags:\n        - authproviders\n      operationId: adminEnableAuthProvider\n      summary: Enable an authentication provider\n      description: |-\n        Enable an [authentication\n        provider](https://www.mongodb.com/docs/realm/authentication/providers).\n      responses:\n        \"204\":\n          description: Successfully enabled.\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n      - \"$ref\": \"#/components/parameters/ProviderId\"\n  \"/groups/{groupId}/apps/{appId}/security/allowed_request_origins\":\n    get:\n      tags:\n        - security\n      operationId: adminListAllowedRequestOrigins\n      summary: List allowed HTTP origins\n      description: |-\n        List the allowed [HTTP\n        origins](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Origin)\n        from which App Services should allow requests.\n      responses:\n        \"200\":\n          description: Successfully listed.\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n    post:\n      tags:\n        - security\n      operationId: adminSetAllowedRequestOrigins\n      summary: Set allowed HTTP origins\n      description: |-\n        Set the allowed [HTTP\n        origins](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Origin)\n        from which App Services should allow requests.\n      requestBody:\n        required: true\n        description: A list of HTTP origins.\n        content:\n          application/json:\n            schema:\n              items:\n                description: An HTTP origin. Must be of the form `\u003cscheme\u003e://\u003chost\u003e[:port]`.\n                type: string\n      responses:\n        \"204\":\n          description: The allowed HTTP origins were successfully set.\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n  \"/groups/{groupId}/apps/{appId}/security/access_list\":\n    get:\n      tags:\n        - security\n      operationId: allowedIPAccessListGet\n      summary: List the allowed entries in the Access List\n      description: List the allowed entries in the Access List of your Atlas App Services App.\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                items:\n                  properties:\n                    current_ip:\n                      type: string\n                    allowed_ips:\n                      type: array\n                      items:\n                        type: object\n                        properties:\n                          _id:\n                            type: string\n                            format: ObjectID\n                            description: ObjectID\n                          address:\n                            type: string\n                          ip:\n                            type: string\n                            format: net.IP\n                            description: net.IP\n                          network:\n                            type: string\n                            format: net.IPNet\n                            description: net.IPNet\n                          comment:\n                            type: string\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n    post:\n      tags:\n        - security\n      operationId: allowedIPAccessListCreate\n      summary: Create an IP address or CIDR block in the Access List\n      description: |-\n        Create an IP address or CIDR block in the Access List for your App Services\n        app.\n      responses:\n        \"201\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  _id:\n                    type: string\n                    format: ObjectID\n                    description: ObjectID\n                  address:\n                    type: string\n                  ip:\n                    type: string\n                    format: net.IP\n                    description: net.IP\n                  network:\n                    type: string\n                    format: net.IPNet\n                    description: net.IPNet\n                  comment:\n                    type: string\n  \"/groups/{groupId}/apps/{appId}/security/access_list/{ipId}\":\n    patch:\n      tags:\n        - security\n      operationId: allowedIPAccessListUpdate\n      summary: Modify an IP address or CIDR block in the Access List\n      description: |-\n        Modify an IP address or CIDR block in the Access List of your App Services\n        app\n      responses:\n        \"201\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  _id:\n                    type: string\n                    format: ObjectID\n                    description: ObjectID\n                  address:\n                    type: string\n                  ip:\n                    type: string\n                    format: net.IP\n                    description: net.IP\n                  network:\n                    type: string\n                    format: net.IPNet\n                    description: net.IPNet\n                  comment:\n                    type: string\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n      - name: ipId\n        in: path\n        description: |-\n          The IP address entry denoted by `ip_id` with the information given in\n          the request body\n        schema:\n          type: string\n        required: true\n    delete:\n      tags:\n        - security\n      operationId: allowedIPAccessListDelete\n      summary: Delete an IP address or CIDR block from the Access List\n      description: |-\n        Delete an IP address or CIDR block from the Access List of your App Services\n        app\n      responses:\n        \"204\":\n          description: Deleted\n        \"404\":\n          description: No IP addresses or CIDR blocks to delete\n  \"/groups/{groupId}/apps/{appId}/security/refresh_token_expiration\":\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n    get:\n      tags:\n        - security\n      operationId: adminGetRefreshTokenExpiration\n      summary: Get User Refresh Token Expiration Time\n      descripti:on: |-\n        Get the current expiration time in seconds for user session refresh tokens.\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RefreshTokenExpiration\"\n        \"404\":\n          description: Group or App Not Found\n    put:\n      tags:\n        - security\n      operationId: adminSetRefreshTokenExpiration\n      summary: Set User Refresh Token Expiration Time\n      descripti:on: |-\n        Set the expiration time in seconds for user session refresh tokens.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RefreshTokenExpiration\"\n      responses:\n        \"204\":\n          description: Expiration time updated\n        \"400\":\n          description: Invalid expiration time\n        \"404\":\n          description: Group or App Not Found\n  \"/groups/{groupId}/apps/{appId}/metrics\":\n    get:\n      tags:\n        - metrics\n      operationId: adminGetMetrics\n      summary: Retrieve App Services metrics\n      description: |-\n        Retrieves a variety of metrics, including: Compute Time, Data Transfer,\n        Sync Minutes, Requests Succeeded, Requests Failed. For a complete list\n        of available metrics, see [App\n        Services Metrics Reference](https://mongodb.com/docs/atlas/app-services/reference/metrics).\n      parameters:\n        - \"$ref\": \"#/components/parameters/GroupId\"\n        - \"$ref\": \"#/components/parameters/AppId\"\n        - name: start\n          in: query\n          description: |-\n            The ISO 8601 date and time of the start of the query period.\n          schema:\n            type: string\n          required: true\n        - name: end\n          in: query\n          description: |-\n            The ISO 8601 date and time of the end of the query period.\n          schema:\n            type: string\n          required: true\n        - name: granularity\n          in: query\n          description: |-\n            Specifies the granularity of the query period as an\n            [ISO-8601 duration value](https://en.wikipedia.org/wiki/ISO_8601#Durations). Examples\n            include \"P31D\" (31 day), \"PT1H\" (1 hour), and \"PT5M\" (5 minutes).\n          schema:\n            type: string\n          required: true\n      responses:\n        \"200\":\n          description: Successfully retrieved.\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - app_id\n                  - app_name\n                  - end\n                  - granularity\n                  - group_id\n                  - start\n                  - measurements\n                properties:\n                  measurements:\n                    type: array\n                    description: The list of metrics.\n                    items:\n                      type: object\n                      properties:\n                        data_points:\n                          type: array\n                          description: A set of data points for the given metric.\n                          items:\n                            type: object\n                            properties:\n                              timestamp:\n                                type: string\n                                description: |-\n                                  The ISO-8601 date and time of the measurement.\n                              value:\n                                type: number\n                                description: |-\n                                  The value of the measurement in the unit\n                                  specified by the metric's `unit` property.\n                        name:\n                          type: string\n                          description: |-\n                            The name of the metric. For a complete list of\n                            available metrics and their units, see [App Services\n                            Metrics\n                            Reference](https://mongodb.com/docs/atlas/app-services/reference/metrics).\n                        units:\n                          type: string\n                          description: The unit of each data point's `value` property.\n                  app_id:\n                    type: string\n                    description: |-\n                      The app ID sent in the request.\n                  app_name:\n                    type: string\n                    description: |-\n                      The app's human-readable name.\n                  group_id:\n                    type: string\n                    description: |-\n                      The group ID sent in the request.\n                  start:\n                    type: string\n                    description: |-\n                      The date and time (ISO-8601 format) of the earliest requested measurement.\n                  end:\n                    type: string\n                    description: |-\n                      The date and time (ISO-8601 format) of the latest requested measurement.\n                  granularity:\n                    type: string\n                    description: |-\n                      The requested granularity of the metrics in [ISO-8601 duration format](https://en.wikipedia.org/wiki/ISO_8601#Durations).\n  \"/groups/{groupId}/apps/{appId}/logs\":\n    get:\n      tags:\n        - logs\n      operationId: adminGetLogs\n      summary: Retrieve App Services logs\n      parameters:\n        - name: co_id\n          in: query\n          description: Return only log messages associated with the given request ID.\n          schema:\n            type: string\n          required: false\n        - name: errors_only\n          in: query\n          description: |-\n            The value of this field does not matter. If included in the request,\n            this endpoint only returns error logs (even if the value is set to `false`).\n            If this field is excluded from the request, this endpoint only returns non-error logs.\n          schema:\n            type: boolean\n          required: false\n        - name: user_id\n          in: query\n          schema:\n            type: string\n          description: Return only log messages associated with the given `user_id`.\n          required: false\n        - name: start_date\n          in: query\n          schema:\n            type: string\n          description: |-\n            The date and time in ISO 8601 at which to begin returning results,\n            exclusive.\n          required: false\n        - name: end_date\n          in: query\n          schema:\n            type: string\n          description: |-\n            The date and time in ISO 8601 at which to cease returning results,\n            inclusive.\n          required: false\n        - name: skip\n          in: query\n          schema:\n            type: integer\n          description: |-\n            The offset number of matching log entries to skip before including them\n            in the response.\n          required: false\n        - name: limit\n          in: query\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n          description: |-\n            The maximum number of log entries to include in the response. If the\n            query matches more than this many logs, it returns documents in\n            ascending order by date until the limit is reached.\n          required: false\n        - name: type\n          in: query\n          schema:\n            type: string\n            enum:\n              - TRIGGER_FAILURE\n              - DB_TRIGGER\n              - AUTH_TRIGGER\n              - SCHEDULED_TRIGGER\n              - FUNCTION\n              - SERVICE_FUNCTION\n              - STREAM_FUNCTION\n              - SERVICE_STREAM_FUNCTION\n              - AUTH\n              - WEBHOOK\n              - ENDPOINT\n              - PUSH\n              - API\n              - API_KEY\n              - GRAPHQL\n              - SYNC_CONNECTION_START\n              - SYNC_CONNECTION_END\n              - SYNC_SESSION_START\n              - SYNC_SESSION_END\n              - SYNC_CLIENT_WRITE\n              - SYNC_ERROR\n              - SYNC_OTHER\n              - SCHEMA_ADDITIVE_CHANGE\n              - SCHEMA_GENERATION\n              - SCHEMA_VALIDATION\n              - LOG_FORWARDER\n          description: The kind of log you would like to retrieve.\n          required: false\n      responses:\n        \"200\":\n          description: Successfully retrieved.\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - nextEndDate\n                  - nextSkip\n                properties:\n                  logs:\n                    type: array\n                    maxItems: 100\n                    description: At most 100 results per request.\n                    items:\n                      type: object\n                      properties:\n                        _id:\n                          type: string\n                        co_id:\n                          type: string\n                        domain_id:\n                          type: string\n                        app_id:\n                          type: string\n                          description: |-\n                            The ObjectID of your application.\n                            [The App Services API Project and Application IDs section](#section/Project-and-Application-IDs) demonstrates how to find this\n                            value.\n                        group_id:\n                          type: string\n                          description: |-\n                            An Atlas [Project/Group\n                            ID](https://docs.atlas.mongodb.com/tutorial/manage-projects/).\n                        request_url:\n                          type: string\n                        request_method:\n                          type: string\n                        started:\n                          type: string\n                        completed:\n                          type: string\n                        error:\n                          type: string\n                        error_code:\n                          type: string\n                        status:\n                          type: integer\n                  nextEndDate:\n                    type: string\n                    description: |-\n                      The end date and time of the next page of log entries in ISO 8601\n                      format. App Services paginates the result sets of queries that match\n                      more than 100 log entries and includes this field in paginated\n                      responses. To get the next page of up to 100 entries, pass this value as\n                      the `end_date` parameter in a subsequent request.\n                  nextSkip:\n                    type: integer\n                    description: |-\n                      The offset into the next page of log entries in ISO 8601 format. MongoDB\n                      App Services paginates the result sets of queries that match more than 100 log\n                      entries and includes this field in paginated responses where the first\n                      entry on the next page has the same timestamp as the last entry on this\n                      page. To get the next page of up to 100 entries, pass this value, if it\n                      is present, as the `skip` parameter in a subsequent request.\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n  \"/groups/{groupId}/apps/{appId}/log_forwarders\":\n    parameters:\n      - $ref: \"#/components/parameters/GroupId\"\n      - $ref: \"#/components/parameters/AppId\"\n    get:\n      tags: [\"log_forwarders\"]\n      operationId: \"listLogForwarders\"\n      summary: \"List log forwarders.\"\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/LogForwarder\"\n    post:\n      tags: [\"log_forwarders\"]\n      operationId: \"createLogForwarder\"\n      summary: \"Create a log forwarder.\"\n      requestBody:\n        required: true\n        description: \"A log forwarder configuration\"\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateLogForwarderRequest\"\n      responses:\n        201:\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LogForwarder\"\n  \"/groups/{groupId}/apps/{appId}/log_forwarders/{forwarderId}\":\n    parameters:\n      - $ref: \"#/components/parameters/GroupId\"\n      - $ref: \"#/components/parameters/AppId\"\n      - $ref: \"#/components/parameters/ForwarderId\"\n    get:\n      tags: [\"log_forwarders\"]\n      operationId: \"getLogForwarder\"\n      summary: \"Get a specific log forwarder.\"\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LogForwarder\"\n    patch:\n      tags: [\"log_forwarders\"]\n      operationId: \"updateLogForwarder\"\n      summary: \"Update a log forwarder.\"\n      requestBody:\n        required: true\n        description: \"A log forwarder configuration\"\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateLogForwarderRequest\"\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LogForwarder\"\n    delete:\n      tags: [\"log_forwarders\"]\n      operationId: \"deleteGwarder\"\n      summary: \"Delete a log forwarder.\"\n      responses:\n        204:\n          description: No Content\n  \"/groups/{groupId}/apps/{appId}/log_forwarders/{forwarderId}/enable\":\n    parameters:\n      - $ref: \"#/components/parameters/GroupId\"\n      - $ref: \"#/components/parameters/AppId\"\n      - $ref: \"#/components/parameters/ForwarderId\"\n    put:\n      tags: [\"log_forwarders\"]\n      operationId: \"enableLogForwarder\"\n      summary: \"Enable a log forwarder.\"\n      responses:\n        204:\n          description: No Content\n  \"/groups/{groupId}/apps/{appId}/log_forwarders/{forwarderId}/disable\":\n    parameters:\n      - $ref: \"#/components/parameters/GroupId\"\n      - $ref: \"#/components/parameters/AppId\"\n      - $ref: \"#/components/parameters/ForwarderId\"\n    put:\n      tags: [\"log_forwarders\"]\n      operationId: \"disableLogForwarder\"\n      summary: \"Disable a log forwarder.\"\n      responses:\n        204:\n          description: No Content\n  \"/groups/{groupId}/apps/{appId}/api_keys\":\n    get:\n      tags:\n        - apikeys\n      operationId: adminListApiKeys\n      summary: List API keys\n      description: |-\n        List [API keys](https://www.mongodb.com/docs/realm/authentication/api-key)\n        associated with a Atlas App Services App.\n      responses:\n        \"200\":\n          description: The API keys were successfully listed.\n          content:\n            application/json:\n              schema:\n                items:\n                  properties:\n                    _id:\n                      type: string\n                    name:\n                      type: string\n                    disabled:\n                      type: boolean\n    post:\n      tags:\n        - apikeys\n      operationId: adminCreateApiKey\n      summary: Create a new API key\n      description: |-\n        Create a new [API\n        key](https://www.mongodb.com/docs/realm/authentication/api-key).\n      requestBody:\n        description: The API key to create.\n        required: true\n        content:\n          application/json:\n            schema:\n              properties:\n                name:\n                  type: string\n              required:\n                - name\n      responses:\n        \"201\":\n          description: The API key was successfully created.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ApiKey\"\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n  \"/groups/{groupId}/apps/{appId}/api_keys/{apiKeyId}\":\n    get:\n      tags:\n        - apikeys\n      operationId: adminGetApiKey\n      summary: Retrieve information about an API key\n      description: |-\n        Retrieve information about an [API\n        key](https://www.mongodb.com/docs/realm/authentication/api-key).\n      responses:\n        \"200\":\n          description: The API key was successfully retrieved.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ApiKeyResponse\"\n    delete:\n      tags:\n        - apikeys\n      operationId: adminDeleteApiKey\n      summary: Delete an API key\n      description: |-\n        Delete an [API\n        key](https://www.mongodb.com/docs/realm/authentication/api-key).\n      responses:\n        \"204\":\n          description: The API key was successfully deleted.\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n      - \"$ref\": \"#/components/parameters/ApiKeyId\"\n  \"/groups/{groupId}/apps/{appId}/api_keys/{apiKeyId}/enable\":\n    put:\n      tags:\n        - apikeys\n      operationId: adminEnableApiKey\n      summary: Enable an API key\n      description: |-\n        Enable an [API\n        key](https://www.mongodb.com/docs/realm/authentication/api-key).\n      responses:\n        \"204\":\n          description: The API key was successfully enabled.\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n      - \"$ref\": \"#/components/parameters/ApiKeyId\"\n  \"/groups/{groupId}/apps/{appId}/api_keys/{apiKeyId}/disable\":\n    put:\n      tags:\n        - apikeys\n      operationId: adminDisableApiKey\n      summary: Disable an API key\n      description: |-\n        Disable an [API\n        key](https://www.mongodb.com/docs/realm/authentication/api-key).\n      responses:\n        \"204\":\n          description: The API key was successfully disabled.\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n      - \"$ref\": \"#/components/parameters/ApiKeyId\"\n  \"/groups/{groupId}/apps/{appId}/secrets\":\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n    get:\n      tags:\n        - secrets\n      operationId: adminGetAllSecrets\n      summary: List secrets\n      description: |-\n        List [secrets](https://www.mongodb.com/docs/realm/values-and-secrets/define-and-manage-secrets#std-label-define-secret)\n        associated with a Atlas App Services App.\n      responses:\n        \"200\":\n          description: The Secrets were successfully listed.\n          content:\n            application/json:\n              schema:\n                items:\n                  properties:\n                    _id:\n                      type: string\n                    name:\n                      type: string\n    post:\n      tags:\n        - secrets\n      operationId: adminCreateASecret\n      summary: |-\n        Create a new Secret\n      description: |-\n        Create a new\n        [Secret](https://www.mongodb.com/docs/realm/values-and-secrets/define-and-manage-secrets).\n      requestBody:\n        description: The Secret to create.\n        required: true\n        content:\n          application/json:\n            schema:\n              properties:\n                name:\n                  type: string\n                value:\n                  type: string\n              required:\n                - name\n                - value\n      responses:\n        \"201\":\n          description: The Secret was successfully created.\n          content:\n            application/json:\n              schema:\n                properties:\n                  _id:\n                    type: string\n                  name:\n                    type: string\n  \"/groups/{groupId}/apps/{appId}/secrets/{secretId}\":\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n      - \"$ref\": \"#/components/parameters/SecretId\"\n    put:\n      tags:\n        - secrets\n      operationId: adminModifyASecret\n      summary: Modify a Secret\n      description: |-\n        Modify a\n        [Secret](https://www.mongodb.com/docs/realm/values-and-secrets/define-and-manage-secrets)\n        associated with a Atlas App Services App.\n      requestBody:\n        description: The modified value of the Secret.\n        required: true\n        content:\n          application/json:\n            schema:\n              properties:\n                _id:\n                  type: string\n                name:\n                  type: string\n                value:\n                  type: string\n              required:\n                - name\n                - value\n      responses:\n        \"204\":\n          description: No body returned for response\n    delete:\n      tags:\n        - secrets\n      operationId: adminDeleteSecret\n      summary: Delete a Secret\n      description: |-\n        Delete a\n        [Secret](https://www.mongodb.com/docs/realm/values-and-secrets/define-and-manage-secrets)\n        associated with a Atlas App Services App.\n      responses:\n        \"204\":\n          description: The Secret was successfully deleted.\n  \"/groups/{groupId}/apps/{appId}/functions\":\n    get:\n      tags:\n        - functions\n      operationId: adminListFunctions\n      summary: List Functions\n      description: List [Functions](https://www.mongodb.com/docs/realm/functions#std-label-functions).\n      responses:\n        \"200\":\n          description: Successfully listed.\n          content:\n            application/json:\n              schema:\n                items:\n                  properties:\n                    _id:\n                      type: string\n                    name:\n                      type: string\n    post:\n      tags:\n        - functions\n      operationId: adminCreateFunction\n      summary: Create a new Function\n      description: Create a new [Function](https://www.mongodb.com/docs/realm/functions#std-label-functions).\n      requestBody:\n        description: The function to create\n        required: true\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/NewFunction\"\n      responses:\n        \"201\":\n          description: The function was successfully created.\n          content:\n            application/json:\n              schema:\n                properties:\n                  _id:\n                    type: string\n                    description: Unique identifier for the function.\n                  name:\n                    type: string\n                    description: Name for the function specified in the `name` field of the request.\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n  \"/groups/{groupId}/apps/{appId}/functions/{functionId}\":\n    get:\n      tags:\n        - functions\n      operationId: adminGetFunction\n      summary: Retrieve a Function\n      description: Retrieve a [Function](https://www.mongodb.com/docs/realm/functions#std-label-functions).\n      responses:\n        \"200\":\n          description: The function was successfully retrieved.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Function\"\n    delete:\n      tags:\n        - functions\n      operationId: adminDeleteFunction\n      summary: Delete a Function\n      description: Delete a [Function](https://www.mongodb.com/docs/realm/functions#std-label-functions).\n      responses:\n        \"204\":\n          description: The function was successfully deleted.\n    put:\n      tags:\n        - functions\n      operationId: adminUpdateFunction\n      summary: Update a Function\n      description: Update a [Function](https://www.mongodb.com/docs/realm/functions#std-label-functions).\n      responses:\n        \"200\":\n          description: The function was successfully updated.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/NewFunction\"\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n      - \"$ref\": \"#/components/parameters/FunctionId\"\n  \"/groups/{groupId}/apps/{appId}/dependencies\":\n    get:\n      tags:\n        - dependencies\n      operationId: adminGetAllDependencies\n      summary: List external dependencies\n      description: |-\n        List [external\n        dependencies](https://www.mongodb.com/docs/realm/functions/dependencies/) uploaded\n        to the Atlas App Services App.\n      responses:\n        \"200\":\n          description: The function was successfully retrieved.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/DependenciesSummary\"\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n\n  \"/groups/{groupId}/apps/{appId}/deploy/config\":\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n    get:\n      tags:\n        - deploy\n      operationId: adminGetDeploymentConfig\n      summary: Get the Deployment Configuration\n      description: See information about how your App deploys changes.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeploymentConfig\"\n    patch:\n      tags:\n        - deploy\n      operationId: adminConfigureDeployment\n      summary: Configure Deployment\n      description: Modify an App's deployment configuration to customize how the App deploys changes.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              description: An updated deployment configuration\n              $ref: \"#/components/schemas/DeploymentConfig\"\n      responses:\n        \"204\":\n          description: Success\n\n  \"/groups/{groupId}/apps/{appId}/deployments\":\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n    get:\n      tags:\n        - deploy\n      operationId: adminListDeployments\n      summary: List recent deployments\n      description: Return the 100 most recent application deployments.\n      responses:\n        \"200\":\n          description: Successfully listed.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/Deployment\"\n  \"/groups/{groupId}/apps/{appId}/deployments/{deploymentId}\":\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n      - \"$ref\": \"#/components/parameters/DeploymentId\"\n    get:\n      tags:\n        - deploy\n      operationId: adminGetDeployment\n      summary: Get a deployment\n      description: Get information about a recent deployment of the application.\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Deployment\"\n  \"/groups/{groupId}/apps/{appId}/deployments/{deploymentId}/redeploy\":\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n      - \"$ref\": \"#/components/parameters/DeploymentId\"\n    get:\n      tags:\n        - deploy\n      operationId: adminRedeployDeployment\n      summary: Redeploy a deployment\n      description: Redeploy a previously-deployed version of an App.\n      responses:\n        \"204\":\n          description: Successfully redeployed\n        \"404\":\n          description: Deployment not found\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - \"$ref\": \"#/components/schemas/Error\"\n                  - properties:\n                      error:\n                        const: \"deployment not found\"\n                      error_code:\n                        const: \"DeploymentNotFound\"\n\n  \"/groups/{groupId}/apps/{appId}/drafts\":\n    get:\n      tags:\n        - deploy\n      operationId: adminListDeploymentDrafts\n      summary: Return current deployment draft\n      description: Return the current application deployment draft, if applicable.\n      responses:\n        \"200\":\n          description: Successfully listed.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/DeploymentDraft\"\n    post:\n      tags:\n        - deploy\n      operationId: adminCreateDeploymentDraft\n      summary: Create a new deployment draft\n      description: Create a new application deployment draft, if none exists.\n      responses:\n        \"200\":\n          description: Successfully created draft.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/DeploymentDraft\"\n        \"409\":\n          description: Draft already exists\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Error\"\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n  \"/groups/{groupId}/apps/{appId}/drafts/{draftId}\":\n    delete:\n      tags:\n        - deploy\n      operationId: adminDiscardDraft\n      summary: Discard the specified deployment draft\n      description: Discard the specified application deployment draft.\n      responses:\n        \"204\":\n          description: The draft was successfully discarded.\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n      - \"$ref\": \"#/components/parameters/DraftId\"\n  \"/groups/{groupId}/apps/{appId}/drafts/{draftId}/deployment\":\n    post:\n      tags:\n        - deploy\n      operationId: adminDeployDraft\n      summary: Deploy a deployment draft\n      description: Deploy the specified application deployment draft.\n      responses:\n        \"201\":\n          description: The draft was successfully deployed.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Deployment\"\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n      - \"$ref\": \"#/components/parameters/DraftId\"\n  \"/groups/{groupId}/apps/{appId}/drafts/{draftId}/diff\":\n    get:\n      tags:\n        - deploy\n      operationId: adminDeployDraftDiff\n      summary: Diff a draft with the current deployment\n      description: |-\n        Return a diff between the currently deployed application and the\n        specified draft.\n      responses:\n        \"200\":\n          description: Successfully diffed draft.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Diff\"\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n      - \"$ref\": \"#/components/parameters/DraftId\"\n\n  \"/groups/{groupId}/apps/{appId}/environment\":\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n    put:\n      operationId: adminSetEnvironment\n      summary: Set the App Environment\n      description: Set the App's active environment\n      tags:\n        - environments\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                environment:\n                  $ref: \"#/components/schemas/AppEnvironment\"\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AppInstance\"\n        \"400\":\n          description: Invalid environment\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n\n  \"/groups/{groupId}/apps/{appId}/environment_values\":\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n    get:\n      operationId: adminListEnvironmentValues\n      summary: List All Environment Values\n      description: |-\n        Get basic information about all environment values in the App.\n        Results do not include the environment-specific `values`. For\n        details on a specific environment, call [Get an Environment\n        Value](#tag/environments/operation/adminGetEnvironmentValue).\n      tags:\n        - environments\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/EnvironmentValueDescription\"\n        \"400\":\n          \"$ref\": \"#/components/responses/BadRequest\"\n\n    post:\n      operationId: adminCreateEnvironmentValue\n      summary: Create an Environment Value\n      description: Define a new environment value.\n      tags:\n        - environments\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/EnvironmentValue\"\n      responses:\n        \"201\":\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EnvironmentValueDescription\"\n        \"409\":\n          description: Environment value name already exists\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n\n  \"/groups/{groupId}/apps/{appId}/environment_values/{environmentValueId}\":\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n      - \"$ref\": \"#/components/parameters/EnvironmentValueId\"\n    get:\n      operationId: adminGetEnvironmentValue\n      summary: Get an Environment Value\n      description: Get details about a specific environment value\n      tags:\n        - environments\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EnvironmentValue\"\n        \"404\":\n          $ref: \"#/components/responses/EnvironmentValueNotFound\"\n\n    put:\n      operationId: adminModifyEnvironmentValue\n      summary: Modify an Environment Value\n      description: Modify an existing environment value\n      tags:\n        - environments\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/EnvironmentValue\"\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EnvironmentValueDescription\"\n        \"404\":\n          $ref: \"#/components/responses/EnvironmentValueNotFound\"\n\n    delete:\n      operationId: adminDeleteEnvironmentValue\n      summary: Delete an Environment Value\n      description: Delete an existing environment value\n      tags:\n        - environments\n      responses:\n        \"204\":\n          description: Deleted\n        \"404\":\n          $ref: \"#/components/responses/EnvironmentValueNotFound\"\n\n  \"/groups/{groupId}/apps/{appId}/hosting/config\":\n    get:\n      tags:\n        - hosting\n      operationId: adminGetHostingConfig\n      summary: Get Hosting Configuration\n      description: |\n        Returns the current hosting configuration. Hosting is active\n        if the response includes `status: \"setup_ok\"`.\n      responses:\n        200:\n          description: Successfully get hosting configuration\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/HostingConfiguration\"\n    patch:\n      tags:\n        - hosting\n      operationId: adminEnableDisableHosting\n      summary: Enable/Disable Hosting\n      description: |\n        Enable or disable App Services Hosting for your app.\n        Changes to hosting can take up to 15 minutes to take effect.\n        This endpoint does not notify you when the changes have taken effect,\n        only that the change operation was successfully received by the server.\n\n        You can see if the hosting enablement/disablement is complete\n        by calling the [Get Hosting Configuration](#operation/adminGetHostingConfig) endpoint.\n\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                enabled:\n                  type: boolean\n                  description: |\n                    Set to `true` to enable App Services Hosting.\n                    Set to `false` to disable App Services Hosting.\n      responses:\n        204:\n          description: |\n            Successfully enabled/disabled App Services Hosting.\n\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n  \"/groups/{groupId}/apps/{appId}/hosting/assets\":\n    get:\n      tags:\n        - hosting\n      operationId: adminGetAllHostedAssets\n      summary: List all hosted assets\n      responses:\n        \"200\":\n          description: Successfully listed hosted files.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/HostedAssetMetadata\"\n    post:\n      tags:\n        - hosting\n      operationId: adminMoveCopyHostedAsset\n      summary: Move or copy a hosted asset\n      description: Move or copy a hosted asset to a new resource path.\n      requestBody:\n        description: |-\n          The hosted asset file and its metadata. (Must use\n          `Content-Type: multipart/mixed`)\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                move_from:\n                  type: string\n                  description: |-\n                    The current resource path of the asset to move. Must be used with\n                    `move_to`.\n                move_to:\n                  type: string\n                  description: |-\n                    The resource path to which the asset will move. Must be used with\n                    `move_from`.\n                copy_from:\n                  type: string\n                  description: |-\n                    The current resource path of the asset to copy. Must be used with\n                    `copy_to`.\n                copy_to:\n                  type: string\n                  description: |-\n                    The resource path to which the asset will be copied. Must be used with\n                    `copy_from`.\n      responses:\n        \"204\":\n          description: Successfully moved/copied the hosted asset.\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n  \"/groups/{groupId}/apps/{appId}/hosting/assets/asset\":\n    get:\n      tags:\n        - hosting\n      operationId: adminGetHostedAsset\n      summary: Retrieve metadata for a specific hosted asset\n      parameters:\n        - \"$ref\": \"#/components/parameters/AssetResourcePath\"\n        - \"$ref\": \"#/components/parameters/AssetResourcePathPrefix\"\n      responses:\n        \"200\":\n          description: Successfully retrieved metadata for the hosted file.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/HostedAssetMetadata\"\n        \"404\":\n          description: Asset not found.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n    put:\n      tags:\n        - hosting\n      operationId: adminUploadHostedAsset\n      summary: Upload or replace a hosted asset\n      description: Upload or replace a hosted asset at a specific resource path.\n      parameters:\n        - \"$ref\": \"#/components/parameters/AssetResourcePath\"\n      requestBody:\n        description: |-\n          The hosted asset file and its metadata. (Must use\n          `Content-Type: multipart/mixed`)\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                meta:\n                  type: object\n                  \"$ref\": \"#/components/schemas/AssetMetadata\"\n                  required:\n                    - meta\n                    - file\n                  description: |-\n                    An [asset metadata\n                    document](https://www.mongodb.com/docs/realm/admin/api/v3#std-label-asset-metadata-document)\n                    (encoded as JSON).\n                file:\n                  type: string\n                  format: binary\n                  description: The asset file to upload (encoded as binary).\n      responses:\n        \"204\":\n          description: Successfully added/replaced the hosted asset.\n        \"400\":\n          \"$ref\": \"#/components/responses/BadRequest\"\n    patch:\n      tags:\n        - hosting\n      operationId: adminUpdateHostedAsset\n      summary: Update the metadata attributes of a hosted asset\n      description: |-\n        Update the metadata attributes of a hosted asset at a specific resource\n        path.\n      parameters:\n        - \"$ref\": \"#/components/parameters/AssetResourcePath\"\n      responses:\n        \"204\":\n          description: Successfully updated the hosted asset.\n        \"400\":\n          \"$ref\": \"#/components/responses/BadRequest\"\n      requestBody:\n        description: |-\n          The new metadata attributes for the hosted asset. These attributes\n          replace all existing attributes for the file.\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                attributes:\n                  type: array\n                  items:\n                    \"$ref\": \"#/components/schemas/MetadataAttribute\"\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n  \"/groups/{groupId}/measurements\":\n    get:\n      tags:\n        - billing\n      operationId: adminMeasurements\n      summary: List group billing usage in a given period\n      description: |-\n        List the request, compute, sync, and data transfer usage in a given\n        period for [billing](https://www.mongodb.com/docs/realm/billing) purposes.\n      parameters:\n        - \"$ref\": \"#/components/parameters/GroupId\"\n        - name: start\n          in: query\n          description: |-\n            The ISO 8601 date and time of the start of the query period. Default is\n            00:00:00 UTC on the first day of the current month.\n          schema:\n            type: string\n          required: false\n        - name: end\n          in: query\n          description: |-\n            The ISO 8601 date and time of the end of the query period. Default is\n            23:59:59 UTC on the the last day of the current month.\n          schema:\n            type: string\n          required: false\n        - name: granularity\n          in: query\n          description: |-\n            Specifies the granularity of the query period, either P31D (31 day) or\n            PT1H (1 hour). Default is P31D.\n          schema:\n            type: string\n            enum:\n              - P31D\n              - PT1H\n          required: false\n      responses:\n        \"200\":\n          description: The measurements were successfully returned.\n          content:\n            application/json:\n              schema:\n                properties:\n                  start:\n                    type: string\n                    description: |-\n                      The [RFC 3339](https://tools.ietf.org/html/3339) date and time of the\n                      start of the query period, which can be specified with the `start` query\n                      parameter.\n                  end:\n                    type: string\n                    description: |-\n                      The [RFC 3339](https://tools.ietf.org/html/3339) date and time of the\n                      end of the query period, which can be specified with the `end` query\n                      parameter.\n                  granularity:\n                    type: string\n                    description: |-\n                      The granularity, which can be specified with the `granularity` query\n                      parameter.\n                  group_id:\n                    type: string\n                    description: |-\n                      The Atlas [Group\n                      ID](https://docs.atlas.mongodb.com/tutorial/manage-projects/).\n                  measurements:\n                    type: array\n                    description: The array of measurements.\n                    items:\n                      properties:\n                        name:\n                          type: string\n                          enum:\n                            - request_count\n                            - compute_time\n                            - data_out\n                            - sync_time\n                          description: |-\n                            The usage metric represented by each data point. See\n                            [billing](https://www.mongodb.com/docs/realm/billing).\n                        units:\n                          type: string\n                          enum:\n                            - \"\u003cempty string\u003e\"\n                            - HOURS\n                            - GIGABYTES\n                          description: The unit of the `value` of each data point.\n                        data_points:\n                          type: array\n                          description: |-\n                            The array of data points for this measurement. A finer `granularity`\n                            results in more data points.\n                          items:\n                            properties:\n                              timestamp:\n                                type: string\n                                description:\n                                  The ISO 8601 date and time of the data\n                                  point.\n                              value:\n                                type: number\n                                description:\n                                  The value at the time in the `unit` of\n                                  the measurement.\n        \"400\":\n          \"$ref\": \"#/components/responses/BadRequest\"\n  \"/groups/{groupId}/apps/{appId}/measurements\":\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n    get:\n      tags:\n        - billing\n      operationId: adminAppMeasurements\n      summary: List app billing usage\n      description: |-\n        List the request, compute, sync, data transfer, and memory usage of a\n        specific app in a given period for\n        [billing](https://www.mongodb.com/docs/realm/billing) purposes.\n      parameters:\n        - \"$ref\": \"#/components/parameters/GroupId\"\n        - \"$ref\": \"#/components/parameters/AppId\"\n        - name: start\n          in: query\n          description: |-\n            The ISO 8601 date and time of the start of the query period. Default is\n            00:00:00 UTC on the first day of the current month.\n          schema:\n            type: string\n          required: false\n        - name: end\n          in: query\n          description: |-\n            The ISO 8601 date and time of the end of the query period. Default is\n            23:59:59 UTC on the the last day of the current month.\n          schema:\n            type: string\n          required: false\n        - name: granularity\n          in: query\n          description: |-\n            Specifies the granularity of the query period, either P31D (31 day) or\n            PT1H (1 hour). Default is P31D.\n          schema:\n            type: string\n            enum:\n              - P31D\n              - PT1H\n          required: false\n      responses:\n        \"200\":\n          description: The measurements were successfully returned.\n          content:\n            application/json:\n              schema:\n                properties:\n                  start:\n                    type: string\n                    description: |-\n                      The RFC 3339 date and time of the start of the query period, which can\n                      be specified with the `start` query parameter.\n                  end:\n                    type: string\n                    description: |-\n                      The RFC 3339 date and time of the end of the query period, which can be\n                      specified with the `end` query parameter.\n                  granularity:\n                    type: string\n                    description: |-\n                      The granularity, which can be specified with the `granularity` query\n                      parameter.\n                  group_id:\n                    type: string\n                    description: |-\n                      The Atlas [Group\n                      ID](https://docs.atlas.mongodb.com/tutorial/manage-projects/).\n                  appId:\n                    type: string\n                    description: The Atlas App Services App ID specified by the `appId` path parameter.\n                  appName:\n                    type: string\n                    description:\n                      The name of the Atlas App Services App specified by the `appId`\n                      path parameter.\n                  measurements:\n                    type: array\n                    description: The array of measurements.\n                    items:\n                      properties:\n                        name:\n                          type: string\n                          enum:\n                            - request_count\n                            - compute_time\n                            - data_out\n                            - sync_time\n                            - mem_usage\n                          description: |-\n                            The usage metric represented by each data point. See\n                            [billing](https://www.mongodb.com/docs/realm/billing).\n                        units:\n                          type: string\n                          enum:\n                            - \"\u003cempty string\u003e\"\n                            - HOURS\n                            - GIGABYTES\n                            - GIGABYTE_SECONDS\n                          description: The unit of the `value` of each data point.\n                        data_points:\n                          type: array\n                          description: |-\n                            The array of data points for this measurement. A finer `granularity`\n                            results in more data points.\n                          items:\n                            properties:\n                              timestamp:\n                                type: string\n                                description:\n                                  The ISO 8601 date and time of the data\n                                  point.\n                              value:\n                                type: number\n                                description:\n                                  The value at the time in the `unit` of\n                                  the measurement.\n        \"400\":\n          \"$ref\": \"#/components/responses/BadRequest\"\n  \"/groups/{groupId}/apps/{appId}/schemas\":\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n    get:\n      tags:\n        - schemas\n      operationId: adminListSchemas\n      summary: List schemas\n      description: List all defined [schemas](https://www.mongodb.com/docs/realm/schemas).\n      responses:\n        \"200\":\n          description: \"Ok\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    _id:\n                      type: string\n                    schema:\n                      type: object\n                    metadata:\n                      \"$ref\": \"#/components/schemas/SchemaMetadata\"\n    post:\n      tags:\n        - schemas\n      operationId: adminCreateSchema\n      summary: Create a schema\n      description: Define a new [schema](https://www.mongodb.com/docs/realm/schemas) for a linked collection.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - schema\n                - metadata\n              properties:\n                _id:\n                  type: string\n                schema:\n                  type: object\n                  description: A valid [schema](https://www.mongodb.com/docs/realm/schemas) for the collection.\n                metadata:\n                  \"$ref\": \"#/components/schemas/SchemaMetadata\"\n      responses:\n        \"200\":\n          description: \"Ok\"\n          content:\n            application/json:\n              schema:\n                properties:\n                  _id:\n                    type: string\n                  metadata:\n                    \"$ref\": \"#/components/schemas/SchemaMetadata\"\n  \"/groups/{groupId}/apps/{appId}/schemas/{schemaId}\":\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n      - \"$ref\": \"#/components/parameters/SchemaId\"\n    get:\n      tags:\n        - schemas\n      operationId: adminGetSchema\n      summary: Get a schema\n      description: Get a specific [schema](https://www.mongodb.com/docs/realm/schemas) by its `_id` value.\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  _id:\n                    type: string\n                  schema:\n                    type: object\n    put:\n      tags:\n        - schemas\n      operationId: adminUpdateSchema\n      summary: Update a schema\n      description: Replace an existing [schema](https://www.mongodb.com/docs/realm/schemas) with a new one.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - schema\n              properties:\n                _id:\n                  type: string\n                schema:\n                  type: object\n                  description: A valid [schema](https://www.mongodb.com/docs/realm/schemas) for the collection.\n                relationships:\n                  type: object\n                  description: Relationships to foreign collections. Each field name is a property in the schema. The corresponding value is a [relationship](https://www.mongodb.com/docs/realm/schemas/relationships/) definition for that field.\n                  additionalProperties:\n                    \"$ref\": \"#/components/schemas/Relationship\"\n                metadata:\n                  \"$ref\": \"#/components/schemas/SchemaMetadata\"\n      responses:\n        \"204\":\n          description: No Content\n    delete:\n      tags:\n        - schemas\n      operationId: adminDeleteSchema\n      summary: Delete a schema\n      description: Delete a specific [schema](https://www.mongodb.com/docs/realm/schemas) by its `_id` value.\n      responses:\n        \"204\":\n          description: No Content\n\n  \"/groups/{groupId}/apps/{appId}/endpoints\":\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n\n    get:\n      tags:\n        - endpoints\n      operationId: adminGetAllEndpoints\n      summary: Get all endpoints\n      description: Get all [endpoint](https://www.mongodb.com/docs/realm/endpoints/) configurations.\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/Endpoint\"\n\n    post:\n      tags:\n        - endpoints\n      operationId: adminCreateEndpoint\n      summary: Create an endpoint\n      description: Create a new [endpoint](https://www.mongodb.com/docs/realm/endpoints/).\n      requestBody:\n        description: A valid [configuration object](https://www.mongodb.com/docs/realm/manage-apps/configure/config/http_endpoints/) for the new endpoint.\n        required: true\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/Endpoint\"\n      responses:\n        \"201\":\n          description: Created\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Endpoint\"\n\n  \"/groups/{groupId}/apps/{appId}/endpoints/{endpointId}\":\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n      - \"$ref\": \"#/components/parameters/EndpointId\"\n\n    get:\n      tags:\n        - endpoints\n      operationId: adminGetEndpoint\n      summary: Get an endpoint\n      description: Get a specific [endpoint](https://www.mongodb.com/docs/realm/endpoints/)'s configuration.\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Endpoint\"\n\n    put:\n      tags:\n        - endpoints\n      operationId: adminModifyEndpoint\n      summary: Modify an endpoint\n      description: Modify an existing [endpoint](https://www.mongodb.com/docs/realm/endpoints/) configuration.\n      requestBody:\n        description: A valid, updated [configuration object](https://www.mongodb.com/docs/realm/manage-apps/configure/config/http_endpoints/) for the endpoint.\n        required: true\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/Endpoint\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Endpoint\"\n\n    delete:\n      tags:\n        - endpoints\n      operationId: adminDeleteEndpoint\n      summary: Delete an endpoint\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties: {}\n\n  \"/groups/{groupId}/apps/{appId}/data_api/config\":\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n    get:\n      tags:\n        - data-api\n      operationId: adminGetDataApiConfig\n      summary: Get the Data API Configuration\n      description: Get your app's [Data API](https://www.mongodb.com/docs/atlas/app-services/data-api/generated-endpoints/) configuration.\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/DataApiConfig\"\n    post:\n      tags:\n        - data-api\n      operationId: adminCreateDataApiConfig\n      summary: Enable the Data API\n      description: Create your app's [Data API](https://www.mongodb.com/docs/atlas/app-services/data-api/generated-endpoints/) configuration.\n      requestBody:\n        description: A valid [configuration object](https://www.mongodb.com/docs/realm/manage-apps/configure/config/http_endpoints#std-label-appconfig-data-api-endpoints) for the endpoint.\n        required: true\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/DataApiConfig\"\n      responses:\n        \"201\":\n          description: Created\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/DataApiConfig\"\n    patch:\n      tags:\n        - data-api\n      operationId: adminModifyDataApiConfig\n      summary: Modify the Data API\n      description: Update your app's [Data API](https://www.mongodb.com/docs/atlas/app-services/data-api/generated-endpoints/) configuration.\n      requestBody:\n        description: A valid [configuration object](https://www.mongodb.com/docs/realm/manage-apps/configure/config/http_endpoints#std-label-appconfig-data-api-endpoints) for the endpoint.\n        required: true\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/DataApiConfig\"\n      responses:\n        \"204\":\n          description: No content\n\n  \"/groups/{groupId}/apps/{appId}/data_api/versions\":\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n    get:\n      tags:\n        - data-api\n      operationId: adminGetDataApiVersions\n      summary: List Data API versions\n      description: List all possible Data API versions.\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/DataApiVersion\"\n\n  /groups/{groupId}/apps/{appId}/graphql:\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n    post:\n      tags:\n        - graphql\n      operationId: adminRunGraphQLOperation\n      summary: Run a query or mutation\n      description: |-\n        Run a query or mutation as a system user that bypasses\n        authentication and data access rules. You can access metadata\n        about your API, including its schema, with an\n        [introspection](https://graphql.org/learn/introspection/) query.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required: [\"query\"]\n              properties:\n                query:\n                  type: string\n                  description: |-\n                    A stringified `.graphql` file that contains one or\n                    more valid GraphQL operations for your API. If more\n                    than one operation is defined, you must specify\n                    which operation to run in `operationName`.\n                  example: \"query AllTasks { tasks(query: { status: $status }) { _id owner } }\"\n                variables:\n                  type: string\n                  description: |-\n                    A stringified JSON object where each field name maps\n                    a value to a variable in the specified operation.\n                  example: '{ \"status\": \"complete\" }'\n                operationName:\n                  type: string\n                  description: |-\n                    The name of the GraphQL operation specified in\n                    `query` to run.\n                  example: AllTasks\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                description: The result of the specified operation.\n                required: [\"data\"]\n                properties:\n                  data:\n                    type: [object, \"null\"]\n                    description: The result of a successful operation. If `null`, the operation had errors.\n                  errors:\n                    type: array\n                    description: A list of errors encountered while running an operation.\n                    minItems: 1\n                    items:\n                      type: object\n                      description: An error encountered while running an operation.\n                      required: [\"message\", \"locations\"]\n                      properties:\n                        message:\n                          type: string\n                          description: A message that describes the error.\n                        locations:\n                          type: array\n                          description: A list of one or more locations in the operation that caused the error.\n                          items:\n                            type: object\n                            required: [\"line\", \"column\"]\n                            minItems: 1\n                            description: The operation line and column numbers that caused an error.\n                            properties:\n                              line:\n                                type: integer\n                              column:\n                                type: integer\n\n  /groups/{groupId}/apps/{appId}/graphql/custom_resolvers:\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n    get:\n      tags:\n        - graphql\n      operationId: adminGetAllCustomResolvers\n      summary: Get all custom resolvers\n      description: Get all [custom resolver](https://www.mongodb.com/docs/realm/graphql/custom-resolvers/) configurations from your app's GraphQL API.\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/CustomResolver\"\n    post:\n      tags:\n        - graphql\n      operationId: adminCreateCustomResolver\n      summary: Create a custom resolver\n      description: Create a new [custom resolver](https://www.mongodb.com/docs/realm/graphql/custom-resolvers/).\n      requestBody:\n        description: A valid [custom resolver configuration](https://www.mongodb.com/docs/realm/manage-apps/configure/config/graphql#std-label-appconfig-custom-resolver) object.\n        required: true\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/CustomResolver\"\n      responses:\n        \"201\":\n          description: Created\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/CustomResolver\"\n  /groups/{groupId}/apps/{appId}/graphql/custom_resolvers/{customResolverId}:\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n      - \"$ref\": \"#/components/parameters/CustomResolverId\"\n    get:\n      tags:\n        - graphql\n      operationId: adminGetCustomResolver\n      summary: Get a custom resolver\n      description: Get a specific [custom resolver](https://www.mongodb.com/docs/realm/graphql/custom-resolvers/) configuration.\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/CustomResolver\"\n    put:\n      tags:\n        - graphql\n      operationId: adminModifyCustomResolver\n      summary: Modify a custom resolver\n      description: Modify an existing [custom resolver](https://www.mongodb.com/docs/realm/graphql/custom-resolvers/) configuration.\n      requestBody:\n        description: A valid, updated [custom resolver configuration](https://www.mongodb.com/docs/realm/manage-apps/configure/config/graphql#std-label-appconfig-custom-resolver) object.\n        required: true\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/CustomResolver\"\n      responses:\n        \"204\":\n          description: Updated\n    delete:\n      tags:\n        - graphql\n      operationId: adminDeleteCustomResolver\n      summary: Delete a custom resolver\n      description: Delete an existing [custom resolver](https://www.mongodb.com/docs/realm/graphql/custom-resolvers/) configuration.\n      responses:\n        \"204\":\n          description: Deleted\n\n  /groups/{groupId}/apps/{appId}/validation_settings/graphql:\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n    get:\n      tags:\n        - graphql\n      operationId: adminGetGraphQLValidationSettings\n      summary: Get validation settings\n      description: Get the current validation level and action for reads and writes.\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/GraphQLValidationSettings\"\n    put:\n      tags:\n        - graphql\n      operationId: adminSetGraphQLValidationSettings\n      summary: Modify validation settings\n      description: Set the validation level and action for reads and writes.\n      requestBody:\n        description: The updated validation levels and actions.\n        required: true\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/GraphQLValidationSettings\"\n      responses:\n        \"204\":\n          description: Updated\n  /groups/{groupId}/apps/{appId}/validation_settings/null_type_schema_validation:\n    parameters:\n      - \"$ref\": \"#/components/parameters/GroupId\"\n      - \"$ref\": \"#/components/parameters/AppId\"\n    get:\n      tags:\n        - schemas\n      operationId: adminGetNullTypeSchemaValidationSetting\n      summary: Get Null Type Schema Validation Setting\n      description: Check if [null type schema validation](https://www.mongodb.com/docs/atlas/app-services/schemas/enforce-a-schema/#validate-null-types) is enabled.\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/NullTypeSchemaValidationSetting\"\n    put:\n      tags:\n        - schemas\n      operationId: adminSetNullTypeSchemaValidationSetting\n      summary: Set Null Type Schema Validation Setting\n      description: Enable or disable [null type schema validation](https://www.mongodb.com/docs/atlas/app-services/schemas/enforce-a-schema/#validate-null-types).\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/NullTypeSchemaValidationSetting\"\n      responses:\n        \"204\":\n          description: Updated\n\ncomponents:\n  parameters:\n    AssetResourcePath:\n      name: path\n      in: query\n      description: The resource path of a hosted asset.\n      required: true\n      schema:\n        type: string\n    AssetResourcePathPrefix:\n      name: prefix\n      in: query\n      description: |-\n        Return only those assets where the resource path begins with the\n        specified prefix.\n      required: false\n      schema:\n        type: string\n    GroupId:\n      name: groupId\n      description: |-\n        An Atlas [Project/Group\n        ID](https://docs.atlas.mongodb.com/tutorial/manage-projects/).\n      in: path\n      required: true\n      schema:\n        type: string\n    AppId:\n      name: appId\n      description: |-\n        The ObjectID of your application.\n        [The App Services API Project and Application IDs section](#section/Project-and-Application-IDs) demonstrates how to find this\n        value.\n      in: path\n      required: true\n      schema:\n        type: string\n    DeploymentId:\n      name: deploymentId\n      description: |-\n        The `_id` value of an application deployment.\n      in: path\n      required: true\n      schema:\n        type: string\n    EnvironmentValueId:\n      name: environmentValueId\n      description: |-\n        The `_id` value of an environment value.\n      in: path\n      required: true\n      schema:\n        type: string\n    ForwarderId:\n      name: \"forwarderId\"\n      description: The _id ObjectID of a log forwarder.\n      in: \"path\"\n      required: true\n      schema:\n        type: string\n    UsersAfter:\n      name: after\n      required: false\n      description: The `id` of the last user returned by a previous paginated request.\n      in: query\n      schema:\n        type: string\n    UsersSort:\n      name: sort\n      required: false\n      description: |-\n        The field name to sort to sort results by. The only valid value is the\n        default: `_id`.\n      in: query\n      schema:\n        type: string\n    UsersDesc:\n      name: desc\n      required: false\n      description: |-\n        If `true`, returns sorted results in descending order. If not specified\n        or set to `false`, results return in ascending order.\n      in: query\n      schema:\n        type: boolean\n    FunctionId:\n      name: functionId\n      description: The unique `_id` value of a function.\n      in: path\n      required: true\n      schema:\n        type: string\n    DatasourceId:\n      name: datasourceId\n      description: The unique `_id` value of a MongoDB data source.\n      in: path\n      required: true\n      schema:\n        type: string\n    EventSubscriptionId:\n      name: eventSubscriptionId\n      description: The unique `_id` value of an event subscription.\n      in: path\n      required: true\n      schema:\n        type: string\n    ServiceId:\n      name: serviceId\n      description: The unique `_id` value of a service.\n      in: path\n      required: true\n      schema:\n        type: string\n    SecretId:\n      name: secretId\n      description: The unique `_id` value of a secret.\n      in: path\n      required: true\n      schema:\n        type: string\n    CommandName:\n      name: commandName\n      description: Command name\n      in: path\n      required: true\n      schema:\n        type: string\n    ValueId:\n      name: valueId\n      description: The unique `_id` value of a value.\n      in: path\n      required: true\n      schema:\n        type: string\n    DraftId:\n      name: draftId\n      description: The unique `_id` value of a draft.\n      in: path\n      required: true\n      schema:\n        type: string\n    RuleId:\n      name: ruleId\n      description: The unique `_id` value of a rule.\n      in: path\n      required: true\n      schema:\n        type: string\n    IncomingWebhookId:\n      name: incomingWebhookId\n      description: The unique `_id` value of an incoming webhook\n      in: path\n      required: true\n      schema:\n        type: string\n    Email:\n      name: email\n      description: Email address\n      in: path\n      required: true\n      schema:\n        type: string\n    MessageId:\n      name: messageId\n      description: Message ID\n      in: path\n      required: true\n      schema:\n        type: string\n    UserId:\n      name: userId\n      description: User Account ID\n      in: path\n      required: true\n      schema:\n        type: string\n    ProviderId:\n      name: providerId\n      description: The unique `_id` value of an authentication provider\n      in: path\n      required: true\n      schema:\n        type: string\n    ApiKeyId:\n      name: apiKeyId\n      description: The unique `_id` value of an API key\n      in: path\n      required: true\n      schema:\n        type: string\n    TriggerId:\n      name: triggerId\n      description: The unique `_id` value of a trigger.\n      in: path\n      required: true\n      schema:\n        type: string\n    SchemaId:\n      name: schemaId\n      description: The unique `_id` value of a schema.\n      in: path\n      required: true\n      schema:\n        type: string\n    EndpointId:\n      name: endpointId\n      description: The unique `_id` value of an endpoint\n      in: path\n      required: true\n      schema:\n        type: string\n    CustomResolverId:\n      name: customResolverId\n      description: The unique `_id` value of a custom resolver.\n      in: path\n      required: true\n      schema:\n        type: string\n  schemas:\n    ApiKey:\n      properties:\n        _id:\n          type: string\n        key:\n          type: string\n        name:\n          type: string\n        disabled:\n          type: string\n    ApiKeyResponse:\n      properties:\n        _id:\n          type: string\n        name:\n          type: string\n        disabled:\n          type: string\n    DeploymentLocation:\n      type: string\n      description: |-\n        An identifier of the location where an app server is physically\n        deployed to, regardless of the cloud provider that hosts the\n        app.\n      enum:\n        - US-VA\n        - US-OR\n        - DE-FF\n        - IE\n        - AU\n        - IN-MB\n        - SG\n        - BR-SP\n    App:\n      type: object\n      properties:\n        name:\n          type: string\n          description: |-\n            The name of the application. Must begin with a letter and\n            may only contain ASCII letters, numbers, underscores, and\n            hyphens.\n          example: \"MyApp\"\n        provider_region:\n          description: |-\n            The short identifier of a cloud provider-specific deployment region.\n            Some regions are available for global deployment while others are\n            only available for local apps. See [Cloud Deployment\n            Regions](https://www.mongodb.com/docs/atlas/app-services/manage-apps/deploy/deployment-models-and-regions/#cloud-deployment-regions).\n          $ref: \"#/components/schemas/CloudProviderRegionId\"\n        location:\n          $ref: \"#/components/schemas/DeploymentLocation\"\n          description: |-\n            The application's physical deployment location. This should\n            agree with the more specific `provider_region` value. For\n            example, an App with a `provider_region` of `aws-us-west-2`\n            maps to a `location` of `US-OR`.\n        deployment_model:\n          $ref: \"#/components/schemas/DeploymentModel\"\n        environment:\n          $ref: \"#/components/schemas/AppEnvironment\"\n    AppConstructor:\n      description: An object that describes a new app to create\n      allOf:\n        - $ref: \"#/components/schemas/App\"\n        - type: object\n          properties:\n            template_id:\n              type: string\n              description: |-\n                The id of an [App Services template\n                app](https://www.mongodb.com/docs/realm/manage-apps/create/template-apps#std-label-template-apps)\n                to use as a base for the new app.\n            data_source:\n              \"$ref\": \"#/components/schemas/DataSource\"\n    AppInstance:\n      description: A specific, existing application.\n      allOf:\n        - $ref: \"#/components/schemas/App\"\n        - type: object\n          properties:\n            _id:\n              type: string\n              description: The application's unique internal ID.\n              example: \"633209ffd3bd3478005d1bac\"\n            client_app_id:\n              type: string\n              description: The application's public App ID.\n              example: \"myapp-abcde\"\n            domain_id:\n              type: string\n              description: The application's associated domain ID.\n              example: \"63320a2b5f9de9a6e0a213e8\"\n            group_id:\n              type: string\n              description: |-\n                The application's [Atlas Project/Group ID](https://docs.atlas.mongodb.com/tutorial/manage-projects/).\n              example: \"5b2ec991973129243223a114\"\n            last_used:\n              type: integer\n              description: The time this app was last used in [UNIX time](https://en.wikipedia.org/wiki/Unix_time) (i.e. the number of seconds since Jan 1, 1970).\n              example: 1664224746\n            last_modified:\n              type: integer\n              description: The time this app was last modified in [UNIX time](https://en.wikipedia.org/wiki/Unix_time) (i.e. the number of seconds since Jan 1, 1970).\n              example: 1656440824\n            product:\n              type: string\n              description: The product this app is for.\n              enum:\n                - standard\n                - atlas\n                - data-api\n    AppEnvironment:\n      type: string\n      description: The application's environment. An empty string indicates that the app does not have a specified environment.\n      example: \"production\"\n      enum:\n        - \"\"\n        - \"development\"\n        - \"testing\"\n        - \"qa\"\n        - \"production\"\n    DeploymentModel:\n      type: string\n      description: An application [deployment model](https://www.mongodb.com/docs/atlas/app-services/manage-apps/deploy/deployment-models-and-regions/#deployment-models).\n      enum:\n        - \"GLOBAL\"\n        - \"LOCAL\"\n    CloudProviderRegionId:\n      oneOf:\n        - $ref: \"#/components/schemas/AwsDeploymentRegion\"\n        - $ref: \"#/components/schemas/AzureDeploymentRegion\"\n        - $ref: \"#/components/schemas/GcpDeploymentRegion\"\n    AwsDeploymentRegion:\n      type: string\n      enum:\n        - \"aws-us-east-1\"\n        - \"aws-us-west-2\"\n        - \"aws-us-east-2\"\n        - \"aws-eu-central-1\"\n        - \"aws-eu-west-1\"\n        - \"aws-eu-west-2\"\n        - \"aws-ap-southeast-1\"\n        - \"aws-ap-southeast-2\"\n        - \"aws-ap-south-1\"\n        - \"aws-sa-east-1\"\n    AzureDeploymentRegion:\n      type: string\n      enum:\n        - \"azure-eastus2\"\n        - \"azure-westus\"\n        - \"azure-westeurope\"\n        - \"azure-eastasia\"\n        - \"azure-southeastasia\"\n    GcpDeploymentRegion:\n      type: string\n      enum:\n        - \"gcp-us-central1\"\n        - \"gcp-us-east4\"\n        - \"gcp-us-west1\"\n        - \"gcp-europe-west1\"\n        - \"gcp-asia-south1\"\n    CloudProviderRegion:\n      type: object\n      properties:\n        id:\n          $ref: \"#/components/schemas/CloudProviderRegionId\"\n          description: |-\n            The short identifier of a cloud provider-specific deployment region.\n            Some regions are available for global deployment while others are\n            only available for local apps. See [Cloud Deployment\n            Regions](https://www.mongodb.com/docs/atlas/app-services/manage-apps/deploy/deployment-models-and-regions/#cloud-deployment-regions).\n          example: \"aws-us-east-1\"\n        name:\n          type: string\n          description: A descriptive name for the region.\n          example: \"Virginia (us-east-1)\"\n        cloud_provider:\n          type: string\n          description: The cloud provider that hosts the region.\n          example: \"aws\"\n        country:\n          type: string\n          description: The country where the region is physically hosted.\n          example: \"usa\"\n        deployment_models:\n          type: array\n          description: |-\n            The [deployment\n            models](https://www.mongodb.com/docs/atlas/app-services/manage-apps/deploy/deployment-models-and-regions/#deployment-models)\n            that this region supports.\n          items:\n            $ref: \"#/components/schemas/DeploymentModel\"\n          example: [\"GLOBAL\", \"LOCAL\"]\n    BasicError:\n      type: object\n      properties:\n        error:\n          type: string\n    BuildInfo:\n      type: object\n      properties:\n        version:\n          type: string\n          description: |-\n            Human-readable version information about the mongod instance. This\n            string will take the format `\u003cmajor\u003e.\u003cminor\u003e.\u003cpatch\u003e`.\n        gitVersion:\n          type: string\n          description: |-\n            The commit identifier that identifies the state of the code use to build\n            the mongod.\n        versionArray:\n          type: array\n          description: |-\n            An array that conveys version information about the mongod instance. See\n            version for a more readable version of this string.\n          items:\n            type: integer\n        javascriptEngine:\n          type: string\n          description: |-\n            A string that reports the JavaScript engine used in the mongod instance.\n            By default, this is `mozjs` after version `3.2`, and previously `V8`.\n        bits:\n          type: string\n          description: |-\n            A number that reflects the target processor architecture of the mongod\n            binary.\n        debug:\n          type: boolean\n          description: |-\n            A boolean that reflects whether or not the `mongod` instance was built\n            with debugging options.\n        maxBsonObjectSize:\n          type: integer\n          description: |-\n            A number that reports the [Maximum BSON Document\n            Size](https://www.mongodb.com/docs/manual/reference/limits#std-label-limit-bson-document-size)\n    DependenciesSummary:\n      type: object\n      properties:\n        _id:\n          type: string\n          description: The dependency collection's unique internal ID.\n        location:\n          type: string\n          description: The application's deployment region.\n        user_id:\n          type: string\n          description: |-\n            The unique `_id` value of the MongoDB Cloud user that uploaded the\n            dependency collection.\n        last_modified:\n          type: integer\n          description: |-\n            The time at which the dependencies were uploaded in [Unix\n            time](https://en.wikipedia.org/wiki/Unix_time) (number of seconds since\n            January 1, 1970 at 00:00 UTC).\n        dependencies_list:\n          type: array\n          description: |-\n            An array of documents that each describe a dependency uploaded to the\n            application.\n          items:\n            \"$ref\": \"#/components/schemas/Dependency\"\n    Dependency:\n      type: object\n      properties:\n        name:\n          type: string\n          description: The name of the uploaded dependency.\n        version:\n          type: string\n          description: The version of the uploaded dependency.\n    DeploymentDraft:\n      type: object\n      properties:\n        _id:\n          type: string\n          description: The unique ID of the draft.\n        user_id:\n          type: string\n          description:\n            The unique `_id` value of the MongoDB Cloud user that created\n            the draft.\n        app:\n          \"$ref\": \"#/components/schemas/AppInstance\"\n    Deployment:\n      type: object\n      properties:\n        _id:\n          type: string\n          description: The unique ID of the deployment.\n        name:\n          type: string\n          description: |-\n            The name of the deployment. By default, this is the same\n            value as ``_id``.\n        app_id:\n          type: string\n          description: The unique `_id` value of the Atlas App Services App.\n        draft_id:\n          type: string\n          description: |-\n            The unique `_id` value of the deployment draft associated with the\n            deployment, if applicable.\n        user_id:\n          type: string\n          description:\n            The unique `_id` value of the MongoDB Cloud user that deployed\n            the draft.\n        deployed_at:\n          type: integer\n          description: |-\n            The time at which the deployment was made. Represented as the number of\n            seconds since January 1, 1970.\n        origin:\n          type: string\n          description: The deployment method used to create the deployment.\n        commit:\n          type: string\n          description: The commit hash of the deployment (Automatic GitHub Deployment)\n        status:\n          type: string\n          description: |-\n            A message that indicates whether or not the deployment was\n            successful.\n        status_error_message:\n          type: string\n          description: |-\n            The error message of the error that caused the deployment to fail, if\n            applicable.\n        diff_url:\n          type: string\n          description: |-\n            A link to the diff of changes in the deployment\n        remote_location:\n          $ref: \"#/components/schemas/DeploymentLocation\"\n    DeploymentConfig:\n      type: object\n      description: A configuration file that controls your app's deployment behavior.\n      required:\n        - ui_drafts_disabled\n        - automatic_deployment\n      properties:\n        ui_drafts_disabled:\n          type: boolean\n          description: |-\n            If `true`, every change made in the Admin UI deploys\n            automatically on save. If `false`, changes are grouped into\n            a deployment draft that you deploy separately.\n        automatic_deployment:\n          type: object\n          description: Configuration for automatic deployment methods\n          properties:\n            enabled:\n              type: boolean\n              description: If `true`, the app automatically deploys using the method defined for `provider`.\n            provider:\n              type: string\n              description: The type of automatic deployment.\n              enum:\n                - \"github\"\n            installation_ids:\n              type: array\n              description: |-\n                The unique ID values of automatic deployment provider\n                installations. For example, the ID of a GitHub app\n                installation.\n              items:\n                type: string\n        last_modified:\n          type: number\n          description: The time this configuration was last modified represented by the number of seconds since the UNIX epoch.\n    Diff:\n      type: object\n      properties:\n        diffs:\n          type: array\n          description: |-\n            A list where each item is the line-by-line diff for a specific\n            configuration file.\n          items:\n            type: string\n        hosting_files_diff:\n          type: object\n          description: |-\n            The filenames of hosted files that have been added, removed, or\n            modified.\n          properties:\n            added:\n              type: array\n              items:\n                type: string\n                description: |-\n                  A list where each element is the name of a file that was added in the\n                  draft.\n            deleted:\n              type: array\n              items:\n                type: string\n                description: |-\n                  A list where each element is the name of a file that was deleted in the\n                  draft.\n            modified:\n              type: array\n              items:\n                type: string\n                description: |-\n                  A list where each element is the name of a file that was changed in the\n                  draft.\n    Endpoint:\n      type: object\n      required:\n        - function_id\n      properties:\n        route:\n          type: string\n        http_method:\n          type: string\n          enum:\n            - \"GET\"\n            - \"POST\"\n            - \"PUT\"\n            - \"PATCH\"\n            - \"DELETE\"\n            - \"*\"\n        function_id:\n          type: string\n        function_name:\n          type: string\n        validation_method:\n          type: string\n          enum:\n            - \"NO_VALIDATION\"\n            - \"SECRET_AS_QUERY_PARAM\"\n            - \"VERIFY_PAYLOAD\"\n        secret_id:\n          type: string\n          description: |-\n            If `validation_method` is set to `\"SECRET_AS_QUERY_PARAM\"`\n            or `\"VERIFY_PAYLOAD\"`, this is the `_id` of the\n            [Secret](https://www.mongodb.com/docs/atlas/app-services/values-and-secrets/)\n            that authorizes requests.\n        return_type:\n          $ref: \"#/components/schemas/EndpointDataFormat\"\n          description: The default [data format](https://mongodb.com/docs/atlas/app-services/data-api/#data-formats) returned by custom HTTPS endpoints.\n        respond_result:\n          type: boolean\n        fetch_custom_user_data:\n          type: boolean\n        create_user_on_auth:\n          type: boolean\n        disabled:\n          type: boolean\n    EndpointDataFormat:\n      type: string\n      description: A [data format](https://mongodb.com/docs/atlas/app-services/data-api/#data-formats) supported by the Data API \u0026 custom endpoints.\n      enum:\n        - JSON\n        - EJSON\n    EnvironmentValueDescription:\n      properties:\n        _id:\n          type: string\n          description: The environment value's internal ID\n        name:\n          type: string\n          description: The environment value name\n        last_modified:\n          type: number\n          description: The time this configuration was last modified represented by the number of seconds since the UNIX epoch.\n    EnvironmentValue:\n      allOf:\n        - $ref: \"#/components/schemas/EnvironmentValueDescription\"\n        - properties:\n            values:\n              type: object\n              description: |-\n                An object that maps environment names to values. The\n                environment value resolves to the current active\n                environment's mapped value.\n\n                If no value is mapped to the current active environment,\n                the environment value resolves to `undefined`.\n              properties:\n                none:\n                  $ref: \"#/components/schemas/AnyValue\"\n                development:\n                  $ref: \"#/components/schemas/AnyValue\"\n                testing:\n                  $ref: \"#/components/schemas/AnyValue\"\n                qa:\n                  $ref: \"#/components/schemas/AnyValue\"\n                production:\n                  $ref: \"#/components/schemas/AnyValue\"\n    AnyValue:\n      description: Any valid JSON value\n    DataApiVersion:\n      type: string\n      description: A supported version of the Data API.\n      enum:\n        - v1\n    DataApiConfig:\n      type: object\n      properties:\n        disabled:\n          type: boolean\n        versions:\n          type: array\n          items:\n            $ref: \"#/components/schemas/DataApiVersion\"\n        return_type:\n          $ref: \"#/components/schemas/EndpointDataFormat\"\n          description: The default [data format](https://mongodb.com/docs/atlas/app-services/data-api/#data-formats) returned by Data API endpoints.\n        create_user_on_auth:\n          type: boolean\n        run_as_user_id:\n          type: string\n          description: An application user's account ID. If defined, endpoints will always run as the specified user.\n        run_as_user_id_script_source:\n          type: string\n          description: |-\n            Stringified source code for a function that returns an\n            application user's account ID. If defined, endpoints execute\n            the function on every request and run as the user with the\n            ID returned from the function.\n        validation_method:\n          type: string\n          enum:\n            - \"NO_VALIDATION\"\n            - \"SECRET_AS_QUERY_PARAM\"\n            - \"VERIFY_PAYLOAD\"\n        secret_name:\n          type: string\n          description: |-\n            If `validation_method` is set to `\"SECRET_AS_QUERY_PARAM\"`\n            or `\"VERIFY_PAYLOAD\"`, this is the `name` of the\n            [Secret](https://www.mongodb.com/docs/atlas/app-services/values-and-secrets/)\n            that authorizes requests.\n    Error:\n      type: object\n      properties:\n        error:\n          type: string\n          description: A message that describes the error.\n        error_code:\n          type: string\n          description: The error type.\n    AtlasCluster:\n      type: object\n      properties:\n        name:\n          type: string\n          example: mongodb-atlas\n          enum:\n            - mongodb-atlas\n        type:\n          type: string\n          example: mongodb-atlas\n          enum:\n            - mongodb-atlas\n        config:\n          type: object\n          required:\n            - clusterName\n          properties:\n            clusterName:\n              type: string\n              example: Cluster0\n              description: |-\n                The service name used to refer to the data source within\n                this Atlas app. The name may be at most 64 characters\n                long and must only contain ASCII letters, numbers,\n                underscores, and hyphens.\n            readPreference:\n              type: string\n              enum:\n                - primary\n                - primaryPreferred\n                - secondary\n                - secondaryPreferred\n                - nearest\n              description: |-\n                The [read\n                preference](https://www.mongodb.com/docs/atlas/app-services/mongodb/read-preference/)\n                mode for read requests to the data source.\n            wireProtocolEnabled:\n              type: boolean\n              description: |-\n                If true, clients may [connect to the app over the\n                MongoDB Wire\n                Protocol](https://www.mongodb.com/docs/atlas/app-services/mongodb/wire-protocol/#connect-over-the-wire-protocol).\n    AtlasFederatedInstance:\n      type: object\n      properties:\n        name:\n          type: string\n          example: mongodb-datafederation\n          enum:\n            - mongodb-datafederation\n        type:\n          type: string\n          example: datalake\n          enum:\n            - datalake\n        config:\n          type: object\n          required:\n            - dataLakeName\n          properties:\n            dataLakeName:\n              type: string\n              description: |-\n                The service name used to refer to the Federated database\n                instance within this Atlas app. The name may be at most\n                64 characters long and must only contain ASCII letters,\n                numbers, underscores, and hyphens.\n    DataSource:\n      required:\n        - name\n        - type\n        - config\n      oneOf:\n        - $ref: \"#/components/schemas/AtlasCluster\"\n        - $ref: \"#/components/schemas/AtlasFederatedInstance\"\n    ThirdPartyService:\n      type: object\n      description: |-\n        **THIRD-PARTY SERVICES ARE DEPRECATED**\n\n        See [Third-Party Services](https://www.mongodb.com/docs/atlas/app-services/reference/services/) for more information.\n      properties:\n        _id:\n          type: string\n          description: A unique ID for the third-party service.\n        name:\n          type: string\n          description: The third-party service name.\n        type:\n          type: string\n          description: The type of third party service.\n          enum:\n            - aws\n            - twilio\n            - github\n            - gcm\n        version:\n          type: integer\n    CreateLogForwarderRequest:\n      $ref: \"#/components/schemas/LogForwarder\"\n    UpdateLogForwarderRequest:\n      $ref: \"#/components/schemas/LogForwarder\"\n    LogForwarder:\n      type: object\n      properties:\n        _id: { type: string }\n        name: { type: string }\n        disabled: { type: boolean }\n        log_types:\n          type: array\n          items:\n            $ref: \"#/components/schemas/LogType\"\n        log_statuses:\n          type: array\n          items:\n            $ref: \"#/components/schemas/LogStatus\"\n        policy:\n          $ref: \"#/components/schemas/LogForwardingPolicy\"\n        action:\n          $ref: \"#/components/schemas/LogForwardingAction\"\n    LogType:\n      type: string\n      enum:\n        - auth\n        - function\n        - graphql\n        - push\n        - schema\n        - service\n        - sync\n        - trigger\n    LogStatus:\n      type: string\n      enum:\n        - error\n        - success\n    LogForwardingPolicy:\n      type: object\n      properties:\n        type:\n          type: string\n          enum:\n            - single\n            - batch\n    LogForwardingAction: # We need oneOf to do this correctly.\n      type: object\n      properties:\n        type:\n          type: string\n          enum:\n            - collection\n            - function\n        name:\n          type: string\n        data_source:\n          type: string\n        database:\n          type: string\n        collection:\n          type: string\n    EventSubscription:\n      description: |-\n        A subscription to a change event stream.\n      oneOf:\n        - \"$ref\": \"#/components/schemas/AnyTrigger\"\n        - title: SyncTranslator\n          type: object\n          properties:\n            _id:\n              type: string\n            name:\n              type: string\n            type:\n              type: string\n              const: \"SYNCTRANSLATOR\"\n            function_id:\n              type: string\n            disabled:\n              type: boolean\n            config:\n              type: \"null\"\n            last_modified:\n              type: number\n          example:\n            {\n              \"_id\": \"636c189a93daaf89c4900a81\",\n              \"name\": \"SyncTranslator\",\n              \"type\": \"SYNCTRANSLATOR\",\n              \"function_id\": \"000000000000000000000000\",\n              \"disabled\": false,\n              \"config\": null,\n              \"last_modified\": 1668028570,\n            }\n    Expression:\n      description: A [rule expression](https://mongodb.com/docs/atlas/app-services/rules/expressions/).\n      oneOf:\n        - type: object\n        - type: boolean\n    DefaultRule:\n      type: object\n      description: A data access rule that define defines fallback user roles and query filters for collection's that don't have more specific permissions defined.\n      properties:\n        _id:\n          type: string\n          description: The default rule's unique ObjectId identifier.\n        roles:\n          type: array\n          description: An ordered list of default user roles.\n          items:\n            \"$ref\": \"#/components/schemas/Role\"\n        filters:\n          type: array\n          description: A list of default [query filters](https://www.mongodb.com/docs/atlas/app-services/manage-apps/configure/config/data_sources/#filters).\n          items:\n            \"$ref\": \"#/components/schemas/Filter\"\n    Rule:\n      type: object\n      description: A data access rule that defines user roles and query filters for a collection in a linked data source.\n      required:\n        - database\n        - collection\n      properties:\n        _id:\n          type: string\n          description: The rule's unique ObjectId identifier.\n        database:\n          type: string\n          description: The name of a database in the linked data source.\n        collection:\n          type: string\n          description: The name of a collection in the specified `database`.\n        roles:\n          type: array\n          description: A list of data access roles.\n          items:\n            $ref: \"#/components/schemas/Role\"\n        filters:\n          type: array\n          description: A list of filters for incoming operations.\n          items:\n            $ref: \"#/components/schemas/Filter\"\n    Role:\n      type: object\n      description: A data access role that assigns read and write permissions to a user for each document\n      properties:\n        _id:\n          type: string\n          description: The role's unique ObjectId identifier.\n        name:\n          type: string\n          description: The role's name.\n        apply_when:\n          description: A rule expression that evaluates to `true` when this role applies to a user for a specific document.\n          $ref: \"#/components/schemas/Expression\"\n        write:\n          description: A rule expression that evaluates to `true` if the role has permission to add, modify, or remove all fields in the document.\n          $ref: \"#/components/schemas/Expression\"\n        insert:\n          description: A rule expression that evaluates to `true` if the role has permission to insert a new document into the collection.\n          $ref: \"#/components/schemas/Expression\"\n        delete:\n          description: A rule expression that evaluates to `true` if the role has permission to delete a document from the collection.\n          $ref: \"#/components/schemas/Expression\"\n        search:\n          description: A rule expression that evaluates to `true` if the role has permission to search the collection using [Atlas Search](https://www.mongodb.com/docs/atlas/atlas-search/).\n          $ref: \"#/components/schemas/Expression\"\n        fields:\n          type: object\n          description: Field-level rules for any fields that are not explicitly configured in the role's `properties`.\n          $ref: \"#/components/schemas/NestableFieldLevelPermissions\"\n        additional_fields:\n          type: object\n          description: Field-level rules for any fields that are not explicitly configured in the role's `properties`.\n          $ref: \"#/components/schemas/FieldLevelPermissions\"\n    NestableFieldLevelPermissions:\n      description: An object that maps document field names to read and write permissions for the field and its children.\n      additionalProperties:\n        allOf:\n          - $ref: \"#/components/schemas/FieldLevelPermissions\"\n          - properties:\n              fields:\n                $ref: \"#/components/schemas/NestableFieldLevelPermissions\"\n    FieldLevelPermissions:\n      type: object\n      description: Read and write permissions for a field.\n      required:\n        - read\n        - write\n      properties:\n        read:\n          description: A rule expression that evaluates to `true` if the role can read the field's value.\n          $ref: \"#/components/schemas/Expression\"\n        write:\n          description: A rule expression that evaluates to `true` if the role can write the field's value.\n          $ref: \"#/components/schemas/Expression\"\n    Filter:\n      type: object\n      description: A filter that conditionally modifies incoming query operations before they run.\n      properties:\n        _id:\n          type: string\n          description: The filter's unique ObjectId identifier.\n        name:\n          type: string\n          description: The filter's name.\n        apply_when:\n          description: A rule expression that evaluates to `true` if the filter applies to an incoming query.\n          $ref: \"#/components/schemas/Expression\"\n        query:\n          description: A MongoDB query object that is merged into an incoming query before the operation runs.\n          $ref: \"#/components/schemas/Query\"\n        projection:\n          description: A MongoDB projection object that is merged into an incoming query before the operation runs.\n          $ref: \"#/components/schemas/Projection\"\n    Query:\n      type: object\n      description: A MongoDB query object.\n    Projection:\n      type: object\n      description: A MongoDB projection object.\n      additionalProperties:\n        type: number\n        enum: [0, 1]\n    ThirdPartyServiceRule:\n      type: object\n      description: \"[Deprecated] A rule for a third-party service.\"\n      properties:\n        name:\n          type: string\n        actions:\n          items:\n            type: string\n        when:\n          type: object\n      required:\n        - name\n        - when\n    IncomingWebhook:\n      properties:\n        name:\n          type: string\n        function_source:\n          type: string\n        respond_result:\n          type: boolean\n        options:\n          type: object\n          properties:\n            secret:\n              type: string\n            secretAsQueryParam:\n              type: boolean\n      required:\n        - name\n        - function_source\n        - respond_result\n\n    BaseAuthProvider:\n      required:\n        - name\n        - type\n      properties:\n        _id:\n          type: string\n          description: The authentication provider's unique ID.\n        name:\n          type: string\n          description: The name of the authentication provider. This value must be the same as the value of `type`.\n        type:\n          \"$ref\": \"#/components/schemas/ProviderType\"\n        disabled:\n          type: boolean\n          description: If `true`, the auth provider is disabled. Users cannot log in through the provider until it is enabled.\n\n    AuthProvider:\n      anyOf:\n        - $ref: \"#/components/schemas/AnonymousAuthProvider\"\n        - $ref: \"#/components/schemas/EmailPasswordAuthProvider\"\n        - $ref: \"#/components/schemas/ApiKeyAuthProvider\"\n        - $ref: \"#/components/schemas/CustomJwtAuthProvider\"\n        - $ref: \"#/components/schemas/CustomFunctionAuthProvider\"\n        - $ref: \"#/components/schemas/AppleAuthProvider\"\n        - $ref: \"#/components/schemas/GoogleAuthProvider\"\n        - $ref: \"#/components/schemas/FacebookAuthProvider\"\n\n    AnonymousAuthProvider:\n      allOf:\n        - $ref: \"#/components/schemas/BaseAuthProvider\"\n        - properties:\n            name:\n              const: anonymous\n              description: The name of the authentication provider. For Anonymous authentication, this value is always `anonymous`.\n            type:\n              const: anonymous\n              description: The name of the authentication provider. For Anonymous authentication, this value is always `anonymous`.\n\n    EmailConfirmationAutomatic:\n      type: object\n      properties:\n        autoConfirm:\n          const: true\n          description: If `true`, automatically confirm new user accounts without additional verification.\n\n    EmailConfirmationBuiltIn:\n      type: object\n      properties:\n        autoConfirm:\n          const: false\n          description: |-\n            If `true`, automatically confirm new user accounts without\n            additional verification. For built-in email account\n            confirmation, set this value to `false`.\n        emailConfirmationUrl:\n          type: string\n          description: |-\n            The URL included in the email sent to new users as part of\n            the built-in confirmation flow. The email also adds a unique\n            confirmation `token` and `tokenId` as query parameters.\n\n            This URL should handle user confirmation by passing the\n            confirmation token to a Realm SDK's `confirmUser` function\n            or to the Admin API [Confirm a Pending Email/Password\n            User](#tag/email/operation/adminConfirmPendingUser)\n            endpoint.\n        confirmEmailSubject:\n          type: string\n          description: |-\n            The subject line of the email sent to new users as\n            part of the built-in confirmation flow.\n\n    EmailConfirmationCustomFunction:\n      type: object\n      properties:\n        autoConfirm:\n          const: false\n          description: |-\n            If `true`, automatically confirm new user accounts without\n            additional verification. For custom function account\n            confirmation, set this value to `false`.\n        runConfirmationFunction:\n          type: boolean\n          description: |-\n            If `true`, new email/password user account registrations use\n            a custom function that you define to handle the confirmation\n            process.\n        confirmationFunctionName:\n          type: string\n          description: |-\n            The name of the custom function that handles the\n            confirmation process.\n\n    PasswordRefreshBuiltIn:\n      type: object\n      properties:\n        resetPasswordUrl:\n          type: string\n          description: |-\n            The URL included in the email sent to users as part\n            of the built-in password reset flow. The email also\n            adds a unique password reset `token` and `tokenId` as\n            query parameters.\n\n            This URL should handle user confirmation by passing\n            the password reset token to a Realm SDK's `resetPassword`\n            function.\n        resetPasswordSubject:\n          type: string\n          description: |-\n            The subject line of the email sent to users as\n            part of the built-in password reset flow.\n\n    PasswordRefreshCustomFunction:\n      type: object\n      properties:\n        runResetFunction:\n          type: boolean\n          const: true\n          description: |-\n            If `true`, use a custom function that you define to handle\n            the password reset process.\n        resetFunctionName:\n          type: string\n          description: |-\n            The name of the custom function that handles the password\n            reset process.\n\n    EmailPasswordAuthProvider:\n      allOf:\n        - $ref: \"#/components/schemas/BaseAuthProvider\"\n        - properties:\n            name:\n              const: local-userpass\n              description: The name of the authentication provider. For Email/Password authentication, this value is always `local-userpass`.\n            type:\n              const: local-userpass\n              description: The name of the authentication provider. For Email/Password authentication, this value is always `local-userpass`.\n            config:\n              oneOf:\n                - allOf:\n                    - title: ConfirmationAutomaticRefreshBuiltIn\n                    - $ref: \"#/components/schemas/EmailConfirmationAutomatic\"\n                    - $ref: \"#/components/schemas/PasswordRefreshBuiltIn\"\n                - allOf:\n                    - title: ConfirmationAutomaticRefreshCustom\n                    - $ref: \"#/components/schemas/EmailConfirmationAutomatic\"\n                    - $ref: \"#/components/schemas/PasswordRefreshCustomFunction\"\n                - allOf:\n                    - title: ConfirmationBuiltInRefreshBuiltIn\n                    - $ref: \"#/components/schemas/EmailConfirmationBuiltIn\"\n                    - $ref: \"#/components/schemas/PasswordRefreshBuiltIn\"\n                - allOf:\n                    - title: ConfirmationBuiltInRefreshCustom\n                    - $ref: \"#/components/schemas/EmailConfirmationBuiltIn\"\n                    - $ref: \"#/components/schemas/PasswordRefreshCustomFunction\"\n                - allOf:\n                    - title: ConfirmationCustomRefreshBuiltIn\n                    - $ref: \"#/components/schemas/EmailConfirmationCustomFunction\"\n                    - $ref: \"#/components/schemas/PasswordRefreshBuiltIn\"\n                - allOf:\n                    - title: ConfirmationCustomRefreshCustom\n                    - $ref: \"#/components/schemas/EmailConfirmationCustomFunction\"\n                    - $ref: \"#/components/schemas/PasswordRefreshCustomFunction\"\n\n    ApiKeyAuthProvider:\n      allOf:\n        - $ref: \"#/components/schemas/BaseAuthProvider\"\n        - properties:\n            name:\n              const: api-key\n              description: The name of the authentication provider. For API key authentication, this value is always `api-key`.\n            type:\n              const: api-key\n              description: The name of the authentication provider. For API key authentication, this value is always `api-key`.\n\n    CustomJwtAuthProvider:\n      allOf:\n        - $ref: \"#/components/schemas/BaseAuthProvider\"\n        - properties:\n            name:\n              const: custom-token\n              description: The name of the authentication provider. For Custom JWT authentication, this value is always `custom-token`.\n            type:\n              const: custom-token\n              description: The name of the authentication provider. For Custom JWT authentication, this value is always `custom-token`.\n            config:\n              type: object\n              title: CustomJwtAuthProviderConfig\n              description: A configuration object for the Custom JWT authentication provider.\n              properties:\n                audience:\n                  type: array\n                  description: |-\n                    Defines the expected values of the `aud` claim in the\n                    external JWT. By default, the Custom JWT provider\n                    expects `aud` to be your App ID.\n                  items:\n                    type: string\n                    description: |-\n                      A specific expected value of the `aud` claim in\n                      the external JWT.\n                requireAnyAudience:\n                  type: string\n                  default: false\n                  description: |-\n                    If `false`, the external JWT must include *all* of\n                    the values defined in `audience` in its `aud` claim.\n\n                    If `true`, a JWT is valid if *any* of the values\n                    defined in `audience` are in its `aud` claim.\n                signingAlgorithm:\n                  type: string\n                  description: |-\n                    The cryptographic method that the external system\n                    uses to sign the JWT. Custom JWT authentication supports\n                    JWTs signed using any of the following algorithms:\n\n                    - HS256\n                    - RS256\n                useJWKURI:\n                  type: boolean\n                  description: |-\n                    If `true`, the Custom JWT provider uses a signing\n                    algorithm and signing keys defined in a [JSON Web\n                    Key](https://www.rfc-editor.org/rfc/rfc7517) (JWK)\n                    or JSON Web Key Set (JWKS). The JWK(S) must be\n                    accessible at the URL specified in `jwkURI`.\n                jwkURI:\n                  type: string\n                  description: |-\n                    A URL that hosts a JWK or JWKS that describes the\n                    signing method and signing keys the Custom JWT provider\n                    should use. The JWK(S) may specify up to three signing\n                    keys and must use the RS256 algorithm.\n            secret_config:\n              type: object\n              title: CustomJwtAuthProviderSecretConfig\n              properties:\n                signingKeys:\n                  type: array\n                  items:\n                    type: string\n                    description: |-\n                      A list of the names of up to three\n                      [Secrets](https://www.mongodb.com/docs/atlas/app-services/values-and-secrets/)\n                      that each contain a signing key used by the\n                      external authentication system to sign JWTs. Each\n                      signing key Secret must be a string with length\n                      between 32 and 512 characters.\n            metadata_fields:\n              description: |-\n                Metadata fields are additional data that describe each\n                user. The value of each metadata field comes from some\n                field included in the JWT from the external\n                authentication system.\n\n                A user's metadata fields refresh whenever they log in.\n              type: array\n              items:\n                type: object\n                title: CustomJwtMetadataField\n                description: |-\n                  A specific metadata field from the external JWT to\n                  include the user's data. This maps an external JWT\n                  field name (`name`) to the field name in the user's\n                  data (`field_name`) that holds the value of that field.\n                properties:\n                  required:\n                    type: boolean\n                    description: If `true`, this value must always be present in the external JWT.\n                  name:\n                    type: string\n                    description: |-\n                      The name of the field in the external JWT that contains the data.\n\n                      To specify a field in an embedded object, use [dot notation](https://www.mongodb.com/docs/manual/core/document/#dot-notation).\n                  field_name:\n                    type: string\n                    description: |-\n                      The name of the field in User object that holds the value.\n\n    CustomFunctionAuthProvider:\n      allOf:\n        - $ref: \"#/components/schemas/BaseAuthProvider\"\n        - properties:\n            name:\n              const: custom-function\n              description: The name of the authentication provider. For Custom Function authentication, this value is always `custom-function`.\n            type:\n              const: custom-function\n              description: The name of the authentication provider. For Custom Function authentication, this value is always `custom-function`.\n            config:\n              type: object\n              title: CustomFunctionAuthProviderConfig\n              description: A configuration object for the Custom Function authentication provider.\n              properties:\n                authFunctionName:\n                  type: string\n                  description: |-\n                    The name of the [custom authentication\n                    function](https://www.mongodb.com/docs/atlas/app-services/authentication/custom-function/#the-authentication-function)\n                    that handles user logins.\n\n    AppleAuthProvider:\n      allOf:\n        - $ref: \"#/components/schemas/BaseAuthProvider\"\n        - title: AppleAuthProvider\n          properties:\n            name:\n              const: oauth2-apple\n              description: The name of the authentication provider. For Apple authentication, this value is always `oauth2-apple`.\n            type:\n              const: oauth2-apple\n              description: The name of the authentication provider. For Apple authentication, this value is always `oauth2-apple`.\n            config:\n              type: object\n              title: AppleAuthProviderConfig\n              description: A configuration object for the Apple authentication provider.\n              properties:\n                clientId:\n                  type: string\n                  description: |-\n                    Your Apple Services ID.\n\n                    To learn how to get this, see [Create a Services ID](https://www.mongodb.com/docs/atlas/app-services/authentication/apple/#create-a-services-id).\n            secret_config:\n              type: object\n              title: AppleAuthProviderSecretConfig\n              properties:\n                clientSecret:\n                  type: string\n                  description: |-\n                    The name of a\n                    [Secret](https://www.mongodb.com/docs/atlas/app-services/values-and-secrets/)\n                    that holds your client secret JWT.\n\n                    To learn how to create this, see [Create the Client Secret JWT](https://www.mongodb.com/docs/atlas/app-services/authentication/apple/#create-the-client-secret-jwt).\n            redirect_uris:\n              type: array\n              items:\n                type: string\n                description: A list of URIs that the OAuth flow should allow the user to redirect to.\n\n    GoogleAuthProvider:\n      allOf:\n        - $ref: \"#/components/schemas/BaseAuthProvider\"\n        - title: GoogleAuthProvider\n          properties:\n            name:\n              const: oauth2-google\n              description: The name of the authentication provider. For Google authentication, this value is always `oauth2-google`.\n            type:\n              const: oauth2-google\n              description: The name of the authentication provider. For Google authentication, this value is always `oauth2-google`.\n            config:\n              type: object\n              title: GoogleAuthProviderConfig\n              description: A configuration object for the Google authentication provider.\n              properties:\n                clientId:\n                  type: string\n                  description: |-\n                    An OAuth 2.0 Client ID for your GCP project.\n\n                    To learn how to create one, see [Set Up a Project in\n                    the Google API\n                    Console](https://www.mongodb.com/docs/atlas/app-services/authentication/google/#std-label-auth-gcp-project-setup).\n                openId:\n                  type: boolean\n                  description: |-\n                    An OAuth 2.0\n            secret_config:\n              type: object\n              title: GoogleAuthProviderSecretConfig\n              properties:\n                clientSecret:\n                  type: string\n                  description: |-\n                    The name of a\n                    [Secret](https://www.mongodb.com/docs/atlas/app-services/values-and-secrets/)\n                    that holds the OAuth 2.0 Client Secret for the Client ID\n                    specified in `config.clientId`.\n            redirect_uris:\n              type: array\n              items:\n                type: string\n                description: A list of URIs that the OAuth flow should allow the user to redirect to.\n            metadata_fields:\n              type: array\n              items:\n                description: |-\n                  Metadata fields are additional data that describe each\n                  user. The value of each metadata field comes from\n                  Google and is included in the authenticated JWT.\n\n                  A user's metadata fields refresh whenever they log in.\n                type: array\n                items:\n                  type: object\n                  description: |-\n                    A specific metadata field from OAuth 2.0 JWT to\n                    include the user's data. This maps a  JWT field name\n                    (`name`) to a field name of the same name in the\n                    user's data.\n                  properties:\n                    required:\n                      type: boolean\n                      description: If `true`, include this metadata value in the OAuth JWT and the user's data.\n                    name:\n                      type: string\n                      description: The name of a user metadata property accessible through OAuth, e.g. `email`.\n            domain_restrictions:\n              type: array\n              items:\n                type: string\n                description: |-\n                  A list of approved domain names for user accounts. If\n                  this is defined, a user must have an email address\n                  associated with their OAuth profile that has a domain\n                  included in this list.\n\n    FacebookAuthProvider:\n      allOf:\n        - $ref: \"#/components/schemas/BaseAuthProvider\"\n        - title: FacebookAuthProvider\n          properties:\n            name:\n              const: oauth2-facebook\n              description: The name of the authentication provider. For Facebook authentication, this value is always `oauth2-facebook`.\n            type:\n              const: oauth2-facebook\n              description: The name of the authentication provider. For Facebook authentication, this value is always `oauth2-facebook`.\n            config:\n              type: object\n              title: FacebookAuthProviderConfig\n              description: A configuration object for the Facebook authentication provider.\n              properties:\n                clientId:\n                  type: string\n                  description: |-\n                    The App ID of your Facebook app.\n            secret_config:\n              type: object\n              title: FacebookAuthProviderSecretConfig\n              properties:\n                clientSecret:\n                  type: string\n                  description: |-\n                    The name of a\n                    [Secret](https://www.mongodb.com/docs/atlas/app-services/values-and-secrets/)\n                    that holds your Facebook App Secret.\n            redirect_uris:\n              type: array\n              items:\n                type: string\n                description: A list of URIs that the OAuth flow should allow the user to redirect to.\n            metadata_fields:\n              type: array\n              items:\n                description: |-\n                  Metadata fields are additional data that describe each\n                  user. The value of each metadata field comes from\n                  Facebook and is included in the authenticated JWT.\n\n                  A user's metadata fields refresh whenever they log in.\n                type: array\n                items:\n                  type: object\n                  description: |-\n                    A specific metadata field from OAuth 2.0 JWT to\n                    include the user's data. This maps a  JWT field name\n                    (`name`) to a field name of the same name in the\n                    user's data.\n                  properties:\n                    required:\n                      type: boolean\n                      description: If `true`, include this metadata value in the OAuth JWT and the user's data.\n                    name:\n                      type: string\n                      description: The name of a user metadata property accessible through OAuth, e.g. `email`.\n            domain_restrictions:\n              type: array\n              items:\n                type: string\n                description: |-\n                  A list of approved domain names for user accounts. If\n                  this is defined, a user must have an email address\n                  associated with their OAuth profile that has a domain\n                  included in this list.\n\n    AdminUser:\n      properties:\n        user_id:\n          type: string\n        domain_id:\n          type: string\n        identities:\n          type: array\n          items:\n            \"$ref\": \"#/components/schemas/UserIdentity\"\n        data:\n          type: object\n          properties:\n            email:\n              type: string\n            name:\n              type: string\n        type:\n          type: string\n          enum:\n            - normal\n            - server\n            - system\n            - unknown\n        roles:\n          type: array\n          items:\n            type: object\n            properties:\n              role_name:\n                type: string\n              group_id:\n                type: string\n\n    NewFunction:\n      properties:\n        can_evaluate:\n          type: object\n          description: |-\n            A JSON expression that evaluates to `true` if the Function is allowed to\n            run in response to an incoming request.\n        name:\n          type: string\n          description: A unique name for the Function.\n        private:\n          type: boolean\n          description: |-\n            If `true`, the function is hidden from client applications. You can\n            still call a private function from JSON expressions and other functions,\n            including incoming webhooks and triggers.\n        source:\n          type: string\n          description: |-\n            The stringified source code for the function. The code must be valid\n            ES6.\n        run_as_system:\n          type: boolean\n          description: |-\n            If `true`, the function executes with full privileges, bypassing rules\n            on all services.\n      required:\n        - name\n        - private\n        - source\n        - run_as_system\n    Function:\n      properties:\n        _id:\n          type: string\n        can_evaluate:\n          type: object\n          description: |-\n            A JSON expression that evaluates to `true` if the Function is allowed to\n            run in response to an incoming request.\n        name:\n          type: string\n          description: A unique name for the Function.\n        private:\n          type: boolean\n          description: |-\n            If `true`, the function is hidden from client applications. You can\n            still call a private function from JSON expressions and other functions,\n            including incoming webhooks and triggers.\n        source:\n          type: string\n          description: |-\n            The stringified source code for the function. The code must be valid\n            ES6.\n    ValueSummary:\n      properties:\n        _id:\n          type: string\n        name:\n          type: string\n        private:\n          type: boolean\n    NewValue:\n      properties:\n        name:\n          type: string\n        private:\n          type: boolean\n        value: {}\n      required:\n        - name\n        - private\n        - value\n    Value:\n      properties:\n        _id:\n          type: string\n        name:\n          type: string\n        private:\n          type: boolean\n        value: {}\n    ProviderType:\n      type: string\n      enum:\n        - anon-user\n        - local-userpass\n        - api-key\n        - oauth2-apple\n        - oauth2-google\n        - oauth2-facebook\n        - custom-token\n        - custom-function\n    MessageState:\n      type: string\n      enum:\n        - sent\n        - draft\n    NewMessage:\n      properties:\n        label:\n          type: string\n        message:\n          type: string\n        topic:\n          type: string\n        state:\n          \"$ref\": \"#/components/schemas/MessageState\"\n      required:\n        - label\n        - message\n        - state\n        - topic\n    Message:\n      properties:\n        allowed_ips:\n          type: string\n        appID:\n          type: string\n        label:\n          type: string\n        message:\n          type: string\n        topic:\n          type: string\n        created:\n          type: string\n        sent:\n          type: string\n        state:\n          \"$ref\": \"#/components/schemas/MessageState\"\n\n    User:\n      properties:\n        _id:\n          type: string\n          description: The unique user account ID\n        identities:\n          type: array\n          description: A list of authentication provider identities associated with the user account.\n          items:\n            \"$ref\": \"#/components/schemas/UserIdentity\"\n        type:\n          type: string\n          enum:\n            - normal\n            - server\n          description: |-\n            The user type. Most users are `normal` and represent a\n            specific human user. Users created through the `api-key`\n            provider have the type `server` because they are typically\n            used for programmatic access from a server.\n        creation_date:\n          type: integer\n          description: |-\n            The date and time that the user account was created.\n            Represented by the number of seconds since the UNIX epoch.\n        last_authentication_date:\n          type: integer\n          description: |-\n            The date and time that the user account last logged in or\n            authenticated a request. Represented by the number of\n            seconds since the UNIX epoch.\n        disabled:\n          type: boolean\n          description: If `true`, the user account is inactive and cannot login or interact with App Services.\n        data:\n          type: object\n          description: |-\n            Metadata that describes the user. This field combines the\n            data for all authentication identities associated with the\n            user. The exact field names and values depend on which\n            authentication providers the user has authenticated with.\n\n            For example, if a user has linked an email/password account\n            with their Google account, this object might contain their\n            `email` as well as metadata fields from Google like `name`\n            and `picture`.\n\n    UserIdentity:\n      type: object\n      description: |-\n        An authenticated identity from an authentication provider. This\n        represents the user account within an individual auth provider\n        and maps the account to external authentication systems.\n      properties:\n        id:\n          type: string\n        provider_type:\n          \"$ref\": \"#/components/schemas/ProviderType\"\n        provider_id:\n          type: string\n\n    Partition:\n      properties:\n        key:\n          type: string\n        type:\n          type: string\n    SyncDataResponse:\n      properties:\n        service_id:\n          type: string\n          description:\n            The Service ID for the currently synced cluster, if there is\n            one.\n        partition_fields:\n          type: array\n          items:\n            \"$ref\": \"#/components/schemas/Partition\"\n          description: |-\n            A list of valid partition keys based on the cluster's collection\n            schemas.\n    AnyTrigger:\n      oneOf:\n        - $ref: \"#/components/schemas/DatabaseTrigger\"\n        - $ref: \"#/components/schemas/AuthenticationTrigger\"\n        - $ref: \"#/components/schemas/ScheduledTrigger\"\n    Trigger:\n      oneOf:\n        - $ref: \"#/components/schemas/DatabaseTrigger\"\n        - $ref: \"#/components/schemas/AuthenticationTrigger\"\n        - $ref: \"#/components/schemas/ScheduledTrigger\"\n    BaseTrigger:\n      type: object\n      required:\n        - name\n        - type\n        - config\n      properties:\n        _id:\n          type: string\n          description: The trigger's unique ID.\n        name:\n          type: string\n          description: The trigger's name.\n        type:\n          type: string\n        disabled:\n          type: boolean\n          default: false\n          description: If `true`, the trigger is disabled and does not listen for events or execute.\n        config:\n          type: object\n          description: An object that defines configuration values for the trigger.\n        function_id:\n          type: string\n          description: |-\n            The ID of the function that the trigger calls when it fires.\n\n            This value is the same as `event_processors.FUNCTION.function_id`.\n            You can either define the value here or in `event_processors.FUNCTION.function_id`.\n            The App Services backend duplicates the value to the configuration location where you did not define it.\n\n            For example, if you define `function_id`, the backend duplicates it to `event_processors.FUNCTION.function_id`.\n        function_name:\n          type: string\n          description: |-\n            The name of the function that the trigger calls when it\n            fires, i.e. the function described by `function_id`.\n\n            This value is the same as `event_processors.FUNCTION.function_name`.\n            You can either define the value here or in `event_processors.FUNCTION.function_name`.\n            The App Services backend duplicates the value to the configuration location where you did not define it.\n\n            For example, if you define `function_name`, the backend duplicates it to `event_processors.FUNCTION.function_name`.\n        event_processors:\n          type: object\n          description: |-\n            An object where each field name is an event processor ID and\n            each value is an object that configures its corresponding\n            event processor. For an example configuration object, see\n            [Send Trigger Events to AWS\n            EventBridge](https://www.mongodb.com/docs/realm/triggers/examples/send-events-aws-eventbridge#std-label-event_processor_example).\n          properties:\n            FUNCTION:\n              type: object\n              properties:\n                config:\n                  type: object\n                  properties:\n                    function_id:\n                      type: string\n                      description: |-\n                        The ID of the function that the trigger calls when it fires.\n\n                        This value is the same as the root-level `function_id`.\n                        You can either define the value here or in `function_id`.\n                        The App Services backend duplicates the value to the configuration location where you did not define it.\n\n                        For example, if you define `event_processors.FUNCTION.function_id`, the backend duplicates it to `function_id`.\n                    function_name:\n                      type: string\n                      description: |-\n                        The name of the function that the trigger calls when it\n                        fires, i.e. the function described by `function_id`.\n\n                        This value is the same as the root-level `function_name`.\n                        You can either define the value here or in `function_name`.\n                        The App Services backend duplicates the value to the configuration location where you did not define it.\n\n                        For example, if you define `event_processors.FUNCTION.function_name`, the backend duplicates it to `function_name`.\n            AWS_EVENTBRIDGE:\n              type: object\n              properties:\n                config:\n                  type: object\n                  properties:\n                    account_id:\n                      type: string\n                      description: An AWS Account ID.\n                    region:\n                      type: string\n                      description: An AWS region.\n                    extended_json_enabled:\n                      type: boolean\n                      default: false\n                      description: If `true`, event objects are serialized using EJSON.\n    DatabaseTrigger:\n      example:\n        name: onNewEmployee\n        type: DATABASE\n        function_id: 5eea9ca4ca0e356e2c2a148a\n        function_name: handleNewEmployeeEvent\n        event_processors:\n          {\n            FUNCTION:\n              {\n                function_id: 5eea9ca4ca0e356e2c2a148a,\n                function_name: handleNewEmployeeEvent,\n              },\n          }\n        config:\n          operation_types:\n            - INSERT\n          database: HR\n          collection: employees\n          service_id: 5adeb649b8b998486770ae7c\n          match: {}\n          full_document: true\n      allOf:\n        - $ref: \"#/components/schemas/BaseTrigger\"\n        - properties:\n            type:\n              type: string\n              description: The trigger type. For database triggers, this value is always `\"DATABASE\"`.\n              enum: [\"DATABASE\"]\n            config:\n              required:\n                - service_id\n                - database\n                - collection\n                - operation_types\n                - full_document\n                - full_document_before_change\n                - unordered\n                - match\n                - project\n              properties:\n                service_id:\n                  type: string\n                  description: |\n                    The _id value of a linked MongoDB data source.\n\n                    See [Get a Data Source](#operation/adminGetService).\n                database:\n                  type: string\n                  description: The name of a database in the linked data source.\n                collection:\n                  type: string\n                  description: |-\n                    The name of a collection in the specified database. The\n                    trigger listens to events from this collection.\n                operation_types:\n                  type: array\n                  minItems: 1\n                  items:\n                    type: string\n                    enum:\n                      - INSERT\n                      - UPDATE\n                      - REPLACE\n                      - DELETE\n                  description: The type(s) of MongoDB change event that the trigger listens for.\n                match:\n                  type: object\n                  description: |-\n                    A [$match](https://www.mongodb.com/docs/manual/reference/operator/aggregation/match)\n                    expression filters change events. The trigger will only\n                    fire if the expression evaluates to true for a given\n                    change event.\n                full_document:\n                  type: boolean\n                  default: false\n                  description: |-\n                    If `true`, indicates that `UPDATE` change events should\n                    include the most current\n                    [majority-committed](https://www.mongodb.com/docs/manual/reference/read-concern-majority/)\n                    version of the modified document in the `fullDocument`\n                    field.\n                full_document_before_change:\n                  type: boolean\n                  default: false\n                  description: |-\n                    If true, indicates that `UPDATE` change events should\n                    include a snapshot of the modified document from\n                    immediately before the update was applied.\n\n                    You must enable [document\n                    preimages](https://www.mongodb.com/docs/atlas/app-services/mongodb/preimages/)\n                    for your cluster to include these snapshots.\n                skip_catchup_events:\n                  type: boolean\n                  default: false\n                  description: |-\n                    If `true`, enabling the Trigger after it was disabled\n                    will not invoke events that occurred while the Trigger\n                    was disabled.\n                tolerate_resume_errors:\n                  type: boolean\n                  default: false\n                  description: |-\n                    If `true`, when this Trigger's resume token\n                    cannot be found in the cluster's oplog, the Trigger automatically resumes\n                    processing events at the next relevant change stream event.\n                    All change stream events from when the Trigger was suspended until the Trigger\n                    resumes execution do not have the Trigger fire for them.\n\n                unordered:\n                  type: boolean\n                  description: |-\n                    If `true`, event ordering is disabled and this Trigger\n                    can process events in parallel. If `false`, event\n                    ordering is enabled and the Trigger executes events\n                    serially.\n    AuthenticationTrigger:\n      example:\n        name: onNewApiKey\n        type: AUTHENTICATION\n        function_name: handleNewApiKeyUser\n        config:\n          operation_type:\n            - CREATE\n          providers:\n            - api-key\n      allOf:\n        - $ref: \"#/components/schemas/BaseTrigger\"\n        - properties:\n            type:\n              type: string\n              description: The trigger type. For authentication triggers, this value is always `\"AUTHENTICATION\"`.\n              enum: [\"AUTHENTICATION\"]\n            config:\n              required:\n                - operation_type\n                - providers\n              properties:\n                operation_type:\n                  type: string\n                  description: The type of authentication event that the trigger listens for.\n                  enum:\n                    - LOGIN\n                    - CREATE\n                    - DELETE\n                providers:\n                  type: string\n                  description: The type(s) of authentication provider that the trigger listens to.\n                  enum:\n                    - anon-user\n                    - api-key\n                    - custom-token\n                    - custom-function\n                    - local-userpass\n                    - oauth2-apple\n                    - oauth2-facebook\n                    - oauth2-google\n    ScheduledTrigger:\n      example:\n        name: createDailyReport\n        type: SCHEDULED\n        function_name: createReport\n        config:\n          schedule: \"0 8 * * *\"\n      allOf:\n        - $ref: \"#/components/schemas/BaseTrigger\"\n        - properties:\n            type:\n              type: string\n              description: The trigger type. For scheduled triggers, this value is always `\"SCHEDULED\"`.\n              enum: [\"SCHEDULED\"]\n            config:\n              required:\n                - schedule\n              properties:\n                schedule:\n                  type: string\n                  description: A [cron expression](https://www.mongodb.com/docs/atlas/app-services/triggers/scheduled-triggers/#cron-expressions) that specifies when the trigger executes.\n                  example: \"0 11 * * *\"\n                skip_catchup_events:\n                  type: boolean\n                  description: |-\n                    If `true`, enabling the trigger after it was disabled\n                    will not invoke events that occurred while the trigger\n                    was disabled.\n    MetadataAttribute:\n      type: object\n      properties:\n        name:\n          type: string\n          description: |-\n            The [metadata\n            attribute](https://www.mongodb.com/docs/realm/hosting/file-metadata-attributes)\n            name.\n        value:\n          type: string\n          description: |-\n            The [metadata\n            attribute](https://www.mongodb.com/docs/realm/hosting/file-metadata-attributes)\n            value.\n    AssetMetadata:\n      properties:\n        path:\n          type: string\n          description: The resource path of the asset\n        size:\n          type: integer\n          description: The size of the asset in bytes\n        attrs:\n          type: array\n          description: |-\n            An array of documents that each describe a [metadata\n            attribute](https://www.mongodb.com/docs/realm/hosting/file-metadata-attributes)\n            that applies to the asset.\n          items:\n            \"$ref\": \"#/components/schemas/MetadataAttribute\"\n        hash:\n          type: string\n          description: The MD5 checksum hash for the asset\n    HostingConfiguration:\n      properties:\n        enabled:\n          type: boolean\n        status:\n          type: string\n          enum:\n            - setup_ok\n            - change_in_progress\n            - change_failed\n            - change_failed_fatal\n        default_domain:\n          type: object\n          properties:\n            provider_type:\n              type: string\n              example: aws\n            config:\n              type: object\n              properties:\n                app_default_domain:\n                  type: string\n                  description: Default domain of hosted Atlas App Services App provided by App Services.\n                  example: myapp-qldqx.mongodbstitch.com\n\n    HostedAssetMetadata:\n      properties:\n        appId:\n          type: string\n          description: The unique App ID of the Atlas App Services App that is hosting the file.\n        last_modified:\n          type: integer\n          description: |-\n            The time at which the hosted asset was last modified in [Unix\n            time](https://en.wikipedia.org/wiki/Unix_time) (number of seconds since\n            January 1, 1970 at 00:00 UTC).\n        url:\n          type: string\n          description: The full URL of the hosted asset.\n        path:\n          type: string\n          description: The resource path of the hosted asset\n        size:\n          type: integer\n          description: The size of the hosted asset in bytes\n        attrs:\n          type: array\n          description: |-\n            An array of documents that each describe a [metadata\n            attribute](https://www.mongodb.com/docs/realm/hosting/file-metadata-attributes)\n            that applies to the asset.\n          items:\n            \"$ref\": \"#/components/schemas/MetadataAttribute\"\n        hash:\n          type: string\n          description: The MD5 checksum hash for the hosted asset\n    RefreshTokenExpiration:\n      type: object\n      properties:\n        expiration_time_seconds:\n          type: number\n          minimum: 1800\n          maximum: 15552000\n          default: 5184000\n          description: |-\n            The time in seconds that a user session refresh token is\n            valid for after it is issued. After this time, the token is\n            expired and the user must re-authenticate.\n\n            The expiration time must be between 30 minutes and 180 days,\n            inclusive. The default expiration time is 60 days.\n    Relationship:\n      type: object\n      description: A [relationship](https://www.mongodb.com/docs/realm/schemas/relationships/) definition.\n      properties:\n        ref:\n          type: string\n          description: A reference string for the foreign collection.\n        foreign_key:\n          type: string\n          description: The name of the field in the foreign collection that the relationship points to.\n        is_list:\n          type: boolean\n          description: |-\n            If `true`:\n\n            - the relationship may point to many foreign documents.\n            - the local field must be defined as an array in the collection schema.\n    SchemaMetadata:\n      type: object\n      description: Metadata the describes which linked collection the schema applies to.\n      properties:\n        data_source:\n          type: string\n          description: The data source name.\n        database:\n          type: string\n          description: The database name.\n        collection:\n          type: string\n          description: The collection name.\n    CustomResolver:\n      type: object\n      required:\n        - _id\n        - function_id\n        - on_type\n        - field_name\n      properties:\n        _id:\n          type: string\n          description: The custom resolver's unique ID.\n        function_id:\n          type: string\n          description: The resolver function's unique ID.\n        on_type:\n          type: string\n          description: |-\n            The name of the resolver's parent type. This can be\n            `\"Query\"`, `\"Mutation\"`, or the name of a generated type if\n            this is a computed property.\n        field_name:\n          type: string\n          description: The name of the custom resolver field that appears in the GraphQL schema.\n        input_type:\n          oneOf:\n            - type: string\n            - type: object\n          description: |-\n            The type of the custom resolver's `input` parameter. This\n            can be a scalar, the name of an existing generated type, or\n            a custom JSON schema object. If undefined, the resolver does\n            not accept an input.\n        input_type_format:\n          type: string\n          enum:\n            - scalar\n            - scalar-list\n            - generated\n            - generated-list\n            - custom\n          description: |-\n            The kind of input type the custom resolver uses. This value\n            must agree with the value of `input_type`:\n\n            - A scalar input type must use `\"scalar\"` or `\"scalar-list\"`\n            - A generated input type must use `\"generated\"` or `\"generated-list\"`\n            - A custom input type must use `\"custom\"`\n\n            If undefined, the resolver does not accept an input.\n        payload_type:\n          oneOf:\n            - type: string\n            - type: object\n          description: |-\n            The type of the value returned by the custom resolver. This\n            can be a scalar, the name of an existing generated type, or\n            a custom JSON schema object.\n\n            If undefined, the resolver returns a `DefaultPayload`\n            object:\n\n            ```graphql\n            type DefaultPayload {\n              status: String!\n            }\n            ```\n        payload_type_format:\n          type: string\n          enum:\n            - scalar\n            - scalar-list\n            - generated\n            - generated-list\n            - custom\n          description: |-\n            The kind of payload type the custom resolver uses. This value\n            must agree with the value of `payload_type`:\n\n            - A scalar payload type must use `\"scalar\"` or `\"scalar-list\"`\n            - A generated payload type must use `\"generated\"` or `\"generated-list\"`\n            - A custom payload type must use `\"custom\"`\n\n            If undefined, the resolver returns a `DefaultPayload` object.\n    GraphQLValidationLevel:\n      type: string\n      enum: [\"STRICT\", \"OFF\"]\n    GraphQLValidationAction:\n      type: string\n      enum: [\"ERROR\", \"WARN\"]\n    GraphQLValidationSettings:\n      type: object\n      properties:\n        read_validation_action:\n          $ref: \"#/components/schemas/GraphQLValidationAction\"\n        read_validation_level:\n          $ref: \"#/components/schemas/GraphQLValidationLevel\"\n        write_validation_action:\n          $ref: \"#/components/schemas/GraphQLValidationAction\"\n        write_validation_level:\n          $ref: \"#/components/schemas/GraphQLValidationLevel\"\n    NullTypeSchemaValidationSetting:\n      type: object\n      properties:\n        enabled:\n          type: boolean\n    ValidationError:\n      description: An EJSON schema validation error.\n      oneOf:\n        - $ref: \"#/components/schemas/FalseValidationError\"\n        - $ref: \"#/components/schemas/RequiredValidationError\"\n        - $ref: \"#/components/schemas/InvalidTypeValidationError\"\n        - $ref: \"#/components/schemas/ItemsMustBeUniqueValidationError\"\n        - $ref: \"#/components/schemas/MissingDependencyValidationError\"\n        - $ref: \"#/components/schemas/InternalValidationError\"\n        - $ref: \"#/components/schemas/ConstValidationError\"\n        - $ref: \"#/components/schemas/EnumValidationError\"\n        - $ref: \"#/components/schemas/NumberAnyOfValidationError\"\n        - $ref: \"#/components/schemas/NumberOneOfValidationError\"\n        - $ref: \"#/components/schemas/NumberAllOfValidationError\"\n        - $ref: \"#/components/schemas/NumberNotValidationError\"\n        - $ref: \"#/components/schemas/NumberGTEValidationError\"\n        - $ref: \"#/components/schemas/NumberGTValidationError\"\n        - $ref: \"#/components/schemas/NumberLTEValidationError\"\n        - $ref: \"#/components/schemas/NumberLTValidationError\"\n        - $ref: \"#/components/schemas/MultipleOfValidationError\"\n        - $ref: \"#/components/schemas/ArrayNoAdditionalItemsValidationError\"\n        - $ref: \"#/components/schemas/ArrayMinItemsValidationError\"\n        - $ref: \"#/components/schemas/ArrayMaxItemsValidationError\"\n        - $ref: \"#/components/schemas/ArrayContainsValidationError\"\n        - $ref: \"#/components/schemas/ArrayMinPropertiesValidationError\"\n        - $ref: \"#/components/schemas/ArrayMaxPropertiesValidationError\"\n        - $ref: \"#/components/schemas/AdditionalPropertyNotAllowedValidationError\"\n        - $ref: \"#/components/schemas/InvalidPropertyPatternValidationError\"\n        - $ref: \"#/components/schemas/InvalidPropertyNameValidationError\"\n        - $ref: \"#/components/schemas/StringLengthGTEValidationError\"\n        - $ref: \"#/components/schemas/StringLengthGTValidationError\"\n        - $ref: \"#/components/schemas/StringLengthLTEValidationError\"\n        - $ref: \"#/components/schemas/StringLengthLTValidationError\"\n        - $ref: \"#/components/schemas/DoesNotMatchPatternValidationError\"\n        - $ref: \"#/components/schemas/DoesNotMatchFormatValidationError\"\n        - $ref: \"#/components/schemas/ConditionThenValidationError\"\n        - $ref: \"#/components/schemas/ConditionElseValidationError\"\n    FalseValidationError:\n      type: string\n      const: \"false\"\n    RequiredValidationError:\n      type: string\n      const: \"required\"\n      description: A required field is missing.\n    InvalidTypeValidationError:\n      type: string\n      const: \"invalid_type\"\n      description: A field has an invalid value type.\n    MissingDependencyValidationError:\n      type: string\n      const: \"missing_dependency\"\n    InternalValidationError:\n      type: string\n      const: \"internal\"\n    ConstValidationError:\n      type: string\n      const: \"const\"\n      description: A field has an invalid constant value.\n    EnumValidationError:\n      type: string\n      const: \"enum\"\n      description: A field has an invalid enum value.\n    NumberAnyOfValidationError:\n      type: string\n      const: \"number_any_of\"\n      description: A field does not match any schema in [anyOf](https://json-schema.org/understanding-json-schema/reference/combining.html#anyof).\n    NumberOneOfValidationError:\n      type: string\n      const: \"number_one_of\"\n      description: A field does not match exactly one schema in [oneOf](https://json-schema.org/understanding-json-schema/reference/combining.html#oneof).\n    NumberAllOfValidationError:\n      type: string\n      const: \"number_all_of\"\n      description: A field does not match all schemas in [allOf](https://json-schema.org/understanding-json-schema/reference/combining.html#allof).\n    NumberNotValidationError:\n      type: string\n      const: \"number_not\"\n      description: A field matches an exclusive schema in not.\n    NumberGTEValidationError:\n      type: string\n      const: \"number_gte\"\n      description: A field contains a number that is not greater than or equal to the minimum value.\n    NumberGTValidationError:\n      type: string\n      const: \"number_gt\"\n      description: A field contains a number that is not strictly greater than the minimum value.\n    NumberLTEValidationError:\n      type: string\n      const: \"number_lte\"\n      description: A field contains a number that is not less than or equal to the maximum value.\n    NumberLTValidationError:\n      type: string\n      const: \"number_lt\"\n      description: A field contains a number that is not strictly less than the maximum value.\n    MultipleOfValidationError:\n      type: string\n      const: \"multiple_of\"\n      description: A field contains a number that is not a multiple of the specified value.\n    ItemsMustBeUniqueValidationError:\n      type: string\n      const: \"unique\"\n      description: A field contains a unique array with non-unique values.\n    ArrayNoAdditionalItemsValidationError:\n      type: string\n      const: \"array_no_additional_items\"\n      description: A field contains a closed tuple array with invalid additional elements.\n    ArrayMinItemsValidationError:\n      type: string\n      const: \"array_min_items\"\n      description: A field contains an array with too few elements.\n    ArrayMaxItemsValidationError:\n      type: string\n      const: \"array_max_items\"\n      description: A field contains an array with too many elements.\n    ArrayContainsValidationError:\n      type: string\n      const: \"contains\"\n      description: An array does not contain any element of its contained type.\n    ArrayMinPropertiesValidationError:\n      type: string\n      const: \"array_min_properties\"\n      description: An array does not contain enough elements of its contained type.\n    ArrayMaxPropertiesValidationError:\n      type: string\n      const: \"array_max_properties\"\n      description: An array contains too many elements of its contained type.\n    AdditionalPropertyNotAllowedValidationError:\n      type: string\n      const: \"additional_property_not_allowed\"\n      description: A field is present but not defined in a closed schema.\n    InvalidPropertyPatternValidationError:\n      type: string\n      const: \"invalid_property_pattern\"\n      description: A field name that matched a pattern property does not contain a valid value.\n    InvalidPropertyNameValidationError:\n      type: string\n      const: \"invalid_property_name\"\n      description: A field name is invalid.\n    StringLengthGTEValidationError:\n      type: string\n      const: \"string_gte\"\n      description: A field contains a string that is not greater than or equal to the minimum length.\n    StringLengthGTValidationError:\n      type: string\n      const: \"string_gt\"\n      description: A field contains a string that is not strictly greater than the minimum length.\n    StringLengthLTValidationError:\n      type: string\n      const: \"string_lt\"\n      description: A field contains a string that is not strictly less than the maximum length.\n    StringLengthLTEValidationError:\n      type: string\n      const: \"string_lte\"\n      description: A field contains a string that is not less than or equal to the maximum length.\n    DoesNotMatchPatternValidationError:\n      type: string\n      const: \"pattern\"\n      description: A field contains a string that does not match the field's pattern.\n    DoesNotMatchFormatValidationError:\n      type: string\n      const: \"format\"\n      description: A field contains a string with an invalid format.\n    ConditionThenValidationError:\n      type: string\n      const: \"condition_then\"\n      description: A value is not valid when a conditional expression evaluates to `true`.\n    ConditionElseValidationError:\n      type: string\n      const: \"condition_else\"\n      description: A value is not valid when a conditional expression evaluates to `false`.\n  securitySchemes:\n    tokenAuth:\n      type: http\n      scheme: bearer\n      description: |-\n        The authorization token provided in the `access_token` field of the\n        [POST /auth/providers/{provider}/login](#section/adminLogin)\n        and  [POST /auth/session](#section/adminDeleteSession) API endpoints.\n    refreshAuth:\n      type: http\n      scheme: bearer\n      description: |-\n        The authorization token provided in the `refresh_token` field of the\n        [POST /auth/providers/{provider}/login](#section/adminLogin)\n        API endpoint.\n  responses:\n    BadRequest:\n      description: There is an error in the request.\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n\n    EnvironmentValueNotFound:\n      description: Environment value not found\n      content:\n        application/json:\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/Error\"\n              - properties:\n                  error_code:\n                    const: EnvironmentValueNotFound\ntags:\n  - name: admin\n    x-displayName: Administrator\n    description: Log in and adminstrate App Services Apps.\n  - name: apikeys\n    x-displayName: API Keys\n    description: View and manage API keys through the [API Key provider](https://www.mongodb.com/docs/atlas/app-services/authentication/api-key/).\n  - name: apps\n    x-displayName: Applications\n    description: View and manage applications in an Atlas project.\n  - name: authproviders\n    x-displayName: Authentication Providers\n    description: View and manage [authentication providers](https://www.mongodb.com/docs/atlas/app-services/authentication/providers/).\n  - name: billing\n    x-displayName: Billing\n    description: View billed usage of your applications.\n  - name: deploy\n    x-displayName: Deployment\n    description: |\n      ## Draft and Deploy a Group of Changes\n\n      You can [deploy](https://www.mongodb.com/docs/atlas/app-services/manage-apps/deploy#std-label-application-deployment) a\n      group of application changes together by creating and deploying a draft.\n      To create and deploy a set of draft changes:\n\n      ### 1. Create a New Draft\n\n      A draft represents a group of application changes that you can deploy or\n      discard as a single unit. To create a draft, send a `POST` request to\n      the drafts endpoint:\n\n      ```shell\n      curl --request POST \\\n        --header 'Content-Type: application/json' \\\n        --header 'Authorization: Bearer \u003caccess_token\u003e' \\\n        'https://realm.mongodb.com/api/admin/v3.0/groups/{groupId}/apps/{appId}/drafts'\n      ```\n\n\n      #### One Draft Per User\n\n      Each user can only create a single draft at a time, either through the\n      UI or the Admin API. If you already have an existing draft, you can\n      discard the changes associated with it by sending a `DELETE` request to\n      the draft's endpoint:\n\n      ```shell\n      curl --request DELETE \\\n        --header 'Authorization: Bearer \u003caccess_token\u003e' \\\n        'https://realm.mongodb.com/api/admin/v3.0/groups/{groupId}/apps/{appId}/drafts/{draftId}'\n      ```\n\n      ### 2. Make Changes to Your Application\n\n      Once you've created a draft, make all of the changes that you want to\n      include in the draft. App Services adds any application changes that you make\n      to the draft so that you can deploy them together.\n\n      ### 3. Deploy the Draft\n\n      After you've made all the changes that you want to include in the\n      deployment, deploy the draft by sending a `POST` request to that draft's\n      deployment endpoint:\n\n      ```shell\n      curl --request POST \\\n        --header 'Content-Type: application/json' \\\n        --header 'Authorization: Bearer \u003caccess_token\u003e' \\\n        'https://realm.mongodb.com/api/admin/v3.0/groups/{groupId}/apps/{appId}/drafts/{draftId}/deployment'\n      ```\n\n      #### Draft Conflicts\n\n      If you deploy changes through the API but have conflicting changes in a\n      draft in the UI, your UI draft will become invalid and you will not be\n      able to deploy it. You can download your UI draft by reviewing the draft\n      in the `Deployment` page. You can use the download to deploy your\n      changes in the `realm-cli` or as a reference as you reapply changes in\n      the UI.\n  - name: data-api\n    x-displayName: Data API\n    description: |-\n      Manage your app's generated [Data API endpoints](https://www.mongodb.com/docs/atlas/app-services/data-api/generated-endpoints/).\n\n      ## Construct a Data API Base URL\n\n      Data API requests use a base URL that's specific to your App and\n      deployment model.\n\n      For a globally deployed app, the base URL has the following format:\n\n      ```\n      https://data.mongodb-api.com/app/{ClientAppID}/endpoint/data/{DataAPIVersion}\n      ```\n\n      A locally deployed app uses a similar base URL also includes the\n      App's deployment region and cloud provider:\n\n      ```\n      https://{Region}.{Cloud}.data.mongodb-api.com/app/{ClientAppID}/endpoint/data/{DataAPIVersion}\n      ```\n\n      You can find an App's `Region`, `Cloud`, and `ClientAppId` in the\n      [App Configuration](#tag/apps/operation/adminGetApplication):\n\n      ```sh\n      curl -X GET https://realm.mongodb.com/api/admin/v3.0/groups/{groupId}/apps/{appId} \\\n        -h 'Authorization: Bearer \u003cAccessToken\u003e'\n      ```\n\n      You can see a list of all `DataAPIVersion` values supported by an App in\n      the `versions` field of its [Data API\n      Configuration](#tag/data-api/operation/adminGetDataApiConfig):\n\n      ```sh\n      curl -X GET \"https://realm.mongodb.com/api/admin/v3.0/groups/{groupId}/apps/{appId}/data_api/config\" \\\n        -h 'Authorization: Bearer \u003cAccessToken\u003e'\n      ```\n\n      For example, consider an App that has the following configuration:\n\n      ```json\n      {\n        \"client_app_id\": \"myapp-abcde\",\n        \"deployment_model\": \"LOCAL\",\n        \"provider_region\": \"aws-us-east-1\",\n        ...\n      }\n      ```\n\n      This App would use the following base URL for Data API v1 requests:\n\n      ```text\n      https://us-east-1.aws.data.mongodb-api.com/app/myapp-abcde/endpoint/data/v1\n      ```\n  - name: dependencies\n    x-displayName: Dependencies\n    description: Manage your application's [external dependencies](https://www.mongodb.com/docs/atlas/app-services/functions/dependencies/).\n  - name: endpoints\n    x-displayName: Endpoints\n    description: |-\n      View and manage your app's custom [HTTPS endpoints](https://www.mongodb.com/docs/atlas/app-services/data-api/custom-endpoints/).\n\n      ## Construct a Custom HTTPS Endpoint Base URL\n\n      HTTPS Endpoint requests use a base URL that's specific to your App and\n      deployment model.\n\n      For a globally deployed app, the base URL has the following format:\n\n      ```\n      https://data.mongodb-api.com/app/{ClientAppID}/endpoint\n      ```\n\n      A locally deployed app uses a similar base URL also includes the\n      App's deployment region and cloud provider:\n\n      ```\n      https://{Region}.{Cloud}.data.mongodb-api.com/app/{ClientAppID}/endpoint\n      ```\n\n      You can find an App's `Region`, `Cloud`, and `ClientAppId` by\n      calling the [Get an App](#tag/apps/operation/adminGetApplication) endpoint:\n\n      ```sh\n      curl -X GET https://realm.mongodb.com/api/admin/v3.0/groups/{groupId}/apps/{appId} \\\n        -h 'Authorization: Bearer \u003cAccessToken\u003e'\n      ```\n\n      For example, consider an App that has the following configuration:\n\n      ```json\n      {\n        \"client_app_id\": \"myapp-abcde\",\n        \"deployment_model\": \"LOCAL\",\n        \"provider_region\": \"aws-us-east-1\",\n        ...\n      }\n      ```\n\n      This App would use the following base URL for incoming custom HTTPS endpoint requests:\n\n      ```text\n      https://us-east-1.aws.data.mongodb-api.com/app/myapp-abcde/endpoint\n      ```\n  - name: event-subscriptions\n    x-displayName: Event Subscriptions\n    description: |-\n      View your app's active event subscriptions. These monitor\n      real-time events, e.g. from a MongoDB change stream, to power\n      application services like Triggers and Device Sync.\n  - name: environments\n    x-displayName: Environments\n    description: View and manage your app's [environment](https://www.mongodb.com/docs/atlas/app-services/manage-apps/configure/environments/) and environment values.\n  - name: functions\n    x-displayName: Functions\n    description: View and manage your app's [functions](https://www.mongodb.com/docs/atlas/app-services/functions/).\n  - name: graphql\n    x-displayName: GraphQL API\n    description: Configure and run GraphQL API operations.\n  - name: hosting\n    x-displayName: Hosting\n    description: |\n      Manage your application's [hosted files](https://www.mongodb.com/docs/atlas/app-services/hosting/).\n\n      ## Asset Metadata Document Example\n\n      Asset metadata documents describe hosted asset files.\n\n      ```json\n      {\n        \"path\": \"\u003cAsset Resource Path\u003e\",\n        \"hash\": \"\u003cAsset MD5 Checksum Hash\u003e\",\n        \"size\": \u003cFile size in bytes\u003e,\n        \"attrs\": [\n            {\n              \"name\": \"\u003cMetadata Attribute Name\u003e\",\n              \"value\": \"\u003cMetadata Attribute Value\u003e\",\n            }\n        ]\n      }\n      ```\n  - name: logs\n    x-displayName: Logs\n    description: |\n      Access your application's [logs](https://www.mongodb.com/docs/atlas/app-services/logs/).\n\n      ## Pagination with the Logging API\n\n      The Logging endpoint returns up to 100 log entries per page. If the\n      query matches more than 100 entries, the result will be\n      [paginated](https://en.wikipedia.org/wiki/Pagination). Such a result\n      will contain two pieces of information that you will need to request the\n      next page of entries for the same query: the `nextEndDate` and\n      `nextSkip` fields.\n\n      Paginated results always contain the `nextEndDate` field. A paginated\n      result will also contain the `nextSkip` field if the timestamp of the\n      first entry on the next page is identical to the timestamp of the last\n      entry on the current page.\n\n      To request the first page of up to 100 log entries, use the endpoint as\n      usual:\n\n      ```sh\n      curl --request GET \\\n        --header 'Authorization: Bearer \u003caccess_token\u003e' \\\n        'https://realm.mongodb.com/api/admin/v3.0/groups/{groupId}/apps/{appId}/logs'\n      ```\n\n      To request the next page of up to 100 log entries, pass the values of\n      `nextEndDate` and `nextSkip` as the `end_date` and `skip` parameters,\n      respectively:\n\n      ```sh\n      curl --request GET \\\n        --header 'Authorization: Bearer \u003caccess_token\u003e' \\\n        'https://realm.mongodb.com/api/admin/v3.0/groups/{groupId}/apps/{appId}/logs?end_date={nextEndDate of previous response}\u0026skip={nextSkip of previous response}'\n      ```\n\n      Repeat this step to get more pages until the response does not have a\n      `nextEndDate` field. This signifies that you have reached the last page.\n\n      For more information, see [GET /groups/{groupId}/apps/{appId}/logs](#section/adminGetLogs).\n  - name: log_forwarders\n    x-displayName: Log Forwarding\n    description: View and manage your application's [log forwarders](https://www.mongodb.com/docs/realm/logs/forward-logs/).\n  - name: metrics\n    x-displayName: Metrics\n    description: View Atlas App Services metrics.\n  - name: rules\n    x-displayName: Rules\n    description: View and manage your application's [data access rules](https://www.mongodb.com/docs/atlas/app-services/rules/).\n  - name: schemas\n    x-displayName: Schemas\n    description: View and manage your application's [schemas](https://www.mongodb.com/docs/realm/schemas/).\n  - name: secrets\n    x-displayName: Secrets\n    description: View and manage your application's [secrets](https://www.mongodb.com/docs/realm/values-and-secrets/).\n  - name: security\n    x-displayName: Security\n    description: Configure your application's [security](https://www.mongodb.com/docs/realm/manage-apps/secure/).\n  - name: services\n    x-displayName: Data Sources \u0026 Services\n    description: View and manage your application's [data sources](https://www.mongodb.com/docs/atlas/app-services/mongodb/) and [third-party services [Deprecated]](https://www.mongodb.com/docs/atlas/app-services/reference/services/)\n  - name: sync\n    x-displayName: Sync\n    description: Get information about [sync](https://www.mongodb.com/docs/realm/sync/) for your application.\n  - name: triggers\n    x-displayName: Triggers\n    description: View and manage your application's [triggers](https://www.mongodb.com/docs/atlas/app-services/triggers/overview/).\n  - name: users\n    x-displayName: Users\n    description: View and manage your application's [users](https://www.mongodb.com/docs/realm/authentication/).\n  - name: email\n    x-displayName: User Confirmation\n    description: Confirm pending users with the built-in email confirmation flow.\n  - name: values\n    x-displayName: Values\n    description: View and manage your application's [values](https://www.mongodb.com/docs/realm/values-and-secrets/).\n  - name: notifications\n    x-displayName: \"[Deprecated] Push Notifications\"\n    description: View and manage your application's [push notifications](https://www.mongodb.com/docs/atlas/app-services/push-notifications/).\n  - name: webhooks\n    x-displayName: \"[Deprecated] Webhooks\"\n    description: View and manage your application's [webhooks](https://www.mongodb.com/docs/atlas/app-services/services/configure/service-webhooks/).\nsecurity:\n  - tokenAuth: []\n",
			"canonicalURL": "/github.com/mongodb/docs-app-services@11ee0576c19cd115acf6c44a178907d829f02065/-/blob/source/openapi-admin-v3.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/mongodb/docs-app-services/blob/11ee0576c19cd115acf6c44a178907d829f02065/source/openapi-admin-v3.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 4071: cannot unmarshal !!seq into string"
}