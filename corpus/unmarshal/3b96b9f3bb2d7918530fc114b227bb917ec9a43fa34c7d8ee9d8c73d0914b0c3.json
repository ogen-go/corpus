{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/delta-incubator/riverbank"
		},
		"file": {
			"name": "api-description.json",
			"size": 0,
			"path": "apidocs/api-description.json",
			"byteSize": 11825,
			"content": "{\"openapi\":\"3.0.2\",\"info\":{\"description\":\"The Delta Sharing protocol is still very early in its development.\\n\",\"version\":\"0.1\",\"title\":\"Delta Sharing Protocol\",\"contact\":{\"email\":\"rtyler@brokenco.de\"},\"license\":{\"name\":\"AGPL v3.0\",\"url\":\"https://www.gnu.org/licenses/agpl-3.0.en.html\"}},\"servers\":[{\"url\":\"http://localhost:8000/api/v1\",\"description\":\"Local dev server (APIv1)\"},{\"url\":\"https://sharing.delta.io/delta-sharing/\",\"description\":\"Demo Delta Sharing server\"}],\"tags\":[{\"name\":\"shares\",\"description\":\"Share discovery APIs\"},{\"name\":\"schemas\",\"description\":\"Schema discovery APIs\"},{\"name\":\"tables\",\"description\":\"Table query and inspection APIs\"}],\"paths\":{\"/shares\":{\"get\":{\"operationId\":\"ListShares\",\"summary\":\"List the shares accessible to the recipient\",\"description\":\"Without any query parameters the request will return the first page\\nof \\\"shares\\\" available to the authenticated recipent\\n\",\"tags\":[\"shares\"],\"security\":[{\"BearerAuth\":[]}],\"parameters\":[{\"in\":\"query\",\"name\":\"maxResults\",\"required\":false,\"description\":\"The maximum number of results to be returned in a single page. If\\nthe number of potential results exceeds the number of maximum\\nresults, the response will contain a `nextpageToken` which can be\\nused in subsequent requests.\\n\",\"example\":\"30\",\"schema\":{\"type\":\"number\",\"format\":\"int32\"}},{\"in\":\"query\",\"name\":\"pageToken\",\"required\":false,\"description\":\"Optionally provided page token for requesting a subsequent page of results\",\"schema\":{\"type\":\"string\"}}],\"responses\":{\"200\":{\"description\":\"The user could successfully list the shares\\n\",\"content\":{\"application/json\":{\"schema\":{\"$ref\":\"#/components/schemas/ListShareResponse\"}}}}}}},\"/shares/{share}/schemas\":{\"get\":{\"operationId\":\"ListSchemas\",\"summary\":\"List the schemas in a share\",\"tags\":[\"shares\"],\"security\":[{\"BearerAuth\":[]}],\"parameters\":[{\"in\":\"path\",\"name\":\"share\",\"required\":true,\"description\":\"Named share to list the schemas\",\"schema\":{\"type\":\"string\"}},{\"in\":\"query\",\"name\":\"maxResults\",\"required\":false,\"description\":\"The maximum number of results to be returned in a single page. If\\nthe number of potential results exceeds the number of maximum\\nresults, the response will contain a `nextpageToken` which can be\\nused in subsequent requests.\\n\",\"example\":\"30\",\"schema\":{\"type\":\"number\",\"format\":\"int32\"}},{\"in\":\"query\",\"name\":\"pageToken\",\"required\":false,\"description\":\"Optionally provided page token for requesting a subsequent page of results\",\"schema\":{\"type\":\"string\"}}],\"responses\":{\"200\":{\"description\":\"The user could successfully list the schemas in the given share\\n\",\"content\":{\"application/json\":{\"schema\":{\"$ref\":\"#/components/schemas/ListSchemasResponse\"}}}},\"404\":{\"description\":\"The named share could not be found\"}}}},\"/shares/{share}/schemas/{schema}/tables\":{\"get\":{\"operationId\":\"ListTables\",\"summary\":\"List the tables in a given share's schema\",\"tags\":[\"schemas\"],\"security\":[{\"BearerAuth\":[]}],\"parameters\":[{\"in\":\"path\",\"name\":\"share\",\"required\":true,\"description\":\"Named share for finding the named schema\",\"schema\":{\"type\":\"string\"}},{\"in\":\"path\",\"name\":\"schema\",\"required\":true,\"description\":\"Named schema for listing tables\",\"schema\":{\"type\":\"string\"}},{\"in\":\"query\",\"name\":\"maxResults\",\"required\":false,\"description\":\"The maximum number of results to be returned in a single page. If\\nthe number of potential results exceeds the number of maximum\\nresults, the response will contain a `nextpageToken` which can be\\nused in subsequent requests.\\n\",\"example\":\"30\",\"schema\":{\"type\":\"number\",\"format\":\"int32\"}},{\"in\":\"query\",\"name\":\"pageToken\",\"required\":false,\"description\":\"Optionally provided page token for requesting a subsequent page of results\",\"schema\":{\"type\":\"string\"}}],\"responses\":{\"200\":{\"description\":\"The user could successfully list the tables for the given schema in the given share\\n\",\"content\":{\"application/json\":{\"schema\":{\"$ref\":\"#/components/schemas/ListTablesResponse\"}}}},\"404\":{\"description\":\"The named share or schema could not be found\"}}}},\"/shares/{share}/schemas/{schema}/tables/{table}\":{\"head\":{\"operationId\":\"GetTableVersion\",\"summary\":\"Return the latest version identifier for the named table\",\"description\":\"This is the API for clients to get a table version without any other\\nextra information. The server usually can implement this API\\neffectively. If a client caches information about a shared table\\nlocally, it can store the table version and use this cheap API to\\nquickly check whether their cache is stale and they should re-fetch the\\ndata.\\n\",\"tags\":[\"tables\"],\"security\":[{\"BearerAuth\":[]}],\"parameters\":[{\"in\":\"path\",\"name\":\"share\",\"required\":true,\"description\":\"Named share for finding the named schema\",\"schema\":{\"type\":\"string\"}},{\"in\":\"path\",\"name\":\"schema\",\"required\":true,\"description\":\"Named schema for finding the named table\",\"schema\":{\"type\":\"string\"}},{\"in\":\"path\",\"name\":\"table\",\"required\":true,\"description\":\"Named table\",\"schema\":{\"type\":\"string\"}}],\"responses\":{\"200\":{\"description\":\"The table was found and has a version\",\"headers\":{\"Delta-Table-Version\":{\"description\":\"A long value which represents the current table version\",\"schema\":{\"type\":\"integer\"}}}},\"404\":{\"description\":\"The named share, schema, or table could not be found\"}}}},\"/shares/{share}/schemas/{schema}/tables/{table}/metadata\":{\"get\":{\"operationId\":\"GetTableMetadata\",\"summary\":\"Query the metadata and schema of the given table\",\"tags\":[\"tables\"],\"security\":[{\"BearerAuth\":[]}],\"parameters\":[{\"in\":\"path\",\"name\":\"share\",\"required\":true,\"description\":\"Named share for finding the named schema\",\"schema\":{\"type\":\"string\"}},{\"in\":\"path\",\"name\":\"schema\",\"required\":true,\"description\":\"Named schema for finding the named table\",\"schema\":{\"type\":\"string\"}},{\"in\":\"path\",\"name\":\"table\",\"required\":true,\"description\":\"Named table\",\"schema\":{\"type\":\"string\"}}],\"responses\":{\"200\":{\"description\":\"A sequence of JSON strings containing the table protocol\\nand then the table metadata\\n\",\"headers\":{\"description\":\"A long value which represents the current table version\",\"schema\":{\"type\":\"integer\"}},\"content\":{\"application/x-ndjson\":{\"schema\":{\"$ref\":\"#/components/schemas/TableMetadataResponse\"}}}},\"404\":{\"description\":\"The named share, schema, or table could not be found\"}}}},\"/shares/{share}/schemas/{schema}/tables/{table}/query\":{\"post\":{\"operationId\":\"QueryTable\",\"summary\":\"Query the table\",\"tags\":[\"tables\"],\"security\":[{\"BearerAuth\":[]}],\"parameters\":[{\"in\":\"path\",\"name\":\"share\",\"required\":true,\"description\":\"Named share for finding the named schema\",\"schema\":{\"type\":\"string\"}},{\"in\":\"path\",\"name\":\"schema\",\"required\":true,\"description\":\"Named schema for finding the named table\",\"schema\":{\"type\":\"string\"}},{\"in\":\"path\",\"name\":\"table\",\"required\":true,\"description\":\"Named table\",\"schema\":{\"type\":\"string\"}}],\"requestBody\":{\"required\":true,\"content\":{\"application/json\":{\"schema\":{\"$ref\":\"#/components/schemas/QueryRequest\"}}}},\"responses\":{\"200\":{\"description\":\"A sequence of JSON strings containing the table protocol, metadata,\\nand then a number of lines for each file in the table.\\n\",\"headers\":{\"description\":\"A long value which represents the current table version\",\"schema\":{\"type\":\"integer\"}},\"content\":{\"application/x-ndjson\":{\"schema\":{\"$ref\":\"#/components/schemas/TableQueryResponse\"}}}},\"404\":{\"description\":\"The named share, schema, or table could not be found\"}}}}},\"components\":{\"securitySchemes\":{\"BearerAuth\":{\"type\":\"http\",\"scheme\":\"bearer\"}},\"schemas\":{\"ListShareResponse\":{\"type\":\"object\",\"required\":[\"nextPageToken\"],\"properties\":{\"nextPageToken\":{\"type\":\"string\"},\"items\":{\"type\":\"array\",\"items\":{\"$ref\":\"#/components/schemas/Share\"}}}},\"Share\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\",\"example\":\"vaccine_share\"}}},\"ListSchemasResponse\":{\"type\":\"object\",\"required\":[\"nextPageToken\"],\"properties\":{\"nextPageToken\":{\"type\":\"string\"},\"items\":{\"type\":\"array\",\"items\":{\"$ref\":\"#/components/schemas/Schema\"}}}},\"Schema\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\",\"example\":\"acme_vaccine_data\"},\"share\":{\"type\":\"string\",\"example\":\"vaccine_share\"}}},\"ListTablesResponse\":{\"type\":\"object\",\"required\":[\"nextPageToken\"],\"properties\":{\"nextPageToken\":{\"type\":\"string\"},\"items\":{\"type\":\"array\",\"items\":{\"$ref\":\"#/components/schemas/Table\"}}}},\"Table\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\",\"example\":\"vaccine_ingredients\"},\"share\":{\"type\":\"string\",\"example\":\"vaccine_share\"},\"schema\":{\"type\":\"string\",\"example\":\"acme_vaccine_data\"}}},\"TableMetadataResponse\":{\"type\":\"string\",\"example\":\"{\\\"protocol\\\":{\\\"minReaderVersion\\\":1}}\\n{\\\"metaData\\\":{\\\"id\\\":\\\"f8d5c169-3d01-4ca3-ad9e-7dc3355aedb2\\\",\\\"format\\\":{\\\"provider\\\":\\\"parquet\\\"},\\\"schemaString\\\":\\\"{\\\\\\\"type\\\\\\\":\\\\\\\"struct\\\\\\\",\\\\\\\"fields\\\\\\\":[{\\\\\\\"name\\\\\\\":\\\\\\\"eventTime\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"timestamp\\\\\\\",\\\\\\\"nullable\\\\\\\":true,\\\\\\\"metadata\\\\\\\":{}},{\\\\\\\"name\\\\\\\":\\\\\\\"date\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"date\\\\\\\",\\\\\\\"nullable\\\\\\\":true,\\\\\\\"metadata\\\\\\\":{}}]}\\\",\\\"partitionColumns\\\":[\\\"date\\\"]}}\\n\"},\"QueryRequest\":{\"type\":\"object\",\"properties\":{\"predicateHints\":{\"type\":\"array\",\"description\":\"A list of SQL-like boolean expressions using the restricted subset of\\nSQL passed in as a JSON array, one per expression\\n\\nEach entry should be a single SQL-like boolean expression using:\\n  * `=`\\n  * `\u003e`\\n  * `\u003c`\\n  * `\u003e=`\\n  * `\u003c=`\\n  * `\u003c\u003e`\\n  * `IS NULL`\\n  * `IS NOT NULL`\\n\",\"example\":[\"col = 123\"],\"items\":{\"type\":\"string\"}},\"limitHint\":{\"type\":\"integer\",\"example\":1000,\"description\":\"It’s a hint from the client to tell the server how many rows the\\nclient plans to read. The server can use this hint to return only\\nsome files by using the stats in the Delta transaction logs. For\\nexample, when running SELECT * FROM table LIMIT 1000, the client\\ncan send limit=1000 to the server\\n\"}}},\"TableQueryResponse\":{\"type\":\"string\",\"example\":\"{\\\"protocol\\\":{\\\"minReaderVersion\\\":1}}\\n{\\\"metaData\\\":{\\\"id\\\":\\\"f8d5c169-3d01-4ca3-ad9e-7dc3355aedb2\\\",\\\"format\\\":{\\\"provider\\\":\\\"parquet\\\"},\\\"schemaString\\\":\\\"{\\\\\\\"type\\\\\\\":\\\\\\\"struct\\\\\\\",\\\\\\\"fields\\\\\\\":[{\\\\\\\"name\\\\\\\":\\\\\\\"eventTime\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"timestamp\\\\\\\",\\\\\\\"nullable\\\\\\\":true,\\\\\\\"metadata\\\\\\\":{}},{\\\\\\\"name\\\\\\\":\\\\\\\"date\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"date\\\\\\\",\\\\\\\"nullable\\\\\\\":true,\\\\\\\"metadata\\\\\\\":{}}]}\\\",\\\"partitionColumns\\\":[\\\"date\\\"]}}\\n{\\\"file\\\":{\\\"url\\\":\\\"https://\u003cs3-bucket-name\u003e.s3.us-west-2.amazonaws.com/delta-exchange-test/table2/date%3D2021-04-28/part-00000-8b0086f2-7b27-4935-ac5a-8ed6215a6640.c000.snappy.parquet?X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Date=20210501T010516Z\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Expires=900\u0026X-Amz-Credential=AKIAISZRDL4Q4Q7AIONA%2F20210501%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Signature=97b6762cfd8e4d7e94b9d707eff3faf266974f6e7030095c1d4a66350cfd892e\\\",\\\"id\\\":\\\"8b0086f2-7b27-4935-ac5a-8ed6215a6640\\\",\\\"partitionValues\\\":{\\\"date\\\":\\\"2021-04-28\\\"},\\\"size\\\":573,\\\"stats\\\":\\\"{\\\\\\\"numRecords\\\\\\\":1,\\\\\\\"minValues\\\\\\\":{\\\\\\\"eventTime\\\\\\\":\\\\\\\"2021-04-28T23:33:57.955Z\\\\\\\"},\\\\\\\"maxValues\\\\\\\":{\\\\\\\"eventTime\\\\\\\":\\\\\\\"2021-04-28T23:33:57.955Z\\\\\\\"},\\\\\\\"nullCount\\\\\\\":{\\\\\\\"eventTime\\\\\\\":0}}\\\"}}\\n{\\\"file\\\":{\\\"url\\\":\\\"https://\u003cs3-bucket-name\u003e.s3.us-west-2.amazonaws.com/delta-exchange-test/table2/date%3D2021-04-28/part-00000-591723a8-6a27-4240-a90e-57426f4736d2.c000.snappy.parquet?X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Date=20210501T010516Z\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Expires=899\u0026X-Amz-Credential=AKIAISZRDL4Q4Q7AIONA%2F20210501%2Fus-west-2%2Fs3%2Faws4_request\u0026X-Amz-Signature=0f7acecba5df7652457164533a58004936586186c56425d9d53c52db574f6b62\\\",\\\"id\\\":\\\"591723a8-6a27-4240-a90e-57426f4736d2\\\",\\\"partitionValues\\\":{\\\"date\\\":\\\"2021-04-28\\\"},\\\"size\\\":573,\\\"stats\\\":\\\"{\\\\\\\"numRecords\\\\\\\":1,\\\\\\\"minValues\\\\\\\":{\\\\\\\"eventTime\\\\\\\":\\\\\\\"2021-04-28T23:33:48.719Z\\\\\\\"},\\\\\\\"maxValues\\\\\\\":{\\\\\\\"eventTime\\\\\\\":\\\\\\\"2021-04-28T23:33:48.719Z\\\\\\\"},\\\\\\\"nullCount\\\\\\\":{\\\\\\\"eventTime\\\\\\\":0}}\\\"}}\\n\"}}}}\n",
			"canonicalURL": "/github.com/delta-incubator/riverbank@50fa313278289aec79f29fef2994fc3bd4838254/-/blob/apidocs/api-description.json",
			"externalURLs": [
				{
					"url": "https://github.com/delta-incubator/riverbank/blob/50fa313278289aec79f29fef2994fc3bd4838254/apidocs/api-description.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 1: cannot unmarshal !!str `A long ...` into ogen.Parameter; yaml: line 1: cannot unmarshal !!str `A long ...` into ogen.Parameter"
}