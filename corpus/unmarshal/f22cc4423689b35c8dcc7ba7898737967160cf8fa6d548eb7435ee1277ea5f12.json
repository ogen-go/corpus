{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/adzerk/adzerk-api-specification"
		},
		"file": {
			"name": "openapi-3.yaml",
			"size": 0,
			"path": "management/openapi-3.yaml",
			"byteSize": 53698,
			"content": "openapi: 3.0.1\ninfo:\n  title: Adzerk Management API\n  description: Adzerk Management API\n  version: '1.0'\nservers:\n  - url: 'https://api.adzerk.net'\ntags:\n  - name: advertisers\n    description: Manage Advertisers\n  - name: campaigns\n    description: Manage Campaigns\n  - name: flights\n    description: Manage Flights\n  - name: creatives\n    description: Manage Creatives\n  - name: ads\n    description: Manage Ads (Creative/Flight Maps)\n  - name: creative templates\n    description: Manage Creative Templates\n  - name: flight categories\n    description: Flight Categories\n  - name: site zone targeting\n    description: Site/Zone Targeting\n  - name: geo targeting\n    description: Geo Targeting\n  - name: channels\n    description: Channels\n  - name: sites\n    description: Sites\n  - name: channel site maps\n    description: Channel Site Maps\n  - name: zones\n    description: Zones\n  - name: ad types\n    description: Ad Types\n  - name: priorities\n    description: Priorities\npaths:\n  /v1/advertiser:\n    post:\n      tags:\n        - advertisers\n      description: Create Advertiser\n      operationId: createAdvertiser\n      security:\n        - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n      responses:\n        200:\n          description: Advertiser Created\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/advertiser.yaml#/schemas/Advertiser'\n    get:\n      tags:\n        - advertisers\n      description: List Advertisers\n      operationId: listAdvertisers\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - name: pageSize\n          in: query\n          description: The size of the page to be returned\n          required: false\n          schema:\n            type: integer\n            format: int32\n            nullable: true\n        - name: page\n          in: query\n          description: The page number to be returned\n          required: false\n          schema:\n            type: integer\n            format: int32\n            nullable: true\n      responses:\n        200:\n          description: Paged list of Advertisers\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/advertiser.yaml#/schemas/AdvertiserList'\n  '/v1/advertiser/{advertiserId}':\n    parameters:\n      - name: advertiserId\n        in: path\n        description: Id of the Advertiser to update\n        required: true\n        schema:\n          type: integer\n    put:\n      tags:\n        - advertisers\n      description: Update Advertiser\n      operationId: updateAdvertiser\n      security:\n        - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n      responses:\n        200:\n          description: Updated Advertiser\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/advertiser.yaml#/schemas/Advertiser'\n    get:\n      tags:\n        - advertisers\n      description: Get a single Advertiser by Id\n      operationId: getAdvertiser\n      security:\n        - ApiKeyAuth: []\n      responses:\n        200:\n          description: The Advertiser\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/advertiser.yaml#/schemas/Advertiser'\n  /v1/advertiser/search:\n    post:\n      tags:\n        - advertisers\n      description: Search Advertisers\n      operationId: searchAdvertisers\n      security:\n        - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: './schemas/advertiser.yaml#/schemas/AdvertiserSearch'\n      responses:\n        200:\n          description: Paged list of Advertisers\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/advertiser.yaml#/schemas/AdvertiserList'\n  '/v1/advertiser/{advertiserId}/trackingCode':\n    get:\n      tags:\n        - advertisers\n      description: Get Tracking Code for an Advertiser\n      operationId: getTrackingCode\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - name: advertiserId\n          in: path\n          description: Id of the Advertiser to generate Tracking Code for\n          required: true\n          schema:\n            type: integer\n      responses:\n        200:\n          description: Tracking Code\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/advertiser.yaml#/schemas/TrackingPixel'\n  /v1/campaign:\n    post:\n      tags:\n        - campaigns\n      description: Create Campaign\n      operationId: createCampaign\n      security:\n        - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n      responses:\n        200:\n          description: Campaign Created\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/campaign.yaml#/schemas/Campaign'\n    get:\n      tags:\n        - campaigns\n      description: List Campaigns\n      operationId: listCampaigns\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - name: pageSize\n          in: query\n          description: The size of the page to be returned\n          required: false\n          schema:\n            type: integer\n            format: int32\n            nullable: true\n        - name: page\n          in: query\n          description: The page number to be returned\n          required: false\n          schema:\n            type: integer\n            format: int32\n            nullable: true\n      responses:\n        200:\n          description: Paged list of Campaigns\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/campaign.yaml#/schemas/CampaignList'\n  '/v1/campaign/{campaignId}':\n    put:\n      tags:\n        - campaigns\n      description: Update Campaign\n      operationId: updateCampaign\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - name: campaignId\n          in: path\n          description: Id of the Campaign to update\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n      responses:\n        200:\n          description: Updated Campaign\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/campaign.yaml#/schemas/Campaign'\n    get:\n      tags:\n        - campaigns\n      description: Get a single Campaign by Id\n      operationId: getCampaign\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - name: campaignId\n          in: path\n          description: Id of the Campaign to get\n          required: true\n          schema:\n            type: integer\n      responses:\n        200:\n          description: The Campaign\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/campaign.yaml#/schemas/Campaign'\n  /v1/campaign/search:\n    post:\n      tags:\n        - campaigns\n      description: Search Campaigns\n      operationId: searchCampaigns\n      security:\n        - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: './schemas/campaign.yaml#/schemas/CampaignSearch'\n      responses:\n        200:\n          description: Paged list of Campaigns\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/campaign.yaml#/schemas/CampaignList'\n  '/v1/campaign/{campaignId}/flight':\n    get:\n      tags:\n        - flights\n      description: List Flights For a Campaign\n      operationId: listFlightsForCampaign\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - name: campaignId\n          in: path\n          description: Id of the Campaign to get\n          required: true\n          schema:\n            type: integer\n      responses:\n        200:\n          description: Paged list of Flights\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/flight.yaml#/schemas/FlightList'\n  /v1/flight:\n    post:\n      tags:\n        - flights\n      description: Create Flight\n      operationId: createFlight\n      security:\n        - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n      responses:\n        200:\n          description: Flight Created\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/flight.yaml#/schemas/Flight'\n    get:\n      tags:\n        - flights\n      description: List Flights\n      operationId: listFlights\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - name: isArchived\n          in: query\n          description: Set to `true` if you only want archived Flights\n          required: false\n          schema:\n            type: boolean\n            nullable: true\n        - name: isActive\n          in: query\n          description: Set to `true` if you only want active Flights\n          required: false\n          schema:\n            type: boolean\n            nullable: true\n        - name: pageSize\n          in: query\n          description: The size of the page to be returned\n          required: false\n          schema:\n            type: integer\n            format: int32\n            nullable: true\n        - name: page\n          in: query\n          description: The page number to be returned\n          required: false\n          schema:\n            type: integer\n            format: int32\n            nullable: true\n      responses:\n        200:\n          description: Paged list of Flights\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/flight.yaml#/schemas/FlightList'\n  '/v1/flight/{flightId}':\n    parameters:\n      - name: flightId\n        in: path\n        description: Id of the Flight to update\n        required: true\n        schema:\n          type: integer\n    put:\n      tags:\n        - flights\n      description: Update Flight\n      operationId: updateFlight\n      security:\n        - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n      responses:\n        200:\n          description: Updated Flight\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/flight.yaml#/schemas/Flight'\n    get:\n      tags:\n        - flights\n      description: Get Flight\n      operationId: getFlight\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - name: excludeAds\n          in: query\n          description: Flag to exclude Ads (Creative/Flight Maps) from the results\n          schema:\n            type: boolean\n      responses:\n        200:\n          description: The Flight\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/flight.yaml#/schemas/Flight'\n  '/v1/fast/flight':\n    get:\n      tags:\n        - flights\n      description: Filtered Flights\n      operationId: filterFlights\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - name: isActive\n          in: query\n          schema:\n            type: boolean\n        - name: isArchived\n          in: query\n          schema:\n            type: boolean\n        - name: beforeStartDate\n          in: query\n          schema:\n            type: string\n            format: date-time\n        - name: afterStartDate\n          in: query\n          schema:\n            type: string\n            format: date-time\n        - name: beforeEndDate\n          in: query\n          schema:\n            type: string\n            format: date-time\n        - name: afterEndDate\n          in: query\n          schema:\n            type: string\n            format: date-time\n        - name: NoEndDate\n          in: query\n          schema:\n            type: boolean\n        - name: name\n          in: query\n          schema:\n            type: string\n        - name: nameContains\n          in: query\n          schema:\n            type: string\n      responses:\n        200:\n          description: Line-delimited JSON objects\n          content:\n            text:\n              schema:\n                type: string\n  /v1/creative:\n    post:\n      tags:\n        - creatives\n      description: Create Creative\n      operationId: createCreative\n      security:\n        - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n      responses:\n        200:\n          description: Creative Created\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/creative.yaml#/schemas/Creative'\n  '/v1/creative/{CreativeId}/upload':\n    post:\n      tags:\n        - creatives\n      description: Upload Creative Image\n      operationId: uploadCreativeImage\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - name: CreativeId\n          in: path\n          description: The Id of the Creative to upload an image for\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - name: sizeOverride\n          in: query\n          description: Add this to upload an image that is a different dimension than the creative's `adTypeId`\n          schema:\n            type: boolean\n        - name: fieldName\n          in: query\n          description: Specifies which image field (of Type `File`) the file will be uploaded to. Can be used with single-image and multiple-image templates. If a template has only one image, `fieldName` is not required.\n          schema:\n            type: string\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                file:\n                  type: string\n                  format: binary\n      responses:\n        200:\n          description: Creative Updated\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/creative.yaml#/schemas/Creative'\n  '/v1/creative/{CreativeId}':\n    parameters:\n      - name: CreativeId\n        in: path\n        description: The Id of the Creative to update\n        required: true\n        schema:\n          type: integer\n          format: int32\n    put:\n      tags:\n        - creatives\n      description: Update Creative\n      operationId: updateCreative\n      security:\n        - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n      responses:\n        200:\n          description: Creative Updated\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/creative.yaml#/schemas/Creative'\n    get:\n      tags:\n        - creatives\n      description: Get Creative\n      operationId: getCreative\n      security:\n        - ApiKeyAuth: []\n      responses:\n        200:\n          description: The requested Creative\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/creative.yaml#/schemas/Creative'\n  '/v1/advertiser/{AdvertiserId}/creatives':\n    get:\n      tags:\n        - creatives\n      description: List Creatives for Advertiser\n      operationId: listCreativesForAdvertiser\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - name: AdvertiserId\n          in: path\n          description: Advertiser Id to list Creatives for\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - name: pageSize\n          in: query\n          description: The size of the page to be returned\n          required: false\n          schema:\n            type: integer\n            format: int32\n            nullable: true\n        - name: page\n          in: query\n          description: The page number to be returned\n          required: false\n          schema:\n            type: integer\n            format: int32\n            nullable: true\n      responses:\n        200:\n          description: Paged list of Creatives for the Advertiser\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/creative.yaml#/schemas/CreativeList'\n  '/v1/flight/{flightId}/creative':\n    parameters:\n      - name: flightId\n        in: path\n        description: The Flight to be mapped\n        required: true\n        schema:\n          type: integer\n          format: int32\n    post:\n      tags:\n        - ads\n      description: Create new Ad\n      operationId: createAd\n      security:\n        - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n      responses:\n        200:\n          description: The newly created Ad\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/ad.yaml#/schemas/Ad'\n  '/v1/flight/{flightId}/creatives':                \n    get:\n      tags:\n        - ads\n      description: List Ads for a Flight\n      operationId: listAdsForFlight\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - name: flightId\n          in: path\n          description: The Flight to be mapped\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - name: pageSize\n          in: query\n          description: The size of the page to be returned\n          required: false\n          schema:\n            type: integer\n            format: int32\n            nullable: true\n        - name: page\n          in: query\n          description: The page number to be returned\n          required: false\n          schema:\n            type: integer\n            format: int32\n            nullable: true\n      responses:\n        200:\n          description: A paged list of Ads\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/ad.yaml#/schemas/AdList'\n  '/v1/flight/{flightId}/creative/{adId}':\n    put:\n      tags:\n        - ads\n      description: Update an existing Ad\n      operationId: updateAd\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - name: flightId\n          in: path\n          description: The Id of the Flight for the Ad to be updated\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - name: adId\n          in: path\n          description: The Id of the Ad to be updated\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n      responses:\n        200:\n          description: The updated Ad\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/ad.yaml#/schemas/Ad'\n  '/v1/ad/{adId}':\n    get:\n      tags:\n        - ads\n      description: Get an existing Ad\n      operationId: getAd\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - name: adId\n          in: path\n          description: The Id of the Ad to get\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        200:\n          description: The existing Ad\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/ad.yaml#/schemas/Ad'\n  '/v1/ad/{adId}/tracking-urls':\n    get:\n      tags:\n        - ads\n      description: Get the tracking pixel and click Url for an Ad\n      operationId: getAdTrackingUrls\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - name: adId\n          in: path\n          description: The Id of the Ad to get\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - name: siteId\n          in: query\n          description: The site in your network where the impression and/or click should be tracked. The site must be eligible to serve the ad (i.e. the ad's flight belongs to a channel the site is associated with).\n          schema:\n            type: integer\n            format: int32\n        - name: zoneId\n          in: query\n          description: An optional zone where the impression and/or click should be tracked. Must belong to the `siteid`.\n          schema:\n            type: integer\n            format: int32\n        - name: keywords\n          in: query\n          description: A comma separated string of keywords, like `foo,bar,baz`, that will be tracked in reporting with the click and/or impression. Keywords must not contain [disallowed characters defined in the keyword documentation](https://dev.adzerk.com/docs/keyword-targeting#section-keywords-and-special-characters).\n          schema:\n            type: string\n      responses:\n        200:\n          description: The requested tracking urls\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/ad.yaml#/schemas/TrackingDetails'\n  '/v2/creative-templates':\n    post:\n      tags:\n        - creative templates\n      description: Create new Creative Template\n      operationId: createCreativeTemplate\n      security:\n        - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n      responses:\n        200:\n          description: The newly created Creative Template\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/creative-template.yaml#/schemas/CreativeTemplate'\n    get:\n      tags:\n        - creative templates\n      description: List Creative Templates\n      operationId: listCreativeTemplates\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - name: pageSize\n          in: query\n          description: The size of the page to be returned\n          required: false\n          schema:\n            type: integer\n            format: int32\n            nullable: true\n        - name: page\n          in: query\n          description: The page number to be returned\n          required: false\n          schema:\n            type: integer\n            format: int32\n            nullable: true\n      responses:\n        200:\n          description: A paged list of Creative Templates\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/creative-template.yaml#/schemas/CreativeTemplateList'\n  '/v2/creative-templates/{creativeTemplateId}':\n    get:\n      tags:\n        - creative templates\n      description: Get an existing Creative Template\n      operationId: getCreativeTemplate\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - name: creativeTemplateId\n          in: path\n          description: The Id of the Creative Template to update\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        200:\n          description: The Creative Template\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/creative-template.yaml#/schemas/CreativeTemplate'\n  '/v2/creative-templates/{creativeTemplateId}/update':\n    post:\n      tags:\n        - creative templates\n      description: Update an existing Creative Template\n      operationId: updateCreativeTemplate\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - name: creativeTemplateId\n          in: path\n          description: The Id of the Creative Template to update\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n      responses:\n        200:\n          description: The updated Creative Template\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/creative-template.yaml#/schemas/CreativeTemplate'\n  '/v1/flight/{flightId}/category':\n    post:\n      tags:\n        - flight categories\n      operationId: createFlightCategory\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - name: flightId\n          description: The Flight Id to create the Category for\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n      responses:\n        200:\n          description: The newly created Flight Category\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/flight-category.yaml#/schemas/FlightCategory'\n  '/v1/flight/{flightId}/categories':\n    get:\n      tags:\n        - flight categories\n      operationId: getFlightCategoriesForFlight\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - name: flightId\n          description: The Flight Id to get the Categories for\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - name: pageSize\n          in: query\n          description: The size of the page to be returned\n          required: false\n          schema:\n            type: integer\n            format: int32\n            nullable: true\n        - name: page\n          in: query\n          description: The page number to be returned\n          required: false\n          schema:\n            type: integer\n            format: int32\n            nullable: true\n      responses:\n        200:\n          description: A paged list of Flight Categories\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/flight-category.yaml#/schemas/FlightCategoryList'\n  /v1/categories:\n    get:\n      tags:\n        - flight categories\n      operationId: getFlightCategories\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - name: pageSize\n          in: query\n          description: The size of the page to be returned\n          required: false\n          schema:\n            type: integer\n            format: int32\n            nullable: true\n        - name: page\n          in: query\n          description: The page number to be returned\n          required: false\n          schema:\n            type: integer\n            format: int32\n            nullable: true\n      responses:\n        200:\n          description: A paged list of Flight Categories\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/flight-category.yaml#/schemas/FlightCategoryList'\n  '/v1/flight/{flightId}/category/{flightCategoryId}/delete':\n    get:\n      tags:\n        - flight categories\n      operationId: deleteFlightCategory\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - name: flightId\n          description: The Flight Id to delete the Category for\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - name: flightCategoryId\n          description: The Flight Category Id to delete\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        200:\n          description: \"Successfully Deleted\"\n  '/v1/flight/{flightId}/sitezonetargeting':\n    post:\n      tags:\n        - site zone targeting\n      operationId: createSiteZoneTargeting\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - name: flightId\n          description: The Flight Id to create the Site Zone Targeting for\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n      responses:\n        200:\n          description: The newly created Site/Zone Targeting\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/site-zone.yaml#/schemas/SiteZone'\n  '/v1/flight/{flightId}/sitezonetargeting/{siteZoneTargetingId}':\n    parameters:\n      - name: flightId\n        description: The Flight Id to update the Site Zone Targeting for\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int32\n      - name: siteZoneTargetingId\n        description: The Id of the Site Zone Targeting to update\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int32\n    put:\n      tags:\n        - site zone targeting\n      operationId: updateSiteZoneTargeting\n      security:\n        - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n      responses:\n        200:\n          description: The newly updated Site/Zone Targeting\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/site-zone.yaml#/schemas/SiteZone'\n    get:\n      tags:\n        - site zone targeting\n      operationId: getSiteZoneTargeting\n      security:\n        - ApiKeyAuth: []\n      responses:\n        200:\n          description: The Site/Zone Targeting\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/site-zone.yaml#/schemas/SiteZone'\n  '/v1/flight/{flightId}/sitezonetargeting/{siteZoneTargetingId}/delete':\n    parameters:\n      - name: flightId\n        description: The Flight Id to update the Site Zone Targeting for\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int32\n      - name: siteZoneTargetingId\n        description: The Id of the Site Zone Targeting to update\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int32\n    get:\n      tags:\n        - site zone targeting\n      operationId: deleteSiteZoneTargeting\n      security:\n        - ApiKeyAuth: []\n      responses:\n        200:\n          description: Successfully Deleted\n  '/v1/flight/{flightId}/geotargeting':\n    post:\n      tags:\n        - geo targeting\n      operationId: createGeoTarget\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - name: flightId\n          description: The Flight Id to update the Site Zone Targeting for\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n      responses:\n        200:\n          description: The newly created Geo Target\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/geo-target.yaml#/schemas/GeoTarget'\n  '/v1/flight/{flightId}/geotargeting/{locationId}':\n    parameters:\n      - name: flightId\n        description: The Flight Id to update the Site Zone Targeting for\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int32\n      - name: locationId\n        description: The Id of the Site Zone Targeting to update\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int32\n    put:\n      tags:\n        - geo targeting\n      operationId: updateGeoTarget\n      security:\n        - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n      responses:\n        200:\n          description: The updated Geo Target\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/geo-target.yaml#/schemas/GeoTarget'\n    get:\n      tags:\n        - geo targeting\n      operationId: getGeoTarget\n      security:\n        - ApiKeyAuth: []\n      responses:\n        200:\n          description: The Geo Target\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/geo-target.yaml#/schemas/GeoTarget'\n  '/v1/flight/{flightId}/geotargeting/{locationId}/delete':\n    get:\n      tags:\n        - geo targeting\n      operationId: deleteGeoTarget\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - name: flightId\n          description: The Flight Id to update the Site Zone Targeting for\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - name: locationId\n          description: The Id of the Site Zone Targeting to update\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        200:\n          description: Successfully Deleted\n  /v1/countries:\n    get:\n      tags:\n        - geo targeting\n      operationId: listCountries\n      security:\n        - ApiKeyAuth: []\n      responses:\n        200:\n          description: A list of countries\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: './schemas/geo-target.yaml#/schemas/Country'\n  '/v1/country/{countryCode}/regions?version=2':\n    get:\n      tags:\n        - geo targeting\n      operationId: listRegionsForCountry\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - name: countryCode\n          description: The Country Code to list Regions for\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: A country with Regions included\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/geo-target.yaml#/schemas/Country'\n  '/v1/region/{regionCode}':\n    get:\n      tags:\n        - geo targeting\n      operationId: listMetroCodesInRegion\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - name: regionCode\n          description: The Region Code to get Metros for\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: A list of Metros\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: './schemas/geo-target.yaml#/schemas/Metro'\n  /v1/channel:\n    post:\n      tags:\n        - channels\n      operationId: createChannel\n      security:\n        - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n      responses:\n        200:\n          description: The newly created channel\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/channel.yaml#/schemas/Channel'\n    get:\n      tags:\n        - channels\n      operationId: listChannels\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - name: pageSize\n          in: query\n          description: The size of the page to be returned\n          required: false\n          schema:\n            type: integer\n            format: int32\n            nullable: true\n        - name: page\n          in: query\n          description: The page number to be returned\n          required: false\n          schema:\n            type: integer\n            format: int32\n            nullable: true\n      responses:\n        200:\n          description: A paged list of Channels\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/channel.yaml#/schemas/ChannelList'\n\n  '/v1/channel/{channelId}':\n    parameters:\n      - name: channelId\n        description: The Channel Id\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int32\n    put:\n      tags:\n        - channels\n      operationId: updateChannel\n      security:\n        - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n      responses:\n        200:\n          description: The updated Channel\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/channel.yaml#/schemas/Channel'\n    get:\n      tags:\n        - channels\n      operationId: getChannel\n      security:\n        - ApiKeyAuth: []\n      responses:\n        200:\n          description: The Channel\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/channel.yaml#/schemas/Channel'\n  '/v1/channel/{channelId}/priorities':\n    get:\n      tags:\n        - channels\n      operationId: getPrioritiesForChannel\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - name: channelId\n          in: path\n          description: The Channel Id to get Priorities for\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        200:\n          description: A list of Priorities\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: './schemas/priority.yaml#/schemas/Priority'\n  '/v1/channel/{channelId}/delete':\n    get:\n      tags:\n        - channels\n      operationId: deleteChannel\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - name: channelId\n          in: path\n          description: The Channel Id to delete\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        200:\n          description: Successfully Deleted\n  /v1/site:\n    post:\n      tags:\n        - sites\n      operationId: createSite\n      security:\n        - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n      responses:\n        200:\n          description: The newly created Site\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/site.yaml#/schemas/Site'\n    get:\n      tags:\n        - sites\n      operationId: listSites\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - name: pageSize\n          in: query\n          description: The size of the page to be returned\n          required: false\n          schema:\n            type: integer\n            format: int32\n            nullable: true\n        - name: page\n          in: query\n          description: The page number to be returned\n          required: false\n          schema:\n            type: integer\n            format: int32\n            nullable: true\n      responses:\n        200:\n          description: A paged list of Sites\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/site.yaml#/schemas/SiteList'\n  '/v1/site/{siteId}':\n    parameters:\n      - name: siteId\n        in: path\n        description: The Site Id\n        required: true\n        schema:\n          type: integer\n          format: int32\n    put:\n      tags:\n        - sites\n      operationId: updateSite\n      security:\n        - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n      responses:\n        200:\n          description: The updated Site\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/site.yaml#/schemas/Site'\n    get:\n      tags:\n        - sites\n      operationId: getSite\n      security:\n        - ApiKeyAuth: []\n      responses:\n        200:\n          description: The Site\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/site.yaml#/schemas/Site'\n  /v1/fast/site:\n    get:\n      tags:\n        - sites\n      operationId: filterSites\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - name: titleLike\n          in: query\n          description: Filters the stream of sites based on the Title. This is a simple match - if the string provided in the query parameter is present anywhere in a site's Title, that site will be returned in the results.\n          required: false\n          schema:\n            type: string\n            nullable: true\n        - name: urlLike\n          in: query\n          description: Filters the stream of sites based on the Url. This is a simple match - if the string provided in the query parameter is present anywhere in a site's Url, that site will be returned in the results.\n          required: false\n          schema:\n            type: string\n            nullable: true\n      responses:\n        200:\n          description: A line-delimited string of JSON encoded sites\n          content:\n            text:\n              schema:\n                type: string\n  /v1/channelSite:\n    post:\n      tags:\n        - channel site maps\n      operationId: createChannelSiteMap\n      security:\n        - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n      responses:\n        200:\n          description: The newly created Channel/Site Map\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/channel-site-map.yaml#/schemas/ChannelSiteMap'\n    get:\n      tags:\n        - channel site maps\n      operationId: listChannelSiteMaps\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - name: pageSize\n          in: query\n          description: The size of the page to be returned\n          required: false\n          schema:\n            type: integer\n            format: int32\n            nullable: true\n        - name: page\n          in: query\n          description: The page number to be returned\n          required: false\n          schema:\n            type: integer\n            format: int32\n            nullable: true\n      responses:\n        200:\n          description: A paged list of Channel/Site Maps\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/channel-site-map.yaml#/schemas/ChannelSiteMapList'\n    put:\n      tags:\n        - channel site maps\n      operationId: updateChannelSiteMap\n      security:\n        - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n      responses:\n        200:\n          description: The updated Channel/Site Map\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/channel-site-map.yaml#/schemas/ChannelSiteMap'\n  '/v1/channel/{channelId}/site/{siteId}':\n    get:\n      tags:\n        - channel site maps\n      operationId: getChannelSiteMap\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - name: channelId\n          in: path\n          description: The Channel Id\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - name: siteId\n          in: path\n          description: The Site Id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        200:\n          description: The Channel/Site Map\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/channel-site-map.yaml#/schemas/ChannelSiteMap'\n  '/v1/channelsInSite/{siteId}':\n    get:\n      tags:\n        - channel site maps\n      operationId: listChannelsForSite\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - name: siteId\n          in: path\n          description: The Site Id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        200:\n          description: A list of Channel Ids\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/channel-site-map.yaml#/schemas/ChannelList'\n  '/v1/channel/{channelId}/site/{siteId}/delete':\n    get:\n      tags:\n        - channel site maps\n      operationId: deleteChannelSiteMap\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - name: channelId\n          in: path\n          description: The Channel Id\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - name: siteId\n          in: path\n          description: The Site Id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        200:\n          description: Successfully Deleted\n  /v1/zone:\n    post:\n      tags:\n        - zones\n      operationId: createZone\n      security:\n        - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n      responses:\n        200:\n          description: The newly created Zone\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/zone.yaml#/schemas/Zone'\n    get:\n      tags:\n        - zones\n      operationId: listZones\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - name: pageSize\n          in: query\n          description: The size of the page to be returned\n          required: false\n          schema:\n            type: integer\n            format: int32\n            nullable: true\n        - name: page\n          in: query\n          description: The page number to be returned\n          required: false\n          schema:\n            type: integer\n            format: int32\n            nullable: true\n      responses:\n        200:\n          description: The newly created Zone\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/zone.yaml#/schemas/ZoneList'\n  '/v1/zone/{zoneId}':\n    parameters:\n      - name: zoneId\n        in: path\n        description: The Site Id\n        required: true\n        schema:\n          type: integer\n          format: int32\n    get:\n      tags:\n        - zones\n      operationId: getZone\n      security:\n        - ApiKeyAuth: []\n      responses:\n        200:\n          description: The Zone\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/zone.yaml#/schemas/Zone'\n    put:\n      tags:\n        - zones\n      operationId: updateZone\n      security:\n        - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n      responses:\n        200:\n          description: The updated Zone\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/zone.yaml#/schemas/Zone'\n  /v1/adtypes:\n    post:\n      tags:\n        - ad types\n      operationId: createAdType\n      security:\n        - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n      responses:\n        200:\n          description: The newly created Ad Type\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/ad-type.yaml#/schemas/AdType'\n    get:\n      tags:\n        - ad types\n      operationId: listAdTypes\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - name: pageSize\n          in: query\n          description: The size of the page to be returned\n          required: false\n          schema:\n            type: integer\n            format: int32\n            nullable: true\n        - name: page\n          in: query\n          description: The page number to be returned\n          required: false\n          schema:\n            type: integer\n            format: int32\n            nullable: true\n      responses:\n        200:\n          description: A paged list of Ad Types\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/ad-type.yaml#/schemas/AdTypeList'\n  '/v1/channel/{channelId}/adtypes':\n    parameters:\n      - name: channelId\n        in: path\n        description: The Channel Id\n        required: true\n        schema:\n          type: integer\n          format: int32\n    post:\n      tags:\n        - ad types\n      operationId: createAdTypeForChannel\n      security:\n        - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n      responses:\n        200:\n          description: The newly created Ad Type\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/ad-type.yaml#/schemas/AdType'\n    get:\n      tags:\n        - ad types\n      operationId: listAdTypesForChannel\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - name: pageSize\n          in: query\n          description: The size of the page to be returned\n          required: false\n          schema:\n            type: integer\n            format: int32\n            nullable: true\n        - name: page\n          in: query\n          description: The page number to be returned\n          required: false\n          schema:\n            type: integer\n            format: int32\n            nullable: true\n      responses:\n        200:\n          description: A paged list of Ad Types\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/ad-type.yaml#/schemas/AdTypeList'\n  '/v1/adtypes/{adTypeId}/delete':\n    get:\n      tags:\n        - ad types\n      operationId: deleteAdType\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - name: adTypeId\n          in: path\n          description: The Ad Type Id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        200:\n          description: Successfully Deleted\n  '/v1/channel/{channelId}/adtypes/{adTypeId}/delete':\n    get:\n      tags:\n        - ad types\n      operationId: deleteAdTypeForChannel\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - name: channelId\n          in: path\n          description: The Channel Id\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - name: adTypeId\n          in: path\n          description: The Ad Type Id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        200:\n          description: Successfully Deleted\n  /v1/priority:\n    post:\n      tags:\n        - priorities\n      operationId: createPriority\n      security:\n        - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n      responses:\n        200:\n          description: The newly created priority\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/priority.yaml#/schemas/Priority'\n    get:\n      tags:\n        - priorities\n      operationId: listPriorities\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - name: pageSize\n          in: query\n          description: The size of the page to be returned\n          required: false\n          schema:\n            type: integer\n            format: int32\n            nullable: true\n        - name: page\n          in: query\n          description: The page number to be returned\n          required: false\n          schema:\n            type: integer\n            format: int32\n            nullable: true\n      responses:\n        200:\n          description: A paged list of the Priorities\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/priority.yaml#/schemas/PriorityList'\n  '/v1/priority/{priorityId}':\n    parameters:\n      - name: priorityId\n        in: path\n        description: The Channel Id\n        required: true\n        schema:\n          type: integer\n          format: int32\n    get:\n      tags:\n        - priorities\n      operationId: getPriority\n      security:\n        - ApiKeyAuth: []\n      responses:\n        200:\n          description: The Priority\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/priority.yaml#/schemas/Priority'\n    put:\n      tags:\n        - priorities\n      operationId: updatePriority\n      security:\n        - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n      responses:\n        200:\n          description: The updated priority\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/priority.yaml#/schemas/Priority'\n  '/v1/priority/{priorityId}/delete':\n    get:\n      tags:\n        - priorities\n      operationId: deletePriority\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - name: priorityId\n          in: path\n          description: The Channel Id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        200:\n          description: Successfully Deleted\n\ncomponents:\n  schemas:\n    CreativeTemplateUpdate:\n      $ref: './schemas/creative-template.yaml#/schemas/CreativeTemplateUpdate'\n  securitySchemes:\n    $ref: './components/security-schemes.yaml#/components/securitySchemes'",
			"canonicalURL": "/github.com/adzerk/adzerk-api-specification@25b2da9378e96562925f89165bfae045adbe912b/-/blob/management/openapi-3.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/adzerk/adzerk-api-specification/blob/25b2da9378e96562925f89165bfae045adbe912b/management/openapi-3.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 2016: cannot unmarshal !!str `./compo...` into ogen.SecurityScheme"
}