{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Szer/GiraffeGenerator"
		},
		"file": {
			"name": "specGeneralForNodaTime.yaml",
			"size": 0,
			"path": "tests/GiraffeGenerator.IntegrationTests/specs/specGeneralForNodaTime.yaml",
			"byteSize": 3893,
			"content": "openapi: \"3.0.0\"\ninfo:\n  title: Spec for general noda time testing\n  version: 1\npaths:\n  /id:\n    post:\n      operationId: postId\n      parameters:\n        - schema:\n            type: string\n            format: date\n          name: dateParam\n          in: query\n          required: false\n        - schema:\n            type: string\n            format: time\n          name: timeParam\n          in: query\n          required: false\n        - schema:\n            type: string\n            format: offset\n          name: offsetParam\n          in: query\n          required: false\n        - schema:\n            type: string\n            format: duration\n          name: durationParam\n          in: query\n          required: false\n        - schema:\n            type: string\n            format: instant\n          name: instantParam\n          in: query\n          required: false\n        - schema:\n            type: string\n            format: local-date-time\n          name: localDateTimeParam\n          in: query\n          required: false\n        - schema:\n            type: string\n            format: offset-date-time\n          name: offsetDateTimeParam\n          in: query\n          required: false\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/dataSetListInput'\n      responses:\n        '200':\n          description: returns input combined into a single object\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/dataSetListOutput'\ncomponents:\n  schemas:\n    forDefaultsTesting:\n      type: object\n      properties:\n        dateParamFromBody:\n          type: string\n          format: date\n          default: '2020-10-21'\n        timeParamFromBody:\n          type: string\n          format: time\n          default: '19:58:12'\n        offsetParamFromBody:\n          type: string\n          format: offset\n          default: '-14:55:01'\n        timeZoneParamFromBody:\n          type: string\n          format: time-zone\n          default: 'Europe/Moscow'\n        periodParamFromBody:\n          type: string\n          format: period\n          default: 'P13DT49H156M'\n        durationParamFromBody:\n          type: string\n          format: duration\n          default: '-364:36:00'\n        instantParamFromBody:\n          type: string\n          format: instant\n          default: '2020-10-21T16:59:12.0000001Z'\n        localDateTimeParamFromBody:\n          type: string\n          format: local-date-time\n          default: '2020-10-21T19:59:12.0000001'\n        offsetDateTimeParamFromBody:\n          type: string\n          format: offset-date-time\n          default: '2020-10-21T19:59:12.0000001+03:00'\n    dataSetListInput:\n      type: object\n      properties:\n        forDefaultsTesting:\n          $ref: '#/components/schemas/forDefaultsTesting'\n        zonedDateTime:\n          type: string\n          format: zoned-date-time\n      required:\n        - forDefaultsTesting\n        - zonedDateTime\n    dataSetListOutput:\n      type: object\n      properties:\n        dateParamFromQuery:\n          type: string\n          format: date\n        timeParamFromQuery:\n          type: string\n          format: time\n        offsetParamFromQuery:\n          type: string\n          format: offset\n        durationParamFromQuery:\n          type: string\n          format: duration\n        instantParamFromQuery:\n          type: string\n          format: instant\n        localDateTimeParamFromQuery:\n          type: string\n          format: local-date-time\n        offsetDateTimeParamFromQuery:\n          type: string\n          format: offset-date-time\n        forDefaultsTesting:\n          $ref: '#/components/schemas/forDefaultsTesting'\n        zonedDateTime:\n          type: string\n          format: zoned-date-time\n      required:\n        - forDefaultsTesting\n        - zonedDateTime"
		}
	},
	"Error": "unmarshal: json: cannot unmarshal number into Go struct field Info.info.version of type string"
}