{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/TheIOFoundation/ProjectLockdown"
		},
		"file": {
			"name": "api.yaml",
			"size": 0,
			"path": "API/Reference/api_v1/api.yaml",
			"byteSize": 2384,
			"content": "openapi: 3.0.0\nservers: \n  - url: https://api.projectlockdown.world\n    description: Project Lockdown API server (Swagger / OpenAPI)\ninfo:\n  description: \"Environment listing for territories\"\n  version: 1.0.0\n  title: Lockdown API\n  contact: \n    name: Project Lockdown API Support\n    email: Contact@projectlockdown.net\n    url: https://projectlockdown.world\ntags:\n  - name: Get Environment\n    description: Get all environments\n  - name: World\n    description: Only lockdown statuses for whole world\n  - name: By Measures\n    description: Specific NPIs for country\npaths:\n  /environment/{dsluid}/{module}:\n    get:\n      description: \"Environment listing for territories\"\n      tags:\n        name: Environment\n      summary: Environment\n      path:\n        - dsluid: ID of DSL\n          description: ID of DSL\n          in: int\n          required: false\n          schema:\n            type: int\n            format: int\n      responses:\n        \"200\":\n          description: \"List of Environemnts.\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    lockdown:\n                      $ref: '#/components/schemas/Environment'\n        default:\n          description: Unexpected error\ncomponents:\n  schemas:\n    Measure:\n      type: object\n      properties:\n        label:\n          type: string\n        name:\n          type: string\n        value:\n          type: string\n        '#date+start':\n          type: string\n          format: date\n        '#date+end':\n          type: string\n          format: date\n        '#meta+url':\n          type: string\n        '#country+code+iso3':\n          type: string\n    Environment:\n      type: object\n      properties:\n        iso:\n          type: string\n        max_gathering: \n          type: array\n          items:\n            $ref: '#/components/schemas/Environment'\n        measure:\n          type: array\n          items:\n            $ref: '#/components/schemas/Environment'\n        land:\n          type: array\n          items:\n            $ref: '#/components/schemas/Environment'\n        sea:\n          type: array\n          items:\n            $ref: '#/components/schemas/Environment'\n        flight:\n          type: array\n          items:\n            $ref: '#/components/schemas/Environment'"
		}
	},
	"Error": "unmarshal: json: line 1:1541: json: cannot unmarshal object into Go struct field Operation.paths.get.tags of type []string"
}