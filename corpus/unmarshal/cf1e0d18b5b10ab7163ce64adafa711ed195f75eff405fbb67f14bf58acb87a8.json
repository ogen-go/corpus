{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/swagger-api/apidom"
		},
		"file": {
			"name": "sample-api.yaml",
			"size": 0,
			"path": "packages/apidom-reference/test/parse/parsers/apidom-reference-parser-openapi-yaml-3-0/fixtures/sample-api.yaml",
			"byteSize": 7271,
			"content": "---\nopenapi: 3.0.3\ninfo:\n  title: Sample Pet Store App\n  description: This is a sample server for a pet store.\n  termsOfService: https://example.com/terms/\n  contact:\n    name: API Support\n    url: https://www.example.com/support\n    email: support@example.com\n  license:\n    name: Apache 2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0.html\n  version: 1.0.1\nservers:\n  - url: \"{username}.gigantic-server.com\"\n    description: Production server\n    variables:\n      username:\n        enum:\n          - demo\n          - demo1\n          - demo2\n        default: demo\n        description: This value is assigned by the service provider, in this example\n          `gigantic-server.com`\npaths:\n  \"/path1\":\n    summary: path1 summary\n    description: path1 description\n    get: {}\n    put:\n      tags:\n        - tag1\n        - tag2\n      summary: path2 components item summary\n      description: path2 components item description\n      externalDocs:\n        description: external documentation 1\n        url: https://example.com/external-doc1\n      operationId: path-1-put\n      parameters:\n        - name: parameter3\n          in: query\n          description: parameter3 description\n          required: false\n          deprecated: false\n          allowEmptyValue: true\n        - \"$ref\": \"#/components/parameters/parameter2\"\n      requestBody:\n        description: request body description\n        content:\n          application/json:\n            schema:\n              type: object\n            example:\n              a: b\n            examples:\n              example1:\n                summary: example 1 summary\n                description: example 1 description\n                value: c\n                externalValue: https://example1.com/\n              example2:\n                \"$ref\": \"#/components/examples/example3\"\n            encoding:\n              historyMetadata:\n                contentType: application/json\n                headers:\n                  X-Rate-Limit-Limit:\n                    description: x-rate limit description\n                    schema:\n                      type: integer\n                  Content-Type:\n                    \"$ref\": \"#/components/headers/Content-Type\"\n                style: simple\n                explode: true\n                allowReserved: true\n        required: true\n      responses:\n        '201':\n          \"$ref\": \"#/components/responses/201\"\n        default:\n          description: default response\n          content:\n            application/json: {}\n          links:\n            link1:\n              operationRef: https://example.com/external-link\n              operationId: operationId-1\n              parameters:\n                parameter1: \"{$url}\"\n              requestBody: \"{$method}\"\n              description: link 1 description\n              server: {}\n            link2:\n              \"$ref\": \"#/components/links/link3\"\n      callbacks:\n        myCallback1:\n          \"{$request.query.queryUrl}\":\n            post:\n              requestBody:\n                description: Callback payload\n                content:\n                  application/json:\n                    schema:\n                      type: object\n              responses:\n                '200':\n                  description: callback successfully processed\n        myCallback2:\n          \"$ref\": \"#/components/callbacks/callback1\"\n      deprecated: false\n      security:\n        - petstore_auth:\n            - write:pets\n            - read:pets\n      servers:\n        - url: \"{username}.gigantic-server.com\"\n          description: Production server\n          variables:\n            username:\n              enum:\n                - demo\n                - demo1\n                - demo2\n              default: demo\n              description: This value is assigned by the service provider, in this example\n                `gigantic-server.com`\n    post:\n      requestBody:\n        \"$ref\": \"#/components/requestBodies/requestBody1\"\n      responses:\n        default:\n          \"$ref\": \"#/components/responses/201\"\n    delete: {}\n    options: {}\n    head: {}\n    patch: {}\n    trace: {}\n    servers:\n      - url: \"{username}.gigantic-server.com\"\n        description: Production server\n        variables:\n          username:\n            enum:\n              - demo\n              - demo1\n              - demo2\n            default: demo\n            description: This value is assigned by the service provider, in this example\n              `gigantic-server.com`\n    parameters:\n      - name: parameter1\n        in: query\n        description: parameter1 description\n        required: false\n        deprecated: false\n        allowEmptyValue: true\n      - \"$ref\": \"#/components/parameters/parameter2\"\n  \"/path2\":\n    \"$ref\": \"#/components/pathItems/path2\"\ncomponents:\n  schemas:\n    schema1:\n      type: object\n    schema2:\n      \"$ref\": \"#/components/schemas/schema1\"\n  responses:\n    '201':\n      description: 201 description\n      headers:\n        Content-Type:\n          description: The number of allowed requests in the current period\n          schema:\n            type: integer\n    '400':\n      \"$ref\": \"#/components/responses/201\"\n  parameters:\n    parameter2:\n      name: parameter2\n      in: query\n      description: parameter2 description\n      required: false\n      deprecated: false\n      allowEmptyValue: true\n      content:\n        application/json: {}\n    parameter3:\n      \"$ref\": \"#/components/parameters/parameter2\"\n  examples:\n    example3:\n      summary: example 3 summary\n      description: example 3 description\n      value: c\n      externalValue: https://example3.com/\n    example4:\n      \"$ref\": \"#/components/examples/example3\"\n  requestBodies:\n    requestBody1:\n      description: request body 1 description\n      required: true\n      content:\n        application/json: {}\n    requestBody2:\n      \"$ref\": \"#/components/requestBodies/requestBody1\"\n  headers:\n    Content-Type:\n      description: The number of allowed requests in the current period\n      schema:\n        type: integer\n    X-Custom-Header:\n      \"$ref\": \"#/components/headers/Content-Type\"\n  securitySchemes:\n    securityScheme1:\n      type: http\n      description: security scheme description\n      name: apiKey\n      in: apiKey\n      scheme: http\n      flows:\n        implicit:\n          authorizationUrl: https://authorization-url.com/\n    securityScheme2:\n      \"$ref\": \"#/components/securitySchemes/securityScheme1\"\n  links:\n    link3:\n      description: link 3 description\n    link4:\n      \"$ref\": \"#/components/links/link4\"\n  callbacks:\n    callback1:\n      \"{$request.query.queryUrl}\":\n        put:\n          requestBody:\n            description: Callback payload\n            content:\n              application/json:\n                schema:\n                  type: object\n          responses:\n            '200':\n              description: callback successfully processed\n    callback2:\n      \"$ref\": \"#/components/callbacks/callback1\"\nsecurity:\n  - api_key: []\ntags:\n  - name: tag1\n    description: tag1 description\n    externalDocs:\n      description: external docs tag description\n      url: https://example.com/extenral-docs-tag\nexternalDocs:\n  description: external docs top level description\n  url: https://example.com/extenral-docs-top-level\n",
			"canonicalURL": "/github.com/swagger-api/apidom@f7a9cd72c007c7885d0bca9e6f77e1830110ec4a/-/blob/packages/apidom-reference/test/parse/parsers/apidom-reference-parser-openapi-yaml-3-0/fixtures/sample-api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/swagger-api/apidom/blob/f7a9cd72c007c7885d0bca9e6f77e1830110ec4a/packages/apidom-reference/test/parse/parsers/apidom-reference-parser-openapi-yaml-3-0/fixtures/sample-api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 1: cannot unmarshal !!str `#/compo...` into ogen.PathItem; yaml: line 1: cannot unmarshal !!str `#/compo...` into ogen.PathItem"
}