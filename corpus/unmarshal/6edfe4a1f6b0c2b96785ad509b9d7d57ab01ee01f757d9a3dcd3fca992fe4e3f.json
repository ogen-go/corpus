{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/globaldothealth/list"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "verification/curator-service/api/openapi/openapi.yaml",
			"byteSize": 85889,
			"content": "openapi: 3.0.3\ninfo:\n    title: Global.health curator service API\n    description: Server for CRUD operations on Global.health data\n    termsOfService: 'https://global.health/terms-of-use/'\n    contact:\n        name: Global.health\n        url: https://global.health\n        email: info@global.health\n    license:\n        name: MIT\n        url: 'https://opensource.org/licenses/MIT'\n    version: 1.0.0\ntags:\n    - name: Case\n      description: Case related operations\n    - name: Suggest\n      description: Suggestion for input of cases\n    - name: Geocode\n      description: Geolocation of a case\n    - name: User\n      description: User of the system\n    - name: Source\n      description: A source of case data\n    - name: Upload\n      description: \u003e\n          A bundle of case data that were uploaded as part of a batch upload\n          or an automated ingestion pipeline\n    - name: Auth\n      description: Authentication-related operations\npaths:\n    /auth/register:\n        post:\n            tags:\n                - Auth\n                - User\n            summary: \u003e\n                Creates a local user for testing.The user can have any specified roles\n                in the request and the returned cookies can be used for subsequent\n                requests acting as this new user.\n                Note that this endpoint is only exposed in a local environment.\n            servers:\n                - url: http://localhost:3001/api\n            operationId: registerAuth\n            requestBody:\n                description: User to register\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/User'\n            responses:\n                '200':\n                    $ref: '#/components/responses/200Auth'\n                '400':\n                    $ref: '#/components/responses/400'\n                '500':\n                    $ref: '#/components/responses/500'\n    /sources:\n        get:\n            tags: [Source]\n            summary: Lists sources\n            operationId: listSources\n            parameters:\n                - name: page\n                  in: query\n                  description: The pages of sources to skip before starting to collect the result set\n                  required: false\n                  schema:\n                      type: integer\n                      format: int32\n                      minimum: 1\n                      default: 1\n                - name: limit\n                  in: query\n                  description: The number of sources to return\n                  required: false\n                  schema:\n                      type: integer\n                      format: int32\n                      minimum: 1\n                      maximum: 100\n                      default: 10\n                - name: url\n                  in: query\n                  description: Origin URL substring on which to filter the result set\n                  required: false\n                  allowEmptyValue: true\n                  allowReserved: true\n                  schema:\n                      type: string\n                - name: access_token\n                  description: Bearer token used by automated ingestion lambdas.\n                  in: query\n                  required: false\n                  schema:\n                      type: string\n            responses:\n                '200':\n                    $ref: '#/components/responses/200SourceArray'\n                '400':\n                    $ref: '#/components/responses/400'\n                '403':\n                    $ref: '#/components/responses/403'\n                '422':\n                    $ref: '#/components/responses/422'\n                '500':\n                    $ref: '#/components/responses/500'\n        post:\n            tags: [Source]\n            summary: Creates a new source\n            operationId: createSource\n            requestBody:\n                description: Source to add\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/NewSource'\n            responses:\n                '201':\n                    $ref: '#/components/responses/201Source'\n                '400':\n                    $ref: '#/components/responses/400'\n                '403':\n                    $ref: '#/components/responses/403'\n                '422':\n                    $ref: '#/components/responses/422'\n                '500':\n                    $ref: '#/components/responses/500'\n    /acknowledgment-sources:\n        get:\n            tags: [Source]\n            summary: Lists sources for acknowledgments table\n            operationId: listSourcesForTable\n            responses:\n                '200':\n                    $ref: '#/components/responses/200AcknowledgmentSource'\n                '422':\n                    $ref: '#/components/responses/422'\n                '500':\n                    $ref: '#/components/responses/500'\n    /sources/{id}:\n        parameters:\n            - name: id\n              in: path\n              description: The source ID\n              required: true\n              schema:\n                  type: string\n                  pattern: '^[a-f\\d]{24}$'\n        get:\n            tags: [Source]\n            summary: Gets a specific source\n            operationId: getSource\n            responses:\n                '200':\n                    $ref: '#/components/responses/200Source'\n                '400':\n                    $ref: '#/components/responses/400'\n                '403':\n                    $ref: '#/components/responses/403'\n                '404':\n                    $ref: '#/components/responses/404'\n                '422':\n                    $ref: '#/components/responses/422'\n                '500':\n                    $ref: '#/components/responses/500'\n        put:\n            tags: [Source]\n            summary: Updates a specific source\n            operationId: updateSource\n            requestBody:\n                description: Source to update\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/Source'\n            responses:\n                '200':\n                    $ref: '#/components/responses/200Source'\n                '400':\n                    $ref: '#/components/responses/400'\n                '403':\n                    $ref: '#/components/responses/403'\n                '404':\n                    $ref: '#/components/responses/404'\n                '422':\n                    $ref: '#/components/responses/422'\n                '500':\n                    $ref: '#/components/responses/500'\n        delete:\n            tags: [Source]\n            summary: Deletes a specific source\n            operationId: deleteSource\n            responses:\n                '204':\n                    description: Source deleted\n                '400':\n                    $ref: '#/components/responses/400'\n                '403':\n                    $ref: '#/components/responses/403'\n                '404':\n                    $ref: '#/components/responses/404'\n                '500':\n                    $ref: '#/components/responses/500'\n    /sources/{id}/retrieve:\n        parameters:\n            - name: id\n              in: path\n              description: The source ID for which to retrieve content\n              required: true\n              schema:\n                  type: string\n                  pattern: '^[a-f\\d]{24}$'\n            - name: parse_start_date\n              in: query\n              description: \u003e\n                  The date on which to begin parsing/ingesting data (inclusive).\n                  Provided in YYYY-MM-DD format.\n              required: false\n              schema:\n                  type: string\n                  pattern: '^[\\d]{4}-[\\d]{2}-[\\d]{2}$'\n            - name: parse_end_date\n              in: query\n              description: \u003e\n                  The date on which to end parsing/ingesting data (inclusive).\n                  Provided in YYYY-MM-DD format.\n              required: false\n              schema:\n                  type: string\n                  pattern: '^[\\d]{4}-[\\d]{2}-[\\d]{2}$'\n        post:\n            tags: [Source]\n            summary: Trigger a retrieval of the content for the specified source\n            operationId: retrieve\n            responses:\n                '200':\n                    $ref: '#/components/responses/200Retrieval'\n                '400':\n                    $ref: '#/components/responses/400'\n                '403':\n                    $ref: '#/components/responses/403'\n                '404':\n                    $ref: '#/components/responses/404'\n                '500':\n                    $ref: '#/components/responses/500'\n    /sources/uploads:\n        get:\n            tags: [Source, Upload]\n            summary: Lists all uploads for all sources\n            operationId: listUploads\n            parameters:\n                - name: page\n                  in: query\n                  description: The pages of uploads to skip before starting to collect the result set\n                  required: false\n                  schema:\n                      type: integer\n                      format: int32\n                      minimum: 1\n                      default: 1\n                - name: limit\n                  in: query\n                  description: The number of uploads to return\n                  required: false\n                  schema:\n                      type: integer\n                      format: int32\n                      minimum: 1\n                      maximum: 100\n                      default: 10\n                - name: changes_only\n                  in: query\n                  description: \u003e\n                      Filters successful uploads to only include those that created or modified \n                      cases. The response will still include non-successful uploads.\n                  required: false\n                  schema:\n                      type: boolean\n                      default: false\n            responses:\n                '200':\n                    $ref: '#/components/responses/200UploadsArray'\n                '400':\n                    $ref: '#/components/responses/400'\n                '403':\n                    $ref: '#/components/responses/403'\n                '500':\n                    $ref: '#/components/responses/500'\n    /sources/{sourceId}/uploads:\n        parameters:\n            - name: sourceId\n              in: path\n              description: The parent source ID in which to create the upload\n              required: true\n              schema:\n                  type: string\n                  pattern: '^[a-f\\d]{24}$'\n        post:\n            tags: [Source, Upload]\n            summary: Creates a new upload in the specified source\n            operationId: createUpload\n            requestBody:\n                description: Upload to add\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/Upload'\n            responses:\n                '201':\n                    $ref: '#/components/responses/201Upload'\n                '400':\n                    $ref: '#/components/responses/400'\n                '403':\n                    $ref: '#/components/responses/403'\n                '404':\n                    $ref: '#/components/responses/404'\n                '422':\n                    $ref: '#/components/responses/422'\n                '500':\n                    $ref: '#/components/responses/500'\n    /sources/{sourceId}/uploads/{id}:\n        parameters:\n            - name: sourceId\n              in: path\n              description: The parent source ID in which to find the upload\n              required: true\n              schema:\n                  type: string\n                  pattern: '^[a-f\\d]{24}$'\n            - name: id\n              in: path\n              description: The ID of the upload to update\n              required: true\n              schema:\n                  type: string\n                  pattern: '^[a-f\\d]{24}$'\n        put:\n            tags: [Source, Upload]\n            summary: Updates an existing upload in the specified source\n            operationId: updateUpload\n            requestBody:\n                description: New upload content\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/Upload'\n            responses:\n                '200':\n                    $ref: '#/components/responses/200Upload'\n                '400':\n                    $ref: '#/components/responses/400'\n                '403':\n                    $ref: '#/components/responses/403'\n                '404':\n                    $ref: '#/components/responses/404'\n                '422':\n                    $ref: '#/components/responses/422'\n                '500':\n                    $ref: '#/components/responses/500'\n    /sources/parsers:\n        get:\n            summary: Lists parsers available for automated ingestion\n            tags: [Suggest]\n            operationId: listParsers\n            responses:\n                '200':\n                    $ref: '#/components/responses/200ParsersArray'\n                '500':\n                    $ref: '#/components/responses/500'\n    /cases:\n        get:\n            tags: [Case]\n            summary: Lists cases\n            operationId: listCases\n            parameters:\n                - name: page\n                  in: query\n                  description: The pages of sources to skip before starting to collect the result set\n                  required: false\n                  schema:\n                      type: integer\n                      format: int32\n                      minimum: 1\n                      default: 1\n                - name: limit\n                  in: query\n                  description: The number of cases to return\n                  required: false\n                  schema:\n                      type: integer\n                      format: int32\n                      minimum: 1\n                      maximum: 100\n                      default: 10\n                - name: count_limit\n                  in: query\n                  description: The maximum number of documents that will be counted in mongoDB to make queries faster\n                  required: false\n                  schema:\n                      type: integer\n                      format: int32\n                      minimum: 100\n                      default: 10000\n                      maximum: 50000\n                - name: sort_by\n                  in: query\n                  description: Keyword to sort by\n                  required: false\n                  schema:\n                      type: string\n                - name: order\n                  in: query\n                  description: Sorting order\n                  required: false\n                  schema:\n                      type: string\n                - name: q\n                  in: query\n                  description: The search query\n                  required: false\n                  allowEmptyValue: true\n                  allowReserved: true\n                  schema:\n                      type: string\n            responses:\n                '200':\n                    $ref: '#/components/responses/200CaseArray'\n                '400':\n                    $ref: '#/components/responses/400'\n                '403':\n                    $ref: '#/components/responses/403'\n                '422':\n                    $ref: '#/components/responses/422'\n                '500':\n                    $ref: '#/components/responses/500'\n        post:\n            tags: [Case]\n            summary: Creates one (or multiple identical) new cases\n            operationId: createCase\n            requestBody:\n                description: Case to add\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/NewCase'\n            parameters:\n                - name: validate_only\n                  in: query\n                  description: Whether to validate the case without creating it\n                  required: false\n                  schema:\n                      type: boolean\n                      default: false\n                  allowEmptyValue: true\n                - name: num_cases\n                  in: query\n                  description: The number of cases to create\n                  required: false\n                  schema:\n                      type: integer\n                      format: int32\n                      minimum: 1\n                      default: 1\n            responses:\n                '201':\n                    $ref: '#/components/responses/201Create'\n                '400':\n                    $ref: '#/components/responses/400'\n                '403':\n                    $ref: '#/components/responses/403'\n                '422':\n                    $ref: '#/components/responses/422'\n                '500':\n                    $ref: '#/components/responses/500'\n        put:\n            tags: [Case]\n            summary: Upserts a case\n            description: \u003e\n                Creates or updates a case, depending on whether the provided values for\n                the `caseReference.sourceId` and `caseReference.sourceEntryId` fields\n                correspond to an existing case record.\n            operationId: upsertCase\n            requestBody:\n                description: Case to upsert\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            allOf:\n                                - $ref: '#/components/schemas/NewCase'\n                            required:\n                                - caseReference\n            responses:\n                '200':\n                    $ref: '#/components/responses/200Case'\n                '201':\n                    $ref: '#/components/responses/201Case'\n                '400':\n                    $ref: '#/components/responses/400'\n                '403':\n                    $ref: '#/components/responses/403'\n                '422':\n                    $ref: '#/components/responses/422'\n                '500':\n                    $ref: '#/components/responses/500'\n        delete:\n            summary: \u003e\n                Deletes multiple cases. It is required to supply exactly one of either \n                caseIds or query in the request body. If caseIds are supplied, cases \n                corresponding to those caseIds will be deleted. If query is supplied, \n                all cases that match the query will be deleted.\n            tags: [Case]\n            operationId: deleteCases\n            requestBody:\n                description: Cases to delete\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                caseIds:\n                                    description: Cases corresponding to these ids will be deleted\n                                    type: array\n                                    items:\n                                        type: string\n                                query:\n                                    description: \u003e\n                                        Cases matching this query will be deleted. Must contain\n                                        non-whitespace characters.\n                                    type: string\n                                    pattern: \\S+\n                            oneOf:\n                                - required: [caseIds]\n                                - required: [query]\n            responses:\n                '204':\n                    description: Cases deleted\n                '400':\n                    $ref: '#/components/responses/400'\n                '403':\n                    $ref: '#/components/responses/403'\n                '404':\n                    $ref: '#/components/responses/404'\n                '422':\n                    $ref: '#/components/responses/422'\n                '500':\n                    $ref: '#/components/responses/500'\n    /cases/download:\n        post:\n            summary: \u003e\n                Streams a CSV, TSV or JSON attachment of cases matching the search query. \n                If caseIds are supplied the CSV only contains cases with those ids. \n                You cannot supply both query and caseIds.\n            tags: [Case]\n            operationId: downloadCases\n            requestBody:\n                content:\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                caseIds:\n                                    description: Cases corresponding to these ids will be returned\n                                    type: array\n                                    items:\n                                        type: string\n                                        pattern: '^[a-f\\d]{24}$'\n                                query:\n                                    description: \u003e\n                                        Cases matching this query will be returned. This is ignored\n                                        if empty.\n                                    type: string\n                                limit:\n                                    description: \u003e\n                                        Max number of rows that can be downloaded when query is provided\n                                    type: string\n                                format:\n                                    description: Format of data to be downloaded\n                                    type: string\n            responses:\n                '200':\n                    $ref: '#/components/responses/200CasesDownload'\n                '500':\n                    $ref: '#/components/responses/500'\n    /cases/downloadAsync:\n        post:\n            summary: \u003e\n                Streams an attachment of cases matching the search query.\n            tags: [Case]\n            operationId: downloadAsync\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                query:\n                                    description: \u003e\n                                        Cases matching this query will be returned.\n                                    type: string\n            responses:\n                '200':\n                    $ref: '#/components/responses/200FilteredDataSetDownload'\n                '204':\n                    $ref: '#/components/responses/204'\n                '500':\n                    $ref: '#/components/responses/500'\n    /cases/getDownloadLink:\n        post:\n            summary: \u003e\n                Generates signed URL to download full data set from AWS S3\n            tags: [Case]\n            operationId: generateSignedUrl\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            properties:\n                                format:\n                                    description: Format in which data should be downloaded\n                                    type: string\n            responses:\n                '200':\n                    $ref: '#/components/responses/200FullDataSetDownload'\n                '500':\n                    $ref: '#components/responses/500'\n    /cases/symptoms:\n        get:\n            summary: Lists most frequently used sypmtoms\n            tags: [Suggest]\n            operationId: listSymptoms\n            parameters:\n                - name: limit\n                  in: query\n                  description: The number of items to return\n                  required: false\n                  schema:\n                      type: integer\n                      format: int32\n                      minimum: 1\n                      maximum: 100\n                      default: 5\n            responses:\n                '200':\n                    $ref: '#/components/responses/200SymptomArray'\n                '400':\n                    $ref: '#/components/responses/400'\n                '403':\n                    $ref: '#/components/responses/403'\n                '500':\n                    $ref: '#/components/responses/500'\n    /cases/placesOfTransmission:\n        get:\n            summary: Lists most frequently used places of transmission\n            tags: [Suggest]\n            operationId: listPlacesOfTransmission\n            parameters:\n                - name: limit\n                  in: query\n                  description: The number of items to return\n                  required: false\n                  schema:\n                      type: integer\n                      format: int32\n                      minimum: 1\n                      maximum: 100\n                      default: 5\n            responses:\n                '200':\n                    $ref: '#/components/responses/200PlacesOfTransmissionArray'\n                '400':\n                    $ref: '#/components/responses/400'\n                '403':\n                    $ref: '#/components/responses/403'\n                '500':\n                    $ref: '#/components/responses/500'\n    /cases/occupations:\n        get:\n            summary: Lists most frequently used occupations\n            tags: [Suggest]\n            operationId: listOccupations\n            parameters:\n                - name: limit\n                  in: query\n                  description: The number of items to return\n                  required: false\n                  schema:\n                      type: integer\n                      format: int32\n                      minimum: 1\n                      maximum: 100\n                      default: 5\n            responses:\n                '200':\n                    $ref: '#/components/responses/200OccupationArray'\n                '400':\n                    $ref: '#/components/responses/400'\n                '403':\n                    $ref: '#/components/responses/403'\n                '500':\n                    $ref: '#/components/responses/500'\n    /cases/batchStatusChange:\n        post:\n            summary: Changes status for a list of cases\n            tags: [Case]\n            operationId: batchStatusChange\n            requestBody:\n                description: \u003e\n                    Case IDs are passed through an array of strings, note may be provided as well.\n                    A query may be provided instead of list of IDs, this will change status for all\n                    cases matching the query.\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            properties:\n                                caseIds:\n                                    description: \u003e\n                                        Cases having IDs provided here will have their\n                                        status changed to one specified in status field.\n                                    type: array\n                                    items:\n                                        type: string\n                                status:\n                                    $ref: '#/components/schemas/CaseStatus'\n                                query:\n                                    description: \u003e\n                                        Cases matching this query will have their status\n                                        changed. Must contain non-whitespace characters.\n                                    type: string\n                                    pattern: \\S+\n                                note:\n                                    description: \u003e\n                                        The reason behind exclusion (or other important info).\n                                        This field is ignored if a status is not \"Excluded\".\n                                    type: string\n                            oneOf:\n                                - required: [caseIds]\n                                - required: [query]\n                            required:\n                                - status\n            responses:\n                '200':\n                    $ref: '#/components/responses/200'\n                '400':\n                    $ref: '#/components/responses/400'\n                '422':\n                    $ref: '#/components/responses/422'\n                '500':\n                    $ref: '#/components/responses/500'\n    /cases/batchUpsert:\n        post:\n            tags: [Case]\n            summary: Upserts multiple cases\n            operationId: batchUpsertCase\n            requestBody:\n                description: Cases to upsert\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/CaseArray'\n            responses:\n                '200':\n                    $ref: '#/components/responses/200BatchCaseUpsert'\n                '207':\n                    $ref: '#/components/responses/207BatchCaseUpsert'\n                '500':\n                    $ref: '#/components/responses/500'\n    /cases/batchUpdate:\n        post:\n            summary: Batch updates cases\n            tags: [Case]\n            operationId: batchUpdateCases\n            requestBody:\n                description: Cases to update\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/CaseArray'\n            responses:\n                '200':\n                    $ref: '#/components/responses/200BatchCaseUpdateResponse'\n                '400':\n                    $ref: '#/components/responses/400'\n                '422':\n                    $ref: '#/components/responses/422'\n                '500':\n                    $ref: '#/components/responses/500'\n    /cases/batchUpdateQuery:\n        post:\n            summary: Batch updates cases that match the query property\n            tags: [Case]\n            operationId: batchUpdateQueryCases\n            requestBody:\n                description: Cases to update\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            properties:\n                                query:\n                                    description: \u003e\n                                        Cases matching this query will be updated. Must contain\n                                        non-whitespace characters.\n                                    type: string\n                                    pattern: \\S+\n                                case:\n                                    $ref: '#/components/schemas/Case'\n                            required:\n                                - query\n                                - case\n            responses:\n                '200':\n                    $ref: '#/components/responses/200BatchCaseUpdateResponse'\n                '400':\n                    $ref: '#/components/responses/400'\n                '422':\n                    $ref: '#/components/responses/422'\n                '500':\n                    $ref: '#/components/responses/500'\n    /cases/{id}:\n        parameters:\n            - name: id\n              in: path\n              description: The case ID\n              required: true\n              schema:\n                  type: string\n                  pattern: '^[a-f\\d]{24}$'\n        get:\n            tags: [Case]\n            summary: Gets a specific case\n            operationId: getCase\n            responses:\n                '200':\n                    $ref: '#/components/responses/200Case'\n                '400':\n                    $ref: '#/components/responses/400'\n                '403':\n                    $ref: '#/components/responses/403'\n                '404':\n                    $ref: '#/components/responses/404'\n                '422':\n                    $ref: '#/components/responses/422'\n                '500':\n                    $ref: '#/components/responses/500'\n        put:\n            tags: [Case]\n            summary: Updates a specific case\n            operationId: updateCase\n            requestBody:\n                description: Case to update\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/Case'\n            responses:\n                '200':\n                    $ref: '#/components/responses/200Case'\n                '400':\n                    $ref: '#/components/responses/400'\n                '403':\n                    $ref: '#/components/responses/403'\n                '404':\n                    $ref: '#/components/responses/404'\n                '422':\n                    $ref: '#/components/responses/422'\n                '500':\n                    $ref: '#/components/responses/500'\n        delete:\n            tags: [Case]\n            summary: Deletes a specific case\n            operationId: deleteCase\n            responses:\n                '204':\n                    description: Case deleted\n                '400':\n                    $ref: '#/components/responses/400'\n                '403':\n                    $ref: '#/components/responses/403'\n                '404':\n                    $ref: '#/components/responses/404'\n                '500':\n                    $ref: '#/components/responses/500'\n    /geocode/seed:\n        post:\n            tags: [Geocode]\n            summary: Adds geocodes to the geocoding database\n            operationId: seedGeocodes\n            requestBody:\n                description: A single geocode record\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n            responses:\n                '200':\n                    $ref: '#/components/responses/200'\n    /geocode/clear:\n        post:\n            tags: [Geocode]\n            summary: Clears geocodes from the geocoding database\n            operationId: clearGeocodes\n            responses:\n                '200':\n                    $ref: '#/components/responses/200'\n    /geocode/suggest:\n        get:\n            tags: [Suggest, Geocode]\n            summary: Suggests geocodes for a given query string\n            operationId: suggestGeocodes\n            parameters:\n                - name: q\n                  in: query\n                  description: The location string for which to find geocodes\n                  required: true\n                  allowReserved: true\n                  schema:\n                      type: string\n                - name: limitToResolution\n                  in: query\n                  allowReserved: true\n                  schema:\n                      type: string\n                  description: \u003e\n                      Comma-separated list of resolutions to restrict geocoding to.\n                      Allowed values are: Point, Admin3, Admin2, Admin1, Country.\n            responses:\n                '200':\n                    $ref: '#/components/responses/200LocationArray'\n                '403':\n                    $ref: '#/components/responses/403'\n                '422':\n                    $ref: '#/components/responses/422'\n                '500':\n                    $ref: '#/components/responses/500'\n    /geocode/convertUTM:\n        get:\n            tags: [Geocode]\n            summary: Convert UTM coordinates to latitude/longitude.\n            operationId: convert\n            parameters:\n                - name: n\n                  in: query\n                  description: The northing coordinate (UTMY)\n                  required: true\n                  schema:\n                    type: number\n                - name: e\n                  in: query\n                  description: The easting coordinate (UTMX)\n                  required: true\n                  schema:\n                    type: number\n                - name: z\n                  in: query\n                  required: true\n                  description: The UTM zone.\n                  schema:\n                    type: number\n            responses:\n                '200':\n                    $ref: '#/components/responses/200Position'\n                '400':\n                    $ref: '#/components/responses/400'\n                '500':\n                    $ref: '#/components/responses/500'\n    /geocode/countryNames:\n        get:\n            tags: [Geocode]\n            summary: Get a list of all the ISO-3166-1 country codes in use, and the names we accept for those countries.\n            operationId: countryNames\n            responses:\n                '200':\n                    $ref: '#/components/responses/200CountryNames'\n                '500':\n                    $ref: '#/components/responses/500'\n    /users:\n        get:\n            tags: [User]\n            summary: Lists users\n            operationId: listUsers\n            parameters:\n                - name: page\n                  in: query\n                  description: The pages of users to skip before starting to collect the result set\n                  required: false\n                  schema:\n                      type: integer\n                      format: int32\n                      minimum: 1\n                      default: 1\n                - name: limit\n                  in: query\n                  description: The number of users to return\n                  required: false\n                  schema:\n                      type: integer\n                      format: int32\n                      minimum: 1\n                      maximum: 100\n                      default: 10\n            responses:\n                '200':\n                    $ref: '#/components/responses/200UserArray'\n                '400':\n                    $ref: '#/components/responses/400'\n                '403':\n                    $ref: '#/components/responses/403'\n                '422':\n                    $ref: '#/components/responses/422'\n                '500':\n                    $ref: '#/components/responses/500'\n    /users/{id}:\n        parameters:\n            - name: id\n              in: path\n              description: The user ID\n              required: true\n              schema:\n                  type: string\n                  pattern: '^[a-f\\d]{24}$'\n        put:\n            tags: [User]\n            summary: Updates a specific user's roles\n            operationId: updateUser\n            requestBody:\n                description: New roles for the user\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/RoleArray'\n            responses:\n                '200':\n                    $ref: '#/components/responses/200User'\n                '400':\n                    $ref: '#/components/responses/400'\n                '403':\n                    $ref: '#/components/responses/403'\n                '404':\n                    $ref: '#/components/responses/404'\n                '422':\n                    $ref: '#/components/responses/422'\n                '500':\n                    $ref: '#/components/responses/500'\n        delete:\n            tags: [User]\n            summary: Deletes a user\n            operationId: deleteUser\n            responses:\n                '204':\n                    $ref: '#/components/responses/204'\n                '401':\n                    $ref: '#/components/responses/401'\n                '403':\n                    $ref: '#/components/responses/403'\n                '404':\n                    $ref: '#/components/responses/404'\n                '500':\n                    $ref: '#/components/responses/500'\n    /users/roles:\n        get:\n            tags: [User]\n            summary: Lists roles available to users\n            operationId: listUserRoles\n            responses:\n                '200':\n                    $ref: '#/components/responses/200RoleArray'\n                '403':\n                    $ref: '#/components/responses/403'\n                '500':\n                    $ref: '#/components/responses/500'\n    /excludedCaseIds:\n        get:\n            summary: Lists IDs of excluded cases for a specified source\n            tags: [Case]\n            operationId: listExcludedCaseIds\n            parameters:\n                - name: sourceId\n                  in: query\n                  description: ID of source to filter out only excluded cases from.\n                  required: true\n                  schema:\n                      type: string\n                      pattern: '^[a-f\\d]{24}$'\n                - name: dateFrom\n                  in: query\n                  description: Start date for excluded cases lookup\n                  required: false\n                  schema:\n                      type: string\n                      format: date\n                - name: dateTo\n                  in: query\n                  description: Start date for excluded cases lookup\n                  required: false\n                  schema:\n                      type: string\n                      format: date\n            responses:\n                '200':\n                    $ref: '#/components/responses/200CaseIdsArray'\n                '400':\n                    $ref: '#/components/responses/400'\n                '403':\n                    $ref: '#/components/responses/403'\n                '422':\n                    $ref: '#/components/responses/422'\n                '500':\n                    $ref: '#/components/responses/500'\ncomponents:\n    schemas:\n        Parser:\n            description: A parser for automated ingestion\n            type: object\n            properties:\n                name:\n                    type: string\n                    description: The Lambda name\n                    example: epid-ingestion-CHZurichParsingFunction-1L624HBVU0E56\n        ParsersArray:\n            type: array\n            items:\n                $ref: '#/components/schemas/Parser'\n        Position:\n            description: A position on the Earth's surface.\n            type: object\n            properties:\n                latitude:\n                    type: number\n                    minimum: -90\n                    maximum: 90\n                longitude:\n                    type: number\n                    minimum: -180\n                    maximum: 180\n            required:\n                - latitude\n                - longitude\n        Upload:\n            description: An instance of case data being written to the server.\n            type: object\n            properties:\n                status:\n                    type: string\n                    enum:\n                        - IN_PROGRESS\n                        - SUCCESS\n                        - ERROR\n                summary:\n                    type: object\n                    properties:\n                        numCreated:\n                            type: integer\n                        numUpdated:\n                            type: integer\n                        error:\n                            type: string\n                            enum:\n                                - INTERNAL_ERROR\n                                - SOURCE_CONFIGURATION_ERROR\n                                - SOURCE_CONFIGURATION_NOT_FOUND\n                                - SOURCE_CONTENT_NOT_FOUND\n                                - SOURCE_CONTENT_DOWNLOAD_ERROR\n                                - PARSING_ERROR\n                                - VALIDATION_ERROR\n                                - DATA_UPLOAD_ERROR\n                                - TIMEOUT\n                created:\n                    $ref: '#/components/schemas/Date'\n        UploadsArray:\n            type: object\n            properties:\n                uploads:\n                    type: array\n                    items:\n                        description: An upload with source data.\n                        type: object\n                        properties:\n                            sourceName:\n                                type: string\n                                description: Name of the source of the upload\n                                example: India Ministry of Health\n                            sourceUrl:\n                                type: string\n                                example: https://api.covid19india.org/raw_data7.json\n                            upload:\n                                $ref: '#/components/schemas/Upload'\n        Retrieval:\n            description: Output of the retrieval lambda function.\n            type: object\n            properties:\n                bucket:\n                    type: string\n                    description: S3 bucket name where the source content was stored\n                    example: sources-raw\n                key:\n                    type: string\n                    description: S3 key of the source content\n                    example: some/s3/key/content.json\n                upload_id:\n                    type: string\n                    description: Upload ID correpsonding to this retrieval\n                    example: 5f06d810d261423384c9aeb4\n        Source:\n            description: A source of line list case data.\n            type: object\n            properties:\n                name:\n                    type: string\n                    description: Human readable name of a source\n                    example: Paraguay\n                origin:\n                    type: object\n                    properties:\n                        url:\n                            type: string\n                            example: https://opendata.digilugu.ee/opendata_covid19_test_results.csv\n                            description: Source location, can be http, https, or s3 schemes. This must be the link to the source data download.\n                        license:\n                            type: string\n                            example: MIT\n                            description: The license under which we have the right to ingest the data. Ideally a SPDX identifier (https://spdx.org/licenses/).\n                        providerName:\n                            type: string\n                            example: Paraguay Ministry of Public Health and Social Welfare\n                            description: The organisation or individual who collects the data in this source.\n                        providerWebsiteUrl:\n                            type: string\n                            example: https://www.mspbs.gov.py/index.php\n                            description: The provider's website, or where possible their specific site for information about this outbreak (including the source data used here).\n                format:\n                    type: string\n                    description: Format of the source to be ingested, useful when automated ingestion\n                    enum:\n                        - null\n                        - CSV\n                        - JSON\n                        - XLSX\n                dateFilter:\n                    type: object\n                    properties:\n                        numDaysBeforeToday:\n                            type: number\n                            # Must be positive as we subtract it to \"today\".\n                            minimum: 1\n                        op:\n                            type: string\n                            enum:\n                                - EQ\n                                - GT\n                                - LT\n                notificationRecipients:\n                    description: \u003e\n                        List of addresses to be notified of important changes to the source.\n                    type: array\n                    items:\n                        type: string\n                        format: email\n                excludeFromLineList:\n                    description: \u003e\n                        Whether cases from this source should be left out of the line list feed.\n                    type: boolean\n                hasStableIdentifiers:\n                    description: \u003e\n                        Whether the source includes identifiers for individual cases that remain the same over time.\n                    type: boolean\n                automation:\n                    type: object\n                    properties:\n                        parser:\n                            type: object\n                            properties:\n                                awsLambdaArn:\n                                    type: string\n                                    #pattern: '^arn\\:aws\\:lambda\\:.+\\:.+\\:function\\:.+'\n                                    example: arn:aws:lambda:eu-central-1:612888738066:function:epid-ingestion-IndiaParsingFunction-J20HSC838QT6\n                        regexParsing:\n                            type: object\n                            properties:\n                                fields:\n                                    type: array\n                                    items:\n                                        type: object\n                                        properties:\n                                            name:\n                                                type: string\n                                            regex:\n                                                type: string\n                        schedule:\n                            type: object\n                            properties:\n                                awsRuleArn:\n                                    type: string\n                                    pattern: '^arn\\:aws\\:events\\:.+\\:.+\\:rule\\/.+'\n                                    example: arn:aws:events:eu-central-1:612888738066:rule/5ef22491937717c3331c3729\n                                awsScheduleExpression:\n                                    type: string\n                                    pattern: '^((rate\\(((1 (minute|hour|day))|([1-9]+ (minutes|hours|days)))\\))|(cron\\((.+\\s){5}.+\\)))'\n                                    example: rate(1 day)\n                            required:\n                                - awsScheduleExpression\n                uploads:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/Upload'\n        AcknowledgmentSource:\n            type: object\n            properties:\n                name:\n                    type: string\n                    description: Human readable name of a source\n                    example: Paraguay\n                origin:\n                    type: object\n                    properties:\n                        providerName:\n                            type: string\n                        providerWebsiteUrl:\n                            type: string\n                        url:\n                            type: string\n                            example: https://opendata.digilugu.ee/opendata_covid19_test_results.csv\n                            description: Source location, can be http, https, or s3 schemes. This must be the link to the source data download.\n                        license:\n                            type: string\n                            example: MIT\n                            description: The license under which we have the right to ingest the data. Ideally a SPDX identifier (https://spdx.org/licenses/).\n        SourceArray:\n            type: object\n            properties:\n                sources:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/Source'\n                nextPage:\n                    type: integer\n                total:\n                    type: integer\n            items:\n                $ref: '#/components/schemas/Source'\n        AcknowledgmentSourcesArray:\n            type: array\n            items:\n                $ref: '#/components/schemas/AcknowledgmentSource'\n        Case:\n            description: A single line-list case.\n            properties:\n                caseReference:\n                    type: object\n                    properties:\n                        sourceId:\n                            type: string\n                            pattern: '^[a-f\\d]{24}$'\n                            description: UUID of the source this case was extracted from\n                            example: 5ef22491937717c3331c3729\n                        sourceUrl:\n                            type: string\n                            description: URL of the source this case was extracted from\n                            example: https://api.covid19india.org/raw_data7.json\n                        uploadIds:\n                            description: \u003e\n                                An array of UUIDs of uploads where this case was created or updated\n                                through bulk upload or automated ingestion.\n                            type: array\n                            items:\n                                type: string\n                                pattern: '^[a-f\\d]{24}$'\n                        verificationStatus:\n                            description: \u003e\n                                Whether the case document has been manually verified for\n                                correctness. For new cases, if this field isn't provided, a\n                                default value of UNVERIFIED will be used.\n                            type: string\n                            enum:\n                                - UNVERIFIED\n                                - VERIFIED\n                                - EXCLUDED\n                        additionalSources:\n                            type: array\n                            description: List of additional URLs that described a case\n                            example: https://www.chinadaily.com.cn/a/202006/11/WS5ee1ea62a3108348172526ac.html\n                            items:\n                                type: object\n                                properties:\n                                    sourceUrl:\n                                        type: string\n                demographics:\n                    type: object\n                    properties:\n                        gender:\n                            type: string\n                            enum:\n                                [\n                                    null,\n                                    Male,\n                                    Female,\n                                    Non-binary/Third gender,\n                                    Other,\n                                ]\n                        ageRange:\n                            type: object\n                            description: \u003e\n                                Age bracket, start is included, end is excluded if different\n                                than start.\n                                If no end is specified it means that the age bracket is from\n                                start and above.\n                            properties:\n                                start:\n                                    type: number\n                                end:\n                                    type: number\n                        ethnicity:\n                            description: \u003e\n                                Social group that has a common national or cultural tradition.\n                            example: Asian\n                            type: string\n                        nationalities:\n                            type: array\n                            example: French\n                            items:\n                                type: string\n                        occupation:\n                            example: Epidemiologist\n                            type: string\n                location:\n                    $ref: '#/components/schemas/Location'\n                events:\n                    description: An event with name \"confirmed\" is required.\n                    type: array\n                    items:\n                        type: object\n                        properties:\n                            name:\n                                type: string\n                                enum:\n                                    - confirmed\n                                    - firstClinicalConsultation\n                                    - hospitalAdmission\n                                    - icuAdmission\n                                    - onsetSymptoms\n                                    - outcome\n                                    - selfIsolation\n                            dateRange:\n                                $ref: '#/components/schemas/DateRange'\n                            value:\n                                type: string\n                                description: \u003e\n                                    For outcome event, value can be Death or Recovered.\n                                    For icuAdmission and hospitalAdmission, value can be Yes or No.\n                                    For confirmed event, the value can be the method of confirmation (i.e. \"PCR test\").\n                                example: Recovered\n                    example:\n                        - name: confirmed\n                          dateRange:\n                              start: '06/20/2020'\n                              end: '06/20/2020'\n                        - name: outcome\n                          value: Death\n                        - name: icuAdmission\n                          dateRange:\n                              start: '06/20/2020'\n                              end: '06/25/2020'\n                          value: Yes\n                symptoms:\n                    type: object\n                    description: Symptoms that the patient had if any\n                    properties:\n                        status:\n                            type: string\n                            enum:\n                                [\n                                    null,\n                                    Asymptomatic,\n                                    Symptomatic,\n                                    Presymptomatic,\n                                ]\n                        values:\n                            type: array\n                            items:\n                                type: string\n                    example:\n                        status: Symptomatic\n                        values:\n                            - Headache\n                            - Vomiting\n                preexistingConditions:\n                    type: object\n                    description: Any preexisting condition that the patient had\n                    properties:\n                        hasPreexistingConditions:\n                            type: boolean\n                        values:\n                            type: array\n                            items:\n                                type: string\n                                example: Low blood pressure\n                    example:\n                        hasPreexistingConditions: true\n                        values:\n                            - acatalasia\n                            - pleuropneumonia\n                transmission:\n                    type: object\n                    description: How this case got infected and by who if known\n                    properties:\n                        routes:\n                            type: array\n                            items:\n                                type: string\n                            example:\n                                - Oral\n                                - Air-borne\n                        places:\n                            type: array\n                            items:\n                                type: string\n                            example:\n                                - Airplane\n                                - Bus\n                                - Gym\n                        linkedCaseIds:\n                            type: array\n                            items:\n                                type: string\n                                description: UUID of a related case in the system\n                                example: 5f3a99d615246c7402ac07d3\n                travelHistory:\n                    type: object\n                    description: Travel history of the patient if known\n                    properties:\n                        traveledPrior30Days:\n                            type: boolean\n                        travel:\n                            type: array\n                            items:\n                                type: object\n                                properties:\n                                    dateRange:\n                                        $ref: '#/components/schemas/DateRange'\n                                    location:\n                                        $ref: '#/components/schemas/FuzzyLocation'\n                                    purpose:\n                                        type: string\n                                    methods:\n                                        type: array\n                                        items:\n                                            type: string\n                    example:\n                        traveledPrior30Days: true\n                        travel:\n                            dateRange:\n                                start: '02/18/2020'\n                                end: '02/20/2020'\n                            location:\n                                name: 'Peru'\n                            purpose: Business\n                            methods:\n                                - Plane\n                                - Ferry\n                                - Train\n                genomeSequences:\n                    type: array\n                    description: Genome sequence of the pathogen\n                    items:\n                        type: object\n                        properties:\n                            sampleCollectionDate:\n                                $ref: '#/components/schemas/Date'\n                            repositoryUrl:\n                                type: string\n                                example: https://www.ncbi.nlm.nih.gov/nuccore/AY242057.1\n                            sequenceId:\n                                type: string\n                                example: AY242057.1\n                            sequenceName:\n                                type: string\n                                example: Danio rerio foxi one (foo) gene, complete cds\n                            sequenceLength:\n                                type: integer\n                                format: int64\n                                minimum: 0\n                                example: 2074\n                pathogens:\n                    type: array\n                    description: Pathogens associated with the case\n                    items:\n                        type: object\n                        properties:\n                            name:\n                                type: string\n                                example: Brucellosis\n                            id:\n                                type: integer\n                                format: int32\n                                minimum: 0\n                revisionMetadata:\n                    type: object\n                    description: Various revisions of this case over time\n                    properties:\n                        revisionNumber:\n                            type: integer\n                            format: int32\n                            minimum: 0\n                        creationMetadata:\n                            $ref: '#/components/schemas/EditMetadata'\n                        editMetadata:\n                            $ref: '#/components/schemas/EditMetadata'\n                variant:\n                    type: object\n                    description: Details of the variant of concern/interest if applicable.\n                    properties:\n                        name:\n                            type: string\n                            example: B.1.351\n                            description: Name of the variant of concern or interest.\n                vaccines:\n                    $ref: '#/components/schemas/VaccineArray'\n        CaseStatus:\n            type: string\n            enum: [UNVERIFIED, VERIFIED, EXCLUDED]\n        CaseArray:\n            type: object\n            properties:\n                cases:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/Case'\n            required:\n                - cases\n        CaseIdsArray:\n            type: object\n            properties:\n                cases:\n                    type: array\n                    items:\n                        type: string\n            required:\n                - cases\n        SignedUrl:\n            type: object\n            properties:\n                signedUrl:\n                    type: string\n        SymptomArray:\n            type: object\n            properties:\n                symptoms:\n                    type: array\n                    items:\n                        type: string\n        PlacesOfTransmissionArray:\n            type: object\n            properties:\n                placesOfTransmission:\n                    type: array\n                    items:\n                        type: string\n        OccupationArray:\n            type: object\n            properties:\n                occupations:\n                    type: array\n                    items:\n                        type: string\n        Date:\n            oneOf:\n                - type: string\n                - type: object\n                - type: number\n            example: '02/20/2020'\n        DateRange:\n            type: object\n            properties:\n                start:\n                    $ref: '#/components/schemas/Date'\n                end:\n                    $ref: '#/components/schemas/Date'\n        EditMetadata:\n            type: object\n            properties:\n                curator:\n                    type: string\n                    description: Email of the curator\n                    example: 'foo@bar.com'\n                date:\n                    $ref: '#/components/schemas/Date'\n                notes:\n                    type: string\n                    description: Notes from the curator about the update\n        NewCase:\n            description: \u003e\n                A \"#/components/schemas/Case\" with additional required fields for\n                newly-created cases.\n            allOf:\n                - $ref: '#/components/schemas/Case'\n            properties:\n                caseReference:\n                    required:\n                        - sourceId\n                        - sourceUrl\n                location:\n                    description: \u003e\n                        Either `query` or all of `geometry`, `country`, and `geoResolution`\n                        is required. The former will trigger geocoding.\n                    properties:\n                        query:\n                            type: string\n                        limitToResolution:\n                            type: string\n                            description: \u003e\n                                Comma-separated list of resolutions to restrict geocoding to.\n                                Allowed values are: Point, Admin3, Admin2, Admin1, Country.\n                        limitToCountry:\n                            type: string\n                            description: \u003e\n                                Limit results to one or more countries. \n                                Permitted values are ISO 3166 alpha 2 country codes separated by commas.\n            required:\n                - caseReference\n                - location\n                - events\n        NewSource:\n            description: \u003e\n                A \"#/components/schemas/Source\" with additional required fields for\n                newly-created sources.\n            allOf:\n                - $ref: '#/components/schemas/Source'\n            properties:\n                origin:\n                    required:\n                        - url\n                automation:\n                    required:\n                        - schedule\n            required:\n                - origin\n        User:\n            description: A user of the system (researcher, policy maker, etc)\n            type: object\n            properties:\n                allOf:\n                    $ref: '#/components/schemas/RoleArray'\n                name:\n                    type: string\n                    description: Full name of the user if provided by the OAuth provider\n                    example: John Doe\n                    nullable: true\n                email:\n                    type: string\n                    format: email\n                    example: foo@bar.com\n                googleID:\n                    type: string\n                    description: Unique identifier for the google account of the user\n            required:\n                - email\n        UserArray:\n            type: object\n            properties:\n                users:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/User'\n                total:\n                    type: integer\n        Role:\n            type: string\n            description: Role of a user in the system\n            enum:\n                - admin\n                - curator\n        RoleArray:\n            type: object\n            properties:\n                roles:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/Role'\n        Location:\n            description: A geo location\n            type: object\n            properties:\n                country:\n                    type: string\n                    description: ISO-3166-2 code of a country\n                    minLength: 2\n                    maxLength: 2\n                    example: CR\n                administrativeAreaLevel1:\n                    type: string\n                    description: First administrative subdivision of a country\n                    example: Any province in Costa Rica\n                administrativeAreaLevel2:\n                    type: string\n                    description: Second administrative subdivision of a country\n                    example: Any canton in Costa Rica\n                administrativeAreaLevel3:\n                    type: string\n                    description: Third administrative subdivision of a country\n                    example: Any district in Costa Rica\n                place:\n                    type: string\n                    description: Name of the place this location refers to\n                    example: Boston Children's Hospital\n                name:\n                    type: string\n                    description: \u003e\n                        Full name of the location\n                    example: Lyon, Auvergne-Rhône-Alpes, France\n                geoResolution:\n                    type: string\n                    description: How granular the location is\n                    enum:\n                        - Point\n                        - Admin3\n                        - Admin2\n                        - Admin1\n                        - Country\n                geometry:\n                    type: object\n                    properties:\n                        latitude:\n                            type: number\n                            minimum: -90\n                            maximum: 90\n                        longitude:\n                            type: number\n                            minimum: -180\n                            maximum: 180\n                    required:\n                        - latitude\n                        - longitude\n        FuzzyLocation:\n            description: A geo location that can be unspecific.\n            type: object\n            properties:\n                country:\n                    type: string\n                    description: ISO-3166-2 code of a country\n                    minLength: 2\n                    maxLength: 2\n                    example: CR\n                administrativeAreaLevel1:\n                    type: string\n                    description: First administrative subdivision of a country\n                    example: Any province in Costa Rica\n                administrativeAreaLevel2:\n                    type: string\n                    description: Second administrative subdivision of a country\n                    example: Any canton in Costa Rica\n                administrativeAreaLevel3:\n                    type: string\n                    description: Third administrative subdivision of a country\n                    example: Any district in Costa Rica\n                place:\n                    type: string\n                    description: Name of the place this location refers to\n                    example: Boston Children's Hospital\n                name:\n                    type: string\n                    description: \u003e\n                        Full name of the location\n                    example: Lyon, Auvergne-Rhône-Alpes, France\n                geoResolution:\n                    type: string\n                    description: How granular the location is\n                    enum:\n                        - undefined\n                        - Point\n                        - Admin3\n                        - Admin2\n                        - Admin1\n                        - Country\n                geometry:\n                    type: object\n                    properties:\n                        latitude:\n                            type: number\n                            minimum: -90\n                            maximum: 90\n                        longitude:\n                            type: number\n                            minimum: -180\n                            maximum: 180\n        LocationArray:\n            description: A list of geo locations\n            type: array\n            items:\n                $ref: '#/components/schemas/Location'\n        CountryNames:\n            description: A dictionary where the keys are ISO-3166-1 country codes and the values names used in Global.health for those countries\n            type: object\n        BatchCaseUpdateResponse:\n            description: Response to batch update cases API requests\n            properties:\n                numModified:\n                    type: number\n            required:\n                - numModified\n        BatchCaseUpsertResponse:\n            description: Response to batch upsert case API requests\n            properties:\n                phase:\n                    type: string\n                    description: The last operation completed by the server\n                    enum:\n                        - GEOCODE\n                        - VALIDATE\n                        - UPSERT\n                numCreated:\n                    type: number\n                    description: The number of cases created by the request.\n                numUpdated:\n                    type: number\n                    description: \u003e\n                        The number of cases modified by the request. Note that this only\n                        includes cases that are actually modified by the batch upsert. If a\n                        case is included in the batch upsert request, but contains no\n                        changes compared to the currently stored case, it won't be counted.\n                errors:\n                    type: array\n                    items:\n                        type: object\n                        properties:\n                            index:\n                                description: 0-based index of the case which triggered an error\n                                type: integer\n                            message:\n                                type: string\n                                description: what went wrong\n                                example: Cannot parse age\n                        required:\n                            - index\n                            - message\n            required:\n                - numCreated\n                - numUpdated\n        VaccineArray:\n            description: A list of vaccines\n            type: array\n            items:\n                $ref: '#/components/schemas/Vaccine'\n        Vaccine:\n            description: An instance of an individual receiving a vaccine dose\n            properties:\n                name:\n                    description: The name of the vaccine administered\n                    example: AstraZeneca\n                    type: string\n                batch:\n                    description: The batch ID of the vaccine dose administered\n                    example: PV12345\n                    type: string\n                date:\n                    $ref: '#/components/schemas/Date'\n                sideEffects:\n                    $ref: '#/components/schemas/SymptomArray'\n        Error:\n            description: An error response\n            properties:\n                message:\n                    description: A description of the error that occurred\n                    example: User with ID 1235abcd453 was not found\n                    type: string\n    responses:\n        '200':\n            description: OK\n        '200Auth':\n            description: OK\n            content:\n                application/json:\n                    schema:\n                        type: object\n        '200BatchCaseUpdateResponse':\n            description: OK\n            content:\n                application/json:\n                    schema:\n                        $ref: '#/components/schemas/BatchCaseUpdateResponse'\n        '200BatchCaseUpsert':\n            description: OK\n            content:\n                application/json:\n                    schema:\n                        $ref: '#/components/schemas/BatchCaseUpsertResponse'\n        '207BatchCaseUpsert':\n            description: Multi-Status\n            content:\n                application/json:\n                    schema:\n                        $ref: '#/components/schemas/BatchCaseUpsertResponse'\n        '200Case':\n            description: OK\n            content:\n                application/json:\n                    schema:\n                        $ref: '#/components/schemas/Case'\n        '200CaseArray':\n            description: OK\n            content:\n                application/json:\n                    schema:\n                        $ref: '#/components/schemas/CaseArray'\n        '200CaseIdsArray':\n            description: OK\n            content:\n                application/json:\n                    schema:\n                        $ref: '#/components/schemas/CaseIdsArray'\n        '200CasesDownload':\n            description: OK\n            content:\n                text/csv:\n                    schema:\n                        description: A CSV with headers detailing case data.\n        '200FilteredDataSetDownload':\n            description: OK\n            content:\n                application/json:\n                    schema:\n                        $ref: '#/components/schemas/SignedUrl'\n        '200FullDataSetDownload':\n            description: OK\n            content:\n                application/json:\n                    schema:\n                        $ref: '#/components/schemas/SignedUrl'\n        '200SymptomArray':\n            description: OK\n            content:\n                application/json:\n                    schema:\n                        $ref: '#/components/schemas/SymptomArray'\n        '200PlacesOfTransmissionArray':\n            description: OK\n            content:\n                application/json:\n                    schema:\n                        $ref: '#/components/schemas/PlacesOfTransmissionArray'\n        '200OccupationArray':\n            description: OK\n            content:\n                application/json:\n                    schema:\n                        $ref: '#/components/schemas/OccupationArray'\n        '200Position':\n            description: OK\n            content:\n                application/json:\n                    schema:\n                        $ref: '#/components/schemas/Position'\n        '200CountryNames':\n            description: OK\n            content:\n                application/json:\n                    schema:\n                        $ref: '#/components/schemas/CountryNames'\n        '201Case':\n            description: Created\n            content:\n                application/json:\n                    schema:\n                        $ref: '#/components/schemas/Case'\n        '201Create':\n            description: Created\n            content:\n                application/json:\n                    schema:\n                        anyOf:\n                            - $ref: '#/components/schemas/Case'\n                            - $ref: '#/components/schemas/CaseArray'\n        '200Source':\n            description: OK\n            content:\n                application/json:\n                    schema:\n                        $ref: '#/components/schemas/Source'\n        '200AcknowledgmentSource':\n            description: OK\n            content:\n                application/json:\n                    schema:\n                        $ref: '#/components/schemas/AcknowledgmentSourcesArray'\n        '200SourceArray':\n            description: OK\n            content:\n                application/json:\n                    schema:\n                        $ref: '#/components/schemas/SourceArray'\n        '201Source':\n            description: Created\n            content:\n                application/json:\n                    schema:\n                        $ref: '#/components/schemas/Source'\n        '200Retrieval':\n            description: OK\n            content:\n                application/json:\n                    schema:\n                        $ref: '#/components/schemas/Retrieval'\n        '200ParsersArray':\n            description: OK\n            content:\n                application/json:\n                    schema:\n                        $ref: '#/components/schemas/ParsersArray'\n        '200Upload':\n            description: OK\n            content:\n                application/json:\n                    schema:\n                        $ref: '#/components/schemas/Upload'\n        '200UploadsArray':\n            description: OK\n            content:\n                application/json:\n                    schema:\n                        $ref: '#/components/schemas/UploadsArray'\n        '201Upload':\n            description: Created\n            content:\n                application/json:\n                    schema:\n                        $ref: '#/components/schemas/Upload'\n        '200User':\n            description: OK\n            content:\n                application/json:\n                    schema:\n                        $ref: '#/components/schemas/User'\n        '200UserArray':\n            description: OK\n            content:\n                application/json:\n                    schema:\n                        $ref: '#/components/schemas/UserArray'\n        '200RoleArray':\n            description: OK\n            content:\n                application/json:\n                    schema:\n                        $ref: '#/components/schemas/RoleArray'\n        '200LocationArray':\n            description: OK\n            content:\n                application/json:\n                    schema:\n                        $ref: '#/components/schemas/LocationArray'\n        '204':\n            description: Empty\n        '400':\n            description: Malformed request\n        '401':\n            description: Unauthorized\n        '403':\n            description: Forbidden\n            content:\n                application/json:\n                    schema:\n                        $ref: '#/components/schemas/Error'\n        '404':\n            description: Not found\n            content:\n                application/json:\n                    schema:\n                        $ref: '#/components/schemas/Error'\n        '422':\n            description: Unprocessable entity\n        '500':\n            description: Internal server error\nservers:\n    - url: http://localhost:3001/api\n      description: Local server\n    - url: http://dev-data.covid-19.global.health/api\n      description: Development server\n    - url: http://data.covid-19.global.health/api\n      description: Production server\n"
		}
	},
	"Error": "unmarshal: json: line 1:37536: json: cannot unmarshal bool into Go struct field Parameter.paths.get.parameters.name of type string"
}