{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/UnionInternationalCheminsdeFer/OSDM"
		},
		"file": {
			"name": "OSDM-online-webhook-v1.4.0-rc.yml",
			"size": 0,
			"path": "specification/v1.4.0-rc/OSDM-online-webhook-v1.4.0-rc.yml",
			"byteSize": 5706,
			"content": "openapi: 3.1.0\nservers:\n  - description: Localhost on port 8080\n    url: http://localhost:8080\ninfo:\n  title: UIC 90918-10 - OSDM webhooks\n  version: 1.4.0-rc1\n  description: |\n    Specifications for the OSDM API standard. The OSDM specification supports two\n    modes of operation: Distributor Mode and Allocator Mode. The API works the same in \n    both mode, except that in allocator mode the API also returns fare information.\n    The OSDM specification combines the allocator and distributor modes into one aligned\n    API interface.\n  contact:\n    name: Nicolas Selleslagh, Clemens Gantert and Andreas Schlapbach\n    url: https://unioninternationalcheminsdefer.github.io/OSDM/\n    email: osdm@uic.org\n  license:\n    name: Apache 2.0\n    url: \"https://www.apache.org/licenses/LICENSE-2.0.html\"\n\npaths:\n  # OpenAPI documents all need a paths element\n  /ping:\n    get:\n      summary: ping\n      operationId: ping\n      responses:\n        \"200\":\n          description: OK\n\n##\n\nwebhooks:\n  changed:\n    post:\n      description: A change has occurred\n      requestBody:\n        description: Information about the event\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Event\"\n      responses:\n        \"200\":\n          description: OK\n\n##\n\ncomponents:\n  schemas:\n    Event:\n      properties:\n        type:\n          type: string\n          enum:\n            - TRIP\n            - BOOKING\n            - COMPLAINT\n          example: BOOKING\n        event:\n          - \"#/components/schemas/BookingEvent\"\n          - \"#/components/schemas/BookingEvent\"\n          - \"#/components/schemas/ComplaintEvent\"\n\n    Booker:\n      required:\n        - revision\n        - bookingId\n        - bookerId\n      properties:\n        revision:\n          $ref: \"#/components/schemas/Revision\"\n        bookingId:\n          type: string\n        bookerId:\n          type: string\n\n    TripEvent:\n      required:\n        - type\n        - revision\n        - tripId\n        - resources\n      properties:\n        revision:\n          $ref: \"#/components/schemas/Revision\"\n        tripId:\n          type: string\n        resources:\n          description: \u003e-\n            Resources to be called by receiver to update its data about a trip.\n\n            Title can be used for a human readable description of what has changed. e.g.\n            \"Train ICE 34 at 2021-12-22 13:30 has been cancelled\".\n          type: array\n          items:\n            $ref: \"#/components/schemas/Resource\"\n\n    TripChangeType:\n      type: string\n      enum:\n        - TRIP_CONFIRMED\n        - TRIP_CHANGED\n        - TRIP_CANCELLED\n      examples:\n        - TRIP_CONFIRMED\n        - TRIP_CANCELLED\n\n    BookingEvent:\n      required:\n        - type\n        - revision\n        - bookingId\n        - resources\n      properties:\n        revision:\n          $ref: \"#/components/schemas/Revision\"\n        bookingId:\n          type: string\n          example: 2345\n        resources:\n          description: \u003e-\n            Resources to be called by receiver to update its data about a booking.\n\n            Title can be used for a human readable description of what has changed. e.g.\n            \"Train ICE 34 at 2021-12-22 13:30 has been cancelled\".\n\n            The \"TRIP_CHANGED\" event may only be available if the relevant contract exists.\n          type: array\n          items:\n            $ref: \"#/components/schemas/Resource\"\n\n    BookingChangeType:\n      type: string\n      enum:\n        - BOOKING_CANCELLED\n        - BOOKING_CONFIRMED\n        - FULFILLMENT_REFUNDED\n        - FULFILLMENT_EXCHANGED\n        - FULFILLMENT_CONTROLLED\n        - PLACE_RELEASED\n        - BOOKER_CHANGED\n        - PASSENGER_CHANGED\n        - TRIP_CHANGED\n      example: FULFILLMENT_REFUNDED\n\n    ComplaintEvent:\n      required:\n        - type\n        - revision\n        - complaintId\n        - resources\n      properties:\n        revision:\n          $ref: \"#/components/schemas/Revision\"\n        complaintId:\n          type: string\n        resources:\n          description: \u003e-\n            Resources to be called by receiver to update its data about a complaint.\n          type: array\n          items:\n            $ref: \"#/components/schemas/Resource\"\n\n    ComplaintChangeType:\n      type: string\n      enum:\n        - DECIDED\n        - SETTLED\n        - INFORMATION_MISSING\n      examples:\n        - SETTLED\n\n    ChangeType:\n      oneOf:\n        - \"#/components/schemas/TripChangeType\"\n        - \"#/components/schemas/BookingChangeType\"\n        - \"#/components/schemas/ComplaintChangeType\"\n\n    ##\n\n    Revision:\n      required:\n        - number\n      properties:\n        number:\n          type: string\n        timestamp:\n          type: string\n          format: date-time\n\n    Resource:\n      type: object\n      description: used to represent a non-specified resource in the API.\n      properties:\n        id:\n          type: string\n          description: unique id of this resource on this server.\n        title:\n          type: string\n        changeType:\n          description: \u003e-\n            Defines what type of change has occurred leading to the event.\n          $ref: \"#/components/schemas/ChangeType\"\n        type:\n          type: string\n          enum:\n            - LOCATION\n            - TRIP\n            - TRIPOFFER\n            - OFFER\n            - OFFERPART\n            - PASSENGER\n            - BOOKING\n            - FULFILLMENT\n            - REFUNDOFFER\n            - COMPLAINT\n          example: FULFILLMENT\n        href:\n          type: string\n          format: url\n          example: \"https://db.de/osdm/bookings/2345/fulfillments/ASBV\"\n      required:\n        - id\n        - title\n        - type\n        - href\n"
		}
	},
	"Error": "unmarshal: callback: json: cannot unmarshal array into Go value of type ogen.Schema"
}