{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/project-anuvaad/anuvaad"
		},
		"file": {
			"name": "gv-document-digitize-api-contract.yaml",
			"size": 0,
			"path": "anuvaad-etl/anuvaad-extractor/document-processor/gv-document-digitization/doc/gv-document-digitize-api-contract.yaml",
			"byteSize": 7134,
			"content": "openapi: 3.0.0\ninfo:\n  title: Anuvaad Google Vision Document Digitization\n  description: A python based microservice to trigger and orchestrate block level\n    information present in the given file\n  contact:\n    name: Naresh \u0026 Dhiraj, dhiraj.daga@tarento.com\n    email: naresh.kumar@tarento.com\n  version: 1.0.0\nservers:\n  - url: /api\npaths:\n  /v0/10/document-digitize:\n    post:\n      tags:\n        - digitize\n      summary: API to digitize scanned documents.\n      requestBody:\n        content:\n          \"*/*\":\n            schema:\n              $ref: \"#/components/schemas/DigitizationRequest\"\n        required: true\n      responses:\n        \"200\":\n          description: On successful completion of the job.\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/DigitizationResponse\"\n        \"400\":\n          description: On input errors causing a failure in the job.\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/ErrorCode\"\n      x-codegen-request-body-name: filename\ncomponents:\n  schemas:\n  \n    DigitizationRequest:\n      type: object\n      properties:\n        files:\n          type: array\n          description: a list of objects having file, file_config and its pages\n          items:\n            type: object\n            properties:\n              file:\n                $ref: \"#/components/schemas/File\"\n              file_config:\n                $ref: \"#/components/schemas/FileConfig\"\n          \n    DigitizationResponse:\n      type: object\n      properties:\n        outputs:\n          type: array\n          description: a list of objects having file, file_config and its pages\n          items:\n            type: object\n            properties:\n              file:\n                $ref: \"#/components/schemas/File\"\n              file_config:\n                $ref: \"#/components/schemas/FileConfig\"\n              pages:\n                type: array\n                description: page level paragraph, line, word  and symbol information\n                items:\n                  $ref: \"#/components/schemas/Page\"\n    \n    File:\n      type: object\n      properties:\n        name:\n          type: string\n          description: name of input file\n        type:\n          type: string\n          description: type of input file\n        identifier:\n          type: string\n          description: unique identifier for a file generated by the file converter module.\n    \n    FileConfig:\n      type: object\n      properties:\n        languages:\n          type: array\n          description: list of ISO 639-1  language code\n          items:\n            type: string\n    \n    Page:\n      type: object\n      properties:\n        identifier:\n          type: string\n          description: unique page identifier\n        boundingbox:\n          type: object\n          $ref:  \"#/components/schemas/Vertices\"\n          description: page coordinates\n        path:\n          type: string\n          description: optional placeholder to hold image path of the page\n        resolution:\n          type: integer\n          description: dpi of the page image\n        regions:\n          type: array\n          description: coordinates of extracted regions\n          items:\n            $ref: \"#/components/schemas/Region\"\n    \n    Region:\n      type: object\n      properties:\n        boundingbox:\n          type: object\n          $ref:  \"#/components/schemas/Vertices\"\n          description: region coordinates\n        identifier:\n          type: string\n          description: unique identifier for region\n          format: uuid4\n        class:\n          type: string\n          description: class of detected region\n          enum:\n            - PARA\n            - LINE\n            - IMAGE\n            - TABLE\n            - TABLE_CELL\n            - SEPARATOR\n            - MATHEMATICAL_FORMULA\n            - HEADER\n            - FOOTER\n            - BGIMAGE\n        path:\n          type: string\n          description: optional placeholder to hold image path of the region\n        regions:\n          type: array\n          description: various visual objects present on the page\n          items:\n              oneOf:\n                - $ref: '#/components/schemas/Region'\n                - $ref: '#/components/schemas/DataRegion'\n      required:\n        - boundingbox\n        - identifier\n        - class\n        - regions\n    \n    DataRegion:\n      type: object\n      required:\n        - boundingbox\n        - identifier\n        - confidence\n        - class\n        - text\n        - font\n      properties:\n        boundingbox:\n          type: object\n          $ref:  \"#/components/schemas/Vertices\"\n          description: region coordinates extracted\n        identifier:\n          type: string\n          description: unique identifier for region\n          format: uuid4\n        language:\n          type: string\n          description: language of the extracted text\n        confidence:\n          type: number\n          description: confidence of the extracted text\n        class:\n          type: string\n          description: class of detected region\n          enum:\n            - WORD\n            - SYMBOL\n            - SUPERSCRIPT\n            - SUBSCRIPT\n        text:\n          type: string\n          description: collated text at region level or class specific metadata\n        font:\n          $ref: \"#/components/schemas/Font\"\n      \n  \n    Vertices:\n      type: array\n      description: list of vertex object\n      items:\n        $ref: '#/components/schemas/Vertex'\n    \n    Vertex:\n      type: object\n      description: coordinate of a point, X \u0026 Y\n      required:\n        - x\n        - y\n      properties:\n        x:\n          type: number\n        y:\n          type: number\n      \n    Font:\n      type: object\n      properties:\n        family:\n          type: string\n          description: font family\n        size:\n          type: number\n          description: font size\n        style:\n          type: string\n          description: font style like BOLD, ITALIC, REGULAR\n          enum:\n            - BOLD\n            - ITALIC\n            - REGULAR\n    \n    ErrorCode:\n      type: object\n      properties:\n        code:\n          type: integer\n          description: status code\n          enum:\n            - FILE_NOT_FOUND\n            - FILE_FORMAT_NOT_SUPPORTED\n            - OCR_SERVICE_NOT_AVAILABLE\n            - UNAUTHORIZED_ACCESS\n            - INAPPROPRIATE_DPI_RECEIVED\n            \n        message:\n          type: string\n          description: human understandable format\n      required:\n        - code\n        - message\n    \n    HttpOutput:\n      type: object\n      properties:\n        ok:\n          type: boolean\n          description: request successful indicator.\n        why:\n          type: string\n          description: Response message.\n        status:\n          type: object\n          description: overall operation status\n          $ref: '#/components/schemas/ErrorCode'\n        data:\n          type: integer\n          description: should be null object\n          $ref: '#/components/schemas/DigitizationResponse'\n          \n"
		}
	},
	"Error": "unmarshal: json: cannot unmarshal bool into Go struct field Schema.components.schemas.required of type string"
}