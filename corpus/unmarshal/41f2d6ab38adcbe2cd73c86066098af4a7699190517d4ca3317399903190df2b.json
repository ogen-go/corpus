{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/kalmanolah/925r"
		},
		"file": {
			"name": "api_v2.yaml",
			"size": 0,
			"path": "ninetofiver/static/ninetofiver/docs/schemas/api_v2/api_v2.yaml",
			"byteSize": 45994,
			"content": "openapi: 3.0.0\n\n#####\n# Basic API info\n###\ninfo:\n  version: 2.0.0\n  title: 925r API\n  description: The 925r API, rewritten to be a bit more user-friendly.\n  contact:\n    name: Kalman Olah\n    email: hello+925r@kalmanolah.net\n    url: https://kalmanolah.net\n  license:\n    name: GPLv3\n    url: https://www.gnu.org/licenses/gpl-3.0.html\n\n\n#####\n# Servers\n###\nservers:\n  - url: /api/v2\n  - url: '{server}/api/v2'\n    variables:\n      server:\n        default: https://localhost:8000\n\n\n#####\n# Security\n###\nsecurity:\n  - basicAuth: []\n  - apiKeyAuth: []\n  - oAuth2PasswordAuth: []\n\n\n#####\n# Entity schemas\n###\ncomponents:\n  securitySchemes:\n    basicAuth:\n      type: http\n      scheme: basic\n    apiKeyAuth:\n      type: apiKey\n      in: query\n      name: api_key\n    oAuth2PasswordAuth:\n      type: oauth2\n      flows:\n        password:\n          tokenUrl: /oauth/v2/token/\n          refreshUrl: /oauth/v2/token/\n          scopes: []\n  \n  parameters:\n    page:\n      name: page\n      in: query\n      description: A page number within the paginated result set.\n      schema:\n        type: number\n    page_size:\n      name: page_size\n      in: query\n      description: Number of results to return per page.\n      schema:\n        type: number\n\n  schemas:\n    Gender:\n      type: string\n      enum:\n        - m\n        - f\n    TimesheetStatus:\n      type: string\n      enum:\n        - active\n        - pending\n        - closed\n    LeaveStatus:\n      type: string\n      enum:\n        - draft\n        - pending\n        - approved\n        - rejected\n    BaseModel:\n      type: object\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        type:\n          type: string\n          readOnly: true\n        display_label:\n          type: string\n          readOnly: true\n    MinimalModel:\n      allOf:\n        - $ref: '#/components/schemas/BaseModel'\n    BasicModel:\n      allOf:\n        - $ref: '#/components/schemas/BaseModel'\n        - type: object\n          properties:\n            created_at:\n              type: string\n              format: date-time\n              readOnly: true\n            updated_at:\n              type: string\n              format: date-time\n              readOnly: true\n    MinimalGroup:\n      allOf:\n        - $ref: '#/components/schemas/MinimalModel'\n    MinimalLeaveType:\n      allOf:\n        - $ref: '#/components/schemas/MinimalModel'\n    MinimalPerformanceType:\n      allOf:\n        - $ref: '#/components/schemas/MinimalModel'\n    MinimalCompany:\n      allOf:\n        - $ref: '#/components/schemas/MinimalModel'\n    MinimalContract:\n      allOf:\n        - $ref: '#/components/schemas/MinimalModel'\n    MinimalContractRole:\n      allOf:\n        - $ref: '#/components/schemas/MinimalModel'\n    MinimalLocation:\n      allOf:\n        - $ref: '#/components/schemas/MinimalModel'\n    UserInfo:\n      allOf:\n        - $ref: '#/components/schemas/BaseModel'\n        - type: object\n          properties:\n            birth_date:\n              type: string\n              format: date-time\n            gender:\n              $ref: '#/components/schemas/Gender'\n            country:\n              type: string\n            join_date:\n              type: string\n              format: date-time\n            phone_number:\n              type: string\n    User:\n      allOf:\n        - $ref: '#/components/schemas/BaseModel'\n        - type: object\n          properties:\n            username:\n              type: string\n            email:\n              type: string\n              format: email\n            first_name:\n              type: string\n            last_name:\n              type: string\n            is_active:\n              type: boolean\n            userinfo:\n              $ref: '#/components/schemas/UserInfo'\n    Me:\n      allOf:\n        - $ref: '#/components/schemas/User'\n        - type: object\n          properties:\n            groups:\n              $ref: '#/components/schemas/MinimalGroup'\n            is_staff:\n              type: boolean\n            is_superuser:\n              type: boolean\n    LeaveType:\n      allOf:\n        - $ref: '#/components/schemas/BaseModel'\n        - type: object\n          properties:\n            name:\n              type: string\n    ContractRole:\n      allOf:\n        - $ref: '#/components/schemas/BaseModel'\n        - type: object\n          properties:\n            name:\n              type: string\n    PerformanceType:\n      allOf:\n        - $ref: '#/components/schemas/BaseModel'\n        - type: object\n          properties:\n            name:\n              type: string\n            multiplier:\n              type: number\n              format: double\n    Location:\n      allOf:\n        - $ref: '#/components/schemas/BaseModel'\n        - type: object\n          properties:\n            name:\n              type: string\n    Holiday:\n      allOf:\n        - $ref: '#/components/schemas/BaseModel'\n        - type: object\n          properties:\n            name:\n              type: string\n            date:\n              type: string\n              format: date\n            country:\n              type: string\n    LeaveDate:\n      allOf:\n        - $ref: '#/components/schemas/BasicModel'\n        - type: object\n          properties:\n            starts_at:\n              type: string\n              format: date-time\n            ends_at:\n              type: string\n              format: date-time\n    Contract:\n      allOf:\n        - $ref: '#/components/schemas/BasicModel'\n        - type: object\n          properties:\n            active:\n              type: boolean\n            name:\n              type: string\n            starts_at:\n              type: string\n              format: date-time\n            ends_at:\n              type: string\n              format: date-time\n            description:\n              type: string\n            performance_types:\n              type: array\n              items:\n                $ref: '#/components/schemas/MinimalPerformanceType'\n            company:\n              $ref: '#/components/schemas/MinimalCompany'\n            customer:\n              $ref: '#/components/schemas/MinimalCompany'\n    SupportContract:\n      allOf:\n        - $ref: '#/components/schemas/Contract'\n    ProjectContract:\n      allOf:\n        - $ref: '#/components/schemas/Contract'\n    ConsultancyContract:\n      allOf:\n        - $ref: '#/components/schemas/Contract'\n        - type: object\n          properties:\n            duration:\n              type: number\n              format: double\n    ContractUser:\n      allOf:\n        - $ref: '#/components/schemas/BasicModel'\n        - type: object\n          properties:\n            contract:\n              $ref: '#/components/schemas/MinimalContract'\n            contract_role:\n              $ref: '#/components/schemas/MinimalContractRole'\n    Timesheet:\n      allOf:\n        - $ref: '#/components/schemas/BasicModel'\n        - type: object\n          properties:\n            year:\n              type: number\n            month:\n              type: number\n            status:\n              $ref: '#/components/schemas/TimesheetStatus'\n            attachments:\n              type: array\n              items:\n                type: number\n    TimesheetBody:\n      allOf:\n        - $ref: '#/components/schemas/BasicModel'\n        - type: object\n          properties:\n            year:\n              type: number\n            month:\n              type: number\n            status:\n              $ref: '#/components/schemas/TimesheetStatus'\n            attachments:\n              type: array\n              items:\n                type: number\n    Leave:\n      allOf:\n        - $ref: '#/components/schemas/BasicModel'\n        - type: object\n          properties:\n            status:\n              $ref: '#/components/schemas/LeaveStatus'\n            description:\n              type: string\n            leave_type:\n              $ref: '#/components/schemas/MinimalLeaveType'\n            leavedate_set:\n              type: array\n              items:\n                $ref: '#/components/schemas/LeaveDate'\n            attachments:\n              type: array\n              items:\n                type: number\n    LeaveBody:\n      allOf:\n        - $ref: '#/components/schemas/BasicModel'\n        - type: object\n          properties:\n            status:\n              $ref: '#/components/schemas/LeaveStatus'\n            description:\n              type: string\n            leave_type:\n              type: number\n            starts_at:\n              type: string\n              format: date-time\n            ends_at:\n              type: string\n              format: date-time\n            full_day:\n              type: boolean\n            attachments:\n              type: array\n              items:\n                type: number\n    Whereabout:\n      allOf:\n        - $ref: '#/components/schemas/BasicModel'\n        - type: object\n          properties:\n            location:\n              $ref: '#/components/schemas/MinimalLocation'\n            description:\n              type: string\n            starts_at:\n              type: string\n              format: date-time\n            ends_at:\n              type: string\n              format: date-time\n    WhereaboutBody:\n      allOf:\n        - $ref: '#/components/schemas/BasicModel'\n        - type: object\n          properties:\n            location:\n              type: number\n            description:\n              type: string\n            starts_at:\n              type: string\n              format: date-time\n            ends_at:\n              type: string\n              format: date-time\n    Performance:\n      allOf:\n        - $ref: '#/components/schemas/BasicModel'\n        - type: object\n          properties:\n            contract:\n              $ref: '#/components/schemas/MinimalContract'\n            date:\n              type: string\n              format: date-time\n    ActivityPerformance:\n      allOf:\n        - $ref: '#/components/schemas/Performance'\n        - type: object\n          properties:\n            duration:\n              type: number\n              format: double\n            description:\n              type: string\n            contract_role:\n              $ref: '#/components/schemas/MinimalContractRole'\n            performance_type:\n              $ref: '#/components/schemas/MinimalPerformanceType'\n            redmine_id:\n              type:\n                number\n    StandbyPerformance:\n      allOf:\n        - $ref: '#/components/schemas/Performance'\n    PerformanceBody:\n      allOf:\n        - $ref: '#/components/schemas/BasicModel'\n        - type: object\n          properties:\n            contract:\n              type: number\n            date:\n              type: string\n              format: date-time\n    ActivityPerformanceBody:\n      allOf:\n        - $ref: '#/components/schemas/PerformanceBody'\n        - type: object\n          properties:\n            duration:\n              type: number\n              format: double\n            description:\n              type: string\n            contract_role:\n              type: number\n            performance_type:\n              type: number\n            type:\n              type: string\n              value: ActivityPerformance\n            redmine_id:\n              type: number\n    StandbyPerformanceBody:\n      allOf:\n        - $ref: '#/components/schemas/PerformanceBody'\n        - type: object\n          properties:\n            type:\n              type: string\n              value: StandbyPerformance\n    Attachment:\n      allOf:\n        - $ref: '#/components/schemas/BasicModel'\n        - type: object\n          properties:\n            name:\n              type: string\n            description:\n              type: string\n            slug:\n              type: string\n            file:\n              type: string\n              format: uri\n            file_url:\n              type: string\n              format: uri\n    AttachmentBody:\n      allOf:\n        - $ref: '#/components/schemas/BasicModel'\n        - type: object\n          properties:\n            name:\n              type: string\n            description:\n              type: string\n            file:\n              type: string\n              format: binary\n    PerformanceImportSuggestion:\n      allOf:\n        - type: object\n          properties:\n            id:\n              type: number\n              nullable: true\n            contract:\n              type: number\n            redmine_id:\n              type: number\n            duration:\n              type: number\n              format: double\n            description:\n              type: string\n            date:\n              type: string\n              format: date\n\n\n#####\n# API calls\n###\npaths:\n  /me/:\n    get:\n      operationId: getMe\n      responses: \n        200:\n          description: The currently authenticated user\n          content:\n            application/json:\n              schema: \n                $ref: '#/components/schemas/Me'\n\n  /users/:\n    get:\n      operationId: getUsers\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/page_size'\n        - name: order_by\n          in: query\n          schema:\n            type: string\n            enum:\n              - username\n              - email\n              - first_name\n              - last_name\n        - name: username\n          in: query\n          schema:\n            type: string\n        - name: username__icontains\n          in: query\n          schema:\n            type: string\n        - name: email\n          in: query\n          schema:\n            type: string\n        - name: email__icontains\n          in: query\n          schema:\n            type: string\n        - name: first_name\n          in: query\n          schema:\n            type: string\n        - name: first_name__icontains\n          in: query\n          schema:\n            type: string\n        - name: last_name\n          in: query\n          schema:\n            type: string\n        - name: last_name__icontains\n          in: query\n          schema:\n            type: string\n        - name: is_active\n          in: query\n          schema:\n            type: boolean\n        - name: userinfo__birth_date\n          in: query\n          schema:\n            type: string\n        - name: userinfo__birth_date__month\n          in: query\n          schema:\n            type: number\n        - name: userinfo__birth_date__day\n          in: query\n          schema:\n            type: number\n      responses: \n        200:\n          description: List of users\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  count:\n                    type: number\n                  next:\n                    type: string\n                    format: uri\n                    nullable: true\n                  previous:\n                    type: string\n                    format: uri\n                    nullable: true\n                  results:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/User'\n  /users/{userId}/:\n    parameters:\n      - name: userId\n        in: path\n        schema:\n          type: number\n    get:\n      operationId: getUser\n      responses:\n        200:\n          description: A user\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n\n  /leave_types/:\n    get:\n      operationId: getLeaveTypes\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/page_size'\n      responses:\n        200:\n          description: List of leave types\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  count:\n                    type: number\n                  next:\n                    type: string\n                    format: uri\n                    nullable: true\n                  previous:\n                    type: string\n                    format: uri\n                    nullable: true\n                  results:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/LeaveType'\n  /leave_type/{leaveTypeId}/:\n    parameters:\n      - name: leaveTypeId\n        in: path\n        schema:\n          type: number\n    get:\n      operationId: getLeaveType\n      responses:\n        200:\n          description: A leave type\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LeaveType'\n\n  /contract_roles/:\n    get:\n      operationId: getContractRoles\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/page_size'\n      responses:\n        200:\n          description: List of contract roles\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  count:\n                    type: number\n                  next:\n                    type: string\n                    format: uri\n                    nullable: true\n                  previous:\n                    type: string\n                    format: uri\n                    nullable: true\n                  results:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/ContractRole'\n  /contract_roles/{contractRoleId}/:\n    parameters:\n      - name: contractRoleId\n        in: path\n        schema:\n          type: number\n    get:\n      operationId: getContractRole\n      responses:\n        200:\n          description: A contract role\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContractRole'\n\n  /performance_types/:\n    get:\n      operationId: getPerformanceTypes\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/page_size'\n      responses:\n        200:\n          description: List of performance types\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  count:\n                    type: number\n                  next:\n                    type: string\n                    format: uri\n                    nullable: true\n                  previous:\n                    type: string\n                    format: uri\n                    nullable: true\n                  results:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/PerformanceType'\n  /performance_types/{performanceTypeId}/:\n    parameters:\n      - name: performanceTypeId\n        in: path\n        schema:\n          type: number\n    get:\n      operationId: getPerformanceType\n      responses:\n        200:\n          description: A performance type\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PerformanceType'\n\n  /locations/:\n    get:\n      operationId: getLocations\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/page_size'\n      responses:\n        200:\n          description: List of locations\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  count:\n                    type: number\n                  next:\n                    type: string\n                    format: uri\n                    nullable: true\n                  previous:\n                    type: string\n                    format: uri\n                    nullable: true\n                  results:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Location'\n  /locations/{locationId}/:\n    parameters:\n      - name: locationId\n        in: path\n        schema:\n          type: number\n    get:\n      operationId: getLocation\n      responses:\n        200:\n          description: A location\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Location'\n\n  /holidays/:\n    get:\n      operationId: getHolidays\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/page_size'\n        - name: name\n          in: query\n          schema:\n            type: string\n        - name: name__icontains\n          in: query\n          schema:\n            type: string\n        - name: date\n          in: query\n          schema:\n            type: string\n        - name: date__gt\n          in: query\n          schema:\n            type: string\n        - name: date__gte\n          in: query\n          schema:\n            type: string\n        - name: date__lt\n          in: query\n          schema:\n            type: string\n        - name: date__lte\n          in: query\n          schema:\n            type: string\n        - name: country\n          in: query\n          schema:\n            type: string\n        - name: order_by\n          in: query\n          schema:\n            type: string\n            enum:\n              - name\n              - date\n              - country\n      responses:\n        200:\n          description: List of holidays\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  count:\n                    type: number\n                  next:\n                    type: string\n                    format: uri\n                    nullable: true\n                  previous:\n                    type: string\n                    format: uri\n                    nullable: true\n                  results:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Holiday'\n  /holidays/{holidayId}/:\n    parameters:\n      - name: holidayId\n        in: path\n        schema:\n          type: number\n    get:\n      operationId: getHoliday\n      responses:\n        200:\n          description: A holiday\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Holiday'\n\n  /contracts/:\n    get:\n      operationId: getContracts\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/page_size'\n        - name: name\n          in: query\n          schema:\n            type: string\n        - name: name__icontains\n          in: query\n          schema:\n            type: string\n        - name: active\n          in: query\n          schema:\n            type: string\n        - name: type\n          in: query\n          schema:\n            type: string\n        - name: order_by\n          in: query\n          schema:\n            type: string\n            enum:\n              - name\n              - active\n      responses:\n        200:\n          description: List of contracts\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  count:\n                    type: number\n                  next:\n                    type: string\n                    format: uri\n                    nullable: true\n                  previous:\n                    type: string\n                    format: uri\n                    nullable: true\n                  results:\n                    type: array\n                    items:\n                      oneOf:\n                        - $ref: '#/components/schemas/SupportContract'\n                        - $ref: '#/components/schemas/ConsultancyContract'\n                        - $ref: '#/components/schemas/ProjectContract'\n  /contracts/{contractId}/:\n    parameters:\n      - name: contractId\n        in: path\n        schema:\n          type: number\n    get:\n      operationId: getContract\n      responses:\n        200:\n          description: A contract\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Contract'\n\n  /contract_users/:\n    get:\n      operationId: getContractUsers\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/page_size'\n        - name: contract\n          in: query\n          schema:\n            type: string\n        - name: order_by\n          in: query\n          schema:\n            type: string\n            enum:\n              - contract\n      responses:\n        200:\n          description: List of contract users\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  count:\n                    type: number\n                  next:\n                    type: string\n                    format: uri\n                    nullable: true\n                  previous:\n                    type: string\n                    format: uri\n                    nullable: true\n                  results:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/ContractUser'\n  /contract_users/{contractUserId}/:\n    parameters:\n      - name: contractUserId\n        in: path\n        schema:\n          type: number\n    get:\n      operationId: getContractUser\n      responses:\n        200:\n          description: A contract user\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContractUser'\n\n  /timesheets/:\n    get:\n      operationId: getTimesheets\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/page_size'\n        - name: year\n          in: query\n          schema:\n            type: number\n        - name: year__gt\n          in: query\n          schema:\n            type: number\n        - name: year__gte\n          in: query\n          schema:\n            type: number\n        - name: year__lt\n          in: query\n          schema:\n            type: number\n        - name: year__lte\n          in: query\n          schema:\n            type: number\n        - name: month\n          in: query\n          schema:\n            type: number\n        - name: month__gt\n          in: query\n          schema:\n            type: number\n        - name: month__gte\n          in: query\n          schema:\n            type: number\n        - name: month__lt\n          in: query\n          schema:\n            type: number\n        - name: month__lte\n          in: query\n          schema:\n            type: number\n        - name: status\n          in: query\n          schema:\n            type: string\n        - name: order_by\n          in: query\n          schema:\n            type: string\n            enum:\n              - year\n              - month\n              - status\n      responses:\n        200:\n          description: List of timesheets\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  count:\n                    type: number\n                  next:\n                    type: string\n                    format: uri\n                    nullable: true\n                  previous:\n                    type: string\n                    format: uri\n                    nullable: true\n                  results:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Timesheet'\n    post:\n      operationId: postTimesheet\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TimesheetBody'\n      responses:\n        201:\n          description: A created timesheet\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Timesheet'\n  /timesheets/{timesheetId}/:\n    parameters:\n      - name: timesheetId\n        in: path\n        schema:\n          type: number\n    get:\n      operationId: getTimesheet\n      responses:\n        200:\n          description: A timesheet\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Timesheet'\n    put:\n      operationId: putTimesheet\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TimesheetBody'\n      responses:\n        200:\n          description: A timesheet\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Timesheet'\n    delete:\n      operationId: deleteTimesheet\n      responses:\n        204:\n          description: A timesheet\n\n  /leave/:\n    get:\n      operationId: getLeave\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/page_size'\n        - name: status\n          in: query\n          schema:\n            type: string\n        - name: description\n          in: query\n          schema:\n            type: string\n        - name: description__icontains\n          in: query\n          schema:\n            type: string\n        - name: order_by\n          in: query\n          schema:\n            type: string\n            enum:\n              - status\n        - name: date__range\n          in: query\n          schema:\n            type: string\n      responses:\n        200:\n          description: List of leave\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  count:\n                    type: number\n                  next:\n                    type: string\n                    format: uri\n                    nullable: true\n                  previous:\n                    type: string\n                    format: uri\n                    nullable: true\n                  results:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Leave'\n    post:\n      operationId: postLeave\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LeaveBody'\n      responses:\n        201:\n          description: A created leave\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Leave'\n  /leave/{leaveId}/:\n    parameters:\n      - name: leaveId\n        in: path\n        schema:\n          type: number\n    get:\n      operationId: getLeave\n      responses:\n        200:\n          description: A leave\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Leave'\n    put:\n      operationId: putLeave\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LeaveBody'\n      responses:\n        200:\n          description: A leave\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Leave'\n    delete:\n      operationId: deleteLeave\n      responses:\n        204:\n          description: A leave\n\n  /whereabouts/:\n    get:\n      operationId: getWhereabouts\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/page_size'\n        - name: location\n          in: query\n          schema:\n            type: string\n        - name: description\n          in: query\n          schema:\n            type: string\n        - name: description__icontains\n          in: query\n          schema:\n            type: string\n        - name: starts_at__range\n          in: query\n          schema:\n            type: string\n        - name: order_by\n          in: query\n          schema:\n            type: string\n            enum:\n              - starts_at\n      responses:\n        200:\n          description: List of whereabouts\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  count:\n                    type: number\n                  next:\n                    type: string\n                    format: uri\n                    nullable: true\n                  previous:\n                    type: string\n                    format: uri\n                    nullable: true\n                  results:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Whereabout'\n    post:\n      operationId: postWhereabout\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/WhereaboutBody'\n      responses:\n        201:\n          description: A created whereabout\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Whereabout'\n  /whereabouts/{whereaboutId}/:\n    parameters:\n      - name: whereaboutId\n        in: path\n        schema:\n          type: number\n    get:\n      operationId: getWhereabout\n      responses:\n        200:\n          description: A whereabout\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Whereabout'\n    put:\n      operationId: putWhereabout\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/WhereaboutBody'\n      responses:\n        200:\n          description: A whereabout\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Whereabout'\n    delete:\n      operationId: deleteWhereabout\n      responses:\n        204:\n          description: A whereabout\n\n  /performances/:\n    get:\n      operationId: getPerformances\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/page_size'\n        - name: date\n          in: query\n          schema:\n            type: string\n        - name: date__range\n          in: query\n          description: \"Multiple values may be separated by commas.\"\n          schema:\n            type: string\n        - name: contract\n          in: query\n          schema:\n            type: string\n        - name: type\n          in: query\n          schema:\n            type: string\n        - name: order_by\n          in: query\n          schema:\n            type: string\n            enum:\n              - date\n      responses:\n        200:\n          description: List of performances\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  count:\n                    type: number\n                  next:\n                    type: string\n                    format: uri\n                    nullable: true\n                  previous:\n                    type: string\n                    format: uri\n                    nullable: true\n                  results:\n                    type: array\n                    items:\n                      oneOf:\n                        - $ref: '#/components/schemas/ActivityPerformance'\n                        - $ref: '#/components/schemas/StandbyPerformance'\n    post:\n      operationId: postPerformance\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - $ref: '#/components/schemas/ActivityPerformanceBody'\n                - $ref: '#/components/schemas/StandbyPerformanceBody'\n      responses:\n        201:\n          description: A created performance\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: '#/components/schemas/ActivityPerformance'\n                  - $ref: '#/components/schemas/StandbyPerformance'\n  /performances/{performanceId}/:\n    parameters:\n      - name: performanceId\n        in: path\n        schema:\n          type: number\n    get:\n      operationId: getPerformance\n      responses:\n        200:\n          description: A performance\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: '#/components/schemas/ActivityPerformance'\n                  - $ref: '#/components/schemas/StandbyPerformance'\n    put:\n      operationId: putPerformance\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - $ref: '#/components/schemas/ActivityPerformanceBody'\n                - $ref: '#/components/schemas/StandbyPerformanceBody'\n      responses:\n        200:\n          description: A performance\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: '#/components/schemas/ActivityPerformance'\n                  - $ref: '#/components/schemas/StandbyPerformance'\n    delete:\n      operationId: deletePerformance\n      responses:\n        204:\n          description: A performance\n\n  /feeds/leave/all.ics:\n    get:\n      operationId: getLeaveFeed\n      responses:\n        200:\n          description: iCal feed\n          content:\n            application/json:\n              schema:\n                type: string\n                format: binary\n  /feeds/leave/me.ics:\n    get:\n      operationId: getMyLeaveFeed\n      responses:\n        200:\n          description: iCal feed\n          content:\n            application/json:\n              schema:\n                type: string\n                format: binary\n  /feeds/leave/{username}.ics:\n    parameters:\n      - name: username\n        in: path\n        schema:\n          type: string\n    get:\n      operationId: getUserLeaveFeed\n      responses:\n        200:\n          description: iCal feed\n          content:\n            application/json:\n              schema:\n                type: string\n                format: binary\n  /feeds/whereabouts/all.ics:\n    get:\n      operationId: getWhereaboutFeed\n      responses:\n        200:\n          description: iCal feed\n          content:\n            application/json:\n              schema:\n                type: string\n                format: binary\n  /feeds/whereabouts/me.ics:\n    get:\n      operationId: getMyWhereaboutFeed\n      responses:\n        200:\n          description: iCal feed\n          content:\n            application/json:\n              schema:\n                type: string\n                format: binary\n  /feeds/whereabouts/{username}.ics:\n    parameters:\n      - name: username\n        in: path\n        schema:\n          type: string\n    get:\n      operationId: getUserWhereaboutFeed\n      responses:\n        200:\n          description: iCal feed\n          content:\n            application/json:\n              schema:\n                type: string\n                format: binary\n\n  /attachments/:\n    get:\n      operationId: getAttachments\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/page_size'\n        - name: name\n          in: query\n          schema:\n            type: string\n        - name: name__icontains\n          in: query\n          schema:\n            type: string\n        - name: description\n          in: query\n          schema:\n            type: string\n        - name: description__icontains\n          in: query\n          schema:\n            type: string\n        - name: leave\n          in: query\n          schema:\n            type: string\n        - name: timesheet\n          in: query\n          schema:\n            type: string\n        - name: order_by\n          in: query\n          schema:\n            type: string\n            enum:\n              - name\n      responses:\n        200:\n          description: List of attachments\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  count:\n                    type: number\n                  next:\n                    type: string\n                    format: uri\n                    nullable: true\n                  previous:\n                    type: string\n                    format: uri\n                    nullable: true\n                  results:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Attachment'\n    post:\n      operationId: postAttachment\n      requestBody:\n        required: true\n        content:\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/AttachmentBody'\n      responses:\n        201:\n          description: A created attachment\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Attachment'\n  /attachments/{attachmentId}/:\n    parameters:\n      - name: attachmentId\n        in: path\n        schema:\n          type: number\n    get:\n      operationId: getAttachment\n      responses:\n        200:\n          description: An attachment\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Attachment'\n    put:\n      operationId: putAttachment\n      requestBody:\n        required: true\n        content:\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/AttachmentBody'\n      responses:\n        200:\n          description: An attachment\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Attachment'\n    delete:\n      operationId: deleteAttachment\n      responses:\n        204:\n          description: An attachment\n  \n  /downloads/attachments/{slug}/:\n    parameters:\n      - name: slug\n        in: path\n        schema:\n          type: string\n    get:\n      operationId: getAttachmentDownload\n      responses:\n        200:\n          description: File\n          content:\n            application/json:\n              schema:\n                type: string\n                format: binary\n  /downloads/company_logos/{companyId}/:\n    parameters:\n      - name: companyId\n        in: path\n        schema:\n          type: number\n    get:\n      operationId: getCompanyLogoDownload\n      responses:\n        200:\n          description: File\n          content:\n            application/json:\n              schema:\n                type: string\n                format: binary\n  /downloads/timesheet_contract_pdf/{timesheetId}/{contractId}/:\n    parameters:\n      - name: timesheetId\n        in: path\n        schema:\n          type: number\n      - name: contractId\n        in: path\n        schema:\n          type: number\n    get:\n      operationId: getTimesheetContractPdfDownload\n      responses:\n        200:\n          description: File\n          content:\n            application/json:\n              schema:\n                type: string\n                format: binary\n\n  /imports/performances/:\n    get:\n      operationId: getPerformanceImports\n      parameters:\n        - name: from\n          schema:\n            type: string\n            format: date\n          in: query\n          required: true\n        - name: until\n          schema:\n            type: string\n            format: date\n          in: query\n          required: true\n      responses:\n        200:\n          description: List of performance import suggestions\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  count:\n                    type: number\n                  next:\n                    type: string\n                    format: uri\n                    nullable: true\n                  previous:\n                    type: string\n                    format: uri\n                    nullable: true\n                  results:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/PerformanceImportSuggestion'\n\n  /range_availability/:\n    get:\n      operationId: getRangeAvailability\n      parameters:\n        - name: from\n          schema:\n            type: string\n            format: date\n          in: query\n          required: true\n        - name: until\n          schema:\n            type: string\n            format: date\n          in: query\n          required: true\n        - name: user\n          schema:\n            type: number\n          in: query\n          required: false\n      responses:\n        200:\n          description: Availability information\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n                  additionalProperties:\n                    type: array\n                    items:\n                      type: string\n\n  /range_info/:\n    get:\n      operationId: getRangeInfo\n      parameters:\n        - name: from\n          schema:\n            type: string\n            format: date\n          in: query\n          required: true\n        - name: until\n          schema:\n            type: string\n            format: date\n          in: query\n          required: true\n        - name: daily\n          schema:\n            type: boolean\n          in: query\n          required: false\n        - name: detailed\n          schema:\n            type: boolean\n          in: query\n          required: false\n        - name: summary\n          schema:\n            type: boolean\n          in: query\n          required: false\n      responses:\n        200:\n          description: Range information\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: true"
		}
	},
	"Error": "unmarshal: json: line 1:8512: json: cannot unmarshal array into Go struct field OAuthFlow.components.securitySchemes.flows.password.scopes of type map[string]string"
}