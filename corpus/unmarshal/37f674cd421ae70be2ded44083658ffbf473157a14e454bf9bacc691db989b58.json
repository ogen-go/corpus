{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "gitlab.com/tikiwiki/tiki"
		},
		"file": {
			"name": "index.yaml",
			"size": 0,
			"path": "templates/api/docs/index.yaml",
			"byteSize": 4549,
			"content": "---\nopenapi: \"3.0.0\"\ninfo:\n  version: 1.0.0\n  title: Tiki API\n  description: This is the default Tiki API allowing programmable access to the Tiki system.\n  termsOfService: https://tiki.org/terms-of-service\n  contact:\n    name: Tiki Developers\n    email: tikiwiki-devel@lists.sourceforge.net\n    url: https://tiki.org/Contact-Us\n  license:\n    name: LGPL 2.1\n    url: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html\nexternalDocs:\n  description: Tiki documentation\n  url: https://doc.tiki.org/Documentation\nservers:\n  - url: {server-url}\nsecurity:\n  - bearerAuth: []\npaths:\n  /oauth/public-key:\n    $ref: paths-oauth-public_key.yaml\n  /oauth/authorize:\n    $ref: paths-oauth-authorize.yaml\n  /oauth/access_token:\n    $ref: paths-oauth-access_token.yaml\n  /version:\n    $ref: paths-version.yaml\n  /categories:\n    $ref: paths-categories-index.yaml\n  /categories/{categId}:\n    $ref: paths-categories-entity.yaml\n  /categorize:\n    $ref: paths-categories-categorize.yaml\n  /uncategorize:\n    $ref: paths-categories-uncategorize.yaml\n  /comments:\n    $ref: paths-comments-index.yaml\n  /comments/{threadId}:\n    $ref: paths-comments-entity.yaml\n  /comments/lock:\n    $ref: paths-comments-lock.yaml\n  /comments/unlock:\n    $ref: paths-comments-unlock.yaml\n  /comments/{threadId}/approve:\n    $ref: paths-comments-approve.yaml\n  /comments/{threadId}/reject:\n    $ref: paths-comments-reject.yaml\n  /comments/{threadId}/archive:\n    $ref: paths-comments-archive.yaml\n  /comments/{threadId}/unarchive:\n    $ref: paths-comments-unarchive.yaml\n  /groups:\n    $ref: paths-groups-index.yaml\n  /groups/{olgroup}:\n    $ref: paths-groups-entity.yaml\n  /groups/add_users:\n    $ref: paths-groups-add_users.yaml\n  /groups/ban_users:\n    $ref: paths-groups-ban_users.yaml\n  /groups/delete:\n    $ref: paths-groups-delete.yaml\n  /search/lookup:\n    $ref: paths-search-lookup.yaml\n  /search/process-queue:\n    $ref: paths-search-process_queue.yaml\n  /search/rebuild:\n    $ref: paths-search-rebuild.yaml\n  /tabulars:\n    $ref: paths-tabulars-index.yaml\n  /tabulars/{tabularId}:\n    $ref: paths-tabulars-entity.yaml\n  /tabulars/{tabularId}/export:\n    $ref: paths-tabulars-export.yaml\n  /tabulars/{tabularId}/import:\n    $ref: paths-tabulars-import.yaml\n  /trackers:\n    $ref: paths-trackers-index.yaml\n  /trackers/{trackerId}:\n    $ref: paths-trackers-entity.yaml\n  /trackers/{trackerId}/clear:\n    $ref: paths-trackers-clear.yaml\n  /trackers/{trackerId}/duplicate:\n    $ref: paths-trackers-duplicate.yaml\n  /trackers/{trackerId}/dump:\n    $ref: paths-trackers-dump.yaml\n  /trackers/{trackerId}/export:\n    $ref: paths-trackers-export.yaml\n  /trackers/{trackerId}/fields:\n    $ref: paths-trackers-fields-index.yaml\n  /trackers/{trackerId}/fields/{fieldId}:\n    $ref: paths-trackers-fields-entity.yaml\n  /trackers/{trackerId}/fields/export:\n    $ref: paths-trackers-fields-export.yaml\n  /trackers/{trackerId}/items:\n    $ref: paths-trackers-items-index.yaml\n  /trackers/{trackerId}/items/{itemId}:\n    $ref: paths-trackers-items-entity.yaml\n  /trackers/{trackerId}/items/{itemId}/clone:\n    $ref: paths-trackers-items-clone.yaml\n  /trackers/{trackerId}/items/{itemId}/status:\n    $ref: paths-trackers-items-status.yaml\n  /translations/{type}/{source}:\n    $ref: paths-translations-index.yaml\n  /translations/{type}/{source}/attach:\n    $ref: paths-translations-attach.yaml\n  /translations/{type}/{source}/detach:\n    $ref: paths-translations-detach.yaml\n  /translate:\n    $ref: paths-translate.yaml\n  /users:\n    $ref: paths-users-index.yaml\n  /users/{username}:\n    $ref: paths-users-entity.yaml\n  /users/delete:\n    $ref: paths-users-delete.yaml\n  /users/groups:\n    $ref: paths-users-groups.yaml\n  /users/email-wikipage:\n    $ref: paths-users-email_wikipage.yaml\n  /users/send-message:\n    $ref: paths-users-send_message.yaml\n  /message-count:\n    $ref: paths-users-message_count.yaml\n  /wiki:\n    $ref: paths-wiki-index.yaml\n  /wiki/page/{page}:\n    $ref: paths-wiki-entity.yaml\n  /wiki/page/{page}/delete:\n    $ref: paths-wiki-version_delete.yaml\n  /wiki/delete:\n    $ref: paths-wiki-delete.yaml\n  /wiki/title:\n    $ref: paths-wiki-title.yaml\n  /wiki/lock:\n    $ref: paths-wiki-lock.yaml\n  /wiki/unlock:\n    $ref: paths-wiki-unlock.yaml\n  /wiki/zip:\n    $ref: paths-wiki-zip.yaml\ncomponents:\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      description: Obtain bearer token keys either in your Tiki admin Security page by manually creating them or setting up Tiki OAuth 2.0 server that generates JWT tokens to authenticated clients.\n"
		}
	},
	"Error": "unmarshal: json: line 1:4544: json: cannot unmarshal object into Go struct field Server.servers.url of type string"
}