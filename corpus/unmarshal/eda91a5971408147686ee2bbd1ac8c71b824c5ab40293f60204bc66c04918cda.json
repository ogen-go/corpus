{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/agersant/polaris"
		},
		"file": {
			"name": "polaris-api.json",
			"size": 0,
			"path": "docs/swagger/polaris-api.json",
			"byteSize": 53204,
			"content": "{\n    \"openapi\": \"3.0.0\",\n    \"info\": {\n        \"description\": \"\",\n        \"version\": \"5.0\",\n        \"title\": \"Polaris\",\n        \"termsOfService\": \"\"\n    },\n    \"servers\": [\n        {\n            \"url\": \"/api\"\n        }\n    ],\n    \"tags\": [\n        {\n            \"name\": \"Collection\",\n            \"description\": \"Browsing the music collection\"\n        },\n        {\n            \"name\": \"Configuration\",\n            \"description\": \"Managing the polaris installation\"\n        },\n        {\n            \"name\": \"Last.fm\",\n            \"description\": \"Integrating with Last.fm\"\n        },\n        {\n            \"name\": \"Playlists\",\n            \"description\": \"Managing playlists\"\n        },\n        {\n            \"name\": \"Users\",\n            \"description\": \"Managing user accounts\"\n        },\n        {\n            \"name\": \"Other\"\n        }\n    ],\n    \"paths\": {\n        \"/version\": {\n            \"get\": {\n                \"tags\": [\n                    \"Other\"\n                ],\n                \"summary\": \"Returns which API version this server implements\",\n                \"operationId\": \"getVersion\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Version\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/initial_setup\": {\n            \"get\": {\n                \"tags\": [\n                    \"Other\"\n                ],\n                \"summary\": \"Returns the current state of the initial setup flow\",\n                \"operationId\": \"getInitialSetup\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/InitialSetup\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/trigger_index\": {\n            \"post\": {\n                \"tags\": [\n                    \"Other\"\n                ],\n                \"summary\": \"Begins or queues a crawl of the music collection\",\n                \"operationId\": \"postTriggerIndex\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"admin_http_basic\": [],\n                        \"admin_http_bearer\": [],\n                        \"admin_query_parameter\": [],\n                        \"admin_cookie\": []\n                    }\n                ]\n            }\n        },\n        \"/config\": {\n            \"put\": {\n                \"tags\": [\n                    \"Configuration\"\n                ],\n                \"summary\": \"Amends the server settings, mount directories and list of users\",\n                \"operationId\": \"putConfig\",\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#components/schemas/Config\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"admin_http_basic\": [],\n                        \"admin_http_bearer\": [],\n                        \"admin_query_parameter\": [],\n                        \"admin_cookie\": []\n                    }\n                ]\n            }\n        },\n        \"/mount_dirs\": {\n            \"get\": {\n                \"tags\": [\n                    \"Configuration\"\n                ],\n                \"summary\": \"Reads the existing collection mount directories\",\n                \"operationId\": \"getMountDirs\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"array\",\n                                    \"$ref\": \"#components/schemas/MountDir\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"admin_http_basic\": [],\n                        \"admin_http_bearer\": [],\n                        \"admin_query_parameter\": [],\n                        \"admin_cookie\": []\n                    }\n                ]\n            },\n            \"put\": {\n                \"tags\": [\n                    \"Configuration\"\n                ],\n                \"summary\": \"Replaces the list collection mount directories\",\n                \"operationId\": \"putMountDirs\",\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"type\": \"array\",\n                                \"$ref\": \"#components/schemas/MountDir\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"admin_http_basic\": [],\n                        \"admin_http_bearer\": [],\n                        \"admin_query_parameter\": [],\n                        \"admin_cookie\": []\n                    }\n                ]\n            }\n        },\n        \"/settings\": {\n            \"get\": {\n                \"tags\": [\n                    \"Configuration\"\n                ],\n                \"summary\": \"Reads the existing server settings\",\n                \"operationId\": \"getSettings\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#components/schemas/Settings\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"admin_http_basic\": [],\n                        \"admin_http_bearer\": [],\n                        \"admin_query_parameter\": [],\n                        \"admin_cookie\": []\n                    }\n                ]\n            },\n            \"put\": {\n                \"tags\": [\n                    \"Configuration\"\n                ],\n                \"summary\": \"Amends the server settings\",\n                \"operationId\": \"putSettings\",\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#components/schemas/Settings\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"admin_http_basic\": [],\n                        \"admin_http_bearer\": [],\n                        \"admin_query_parameter\": [],\n                        \"admin_cookie\": []\n                    }\n                ]\n            }\n        },\n        \"/users\": {\n            \"get\": {\n                \"tags\": [\n                    \"Users\"\n                ],\n                \"summary\": \"List existing user accounts\",\n                \"operationId\": \"getUsers\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/User\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"admin_http_basic\": [],\n                        \"admin_http_bearer\": [],\n                        \"admin_query_parameter\": [],\n                        \"admin_cookie\": []\n                    }\n                ]\n            }\n        },\n        \"/user\": {\n            \"post\": {\n                \"tags\": [\n                    \"Users\"\n                ],\n                \"summary\": \"Creates a new user account\",\n                \"operationId\": \"postUser\",\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#components/schemas/NewUser\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"admin_http_basic\": [],\n                        \"admin_http_bearer\": [],\n                        \"admin_query_parameter\": [],\n                        \"admin_cookie\": []\n                    }\n                ]\n            }\n        },\n        \"/user/{name}\": {\n            \"put\": {\n                \"tags\": [\n                    \"Users\"\n                ],\n                \"summary\": \"Updates properties of an existing user\",\n                \"operationId\": \"putUserName\",\n                \"parameters\": [\n                    {\n                        \"name\": \"name\",\n                        \"in\": \"path\",\n                        \"description\": \"Name of the affected user\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#components/schemas/UserUpdate\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"admin_http_basic\": [],\n                        \"admin_http_bearer\": [],\n                        \"admin_query_parameter\": [],\n                        \"admin_cookie\": []\n                    }\n                ]\n            },\n            \"delete\": {\n                \"tags\": [\n                    \"Users\"\n                ],\n                \"summary\": \"Deletes an existing user\",\n                \"operationId\": \"deleteUserName\",\n                \"parameters\": [\n                    {\n                        \"name\": \"name\",\n                        \"in\": \"path\",\n                        \"description\": \"Name of the affected user\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"admin_http_basic\": [],\n                        \"admin_http_bearer\": [],\n                        \"admin_query_parameter\": [],\n                        \"admin_cookie\": []\n                    }\n                ]\n            }\n        },\n        \"/preferences\": {\n            \"get\": {\n                \"tags\": [\n                    \"Users\"\n                ],\n                \"summary\": \"Reads the preferences of the current user\",\n                \"operationId\": \"getPreferences\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#components/schemas/Preferences\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"auth_http_basic\": [],\n                        \"auth_http_bearer\": [],\n                        \"auth_query_parameter\": [],\n                        \"auth_cookie\": []\n                    }\n                ]\n            },\n            \"put\": {\n                \"tags\": [\n                    \"Users\"\n                ],\n                \"summary\": \"Saves the preferences of the current user\",\n                \"operationId\": \"putPreferences\",\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#components/schemas/Preferences\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"auth_http_basic\": [],\n                        \"auth_http_bearer\": [],\n                        \"auth_query_parameter\": [],\n                        \"auth_cookie\": []\n                    }\n                ]\n            }\n        },\n        \"/auth\": {\n            \"post\": {\n                \"tags\": [\n                    \"Users\"\n                ],\n                \"summary\": \"Signs in a user. Response has Set-Cookie headers for the session, username and admin permission of the user.\",\n                \"operationId\": \"postAuth\",\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#components/schemas/Credentials\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Authorization\"\n                                }\n                            }\n                        }\n                    },\n                    \"401\": {\n                        \"description\": \"Invalid credentials\"\n                    }\n                }\n            }\n        },\n        \"/browse\": {\n            \"get\": {\n                \"tags\": [\n                    \"Collection\"\n                ],\n                \"summary\": \"Reads the content of the top-level directory in the music collection\",\n                \"operationId\": \"getBrowse\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/CollectionFile\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"auth_http_basic\": [],\n                        \"auth_http_bearer\": [],\n                        \"auth_query_parameter\": [],\n                        \"auth_cookie\": []\n                    }\n                ]\n            }\n        },\n        \"/browse/{location}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Collection\"\n                ],\n                \"summary\": \"Reads the content of a directory in the music collection\",\n                \"operationId\": \"getBrowsePath\",\n                \"parameters\": [\n                    {\n                        \"name\": \"location\",\n                        \"in\": \"path\",\n                        \"description\": \"Path to the collection directory begin explored\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/CollectionFile\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"auth_http_basic\": [],\n                        \"auth_http_bearer\": [],\n                        \"auth_query_parameter\": [],\n                        \"auth_cookie\": []\n                    }\n                ]\n            }\n        },\n        \"/flatten\": {\n            \"get\": {\n                \"tags\": [\n                    \"Collection\"\n                ],\n                \"summary\": \"Recursively lists all the songs in the music collection\",\n                \"operationId\": \"getFlatten\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/Song\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"auth_http_basic\": [],\n                        \"auth_http_bearer\": [],\n                        \"auth_query_parameter\": [],\n                        \"auth_cookie\": []\n                    }\n                ]\n            }\n        },\n        \"/flatten/{location}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Collection\"\n                ],\n                \"summary\": \"Recursively lists all the songs within a directory of the music collection\",\n                \"operationId\": \"getFlattenPath\",\n                \"parameters\": [\n                    {\n                        \"name\": \"location\",\n                        \"in\": \"path\",\n                        \"description\": \"Path to the collection directory begin explored\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/Song\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"auth_http_basic\": [],\n                        \"auth_http_bearer\": [],\n                        \"auth_query_parameter\": [],\n                        \"auth_cookie\": []\n                    }\n                ]\n            }\n        },\n        \"/random\": {\n            \"get\": {\n                \"tags\": [\n                    \"Collection\"\n                ],\n                \"summary\": \"Returns a list of random albums\",\n                \"operationId\": \"getRandom\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/Directory\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"auth_http_basic\": [],\n                        \"auth_http_bearer\": [],\n                        \"auth_query_parameter\": [],\n                        \"auth_cookie\": []\n                    }\n                ]\n            }\n        },\n        \"/recent\": {\n            \"get\": {\n                \"tags\": [\n                    \"Collection\"\n                ],\n                \"summary\": \"Returns the albums most recently added to the collection\",\n                \"operationId\": \"getRecent\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/Directory\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"auth_http_basic\": [],\n                        \"auth_http_bearer\": [],\n                        \"auth_query_parameter\": [],\n                        \"auth_cookie\": []\n                    }\n                ]\n            }\n        },\n        \"/search/{query}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Collection\"\n                ],\n                \"summary\": \"Searches for songs and directories\",\n                \"operationId\": \"getSearch\",\n                \"parameters\": [\n                    {\n                        \"name\": \"query\",\n                        \"in\": \"path\",\n                        \"description\": \"Search query used to filter results\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/CollectionFile\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"auth_http_basic\": [],\n                        \"auth_http_bearer\": [],\n                        \"auth_query_parameter\": [],\n                        \"auth_cookie\": []\n                    }\n                ]\n            }\n        },\n        \"/audio/{file}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Collection\"\n                ],\n                \"summary\": \"Access a media file in the collection\",\n                \"operationId\": \"getAudio\",\n                \"parameters\": [\n                    {\n                        \"name\": \"file\",\n                        \"in\": \"path\",\n                        \"description\": \"Path to the desired file\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\",\n                        \"content\": {\n                            \"audio/*\": {\n                                \"schema\": {\n                                    \"format\": \"binary\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"auth_http_basic\": [],\n                        \"auth_http_bearer\": [],\n                        \"auth_query_parameter\": [],\n                        \"auth_cookie\": []\n                    }\n                ]\n            }\n        },\n        \"/thumbnail/{file}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Collection\"\n                ],\n                \"summary\": \"Generate an image thumbnail for a media file in the collection\",\n                \"operationId\": \"getServe\",\n                \"parameters\": [\n                    {\n                        \"name\": \"file\",\n                        \"in\": \"path\",\n                        \"description\": \"Path to the desired file\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"size\",\n                        \"in\": \"query\",\n                        \"description\": \"The maximum size of the thumbnail, either small (400x400), large (1200x1200) or native\",\n                        \"schema\": {\n                            \"type\": \"string\",\n                            \"enum\": [\"small\", \"large\", \"native\"],\n                            \"default\": \"small\"\n                        }\n                    },\n                    {\n                        \"name\": \"pad\",\n                        \"in\": \"query\",\n                        \"description\": \"Indicates whether the thumbnail should be padded to a square aspect-ratio\",\n                        \"schema\": {\n                            \"type\": \"boolean\",\n                            \"default\": true\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\",\n                        \"content\": {\n                            \"image/*\": {\n                                \"schema\": {\n                                    \"format\": \"binary\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"auth_http_basic\": [],\n                        \"auth_http_bearer\": [],\n                        \"auth_query_parameter\": [],\n                        \"auth_cookie\": []\n                    }\n                ]\n            }\n        },\n        \"/playlists\": {\n            \"get\": {\n                \"tags\": [\n                    \"Playlists\"\n                ],\n                \"summary\": \"Lists the playlists belonging to the current user\",\n                \"operationId\": \"getPlaylists\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/ListPlaylistsEntry\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"auth_http_basic\": [],\n                        \"auth_http_bearer\": [],\n                        \"auth_query_parameter\": [],\n                        \"auth_cookie\": []\n                    }\n                ]\n            }\n        },\n        \"/playlist/{playlistName}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Playlists\"\n                ],\n                \"summary\": \"Reads the content of a playlist\",\n                \"operationId\": \"getPlaylist\",\n                \"parameters\": [\n                    {\n                        \"name\": \"playlistName\",\n                        \"in\": \"path\",\n                        \"description\": \"Name of the playlist to read\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/Song\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"auth_http_basic\": [],\n                        \"auth_http_bearer\": [],\n                        \"auth_query_parameter\": [],\n                        \"auth_cookie\": []\n                    }\n                ]\n            },\n            \"put\": {\n                \"tags\": [\n                    \"Playlists\"\n                ],\n                \"summary\": \"Saves a playlist\",\n                \"operationId\": \"putPlaylist\",\n                \"parameters\": [\n                    {\n                        \"name\": \"playlistName\",\n                        \"in\": \"path\",\n                        \"description\": \"Name of the playlist to save\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/SavePlaylistInput\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"auth_http_basic\": [],\n                        \"auth_http_bearer\": [],\n                        \"auth_query_parameter\": [],\n                        \"auth_cookie\": []\n                    }\n                ]\n            },\n            \"delete\": {\n                \"tags\": [\n                    \"Playlists\"\n                ],\n                \"summary\": \"Deletes a playlist\",\n                \"operationId\": \"deletePlaylist\",\n                \"parameters\": [\n                    {\n                        \"name\": \"playlistName\",\n                        \"in\": \"path\",\n                        \"description\": \"Name of the playlist to delete\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"auth_http_basic\": [],\n                        \"auth_http_bearer\": [],\n                        \"auth_query_parameter\": [],\n                        \"auth_cookie\": []\n                    }\n                ]\n            }\n        },\n        \"/lastfm/now_playing/{song}\": {\n            \"put\": {\n                \"tags\": [\n                    \"Last.fm\"\n                ],\n                \"summary\": \"Tells Last.fm the song currently being played\",\n                \"operationId\": \"putLastFMNowPlaying\",\n                \"parameters\": [\n                    {\n                        \"name\": \"song\",\n                        \"in\": \"path\",\n                        \"description\": \"Path to the song being played\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"auth_http_basic\": [],\n                        \"auth_http_bearer\": [],\n                        \"auth_query_parameter\": [],\n                        \"auth_cookie\": []\n                    }\n                ]\n            }\n        },\n        \"/lastfm/scrobble/{song}\": {\n            \"post\": {\n                \"tags\": [\n                    \"Last.fm\"\n                ],\n                \"summary\": \"Tells Last.fm that a song has been playing for long enough to be scrobbled\",\n                \"operationId\": \"postLastFMScrobble\",\n                \"parameters\": [\n                    {\n                        \"name\": \"song\",\n                        \"in\": \"path\",\n                        \"description\": \"Path to the song being played\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"auth_http_basic\": [],\n                        \"auth_http_bearer\": [],\n                        \"auth_query_parameter\": [],\n                        \"auth_cookie\": []\n                    }\n                ]\n            }\n        },\n        \"/lastfm/link_token\": {\n            \"get\": {\n                \"tags\": [\n                    \"Last.fm\"\n                ],\n                \"summary\": \"Obtain an authentication token to be used when linking a Polaris account to a Last.fm account. The token is only valid for 10 minutes.\",\n                \"operationId\": \"getLastFMLinkToken\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/LastFMLinkToken\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"auth_http_basic\": [],\n                        \"auth_http_bearer\": [],\n                        \"auth_query_parameter\": [],\n                        \"auth_cookie\": []\n                    }\n                ]\n            }\n        },\n        \"/lastfm/link\": {\n            \"get\": {\n                \"tags\": [\n                    \"Last.fm\"\n                ],\n                \"summary\": \"Links a Polaris user with a Last.fm account.\",\n                \"externalDocs\": {\n                    \"description\": \"This endpoint is meant to be used as a Last.fm authentication handler, as described here:\",\n                    \"url\": \"https://www.last.fm/api/webauth\"\n                },\n                \"operationId\": \"getLastFMLink\",\n                \"parameters\": [\n                    {\n                        \"name\": \"auth_token\",\n                        \"in\": \"query\",\n                        \"required\": true,\n                        \"description\": \"Polaris authentication token received from the `lastfm/link_token` endpoint\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"token\",\n                        \"in\": \"query\",\n                        \"required\": true,\n                        \"description\": \"Last.fm authentication token\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"content\",\n                        \"in\": \"query\",\n                        \"required\": true,\n                        \"description\": \"Base64 encoded HTML content to be returned to the client initiating the link operation\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\",\n                        \"content\": {\n                            \"text/html\": {\n                                \"description\": \"The same content originally present in the 'content' parameter\"\n                            }\n                        }\n                    }\n                }\n            },\n            \"delete\": {\n                \"tags\": [\n                    \"Last.fm\"\n                ],\n                \"summary\": \"Unlinks Polaris user and Last.fm account\",\n                \"operationId\": \"deleteLastFMLink\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"auth_http_basic\": [],\n                        \"auth_http_bearer\": [],\n                        \"auth_query_parameter\": [],\n                        \"auth_cookie\": []\n                    }\n                ]\n            }\n        }\n    },\n    \"components\": {\n        \"schemas\": {\n            \"Version\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"major\": {\n                        \"type\": \"integer\",\n                        \"format\": \"int64\",\n                        \"example\": 3\n                    },\n                    \"minor\": {\n                        \"type\": \"integer\",\n                        \"format\": \"int64\",\n                        \"example\": 0\n                    }\n                }\n            },\n            \"InitialSetup\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"has_any_users\": {\n                        \"type\": \"boolean\"\n                    }\n                }\n            },\n            \"Settings\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"album_art_pattern\": {\n                        \"type\": \"string\",\n                        \"example\": \"^Folder.(png|jpg|jpeg)$\"\n                    },\n                    \"reindex_every_n_seconds\": {\n                        \"type\": \"integer\",\n                        \"example\": 3600\n                    },\n                    \"ydns\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"host\": {\n                                \"type\": \"string\",\n                                \"example\": \"yourname.ydns.eu\"\n                            },\n                            \"username\": {\n                                \"type\": \"string\",\n                                \"example\": \"you@host.com\"\n                            },\n                            \"password\": {\n                                \"type\": \"string\",\n                                \"example\": \"hunter2\"\n                            }\n                        }\n                    }\n                }\n            },\n            \"Config\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"settings\": {\n                        \"$ref\": \"#/components/schemas/Settings\"\n                    },\n                    \"mount_dirs\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/MountDir\"\n                        }\n                    },\n                    \"users\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/User\"\n                        }\n                    }\n                }\n            },\n            \"User\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"is_admin\": {\n                        \"type\": \"boolean\"\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"is_admin\"\n                ]\n            },\n            \"NewUser\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"password\": {\n                        \"type\": \"string\"\n                    },\n                    \"is_admin\": {\n                        \"type\": \"boolean\"\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"password\",\n                    \"is_admin\"\n                ]\n            },\n            \"UserUpdate\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"password\": {\n                        \"type\": \"string\"\n                    },\n                    \"is_admin\": {\n                        \"type\": \"boolean\"\n                    }\n                }\n            },\n            \"MountDir\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"source\": {\n                        \"type\": \"string\",\n                        \"example\": \"/mnt/some_drive/music\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\",\n                        \"example\": \"My Music\"\n                    }\n                },\n                \"required\": [\n                    \"source\",\n                    \"name\"\n                ]\n            },\n            \"Preferences\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"lastfm_username\": {\n                        \"type\": \"string\"\n                    },\n                    \"web_theme_base\": {\n                        \"type\": \"string\"\n                    },\n                    \"web_theme_accent\": {\n                        \"type\": \"string\"\n                    }\n                }\n            },\n            \"Credentials\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"username\": {\n                        \"type\": \"string\"\n                    },\n                    \"password\": {\n                        \"type\": \"string\"\n                    }\n                }\n            },\n            \"Authorization\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"username\": {\n                        \"type\": \"string\"\n                    },\n                    \"token\": {\n                        \"type\": \"string\"\n                    },\n                    \"is_admin\": {\n                        \"type\": \"bool\"\n                    }\n                }\n            },\n            \"LastFMLinkToken\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"value\": {\n                        \"type\": \"string\"\n                    }\n                }\n            },\n            \"CollectionFile\": {\n                \"oneOf\": [\n                    {\n                        \"$ref\": \"#/components/schemas/CollectionFileDirectory\"\n                    },\n                    {\n                        \"$ref\": \"#/components/schemas/CollectionFileSong\"\n                    }\n                ]\n            },\n            \"CollectionFileDirectory\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"Directory\": {\n                        \"$ref\": \"#/components/schemas/Directory\"\n                    }\n                }\n            },\n            \"CollectionFileSong\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"Song\": {\n                        \"$ref\": \"#/components/schemas/Song\"\n                    }\n                }\n            },\n            \"Directory\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"path\": {\n                        \"type\": \"string\",\n                        \"example\": \"My Music/Metal/Stratovarius/Destiny\",\n                        \"required\": true\n                    },\n                    \"artist\": {\n                        \"type\": \"string\",\n                        \"example\": \"Stratovarius\"\n                    },\n                    \"year\": {\n                        \"type\": \"integer\",\n                        \"example\": 1998\n                    },\n                    \"album\": {\n                        \"type\": \"string\",\n                        \"example\": \"Destiny\"\n                    },\n                    \"artwork\": {\n                        \"type\": \"string\",\n                        \"example\": \"My Music/Metal/Stratovarius/Destiny/Folder.png\"\n                    },\n                    \"date_added\": {\n                        \"type\": \"integer\",\n                        \"example\": 1453179635,\n                        \"required\": true\n                    }\n                }\n            },\n            \"Song\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"path\": {\n                        \"type\": \"string\",\n                        \"example\": \"My Music/Metal/Stratovarius/Destiny/Anthem of the World.mp3\",\n                        \"required\": true\n                    },\n                    \"track_number\": {\n                        \"type\": \"integer\",\n                        \"example\": 9\n                    },\n                    \"disc_number\": {\n                        \"type\": \"integer\",\n                        \"example\": 1\n                    },\n                    \"title\": {\n                        \"type\": \"string\",\n                        \"example\": \"Anthem of the World\"\n                    },\n                    \"artist\": {\n                        \"type\": \"string\",\n                        \"example\": \"Stratovarius\"\n                    },\n                    \"album_artist\": {\n                        \"type\": \"string\",\n                        \"example\": null\n                    },\n                    \"year\": {\n                        \"type\": \"integer\",\n                        \"example\": 1998\n                    },\n                    \"album\": {\n                        \"type\": \"string\",\n                        \"example\": \"Destiny\"\n                    },\n                    \"artwork\": {\n                        \"type\": \"string\",\n                        \"example\": \"My Music/Metal/Stratovarius/Destiny/Folder.png\"\n                    },\n                    \"duration\": {\n                        \"type\": \"integer\",\n                        \"example\": 571\n                    },\n                    \"lyricist\": {\n                        \"type\": \"string\",\n                        \"example\": \"Timo Tolkki\"\n                    },\n                    \"composer\": {\n                        \"type\": \"string\",\n                        \"example\": \"Timo Tolkki\"\n                    },\n                    \"genre\": {\n                        \"type\": \"string\",\n                        \"example\": \"Genre\"\n                    },\n                    \"label\": {\n                        \"type\": \"string\",\n                        \"example\": \"Noise Records\"\n                    }\n                }\n            },\n            \"ListPlaylistsEntry\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"name\": {\n                        \"type\": \"string\",\n                        \"example\": \"Friday Chill\"\n                    }\n                }\n            },\n            \"SavePlaylistInput\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"tracks\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\",\n                            \"example\": \"My Music/Metal/Stratovarius/Destiny/Anthem of the World.mp3\"\n                        }\n                    }\n                }\n            }\n        },\n        \"securitySchemes\": {\n            \"auth_http_bearer\": {\n                \"type\": \"http\",\n                \"scheme\": \"bearer\",\n                \"description\": \"An authentication token obtained in the output of the `auth` endpoint\"\n            },\n            \"admin_http_bearer\": {\n                \"type\": \"http\",\n                \"scheme\": \"bearer\",\n                \"description\": \"Identical to the auth_http_bearer scheme but only for users recognized as admin by the Polaris server\"\n            },\n            \"auth_query_parameter\": {\n                \"type\": \"apikey\",\n                \"in\": \"query\",\n                \"name\": \"auth_token\",\n                \"description\": \"An authentication token obtained in the output of the `auth` endpoint\"\n            },\n            \"admin_query_parameter\": {\n                \"type\": \"apikey\",\n                \"in\": \"query\",\n                \"name\": \"auth_token\",\n                \"description\": \"Identical to the auth_query_parameter scheme but only for users recognized as admin by the Polaris server\"\n            },\n            \"auth_http_basic\": {\n                \"type\": \"http\",\n                \"scheme\": \"basic\",\n                \"description\": \"[deprecated]\"\n            },\n            \"admin_http_basic\": {\n                \"type\": \"http\",\n                \"scheme\": \"basic\",\n                \"description\": \"[deprecated] Identical to the auth_http_basic scheme but only for users recognized as admin by the Polaris server\"\n            },\n            \"auth_cookie\": {\n                \"type\": \"apikey\",\n                \"in\": \"cookie\",\n                \"name\": \"session\",\n                \"description\": \"[deprecated] A token obtained via the SET-COOKIE header in a response to a request via the auth_http_basic scheme, or a request to the `auth` endpoint.\"\n            },\n            \"admin_cookie\": {\n                \"type\": \"apikey\",\n                \"in\": \"cookie\",\n                \"name\": \"session\",\n                \"description\": \"[deprecated] Identical to the auth_cookie scheme but only for users recognized as admin by the Polaris server\"\n            }\n        },\n        \"links\": {},\n        \"callbacks\": {}\n    },\n    \"security\": []\n}\n",
			"canonicalURL": "/github.com/agersant/polaris@374d0ca56fc0a466d797a4b252e2078607476797/-/blob/docs/swagger/polaris-api.json",
			"externalURLs": [
				{
					"url": "https://github.com/agersant/polaris/blob/374d0ca56fc0a466d797a4b252e2078607476797/docs/swagger/polaris-api.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: json: line 9:2: callback: json: cannot unmarshal bool into Go struct field Schema.required of type []string"
}