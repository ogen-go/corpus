{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Checkmarx/kics"
		},
		"file": {
			"name": "positive3.json",
			"size": 0,
			"path": "assets/queries/openAPI/general/type_has_invalid_keyword/test/positive3.json",
			"byteSize": 1463,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"title\": \"Simple API Overview\",\n    \"version\": \"1.0.0\"\n  },\n  \"paths\": {\n    \"/\": {\n      \"get\": {\n        \"operationId\": \"listVersionsv2\",\n        \"summary\": \"List API versions\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/MyObject\"\n                },\n                \"examples\": {\n                  \"objectExample\": {\n                    \"$ref\": \"#/components/examples/objectExample\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"MyObject\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"id\"\n        ],\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"minLength\": 3,\n            \"required\": true\n          },\n          \"phones\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"pattern\": \"\\\\(\\\\d{3}\\\\) ?\\\\d{3}-\\\\d{4}\"\n            },\n            \"minItems\": 1\n          }\n        }\n      }\n    },\n    \"examples\": {\n      \"objectExample\": {\n        \"value\": {\n          \"id\": \"1\",\n          \"name\": \"new object\"\n        },\n        \"summary\": \"A sample object\"\n      }\n    }\n  }\n}\n"
		}
	},
	"Error": "unmarshal: json: line 5:17: callback: json: cannot unmarshal bool into Go struct field Schema.required of type []string"
}