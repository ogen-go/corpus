{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Redocly/redocly-cli"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "__tests__/lint/oas3.1/openapi.yaml",
			"byteSize": 9183,
			"content": "openapi: 3.1.0\ninfo:\n  title: Webhook Example\n  summary: My lovely API\n  version: 1.0.0\n  description: some description\n  license:\n    name: MIT\n    identifier: MIT\n    url: https://opensource.org/licenses/MIT\njsonSchemaDialect: https://spec.openapis.org/oas/3.1/dialect/base\ntags:\n  - name: Gameplay\n    description: gameplay tag\nservers:\n  - url: https://example.com/{var}\n    variables:\n      var:\n        enum:\n        - a\n        - b\n        default: b\nsecurity: []\npaths:\n  /pets/items:\n    get:\n      operationId: getTest\n      summary: Get Test! Foo! Etc!\n      responses:\n        200:\n          description: \"200\"\n          content:\n            application/json:\n              schema:\n                type: array\n                prefixItems:\n                  - type: \"string\"\n                items: false\n        400:\n          description: An error response\n  /pets:\n    get:\n      summary: List all pets\n      operationId: listPets\n      parameters:\n        - name: limit\n          in: query\n          description: How many items to return at one time (max 100)\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description: A paged array of pets\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Pets\"\n        '400':\n          description: An error response\n  /pets/model:\n    get:\n      summary: List all pets\n      operationId: listPetsModel\n      parameters:\n        - name: limit\n          in: query\n          description: How many items to return at one time (max 100)\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description: A paged array of model\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Model\"\n        '400':\n          description: An error response\n  /pets/person:\n    get:\n      summary: List all pets\n      operationId: listPetsPerson\n      parameters:\n        - name: limit\n          in: query\n          description: How many items to return at one time (max 100)\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description: A paged array of person\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/person\"\n        '400':\n          description: An error response\n  /:\n    get:\n      operationId: getEmptyOperationId\n      summary: Some summary\n  /{var}: {}\n  /unevaluated-properties:\n    get:\n      operationId: getUnevaluatedProperties\n      summary: Checks if unevaluetedProperties work\n      responses:\n        200:\n          description: 'OK'\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      foo:\n                        type: string\n                  - type: object\n                    properties:\n                      bar:\n                        type: number\n                unevaluatedProperties: false\n        400:\n          description: An error response\n\nwebhooks:\n  newPet:\n    post:\n      tags:\n        - pet\n      summary: Add a new pet to the store\n      description: Add new pet to the store inventory.\n      operationId: addPet\n      requestBody:\n        description: Information about a new pet in the system\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                orderId:\n                  type: integer\n                fileName:\n                  type: string\n                  contentEncoding: base64\n                  contentMediaType: image/png\n      responses:\n        \"200\":\n          description: Return a 200 status to indicate that the data was received successfully\n        '405':\n          description: Invalid input\n    put:\n      tags:\n        - pet\n      summary: Edit new pet\n      description: Edit pet.\n      operationId: editPet\n      requestBody:\n        content:\n          application/octet-stream: {}\n      responses:\n        \"200\":\n          description: Return a 200 status to indicate that the data was received successfully\n        '400':\n          description: An error response\n\ncomponents:\n  securitySchemes:\n    mtls:\n      type: mutualTLS\n  pathItems: {}\n  schemas:\n    Problem:\n      id: \"https://tools.ietf.org/rfc/rfc7807.txt\"\n      $schema: \"http://json-schema.org/draft-06/schema#\"\n      description: \"schema for a rfc7807\"\n      definitions: {}\n      type: \"object\"\n      properties:\n        type:\n          description: A URI reference [RFC3986] that identifies the problem type.\n          type: string\n          format: uri\n        title:\n          description: A short, human-readable summary of the problem type.\n          type: string\n        status:\n          description: The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n          type: number\n        instance:\n          description: A URI reference that identifies the specific occurrence of the problem.\n          type: string\n        detail:\n          description: A human-readable explanation specific to this occurrence of the problem.\n          type: string\n      required:\n        - type\n        - title\n        - status\n        - instance\n        - detail\n      examples:\n        - type: https://developer.acme.com/codes/404\n          title: Not Found\n          status: 404\n          instance: https://status.api.acme.com/errorinstance/23d243c1-1c94-4696-8798-c71aa45c92ff\n          detail: The User requested was not found\n    Pet:\n      required:\n        - id\n        - name\n      properties:\n        id:\n          type:\n            - integer\n          exclusiveMaximum: 100\n          exclusiveMinimum: 0\n          format: int64\n        name:\n          type: string\n        none:\n          type: 'null'\n        tag:\n          type:\n            - null\n            - string\n            - integer\n          examples:\n            - 123\n        arr:\n          type: array\n          $comment: Array without items keyword\n        either:\n          type: ['string','null']\n      discriminator:\n        propertyName: type\n        x-extension: true\n      myArbitraryKeyword: true\n    Pets:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Pet\"\n    Model:\n      type: object\n      properties:\n        one:\n          description: type array\n          type:\n            - integer\n            - string\n        two:\n          description: type 'null'\n          type: \"null\"\n        three:\n          description: type array including 'null'\n          type:\n            - string\n            - \"null\"\n        four:\n          description: array with no items\n          type: array\n        five:\n          description: singular example\n          type: string\n          examples:\n            - exampleValue\n        six:\n          description: exclusiveMinimum true\n          exclusiveMinimum: 10\n        seven:\n          description: exclusiveMinimum false\n          minimum: 10\n        eight:\n          description: exclusiveMaximum true\n          exclusiveMaximum: 20\n        nine:\n          description: exclusiveMaximum false\n          maximum: 20\n        ten:\n          description: nullable string\n          type:\n            - string\n            - \"null\"\n        eleven:\n          description: x-nullable string\n          type:\n            - string\n            - null\n        twelve:\n          description: file/binary\n    person:\n      type: object\n      required:\n        - id\n      properties:\n        id:\n          description: Person ID\n          type:\n            - integer\n            - number\n            - string\n          minLength: 4\n          minimum: 10\n        name:\n          type: string\n          maxLength: 100\n        gender:\n          type:\n            - string\n            - integer\n          enum:\n            - male\n            - female\n            - unknown\n          minimum: 4\n        location:\n          description: location can be null, set using `nullable` property thats supported by OpenAPI `3.0.x`\n          type:\n            - string\n            - null\n        age:\n          description: Age of Person\n          type: integer\n          minimum: 21\n          exclusiveMaximum: 70\n          multipleOf: 5\n        photoUrls:\n          description: One URL or Array or URLs or set to false\n          type:\n            - array\n            - boolean\n            - string\n          maxItems: 20\n          items:\n            type: string\n            format: url\n        hobby:\n          description: comma separated list of hobbies or an array of object\n          type:\n            - string\n            - array\n          items:\n            type: object\n            properties:\n              hobbyRank:\n                type:\n                  - integer\n                  - number\n              hobbyName:\n                type: string\n        empty: {}\n",
			"canonicalURL": "/github.com/Redocly/redocly-cli@bb8b9121c4d7d88352dbc6723ce70db377b8a79e/-/blob/__tests__/lint/oas3.1/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Redocly/redocly-cli/blob/bb8b9121c4d7d88352dbc6723ce70db377b8a79e/__tests__/lint/oas3.1/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 1: cannot unmarshal !!int `20` into bool; yaml: line 1: cannot unmarshal !!seq into string; yaml: line 1: cannot unmarshal !!int `70` into bool; yaml: line 1: cannot unmarshal !!bool `false` into ogen.Schema"
}