{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/sherpair/weather4s"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "geo-service/src/main/resources/openapi.yml",
			"byteSize": 7340,
			"content": "openapi: \"3.0.2\"\ninfo:\n  title: Geo-Service API (Weather4s)\n  description: Aside from user authentication, handled by **Auth**, **Geo** is the main backend interface for the frontend to which provides the list of *available* and *non-available-yet* countries, as well as the list of suggestions while the user types the name of the locality she is looking the weather info for.\u003cbr/\u003e\u003cbr/\u003eIt is also responsible for the initialization of the engine, where it persists, at the first launch of Weather4s, the list of all countries in the world, marked as *not-available-yet*, as well as the **meta** document (in a specific engine index).\n  version: 1.0.0\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\nservers:\n  - url: ==server-address==\npaths:\n  /country/{id}:\n    get:\n      tags:\n        - (Any role)\n      summary: Country's data\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: id\n          in: path\n          description: Country (code or name)\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Country's data\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/country'\n        '404':\n          description: Country is not known\n    put:\n      tags:\n        - (Any role)\n      summary: Ask to make available a \"not available yet\" country\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: id\n          in: path\n          description: Country (code or name)\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Download request enqueued\n        '404':\n          description: Country is not known\n        '409':\n          description: Country is already available\n  /countries:\n    get:\n      tags:\n        - (Any role)\n      summary: Count of available and not-available-yet countries\n      security:\n        - bearerAuth: []\n      responses:\n        description: Count of available and not-available-yet countries\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/countryCount'\n  /countries/available:\n    get:\n      tags:\n        - (Any role)\n      summary: List of available countries\n      security:\n        - bearerAuth: []\n      responses:\n        '200':\n          description: List of available countries\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/country'\n  /countries/not-available-yet:\n    get:\n      tags:\n        - (Any role)\n      summary: List of \"not available yet\" countries\n      security:\n        - bearerAuth: []\n      responses:\n        '200':\n          description: List of \"not available yet\" countries\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/country'\n  /health:\n    get:\n      tags:\n        - (Master role only)\n      summary: DB Health Check\n      security:\n        - bearerAuth: []\n      responses:\n        '200':\n          description: Current DB status\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/healthCheck'\n        '403':\n          description: Forbidden\n  /localities/{id}:\n    get:\n      tags:\n        - (Any role)\n      summary: Count of the localities for a specific country\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: id\n          in: path\n          description: Country (code or name)\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Count of the localities for a specific country\n          content:\n            application/json:\n              schema:\n                type: integer\n                format: int64\n        '404':\n          description: Country is not known\n  /suggest/{countryId}/{localityTerm}:\n    get:\n      summary: List of suggested localities given a country and a locality suffix\n      parameters:\n        - name: countryId\n          in: path\n          description: Country (code or name)\n          required: true\n          schema:\n            type: string\n        - name: localityTerm\n          in: path\n          description: Locality suffix\n          required: true\n          schema:\n            type: string\n        - name: analyzer\n          in: query\n          description: The analyzer to use. [List of available analyzers](https://www.elastic.co/guide/en/elasticsearch/reference/current/analysis-lang-analyzer.html)\n          required: false\n          schema:\n            type: string\n        - name: fuzziness\n          in: query\n          description: The level of fuzziness\n          required: false\n          schema:\n            type: integer\n            minimum: 0\n            maximum: 2\n        - name: maxSuggestions\n          in: query\n          description: The maximum number of suggestions to return\n          required: false\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: List of the suggested localities\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/suggestions'\n        '400':\n          description: Not a valid analyzer\n        '404':\n          description: Country is not known\ncomponents:\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n  schemas:\n    country:\n      type: object\n      required:\n        - code\n        - name\n        - analyzer\n        - localities\n        - updated\n      properties:\n        code:\n          type: string\n        name:\n          type: string\n        analyzer:\n          type: string\n        localities:\n          type: integer\n          format: int64\n        updated:\n          type: integer\n          format: int64\n    countryCount:\n      type: object\n      required:\n        - total\n        - available\n        - notAvailableYet\n      properties:\n        total:\n          type: integer\n          format: int32\n        available:\n          type: integer\n          format: int32\n        notAvailableYet:\n          type: integer\n          format: int32\n    geoPoint:\n      type: object\n      required:\n        - lat\n        - lon\n      properties:\n        lat:\n          type: number\n          format: double\n        lon:\n          type: number\n          format: double\n    healthCheck:\n      type: object\n      required:\n        - attempts\n        - engine\n      properties:\n        attempts:\n          type: string\n        engine:\n          type: string\n    suggestion:\n      type: object\n      required:\n        - name\n        - coord\n        - tz\n      properties:\n        name:\n          type: object\n          properties:\n            input:\n              type: string\n            weight:\n              type: integer\n              format: int32\n        coord:\n          $ref: '#/components/schemas/geoPoint'\n        tz:\n          type: string\n    suggestions:\n      type: array\n      items:\n        $ref: \"#/components/schemas/suggestion\"\n"
		}
	},
	"Error": "unmarshal: json: cannot unmarshal string into Go struct field Operation.paths.get.responses of type ogen.Response"
}