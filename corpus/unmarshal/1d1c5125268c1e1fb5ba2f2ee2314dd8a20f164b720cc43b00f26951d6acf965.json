{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/audiocloud/audiocloud"
		},
		"file": {
			"name": "cloud_api.yaml",
			"size": 0,
			"path": "specs/openapi/cloud_api.yaml",
			"byteSize": 99958,
			"content": "openapi: 3.1.0\ninfo:\n  contact:\n    email: bojan@distopik.com\n    name: Bojan Å ernek\n  description: ''\n  license:\n    name: Apache 2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0.html\n  title: Audio Cloud Orchestrator\n  version: 0.1.0\npaths:\n  /v1/apps/{app_id}:\n    get:\n      deprecated: false\n      description: |\n        Get app details\n\n        Get details of a registered app. Only administrators and app owners may do this.\n      operationId: get_app\n      parameters:\n      - deprecated: false\n        description: App to get\n        in: path\n        name: app_id\n        required: true\n        schema:\n          $ref: '#/components/schemas/AppId'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAppResponse'\n          description: Success\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n          description: Not authorized\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n          description: Not found\n      summary: Get app details\n      tags:\n      - apps\n    patch:\n      deprecated: false\n      description: |\n        Update app details\n\n        Update details of a registered app. Only administrators and app owners may do this. If the media\n        URL is changed, it will only be used for newly submitted upload and download jobs.\n      operationId: update_app\n      parameters:\n      - deprecated: false\n        description: App to update\n        in: path\n        name: app_id\n        required: true\n        schema:\n          $ref: '#/components/schemas/AppId'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateApp'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppUpdated'\n          description: Success\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n          description: Not authorized\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n          description: Not found\n      summary: Update app details\n      tags:\n      - apps\n  /v1/apps/{app_id}/media/{object_id}:\n    delete:\n      deprecated: false\n      description: |\n        Delete a media object\n\n        Delete a media object form all domains that have a copy.\n      operationId: delete_media_object\n      parameters:\n      - deprecated: false\n        description: Owner of the file\n        in: path\n        name: app_id\n        required: true\n        schema:\n          $ref: '#/components/schemas/AppId'\n      - deprecated: false\n        description: File object ID\n        in: path\n        name: object_id\n        required: true\n        schema:\n          $ref: '#/components/schemas/MediaObjectId'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UploadToDomain'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MediaObjectDeleted'\n          description: Success\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n          description: Not authorized\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n          description: Domain, app or task not found\n      summary: Delete a media object\n      tags:\n      - media\n  /v1/apps/{app_id}/tasks:\n    post:\n      deprecated: false\n      description: |\n        Create a task\n\n        The task will be checked against exclusivity with other tasks, as well as resources and other\n        limits imposed by the domain configuration.\n      operationId: create_task\n      parameters:\n      - deprecated: false\n        description: The app for which we are creating a task\n        in: path\n        name: app_id\n        required: true\n        schema:\n          $ref: '#/components/schemas/AppId'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateTask'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskCreated'\n          description: Success\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n          description: Not authorized\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n          description: App not found\n        '409':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n          description: Overlapping task exists\n      summary: Create a task\n      tags:\n      - tasks\n  /v1/apps/{app_id}/tasks/{task_id}:\n    delete:\n      deprecated: false\n      description: |\n        Delete a task\n\n        Delete a task and release all referenced resources.\n      operationId: delete_task\n      parameters:\n      - deprecated: false\n        description: App owning the task\n        in: path\n        name: app_id\n        required: true\n        schema:\n          $ref: '#/components/schemas/AppId'\n      - deprecated: false\n        description: Task to be deleted\n        in: path\n        name: task_id\n        required: true\n        schema:\n          $ref: '#/components/schemas/TaskId'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskDeleted'\n          description: Success\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n          description: Not authorized\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n          description: App not found\n      summary: Delete a task\n      tags:\n      - tasks\n  /v1/apps/{app_id}/tasks/{task_id}/spec:\n    put:\n      deprecated: false\n      description: |\n        Modify existing task spec\n\n        Submit modifications to the task. This generic request can be used to update most aspects of the\n        session: adjusting parameters, creating, deleting, reconnecting nodes, changing media, etc.\n      operationId: modify_task_spec\n      parameters:\n      - deprecated: false\n        description: App owning the task\n        in: path\n        name: app_id\n        required: true\n        schema:\n          $ref: '#/components/schemas/AppId'\n      - deprecated: false\n        description: Task to be updated\n        in: path\n        name: task_id\n        required: true\n        schema:\n          $ref: '#/components/schemas/TaskId'\n      - deprecated: false\n        description: The task version for\n        in: header\n        name: If-Match\n        required: true\n        schema:\n          format: int64\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ModifyTaskList'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskUpdated'\n          description: Success\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n          description: Not authorized\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n          description: App or task not found\n      summary: Modify existing task spec\n      tags:\n      - tasks\n  /v1/apps/{app_id}/tasks/{task_id}/time:\n    put:\n      deprecated: false\n      description: |\n        Modify existing task time\n\n        Submit modifications to the task reservation time. Can be used to extend, move start or end early.\n      operationId: adjust_task_time\n      parameters:\n      - deprecated: false\n        description: App owning the task\n        in: path\n        name: app_id\n        required: true\n        schema:\n          $ref: '#/components/schemas/AppId'\n      - deprecated: false\n        description: Task to be updated\n        in: path\n        name: task_id\n        required: true\n        schema:\n          $ref: '#/components/schemas/TaskId'\n      - deprecated: false\n        description: The task version for\n        in: header\n        name: If-Match\n        required: true\n        schema:\n          format: int64\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AdjustTaskTime'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskUpdated'\n          description: Success\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n          description: Not authorized\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n          description: App or task not found\n        '409':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n          description: Overlapping task exists\n      summary: Modify existing task time\n      tags:\n      - tasks\n  /v1/domains/{domain_id}:\n    get:\n      deprecated: false\n      description: |\n        Get domain details\n\n        Get details about a domain. Available to owners, administrators and apps where the app has\n        permission to access domain details.\n      operationId: get_domain\n      parameters:\n      - deprecated: false\n        description: Domain to get\n        in: path\n        name: domain_id\n        required: true\n        schema:\n          $ref: '#/components/schemas/DomainId'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetDomainResponse'\n          description: Success\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n          description: Not authorized\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n          description: Not found\n      summary: Get domain details\n      tags:\n      - domains\n  /v1/domains/{domain_id}/config:\n    get:\n      deprecated: false\n      description: |\n        Domain requests to get its configuration\n\n        When a domain starts in cloud mode, it will get the details of its configuration from the cloud.\n        This endpoint delivers all of the cloud information about the domain, including instances,\n        audio engines and cloud synchronization endpoints.\n      operationId: get_domain_config\n      parameters:\n      - deprecated: false\n        description: Domain to get config for\n        in: path\n        name: domain_id\n        required: true\n        schema:\n          $ref: '#/components/schemas/DomainId'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DomainConfig'\n          description: Success\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n          description: Not authorized\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n          description: Not found\n      summary: Domain requests to get its configuration\n      tags:\n      - domains\n  /v1/domains/{domain_id}/instances/{manufacturer}/{name}/{instance}/maintenance:\n    delete:\n      deprecated: false\n      description: |\n        Clear instance maintenance time\n\n        Clear any maitnenance on the instance that matches the time predicates provided.\n      operationId: clear_fixed_instance_maintenance\n      parameters:\n      - deprecated: false\n        description: Domain hosting the instance\n        in: path\n        name: domain_id\n        required: true\n        schema:\n          $ref: '#/components/schemas/DomainId'\n      - deprecated: false\n        description: Instance manufacturer\n        in: path\n        name: manufacturer\n        required: true\n        schema:\n          type: string\n      - deprecated: false\n        description: Instance (product) name\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      - deprecated: false\n        description: Instance unique identifier\n        in: path\n        name: instance\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ClearMaintenance'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DomainUpdated'\n          description: Success\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n          description: Not authorized\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n          description: Not found\n      summary: Clear instance maintenance time\n      tags:\n      - domains\n    post:\n      deprecated: false\n      description: |\n        Add maitenance time to instance\n\n        Add a designated time of maitnenance to an instance in a domain. When an instance is in\n        maintenance, it cannot process tasks. Apps will not be able to create bookings against the\n        instance that intersect with maintenance windows.\n      operationId: add_fixed_instance_maintenance\n      parameters:\n      - deprecated: false\n        description: Domain hosting the instance\n        in: path\n        name: domain_id\n        required: true\n        schema:\n          $ref: '#/components/schemas/DomainId'\n      - deprecated: false\n        description: Instance manufacturer\n        in: path\n        name: manufacturer\n        required: true\n        schema:\n          type: string\n      - deprecated: false\n        description: Instance (product) name\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      - deprecated: false\n        description: Instance unique identifier\n        in: path\n        name: instance\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AddMaintenance'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DomainUpdated'\n          description: Success\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n          description: Not authorized\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n          description: Not found\n      summary: Add maitenance time to instance\n      tags:\n      - domains\n  /v1/domains/{domain_id}/maintenance:\n    delete:\n      deprecated: false\n      description: |\n        Clear domain maintenance time\n\n        Clear any maitnenance on the domain that matches the time predicates provided.\n      operationId: clear_domain_maintenance\n      parameters:\n      - deprecated: false\n        description: Domain to clear maitnenance on\n        in: path\n        name: domain_id\n        required: true\n        schema:\n          $ref: '#/components/schemas/DomainId'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ClearMaintenance'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DomainUpdated'\n          description: Success\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n          description: Not authorized\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n          description: Not found\n      summary: Clear domain maintenance time\n      tags:\n      - domains\n    post:\n      deprecated: false\n      description: |\n        Add maitenance time to domain\n\n        Add a designated time of maitnenance to the whole domain. When a domain is in maintenance, it\n        cannot serve API requests or process tasks. Apps will not be able to create bookings against the\n        domain that intersect with maintenance windows.\n      operationId: add_domain_maintenance\n      parameters:\n      - deprecated: false\n        description: Domain to add maintenance to\n        in: path\n        name: domain_id\n        required: true\n        schema:\n          $ref: '#/components/schemas/DomainId'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AddMaintenance'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DomainUpdated'\n          description: Success\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n          description: Not authorized\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n          description: Not found\n      summary: Add maitenance time to domain\n      tags:\n      - domains\n  /v1/domains/{domain_id}/media/{app_id}/{object_id}/download:\n    put:\n      deprecated: false\n      description: |\n        Download a media object\n\n        Download a media object from a domain to an app's private storage.\n      operationId: download_media_object\n      parameters:\n      - deprecated: false\n        description: Domain to download the file from\n        in: path\n        name: domain_id\n        required: true\n        schema:\n          $ref: '#/components/schemas/DomainId'\n      - deprecated: false\n        description: Owner of the file\n        in: path\n        name: app_id\n        required: true\n        schema:\n          $ref: '#/components/schemas/AppId'\n      - deprecated: false\n        description: File object ID\n        in: path\n        name: object_id\n        required: true\n        schema:\n          $ref: '#/components/schemas/MediaObjectId'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DownloadFromDomain'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DownloadCreated'\n          description: Success\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n          description: Not authorized\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n          description: Domain, app or task not found\n      summary: Download a media object\n      tags:\n      - media\n  /v1/domains/{domain_id}/media/{app_id}/{object_id}/report:\n    put:\n      deprecated: false\n      description: |\n        Update upload/download progress\n\n        Used by domains to communicate upload or download progress.\n      operationId: report_media_job_progress\n      parameters:\n      - deprecated: false\n        description: Domain to download the file from\n        in: path\n        name: domain_id\n        required: true\n        schema:\n          $ref: '#/components/schemas/DomainId'\n      - deprecated: false\n        description: Owner of the file\n        in: path\n        name: app_id\n        required: true\n        schema:\n          $ref: '#/components/schemas/AppId'\n      - deprecated: false\n        description: File object ID\n        in: path\n        name: object_id\n        required: true\n        schema:\n          $ref: '#/components/schemas/MediaObjectId'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReportMediaJobProgress'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DownloadCreated'\n          description: Success\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n          description: Not authorized\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n          description: Domain, app or object not found\n      summary: Update upload/download progress\n      tags:\n      - media\n  /v1/domains/{domain_id}/media/{app_id}/{object_id}/upload:\n    put:\n      deprecated: false\n      description: |\n        Uplod a media object\n\n        Upload or replace content of a domain object from an app's private storage.\n      operationId: upload_media_object\n      parameters:\n      - deprecated: false\n        description: Domain to upload the file to\n        in: path\n        name: domain_id\n        required: true\n        schema:\n          $ref: '#/components/schemas/DomainId'\n      - deprecated: false\n        description: Owner of the file\n        in: path\n        name: app_id\n        required: true\n        schema:\n          $ref: '#/components/schemas/AppId'\n      - deprecated: false\n        description: File object ID\n        in: path\n        name: object_id\n        required: true\n        schema:\n          $ref: '#/components/schemas/MediaObjectId'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UploadToDomain'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UploadCreated'\n          description: Success\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n          description: Not authorized\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n          description: Domain, app or task not found\n      summary: Uplod a media object\n      tags:\n      - media\nservers:\n- description: Production\n  url: https://api.audiocloud.io\n- description: Local development\n  url: http://localhost:7100\ncomponents:\n  schemas:\n    AddMaintenance:\n      title: AddMaintenance\n      description: Add maintenance to an object\n      type: object\n      required:\n      - reason\n      - time\n      properties:\n        reason:\n          description: WHat is the reason for maintenance (human readable string or URL with more information\n          type: string\n        time:\n          description: When is it taking place\n          allOf:\n          - $ref: '#/components/schemas/TimeRange'\n    AdjustTaskTime:\n      title: AdjustTaskTime\n      description: Adjust the task time\n      type: object\n      properties:\n        from:\n          description: If not null, overwrite the starting time\n          type:\n          - string\n          - 'null'\n          format: date-time\n        to:\n          description: If not null, overwrite the ending time\n          type:\n          - string\n          - 'null'\n          format: date-time\n    AmplifierId:\n      type: string\n      enum:\n      - input\n      - output\n      - global\n      - insert_input\n      - insert_output\n    AmplifierParameterRole:\n      type: string\n      enum:\n      - enable\n      - gain\n      - distortion\n      - slew_rate\n    AmplifierReportRole:\n      type: string\n      enum:\n      - peak_volume\n      - rms_volume\n      - lufs_volume_momentary\n      - lufs_volume_short_term\n      - lufs_volume_integrated\n    AppFixedInstance:\n      title: AppFixedInstance\n      description: Fixed instance summary for apps\n      type: object\n      required:\n      - maintenance\n      - media\n      - power\n      - sidecars\n      properties:\n        maintenance:\n          description: Configured maintenance time windows during which the instance should not serve requests\n          type: array\n          items:\n            $ref: '#/components/schemas/Maintenance'\n        media:\n          description: If true, the instance is using media and may rewind\n          type: boolean\n        power:\n          description: If true, the instance may need to be powered up\n          type: boolean\n        sidecars:\n          description: Additional models with parameters or reports that are merged with the instance model\n          type: array\n          items:\n            $ref: '#/components/schemas/ModelId'\n          uniqueItems: true\n    AppId:\n      type: string\n    AppMediaObjectId:\n      type: string\n    AppTaskId:\n      type: string\n    AppUpdated:\n      title: AppUpdated\n      description: The App has been updated\n      oneOf:\n      - description: Updated normally\n        type: object\n        required:\n        - updated\n        properties:\n          updated:\n            $ref: '#/components/schemas/AppId'\n        additionalProperties: false\n    ChannelMask:\n      oneOf:\n      - type: object\n        required:\n        - mono\n        properties:\n          mono:\n            type: integer\n            format: uint\n            minimum: 0.0\n        additionalProperties: false\n      - type: object\n        required:\n        - stereo\n        properties:\n          stereo:\n            type: integer\n            format: uint\n            minimum: 0.0\n        additionalProperties: false\n    ChannelParameterRole:\n      type: string\n      enum:\n      - pan\n    ClearMaintenance:\n      title: ClearMaintenance\n      description: Clear maintenance from an object\n      type: object\n      properties:\n        after:\n          description: If not null, clear all maitnenance after this timestamp\n          type:\n          - string\n          - 'null'\n          format: date-time\n        before:\n          description: If not null, clear all maitnenance before this timestamp\n          type:\n          - string\n          - 'null'\n          format: date-time\n    CloudError:\n      title: CloudError\n      oneOf:\n      - type: object\n        required:\n        - type\n        properties:\n          type:\n            type: string\n            enum:\n            - api_key_not_found\n      - type: object\n        required:\n        - id\n        - type\n        properties:\n          id:\n            $ref: '#/components/schemas/AppMediaObjectId'\n          type:\n            type: string\n            enum:\n            - app_file_not_found\n      - type: object\n        required:\n        - id\n        - type\n        properties:\n          id:\n            $ref: '#/components/schemas/AppId'\n          type:\n            type: string\n            enum:\n            - app_not_found\n      - type: object\n        required:\n        - task_id\n        - type\n        properties:\n          task_id:\n            type: string\n          type:\n            type: string\n            enum:\n            - invalid_app_task_id\n      - type: object\n        required:\n        - object_id\n        - type\n        properties:\n          object_id:\n            type: string\n          type:\n            type: string\n            enum:\n            - invalid_app_media_object_id\n      - type: object\n        required:\n        - type\n        properties:\n          type:\n            type: string\n            enum:\n            - only_future_reservations\n      - type: object\n        required:\n        - type\n        properties:\n          type:\n            type: string\n            enum:\n            - time_malformed\n      - type: object\n        required:\n        - minimum\n        - requested\n        - type\n        properties:\n          minimum:\n            type: number\n            format: double\n          requested:\n            type: number\n            format: double\n          type:\n            type: string\n            enum:\n            - duration_too_short\n      - type: object\n        required:\n        - max\n        - type\n        properties:\n          max:\n            type: integer\n            format: uint\n            minimum: 0.0\n          type:\n            type: string\n            enum:\n            - too_many_tasks\n      - type: object\n        required:\n        - message\n        - type\n        properties:\n          message:\n            type: string\n          type:\n            type: string\n            enum:\n            - internal_inconsistency\n      - type: object\n        required:\n        - instance_ids\n        - type\n        properties:\n          instance_ids:\n            type: array\n            items:\n              $ref: '#/components/schemas/FixedInstanceId'\n            uniqueItems: true\n          type:\n            type: string\n            enum:\n            - overlapping_fixed_instances\n      - type: object\n        required:\n        - connection_id\n        - error\n        - type\n        properties:\n          connection_id:\n            $ref: '#/components/schemas/NodeConnectionId'\n          error:\n            $ref: '#/components/schemas/CloudError'\n          type:\n            type: string\n            enum:\n            - connection_error\n      - type: object\n        required:\n        - channels\n        - mask\n        - type\n        properties:\n          channels:\n            type: integer\n            format: uint\n            minimum: 0.0\n          mask:\n            $ref: '#/components/schemas/ChannelMask'\n          type:\n            type: string\n            enum:\n            - channel_mask_incompatible\n      - type: object\n        required:\n        - mixer_node_id\n        - type\n        properties:\n          mixer_node_id:\n            $ref: '#/components/schemas/MixerNodeId'\n          type:\n            type: string\n            enum:\n            - mixer_node_not_found\n      - type: object\n        required:\n        - track_node_id\n        - type\n        properties:\n          track_node_id:\n            $ref: '#/components/schemas/TrackNodeId'\n          type:\n            type: string\n            enum:\n            - track_node_not_found\n      - type: object\n        required:\n        - fixed_node_id\n        - type\n        properties:\n          fixed_node_id:\n            $ref: '#/components/schemas/FixedInstanceNodeId'\n          type:\n            type: string\n            enum:\n            - fixed_instance_node_not_found\n      - type: object\n        required:\n        - dynamic_node_id\n        - type\n        properties:\n          dynamic_node_id:\n            $ref: '#/components/schemas/DynamicInstanceNodeId'\n          type:\n            type: string\n            enum:\n            - dynamic_instance_node_not_found\n      - type: object\n        required:\n        - domain_id\n        - type\n        properties:\n          domain_id:\n            $ref: '#/components/schemas/DomainId'\n          type:\n            type: string\n            enum:\n            - domain_not_found\n      - type: object\n        required:\n        - instance_id\n        - type\n        properties:\n          instance_id:\n            $ref: '#/components/schemas/FixedInstanceId'\n          type:\n            type: string\n            enum:\n            - instance_not_found\n      - type: object\n        required:\n        - model_id\n        - type\n        properties:\n          model_id:\n            $ref: '#/components/schemas/ModelId'\n          type:\n            type: string\n            enum:\n            - model_not_found\n      - type: object\n        required:\n        - domain_id\n        - model_id\n        - node_id\n        - type\n        properties:\n          domain_id:\n            $ref: '#/components/schemas/DomainId'\n          model_id:\n            $ref: '#/components/schemas/ModelId'\n          node_id:\n            $ref: '#/components/schemas/DynamicInstanceNodeId'\n          type:\n            type: string\n            enum:\n            - dynamic_instance_not_supported\n      - type: object\n        required:\n        - domain_id\n        - instance_id\n        - node_id\n        - type\n        properties:\n          domain_id:\n            $ref: '#/components/schemas/DomainId'\n          instance_id:\n            $ref: '#/components/schemas/FixedInstanceId'\n          node_id:\n            $ref: '#/components/schemas/FixedInstanceNodeId'\n          type:\n            type: string\n            enum:\n            - fixed_instance_not_supported\n      - type: object\n        required:\n        - app_id\n        - domain_id\n        - instance_id\n        - node_id\n        - type\n        properties:\n          app_id:\n            $ref: '#/components/schemas/AppId'\n          domain_id:\n            $ref: '#/components/schemas/DomainId'\n          instance_id:\n            $ref: '#/components/schemas/FixedInstanceId'\n          node_id:\n            $ref: '#/components/schemas/FixedInstanceNodeId'\n          type:\n            type: string\n            enum:\n            - fixed_instance_access_denied\n      - type: object\n        required:\n        - available\n        - requested\n        - resource\n        - type\n        properties:\n          available:\n            type: number\n            format: double\n          requested:\n            type: number\n            format: double\n          resource:\n            $ref: '#/components/schemas/ResourceId'\n          type:\n            type: string\n            enum:\n            - out_of_resource\n      - type: object\n        required:\n        - task_id\n        - type\n        properties:\n          task_id:\n            $ref: '#/components/schemas/AppTaskId'\n          type:\n            type: string\n            enum:\n            - task_not_found\n      - type: object\n        required:\n        - error\n        - type\n        properties:\n          error:\n            $ref: '#/components/schemas/ModifyTaskError'\n          type:\n            type: string\n            enum:\n            - task_modification\n      - type: object\n        required:\n        - message\n        - type\n        properties:\n          message:\n            type: string\n          type:\n            type: string\n            enum:\n            - database\n      - type: object\n        required:\n        - message\n        - type\n        properties:\n          message:\n            type: string\n          type:\n            type: string\n            enum:\n            - authentication\n      - type: object\n        required:\n        - message\n        - type\n        properties:\n          message:\n            type: string\n          type:\n            type: string\n            enum:\n            - authorization\n      - type: object\n        required:\n        - type\n        properties:\n          type:\n            type: string\n            enum:\n            - blocking_lock\n    ConnectionValues:\n      type: object\n      properties:\n        pan:\n          type:\n          - number\n          - 'null'\n          format: double\n        volume:\n          type:\n          - number\n          - 'null'\n          format: double\n    ControlChannels:\n      type: string\n      enum:\n      - global\n      - left\n      - right\n      - generic\n    CreateTask:\n      title: CreateTask\n      description: |-\n        Create a task\n\n        Tasks describe graphs of media operations that may execute in real time or unattended as a render. They are allocated to a domain and an engine within that domain. Operations are executed with the help of instances, which are fixed hardware blocks or dynamically instanced software components.\n      type: object\n      required:\n      - domain_id\n      - dry_run\n      - reservations\n      - security\n      - spec\n      properties:\n        domain_id:\n          description: Domain that will be executing the task\n          allOf:\n          - $ref: '#/components/schemas/DomainId'\n        dry_run:\n          description: When true, do not actually create a task, just validate the process\n          type: boolean\n        reservations:\n          description: Task reservations\n          allOf:\n          - $ref: '#/components/schemas/CreateTaskReservation'\n        security:\n          description: Security keys and associateds permissions\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/TaskPermissions'\n        spec:\n          description: Task specification\n          allOf:\n          - $ref: '#/components/schemas/CreateTaskSpec'\n    CreateTaskReservation:\n      description: Timed resource reservations for the task (must contain all used resources)\n      type: object\n      required:\n      - fixed_instances\n      - from\n      - to\n      properties:\n        fixed_instances:\n          description: Fixed instances reserved for the task\n          type: array\n          items:\n            $ref: '#/components/schemas/FixedInstanceId'\n          uniqueItems: true\n        from:\n          description: Start of the reservation time\n          type: string\n          format: date-time\n        to:\n          description: End of the reservation time\n          type: string\n          format: date-time\n    CreateTaskSpec:\n      description: Create task spec\n      type: object\n      properties:\n        connections:\n          description: Connections between nodes\n          default: {}\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/NodeConnection'\n        dynamic:\n          description: Dynamic instance nodes of the task\n          default: {}\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/DynamicInstanceNode'\n        fixed:\n          description: Fixed instance nodes of the task\n          default: {}\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/FixedInstanceNode'\n        mixers:\n          description: Mixer nodes of the task\n          default: {}\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/MixerNode'\n        tracks:\n          description: Track nodes of the task\n          default: {}\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/TrackNode'\n    DomainCommandSource:\n      description: Source of commands for domains\n      oneOf:\n      - description: Domain command source disabled\n        type: string\n        enum:\n        - disabled\n      - description: Pulls events from NATS JetStream\n        type: object\n        required:\n        - jet_stream\n        properties:\n          jet_stream:\n            type: object\n            required:\n            - topic\n            - url\n            properties:\n              topic:\n                description: Topic to load for commands\n                type: string\n              url:\n                description: where to connect to\n                type: string\n        additionalProperties: false\n      - description: Consume a kafka topic\n        type: object\n        required:\n        - kafka\n        properties:\n          kafka:\n            type: object\n            required:\n            - brokers\n            - password\n            - topic\n            - username\n            properties:\n              brokers:\n                description: Kafka broker list to be used for commands and events\n                type: string\n              offset:\n                description: Read after this offset from event stream, or default to the latest one persisted\n                type:\n                - integer\n                - 'null'\n                format: int64\n              password:\n                description: SASL SCRAM password used to consume commands\n                type: string\n              topic:\n                description: Topic where commands to the domain will be sent\n                type: string\n              username:\n                description: Username used to consume commands\n                type: string\n        additionalProperties: false\n    DomainConfig:\n      title: DomainConfig\n      description: Used by domain for booting up.\n      type: object\n      required:\n      - domain_id\n      - models\n      properties:\n        apps:\n          description: Apps allowed to access the domain\n          default: []\n          type: array\n          items:\n            $ref: '#/components/schemas/AppId'\n          uniqueItems: true\n        command_source:\n          description: Source for commands from the cloud to the domain\n          default: disabled\n          allOf:\n          - $ref: '#/components/schemas/DomainCommandSource'\n        domain_id:\n          description: Id of the domain\n          allOf:\n          - $ref: '#/components/schemas/DomainId'\n        dynamic_instances:\n          description: Dynamic instances configured on the domain, with associated limits\n          default: {}\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/DynamicInstanceLimits'\n        engines:\n          description: Engines configured on the domain\n          default: {}\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/EngineConfig'\n        event_sink:\n          description: Sink for events from the domain to the cloud\n          default: log\n          allOf:\n          - $ref: '#/components/schemas/DomainEventSink'\n        fixed_instances:\n          description: Fixed instances configured on the domain\n          default: {}\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/FixedInstanceConfig'\n        maintenance:\n          description: Configured maintenance time windows during which the domain should not serve requests\n          default: []\n          type: array\n          items:\n            $ref: '#/components/schemas/Maintenance'\n        max_concurrent_tasks:\n          description: Maximum number of concurrent tasks (when lower than the sum of tasks available on engines)\n          default: null\n          type:\n          - integer\n          - 'null'\n          format: uint\n          minimum: 0.0\n        min_task_len_ms:\n          description: Minimum Task length\n          default: 5000\n          type: integer\n          format: int64\n        models:\n          description: Source of model information for the domain (can include unused models)\n          allOf:\n          - $ref: '#/components/schemas/DomainModelSource'\n        tasks:\n          description: Currently configured tasks\n          default: {}\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/Task'\n    DomainEventSink:\n      description: Source of commands for domains\n      oneOf:\n      - description: Disable sending of domain events\n        type: string\n        enum:\n        - disabled\n      - description: Emit events as logs\n        type: string\n        enum:\n        - log\n      - description: Emit events to NATS JetStream\n        type: object\n        required:\n        - jet_stream\n        properties:\n          jet_stream:\n            type: object\n            required:\n            - topic\n            - url\n            properties:\n              topic:\n                description: Topic to write events to\n                type: string\n              url:\n                description: Valid NATS URL to connect to\n                type: string\n        additionalProperties: false\n      - description: Produce to a kafka topic\n        type: object\n        required:\n        - kafka\n        properties:\n          kafka:\n            type: object\n            required:\n            - brokers\n            - password\n            - topic\n            - username\n            properties:\n              brokers:\n                description: Kafka broker list to be used for commands and events\n                type: string\n              password:\n                description: SASL SCRAM password used to produce events\n                type: string\n              topic:\n                description: Topic where events from the domain may be sent\n                type: string\n              username:\n                description: Username used to produce events\n                type: string\n        additionalProperties: false\n    DomainFixedInstanceEngine:\n      description: Configuration of how a fixed instance is connected to the domain\n      type: object\n      required:\n      - engine_id\n      - input_start\n      - output_start\n      properties:\n        engine_id:\n          description: Engine hosting the instance, if any\n          allOf:\n          - $ref: '#/components/schemas/EngineId'\n        input_start:\n          description: Instance inputs start at index on engine\n          type: integer\n          format: uint32\n          minimum: 0.0\n        output_start:\n          description: Instance outputs start at index on engine\n          type: integer\n          format: uint32\n          minimum: 0.0\n    DomainId:\n      type: string\n    DomainMediaInstanceConfig:\n      description: Instance media settings\n      type: object\n      required:\n      - length_ms\n      - renders_rewind_to_start\n      properties:\n        length_ms:\n          description: Lenght of the inserted media in milliseconds\n          type: integer\n          format: uint\n          minimum: 0.0\n        play_rewind:\n          description: |-\n            Behaviour of playing back (streaming) and hitting end of media\n\n            - If null, rewind to start - Otherwise, rewind by specified amount of milliseconds\n          type:\n          - integer\n          - 'null'\n          format: uint\n          minimum: 0.0\n        renders_rewind_to_start:\n          description: WHen rewinding to make space for contiguous renders, should the driver rewind to start or just enough to start rendering\n          type: boolean\n    DomainModelSource:\n      description: Source for models\n      oneOf:\n      - description: MOdels are provided in-line with the configuration\n        type: object\n        required:\n        - inline\n        properties:\n          inline:\n            type: object\n            required:\n            - models\n            properties:\n              models:\n                description: All model information for parameter and report validation\n                type: object\n                additionalProperties:\n                  $ref: '#/components/schemas/Model'\n        additionalProperties: false\n      - description: Models are stored locally on the filesystem\n        type: object\n        required:\n        - local\n        properties:\n          local:\n            type: object\n            required:\n            - path\n            properties:\n              path:\n                description: The local path where models are stored\n                type: string\n        additionalProperties: false\n      - description: Obtain models from a remote URL\n        type: object\n        required:\n        - remote\n        properties:\n          remote:\n            type: object\n            required:\n            - refresh_interval_ms\n            - url\n            properties:\n              refresh_interval_ms:\n                description: Refresh interval, in milliseconds\n                type: integer\n                format: uint64\n                minimum: 0.0\n              url:\n                description: URL where models are going to reside\n                type: string\n        additionalProperties: false\n    DomainPowerInstanceConfig:\n      description: Instance power settings\n      type: object\n      required:\n      - channel\n      - instance\n      properties:\n        channel:\n          description: Which channel on the power instance is distributing power to this instance\n          type: integer\n          format: uint\n          minimum: 0.0\n        cool_down_ms:\n          description: Number of milliseconds to wait to cool down after powering down\n          default: 2500\n          type: integer\n          format: uint\n          minimum: 0.0\n        idle_off_delay_ms:\n          description: Number of milliseconds to wait before automatically powering down after idle\n          default: 60000\n          type: integer\n          format: uint\n          minimum: 0.0\n        instance:\n          description: Power instance used to distribute power to this instance\n          allOf:\n          - $ref: '#/components/schemas/FixedInstanceId'\n        warm_up_ms:\n          description: Number of milliseconds to wait to warm up after powering on\n          default: 2500\n          type: integer\n          format: uint\n          minimum: 0.0\n    DomainUpdated:\n      title: DomainUpdated\n      description: The domain has been updated\n      oneOf:\n      - description: Updated normally\n        type: object\n        required:\n        - updated\n        properties:\n          updated:\n            $ref: '#/components/schemas/DomainId'\n        additionalProperties: false\n    DownloadCreated:\n      title: DownloadCreated\n      description: Confirming download is created\n      oneOf:\n      - type: object\n        required:\n        - created\n        properties:\n          created:\n            type: object\n            required:\n            - domain_id\n            - media_id\n            properties:\n              domain_id:\n                $ref: '#/components/schemas/DomainId'\n              media_id:\n                $ref: '#/components/schemas/AppMediaObjectId'\n        additionalProperties: false\n    DownloadFromDomain:\n      title: DownloadFromDomain\n      type: object\n      required:\n      - url\n      properties:\n        context: true\n        notify_url:\n          type:\n          - string\n          - 'null'\n        url:\n          type: string\n    DynamicInstanceLimits:\n      description: Limits on dynamic instances\n      type: object\n      required:\n      - max_instances\n      properties:\n        max_instances:\n          description: |-\n            Maximum number of concurrent dynamic instances\n\n            Takes precedence over over total resource usage. For example, there may be more resources but licensing limits the amount of instances.\n          type: integer\n          format: uint\n          minimum: 0.0\n    DynamicInstanceNode:\n      description: Dynamic node specification\n      type: object\n      required:\n      - model_id\n      - parameters\n      properties:\n        model_id:\n          description: The manufacturer and name of the processing software\n          allOf:\n          - $ref: '#/components/schemas/ModelId'\n        parameters:\n          description: Parameter values\n    DynamicInstanceNodeId:\n      type: string\n    DynamicsId:\n      type: string\n      enum:\n      - total\n      - compressor\n      - gate\n      - limiter\n      - de_esser\n    DynamicsParameterRole:\n      type: string\n      enum:\n      - ratio\n      - threshold\n      - ceiling\n      - attack\n      - release\n      - auto_release\n      - auto_attack\n      - auto_ratio\n      - knee\n      - detector_input\n      - detector_material\n      - detector_filter\n      - mid_emphasis\n    DynamicsReportRole:\n      type: string\n      enum:\n      - gain_reduction\n      - gain_reduction_limit_hit\n    EngineConfig:\n      title: EngineConfig\n      description: Information about a media engine within a domain\n      type: object\n      required:\n      - max_concurrent_tasks\n      - sample_rate\n      properties:\n        additional:\n          description: Additional configuration, specific to the engine configuration\n          default: null\n        dynamic_instances:\n          description: Dynamic instances configured on the audio engine, with associated limits\n          default: {}\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/DynamicInstanceLimits'\n        max_concurrent_tasks:\n          description: Maximum number of concurrent tasks\n          type: integer\n          format: uint\n          minimum: 0.0\n        resources:\n          description: Resources available on the domain\n          default: {}\n          type: object\n          additionalProperties:\n            type: number\n            format: double\n        sample_rate:\n          description: Native audio sample rate\n          type: integer\n          format: uint\n          minimum: 0.0\n    EngineId:\n      type: string\n    FilterId:\n      description: What kind of filter\n      type: string\n      enum:\n      - high_pass\n      - low\n      - low_mid\n      - mid\n      - high_mid\n      - high\n      - low_pass\n      - band_pass\n      - dynamics\n      - de_esser\n    FilterParameterRole:\n      type: string\n      enum:\n      - gain\n      - gain_direction\n      - frequency\n      - bandwidth\n      - type\n    FixedInstanceConfig:\n      title: FixedInstanceConfig\n      description: Configuration of a fixed instance\n      type: object\n      properties:\n        additional:\n          description: Additional information specific to the driver implementation\n          default: null\n        apps_override:\n          description: Apps allowed to access the instance or null if the domain defaults are used\n          default: null\n          type:\n          - array\n          - 'null'\n          items:\n            $ref: '#/components/schemas/AppId'\n          uniqueItems: true\n        driver:\n          description: Which driver is using\n          default: null\n          anyOf:\n          - $ref: '#/components/schemas/InstanceDriverId'\n          - type: 'null'\n        engine:\n          description: Configuration of how a fixed instance is connected to the domain\n          default: null\n          anyOf:\n          - $ref: '#/components/schemas/DomainFixedInstanceEngine'\n          - type: 'null'\n        maintenance:\n          description: Maintenance windows on this instance\n          default: []\n          type: array\n          items:\n            $ref: '#/components/schemas/Maintenance'\n        media:\n          description: Optional configuration if instance handles media (such as tape machines)\n          default: null\n          anyOf:\n          - $ref: '#/components/schemas/DomainMediaInstanceConfig'\n          - type: 'null'\n        power:\n          description: Optional configuration to powers on/off instance to conserve energy\n          default: null\n          anyOf:\n          - $ref: '#/components/schemas/DomainPowerInstanceConfig'\n          - type: 'null'\n        sidecars:\n          description: Additional models with parameters or reports that are merged with the instance model\n          default: []\n          type: array\n          items:\n            $ref: '#/components/schemas/ModelId'\n          uniqueItems: true\n    FixedInstanceId:\n      type: string\n    FixedInstanceNode:\n      description: Fixed instance node specification\n      type: object\n      required:\n      - instance_id\n      - parameters\n      - wet\n      properties:\n        instance_id:\n          description: The manufacturer, name and instance identifier of the hardware device doing the processing\n          allOf:\n          - $ref: '#/components/schemas/FixedInstanceId'\n        parameters:\n          description: parameters\n        wet:\n          description: |-\n            Dry-wet percentage\n\n            only applicable for instances with same number of inputs and outputs, having 1 or 2 channels.\n          type: number\n          format: double\n    FixedInstanceNodeId:\n      type: string\n    GetAppResponse:\n      title: GetAppResponse\n      description: Returned information about an app\n      type: object\n      required:\n      - admin_email\n      - enabled\n      - id\n      - media_url\n      properties:\n        admin_email:\n          description: App owner/administrator email\n          type: string\n        enabled:\n          description: If true, the app is enabled - it may make responses to the cloud API\n          type: boolean\n        id:\n          description: App Id\n          allOf:\n          - $ref: '#/components/schemas/AppId'\n        media_url:\n          description: The URL used to resolve object IDs to media information\n          type: string\n    GetDomainResponse:\n      title: GetDomainResponse\n      description: Domain summary for apps\n      type: object\n      required:\n      - enabled\n      - engines\n      - fixed_instances\n      - maintenance\n      - min_task_len\n      - public_url\n      properties:\n        enabled:\n          description: If true, the domain is enabled and will serve requests if not in maitenance\n          type: boolean\n        engines:\n          description: Engines available on the domain\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/EngineConfig'\n        fixed_instances:\n          description: FIxed instances available on the domain\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/AppFixedInstance'\n        maintenance:\n          description: Configured maintenance time windows during which the domain should not serve requests\n          type: array\n          items:\n            $ref: '#/components/schemas/Maintenance'\n        min_task_len:\n          description: Minimum task duration\n          type: number\n          format: double\n        public_url:\n          description: Base public URL for domain API\n          type: string\n    GlobalParameterRole:\n      type: string\n      enum:\n      - enable\n      - bypass\n    InputPadId:\n      description: A pad that can receive connections on a node inside a task\n      oneOf:\n      - description: Mixer node input\n        type: object\n        required:\n        - mixer\n        properties:\n          mixer:\n            $ref: '#/components/schemas/MixerNodeId'\n        additionalProperties: false\n      - description: Fixed instance node input\n        type: object\n        required:\n        - fixed\n        properties:\n          fixed:\n            $ref: '#/components/schemas/FixedInstanceNodeId'\n        additionalProperties: false\n      - description: Dynamic instance node input\n        type: object\n        required:\n        - dynamic\n        properties:\n          dynamic:\n            $ref: '#/components/schemas/DynamicInstanceNodeId'\n        additionalProperties: false\n    InstanceDriverId:\n      type: string\n    Maintenance:\n      description: Maintenance window\n      type: object\n      required:\n      - reason\n      - time\n      properties:\n        reason:\n          description: Human readable string about it, or URL to a web page detailing more information\n          type: string\n        time:\n          description: Time during which maintenance is taking place (may overlap with others)\n          allOf:\n          - $ref: '#/components/schemas/TimeRange'\n    MediaChannels:\n      description: Channel count for media items and track nodes\n      oneOf:\n      - description: Single channel\n        type: string\n        enum:\n        - mono\n      - description: Two channels - left and right\n        type: string\n        enum:\n        - stereo\n    MediaJobState:\n      type: object\n      required:\n      - in_progress\n      - progress\n      - retry\n      - updated_at\n      properties:\n        error:\n          type:\n          - string\n          - 'null'\n        in_progress:\n          type: boolean\n        progress:\n          type: number\n          format: double\n        retry:\n          type: integer\n          format: uint\n          minimum: 0.0\n        updated_at:\n          type: string\n          format: date-time\n    MediaObjectDeleted:\n      title: MediaObjectDeleted\n      description: Confirming media object is scheduled for deletion\n      oneOf:\n      - type: object\n        required:\n        - deleted\n        properties:\n          deleted:\n            type: object\n            required:\n            - media_id\n            properties:\n              media_id:\n                $ref: '#/components/schemas/AppMediaObjectId'\n        additionalProperties: false\n    MediaObjectId:\n      type: string\n    MixerNode:\n      description: Mixer node specification\n      type: object\n      required:\n      - input_channels\n      - output_channels\n      properties:\n        input_channels:\n          description: Numvber of input channels on the mixer node\n          type: integer\n          format: uint\n          minimum: 0.0\n        output_channels:\n          description: Number of output channels on the mixer node\n          type: integer\n          format: uint\n          minimum: 0.0\n    MixerNodeId:\n      type: string\n    Model:\n      description: A model describes the parameters and reprots of a processor\n      type: object\n      required:\n      - inputs\n      - media\n      - outputs\n      - parameters\n      - reports\n      properties:\n        capabilities:\n          default: []\n          type: array\n          items:\n            $ref: '#/components/schemas/ModelCapability'\n          uniqueItems: true\n        inputs:\n          type: array\n          items:\n            $ref: '#/components/schemas/ModelInput'\n        media:\n          type: boolean\n        outputs:\n          type: array\n          items:\n            $ref: '#/components/schemas/ModelOutput'\n        parameters:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/ModelParameter'\n        reports:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/ModelReport'\n        resources:\n          default: {}\n          type: object\n          additionalProperties:\n            type: number\n            format: double\n    ModelCapability:\n      type: string\n      enum:\n      - power_distributor\n      - audio_router\n      - audio_mixer\n      - digital_input_output\n    ModelElementScope:\n      oneOf:\n      - type: string\n        enum:\n        - global\n        - all_inputs\n        - all_outputs\n      - type: object\n        required:\n        - count\n        properties:\n          count:\n            type: integer\n            format: uint\n            minimum: 0.0\n        additionalProperties: false\n    ModelId:\n      type: string\n    ModelInput:\n      oneOf:\n      - type: string\n        enum:\n        - sidechain\n        - midi\n      - type: object\n        required:\n        - audio\n        properties:\n          audio:\n            $ref: '#/components/schemas/ControlChannels'\n        additionalProperties: false\n    ModelOutput:\n      oneOf:\n      - type: string\n        enum:\n        - midi\n      - type: object\n        required:\n        - audio\n        properties:\n          audio:\n            $ref: '#/components/schemas/ControlChannels'\n        additionalProperties: false\n    ModelParameter:\n      type: object\n      required:\n      - role\n      - scope\n      - values\n      properties:\n        default:\n          default: null\n          anyOf:\n          - $ref: '#/components/schemas/ModelValue'\n          - type: 'null'\n        role:\n          $ref: '#/components/schemas/ModelParameterRole'\n        scope:\n          $ref: '#/components/schemas/ModelElementScope'\n        unit:\n          default: no\n          allOf:\n          - $ref: '#/components/schemas/ModelValueUnit'\n        values:\n          type: array\n          items:\n            $ref: '#/components/schemas/ModelValueOption'\n    ModelParameterRole:\n      oneOf:\n      - type: string\n        enum:\n        - no_role\n        - power\n      - type: object\n        required:\n        - global\n        properties:\n          global:\n            $ref: '#/components/schemas/GlobalParameterRole'\n        additionalProperties: false\n      - type: object\n        required:\n        - channel\n        properties:\n          channel:\n            $ref: '#/components/schemas/ChannelParameterRole'\n        additionalProperties: false\n      - type: object\n        required:\n        - amplifier\n        properties:\n          amplifier:\n            type: array\n            items:\n            - $ref: '#/components/schemas/AmplifierId'\n            - $ref: '#/components/schemas/AmplifierParameterRole'\n            maxItems: 2\n            minItems: 2\n        additionalProperties: false\n      - type: object\n        required:\n        - dynamics\n        properties:\n          dynamics:\n            type: array\n            items:\n            - $ref: '#/components/schemas/DynamicsId'\n            - $ref: '#/components/schemas/DynamicsParameterRole'\n            maxItems: 2\n            minItems: 2\n        additionalProperties: false\n      - type: object\n        required:\n        - filter\n        properties:\n          filter:\n            type: array\n            items:\n            - $ref: '#/components/schemas/FilterId'\n            - $ref: '#/components/schemas/FilterParameterRole'\n            maxItems: 2\n            minItems: 2\n        additionalProperties: false\n    ModelReport:\n      type: object\n      required:\n      - role\n      - scope\n      - values\n      properties:\n        public:\n          default: false\n          type: boolean\n        role:\n          $ref: '#/components/schemas/ModelReportRole'\n        scope:\n          $ref: '#/components/schemas/ModelElementScope'\n        unit:\n          default: no\n          allOf:\n          - $ref: '#/components/schemas/ModelValueUnit'\n        values:\n          type: array\n          items:\n            $ref: '#/components/schemas/ModelValueOption'\n        volatile:\n          default: false\n          type: boolean\n    ModelReportRole:\n      oneOf:\n      - type: string\n        enum:\n        - no_role\n      - type: object\n        required:\n        - power\n        properties:\n          power:\n            $ref: '#/components/schemas/PowerReportRole'\n        additionalProperties: false\n      - type: object\n        required:\n        - amplifier\n        properties:\n          amplifier:\n            type: array\n            items:\n            - $ref: '#/components/schemas/AmplifierId'\n            - $ref: '#/components/schemas/AmplifierReportRole'\n            maxItems: 2\n            minItems: 2\n        additionalProperties: false\n      - type: object\n        required:\n        - dynamics\n        properties:\n          dynamics:\n            type: array\n            items:\n            - $ref: '#/components/schemas/DynamicsId'\n            - $ref: '#/components/schemas/DynamicsReportRole'\n            maxItems: 2\n            minItems: 2\n        additionalProperties: false\n    ModelValue:\n      anyOf:\n      - type: string\n      - type: number\n        format: double\n      - type: boolean\n    ModelValueOption:\n      anyOf:\n      - $ref: '#/components/schemas/ModelValue'\n      - type: array\n        items:\n        - $ref: '#/components/schemas/ModelValue'\n        - $ref: '#/components/schemas/ModelValue'\n        maxItems: 2\n        minItems: 2\n    ModelValueUnit:\n      type: string\n      enum:\n      - no\n      - percent\n      - dB\n      - hz\n      - oct\n      - toggle\n      - amps\n      - watthrs\n    ModifyTask:\n      description: Modify a task\n      oneOf:\n      - description: Modify task specification\n        type: object\n        required:\n        - spec\n        properties:\n          spec:\n            type: object\n            required:\n            - spec\n            properties:\n              spec:\n                description: Specification change\n                allOf:\n                - $ref: '#/components/schemas/ModifyTaskSpec'\n        additionalProperties: false\n      - description: Add or overwrite task security\n        type: object\n        required:\n        - set_security\n        properties:\n          set_security:\n            type: object\n            required:\n            - key\n            - security\n            properties:\n              key:\n                description: Secure key to add or overwrite\n                allOf:\n                - $ref: '#/components/schemas/SecureKey'\n              security:\n                description: Permissions to set for the secure key\n                allOf:\n                - $ref: '#/components/schemas/TaskPermissions'\n        additionalProperties: false\n      - description: Revoke task security\n        type: object\n        required:\n        - revoke_security\n        properties:\n          revoke_security:\n            type: object\n            required:\n            - key\n            properties:\n              key:\n                description: Secure key to revoke\n                allOf:\n                - $ref: '#/components/schemas/SecureKey'\n        additionalProperties: false\n    ModifyTaskError:\n      title: ModifyTaskError\n      oneOf:\n      - type: object\n        required:\n        - node_id\n        - type\n        properties:\n          node_id:\n            $ref: '#/components/schemas/TrackNodeId'\n          type:\n            type: string\n            enum:\n            - track_exists\n      - type: object\n        required:\n        - node_id\n        - type\n        properties:\n          node_id:\n            $ref: '#/components/schemas/FixedInstanceNodeId'\n          type:\n            type: string\n            enum:\n            - fixed_instance_exists\n      - type: object\n        required:\n        - node_id\n        - type\n        properties:\n          node_id:\n            $ref: '#/components/schemas/DynamicInstanceNodeId'\n          type:\n            type: string\n            enum:\n            - dynamic_instance_exists\n      - type: object\n        required:\n        - node_id\n        - type\n        properties:\n          node_id:\n            $ref: '#/components/schemas/MixerNodeId'\n          type:\n            type: string\n            enum:\n            - mixer_exists\n      - type: object\n        required:\n        - node_id\n        - type\n        properties:\n          node_id:\n            $ref: '#/components/schemas/TrackNodeId'\n          type:\n            type: string\n            enum:\n            - track_does_not_exist\n      - type: object\n        required:\n        - node_id\n        - type\n        properties:\n          node_id:\n            $ref: '#/components/schemas/FixedInstanceNodeId'\n          type:\n            type: string\n            enum:\n            - fixed_instance_does_not_exist\n      - type: object\n        required:\n        - node_id\n        - type\n        properties:\n          node_id:\n            $ref: '#/components/schemas/DynamicInstanceNodeId'\n          type:\n            type: string\n            enum:\n            - dynamic_instance_does_not_exist\n      - type: object\n        required:\n        - node_id\n        - type\n        properties:\n          node_id:\n            $ref: '#/components/schemas/MixerNodeId'\n          type:\n            type: string\n            enum:\n            - mixer_does_not_exist\n      - type: object\n        required:\n        - connection_id\n        - type\n        properties:\n          connection_id:\n            $ref: '#/components/schemas/NodeConnectionId'\n          type:\n            type: string\n            enum:\n            - connection_does_not_exist\n      - type: object\n        required:\n        - connection_id\n        - type\n        properties:\n          connection_id:\n            $ref: '#/components/schemas/NodeConnectionId'\n          type:\n            type: string\n            enum:\n            - connection_exists\n      - type: object\n        required:\n        - connection_id\n        - message\n        - type\n        properties:\n          connection_id:\n            $ref: '#/components/schemas/NodeConnectionId'\n          message:\n            type: string\n          type:\n            type: string\n            enum:\n            - connection_malformed\n      - type: object\n        required:\n        - media_id\n        - node_id\n        - type\n        properties:\n          media_id:\n            $ref: '#/components/schemas/TrackMediaId'\n          node_id:\n            $ref: '#/components/schemas/TrackNodeId'\n          type:\n            type: string\n            enum:\n            - media_exists\n      - type: object\n        required:\n        - media_id\n        - node_id\n        - type\n        properties:\n          media_id:\n            $ref: '#/components/schemas/TrackMediaId'\n          node_id:\n            $ref: '#/components/schemas/TrackNodeId'\n          type:\n            type: string\n            enum:\n            - media_does_not_exist\n      - type: object\n        required:\n        - type\n        properties:\n          type:\n            type: string\n            enum:\n            - cycle_detected\n    ModifyTaskList:\n      title: Array_of_ModifyTask\n      type: array\n      items:\n        $ref: '#/components/schemas/ModifyTask'\n    ModifyTaskSpec:\n      description: Modify task structure\n      oneOf:\n      - description: Add a track node to the task\n        type: object\n        required:\n        - add_track\n        properties:\n          add_track:\n            type: object\n            required:\n            - channels\n            - track_id\n            properties:\n              channels:\n                description: Number of channels for the track node\n                allOf:\n                - $ref: '#/components/schemas/MediaChannels'\n              track_id:\n                description: New track node id\n                allOf:\n                - $ref: '#/components/schemas/TrackNodeId'\n        additionalProperties: false\n      - description: Add media to a track node\n        type: object\n        required:\n        - add_track_media\n        properties:\n          add_track_media:\n            type: object\n            required:\n            - media_id\n            - spec\n            - track_id\n            properties:\n              media_id:\n                description: Media id within the track node\n                allOf:\n                - $ref: '#/components/schemas/TrackMediaId'\n              spec:\n                description: Media object specification\n                allOf:\n                - $ref: '#/components/schemas/TrackMedia'\n              track_id:\n                description: Track node id\n                allOf:\n                - $ref: '#/components/schemas/TrackNodeId'\n        additionalProperties: false\n      - description: Update track media on a track node\n        type: object\n        required:\n        - update_track_media\n        properties:\n          update_track_media:\n            type: object\n            required:\n            - media_id\n            - track_id\n            - update\n            properties:\n              media_id:\n                description: Media id within the track node\n                allOf:\n                - $ref: '#/components/schemas/TrackMediaId'\n              track_id:\n                description: Track node id\n                allOf:\n                - $ref: '#/components/schemas/TrackNodeId'\n              update:\n                description: Media object update\n                allOf:\n                - $ref: '#/components/schemas/UpdateTaskTrackMedia'\n        additionalProperties: false\n      - description: Delete track media from a track node\n        type: object\n        required:\n        - delete_track_media\n        properties:\n          delete_track_media:\n            type: object\n            required:\n            - media_id\n            - track_id\n            properties:\n              media_id:\n                description: Media id within the track node\n                allOf:\n                - $ref: '#/components/schemas/TrackMediaId'\n              track_id:\n                description: Track node id\n                allOf:\n                - $ref: '#/components/schemas/TrackNodeId'\n        additionalProperties: false\n      - description: Delete a track node from the task (including all media and referencing connections)\n        type: object\n        required:\n        - delete_track\n        properties:\n          delete_track:\n            type: object\n            required:\n            - track_id\n            properties:\n              track_id:\n                description: Track node id\n                allOf:\n                - $ref: '#/components/schemas/TrackNodeId'\n        additionalProperties: false\n      - description: Add a fixed instance node to the task\n        type: object\n        required:\n        - add_fixed_instance\n        properties:\n          add_fixed_instance:\n            type: object\n            required:\n            - fixed_id\n            - spec\n            properties:\n              fixed_id:\n                description: Fixed instance node id\n                allOf:\n                - $ref: '#/components/schemas/FixedInstanceNodeId'\n              spec:\n                description: Fixed instance node processing specification\n                allOf:\n                - $ref: '#/components/schemas/FixedInstanceNode'\n        additionalProperties: false\n      - description: Add a dynamic instance node to the task\n        type: object\n        required:\n        - add_dynamic_instance\n        properties:\n          add_dynamic_instance:\n            type: object\n            required:\n            - dynamic_id\n            - spec\n            properties:\n              dynamic_id:\n                description: Dynamic instance node id\n                allOf:\n                - $ref: '#/components/schemas/DynamicInstanceNodeId'\n              spec:\n                description: Dynamic instance node processing specification\n                allOf:\n                - $ref: '#/components/schemas/DynamicInstanceNode'\n        additionalProperties: false\n      - description: Add a mixer node to the task\n        type: object\n        required:\n        - add_mixer\n        properties:\n          add_mixer:\n            type: object\n            required:\n            - mixer_id\n            - spec\n            properties:\n              mixer_id:\n                description: Mixer node id\n                allOf:\n                - $ref: '#/components/schemas/MixerNodeId'\n              spec:\n                description: Mixer node processing specification\n                allOf:\n                - $ref: '#/components/schemas/MixerNode'\n        additionalProperties: false\n      - description: Delete a mixer node from the task (including all referencing connections)\n        type: object\n        required:\n        - delete_mixer\n        properties:\n          delete_mixer:\n            type: object\n            required:\n            - mixer_id\n            properties:\n              mixer_id:\n                description: Moxer node id\n                allOf:\n                - $ref: '#/components/schemas/MixerNodeId'\n        additionalProperties: false\n      - description: Delete a fixed instance node from the task (including all referencing connections)\n        type: object\n        required:\n        - delete_fixed_instance\n        properties:\n          delete_fixed_instance:\n            type: object\n            required:\n            - fixed_id\n            properties:\n              fixed_id:\n                description: Fixed instance node id\n                allOf:\n                - $ref: '#/components/schemas/FixedInstanceNodeId'\n        additionalProperties: false\n      - description: Delete dynamic instance node from the task (including all referencing connections)\n        type: object\n        required:\n        - delete_dynamic_instance\n        properties:\n          delete_dynamic_instance:\n            type: object\n            required:\n            - dynamic_id\n            properties:\n              dynamic_id:\n                description: Dynamic instance node id\n                allOf:\n                - $ref: '#/components/schemas/DynamicInstanceNodeId'\n        additionalProperties: false\n      - description: Delete a connection from the task (preserving the referenced nodes even if they are now unconnected)\n        type: object\n        required:\n        - delete_connection\n        properties:\n          delete_connection:\n            type: object\n            required:\n            - connection_id\n            properties:\n              connection_id:\n                description: Connection id\n                allOf:\n                - $ref: '#/components/schemas/NodeConnectionId'\n        additionalProperties: false\n      - description: Add a connection to the task\n        type: object\n        required:\n        - add_connection\n        properties:\n          add_connection:\n            type: object\n            required:\n            - connection_id\n            - from\n            - from_channels\n            - pan\n            - to\n            - to_channels\n            - volume\n            properties:\n              connection_id:\n                description: Connection id\n                allOf:\n                - $ref: '#/components/schemas/NodeConnectionId'\n              from:\n                description: Source node pad\n                allOf:\n                - $ref: '#/components/schemas/OutputPadId'\n              from_channels:\n                description: Source channel mask\n                allOf:\n                - $ref: '#/components/schemas/ChannelMask'\n              pan:\n                description: Panning adjustment on the audio passing through the connection\n                type: number\n                format: double\n              to:\n                description: Destination node pad\n                allOf:\n                - $ref: '#/components/schemas/InputPadId'\n              to_channels:\n                description: Destination channel mask\n                allOf:\n                - $ref: '#/components/schemas/ChannelMask'\n              volume:\n                description: Volume adjustment on audio passing through the connection\n                type: number\n                format: double\n        additionalProperties: false\n      - description: Set connection values\n        type: object\n        required:\n        - set_connection_parameter_values\n        properties:\n          set_connection_parameter_values:\n            type: object\n            required:\n            - connection_id\n            - values\n            properties:\n              connection_id:\n                description: Connection id\n                allOf:\n                - $ref: '#/components/schemas/NodeConnectionId'\n              values:\n                description: Values (parameters) on the connection\n                allOf:\n                - $ref: '#/components/schemas/ConnectionValues'\n        additionalProperties: false\n      - description: Set fixed instance node values\n        type: object\n        required:\n        - set_fixed_instance_parameter_values\n        properties:\n          set_fixed_instance_parameter_values:\n            type: object\n            required:\n            - fixed_id\n            - values\n            properties:\n              fixed_id:\n                description: Fixed instance node id\n                allOf:\n                - $ref: '#/components/schemas/FixedInstanceNodeId'\n              values:\n                description: Values to set\n        additionalProperties: false\n      - description: Set dynamic instance node values\n        type: object\n        required:\n        - set_dynamic_instance_parameter_values\n        properties:\n          set_dynamic_instance_parameter_values:\n            type: object\n            required:\n            - dynamic_id\n            - values\n            properties:\n              dynamic_id:\n                description: Dynamic instance node id\n                allOf:\n                - $ref: '#/components/schemas/DynamicInstanceNodeId'\n              values:\n                description: Values to set\n        additionalProperties: false\n    NodeConnection:\n      description: Connection between nodes in a task\n      type: object\n      required:\n      - from\n      - from_channels\n      - pan\n      - to\n      - to_channels\n      - volume\n      properties:\n        from:\n          description: Source node pad\n          allOf:\n          - $ref: '#/components/schemas/OutputPadId'\n        from_channels:\n          description: Source channel mask\n          allOf:\n          - $ref: '#/components/schemas/ChannelMask'\n        pan:\n          description: |-\n            Panning adjustment\n\n            Zero is centered, -1 is fully left, 1 is fully right\n          type: number\n          format: double\n        to:\n          description: Destination node pad\n          allOf:\n          - $ref: '#/components/schemas/InputPadId'\n        to_channels:\n          description: Destination channel mask\n          allOf:\n          - $ref: '#/components/schemas/ChannelMask'\n        volume:\n          description: Volume adjustment as a factor\n          type: number\n          format: double\n    NodeConnectionId:\n      type: string\n    OutputPadId:\n      description: A pad that can receive connections on a node inside a task\n      oneOf:\n      - description: Mixer node output\n        type: object\n        required:\n        - mixer\n        properties:\n          mixer:\n            $ref: '#/components/schemas/MixerNodeId'\n        additionalProperties: false\n      - description: Fixed instance node output\n        type: object\n        required:\n        - fixed\n        properties:\n          fixed:\n            $ref: '#/components/schemas/FixedInstanceNodeId'\n        additionalProperties: false\n      - description: Dynamic instance node output\n        type: object\n        required:\n        - dynamic\n        properties:\n          dynamic:\n            $ref: '#/components/schemas/DynamicInstanceNodeId'\n        additionalProperties: false\n      - description: Track node output\n        type: object\n        required:\n        - track\n        properties:\n          track:\n            $ref: '#/components/schemas/TrackNodeId'\n        additionalProperties: false\n    PowerReportRole:\n      type: string\n      enum:\n      - powered\n      - current\n      - power_factor\n      - total_energy\n    ReportMediaJobProgress:\n      title: ReportMediaJobProgress\n      oneOf:\n      - description: Reporting upload progress\n        type: object\n        required:\n        - upload_from_domain\n        properties:\n          upload_from_domain:\n            type: object\n            required:\n            - app_id\n            - media_id\n            - state\n            properties:\n              app_id:\n                $ref: '#/components/schemas/AppId'\n              media_id:\n                $ref: '#/components/schemas/MediaObjectId'\n              state:\n                $ref: '#/components/schemas/MediaJobState'\n        additionalProperties: false\n      - description: Reporting download progress\n        type: object\n        required:\n        - download_to_domain\n        properties:\n          download_to_domain:\n            type: object\n            required:\n            - app_id\n            - media_id\n            - state\n            properties:\n              app_id:\n                $ref: '#/components/schemas/AppId'\n              media_id:\n                $ref: '#/components/schemas/MediaObjectId'\n              state:\n                $ref: '#/components/schemas/MediaJobState'\n              task_id:\n                anyOf:\n                - $ref: '#/components/schemas/TaskId'\n                - type: 'null'\n        additionalProperties: false\n    ResourceId:\n      type: string\n      enum:\n      - ram\n      - cpu\n      - gpu\n      - antelope_dsp\n      - universal_audio_dsp\n    SecureKey:\n      type: string\n    Task:\n      description: Task information\n      type: object\n      required:\n      - domain_id\n      - reservations\n      - security\n      - spec\n      properties:\n        domain_id:\n          description: Domain executing the task\n          allOf:\n          - $ref: '#/components/schemas/DomainId'\n        reservations:\n          description: Task reservations\n          allOf:\n          - $ref: '#/components/schemas/TaskReservation'\n        security:\n          description: Security keys and associateds permissions\n          allOf:\n          - $ref: '#/components/schemas/TaskSecurity'\n        spec:\n          description: Task specification\n          allOf:\n          - $ref: '#/components/schemas/TaskSpec'\n    TaskCreated:\n      title: TaskCreated\n      description: Task created successfully\n      oneOf:\n      - description: Created normally\n        type: object\n        required:\n        - created\n        properties:\n          created:\n            type: object\n            required:\n            - app_id\n            - task_id\n            properties:\n              app_id:\n                description: App creating the task\n                allOf:\n                - $ref: '#/components/schemas/AppId'\n              task_id:\n                description: Task Id\n                allOf:\n                - $ref: '#/components/schemas/TaskId'\n        additionalProperties: false\n      - description: Validated successfully, but not created\n        type: object\n        required:\n        - dry_run\n        properties:\n          dry_run:\n            type: object\n            required:\n            - app_id\n            - task_id\n            properties:\n              app_id:\n                description: App creating the task\n                allOf:\n                - $ref: '#/components/schemas/AppId'\n              task_id:\n                description: Task Id\n                allOf:\n                - $ref: '#/components/schemas/TaskId'\n        additionalProperties: false\n    TaskDeleted:\n      title: TaskDeleted\n      description: Task was deleted successfully\n      oneOf:\n      - description: Deleted normally\n        type: object\n        required:\n        - deleted\n        properties:\n          deleted:\n            type: object\n            required:\n            - app_id\n            - task_id\n            - version\n            properties:\n              app_id:\n                description: App creating the task\n                allOf:\n                - $ref: '#/components/schemas/AppId'\n              task_id:\n                description: Task Id\n                allOf:\n                - $ref: '#/components/schemas/TaskId'\n              version:\n                description: Version when deleted\n                type: integer\n                format: uint64\n                minimum: 0.0\n        additionalProperties: false\n    TaskId:\n      type: string\n    TaskPermissions:\n      type: object\n      required:\n      - audio\n      - media\n      - parameters\n      - structure\n      - transport\n      properties:\n        audio:\n          type: boolean\n        media:\n          type: boolean\n        parameters:\n          type: boolean\n        structure:\n          type: boolean\n        transport:\n          type: boolean\n    TaskReservation:\n      description: Timed resource reservations for the task (must contain all used resources)\n      type: object\n      required:\n      - fixed_instances\n      - from\n      - revision\n      - to\n      properties:\n        fixed_instances:\n          description: Fixed instances reserved for the task\n          type: array\n          items:\n            $ref: '#/components/schemas/FixedInstanceId'\n          uniqueItems: true\n        from:\n          description: Start of the reservation time\n          type: string\n          format: date-time\n        revision:\n          description: Revision number - starts at zero and change of task reservation increments it\n          type: integer\n          format: uint64\n          minimum: 0.0\n        to:\n          description: End of the reservation time\n          type: string\n          format: date-time\n    TaskSecurity:\n      description: Information about access keys and permissions of a task\n      type: object\n      required:\n      - security\n      properties:\n        revision:\n          description: Revision number - starts at zero and is incremented at every change of task security\n          default: 0\n          type: integer\n          format: uint64\n          minimum: 0.0\n        security:\n          description: Security settings per secure key\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/TaskPermissions'\n    TaskSpec:\n      description: Task specification\n      type: object\n      properties:\n        connections:\n          description: Connections between nodes\n          default: {}\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/NodeConnection'\n        dynamic:\n          description: Dynamic instance nodes of the task\n          default: {}\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/DynamicInstanceNode'\n        fixed:\n          description: Fixed instance nodes of the task\n          default: {}\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/FixedInstanceNode'\n        mixers:\n          description: Mixer nodes of the task\n          default: {}\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/MixerNode'\n        revision:\n          description: The revision number of the specification (starts at zero, increments for every change)\n          default: 0\n          type: integer\n          format: uint64\n          minimum: 0.0\n        tracks:\n          description: Track nodes of the task\n          default: {}\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/TrackNode'\n    TaskUpdated:\n      title: TaskUpdated\n      description: Task was updated successfully\n      oneOf:\n      - description: Updated normally\n        type: object\n        required:\n        - updated\n        properties:\n          updated:\n            type: object\n            required:\n            - app_id\n            - task_id\n            - version\n            properties:\n              app_id:\n                description: App creating the task\n                allOf:\n                - $ref: '#/components/schemas/AppId'\n              task_id:\n                description: Task Id\n                allOf:\n                - $ref: '#/components/schemas/TaskId'\n              version:\n                description: New version to be used with `If-Matches` when submitting further modifications\n                type: integer\n                format: uint64\n                minimum: 0.0\n        additionalProperties: false\n    TimeRange:\n      type: object\n      required:\n      - from\n      - to\n      properties:\n        from:\n          type: string\n          format: date-time\n        to:\n          type: string\n          format: date-time\n    TimeSegment:\n      type: object\n      required:\n      - length\n      - start\n      properties:\n        length:\n          type: number\n          format: double\n        start:\n          type: number\n          format: double\n    TrackMedia:\n      description: Media item specification\n      type: object\n      required:\n      - channels\n      - format\n      - media_segment\n      - object_id\n      - timeline_segment\n      properties:\n        channels:\n          description: Number of channels\n          allOf:\n          - $ref: '#/components/schemas/MediaChannels'\n        format:\n          description: Media format\n          allOf:\n          - $ref: '#/components/schemas/TrackMediaFormat'\n        media_segment:\n          description: Subset of media that is used\n          allOf:\n          - $ref: '#/components/schemas/TimeSegment'\n        object_id:\n          description: Source media object id\n          allOf:\n          - $ref: '#/components/schemas/MediaObjectId'\n        timeline_segment:\n          description: Where to place the media in the task timeline\n          allOf:\n          - $ref: '#/components/schemas/TimeSegment'\n    TrackMediaFormat:\n      type: string\n      enum:\n      - wave\n      - mp3\n      - flac\n      - wavpack\n    TrackMediaId:\n      type: string\n    TrackNode:\n      description: Track node specification\n      type: object\n      required:\n      - channels\n      - media\n      properties:\n        channels:\n          description: Number of channels\n          allOf:\n          - $ref: '#/components/schemas/MediaChannels'\n        media:\n          description: Media items present on the track\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/TrackMedia'\n    TrackNodeId:\n      type: string\n    UpdateApp:\n      title: UpdateApp\n      description: Request to update app\n      type: object\n      properties:\n        admin_email:\n          description: If not null, overwrite the administrator's email\n          type:\n          - string\n          - 'null'\n        enabled:\n          description: If not null, enable or disable the app\n          type:\n          - boolean\n          - 'null'\n        media_url:\n          description: If not null, overwrite the URL used for resolving object IDs to media information\n          type:\n          - string\n          - 'null'\n    UpdateTaskTrackMedia:\n      type: object\n      properties:\n        channels:\n          anyOf:\n          - $ref: '#/components/schemas/MediaChannels'\n          - type: 'null'\n        media_segment:\n          anyOf:\n          - $ref: '#/components/schemas/TimeSegment'\n          - type: 'null'\n        object_id:\n          anyOf:\n          - $ref: '#/components/schemas/MediaObjectId'\n          - type: 'null'\n        timeline_segment:\n          anyOf:\n          - $ref: '#/components/schemas/TimeSegment'\n          - type: 'null'\n    UploadCreated:\n      title: UploadCreated\n      description: Confirming upload is created\n      oneOf:\n      - type: object\n        required:\n        - created\n        properties:\n          created:\n            type: object\n            required:\n            - domain_id\n            - media_id\n            properties:\n              domain_id:\n                $ref: '#/components/schemas/DomainId'\n              media_id:\n                $ref: '#/components/schemas/AppMediaObjectId'\n        additionalProperties: false\n    UploadToDomain:\n      title: UploadToDomain\n      type: object\n      required:\n      - bytes\n      - channels\n      - format\n      - sample_rate\n      - seconds\n      - url\n      properties:\n        bytes:\n          type: integer\n          format: uint64\n          minimum: 0.0\n        channels:\n          $ref: '#/components/schemas/MediaChannels'\n        context: true\n        format:\n          $ref: '#/components/schemas/TrackMediaFormat'\n        notify_url:\n          type:\n          - string\n          - 'null'\n        sample_rate:\n          type: integer\n          format: uint\n          minimum: 0.0\n        seconds:\n          type: number\n          format: double\n        url:\n          type: string\n",
			"canonicalURL": "/github.com/audiocloud/audiocloud@56531e13d2a0601c635db44185e8f555eab699e0/-/blob/specs/openapi/cloud_api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/audiocloud/audiocloud/blob/56531e13d2a0601c635db44185e8f555eab699e0/specs/openapi/cloud_api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 870: cannot unmarshal !!seq into string; yaml: line 979: cannot unmarshal !!seq into string; yaml: line 1361: cannot unmarshal !!seq into string; yaml: line 1510: cannot unmarshal !!seq into string; yaml: line 1580: cannot unmarshal !!seq into string; yaml: line 1696: cannot unmarshal !!seq into string; yaml: line 1827: cannot unmarshal !!bool `true` into ogen.Schema; yaml: line 1962: cannot unmarshal !!seq into string; yaml: line 2158: cannot unmarshal !!seq into string; yaml: line 2350: cannot unmarshal !!seq into ogen.Schema; yaml: line 2362: cannot unmarshal !!seq into ogen.Schema; yaml: line 2374: cannot unmarshal !!seq into ogen.Schema; yaml: line 2423: cannot unmarshal !!seq into ogen.Schema; yaml: line 2435: cannot unmarshal !!seq into ogen.Schema; yaml: line 2451: cannot unmarshal !!seq into ogen.Schema; yaml: line 3477: cannot unmarshal !!seq into string; yaml: line 3544: cannot unmarshal !!bool `true` into ogen.Schema"
}