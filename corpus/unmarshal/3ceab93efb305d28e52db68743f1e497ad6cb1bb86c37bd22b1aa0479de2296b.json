{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/PaloAltoNetworks/pan.dev"
		},
		"file": {
			"name": "ManageCertificateObjects.yaml",
			"size": 0,
			"path": "static/cloudngfw/aws/spec/api/ManageCertificateObjects.yaml",
			"byteSize": 29134,
			"content": "components:\n  schemas:\n    CreateCertificateObjectRequest:\n      additionalProperties: false\n      properties:\n        AuditComment:\n          description: 'Audit remarks.\n\n            '\n          maxLength: 512\n          title: Auditcomment\n          type: string\n        CertificateSelfSigned:\n          default: false\n          description: 'A self-signed root CA certificate.\n\n            '\n          title: Certificateselfsigned\n          type: boolean\n        CertificateSignerArn:\n          description: \"Certificate Signer ARN       \\n\"\n          title: Certificatesignerarn\n          type: string\n        Description:\n          description: 'A description of the certificate object.\n\n            '\n          maxLength: 512\n          title: Description\n          type: string\n        Name:\n          description: 'Name of the certificate object.\n\n            '\n          maxLength: 63\n          minLength: 1\n          pattern: ^[a-zA-Z0-9-]+$\n          title: Name\n          type: string\n      required:\n      - Name\n      title: CreateCertificateObjectRequest\n      type: object\n    CreateCertificateObjectResponse:\n      additionalProperties: false\n      properties:\n        Response:\n          $ref: '#/components/schemas/CreateCertificateObjectResponse.ResponseData'\n          description: 'The API call response.\n\n            '\n        ResponseStatus:\n          $ref: '#/components/schemas/CreateCertificateObjectResponse.Result'\n          description: 'The API call response status.\n\n            '\n      title: CreateCertificateObjectResponse\n      type: object\n    CreateCertificateObjectResponse.CertificateDetails:\n      additionalProperties: false\n      properties:\n        AuditComment:\n          description: 'Audit remarks.\n\n            '\n          title: Auditcomment\n          type: string\n        CertificateSelfSigned:\n          description: 'A self-signed root CA certificate.\n\n            '\n          title: Certificateselfsigned\n          type: boolean\n        CertificateSignerArn:\n          description: \"Certificate signer ARN. \\n\"\n          title: Certificatesignerarn\n          type: string\n        Description:\n          description: 'A description of certificate object.\n\n            '\n          title: Description\n          type: string\n        UpdateToken:\n          description: 'Refresh token.\n\n            '\n          title: Updatetoken\n          type: string\n      title: CertificateDetails\n      type: object\n    CreateCertificateObjectResponse.ResponseData:\n      additionalProperties: false\n      properties:\n        CertificateObjectEntry:\n          $ref: '#/components/schemas/CreateCertificateObjectResponse.CertificateDetails'\n          description: 'The certificate object entry.\n\n            '\n        Name:\n          description: \"Name of the certificate object entry.    \\n\"\n          title: Name\n          type: string\n        RuleStackName:\n          description: \"Name of the rulestack. \\n\"\n          title: Rulestackname\n          type: string\n      title: ResponseData\n      type: object\n    CreateCertificateObjectResponse.Result:\n      additionalProperties: false\n      properties:\n        ErrorCode:\n          default: 0\n          description: \"Default value of a successful response is 0. Any other number\\\n            \\ indicates an error code.  \\n\\n400\\u2014HTTP bad request\\n* InvalidRequestException\\u2014\\\n            Operation failed due to invalid request. For example, unsupported parameter\\\n            \\ name or value in the request.\\n* LimitExceededException\\u2014Operation\\\n            \\ failed due to violation in limit settings.\\n* ThrottlingException\\u2014\\\n            Operation failed due to throttling limitations.\\n* AccessDeniedException\\u2014\\\n            You do not have sufficient access to perform this action.\\n\\n500\\u2014\\\n            Bad request \\n* InternalServerError\\u2014Your request is valid but Cloud\\\n            \\ NGFW could not perform the operation due to a system issue.\\n* InsufficientCapacityException\\u2014\\\n            AWS currently does not have enough capacity to fulfill your request.\\n\"\n          title: Errorcode\n          type: integer\n        Reason:\n          description: 'The error description.\n\n            '\n          title: Reason\n          type: string\n      title: Result\n      type: object\n    DeleteCertificateObjectRequest:\n      additionalProperties: false\n      properties: {}\n      title: DeleteCertificateObjectRequest\n      type: object\n    DeleteCertificateObjectResponse:\n      additionalProperties: false\n      properties:\n        Response:\n          $ref: '#/components/schemas/DeleteCertificateObjectResponse.ResponseData'\n          description: 'The API call response.\n\n            '\n        ResponseStatus:\n          $ref: '#/components/schemas/DeleteCertificateObjectResponse.Result'\n          description: 'The API call response status.\n\n            '\n      title: DeleteCertificateObjectResponse\n      type: object\n    DeleteCertificateObjectResponse.CertificateDetails:\n      additionalProperties: false\n      properties:\n        AuditComment:\n          description: 'Audit remarks.\n\n            '\n          title: Auditcomment\n          type: string\n        CertificateSelfSigned:\n          description: 'A self-signed root CA certificate.\n\n            '\n          title: Certificateselfsigned\n          type: boolean\n        CertificateSignerArn:\n          description: 'Certificate signer ARN.\n\n            '\n          title: Certificatesignerarn\n          type: string\n        Description:\n          description: 'A description of certificate object.\n\n            '\n          title: Description\n          type: string\n        UpdateToken:\n          description: \"Refresh token.    \\n\"\n          title: Updatetoken\n          type: string\n      title: CertificateDetails\n      type: object\n    DeleteCertificateObjectResponse.ResponseData:\n      additionalProperties: false\n      properties:\n        CertificateObjectEntry:\n          $ref: '#/components/schemas/DeleteCertificateObjectResponse.CertificateDetails'\n          description: 'The certificate object entry.\n\n            '\n        Name:\n          description: \"Name of the certificate object entry.    \\n\"\n          title: Name\n          type: string\n        RuleStackName:\n          description: \"Name of the rulestack. \\n\"\n          title: Rulestackname\n          type: string\n      title: ResponseData\n      type: object\n    DeleteCertificateObjectResponse.Result:\n      additionalProperties: false\n      properties:\n        ErrorCode:\n          default: 0\n          description: \"Default value of a successful response is 0. Any other number\\\n            \\ indicates an error code.  \\n\\n400\\u2014HTTP bad request\\n* InvalidRequestException\\u2014\\\n            Operation failed due to invalid request. For example, unsupported parameter\\\n            \\ name or value in the request.\\n* LimitExceededException\\u2014Operation\\\n            \\ failed due to violation in limit settings.\\n* ResourceNotFoundException\\u2014\\\n            Unable to locate a resource using the parameters you provided.\\n* ThrottlingException\\u2014\\\n            Operation failed due to throttling limitations.\\n* AccessDeniedException\\u2014\\\n            You do not have sufficient access to perform this action.\\n\\n500\\u2014\\\n            Bad request \\n* InternalServerError\\u2014Your request is valid but Cloud\\\n            \\ NGFW could not perform the operation due to a system issue.\\n* InsufficientCapacityException\\u2014\\\n            AWS currently does not have enough capacity to fulfill your request.\\n\"\n          title: Errorcode\n          type: integer\n        Reason:\n          description: 'The error description.\n\n            '\n          title: Reason\n          type: string\n      title: Result\n      type: object\n    DescribeCertificateObjectResponse:\n      additionalProperties: false\n      properties:\n        Response:\n          $ref: '#/components/schemas/DescribeCertificateObjectResponse.ResponseData'\n          description: 'The API call response.\n\n            '\n        ResponseStatus:\n          $ref: '#/components/schemas/DescribeCertificateObjectResponse.Result'\n          description: 'The API call response status.\n\n            '\n      title: DescribeCertificateObjectResponse\n      type: object\n    DescribeCertificateObjectResponse.CertificateDetails:\n      additionalProperties: false\n      properties:\n        AuditComment:\n          description: 'Audit remarks.\n\n            '\n          title: Auditcomment\n          type: string\n        CertificateSelfSigned:\n          description: 'A self-signed root CA certificate.\n\n            '\n          title: Certificateselfsigned\n          type: boolean\n        CertificateSignerArn:\n          description: \"Certificate signer ARN. \\n\"\n          title: Certificatesignerarn\n          type: string\n        Description:\n          description: 'A description of certificate object.\n\n            '\n          title: Description\n          type: string\n        UpdateToken:\n          description: 'Refresh token.\n\n            '\n          title: Updatetoken\n          type: string\n      title: CertificateDetails\n      type: object\n    DescribeCertificateObjectResponse.ResponseData:\n      additionalProperties: false\n      properties:\n        CertificateObjectCandidate:\n          $ref: '#/components/schemas/DescribeCertificateObjectResponse.CertificateDetails'\n          description: 'The certificate object candidate.\n\n            '\n        CertificateObjectRunning:\n          $ref: '#/components/schemas/DescribeCertificateObjectResponse.CertificateDetails'\n          description: 'The certificate objects on run state.\n\n            '\n        Name:\n          description: \"Name of the certificate object entry.    \\n\"\n          title: Name\n          type: string\n        RuleStackName:\n          description: \"Name of the rulestack. \\n\"\n          title: Rulestackname\n          type: string\n      title: ResponseData\n      type: object\n    DescribeCertificateObjectResponse.Result:\n      additionalProperties: false\n      properties:\n        ErrorCode:\n          default: 0\n          description: \"Default value of a successful response is 0. Any other number\\\n            \\ indicates an error code.  \\n\\n400\\u2014HTTP bad request\\n* InvalidRequestException\\u2014\\\n            Operation failed due to invalid request. For example, unsupported parameter\\\n            \\ name or value in the request.\\n* LimitExceededException\\u2014Operation\\\n            \\ failed due to violation in limit settings.\\n* ThrottlingException\\u2014\\\n            Operation failed due to throttling limitations.\\n* AccessDeniedException\\u2014\\\n            You do not have sufficient access to perform this action.\\n\\n500\\u2014\\\n            Bad request \\n* InternalServerError\\u2014Your request is valid but Cloud\\\n            \\ NGFW could not perform the operation due to a system issue.\\n* InsufficientCapacityException\\u2014\\\n            AWS currently does not have enough capacity to fulfill your request.\\n\"\n          title: Errorcode\n          type: integer\n        Reason:\n          description: 'The error description.\n\n            '\n          title: Reason\n          type: string\n      title: Result\n      type: object\n    ListCertificateObjectResponse:\n      additionalProperties: false\n      properties:\n        Response:\n          $ref: '#/components/schemas/ListCertificateObjectResponse.ResponseData'\n          description: 'The API call response.\n\n            '\n        ResponseStatus:\n          $ref: '#/components/schemas/ListCertificateObjectResponse.Result'\n          description: 'The API call response status.\n\n            '\n      title: ListCertificateObjectResponse\n      type: object\n    ListCertificateObjectResponse.CertificateDetails:\n      additionalProperties: false\n      properties:\n        AuditComment:\n          description: 'Audit remarks.\n\n            '\n          title: Auditcomment\n          type: string\n        CertificateSelfSigned:\n          description: 'A self-signed root CA certificate.\n\n            '\n          title: Certificateselfsigned\n          type: boolean\n        CertificateSignerArn:\n          description: \"Certificate signer ARN. \\n\"\n          title: Certificatesignerarn\n          type: string\n        Description:\n          description: 'A description of certificate object.\n\n            '\n          title: Description\n          type: string\n        UpdateToken:\n          description: \"Refresh token. \\n\"\n          title: Updatetoken\n          type: string\n      title: CertificateDetails\n      type: object\n    ListCertificateObjectResponse.CertificateObjectDescribe:\n      additionalProperties: false\n      properties:\n        CertificateObject:\n          $ref: '#/components/schemas/ListCertificateObjectResponse.CertificateDetails'\n          description: 'The certificate object details.\n\n            '\n        Name:\n          description: 'Name of the certificate object.\n\n            '\n          title: Name\n          type: string\n      title: CertificateObjectDescribe\n      type: object\n    ListCertificateObjectResponse.ResponseData:\n      additionalProperties: false\n      properties:\n        CertificateObjectCandidate:\n          description: 'Certificate object candidate.\n\n            '\n          items:\n            type: string\n          title: Certificateobjectcandidate\n          type: array\n        CertificateObjectCandidateDescribe:\n          description: 'Details of the certificate object candidate.\n\n            '\n          items:\n            $ref: '#/components/schemas/ListCertificateObjectResponse.CertificateObjectDescribe'\n          title: Certificateobjectcandidatedescribe\n          type: array\n        CertificateObjectRunning:\n          description: 'Certificate objects on run state.\n\n            '\n          items:\n            type: string\n          title: Certificateobjectrunning\n          type: array\n        CertificateObjectRunningDescribe:\n          description: 'Details of the certificate object on run state.\n\n            '\n          items:\n            $ref: '#/components/schemas/ListCertificateObjectResponse.CertificateObjectDescribe'\n          title: Certificateobjectrunningdescribe\n          type: array\n        CertificateObjectUncommitted:\n          description: 'Uncommitted certificate objects.\n\n            '\n          items:\n            $ref: '#/components/schemas/ListCertificateObjectResponse.UncommittedCertificateObjectDetails'\n          title: Certificateobjectuncommitted\n          type: array\n        NextToken:\n          description: 'If the number of certificate objects available for retrieval\n            exceeds the maximum you requested, NGFW returns a NextToken value in response.\n            To retrieve the next batch of certificate objects, use this token in your\n            next request.\n\n            '\n          maxLength: 2048\n          minLength: 1\n          pattern: ^[-0-9A-Za-z:\\/+=]+$\n          title: Nexttoken\n          type: string\n        RuleStackName:\n          description: 'Name of the rulestack.\n\n            '\n          title: Rulestackname\n          type: string\n      title: ResponseData\n      type: object\n    ListCertificateObjectResponse.Result:\n      additionalProperties: false\n      properties:\n        ErrorCode:\n          default: 0\n          description: \"Default value of a successful response is 0. Any other number\\\n            \\ indicates an error code.  \\n\\n400\\u2014HTTP bad request\\n* InvalidRequestException\\u2014\\\n            Operation failed due to invalid request. For example, unsupported parameter\\\n            \\ name or value in the request.\\n* ResourceNotFoundException\\u2014Unable\\\n            \\ to locate a resource using the parameters you provided.\\n* ThrottlingException\\u2014\\\n            Operation failed due to throttling limitations.\\n\\n500\\u2014Bad request\\\n            \\ \\n* InternalServerError\\u2014Your request is valid but Cloud NGFW could\\\n            \\ not perform the operation due to a system issue.\\n\"\n          title: Errorcode\n          type: integer\n        Reason:\n          description: \"The error description. \\n\"\n          title: Reason\n          type: string\n      title: Result\n      type: object\n    ListCertificateObjectResponse.UncommittedCertificateObjectDetails:\n      additionalProperties: false\n      properties:\n        Name:\n          description: 'Name of the certificate object.\n\n            '\n          maxLength: 128\n          minLength: 1\n          pattern: ^[a-zA-Z0-9-]+$\n          title: Name\n          type: string\n        Operation:\n          description: 'Certificate object operation.\n\n            '\n          title: Operation\n          type: string\n      required:\n      - Name\n      - Operation\n      title: UncommittedCertificateObjectDetails\n      type: object\n    UpdateCertificateObjectRequest:\n      additionalProperties: false\n      properties:\n        AuditComment:\n          description: 'Audit remarks.\n\n            '\n          maxLength: 512\n          title: Auditcomment\n          type: string\n        CertificateSelfSigned:\n          default: false\n          description: 'A self-signed root CA certificate.\n\n            '\n          title: Certificateselfsigned\n          type: boolean\n        CertificateSignerArn:\n          description: \"Certificate Signer ARN \\n\"\n          title: Certificatesignerarn\n          type: string\n        Description:\n          description: 'A description of certificate object.\n\n            '\n          maxLength: 512\n          title: Description\n          type: string\n        UpdateToken:\n          description: 'Refresh token.\n\n            '\n          title: Updatetoken\n          type: string\n      title: UpdateCertificateObjectRequest\n      type: object\n    UpdateCertificateObjectResponse:\n      additionalProperties: false\n      properties:\n        Response:\n          $ref: '#/components/schemas/UpdateCertificateObjectResponse.ResponseData'\n          description: 'The API call response.\n\n            '\n        ResponseStatus:\n          $ref: '#/components/schemas/UpdateCertificateObjectResponse.Result'\n          description: 'The API call response status.\n\n            '\n      title: UpdateCertificateObjectResponse\n      type: object\n    UpdateCertificateObjectResponse.CertificateDetails:\n      additionalProperties: false\n      properties:\n        AuditComment:\n          description: 'Audit remarks.\n\n            '\n          title: Auditcomment\n          type: string\n        CertificateSelfSigned:\n          description: 'A self-signed root CA certificate.\n\n            '\n          title: Certificateselfsigned\n          type: boolean\n        CertificateSignerArn:\n          description: 'Certificate signer ARN.\n\n            '\n          title: Certificatesignerarn\n          type: string\n        Description:\n          description: 'A description of certificate object.\n\n            '\n          title: Description\n          type: string\n        UpdateToken:\n          description: \"Refresh token.    \\n\"\n          title: Updatetoken\n          type: string\n      title: CertificateDetails\n      type: object\n    UpdateCertificateObjectResponse.ResponseData:\n      additionalProperties: false\n      properties:\n        CertificateObjectEntry:\n          $ref: '#/components/schemas/UpdateCertificateObjectResponse.CertificateDetails'\n          description: 'The certificate object entry.\n\n            '\n        Name:\n          description: \"Name of the certificate object entry.    \\n\"\n          title: Name\n          type: string\n        RuleStackName:\n          description: \"Name of the rulestack. \\n\"\n          title: Rulestackname\n          type: string\n      title: ResponseData\n      type: object\n    UpdateCertificateObjectResponse.Result:\n      additionalProperties: false\n      properties:\n        ErrorCode:\n          default: 0\n          description: \"Default value of a successful response is 0. Any other number\\\n            \\ indicates an error code.  \\n\\n400\\u2014HTTP bad request\\n* InvalidRequestException\\u2014\\\n            Operation failed due to invalid request. For example, unsupported parameter\\\n            \\ name or value in the request.\\n* LimitExceededException\\u2014Operation\\\n            \\ failed due to violation in limit settings.\\n* ThrottlingException\\u2014\\\n            Operation failed due to throttling limitations.\\n* AccessDeniedException\\u2014\\\n            You do not have sufficient access to perform this action.\\n\\n500\\u2014\\\n            Bad request \\n* InternalServerError\\u2014Your request is valid but Cloud\\\n            \\ NGFW could not perform the operation due to a system issue.\\n* InsufficientCapacityException\\u2014\\\n            AWS currently does not have enough capacity to fulfill your request.\\n\"\n          title: Errorcode\n          type: integer\n        Reason:\n          description: 'The error description.\n\n            '\n          title: Reason\n          type: string\n      title: Result\n      type: object\ninfo:\n  contact: {}\n  description: \"Cloud NGFW uses certificates to access an intelligent feed and to\\\n    \\ enable outbound decryption. These certificates are stored in the [AWS Secrets\\\n    \\ Manager](https://docs.aws.amazon.com/secretsmanager/latest/userguide/intro.html).\\\n    \\ \\n\"\n  title: Manage Certificate Objects\n  version: 1.0.0\nopenapi: 3.0.3\npaths:\n  /v1/config/rulestacks/{rulestackname}/certificates:\n    get:\n      description: 'Returns the list of certificate objects associated with the specified\n        rulestack.\n\n        '\n      operationId: get-v1-config-rulestacks-rulestackname-certificates\n      parameters:\n      - description: 'The name of the rulestack.\n\n          '\n        in: path\n        name: rulestackname\n        required: true\n        schema:\n          type: string\n      - description: 'If the number of certificate objects available for retrieval\n          exceeds the maximum you requested, NGFW returns a NextToken value in response.\n          To retrieve the next batch of certificate objects, use this token in your\n          next request.\n\n          '\n        in: query\n        name: nexttoken\n        required: false\n        schema:\n          maxLength: 2048\n          minLength: 1\n          pattern: ^[-0-9A-Za-z:\\/+=]+$\n          title: Nexttoken\n          type: string\n      - description: 'Certificate object candidate.\n\n          '\n        in: query\n        name: candidate\n        required: false\n        schema:\n          default: true\n          title: Candidate\n          type: boolean\n      - description: 'Certificate objects in run state.\n\n          '\n        in: query\n        name: running\n        required: false\n        schema:\n          default: false\n          title: Running\n          type: boolean\n      - description: 'Uncommitted certificate objects.\n\n          '\n        in: query\n        name: uncommitted\n        required: false\n        schema:\n          default: false\n          title: Uncommitted\n          type: boolean\n      - description: 'Details of the certificate object.\n\n          '\n        in: query\n        name: describe\n        required: false\n        schema:\n          default: false\n          title: Describe\n          type: boolean\n      - description: 'Self-signed certificate.\n\n          '\n        in: query\n        name: selfsigned\n        required: false\n        schema:\n          title: Selfsigned\n          type: boolean\n      - description: 'The maximum number of certificate objects that you want NGFW\n          to return for this request.\n\n          '\n        in: query\n        name: maxresults\n        required: false\n        schema:\n          default: 1024\n          maximum: 1024\n          minimum: 1\n          title: Maxresults\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListCertificateObjectResponse'\n          description: OK\n      summary: List CertificateObjects\n      tags:\n      - ManageCertificateObjects\n    post:\n      description: 'Create a server certificate object for the specified rulestack.\n\n        '\n      operationId: post-v1-config-rulestacks-rulestackname-certificates\n      parameters:\n      - description: 'The name of the rulestack.\n\n          '\n        in: path\n        name: rulestackname\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateCertificateObjectRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateCertificateObjectResponse'\n          description: OK\n      summary: Create a CertificateObject\n      tags:\n      - ManageCertificateObjects\n  /v1/config/rulestacks/{rulestackname}/certificates/{name}:\n    delete:\n      description: 'Delete a certificate object associated with the specified rulestack.\n\n        '\n      operationId: delete-v1-config-rulestacks-rulestackname-certificates-name\n      parameters:\n      - description: 'The name of the rulestack.\n\n          '\n        in: path\n        name: rulestackname\n        required: true\n        schema:\n          type: string\n      - description: 'The name of the certificate.\n\n          '\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteCertificateObjectRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteCertificateObjectResponse'\n          description: OK\n      summary: Delete a CertificateObject\n      tags:\n      - ManageCertificateObjects\n    get:\n      description: \"Returns the certificate object metadata associated with the specified\\\n        \\ rulestack. \\n\"\n      operationId: get-v1-config-rulestacks-rulestackname-certificates-name\n      parameters:\n      - description: 'The name of the rulestack.\n\n          '\n        in: path\n        name: rulestackname\n        required: true\n        schema:\n          type: string\n      - description: 'The name of the certificate.\n\n          '\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      - description: 'If the number of certificate objects available for retrieval\n          exceeds the maximum you requested, Cloud NGFW returns a NextToken value\n          in response. To retrieve the next batch of certificate objects, use this\n          token in your next request.\n\n          '\n        in: query\n        name: nexttoken\n        required: false\n        schema:\n          maxLength: 2048\n          minLength: 1\n          pattern: ^[-0-9A-Za-z:\\/+=]+$\n          title: Nexttoken\n          type: string\n      - description: 'The maximum number of certificate objects that you want Cloud\n          NGFW to return for this request.\n\n          '\n        in: query\n        name: maxresults\n        required: false\n        schema:\n          default: 100\n          exclusiveMaximum: 101\n          exclusiveMinimum: 0\n          title: Maxresults\n          type: integer\n      - description: 'Rulestacks in run state.\n\n          '\n        in: query\n        name: running\n        required: false\n        schema:\n          default: false\n          title: Running\n          type: boolean\n      - description: 'Rulestack candidate.\n\n          '\n        in: query\n        name: candidate\n        required: false\n        schema:\n          default: true\n          title: Candidate\n          type: boolean\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeCertificateObjectResponse'\n          description: OK\n      summary: Describe a CertificateObject\n      tags:\n      - ManageCertificateObjects\n    put:\n      description: 'Update the certificate object associated with the specified rulestack.\n\n        '\n      operationId: put-v1-config-rulestacks-rulestackname-certificates-name\n      parameters:\n      - description: 'The name of the rulestack.\n\n          '\n        in: path\n        name: rulestackname\n        required: true\n        schema:\n          type: string\n      - description: 'The name of the certificate.\n\n          '\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateCertificateObjectRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateCertificateObjectResponse'\n          description: OK\n      summary: Update a CertificateObject\n      tags:\n      - ManageCertificateObjects\nservers:\n- url: https://api.us-east-1.aws.cloudngfw.paloaltonetworks.com\ntags:\n- name: ManageCertificateObjects\n",
			"canonicalURL": "/github.com/PaloAltoNetworks/pan.dev@3dde0e6dc06db0738da25c12387df8c8695eb954/-/blob/static/cloudngfw/aws/spec/api/ManageCertificateObjects.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/PaloAltoNetworks/pan.dev/blob/3dde0e6dc06db0738da25c12387df8c8695eb954/static/cloudngfw/aws/spec/api/ManageCertificateObjects.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 1: cannot unmarshal !!int `101` into bool; yaml: line 1: cannot unmarshal !!int `0` into bool"
}