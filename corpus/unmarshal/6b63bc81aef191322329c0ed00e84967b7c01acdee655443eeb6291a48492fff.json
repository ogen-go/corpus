{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/MEF-GIT/MEF-LSO-Sonata-SDK"
		},
		"file": {
			"name": "productOfferingQualificationManagement.api.yaml",
			"size": 0,
			"path": "generated/staticBinding/carrierEthernet/productOfferingQualificationManagement.api.yaml",
			"byteSize": 201715,
			"content": "openapi: 3.0.1\ninfo:\n  description: \u003e\n    **This file forms part of MEF 87**\n     \n    This API implements Business Requirements described in MEF 79\n\n\n    The Product Offering Qualification (POQ) Management API allows a Buyer to\n\n    check whether the Seller can deliver a product or set of products from\n\n    among their product offerings at the geographic address or a service site\n\n    specified by the Buyer; or modify a previously purchased product.\n\n\n    The following use cases are managed:\n\n    - Create Product Offering Qualification\n\n    - Retrieve POQ List\n\n    - Retrieve POQ by Identifier\n\n    - Register for POQ Notifications (note: Send POQ Notification is supported\n    by productOfferingQualificationNotification.api.yaml)\n\n\n    Copyright 2021 MEF Forum and its contributors\n\n\n    This file includes content based on the TM Forum Product Offering\n\n    Qualification API (TMF679 v4.0.0) available at\n\n    https://github.com/tmforum-apis/TMF679_ProductOfferingQualification, which\n\n    is licensed by the TM Forum under the Apache License version 2.0. Such\n\n    content has been modified by the MEF Forum and its contributors.\n  title: Product Offering Qualification Management\n  version: 7.0.1\nservers:\n  - url: 'https://{serverBase}/mefApi/sonata/productOfferingQualification/v7/'\n    variables:\n      serverBase:\n        default: mef.net\n        description: The base of Seller's URL.\ntags:\n  - description: Operations for managing the Product Offering Qualification request.\n    name: productOfferingQualification\n  - description: Operations for managing the subscription for events notification.\n    name: events subscription\npaths:\n  /hub:\n    post:\n      description: \u003e-\n        A request initiated by the Buyer to instruct the Seller to send\n        notifications of POQ create, POQ and/or POQ Item state changes if the\n        Buyer has registered for these notifications. The state change\n        notifications are sent only in the Deferred response scenario as in the\n        Immediate response scenario once the response to POQ Request is provided\n        (create notification), there  will be no further state changes. \n        Reference: MEF 79 (section 8.4.2).\n      operationId: registerListener\n      parameters:\n        - description: \u003e-\n            The unique identifier of the organization that is acting as the a\n            Buyer. MUST be specified in the request only when the requester\n            represents more than one Buyer.\n\n            Reference: MEF 79 (Sn 8.8)\n          explode: true\n          in: query\n          name: buyerId\n          required: false\n          schema:\n            type: string\n          style: form\n        - description: \u003e-\n            The unique identifier of the organization that is acting as the\n            Seller. MUST be specified in the request only when the responding\n            entity  represents more than one Seller.\n\n            Reference: MEF 79 (Sn 8.8)\n          explode: true\n          in: query\n          name: sellerId\n          required: false\n          schema:\n            type: string\n          style: form\n      requestBody:\n        content:\n          application/json;charset=utf-8:\n            schema:\n              $ref: '#/components/schemas/EventSubscriptionInput'\n        description: \u003e-\n          Data containing the callback endpoint to which to deliver the\n          information.\n        required: true\n      responses:\n        '201':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/EventSubscription'\n          description: 'Created. (https://tools.ietf.org/html/rfc7231#section-6.3.2)'\n        '400':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        '401':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        '403':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        '404':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error404'\n          description: Not Found\n        '500':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n        '501':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error501'\n          description: \u003e-\n            Method not implemented. Used in case Seller is not supporting\n            Notification mechanism\n      summary: Allows a Buyer to register to receive POQ state change notifications\n      tags:\n        - events subscription\n      x-codegen-request-body-name: data\n  '/hub/{id}':\n    delete:\n      description: |\n        This operation is used to delete an event subscription. \n        Reference: MEF 79 (Sn 8.3)\n      operationId: unregisterListener\n      parameters:\n        - description: Identifier of the EventSubscription\n          explode: false\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n          style: simple\n        - description: \u003e-\n            The unique identifier of the organization that is acting as the a\n            Buyer. MUST be specified in the request only when the requester\n            represents more than one Buyer.\n\n            Reference: MEF 79 (Sn 8.8)\n          explode: true\n          in: query\n          name: buyerId\n          required: false\n          schema:\n            type: string\n          style: form\n        - description: \u003e-\n            The unique identifier of the organization that is acting as the\n            Seller. MUST be specified in the request only when the responding\n            entity represents more than one Seller.\n\n            Reference: MEF 79 (Sn 8.8)\n          explode: true\n          in: query\n          name: sellerId\n          required: false\n          schema:\n            type: string\n          style: form\n      responses:\n        '204':\n          description: 'No Content. (https://tools.ietf.org/html/rfc7231#section-6.3.5)'\n        '400':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        '401':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        '403':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        '404':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error404'\n          description: Not Found\n        '500':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n        '501':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error501'\n          description: \u003e-\n            Method not implemented. Used in case Seller is not supporting\n            Notification mechanism\n      summary: Unregister a listener\n      tags:\n        - events subscription\n  /productOfferingQualification:\n    get:\n      description: \u003e-\n        The Buyer requests a list of POQs from the Seller based on a set of POQ\n        filter criteria (as described in MEF79). For each POQ returned, the\n        Seller also provides a POQ Identifier that uniquely identifies this POQ\n        within the Seller's system. The order of the elements returned to the\n        Buyer is defined by the Seller (e.g. natural order) and does not change\n        between the pages. If criteria for attribute X are provided, all\n        returned items must match it.\n      operationId: listProductOfferingQualification\n      parameters:\n        - description: \u003e-\n            State of the POQ to be retrieved. See `MEFPOQTaskStateType`\n            definition for details\n          explode: true\n          in: query\n          name: state\n          required: false\n          schema:\n            enum:\n              - acknowledged\n              - terminatedWithError\n              - inProgress\n              - done.unableToProvide\n              - done.ready\n            type: string\n          style: form\n        - description: \u003e-\n            ID given by the consumer and only understandable by him (to\n            facilitate his searches afterward)\n          explode: true\n          in: query\n          name: externalId\n          required: false\n          schema:\n            type: string\n          style: form\n        - description: Identifier of Buyer project associated with POQ\n          explode: true\n          in: query\n          name: projectId\n          required: false\n          schema:\n            type: string\n          style: form\n        - description: POQ expected response date is on or after this date\n          explode: true\n          in: query\n          name: requestedPOQCompletionDate.gt\n          required: false\n          schema:\n            format: date-time\n            type: string\n          style: form\n        - description: POQ expected response date is on or before this date\n          explode: true\n          in: query\n          name: requestedPOQCompletionDate.lt\n          required: false\n          schema:\n            format: date-time\n            type: string\n          style: form\n        - description: \u003e-\n            The unique identifier of the organization that is acting as the\n            Buyer\n          explode: true\n          in: query\n          name: buyerId\n          required: false\n          schema:\n            type: string\n          style: form\n        - description: \u003e-\n            The unique identifier of the organization that is acting as the\n            Seller\n          explode: true\n          in: query\n          name: sellerId\n          required: false\n          schema:\n            type: string\n          style: form\n        - description: \u003e-\n            Requested index for the start of POQ to be provided in response\n            requested by the client. Note that the index starts with \"0\".\n          explode: true\n          in: query\n          name: offset\n          required: false\n          schema:\n            format: int32\n            type: integer\n          style: form\n        - description: \u003e-\n            Requested number of POQ to be provided in response requested by\n            client\n          explode: true\n          in: query\n          name: limit\n          required: false\n          schema:\n            format: int32\n            type: integer\n          style: form\n      responses:\n        '200':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                items:\n                  $ref: '#/components/schemas/ProductOfferingQualification_Find'\n                type: array\n          description: 'OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)'\n          headers:\n            X-Pagination-Throttled:\n              description: \u003e\n                Used to indicate that result page was throttled to maximum\n                possible size  and there are additional results that can be\n                fetched\n              explode: false\n              schema:\n                type: boolean\n              style: simple\n            X-Total-Count:\n              description: \u003e\n                The total number of matching POQ. E.g. if there are 50 matching\n                items in total, but the request has offset=10 and limit=10, then\n                the X-Total-Count is 50.\n              explode: false\n              schema:\n                type: integer\n              style: simple\n            X-Result-Count:\n              description: The number of POQ included in the response\n              explode: false\n              schema:\n                type: integer\n              style: simple\n        '400':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        '401':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        '403':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        '500':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n      summary: \u003e-\n        Retrieve a list of ProductOfferingQualifications based on a set of\n        criteria\n      tags:\n        - productOfferingQualification\n    post:\n      description: \u003e-\n        A request initiated by the Buyer to determine whether the Seller is able\n        to deliver a product or set of products from among their product\n        offerings, at the Buyer's location(s); or modify a previously purchased\n        product. The Seller also provides estimated time intervals to complete\n        these deliveries. Reference: MEF 79 (Sn 8.4).\n      operationId: createProductOfferingQualification\n      parameters:\n        - description: \u003e-\n            The unique identifier of the organization that is acting as the a\n            Buyer. MUST be specified in the request only when the requester\n            represents more than one Buyer.\n\n            Reference: MEF 79 (Sn 8.8)\n          explode: true\n          in: query\n          name: buyerId\n          required: false\n          schema:\n            type: string\n          style: form\n        - description: \u003e-\n            The unique identifier of the organization that is acting as the\n            Seller. MUST be specified in the request only when the responding\n            entity represents more than one Seller.\n\n            Reference: MEF 79 (Sn 8.8)\n          explode: true\n          in: query\n          name: sellerId\n          required: false\n          schema:\n            type: string\n          style: form\n      requestBody:\n        content:\n          application/json;charset=utf-8:\n            schema:\n              $ref: '#/components/schemas/ProductOfferingQualification_Create'\n        description: \u003e-\n          POQ content provided by the Buyer. See definition's description for\n          details.\n        required: true\n      responses:\n        '201':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/ProductOfferingQualification'\n          description: 'Created. (https://tools.ietf.org/html/rfc7231#section-6.3.2)'\n        '400':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        '401':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        '403':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        '422':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Error422'\n                type: array\n          description: Unprocessable entity due to business validation problems\n        '500':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n      summary: Send a request to perform product offering qualification\n      tags:\n        - productOfferingQualification\n      x-codegen-request-body-name: productOfferingQualification\n  '/productOfferingQualification/{id}':\n    get:\n      description: \u003e-\n        The Buyer requests the full details of a single Product Offering\n        Qualification based on a POQ identifier returned from  the POQ create\n        (`createProductOfferingQualification`) or POQ find\n        (`listProductOfferingQualification`)\n      operationId: retrieveProductOfferingQualification\n      parameters:\n        - description: POQ identifier (matches `ProductOfferingQualification.id`)\n          explode: false\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n          style: simple\n        - description: \u003e-\n            The unique identifier of the organization that is acting as the a\n            Buyer. MUST be specified in the request only when the requester\n            represents more than one Buyer.\n\n            Reference: MEF 79 (Sn 8.8)\n          explode: true\n          in: query\n          name: buyerId\n          required: false\n          schema:\n            type: string\n          style: form\n        - description: \u003e-\n            The unique identifier of the organization that is acting as the\n            Seller. MUST be specified in the request only when the responding\n            entity represents more than one Seller.\n\n            Reference: MEF 79 (Sn 8.8)\n          explode: true\n          in: query\n          name: sellerId\n          required: false\n          schema:\n            type: string\n          style: form\n      responses:\n        '200':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/ProductOfferingQualification'\n          description: 'OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)'\n        '400':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        '401':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        '403':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        '404':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error404'\n          description: Not Found\n        '500':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n      summary: Retrieves a ProductOfferingQualification by ID\n      tags:\n        - productOfferingQualification\ncomponents:\n  schemas:\n    AccessEline:\n      allOf:\n        - $ref: '#/components/schemas/MEFProductConfiguration'\n        - $ref: '#/components/schemas/AccessElineOvcCommon'\n        - properties:\n            enniEp:\n              description: \u003e-\n                MEF 26.2 sec. 16 - The OVC EP object for the OVC EP at the ENNI.\n                The ENNI OVC End Point must be included in the Access E-Line\n                Product.\n              $ref: '#/components/schemas/AccessElineOvcEndPoint'\n            uniEp:\n              description: \u003e-\n                MEF 26.2 sec. 16 - The OVC EP object for the OVC EP at the UNI.\n                The UNI OVC End Point must be included in the Access E-Line\n                Product.\n              $ref: '#/components/schemas/AccessElineOvcEndPoint'\n          required:\n            - enniEp\n            - uniEp\n          type: object\n      x-discriminator-value: 'urn:mef:lso:spec:sonata:access-eline:v4.0.0:all'\n    AccessElineOvcCommon:\n      description: \u003e-\n        This class contains all of the Access E-Line OVC Services Attributes.\n        This class is used to compose the AccessElineOvc class.\n      properties:\n        ceVlanIdPreservation:\n          description: \u003e-\n            MEF 26.2 sec. 12.7 - Determines whether the C-tag in the Ingress\n            Frame is Stripped or Preserved in the Egress Frame. Per MEF 51.1,\n            the Operator must support PRESERVE and should support STRIP.\n          $ref: '#/components/schemas/CeVlanIdPreservation'\n        cTagPcpPreservation:\n          description: \u003e-\n            MEF 26.2 sec. 12.8 - If ENABLED, then the value of the C-tag PCP\n            field is preserved from Ingress to Egress. Per MEF 51.1, the\n            Operator must support ENABLED and should support DISABLED.\n          $ref: '#/components/schemas/EnabledDisabled'\n        cTagDeiPreservation:\n          description: \u003e-\n            MEF 26.2 sec. 12.9 - If ENABLED, then the value of the C-Tag DEI\n            field is preserved from Ingress to Egress. Per MEF 51.1, the\n            Operator must support ENABLED and should support DISABLED.\n          $ref: '#/components/schemas/EnabledDisabled'\n        ovcL2cpAddressSet:\n          description: \u003e-\n            MEF 45 sec. 8.1 and MEF 26.2 sec. 12.16 - The subset of the Bridge\n            Reserved Addresses that are Peered or Discarded (i.e. not Passed).\n            The value CTB or CTB2 must be used for port-based (private) services\n            and CTA for vlan-based (virtual private) services.\n          $ref: '#/components/schemas/L2cpAddressSet'\n        frameDisposition:\n          description: \u003e-\n            MEF 26.2 sec. 12.14 - A 3-tuple that indicates how Unicast,\n            Multicast, and Broadcast Frames are delivered by the service. For\n            each, the value can be UNCONDITIONAL, the frames are delivered\n            without condition, CONDITIONAL, the frames are delivered based on\n            conditions agreed to between Buyer and Seller (e.g., based on\n            learned addresses), and DISCARD. If CONDITIONAL is chosen for any of\n            the elements, the conditions must be agreed on by the Service\n            Provider and Operator by some other means.\n          $ref: '#/components/schemas/FrameDisposition'\n        listOfClassOfServiceNames:\n          description: \u003e-\n            MEF 26.2 sec. 12.12 - The OVC List of Class of Service Names Service\n            Attribute is used to specify all of the Class of Service Names\n            supported by an OVC. The value of the OVC List of Class of Service\n            Names Service Attribute is a non-empty list of Class of Service\n            Names (which may include one or more of the CoS Labels defined in\n            MEF 23.2).\n          items:\n            type: string\n          minItems: 1\n          type: array\n          uniqueItems: true\n        availableMegLevel:\n          description: \u003e-\n            MEF 26.2 sec. 12.15 - The lowest MEG level for which SOAM Frames are\n            not peered or discarded by the Service Provider. If this attribute\n            is NONE there is no such level (that is, SOAM frames at all MEG\n            levels may be peered or discarded by the Service Provider). MEF 51.1\n            constrains it to 0-6 for Access E-Line.\n          $ref: '#/components/schemas/AvailableMegList'\n        carrierEthernetSls:\n          description: \u003e-\n            MEF 26.2 sec. 12.13 - Technical details of the service level in\n            terms of Performance Objectives, agreed between the SP/SO and the\n            Operator as part of the Service Level Agreement. For each\n            Performance Metric included in the SLS, a Performance Objective must\n            be included as well as the parameter values needed for the\n            Performance Metric. If the value of this attribute is an empty list,\n            it is equivalent to a value of None per MEF 26.2.\n          items:\n            $ref: '#/components/schemas/CarrierEthernetSls'\n          maxItems: 1\n          minItems: 0\n          type: array\n          uniqueItems: true\n        maximumFrameSize:\n          description: \u003e-\n            MEF 26.2 sec. 12.6 - The max length in bytes allowed in a frame\n            mapped to an OVC EP associated by the OVC. The length of the frame\n            includes all bytes from the start of the destination MAC address\n            through the Frame Check Sequence. This must be at least 1526\n            (1518+C-tag+S-tag).\n          minimum: 1526\n          type: integer\n      type: object\n    AccessElineOvcEndPoint:\n      allOf:\n        - $ref: '#/components/schemas/AccessElineOvcEpCommon'\n      description: \u003e-\n        An OVC End Point is a logical entity at a given External Interface that\n        is associated with a distinct set of frames passing over that External\n        Interface. The OVC End Point schema is included in the definitions\n        section of the OVC schema.\n      type: object\n    AccessElineOvcEpCommon:\n      description: \u003e-\n        This class contains all of the Access E-Line OVC End Point Services\n        Attributes. This class is used to compose the AccessElineOvcEndPoint\n        class.\n      properties:\n        identifier:\n          description: \u003e-\n            MEF 26.2 sec. 16.1 - The value of the OVC EP ID Service Attribute is\n            a string that is used to allow the Subscriber and Service Provider\n            to uniquely identify the OVC EP for operations purposes.\n          maxLength: 45\n          minLength: 1\n          pattern: \"[ -\\x7F]+\"\n          type: string\n        egressEquivalenceClassIdentifier:\n          description: \u003e-\n            MEF 26.2 sec. 16.9 - The mechanism that allows an Egress Equivalence\n            Class Name to be determined for an egress EI Frame. ?F, M, P? where\n            F is a protocol field in the egress EI Frame, M is a map that maps\n            each possible value of the field F and the absence of the field F to\n            an Egress Equivalence Class Name and P is a map of L2CP type to\n            Egress Equivalence Class Name.\n          $ref: '#/components/schemas/CosFrom'\n        aggregationLinkDepth:\n          description: \u003e-\n            MEF 26.2 sec. 16.14 - A list of 2-tuples {SVID, Depth} that\n            indicates the number of ENNI links that can carry ENNI Frames for\n            each S-VLAN ID mapped to the OVC End Point. It indicates the level\n            of resiliency to use for the SVID at the ENNI.\n          items:\n            $ref: '#/components/schemas/AggLinkDepth'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        maintenanceIntermediatePoint:\n          description: \u003e-\n            MEF 26.2 sec. 16.16 - Indicates whether a MIP is instantiated at the\n            OVC End Point and the MEG Level of the MIP. When the value is not\n            None, several parameter values need to be determined as described in\n            MEF 30.1.\n          $ref: '#/components/schemas/MegList'\n        ovcEgressMap:\n          description: \u003e-\n            MEF 26.2 sec. 16.8 - A set of mappings that determine the content of\n            the S-Tag or C-Tag of an egress frame at an ENNI or UNI\n            (respectively) based on the Class of Service Name and Frame Color of\n            the frame. Three forms: (1) CoSName(CN) -\u003e C/S-Tag PCP or Discard,\n            (2) CoSName and Frame Color (CC)--\u003e C/S-Tag DEI or Discard, and (3)\n            CoSName and Frame Color (CC)--\u003e C/S-Tag PCP or Discard. A fourth\n            form is included which combines (1) and (2) because that is a common\n            case.\n          items:\n            $ref: '#/components/schemas/OvcEgressMap'\n          maxItems: 1\n          minItems: 0\n          type: array\n          uniqueItems: true\n        egressBandwidthProfilePerEndPoint:\n          description: \u003e-\n            MEF 26.2 sec. 16.11 - Bandwidth Profile Flow parameters for all\n            egress Service Frames mapped to the OVC End Point. If the value of\n            this attribute is an empty list, there is no Egress Bandwidth\n            Profile per OVC at the OVC End Point.\n          items:\n            $ref: '#/components/schemas/BwpFlow'\n          maxItems: 1\n          minItems: 0\n          type: array\n          uniqueItems: true\n        egressBwpPerEgressEquivalenceClassName:\n          description: \u003e-\n            MEF 26.2 sec. 16.13 - For each EEC Name listed, Bandwidth Profile\n            Flow parameters, for all egress Service Frames mapped to that EEC\n            Name at the OVC End Point. If the value of this attribute is an\n            empty list, there is no Egress Bandwidth Profile per EEC at the OVC\n            End Point.\n          items:\n            $ref: '#/components/schemas/BandwidthProfilePerClassOfServiceName'\n          minItems: 0\n          type: array\n          uniqueItems: false\n        ingressBandwidthProfilePerClassOfServiceName:\n          description: \u003e-\n            MEF 26.2 sec. 16.12 - For each CoS Name listed, Bandwidth Profile\n            Flow parameters for all ingress Service Frames mapped to that CoS\n            Name at OVC End Point. This bandwidth profile flow is used to police\n            at Ingress each CoS in an OVC individually. List of 2-tuples {cos,\n            bwpf}.\n          items:\n            $ref: '#/components/schemas/BandwidthProfilePerClassOfServiceName'\n          minItems: 1\n          type: array\n          uniqueItems: true\n        ovcEndPointEnvelopes:\n          description: \u003e-\n            The Envelopes and Envelope Coupling Flag values to which Bandwidth\n            Profile Flows for this OVC End Point can be mapped. Value is list of\n            {envelopeID, couplingFlagForIndexZero}. Envelopes listed in the OVC\n            End Point Envelopes Service Attribute can be used when all of the\n            Bandwidth Profile Flows contained in the Envelope are specific to a\n            given OVC End Point. They are specified using one of the following\n            OVC End Point Service Attributes: Ingress Bandwidth Profile Per OVC\n            End Point Egress Bandwidth Profile Per OVC End Point Ingress\n            Bandwidth Profile Per Class of Service Name Egress Bandwidth Profile\n            Per Egress Equivalence Class Name  To create an Envelope containing\n            Bandwidth Profile Flows for more than one OVC End Point, the UNI or\n            ENNI Envelopes Service Attribute (as appropriate) must be used.\n          items:\n            $ref: '#/components/schemas/Envelope'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        ovcEndPointMap:\n          description: \u003e-\n            MEF 26.2 sec. 16.5 - The information that determines which UNI/ENNI\n            Frames are mapped to the OVC End Point. At the UNI and ENNI, the\n            only allowable mapping is a LIST of VLAN IDs (CE-VLAN IDs at the UNI\n            and S-VLAN IDs at the ENNI).\n          $ref: '#/components/schemas/EndPointMapForm'\n        colorMap:\n          description: \u003e-\n            MEF 26.2 sec. 16.7 - The OVC EP Color Map Service Attribute is the\n            mechanism by which the Color for an Ingress External Interface Frame\n            that is mapped to an OVC EP is indicated by the content in the frame\n            header. The value of the OVC EP Color Map Service Attribute is a\n            pair of the form ?F, M? where: F is one of the values ENDPOINT, DEI,\n            PCP, or DSCP and M is a map that can be used to assign Color to each\n            Ingress Frame. (The form of M depends on the value of F.)\n          $ref: '#/components/schemas/ColorFrom'\n        ovcEndPointPortConversationToAggregationLinkMap:\n          description: \u003e-\n            MEF 26.2 sec. 13.2 - A mapping of Port Conversation IDs (i.e., VLAN\n            IDs) to an ordered list of physical links if\n            EnniService.sVlanIdControl is FULL and there are multiple physical\n            links in the ENNI and EnniCommon.linkAggregation is ALL_ACTIVE. Only\n            S-VLAN IDs that are listed in the\n            AccessElineOvcEndPoint.ovcEndPointMap can be listed in this\n            attribute.   If EnniService.sVlanIdControl is PARTIAL then the\n            Service Provider does not have full visibility of all the S-VLAN IDs\n            mapped to each physical link, and hence cannot pick values that\n            avoid overloading certain links. In this case, the ENNI Port\n            Conversation to Aggregation Link Map Common Attribute must be agreed\n            between the relevant Operators.\n          items:\n            $ref: '#/components/schemas/ConversationIdToAggregationLinkMap'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        ingressClassOfServiceMap:\n          description: \u003e-\n            MEF 26.2 sec. 16.6 - The value of the OVC EP Ingress Class of\n            Service Map Service Attribute is a 3-tuple of the form ?F, M, P?\n            where: F is one of the values ENDPOINT, C_TAG_PCP, S_TAG_PCP, or\n            DSCP, M is a map that can be used to assign Class of Service Names\n            to External Interface Frames. (The form of M depends on the value of\n            F.), and P is a map with entries of the form ?Layer 2 Control\n            Protocol type ? Class of Service Name? where the Layer 2 Control\n            Protocol type is determined by the Protocol Identifier (see Section\n            6.2 of MEF 45.1).\n          $ref: '#/components/schemas/CosFrom'\n        sourceMacAddressLimit:\n          description: \u003e-\n            MEF 26.2 sec. 16.15 - Specifies a limit on the number of different\n            Source MAC address over a time interval for which ingress Service\n            Frames at this OVC End Point will be delivered. An empty list\n            corresponds to a Service Attribute value of None. The value is {N,t}\n            where N is an integer greater than or equal to 1 and t is a time\n            duration.\n          items:\n            $ref: '#/components/schemas/SourceMacAddressLimit'\n          maxItems: 1\n          minItems: 0\n          type: array\n          uniqueItems: true\n        maintenanceEndPointList:\n          description: \u003e-\n            MEF 26.2 sec. 16.17 - A list of the MEPs instantiated at this OVC\n            EP, if any, and the direction of each MEP, List of 2-tuples ?l, d?\n            where l is MEG level and d is direction (Up/Down).\n          items:\n            $ref: '#/components/schemas/MepLevelAndDirection'\n          maxItems: 16\n          minItems: 0\n          type: array\n          uniqueItems: true\n      type: object\n    AggLinkDepth:\n      description: \u003e-\n        For an Operator Service, this is a pair of \u003cVLAN ID, link depth\u003e\n        indicating that a given VLAN ID maps to a given number of links in the\n        Port Conversation ID to Aggregation Link Map.\n      properties:\n        vlanID:\n          description: The VLAN ID\n          maximum: 4094\n          minimum: 1\n          type: integer\n        lagDepth:\n          description: The number of Link Aggregation links available to the VLAN\n          minimum: 1\n          type: integer\n      type: object\n    AlternateProductOfferingProposal:\n      description: \u003e\n        If in the request the Buyer has requested to have alternate product\n        proposals, then this class represents a single proposal. All properties\n        are assigned by the Seller.\n\n        Reference: MEF 79 (Sn 8.4.3.2)\n      properties:\n        installationInterval:\n          $ref: '#/components/schemas/Duration'\n        id:\n          description: \u003e\n            Identifier of the Product Offering Qualification alternate proposal.\n            Assigned by the Seller.\n          type: string\n        alternateProduct:\n          $ref: '#/components/schemas/MEFAlternateProduct'\n      required:\n        - alternateProduct\n        - id\n        - installationInterval\n      type: object\n    AvailableMegList:\n      enum:\n        - '0'\n        - '1'\n        - '2'\n        - '3'\n        - '4'\n        - '5'\n        - '6'\n      type: string\n    BandwidthProfilePerClassOfServiceName:\n      description: \u003e-\n        The value is a list of pairs of the form ?x, y? For ingress, x is a\n        Class of Service Name that is in the value of the EVC/OVC List of Class\n        of Service Names Service Attribute (MEF 10.4 sec. 8.7 and MEF 26.2 sec.\n        12.12) for the EVC/OVC that associates the EVC/OVC End Point. For\n        egress, x is a Class of Service from the EVC List of Class of Service\n        Names Service Attribute or an Egress Equivalence Class Name (for OVC).\n        If specified, y is a reference to a Bandwidth Profile Flow and Disabled\n        otherwise. There is at most one pair in the list for each CoS or EEC\n        Name (Except Discard).\n         For EVCs it is used by the EVC EP Class of Service Name Ingress\n        Bandwidth Profile Service Attribute (MEF 10.4 sec. 10.9). and EVC EP\n        Class of Service Name Egress Bandwidth Profile Service Attribute (MEF\n        10.4 sec. 10.11). For OVCs it is used by the Ingress Bandwidth Profile\n        per Class of Service Name (MEF 26.2 sec. 16.12) Egress Bandwidth Profile\n        per Egress Equivalence Class Name (MEF 26.2 sec. 16.13).\n      properties:\n        bwpFlow:\n          description: \u003e-\n            The Bandwidth Profile to be applied to all items that are in the\n            specified Class of Service or Egress Equivalence Class.\n          $ref: '#/components/schemas/BwpFlow'\n        classOfServiceName:\n          description: \u003e-\n            MEF 26.2 sec. 16.12 and 16.13 - For Ingress, this is the Name of the\n            Class of Service that this bandwidth profile flow is applied to.\n            This should be an item from ovc.listOfClassOfServiceNames. For\n            Egress, this is the Class of Service for EVCs and the Egress\n            Equivalence Class (EEC) Name for OVCs. If the specific Class of\n            Service/ Egress Equivalence Class is not used/configured that the\n            End Point, the Bandwidth Profile can be an empty list.\n          type: string\n      type: object\n    BwpFlow:\n      description: \u003e-\n        The Bandwidth Profile Flow, BwpFlow, object class represents the\n        Bandwidth Profile Flow which includes the bandwidth profile parameter\n        CIR, CIRmax, CBS, EIR, EIRmax, EBS, Coupling Flag, Color Mode, Envelope\n        and Rank, and Token Request Offset. The BwpFlow is used with Service\n        Attributes for CarrierEthernetOperatorUni, CarrierEthernetSubscriberUni,\n        CarrierEthernetVuni,, and ENNI as well as OVC and EVC End Points.\n        Reference MEF 10.4 Section 12 and MEF 26.2 Section 17.\n      properties:\n        eirMax:\n          description: \u003e-\n            MEF 26.2 sec. 17.1.2 and MEF 10.4 sec. 12.1.2 - eirMax represents\n            Maximum Excess Information Rate. It limits the average rate in bits\n            per second at which External Interface Frames for this Bandwidth\n            Profile Flow can be declared Yellow (regardless of unused excess\n            bandwidth from higher-ranked Bandwidth Profile Flows or unused\n            committed bandwidth).\n          $ref: '#/components/schemas/InformationRate'\n        envelopeRank:\n          description: \u003e-\n            MEF 26.2 sec. 17.1.2 and MEF 10.4 sec. 12.1.2 - The rank in the\n            envelope of this Bandwidth Profile Flow\n          minimum: 1\n          type: integer\n        cirMax:\n          description: \u003e-\n            MEF 26.2 sec. 17.1.2 and MEF 10.4 sec. 12.1.2 - cirMax represents\n            Maximum Committed Information Rate. It limits the average rate in\n            bits per second at which External Interface Frames for this\n            Bandwidth Profile Flow can be declared Green (regardless of unused\n            committed bandwidth from higher-ranked Bandwidth Profile Flows).\n          $ref: '#/components/schemas/InformationRate'\n        cbs:\n          description: \u003e-\n            MEF 26.2 sec. 17.1.2 and MEF 10.4 sec. 12.1.2 - cbs represents\n            Committed Burst Size. Limits by how much, and for how long, the\n            amount of traffic declared Green for this Bandwidth Profile Flow in\n            the short term can exceed the committed bandwidth made available to\n            this Bandwidth Profile Flow over the long term, in bytes.\n          $ref: '#/components/schemas/DataSize'\n        couplingFlag:\n          description: \u003e-\n            MEF 26.2 sec. 17.1.2 and MEF 10.4 sec. 12.1.2 - The couplingFlag\n            determines whether unused committed bandwidth for this Bandwidth\n            Profile Flow is made available as excess bandwidth for this\n            Bandwidth Profile Flow or as committed bandwidth for the next\n            lower-ranked Bandwidth Profile Flow. 0/FALSE means overflow green\n            tokens are used as green tokens in the next lowest BWP Flow in the\n            Envelope. 1/TRUE means they are used as yellow tokens for this BWP\n            Flow.\n          type: boolean\n        envelopeId:\n          description: \u003e-\n            MEF 26.2 sec. 17.1.2 and MEF 10.4 sec. 12.1.2 - The name of the\n            envelope that this Bandwidth Profile Flow resides in.\n          maxLength: 45\n          minLength: 1\n          pattern: \"[ -\\x7F]+\"\n          type: string\n        tokenRequestOffset:\n          description: \u003e-\n            MEF 26.2 sec. 17.1.2 and MEF 10.4 sec. 12.1.2 - tokenRequestOffset\n            adjusts the bandwidth consumed by each External Interface Frame in\n            the Bandwidth Profile Flow by a fixed number of octets.\n          type: integer\n        ebs:\n          description: \u003e-\n            MEF 26.2 sec. 17.1.2 and MEF 10.4 sec. 12.1.2 - ebs represents\n            Excess Burst Size. It limits by how much, and for how long, the\n            amount of traffic declared Yellow for this Bandwidth Profile Flow in\n            the short term can exceed the excess bandwidth made available to\n            this Bandwidth Profile Flow over the long term.\n          $ref: '#/components/schemas/DataSize'\n        colorMode:\n          description: \u003e-\n            MEF 26.2 sec. 17.1.2 and MEF 10.4 sec. 12.1.2 - colorMode indicates\n            whether or not External Interface Frames for this Bandwidth Profile\n            Flow that are identified as Yellow on input to the Bandwidth Profile\n            Algorithm can be declared Green.\n          $ref: '#/components/schemas/ColorMode'\n        cir:\n          description: \u003e-\n            MEF 26.2 sec. 17.1.2 and MEF 10.4 sec. 12.1.2 - cir represents\n            Committed Information Rate. When added to unused committed bandwidth\n            provided from higher-ranked Bandwidth Profile Flows (depending on\n            the value of couplingFlag for the higher-ranked Bandwidth Profile\n            Flows), limits the average rate in bits per second at which External\n            Interface Frames for this Bandwidth Profile Flow can be declared\n            Green.\n          $ref: '#/components/schemas/InformationRate'\n        eir:\n          description: \u003e-\n            MEF 26.2 sec. 17.1.2 and MEF 10.4 sec. 12.1.2 - eir represents\n            Excess Information Rate. When added to unused excess bandwidth from\n            higher-ranked Bandwidth Profile Flows, and to un-used committed\n            bandwidth (depending on the value of couplingFlag for this Bandwidth\n            Profile Flow and couplingFlagForIndexZero for the Envelope), limits\n            the average rate in bits per second at which External Interface\n            Frames for this Bandwidth Profile Flow can be declared Yellow.\n          $ref: '#/components/schemas/InformationRate'\n      type: object\n    CarrierEthernetEvcCommon:\n      description: \u003e-\n        These are the MEF 10.4 EVC Service Attributes that are common to all\n        Subscriber (EVC-based) Ethernet Services defined in MEF 6.3.\n      properties:\n        listOfCosNames:\n          description: \u003e-\n            MEF 10.4 sec. 8.7 - The EVC List of Class of Service Names Service\n            Attribute is used to specify all of the Class of Service Names\n            supported by an EVC. The value of the EVC List of Class of Service\n            Names Service Attribute is a non-empty list of Class of Service\n            Names (which may include one or more of the CoS Labels defined in\n            MEF 23.2).\n          items:\n            type: string\n          minItems: 1\n          type: array\n          uniqueItems: true\n        availableMegLevel:\n          description: \u003e-\n            MEF 10.4 sec. 8.11 - The lowest MEG level for which SOAM Frames are\n            not peered or discarded by the Service Provider. If this attribute\n            is NONE  there is no such level (that is, SOAM frames at all MEG\n            levels may be peered or discarded by the Service Provider). For all\n            Subscriber Ethernet Services defined in MEF 6.3 the value is\n            constrained to the range 0...6.\n          $ref: '#/components/schemas/AvailableMegList'\n        carrierEthernetSls:\n          description: \u003e-\n            MEF 10.4 sec. 8.8 - The SLS includes technical details of the\n            service level in terms of Performance Objectives, agreed between the\n            Service Provider and the Subscriber or between Service Provider and\n            the Operator as part of the Service Level Agreement. A given SLS\n            might contain 0,1 or more Performance Objectives for each\n            Performance Metric. If the value of this attribute is an empty list,\n            it is equivalent to a value of None per MEF 10.4.\n          items:\n            $ref: '#/components/schemas/CarrierEthernetSls'\n          maxItems: 1\n          minItems: 0\n          type: array\n          uniqueItems: true\n        maximumFrameSize:\n          description: \u003e-\n            MEF 10.4 sec. 8.10 - Maximum size of Service frames that can be\n            carried over the EVC. This must be at least 1522 (1518+C-tag).\n          minimum: 1522\n          type: integer\n      type: object\n    CarrierEthernetEvcEpCommon:\n      description: \u003e-\n        This set of EVC End Point Service Attributes are applicable to all\n        Subscriber (EVC-based) Ethernet Services defined in MEF 6.3 based on the\n        Service Attributes in MEF 10.4.\n      properties:\n        identifier:\n          description: \u003e-\n            MEF 10.4 sec. 10.1 - The value of the EVC EP ID Service Attribute is\n            a string that is used to allow the Subscriber and Service Provider\n            to uniquely identify the EVC EP for operations purposes.\n          maxLength: 45\n          minLength: 1\n          pattern: \"[ -\\x7F]+\"\n          type: string\n        subscriberMegMip:\n          description: \u003e-\n            MEF 10.4 sec. 10.13 - The value of the EVC EP Subscriber MEG MIP\n            Service Attribute is either None or an integer in the range 0 � 7\n            that indicates the MEG Level of a Subscriber MEG MIP.\n          $ref: '#/components/schemas/MegList'\n        egressMap:\n          description: \u003e-\n            MEF 10.4 sec. 10.7 - The value of the EVC EP Egress Map Service\n            Attribute is None or a map of the form {Corresponding Ingress\n            Service Frame Class of Service Name, Corresponding Ingress Service\n            Frame Color} to {Egress Service Frame C-Tag PCP value, Egress\n            Service Frame C-Tag DEI value} or Discard. If this property is an\n            empty list, the value is assumed to have the value None.\n          items:\n            $ref: '#/components/schemas/EvcEgressMap'\n          maxItems: 1\n          minItems: 0\n          type: array\n          uniqueItems: true\n        colorMap:\n          description: \u003e-\n            MEF 10.4 sec. 10.6 - The value of the EVC EP Color Map Service\n            Attribute is a pair of the form ?F, M? where: F is one of the values\n            ENDPOINT, DEI, PCP, or DSCP and M is a map that can be used to\n            assign Color to each Ingress Service Frame. (The form of M depends\n            on the value of F.). The EVC EP Color Map Service Attribute is the\n            mechanism by which the Color for an Ingress Service Frame that is\n            mapped to an EVC EP is indicated by the content in the Service Frame\n            header.\n          $ref: '#/components/schemas/ColorFrom'\n        ingressClassOfServiceMap:\n          description: \u003e-\n            MEF 10.4 sec. 10.5 and MEF 45.1 sec. 6.2 - The value of the EVC EP\n            Ingress Class of Service Map Service Attribute is a 3-tuple of the\n            form ?F, M, P? where: F is one of the values ENDPOINT, C_TAG_PCP, or\n            DSCP, M is a map that can be used to assign Class of Service Names\n            to Service Frames. (The form of M depends on the value of F.), and P\n            is a map with entries of the form ?Layer 2 Control Protocol type ?\n            Class of Service Name? where the Layer 2 Control Protocol type is\n            determined by the Protocol Identifier (see Section 6.2 of MEF 45.1).\n          $ref: '#/components/schemas/CosFrom'\n        ingressBandwidthProfilePerClassofServiceName:\n          description: \u003e-\n            MEF 10.4 sec. 10.9 - The EVC EP Class of Service Name Ingress\n            Bandwidth Profile Service Attribute is used to limit the rate of\n            Ingress Service Frames with a given Class of Service Name at a UNI.\n            The value is None or a non-empty list of pairs of the form ?x,y?,\n            where x is a Class of Service Name that is in the value of the EVC\n            List of Class of Service Names Service Attribute and y = BWP Flow\n            Parameters. If this property is an empty list, the value is assumed\n            to have the value None.\n          items:\n            $ref: '#/components/schemas/BandwidthProfilePerClassOfServiceName'\n          minItems: 0\n          type: array\n          uniqueItems: true\n      type: object\n    CarrierEthernetEvcEpEline:\n      properties:\n        identifier:\n          description: \u003e-\n            MEF 10.4 sec. 10.1 - The value of the EVC EP ID Service Attribute is\n            a string that is used to allow the Subscriber and Service Provider\n            to uniquely identify the EVC EP for operations purposes.\n          maxLength: 45\n          minLength: 1\n          pattern: \"[ -\\x7F]+\"\n          type: string\n      type: object\n    CarrierEthernetEvcEpNotEpl:\n      description: \u003e-\n        This set of EVC End Point Service Attributes are applicable to all\n        Subscriber (EVC-based) Ethernet Services defined in MEF 6.3 based on the\n        Service Attributes in MEF 10.4 - except EPL.\n      properties:\n        sourceAddressMacLimit:\n          description: \u003e-\n            MEF 10.4 sec. 10.12 - The value of the EVC EP Source MAC Address\n            Limit Service Attribute is either None or the pair ?N, t ? where N\n            is an integer ?1 and t is a time duration. When the value of the EVC\n            EP Source MAC Address Limit Service Attribute = ?N, t? the number of\n            source MAC Addresses that can be used in Ingress Service Frames is\n            limited. If this property is not present or an empty list, the value\n            is assumed to have the value None.\n          items:\n            $ref: '#/components/schemas/SourceMacAddressLimit'\n          maxItems: 1\n          minItems: 0\n          type: array\n          uniqueItems: true\n        egressBandwidthProfilePerClassofServiceName:\n          description: \u003e-\n            MEF 10.4 sec. 10.11 - The EVC EP Class of Service Name Egress\n            Bandwidth Profile Service Attribute is used to limit the rate of all\n            Egress Service Frames with a given Class of Service Name, as\n            determined at the ingress UNI for each frame per the EVC EP Ingress\n            Class of Service Map Service Attribute (MEF 10.4 Section 10.5). The\n            value of the EVC EP Class of Service Name Egress Bandwidth Profile\n            Service Attribute is either None or a non-empty list of pairs of the\n            form ?x, y? where x is a Class of Service Name contained in the\n            value of the EVC List of Class of Service Names Service Attribute\n            (MEF 10.4 Section 8.7) but not equal to Discard and y= the 3-tuple\n            ?CIR, CIRmax, ER? where the elements of the 3-tuple are defined in\n            MEF 10.4 Section 12.1.2. If this property is an empty list, the\n            value is assumed to have the value None.\n          items:\n            $ref: '#/components/schemas/BandwidthProfilePerClassOfServiceName'\n          maxItems: 1\n          minItems: 0\n          type: array\n          uniqueItems: true\n      type: object\n    CarrierEthernetEvcEpVirtualPrivate:\n      properties:\n        evcEndPointMap:\n          description: \u003e-\n            MEF 10.4 sec. 10.4 - The EVC EP Map Service Attribute is used to map\n            Service Frames to the EVC EP. The value of the EVC EP Map Service\n            Attribute (in MEF 10.4) is one of ALL, LIST, or UT/PT. This\n            attribute is only available for Virtual Private services since\n            Private services always require All. For Virtual Private Services it\n            can be UT/PT (Untagged/Priority Tagged) or LIST. When the value of\n            the EVC EP Map Service Attribute = List, a non-empty list of unique\n            integers, each in the range 1,2,�,4094 is specified.\n          $ref: '#/components/schemas/EvcEndPointMap'\n        evcEndPointEnvelopes:\n          description: \u003e-\n            The Envelopes and Envelope Coupling Flag values to which Bandwidth\n            Profile Flows for this EVC End Point can be mapped. Value is list of\n            {envelopeID, couplingFlagForIndexZero}. Envelopes listed in the EVC\n            End Point Envelopes Service Attribute can be used when all of the\n            Bandwidth Profile Flows contained in the Envelope are specific to a\n            given OVC End Point. They are specified using one of the following\n            EVC End Point Service Attributes: Ingress Bandwidth Profile Per EVC\n            End Point Egress Bandwidth Profile Per EVC End Point Ingress\n            Bandwidth Profile Per Class of Service Name Egress Bandwidth Profile\n            Per Egress Equivalence Class Name  To create an Envelope containing\n            Bandwidth Profile Flows for more than one EVC End Point, the UNI\n            Envelopes Service Attribute must be used.\n          items:\n            $ref: '#/components/schemas/Envelope'\n          minItems: 0\n          type: array\n          uniqueItems: true\n      type: object\n    CarrierEthernetEvcNotEpl:\n      description: \u003e-\n        These are the MEF 10.4 EVC Service Attributes that are common to all\n        Subscriber (EVC-based) Ethernet Services defined in MEF 6.3 based on the\n        Service Attributes in MEF 10.4 - except EPL.\n      properties:\n        frameDisposition:\n          description: \u003e-\n            MEF 10.4 sec. 8.4 - A 3-tuple that indicates how Unicast, Multicast,\n            and Broadcast Frames are delivered by the service. For each, the\n            value can be UNCONDITIONAL, the frames are delivered without\n            condition, CONDITIONAL, the frames are delivered based on conditions\n            agreed to between Buyer and Seller (e.g., based on learned\n            addresses), and DISCARD. If CONDITIONAL is chosen for any of the\n            elements, the conditions must be agreed on by the Service Provider\n            and Subscriber by some other means.\n          $ref: '#/components/schemas/FrameDisposition'\n      type: object\n    CarrierEthernetOperatorUni:\n      allOf:\n        - $ref: '#/components/schemas/MEFProductConfiguration'\n        - $ref: '#/components/schemas/OperatorUniCommon'\n      x-discriminator-value: 'urn:mef:lso:spec:sonata:carrier-ethernet-operator-uni:v4.0.0:all'\n    CarrierEthernetPhysicalLink:\n      description: \u003e-\n        A 2-tuple of the form ?id, physicalLink?. The value of id is an\n        identifier for the physical link. The value of physicalLink is the\n        specific Ethernet physical layer type.\n      properties:\n        physicalLink:\n          description: An Ethernet physical layer\n          $ref: '#/components/schemas/PhysicalLink'\n        autoNegotiation:\n          description: \u003e-\n            IEEE Std 802.3-2018 Clause 28 and 37 - Indicates whether 802.3\n            autonegotiation is enabled on the UNI link.\n          $ref: '#/components/schemas/EnabledDisabled'\n        id:\n          description: An identifier for the physical link.\n          maxLength: 45\n          minLength: 1\n          pattern: \"[ -\\x7F]+\"\n          type: string\n      type: object\n    CarrierEthernetSls:\n      description: \u003e-\n        The Service Level Specification Service Attribute (SLS) is, as part of\n        the Service Level Agreement, the technical details of the service level,\n        in terms of Performance Objectives, agreed between the Service Provider\n        and the Subscriber for Subscriber Ethernet Services and between the\n        SP/SO and Operator for Operator Ethernet Services. . A given SLS might\n        contain 0, 1, or more Performance Objectives for each Performance\n        Metric. The SLS is described in section 8.8 (EVC Service Level\n        Specification Service Attribute) of MEF 10.4 for EVCs and section 12.13\n        (OVC Service Level Specification Service Attribute) for OVCs. MEF 10.4\n        defines 10 Performance Metrics (all of which are included here). MEF\n        26.2 defines only 9 Performance Metrics. MEF 26.2 does not include the\n        One Way Composite PM. The other 9 are the same.\n      properties:\n        slsCosNameEntry:\n          description: \u003e-\n            MEF 10.4 sec. 8.8 and MEF 26.2 sec. 12.13 - This is a list of\n            Performance Metrics. Each entry contains a set of parameters and\n            Performance Metrics for one Class of Service.\n          items:\n            $ref: '#/components/schemas/SlsCosNameEntry'\n          minItems: 1\n          type: array\n          uniqueItems: true\n        startTime:\n          description: \u003e-\n            MEF 10.4 sec. 8.8 and MEF 26.2 sec. 12.13 - This represents the date\n            and time for the start of the SLS. It is the beginning of the first\n            timeInterval. This is referred to as ts in MEF 10.4 and MEF 26.2.\n            The value is a string in ISO 8601 format.\n          format: date-time\n          type: string\n        timeDuration:\n          description: \u003e-\n            MEF 10.4 sec. 8.8 and MEF 26.2 sec. 12.13 - The timeDuration\n            (referred to as T in MEF 10.4 and 26.2) is a time duration, e.g., 1\n            month, 2 weeks, that is used in conjunction with startTime to\n            specify time intervals for determining when Performance Objectives\n            are met. Note that the units for timeDuration are not constrained;\n            in particular, 1 month is an allowable value, corresponding to a\n            calendar month, e.g. from midnight on the 10th of one month up to\n            but not including midnight the 10th of the following month.\n          $ref: '#/components/schemas/TimeDuration'\n      type: object\n    CarrierEthernetSubscriberUni:\n      allOf:\n        - $ref: '#/components/schemas/MEFProductConfiguration'\n        - $ref: '#/components/schemas/SubscriberUniCommon'\n      x-discriminator-value: \u003e-\n        urn:mef:lso:spec:cantata-sonata:carrier-ethernet-subscriber-uni:v0.3.0:all\n    CarrierEthernetVpEvcCommon:\n      description: \u003e-\n        These are the MEF 10.4 EVC Service Attributes that are common to all\n        Virtual Private Subscriber (EVC-based) Ethernet Services (EVPL, EVP-LAN,\n        EVP_TREE) defined in MEF 6.3.\n      properties:\n        cTagPcpPreservation:\n          description: \u003e-\n            MEF 10.4 sec. 8.5 - The EVC C-Tag PCP Preservation Service Attribute\n            can be used to preserve the value of the PCP field in C-Tagged\n            Service Frames across an EVC. The value of the EVC C-Tag PCP\n            Preservation Service Attribute is either Enabled or Disabled.\n          $ref: '#/components/schemas/EnabledDisabled'\n        cTagDeiPreservation:\n          description: \u003e-\n            MEF 10.4 sec. 8.6 - If ENABLED, then the value of the C-Tag DEI\n            field is preserved from Ingress to Egress.\n          $ref: '#/components/schemas/EnabledDisabled'\n      type: object\n    CcDei:\n      description: \u003e-\n        One of the possible values for the OVC Egress Map. This indicates that\n        the Color is mapped to the DEI field of the Egress Frame. Note that the\n        Enums used for the DEI values include DISCARD as a value.\n      properties:\n        deiGeen:\n          description: The DEI value (or DISCARD) to use for Green frames.\n          $ref: '#/components/schemas/DeiValueAndDiscard'\n        deiYellow:\n          description: The DEI value (or DISCARD) to use for Yellow frames.\n          $ref: '#/components/schemas/DeiValueAndDiscard'\n        cosName:\n          description: The class of service name for the corresponding Ingress EI Frame.\n          type: string\n      type: object\n    CcPcp:\n      description: \u003e-\n        One of the possible values for the OVC Egress Map. This indicates that\n        the Class of Service and Color are mapped to the PCP field of the Egress\n        Frame. Note that the Enums used for the PCP values include DISCARD as a\n        value.\n      properties:\n        pcpYellow:\n          description: A PCP value (0-7) or DISCARD to use for Yellow frames in the CoS\n          $ref: '#/components/schemas/PcpValueAndDiscard'\n        cosName:\n          description: The class of service name for the corresponding Ingress EI Frame.\n          type: string\n        pcpGreen:\n          description: A PCP value (0-7) or DISCARD to use for Green frames in the CoS\n          $ref: '#/components/schemas/PcpValueAndDiscard'\n      type: object\n    CeVlanIdPreservation:\n      description: \u003e-\n        MEF 26.2 sec. 12.7 - Determines whether the C-tag in the Ingress Frame\n        is Stripped or Preserved in the Egress Frame. Per MEF 51.1, the Operator\n        must support PRESERVE and should support STRIP.\n      enum:\n        - PRESERVE\n        - STRIP\n        - RETAIN\n      type: string\n    CnPcp:\n      description: \u003e-\n        This is a 2-tuple ?x,y? where x is a Class of Service Name and y is a\n        PCP Value or DISCARD.\n      properties:\n        pcpValue:\n          $ref: '#/components/schemas/PcpValueAndDiscard'\n        cosName:\n          description: The class of service name for the corresponding Ingress EI Frame.\n          type: string\n      type: object\n    ColorFrom:\n      discriminator:\n        mapping:\n          DSCP: '#/components/schemas/ColorFromDscp'\n          ENDPOINT: '#/components/schemas/ColorFromEp'\n          PCP: '#/components/schemas/ColorFromPCP'\n          DEI: '#/components/schemas/ColorFromDei'\n        propertyName: mapType\n      properties:\n        mapType:\n          enum:\n            - DSCP\n            - ENDPOINT\n            - PCP\n            - DEI\n          type: string\n      required:\n        - mapType\n      type: object\n    ColorFromDei:\n      allOf:\n        - $ref: '#/components/schemas/ColorFrom'\n        - description: \u003e-\n            This Class is referenced when the color comes from the C-tag DEI\n            field (for EVCs and OVCs) or the S-tag DEI field for OVCs. MEF 10.4\n            (EVCs) and  MEF 26.2 (OVCs) requires that DEI=0 means Green and\n            DEI=1 means Yellow, so no map is needed.\n          type: object\n      x-discriminator-value: DEI\n    ColorFromDscp:\n      allOf:\n        - $ref: '#/components/schemas/ColorFrom'\n        - description: \u003e-\n            This Class is referenced when the color comes from the DSCP field.\n            It is a list of DSCP Entries where each entry has three components:\n            (1) A list of DSCP values, (2) a color for IPv4 packets with one of\n            those DSCP values, and (3) a color for IPv6 packets with one of\n            those DSCP values. Any DSCP value that is not specified and any\n            Frame that does not include an IP packet is Green..\n          properties:\n            colorFromDscpMap:\n              items:\n                $ref: '#/components/schemas/ColorFromDscpEntry'\n              minItems: 1\n              type: array\n              uniqueItems: true\n          type: object\n      x-discriminator-value: DSCP\n    ColorFromDscpEntry:\n      properties:\n        ipv6Color:\n          $ref: '#/components/schemas/FrameColor'\n        dscpList:\n          description: This is a list of DSCP values\n          items:\n            maximum: 63\n            minimum: 0\n            type: integer\n          minItems: 1\n          type: array\n          uniqueItems: true\n        ipv4Color:\n          $ref: '#/components/schemas/FrameColor'\n      type: object\n    ColorFromEp:\n      allOf:\n        - $ref: '#/components/schemas/ColorFrom'\n        - description: \u003e-\n            The color of each Ingress Frame is determined solely from the EVC or\n            OVC End Point. In other words, the EP declares all frames GREEN or\n            all frame YELLOW\n          properties:\n            epColor:\n              $ref: '#/components/schemas/FrameColor'\n          type: object\n      x-discriminator-value: ENDPOINT\n    ColorFromPCP:\n      allOf:\n        - $ref: '#/components/schemas/ColorFrom'\n        - description: \u003e-\n            This Class is referenced when the color comes from the S-tag or\n            C-tag PCP field. Each of the 8 possible PCP values maps to a color.\n            If there is no tag, the frame is Green.\n          properties:\n            colorFromPcpMap:\n              description: 'This is a list of 8 Color mappings, one for each PCP value.'\n              items:\n                $ref: '#/components/schemas/ColorFromPCPMapEntry'\n              maxItems: 8\n              minItems: 8\n              type: array\n              uniqueItems: true\n          type: object\n      x-discriminator-value: PCP\n    ColorFromPCPMapEntry:\n      properties:\n        pcpValue:\n          $ref: '#/components/schemas/PcpValue'\n        pcpColor:\n          $ref: '#/components/schemas/FrameColor'\n      type: object\n    ColorMode:\n      description: \u003e-\n        MEF 26.2 sec. 17.1.2 and MEF 10.4 sec. 12.1.2 - colorMode indicates\n        whether or not External Interface Frames for this Bandwidth Profile Flow\n        that are identified as Yellow on input to the Bandwidth Profile\n        Algorithm can be declared Green.\n      enum:\n        - COLOR_BLIND\n        - COLOR_AWARE\n      type: string\n    ConversationIdRange:\n      description: \u003e-\n        A range of ConversationID (either a VLAN Id or 0 for untagged frames) \n        allowing three forms: start, start ? start, and start ? end\n      properties:\n        start:\n          description: \u003e-\n            The starting Conversation ID of the range or the only Conversation\n            ID if there is no end value\n          maximum: 4094\n          minimum: 0\n          type: integer\n        end:\n          description: The final Conversation ID in the range\n          maximum: 4094\n          minimum: 0\n          type: integer\n      type: object\n    ConversationIdToAggregationLinkMap:\n      description: \u003e-\n        This is a 2-tuple ?x,y? where x is a list of Port Conversation IDs or\n        ranges of Port Conversation IDs (a Port Conversation ID is a VLAN ID or\n        0 for untagged frames) and y is a list of Link Numbers. This is used in\n        the Port Conversation to Aggregation Link Map for the UNI and ENNI.\n      properties:\n        conversationIDs:\n          description: \u003e-\n            802.1AX-2014 sec. 6.6.2.1 - A Port Conversation ID is a VLAN ID (1\n            to 4094) or 0 to represent untagged and priority-tagged frames.\n          items:\n            $ref: '#/components/schemas/ConversationIdRange'\n          minItems: 1\n          type: array\n          uniqueItems: true\n        aggLinkList:\n          description: \u003e-\n            802.1AX-2014 sec. 6.6.2.1 - An ordered list of Aggregation Link\n            Numbers\n          items:\n            minimum: 1\n            type: integer\n          minItems: 1\n          type: array\n          uniqueItems: true\n      type: object\n    CosDscpMap:\n      description: \u003e-\n        This is a list of DSCP to CoS Name Entries followed by items for Not an\n        IP Packet and All Other Values.\n      properties:\n        dscpValueCoSList:\n          description: \u003e-\n            This is a list of DSCP to CoS Map Entries: {ipv4DSCPs, ipv6DSCPs,\n            CoSName}\n          items:\n            $ref: '#/components/schemas/CosDscpMapEntry'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        notIP:\n          description: \u003e-\n            This is the CoS Name for packets that are not IP packets when CoS is\n            determined from DSCP\n          type: string\n        otherIPv6:\n          description: \u003e-\n            This is the CoS Name for IPv6 packets with DSCP values other than\n            those listed.\n          type: string\n        otherIPv4:\n          description: \u003e-\n            This is the CoS Name for IPv4 packets with DSCP values other than\n            those listed.\n          type: string\n      type: object\n    CosDscpMapEntry:\n      description: 'This is a 3-tuple {ipv4list, ipv6list, cosName}'\n      properties:\n        ipv4List:\n          description: List of IPv4 DSCP values\n          $ref: '#/components/schemas/DscpValues'\n        ipv6List:\n          description: List of IPv6 DSCP values\n          $ref: '#/components/schemas/DscpValues'\n        cosName:\n          type: string\n      type: object\n    CosEnniPcpMapEntry:\n      description: '2-tuple {PCP, CoSName} that maps a PCP to a CoS Name or DISCARD.'\n      properties:\n        pcpVal:\n          $ref: '#/components/schemas/PcpValue'\n        pcpCosName:\n          type: string\n      type: object\n    CosFrom:\n      discriminator:\n        mapping:\n          DSCP: '#/components/schemas/CosFromDscp'\n          ENDPOINT: '#/components/schemas/CosFromEp'\n          S_TAG_PCP: '#/components/schemas/CosFromStagPcp'\n          C_TAG_PCP: '#/components/schemas/CosFromCtagPcp'\n        propertyName: mapType\n      properties:\n        mapType:\n          description: The Field that indicates F = S_TAG_PCP.\n          enum:\n            - DSCP\n            - ENDPOINT\n            - S_TAG_PCP\n            - C_TAG_PCP\n          type: string\n      required:\n        - mapType\n      type: object\n    CosFromCtagPcp:\n      allOf:\n        - $ref: '#/components/schemas/CosFrom'\n        - description: \u003e-\n            Ingress CoS is specified as {F,M,P}. This is when F=C_TAG_PCP. This\n            maps each of the 8 PCP values in the C-tag to a Class of Service\n            Name. It also maps UNTAGGED frames to a Class of Service Name.\n          properties:\n            map_M:\n              description: \u003e-\n                This maps each of the possible C-tag PCP values (0-7) and\n                Untagged to a specific CoS Name.\n              items:\n                $ref: '#/components/schemas/CosUniPcpMapEntry'\n              maxItems: 9\n              minItems: 9\n              type: array\n              uniqueItems: true\n            l2cp_P:\n              description: This specifies the CoS Name for L2CPs carried over the EVC/OVC.\n              items:\n                $ref: '#/components/schemas/CosL2cp'\n              minItems: 0\n              type: array\n              uniqueItems: true\n          type: object\n      x-discriminator-value: C_TAG_PCP\n    CosFromDscp:\n      allOf:\n        - $ref: '#/components/schemas/CosFrom'\n        - description: \u003e-\n            Ingress CoS is specified as {F,M,P}. This is when F=DSCP. This maps\n            groups of DSCP values (independently for ipV4 and ipV6) to a Class\n            of Service. It also provides a Class of Service mapping for DSCP\n            values that are not specified and for frames that do not contain IP\n            Packets.\n          properties:\n            map_M:\n              description: \u003e-\n                This maps DSCP values to CoS Names for each of IPv4 and IPv6 and\n                also to non-IP packets.\n              $ref: '#/components/schemas/CosDscpMap'\n            l2cp_P:\n              description: This specifies the CoS Names for L2CPs carried over the EVC/OVC.\n              items:\n                $ref: '#/components/schemas/CosL2cp'\n              minItems: 0\n              type: array\n              uniqueItems: true\n          type: object\n      x-discriminator-value: DSCP\n    CosFromEp:\n      allOf:\n        - $ref: '#/components/schemas/CosFrom'\n        - description: \u003e-\n            Ingress CoS is specified as {F,M,P}. This is when F=OVC_EP or EVC_EP\n            as appropriate.\n          properties:\n            map_M:\n              description: The single CoS Name at this EVC/OVC EP\n              type: string\n            l2cp_P:\n              description: This specifies the CoS Name for L2CPs carried over the EVC/OVC.\n              items:\n                $ref: '#/components/schemas/CosL2cp'\n              minItems: 0\n              type: array\n              uniqueItems: true\n          type: object\n      x-discriminator-value: ENDPOINT\n    CosFromStagPcp:\n      allOf:\n        - $ref: '#/components/schemas/CosFrom'\n        - description: \u003e-\n            Ingress CoS is specified as {F,M,P}. This is when F=S_TAG_PCP. This\n            maps each of the 8 PCP values in the S-tag to a Class of Service\n            Name.\n          properties:\n            map_M:\n              description: A list of 8 PCP values and their associated CoS Names\n              items:\n                $ref: '#/components/schemas/CosEnniPcpMapEntry'\n              maxItems: 8\n              minItems: 8\n              type: array\n              uniqueItems: true\n            l2cp_P:\n              description: This specifies the CoS Name for L2CPs carried over the OVC.\n              items:\n                $ref: '#/components/schemas/CosL2cp'\n              minItems: 0\n              type: array\n              uniqueItems: true\n          type: object\n      x-discriminator-value: S_TAG_PCP\n    CosL2cp:\n      description: '2-tuple {L2CP Ident, CoS Name}'\n      properties:\n        l2cpIdentifier:\n          description: MEF 45.1 sec. 8.2 - Protocol Identifier\n          $ref: '#/components/schemas/L2cpProtocol'\n        l2cpCosName:\n          description: CoS Name String to associate with the L2CP\n          type: string\n      type: object\n    CosUniPcpMapEntry:\n      description: \u003e-\n        2-tuple {PCP, CoSName} that maps a PCP value (or Untagged) to a CoS\n        Name.\n      properties:\n        pcpVal:\n          description: A PCP value from 0 to 7 or UNTAGGED\n          $ref: '#/components/schemas/PcpVal'\n        pcpCosName:\n          description: \u003e-\n            A CoS Name from the EVC/OVC List of Class of Service Names Service\n            Attribute.\n          type: string\n      type: object\n    DataSize:\n      description: \u003e-\n        A value and a unit of measure that specifies a data size for example for\n        a buffer or a burst size.\n      properties:\n        dataSizeUnits:\n          description: \u003e-\n            The unit of measure in the data size. For example, if a burst size\n            is 40 KBYTES, this element is KBYTES. Note that the units indicate\n            binary values, e.g., KBYTES is 1024 bytes.\n          $ref: '#/components/schemas/DataSizeUnits'\n        dataSizeValue:\n          description: \u003e-\n            The value in the data size. For example, if a burst size is 40\n            KBYTES, this element is 40.\n          type: integer\n      type: object\n    DataSizeUnits:\n      description: \u003e-\n        The unit of measure in the data size. For example, if a burst size is 40\n        KBYTES, this element is KBYTES. Note that the units indicate binary\n        values, e.g., KBYTES is 1024 bytes.\n      enum:\n        - BYTES\n        - KBYTES\n        - MBYTES\n        - GBYTES\n        - TBYTES\n        - PBYTES\n        - EBYTES\n        - ZBYTES\n        - YBYTES\n      type: string\n    DeiFromCosColor:\n      allOf:\n        - $ref: '#/components/schemas/OvcEgressMap'\n        - description: \u003e-\n            The DEI Field in the Egress EI Frame is determined from the Class of\n            Service and the Frame Color. This is a list that contains an entry\n            for Class of Service Name that includes the CoS Name and the DEI\n            value (or DISCARD) to use for Green frames and the DEI value (or\n            DISCARD) to use for Yellow Frames. For example CoS=Platinum and\n            Color=Green --\u003e DEI = 1 and Color=Yellow --\u003e DEI = 0. This affects\n            the C-tag at the UNI and the S-tag at the ENNI.\n          properties:\n            ccDeiEntries:\n              description: \u003e-\n                A list of entries, one per CoS, that specifies the DEI value for\n                Green frames and Yellow frames.\n              items:\n                $ref: '#/components/schemas/CcDei'\n              minItems: 1\n              type: array\n              uniqueItems: true\n          type: object\n      x-discriminator-value: CC_DEI\n    DeiValueAndDiscard:\n      enum:\n        - '0'\n        - '1'\n        - DISCARD\n      type: string\n    DscpValues:\n      description: A list of 6 bit values\n      properties:\n        dscpValues:\n          description: A list of unique 6-bit (0-63) values\n          items:\n            maximum: 63\n            minimum: 0\n            type: integer\n          minItems: 1\n          type: array\n          uniqueItems: true\n      type: object\n    Duration:\n      description: 'A Duration in a given unit of time e.g. 3 hours, or 5 days.'\n      properties:\n        amount:\n          description: 'Duration (number of seconds, minutes, hours, etc.)'\n          type: integer\n        units:\n          $ref: '#/components/schemas/TimeUnit'\n      required:\n        - amount\n        - units\n      type: object\n    EnabledDisabled:\n      description: Enumeration to indicate Enabled/Disabled state of an attribute\n      enum:\n        - ENABLED\n        - DISABLED\n      type: string\n    EndPointMapForm:\n      discriminator:\n        mapping:\n          FORM_E: '#/components/schemas/EndPointMapFormE'\n          FORM_U: '#/components/schemas/EndPointMapFormU'\n        propertyName: mapType\n      properties:\n        mapType:\n          description: The discriminator for Map Type U\n          enum:\n            - FORM_E\n            - FORM_U\n          type: string\n      required:\n        - mapType\n      type: object\n    EndPointMapFormE:\n      allOf:\n        - $ref: '#/components/schemas/EndPointMapForm'\n        - description: \u003e-\n            MEF 10.4 sec. 16.5.1 - The value of an End Point Map of Form E (E\n            for ENNI) consists of a list of one or more SVLAN ID values. An\n            S-Tagged ENNI Frame whose S-VLAN ID value matches an entry in the\n            list maps to the OVC End Point.\n          properties:\n            ovcEndPointMapFormE:\n              description: A list of S-VLAN ID values at the ENNI.\n              items:\n                maximum: 4094\n                minimum: 1\n                type: integer\n              maxItems: 4094\n              minItems: 1\n              type: array\n              uniqueItems: true\n          type: object\n      x-discriminator-value: FORM_E\n    EndPointMapFormU:\n      allOf:\n        - $ref: '#/components/schemas/EndPointMapForm'\n        - description: \u003e-\n            MEF 10.4 sec. 16.5.4 - The EndPointMapFormU object class represents\n            the OVC End Point  Map Form U (U for UNI). It is a list of one or\n            more CE-VLAN IDs.\n          properties:\n            ovcEndPointMapFormU:\n              description: A list of C-VLAN ID values at the UNI.\n              items:\n                maximum: 4094\n                minimum: 1\n                type: integer\n              maxItems: 4094\n              minItems: 1\n              type: array\n              uniqueItems: true\n          type: object\n      x-discriminator-value: FORM_U\n    Envelope:\n      description: \u003e-\n        Bandwidth Profiles are organized into Envelopes. Multiple Bandwidth\n        Profiles in an envelope can share bandwidth resources. Each Envelope has\n        a name and a Coupling Flag for Index Zero (CF0) that indicates whether\n        unused green tokens are discarded or converted to yellow tokens. All\n        Bandwidth Profile Flows in the same envelope satisfy the same criterion\n        listed in R230 of MEF 26.2.\n      properties:\n        couplingFlagForIndexZero:\n          description: \u003e-\n            MEF 10.4 sec. 9.12 and MEF 26.2 sec. 14.19 - This attribute denotes\n            the coupling flag for index zero. FALSE for 0 (overflow Green tokens\n            are discarded) and TRUE for 1 (overflow Green tokens can be used as\n            Yellow tokens).\n          type: boolean\n        envelopeID:\n          description: \u003e-\n            MEF 10.4 sec. 9.12 and MEF 26.2 sec. 14.19 - The attribute is a\n            string that identifies the Envelope\n          maxLength: 45\n          minLength: 1\n          pattern: \"[ -\\x7F]+\"\n          type: string\n      type: object\n    Epl:\n      allOf:\n        - $ref: '#/components/schemas/MEFProductConfiguration'\n        - $ref: '#/components/schemas/CarrierEthernetEvcCommon'\n        - properties:\n            evcEndPointA:\n              description: \u003e-\n                MEF 10.4 sec. 10 - EVC End Point at UNI A. UNI EVC End Point A\n                and UNI EVC End Point Z must be included in the EPL Product.\n              $ref: '#/components/schemas/EplEvcEndPoint'\n            evcEndPointZ:\n              description: \u003e-\n                MEF 10.4 sec. 10 - EVC End Point at UNI Z. UNI EVC End Point A\n                and UNI EVC End Point Z must be included in the EPL Product.\n              $ref: '#/components/schemas/EplEvcEndPoint'\n          required:\n            - evcEndPointA\n            - evcEndPointZ\n          type: object\n      x-discriminator-value: 'urn:mef:lso:spec:cantata-sonata:epl:v0.3.0:all'\n    EplEvcEndPoint:\n      allOf:\n        - $ref: '#/components/schemas/CarrierEthernetEvcEpEline'\n        - $ref: '#/components/schemas/CarrierEthernetEvcEpCommon'\n      description: \u003e-\n        An EVC End Point is a logical entity at a given UNI that is associated\n        with a distinct set of frames passing over that UNI. EVC End Point\n        Service Attributes are the attributes of an EVC that can be different at\n        each UNI in the EVC. These are the EVC End Point Service Attributes\n        applicable to Ethernet Private Line (EPL) Services defined in MEF 6.3\n        based on the Service Attributes in MEF 10.4.\n    Eplan:\n      allOf:\n        - $ref: '#/components/schemas/MEFProductConfiguration'\n        - $ref: '#/components/schemas/CarrierEthernetEvcCommon'\n        - $ref: '#/components/schemas/CarrierEthernetEvcNotEpl'\n      x-discriminator-value: 'urn:mef:lso:spec:cantata-sonata:eplan:v0.3.0:all'\n    EplanEndpoint:\n      allOf:\n        - $ref: '#/components/schemas/MEFProductConfiguration'\n        - $ref: '#/components/schemas/CarrierEthernetEvcEpCommon'\n        - $ref: '#/components/schemas/CarrierEthernetEvcEpNotEpl'\n      x-discriminator-value: 'urn:mef:lso:spec:cantata-sonata:eplan-endpoint:v0.3.0:all'\n    Eptree:\n      allOf:\n        - $ref: '#/components/schemas/MEFProductConfiguration'\n        - $ref: '#/components/schemas/CarrierEthernetEvcCommon'\n        - $ref: '#/components/schemas/CarrierEthernetEvcNotEpl'\n      x-discriminator-value: 'urn:mef:lso:spec:cantata-sonata:eptree:v0.3.0:all'\n    EptreeEndpoint:\n      allOf:\n        - $ref: '#/components/schemas/MEFProductConfiguration'\n        - $ref: '#/components/schemas/CarrierEthernetEvcEpCommon'\n        - $ref: '#/components/schemas/CarrierEthernetEvcEpNotEpl'\n      x-discriminator-value: 'urn:mef:lso:spec:cantata-sonata:eptree-endpoint:v0.3.0:all'\n    Error:\n      description: \u003e\n        Standard Class used to describe API response error Not intended to be\n        used directly. The `code` in the HTTP header is used as a discriminator\n        for the type of error returned in runtime.\n      properties:\n        reason:\n          description: \u003e-\n            Text that explains the reason for the error. This can be shown to a\n            client user.\n          maxLength: 255\n          type: string\n        message:\n          description: \u003e-\n            Text that provides mode details and corrective actions related to\n            the error. This can be shown to a client user.\n          type: string\n        referenceError:\n          description: URL pointing to documentation describing the error\n          format: uri\n          type: string\n      required:\n        - reason\n      type: object\n    Error400:\n      allOf:\n        - $ref: '#/components/schemas/Error'\n        - properties:\n            code:\n              $ref: '#/components/schemas/Error400Code'\n          required:\n            - code\n          type: object\n      description: 'Bad Request. (https://tools.ietf.org/html/rfc7231#section-6.5.1)'\n    Error400Code:\n      description: \u003e-\n        One of the following error codes:\n\n        - missingQueryParameter: The URI is missing a required query-string\n        parameter\n\n        - missingQueryValue: The URI is missing a required query-string\n        parameter value\n\n        - invalidQuery: The query section of the URI is invalid.\n\n        - invalidBody: The request has an invalid body\n      enum:\n        - missingQueryParameter\n        - missingQueryValue\n        - invalidQuery\n        - invalidBody\n      type: string\n    Error401:\n      allOf:\n        - $ref: '#/components/schemas/Error'\n        - properties:\n            code:\n              $ref: '#/components/schemas/Error401Code'\n          required:\n            - code\n          type: object\n      description: 'Unauthorized.  (https://tools.ietf.org/html/rfc7235#section-3.1)'\n    Error401Code:\n      description: |-\n        One of the following error codes:\n        - missingCredentials: No credentials provided.\n        - invalidCredentials: Provided credentials are invalid or expired\n      enum:\n        - missingCredentials\n        - invalidCredentials\n      type: string\n    Error403:\n      allOf:\n        - $ref: '#/components/schemas/Error'\n        - properties:\n            code:\n              $ref: '#/components/schemas/Error403Code'\n          required:\n            - code\n          type: object\n      description: \u003e-\n        Forbidden. This code indicates that the server understood the request\n        but refuses to authorize it.\n        (https://tools.ietf.org/html/rfc7231#section-6.5.3)\n    Error403Code:\n      description: |-\n        This code indicates that the server understood\n        the request but refuses to authorize it because\n        of one of the following error codes:\n        - accessDenied: Access denied\n        - forbiddenRequester: Forbidden requester\n        - tooManyUsers: Too many users\n      enum:\n        - accessDenied\n        - forbiddenRequester\n        - tooManyUsers\n      type: string\n    Error404:\n      allOf:\n        - $ref: '#/components/schemas/Error'\n        - properties:\n            code:\n              description: \u003e-\n                The following error code:\n\n                - notFound: A current representation for the target resource not\n                found\n              enum:\n                - notFound\n              type: string\n          required:\n            - code\n          type: object\n      description: \u003e-\n        Resource for the requested path not found.\n        (https://tools.ietf.org/html/rfc7231#section-6.5.4)\n    Error422:\n      allOf:\n        - $ref: '#/components/schemas/Error'\n        - properties:\n            code:\n              $ref: '#/components/schemas/Error422Code'\n            propertyPath:\n              description: \u003e\n                A pointer to a particular property of the payload that caused\n                the validation issue. It is highly recommended that this\n                property should be used.\n\n                Defined using JavaScript Object Notation (JSON) Pointer\n                (https://tools.ietf.org/html/rfc6901).\n              type: string\n          required:\n            - code\n          type: object\n      description: \u003e-\n        Unprocessable entity due to a business validation problem.\n        (https://tools.ietf.org/html/rfc4918#section-11.2)\n    Error422Code:\n      description: |\n        One of the following error codes:\n          - missingProperty: The property the Seller has expected is not present in the payload\n          - invalidValue: The property has an incorrect value\n          - invalidFormat: The property value does not comply with the expected value format\n          - referenceNotFound: The object referenced by the property cannot be identified in the Seller system\n          - unexpectedProperty: Additional property, not expected by the Seller has been provided\n          - tooManyRecords: the number of records to be provided in the response exceeds the Seller's threshold.\n          - otherIssue: Other problem was identified (detailed information provided in a reason)\n      enum:\n        - missingProperty\n        - invalidValue\n        - invalidFormat\n        - referenceNotFound\n        - unexpectedProperty\n        - tooManyRecords\n        - otherIssue\n      type: string\n    Error500:\n      allOf:\n        - $ref: '#/components/schemas/Error'\n        - properties:\n            code:\n              description: \u003e-\n                The following error code:\n\n                - internalError: Internal server error - the server encountered\n                an unexpected condition that prevented it from fulfilling the\n                request.\n              enum:\n                - internalError\n              type: string\n          required:\n            - code\n          type: object\n      description: \u003e-\n        Internal Server Error.\n        (https://tools.ietf.org/html/rfc7231#section-6.6.1)\n    Error501:\n      allOf:\n        - $ref: '#/components/schemas/Error'\n        - properties:\n            code:\n              description: |-\n                The following error code::\n                - notImplemented: Method not supported by the server\n              enum:\n                - notImplemented\n              type: string\n          required:\n            - code\n          type: object\n      description: 'Not Implemented. (https://tools.ietf.org/html/rfc7231#section-6.6.2)'\n    EvcEgressMap:\n      description: \u003e-\n        This map is a table with one entries for each CosName, that includes the\n        CoSName, a PCP value for green frames, a PCP value for yellow frames, a\n        DEI value for green frames and a DEI value for yellow frames. Any of the\n        values can be DISCARD. This table is used at the UNI for EVCs.\n      properties:\n        evcEgressMapEntries:\n          description: \u003e-\n            This is a table of EVC Egress Map entries. An empty list indicates a\n            value of None. Per R140 in MEF 10.4, the value of the EVC EP Egress\n            Map Service Attribute MUST NOT be None unless one of the conditions\n            noted in the requirement is met. (See Validation Notes)\n          items:\n            $ref: '#/components/schemas/EvcEgressMapEntry'\n          minItems: 0\n          type: array\n          uniqueItems: true\n      type: object\n    EvcEgressMapEntry:\n      description: \u003e-\n        A row in the EVC Egress Map. Contains a CoSName, PCPGreen, PCPYellow,\n        DEIGreen, DEIYellow\n      properties:\n        pcpYellow:\n          description: A PCP value (0-7) or DISCARD to use for Yellow frames\n          $ref: '#/components/schemas/PcpValueAndDiscard'\n        deiYellow:\n          description: A DEI value to use for Yellow frames\n          $ref: '#/components/schemas/DeiValueAndDiscard'\n        cosName:\n          type: string\n        deiGreen:\n          description: A DEI value to use for Green frames\n          $ref: '#/components/schemas/DeiValueAndDiscard'\n        pcpGreen:\n          description: A PCP value (0-7) or DISCARD to use for Green Frames\n          $ref: '#/components/schemas/PcpValueAndDiscard'\n      type: object\n    EvcEndPointMap:\n      description: \u003e-\n        MEF 10.4 sec. 10.4 - This is specifications for which Service Frames are\n        mapped to the EVC End Point. The allowed values in MEF 10.4 are ALL,\n        LIST, and UT/PT. Since Private services must be ALL, the map isn't\n        needed for those services, and therefore the type does not include ALL.\n        If the type is LIST there must be a list of VLAN IDs specified.\n      properties:\n        vlanId:\n          description: A list of VLAN IDs if the value of vlanType is \"LIST\"\n          items:\n            maximum: 4094\n            minimum: 1\n            type: integer\n          maxItems: 4094\n          minItems: 1\n          type: array\n          uniqueItems: true\n        vlanType:\n          description: \u003e-\n            An indication of the type of EVC End Point Map. If the value is\n            UT/PT then no additional information is required. If the value is\n            LIST then a list of C-VLAN ID values must be specified.\n          $ref: '#/components/schemas/VlanType'\n      type: object\n    EventSubscription:\n      description: |\n        This resource is used to manage notification subscription.\n        Reference: MEF 79 (Sn 8.3)\n      properties:\n        query:\n          description: \u003e-\n            The value provided by the Buyer in `EventSubscriptionInput` during\n            notification registration\n          type: string\n        callback:\n          description: \u003e-\n            The value provided by the Buyer in `EventSubscriptionInput` during\n            notification registration\n          type: string\n        id:\n          description: \u003e-\n            An identifier of this Event Subscription assigned by the Seller when\n            a resource is created.\n          type: string\n      required:\n        - callback\n        - id\n      type: object\n    EventSubscriptionInput:\n      description: This class is used to register for Notifications.\n      properties:\n        query:\n          description: \u003e-\n            This attribute is used to define to which type of events to register\n            to. Example: \"query\":\"eventType = poqCreateEvent\". To subscribe for\n            more than one event type, put the values separated by comma:\n            `eventType=poqCreateEvent,poqStateChangeEvent`. The possible values\n            are enumerated by the 'POQEventType' in\n            productOfferingQualificationNotification.api.yaml. An empty query is\n            treated as specifying no filters - ending in  subscription for all\n            event types.\n          type: string\n        callback:\n          description: \u003e-\n            This callback value must be set to *host* property from Buyer\n            ProductOfferingQualification Notification API\n            (productOfferingQualificationNotification.api.yaml). This property\n            is appended with the base path and notification resource path\n            specified in that API to construct an URL to which notification is\n            sent. E.g. for \"callback\": \"https://buyer.co/listenerEndpoint\", the\n            create event notification will be sent to:\n            `https://buyer.co/listenerEndpoint/mefApi/sonata/productOfferingQualificationNotification/v7/listener/poqCreateEvent`\n          type: string\n      required:\n        - callback\n      type: object\n    Evpl:\n      allOf:\n        - $ref: '#/components/schemas/MEFProductConfiguration'\n        - $ref: '#/components/schemas/CarrierEthernetEvcCommon'\n        - $ref: '#/components/schemas/CarrierEthernetVpEvcCommon'\n        - $ref: '#/components/schemas/CarrierEthernetEvcNotEpl'\n        - properties:\n            evcEndPointA:\n              description: \u003e-\n                MEF 10.4 sec. 10 - EVC Endpoint at UNI A. UNI EVC End Point A\n                and UNI EVC End Point Z must be included in the EVPL Product.\n              $ref: '#/components/schemas/EvplEvcEndPoint'\n            evcEndPointZ:\n              description: \u003e-\n                MEF 10.4 sec. 10 - EVC Endpoint at UNI Z. UNI EVC End Point A\n                and UNI EVC End Point Z must be included in the EVPL Product.\n              $ref: '#/components/schemas/EvplEvcEndPoint'\n          required:\n            - evcEndPointA\n            - evcEndPointZ\n          type: object\n      x-discriminator-value: 'urn:mef:lso:spec:cantata-sonata:evpl:v0.3.0:all'\n    EvplEvcEndPoint:\n      allOf:\n        - $ref: '#/components/schemas/CarrierEthernetEvcEpEline'\n        - $ref: '#/components/schemas/CarrierEthernetEvcEpCommon'\n        - $ref: '#/components/schemas/CarrierEthernetEvcEpVirtualPrivate'\n        - $ref: '#/components/schemas/CarrierEthernetEvcEpNotEpl'\n      description: \u003e-\n        An EVC End Point is a logical entity at a given UNI that is associated\n        with a distinct set of frames passing over that UNI. EVC End Point\n        Service Attributes are the attributes of an EVC that can be different at\n        each UNI in the EVC. These are the EVC End Point Service Attributes\n        applicable to Ethernet Virtual Private Line (EVPL) Services defined in\n        MEF 6.3 based on the Service Attributes in MEF 10.4.\n    Evplan:\n      allOf:\n        - $ref: '#/components/schemas/MEFProductConfiguration'\n        - $ref: '#/components/schemas/CarrierEthernetEvcCommon'\n        - $ref: '#/components/schemas/CarrierEthernetVpEvcCommon'\n        - $ref: '#/components/schemas/CarrierEthernetEvcNotEpl'\n      x-discriminator-value: 'urn:mef:lso:spec:cantata-sonata:evplan:v0.3.0:all'\n    EvplanEndpoint:\n      allOf:\n        - $ref: '#/components/schemas/MEFProductConfiguration'\n        - $ref: '#/components/schemas/CarrierEthernetEvcEpCommon'\n        - $ref: '#/components/schemas/CarrierEthernetEvcEpVirtualPrivate'\n        - $ref: '#/components/schemas/CarrierEthernetEvcEpNotEpl'\n      x-discriminator-value: 'urn:mef:lso:spec:cantata-sonata:evplan-endpoint:v0.3.0:all'\n    Evptree:\n      allOf:\n        - $ref: '#/components/schemas/MEFProductConfiguration'\n        - $ref: '#/components/schemas/CarrierEthernetEvcCommon'\n        - $ref: '#/components/schemas/CarrierEthernetVpEvcCommon'\n        - $ref: '#/components/schemas/CarrierEthernetEvcNotEpl'\n      x-discriminator-value: 'urn:mef:lso:spec:cantata-sonata:evptree:v0.3.0:all'\n    EvptreeEndpoint:\n      allOf:\n        - $ref: '#/components/schemas/MEFProductConfiguration'\n        - $ref: '#/components/schemas/CarrierEthernetEvcEpCommon'\n        - $ref: '#/components/schemas/CarrierEthernetEvcEpVirtualPrivate'\n        - $ref: '#/components/schemas/CarrierEthernetEvcEpNotEpl'\n      x-discriminator-value: 'urn:mef:lso:spec:cantata-sonata:evptree-endpoint:v0.3.0:all'\n    FieldedAddress:\n      allOf:\n        - $ref: '#/components/schemas/RelatedPlaceRefOrValue'\n        - properties:\n            country:\n              description: Country that the address is in\n              type: string\n            streetType:\n              description: \u003e-\n                The type of street (e.g., alley, avenue, boulevard, brae,\n                crescent, drive, highway, lane, terrace, parade, place, tarn,\n                way, wharf)\n              type: string\n            postcodeExtension:\n              description: \u003e-\n                An extension of a postal code. E.g. the part following the dash\n                in a US urban property address\n              type: string\n            city:\n              description: The city that the address is in\n              type: string\n            streetNr:\n              description: \u003e-\n                Number identifying a specific property on a public street. It\n                may be combined with streetNrLast for ranged addresses. MEF 79\n                defines it as required for the Seller response, however in\n                certain countries it is not used, so it's optional in API.\n              type: string\n            locality:\n              description: The locality that the address is in\n              type: string\n            postcode:\n              description: \u003e-\n                A descriptor for a postal delivery area, used to speed and\n                simplify the delivery of mail (also known as zip code) MEF 79\n                defines it as required however as in certain countries it is not\n                used we make it optional in API.\n              type: string\n            streetNrLast:\n              description: Last number in a range of street numbers allocated to a property\n              type: string\n            streetNrSuffix:\n              description: The first street number suffix\n              type: string\n            streetName:\n              description: Name of the street or other street type\n              type: string\n            stateOrProvince:\n              description: The State or Province that the address is in\n              type: string\n            streetNrLastSuffix:\n              description: Last street number suffix for a ranged address\n              type: string\n            geographicSubAddress:\n              $ref: '#/components/schemas/GeographicSubAddress'\n            streetSuffix:\n              description: A modifier denoting a relative direction\n              type: string\n          required:\n            - city\n            - country\n            - streetName\n          type: object\n      description: \u003e-\n        A type of Address that has a discrete field and value for each type of\n        boundary or identifier down to the lowest level of detail. For example\n        \"street number\" is one field, \"street name\" is another field, etc.\n        Reference: MEF 79 (Sn 8.9.2)\n    FormattedAddress:\n      allOf:\n        - $ref: '#/components/schemas/RelatedPlaceRefOrValue'\n        - properties:\n            country:\n              description: Country that the address is in\n              type: string\n            postcodeExtension:\n              description: \u003e-\n                An extension of a postal code. E.g. the part following the dash\n                in a US urban property address\n              type: string\n            stateOrProvince:\n              description: The State or Province that the address is in\n              type: string\n            city:\n              description: The city that the address is in\n              type: string\n            addrLine2:\n              description: The second address line in a formatted address\n              type: string\n            addrLine1:\n              description: The first address line in a formatted address\n              type: string\n            locality:\n              description: \u003e-\n                An area of defined or undefined boundaries within a local\n                authority or other legislatively defined area, usually rural or\n                semi-rural in nature\n              type: string\n            postcode:\n              description: \u003e-\n                A descriptor for a postal delivery area used to speed and\n                simplify the delivery of mail (also known as ZIP code)\n              type: string\n          required:\n            - addrLine1\n            - city\n            - country\n          type: object\n      description: \u003e-\n        A type of Address that has discrete fields for each type of boundary or\n        identifier with the exception of the street and more specific location\n        details, which are combined into a maximum of two strings based on local\n        postal addressing conventions. Reference: MEF 79 (Sn 8.9.3)\n    FrameColor:\n      enum:\n        - GREEN\n        - YELLOW\n      type: string\n    FrameDispEnum:\n      enum:\n        - DISCARD\n        - DELIVER_UNCONDITIONALLY\n        - DELIVER_CONDITIONALLY\n      type: string\n    FrameDisposition:\n      description: \u003e-\n        A 3-tuple that indicates how Unicast, Multicast, and Broadcast Frames\n        are delivered by the service. For each, the value can be UNCONDITIONAL,\n        the frames are delivered without condition, CONDITIONAL, the frames are\n        delivered based on conditions agreed to between buyer and seller (e.g.,\n        based on learned addresses), and DISCARD.\n      properties:\n        broadcast:\n          $ref: '#/components/schemas/FrameDispEnum'\n        unicast:\n          $ref: '#/components/schemas/FrameDispEnum'\n        multicast:\n          $ref: '#/components/schemas/FrameDispEnum'\n      type: object\n    GeographicAddressLabel:\n      allOf:\n        - $ref: '#/components/schemas/RelatedPlaceRefOrValue'\n        - properties:\n            externalReferenceId:\n              description: \u003e-\n                The unique reference to an Address as provided by the\n                Administrative Authority.\n              type: string\n            externalReferenceType:\n              description: \u003e-\n                The organization or standard from the organization that\n                administers this Geographic Address Label ensuring it is unique\n                within the Administrative Authority. The value(s) to be used are\n                to be agreed upon during the onboarding. For North American\n                providers this would normally be CLLI (Common Language Location\n                Identifier) code.\n              type: string\n          required:\n            - externalReferenceId\n            - externalReferenceType\n          type: object\n      description: \u003e-\n        A unique identifier controlled by a generally accepted independent\n        administrative authority that specifies a fixed geographical location. \n\n        Reference: MEF 79 (Sn 8.9.4)\n    GeographicAddressRef:\n      allOf:\n        - $ref: '#/components/schemas/RelatedPlaceRefOrValue'\n        - properties:\n            href:\n              description: \u003e\n                Hyperlink to the referenced Address. Hyperlink MAY be used by\n                the Seller in responses. Hyperlink MUST be ignored by the Seller\n                in case it is provided by the Buyer in a request.\n              type: string\n            id:\n              description: \u003e-\n                Identifier of the referenced Geographic Address. This identifier\n                is assigned during a successful address validation request\n                (Geographic Address Management API)\n              type: string\n          required:\n            - id\n          type: object\n      description: \u003e\n        A reference to a Geographic Address resource available through Address\n        Validation API.\n    GeographicSiteRef:\n      allOf:\n        - $ref: '#/components/schemas/RelatedPlaceRefOrValue'\n        - properties:\n            href:\n              description: \u003e\n                Hyperlink to the referenced Site. Hyperlink MAY be used by the\n                Seller in responses. Hyperlink MUST be ignored by the Seller in\n                case it is provided by the Buyer in a request.\n              type: string\n            id:\n              description: Identifier of the referenced Geographic Site.\n              type: string\n          required:\n            - id\n          type: object\n      description: \u003e\n        A reference to a Geographic Site resource available through Service Site\n        API\n    GeographicSubAddress:\n      description: 'Additional fields used to specify an address, as detailed as possible.'\n      properties:\n        buildingName:\n          description: \u003e\n            Allows for identification of places that require building name  as\n            part of addressing information\n          type: string\n        subUnit:\n          description: \u003e-\n            Representation of a MEFSubUnit It is used for describing subunit\n            within a subAddress e.g. BERTH, FLAT, PIER, SUITE, SHOP, TOWER,\n            UNIT, WHARF.\n          items:\n            $ref: '#/components/schemas/MEFSubUnit'\n          type: array\n        levelType:\n          description: Describes level types within a building\n          type: string\n        levelNumber:\n          description: 'Used where a level type may be repeated e.g. BASEMENT 1, BASEMENT 2'\n          type: string\n        privateStreetNumber:\n          description: Private streets numbers internal to a private street\n          type: string\n        privateStreetName:\n          description: \u003e-\n            Private streets internal to a property (e.g. a university) may have\n            internal names that are not recorded by the land title office\n          type: string\n      type: object\n    InformationRate:\n      description: A value and a unit of measure that specifies an Information Rate.\n      properties:\n        irValue:\n          description: \u003e-\n            The value in the information rate. For example if the information\n            rate is 70 kbps this element is 70.\n          minimum: 0\n          type: number\n        irUnits:\n          description: \u003e-\n            The unit of measure for the Information Rate. For example if the\n            Information Rate is 70KBPS this element is KBPS. Note that the\n            values are decimal values. 1 KBPS is 1000 bits per second and 1MBPS\n            is 1,000,000 bits per second.\n          $ref: '#/components/schemas/IrUnits'\n      type: object\n    Instantiation:\n      description: \u003e-\n        MEF 10.4 sec. 9.2 - When the value is Physical, the UNI is implemented\n        using one or more instances of a standard Physical Layer. When the value\n        is Virtual, the physical layer is not specified.\n      enum:\n        - PHYSICAL\n        - VIRTUAL\n      type: string\n    IrUnits:\n      description: \u003e-\n        The unit of measure for the Information Rate. For example if the\n        Information Rate is 70KBPS this element is KBPS. Note that the values\n        are decimal values. 1 KBPS is 1000 bits per second and 1MBPS is\n        1,000,000 bits per second.\n      enum:\n        - BPS\n        - KBPS\n        - MBPS\n        - GBPS\n        - TBPS\n        - PBPS\n        - EBPS\n        - ZBPS\n        - YBPS\n      type: string\n    L2cpAddressSet:\n      enum:\n        - CTA\n        - CTB\n        - CTB2\n      type: string\n    L2cpPeering:\n      description: \u003e-\n        This specifies the L2CP Protocol Identifier and the Destination Address\n        in use by the protocol entity. Reference MEF 45.1 Section 8.2 L2CP\n        Peering Service Attribute\n      properties:\n        protocolID:\n          description: \u003e-\n            This specifies the Protocol Type for the L2CP. It consists of a\n            field specification (ETHERTYPE or LLC), the EtherType or LLC value,\n            and an optional subtype.\n          $ref: '#/components/schemas/L2cpProtocol'\n        destinationAddress:\n          description: \u003e-\n            The Destination MAC Address of the L2CP to be peered in the standard\n            format of 6 hex bytes separated by hyphen (-).\n          pattern: '[0-9a-fA-F][0-9a-fA-F]([-][0-9a-fA-F][0-9a-fA-F]){5}'\n          type: string\n        linkIdList:\n          description: \u003e-\n            Identifiers for the links on which the specified protocol will be\n            peered. If no links are specified the protocol is peered on all\n            links.\n          items:\n            maxLength: 45\n            minLength: 1\n            pattern: \"[ -\\x7F]+\"\n            type: string\n          minItems: 0\n          type: array\n          uniqueItems: false\n      type: object\n    L2cpProtocol:\n      description: \u003e-\n        Defines a L2CP protocol LLC address type or EtherType with possible\n        subtype. Reference MEF 45.1 Section 8.2 L2CP Peering Service Attribute.\n      properties:\n        l2cpProtocolType:\n          description: The protocol field to inspect to identify the L2CP.\n          $ref: '#/components/schemas/L2cpProtocolType'\n        subType:\n          description: The EtherType can be modified by an optional sub-type.\n          minimum: 0\n          type: integer\n        llcAddressOrEtherType:\n          description: The EtherType value or LLC value\n          minimum: 0\n          type: integer\n      type: object\n    L2cpProtocolType:\n      description: The protocol field to inspect to identify the L2CP.\n      enum:\n        - ETHERTYPE\n        - LLC\n      type: string\n    LinkAggType:\n      description: Type that defines the Link Aggregation types.\n      enum:\n        - NONE\n        - 2_LINK_ACTIVE_STANDBY\n        - ALL_ACTIVE\n        - OTHER\n      type: string\n    MEFAlternateProduct:\n      description: \u003e-\n        An alternative Product Offering that the Seller is proposing to the\n        Buyer. If 1) the Buyer has set `provideAlternate=true`;  2) the Seller\n        has determined that the POQ Confidence Level for this item is `yellow`\n        or `red`; and  3) The Seller has alternate Products (e.g. similar but\n        lower bandwidth) that may be adequate.\n      properties:\n        productSpecification:\n          $ref: '#/components/schemas/ProductSpecificationRef'\n        productOffering:\n          $ref: '#/components/schemas/ProductOfferingRef'\n        productConfiguration:\n          $ref: '#/components/schemas/MEFProductConfiguration'\n      required:\n        - productConfiguration\n        - productOffering\n      type: object\n    MEFGeographicPoint:\n      allOf:\n        - $ref: '#/components/schemas/RelatedPlaceRefOrValue'\n        - properties:\n            spatialRef:\n              description: \u003e-\n                The spatial reference system used to determine the coordinates\n                (e.g. \"WGS84\"). The system used and the value of this field are\n                to be agreed during the onboarding process.\n              type: string\n            x:\n              description: \u003e-\n                The latitude expressed in the format specified by the\n                `spacialRef`\n              type: string\n            'y':\n              description: \u003e-\n                The longitude expressed in the format specified by the\n                `spacialRef`\n              type: string\n            z:\n              description: \u003e-\n                The elevation expressed in the format specified by the\n                `spacialRef`\n              type: string\n          required:\n            - spatialRef\n            - x\n            - 'y'\n          type: object\n      description: \u003e\n        A MEFGeographicPoint defines a geographic point through coordinates.\n        Reference: MEF 79 (Sn 8.9.5)\n    MEFPOQItemStateChange:\n      description: \u003e-\n        Holds the reached state, reasons, and associated date the POQ state\n        changed, populated by the Seller.\n      properties:\n        changeReason:\n          description: Additional comment related to state change\n          type: string\n        changeDate:\n          description: The date on when the state was reached\n          format: date-time\n          type: string\n        state:\n          $ref: '#/components/schemas/MEFPOQItemTaskStateType'\n      required:\n        - changeDate\n        - state\n      type: object\n    MEFPOQItemTaskStateType:\n      description: \u003e\n        POQ item states - The specific states are managed by the Seller based on\n\n        its processing and/or based on the Buyer's action. The following mapping\n\n        has been used between `MEFPOQItemTaskStateType` and MEF 79 (Sn 9.2):\n\n\n        | MEFPOQItemTaskStateType | MEF79                             |\n        Description                                                                                                                 \n        |\n\n        | ----------------------- | --------------------------------- |\n        ----------------------------------------------------------------------------------------------------------------------------\n        |\n\n        | acknowledged            | N/A                               | A\n        request has been received by the Seller and has passed basic\n        validation.                                                   |\n\n        | done.ready              | READY                             | POQ Item\n        response is complete. This state does not imply that Seller is able to\n        deliver requested item                       |\n\n        | done.abandoned          | ABANDONED                         | Applied\n        to a POQ Item in case the final state is not reached and any other POQ\n        Item moved to the final state other than done |\n\n        | terminatedWithError     | INSUFFICIENT_INFORMATION_PROVIDED | The\n        information provided by the Buyer is insufficient for the Seller to\n        provide POQ Item response                            |\n\n        | inProgress              | IN_PROGRESS                       | The\n        Seller is working on a POQ item response and the answer is not ready\n        yet                                                 |\n      enum:\n        - acknowledged\n        - terminatedWithError\n        - inProgress\n        - done.abandoned\n        - done.ready\n      type: string\n    MEFPOQStateChange:\n      description: \u003e-\n        Holds the reached state, reasons, and associated date the POQ state\n        changed, populated by the Seller.\n      properties:\n        changeReason:\n          description: Additional comment related to state change\n          type: string\n        changeDate:\n          description: The date on when the state was reached\n          format: date-time\n          type: string\n        state:\n          $ref: '#/components/schemas/MEFPOQTaskStateType'\n      required:\n        - changeDate\n        - state\n      type: object\n    MEFPOQTaskStateType:\n      description: \u003e\n        These values represent the valid states through which the product\n\n        offering qualification can transition.\n\n\n        The following mapping has been used between `MEFPOQTaskStateType` and\n\n        MEF 79 (Sn 9.1):\n\n\n        | MEFPOQTaskStateType  | MEF 79                            |\n        Description                                                                                                                        \n        |\n\n        | -------------------- | --------------------------------- |\n        ------------------------------------------------------------------------------------------------------------------------------------|\n\n        | acknowledged         | N/A                               | A request\n        has been received by the Seller, has passed basic validation and the id\n        was assigned.                                     |\n\n        | done.ready           | READY                             | Reached\n        when all items are in `done`\n        state                                                                                         \n        |\n\n        | done.unableToProvide | UNABLE_TO_PROVIDE                 | This state\n        is set when the Seller is unable to provide a Product Offering\n        Qualification in the timeframe required by the Buyer.     |\n\n        | terminatedWithError  | INSUFFICIENT_INFORMATION_PROVIDED | This state\n        is achieved when a well-formed POQ request has been received, but there\n        is insufficient information to complete the POQ. |\n\n        | inProgress           | IN_PROGRESS                       | There is at\n        least one POQ Item in `inProgress`\n        state                                                                               \n        |\n      enum:\n        - acknowledged\n        - terminatedWithError\n        - inProgress\n        - done.unableToProvide\n        - done.ready\n      type: string\n    MEFProductConfiguration:\n      description: \u003e-\n        MEFProductConfiguration is used as an extension point for MEF specific\n        product/service payload. The `@type` attribute is used as a\n        discriminator\n      discriminator:\n        mapping:\n          'urn:mef:lso:spec:cantata-sonata:evptree-endpoint:v0.3.0:all': '#/components/schemas/EvptreeEndpoint'\n          'urn:mef:lso:spec:cantata-sonata:eptree-endpoint:v0.3.0:all': '#/components/schemas/EptreeEndpoint'\n          'urn:mef:lso:spec:cantata-sonata:evpl:v0.3.0:all': '#/components/schemas/Evpl'\n          'urn:mef:lso:spec:cantata-sonata:eplan:v0.3.0:all': '#/components/schemas/Eplan'\n          'urn:mef:lso:spec:cantata-sonata:eplan-endpoint:v0.3.0:all': '#/components/schemas/EplanEndpoint'\n          'urn:mef:lso:spec:cantata-sonata:carrier-ethernet-subscriber-uni:v0.3.0:all': '#/components/schemas/CarrierEthernetSubscriberUni'\n          'urn:mef:lso:spec:sonata:carrier-ethernet-operator-uni:v4.0.0:all': '#/components/schemas/CarrierEthernetOperatorUni'\n          'urn:mef:lso:spec:cantata-sonata:evplan-endpoint:v0.3.0:all': '#/components/schemas/EvplanEndpoint'\n          'urn:mef:lso:spec:cantata-sonata:evptree:v0.3.0:all': '#/components/schemas/Evptree'\n          'urn:mef:lso:spec:cantata-sonata:epl:v0.3.0:all': '#/components/schemas/Epl'\n          'urn:mef:lso:spec:cantata-sonata:evplan:v0.3.0:all': '#/components/schemas/Evplan'\n          'urn:mef:lso:spec:cantata-sonata:eptree:v0.3.0:all': '#/components/schemas/Eptree'\n          'urn:mef:lso:spec:sonata:access-eline:v4.0.0:all': '#/components/schemas/AccessEline'\n        propertyName: '@type'\n      properties:\n        '@type':\n          description: \u003e-\n            The name of the type that uniquely identifies the type of the\n            product that is the subject of the POQ Request. In case of MEF\n            product this is the URN provided in the Product Specification.\n          enum:\n            - 'urn:mef:lso:spec:cantata-sonata:evptree-endpoint:v0.3.0:all'\n            - 'urn:mef:lso:spec:cantata-sonata:eptree-endpoint:v0.3.0:all'\n            - 'urn:mef:lso:spec:cantata-sonata:evpl:v0.3.0:all'\n            - 'urn:mef:lso:spec:cantata-sonata:eplan:v0.3.0:all'\n            - 'urn:mef:lso:spec:cantata-sonata:eplan-endpoint:v0.3.0:all'\n            - \u003e-\n              urn:mef:lso:spec:cantata-sonata:carrier-ethernet-subscriber-uni:v0.3.0:all\n            - 'urn:mef:lso:spec:sonata:carrier-ethernet-operator-uni:v4.0.0:all'\n            - 'urn:mef:lso:spec:cantata-sonata:evplan-endpoint:v0.3.0:all'\n            - 'urn:mef:lso:spec:cantata-sonata:evptree:v0.3.0:all'\n            - 'urn:mef:lso:spec:cantata-sonata:epl:v0.3.0:all'\n            - 'urn:mef:lso:spec:cantata-sonata:evplan:v0.3.0:all'\n            - 'urn:mef:lso:spec:cantata-sonata:eptree:v0.3.0:all'\n            - 'urn:mef:lso:spec:sonata:access-eline:v4.0.0:all'\n          type: string\n      required:\n        - '@type'\n      type: object\n    MEFProductRefOrValue:\n      description: \u003e-\n        Used by the Buyer to point to existing and/or describe the desired shape\n        of the product. In case of `add` action - only `productConfiguration`\n        MUST be specified. For `modify` action - both `id` and\n        `productConfiguration` MUST be provided to point which product instance\n        to update and to what state. In `delete` only the `id` must be provided.\n      properties:\n        productSpecification:\n          $ref: '#/components/schemas/ProductSpecificationRef'\n        productOffering:\n          $ref: '#/components/schemas/ProductOfferingRef'\n        productConfiguration:\n          $ref: '#/components/schemas/MEFProductConfiguration'\n        productRelationship:\n          description: \u003e-\n            A list of references to existing products that are related to the\n            Product that would be delivered to fulfill the POQ Item.\n          items:\n            $ref: '#/components/schemas/ProductRelationshipWithGrouping'\n          type: array\n        href:\n          description: \u003e\n            Hyperlink to the referenced Product. Hyperlink MAY be used by the\n            Seller in responses. Hyperlink MUST be ignored by the Seller in case\n            it is provided by the Buyer in a request.\n          type: string\n        id:\n          description: \u003e\n            The unique identifier of an in-service Product that is the\n            qualification's subject. This field MUST be populated if an item\n            `action` is either `modify` or `delete`. This field MUST NOT be\n            populated if an item `action` is `add`.\n          type: string\n        place:\n          description: \u003e-\n            A list of locations that are related to the Product. For example an\n            installation location\n          items:\n            $ref: '#/components/schemas/RelatedPlaceRefOrValue'\n          type: array\n      type: object\n    MEFServiceabilityColor:\n      description: \u003e\n        A color that indicates confidence to service the request. When the item\n\n        state is `done.ready` the Seller **MUST** provide a value. It **MUST\n\n        NOT** be populated for other states.\n\n\n\n        Mapping between `ServiceabilityColor` and POQ Confidence Level:\n\n\n\n        | ServiceabilityColor      | MEF 79       | MEF 79\n        semantics                                                              |\n\n        |------------------------- | ------------ |\n        -----------------------------------------------------------------------------\n        |\n\n        | green                    | GREEN        |  The Seller has high\n        confidence that this Product can be delivered            |\n\n        | yellow                   | YELLOW       |  The Seller believes they\n        can deliver the Product but is not highly confident |\n\n        | red                      | RED          |  The Seller cannot deliver\n        the Product as specified                           |\n\n\n        Reference: MEF 79 (Sn 8.4.3.1)\n      enum:\n        - green\n        - yellow\n        - red\n      type: string\n    MEFSubUnit:\n      description: Allows for sub unit identification\n      properties:\n        subUnitNumber:\n          description: \u003e-\n            The discriminator used for the subunit, often just a simple number\n            but may also be a range.\n          type: string\n        subUnitType:\n          description: \u003e-\n            The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT,\n            WHARF.\n          type: string\n      required:\n        - subUnitNumber\n        - subUnitType\n      type: object\n    MegList:\n      enum:\n        - '0'\n        - '1'\n        - '2'\n        - '3'\n        - '4'\n        - '5'\n        - '6'\n        - '7'\n        - NONE\n      type: string\n    MepDirection:\n      description: Indicates whether this is an Up MEP or Down MEP\n      enum:\n        - UP\n        - DOWN\n      type: string\n    MepLevelAndDirection:\n      description: \u003e-\n        A 2-tuple \u003clevel, direction\u003e that defines the MEG Level and MEP\n        direction.\n      properties:\n        level:\n          description: The MEG level\n          maximum: 7\n          minimum: 0\n          type: integer\n        mepDirection:\n          description: Indicates whether this is an Up MEP or Down MEP\n          $ref: '#/components/schemas/MepDirection'\n      type: object\n    OneWayAvailabilityPmMetric:\n      description: \u003e-\n        MEF 10.4 sec. 8.8.7 and MEF 26.2 sec. 12.13.7 - One Way Availability\n        Performance Metric consisting of 1 parameter, a list of Ordered End\n        Point Pairs (referred to as S in MEF 10.4 and MEF 26.2), and the One Way\n        Availability Objective for this Class of Service Name and these Ordered\n        End Point Pairs.\n      properties:\n        oneWayAvailabilityObjective:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.7 and MEF 26.2 sec.12.13.7 - The PM Objective for\n            this Performance Metric (this CoS and these Ordered End Point Pairs)\n            expressed as a percentage.\n          $ref: '#/components/schemas/Percentage'\n        orderedPairList:\n          description: \u003e-\n            MEF 10.4 sec.  8.8.1.1 and MEF 26.2 sec. 12.13.1.1 - The set\n            (referred to as S in MEF 10.4 and MEF 26.2) of ordered pairs of EVC\n            or OVC End Points over which this Performance Metric parameters and\n            objective apply.\n          items:\n            $ref: '#/components/schemas/OrderedPair'\n          minItems: 1\n          type: array\n          uniqueItems: true\n      type: object\n    OneWayCompositePmMetric:\n      description: \u003e-\n        MEF 10.4 sec. 8.8.10 - One Way Composite Performance Metric consisting\n        of 7 parameters, a list of Ordered End Point Pairs (referred to as S in\n        MEF 10.4) , a Composite Performance number (referred to as U in MEF\n        10.4), indicators about Composite Frame Loss, Composite Frame Delay, and\n        Composite Frame Delay Variation (referred to as Wfl, Wfd, and Wfdv inMEF\n        10.4), Thresholds for Frame Delay and Delay Variation (referred to as DL\n        and Jt in MEF 10.4) and the One Way Composite Objective for this Class\n        of Service Name and these seven parameters. (Note: This Performance\n        Metric is not defined for OVC services).\n      properties:\n        oneWayIfdvThreshold:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.10 - One-way Frame Delay Variation threshold in\n            time units.\n          $ref: '#/components/schemas/TimeDuration'\n        cpmObjective:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.10 - The PM Objective for this Performance Metric\n            (this CoS and these 7 parameters) expressed as a percentage.\n          $ref: '#/components/schemas/Percentage'\n        compositeFrameDelay:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.10 - Composite indicator for One-way Frame Delay\n            equal to 0 or 1.\n          maximum: 1\n          minimum: 0\n          type: integer\n        compositeFrameDelayVariation:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.10 - Composite indicator for One-way Frame Delay\n            Variation equal to 0 or 1.\n          maximum: 1\n          minimum: 0\n          type: integer\n        oneWayFdThreshold:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.10 - Composite One-way Frame Delay threshold in\n            time units.\n          $ref: '#/components/schemas/TimeDuration'\n        compositeFrameLoss:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.10 - Composite indicator for One-way Frame Loss\n            equal to 0 or 1.\n          maximum: 1\n          minimum: 0\n          type: integer\n        orderedPairList:\n          description: \u003e-\n            MEF 10.4 sec.  8.8.1.1 - The set (referred to as S in MEF 10.4) of\n            ordered pairs of EVC End Points over which this Performance Metric\n            parameters and objective apply.\n          items:\n            $ref: '#/components/schemas/OrderedPair'\n          minItems: 1\n          type: array\n          uniqueItems: true\n        compositePerformanceIndicatorThreshold:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.10 - Composite Performance Indicator threshold\n            which if exceeded suggests an unacceptable time interval.\n          maximum: 1\n          minimum: 0\n          type: number\n      type: object\n    OneWayConsecutiveHighLossIntervalsPmMetric:\n      description: \u003e-\n        MEF 10.4 sec. 8.8.9 and MEF 26.2 sec. 12.13.9 - One Way Frame Delay\n        Range Performance Metric consisting of 2 parameters, a list of Ordered\n        End Point Pairs (referred to as S in MEF 10.4 and MEF 26.2) , a number\n        (referred to as p in MEF 10.4 and MEF 26.2), and the One Way Consecutive\n        High Loss Intervals Objective for this Class of Service Name and these\n        two parameters.\n      properties:\n        consecutiveNumberP:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.9 and MEF 26.2 sec.12.13.9 - The number of high\n            loss intervals that constitute a consecutive high loss interval.\n          minimum: 1\n          type: integer\n        oneWayChliObjective:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.9 and MEF 26.2 sec.12.13.9 - Performance Objective\n            expressed as a non-negative integer.\n          minimum: 1\n          type: integer\n        orderedPairList:\n          description: \u003e-\n            MEF 10.4 sec.  8.8.1.1 and MEF 26.2 sec. 12.13.1.1 - The set\n            (referred to as S in MEF 10.4 and MEF 26.2) of ordered pairs of EVC\n            or OVC End Points over which this Performance Metric parameters and\n            objective apply.\n          items:\n            $ref: '#/components/schemas/OrderedPair'\n          minItems: 1\n          type: array\n          uniqueItems: true\n      type: object\n    OneWayFrameDelayPmMetric:\n      description: \u003e-\n        MEF 10.4 sec. 8.8.2 and MEF 26.2 sec. 12.13.2 - One Way Frame Delay\n        Performance Metric consisting of 2 parameters, a list of Ordered End\n        Point Pairs (referred to as S in MEF 10.4 and MEF 26.2) , a percentile\n        (referred to as Pd in  MEF 10.4 and MEF 26.2), and the One Way Frame\n        Delay Objective for this Class of Service Name and these two parameters.\n      properties:\n        oneWayFdObjective:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.2 and MEF 26.2 sec. 12.13.2 - The Performance\n            Objective for this Performance Metric (this CoS and these 2\n            parameters). This is a unit of time greater than 0.\n          $ref: '#/components/schemas/TimeDuration'\n        oneWayFdPercentile:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.2 and MEF 26.2 sec. 12.13.2 (Pd) - A percentage in\n            (0,100] for Frame Delay metric.\n          $ref: '#/components/schemas/Percentage'\n        orderedPairList:\n          description: \u003e-\n            MEF 10.4 sec.  8.8.1.1 and MEF 26.2 sec. 12.13.1.1 - The set\n            (referred to as S in MEF 10.4 and MEF 26.2) of ordered pairs of EVC\n            or OVC End Points over which this Performance Metric parameters and\n            objective apply.\n          items:\n            $ref: '#/components/schemas/OrderedPair'\n          minItems: 1\n          type: array\n          uniqueItems: true\n      type: object\n    OneWayFrameDelayRangePmMetric:\n      description: \u003e-\n        MEF 10.4 sec. 8.8.4 and MEF 26.2 sec. 12.13.4 - One Way Frame Delay\n        Range Performance Metric consisting of 2 parameters, a list of Ordered\n        End Point Pairs (referred to as S in MEF 10.4 and MEF 26.2) , a\n        percentile (referred to as Pr in MEF 10.4 and MEF 26.2), and the One Way\n        Frame Delay Range Objective for this Class of Service Name and these two\n        parameters.\n      properties:\n        oneWayFdrPercentile:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.4 and MEF 26.2 sec.12.13.4 - A percentage in\n            (0,100] for Frame Delay Range metric.\n          $ref: '#/components/schemas/Percentage'\n        oneWayFdrObjective:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.4 and MEF 26.2 sec.12.13.4 - The Performance\n            Objective for this Performance Metric (this CoS and these 2\n            parameters). This is a unit of time \u003e0.\n          $ref: '#/components/schemas/TimeDuration'\n        orderedPairList:\n          description: \u003e-\n            MEF 10.4 sec.  8.8.1.1 and MEF 26.2 sec. 12.13.1.1 - The set\n            (referred to as S in MEF 10.4 and MEF 26.2) of ordered pairs of EVC\n            or OVC End Points over which this Performance Metric parameters and\n            objective apply.\n          items:\n            $ref: '#/components/schemas/OrderedPair'\n          minItems: 1\n          type: array\n          uniqueItems: false\n      type: object\n    OneWayFrameLostRatioPmMetric:\n      description: \u003e-\n        MEF 10.4 sec. 8.8.6 and MEF 26.2 sec. 12.13.6 - One Way Frame Loss Ratio\n        Performance Metric consisting of 1 parameter, a list of Ordered End\n        Point Pairs (referred to as S in MEF 10.4 and MEF 26.2), and the One Way\n        Frame Loss Ratio Objective for this Class of Service Name and these\n        Ordered End Point Pairs.\n      properties:\n        oneWayFlrObjective:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.6 and MEF 26.2 sec.12.13.6 - The Performance\n            Objective for this Performance Metric (this CoS and these Ordered\n            End Point Pairs).\n          $ref: '#/components/schemas/Percentage'\n        orderedPairList:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.1.1 and MEF 26.2 sec. 12.13.1.1 - The set\n            (referred to as S in MEF 10.4 and MEF 26.2) of ordered pairs of EVC\n            or OVC End Points over which this Performance Metric parameters and\n            objective apply.\n          items:\n            $ref: '#/components/schemas/OrderedPair'\n          minItems: 1\n          type: array\n          uniqueItems: true\n      type: object\n    OneWayHighLossIntervalPmMetric:\n      description: \u003e-\n        MEF 10.4 sec. 8.8.8 and MEF 26.2 sec. 12.13.8 - One Way High Loss\n        Intervals Performance Metric consisting of 1 parameter, a list of\n        Ordered End Point Pairs (referred to as S in MEF 10.4 and MEF 26.2), and\n        the One Way High Loss Intervals Objective for this Class of Service Name\n        and these Ordered End Point Pairs.\n      properties:\n        oneWayHighLossIntervalsObjective:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.8 and MEF 26.2 sec.12.13.8 - The PM Objective for\n            this Performance Metric (this CoS and these Ordered End Point Pairs)\n            expressed as a non-negative number.\n          minimum: 0\n          type: integer\n        orderedPairList:\n          description: \u003e-\n            MEF 10.4 sec.  8.8.1.1 and MEF 26.2 sec. 12.13.1.1 - The set\n            (referred to as S in MEF 10.4 and MEF 26.2) of ordered pairs of EVC\n            or OVC End Points over which this Performance Metric parameters and\n            objective apply.\n          items:\n            $ref: '#/components/schemas/OrderedPair'\n          minItems: 1\n          type: array\n          uniqueItems: true\n      type: object\n    OneWayInterFrameDelayVariationPmMetric:\n      description: \u003e-\n        MEF 10.4 sec. 8.8.5 and MEF 26.2 sec. 12.13.5 - One Way Frame Inter\n        Frame Delay Variation Performance Metric consisting of 3 parameters, a\n        list of Ordered End Point Pairs (referred to as S in MEF 10.4 and MEF\n        26.2) , a time duration (referred to as delta-tau in MEF 10.4 and MEF\n        26.2), a percentile (referred to as Pv in MEF 10.4 and MEF 26.2), and\n        the Inter Frame Delay Variation Objective for this Class of Service Name\n        and these three parameters.\n      properties:\n        oneWayIfdvObjective:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.5 and MEF 26.2 sec.12.13.5 - The Performance\n            Objective for this Performance Metric (this CoS and these 3\n            parameters). This is a unit of time \u003e0.\n          $ref: '#/components/schemas/TimeDuration'\n        oneWayIfdvPencentile:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.5 and MEF 26.2 sec.12.13.5 - A percentage in\n            (0,100] for Frame Delay metric.\n          $ref: '#/components/schemas/Percentage'\n        timeDuration:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.5 and MEF 26.2 sec.12.13.5 - A time duration. This\n            is the time difference between frames for which IFDV is measured. It\n            is called delta-tau in MEF 10.4 and MEF 26.2.\n          $ref: '#/components/schemas/TimeDuration'\n        orderedPairList:\n          description: \u003e-\n            MEF 10.4 sec.  8.8.1.1 and MEF 26.2 sec. 12.13.1.1 - The set\n            (referred to as S in MEF 10.4 and MEF 26.2) of ordered pairs of EVC\n            or OVC End Points over which this Performance Metric parameters and\n            objective apply.\n          items:\n            $ref: '#/components/schemas/OrderedPair'\n          minItems: 1\n          type: array\n          uniqueItems: false\n      type: object\n    OneWayMeanFrameDelayPmMetric:\n      description: \u003e-\n        MEF 10.4 sec. 8.8.3 and MEF 26.2 sec. 12.13.3 - One Way Frame Mean Delay\n        Performance Metric consisting of 1 parameter, a list of Ordered End\n        Point Pairs (referred to as S in MEF 10.4 and MEF 26.2), and the One Way\n        Mean Frame Delay Objective for this Class of Service Name and these\n        Ordered End Point Pairs.\n      properties:\n        oneWayMfdObjective:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.3 and MEF 26.2 sec. 12.13.3 - The Performance\n            Objective for this Performance Metric (this CoS and these Ordered\n            End Point Pairs). This is a unit of time \u003e0.\n          $ref: '#/components/schemas/TimeDuration'\n        orderedPairList:\n          description: \u003e-\n            MEF 10.4 sec.  8.8.1.1 and MEF 26.2 sec. 12.13.1.1 - The set\n            (referred to as S in MEF 10.4 and MEF 26.2) of ordered pairs of EVC\n            or OVC End Points over which this Performance Metric parameters and\n            objective apply.\n          items:\n            $ref: '#/components/schemas/OrderedPair'\n          minItems: 1\n          type: array\n          uniqueItems: true\n      type: object\n    OperatorUniCommon:\n      description: \u003e-\n        This class contains all of the Operator UNI Services Attributes. This\n        class is used to compose the OperatorUNI class.\n      properties:\n        aggregationLinkMap:\n          description: \u003e-\n            MEF 26.2 sec. 14.6 and 802.1AX-2014 sec.  6.6.2.1 - A mapping of a\n            list of Port Conversation IDs (i.e., VLAN IDs or zero for untagged\n            frames) to an ordered list of physical links if there are multiple\n            physical links in the UNI and the link aggregation is ALL_ACTIVE.\n          items:\n            $ref: '#/components/schemas/ConversationIdToAggregationLinkMap'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        defaultCeVlanId:\n          description: \u003e-\n            MEF 26.2 sec. 14.9 - The value of the Operator UNI Default CE-VLAN\n            ID is an integer that is the CE-VLAN ID value assigned to Untagged\n            Service Frames and Priority Tagged Service Frames.\n          maximum: 4094\n          minimum: 1\n          type: integer\n        maximumNumberOfEndPoints:\n          description: \u003e-\n            MEF 26.2 sec. 14.10 - The maximum number of OVC End Points that the\n            Operator CEN can support at the UNI.\n          maximum: 4094\n          minimum: 1\n          type: integer\n        ingressBandwidthProfile:\n          description: \u003e-\n            MEF 26.2 sec. 14.12 - A single set Bandwidth Profile Flow parameters\n            that covers all OVCs at the UNI. The value is either Disabled (empty\n            array) or a BWP.\n          items:\n            $ref: '#/components/schemas/BwpFlow'\n          maxItems: 1\n          minItems: 0\n          type: array\n          uniqueItems: true\n        lagLinkMeg:\n          description: \u003e-\n            MEF 26.2 sec. 14.16 - Indicates if the Service Provider has\n            instantiated a LAG Link MEG End Point (MEP) on each physical link in\n            the UNI if the UNI has more than one physical link (ENABLED) or not\n            (DISABLED).\n          $ref: '#/components/schemas/EnabledDisabled'\n        l2cpAddressSet:\n          description: \u003e-\n            MEF 26.2 sec. 14.20 and MEF 45.1 sec. 8.1 - The subset of the Bridge\n            Reserved Addresses that are Peered or Discarded (i.e. not Passed).\n            The value CTB or CTB2 must be used for port-based (private) services\n            and CTA for vlan-based (virtual private) services. Per MEF 45.1: If\n            an OVC has an OVC End Point at a UNI, then the value of the Operator\n            UNI L2CP Address Set Service Attribute MUST be the same as the OVC\n            L2CP Address Set Service Attribute.\n          $ref: '#/components/schemas/L2cpAddressSet'\n        linkOam:\n          description: \u003e-\n            MEF 26.2 sec. 14.14 - Controls when and how Link OAM per IEEE Std\n            802.3-2015 is run on the physical links in the UNI.\n          $ref: '#/components/schemas/EnabledDisabled'\n        meg:\n          description: \u003e-\n            MEF 26.2 sec. 14.15 - Indicates if the Service Provider has\n            instantiated a MEG End Point (MEP) at the UNI Maintenance Entity\n            Group (MEG) Level (ENABLED) or not (DISABLED).\n          $ref: '#/components/schemas/EnabledDisabled'\n        linkAggregation:\n          description: \u003e-\n            MEF 26.2 sec. 14.5 - Service Attribute representing Link Aggregation\n            types. NONE-No Link Aggregation is used. 2_LINK_ACTIVE_STANDBY-The\n            SP network uses Link Aggregation as in either Clause 5.6.1 of IEEE\n            Std 802.1AX-2008 [2] or Clause 6.7.1 of IEEE Std 802.1AX-2014 with\n            one Link Aggregation Group (LAG) across the links supporting the UNI\n            such that all Service Frames are carried on only one of the two\n            links when both links are operational. ALL_ACTIVE-The SP Network\n            uses Link Aggregation as specified in Clause 5.3 of IEEE Std\n            802.1AX-2014, including the use of the version 2 LACPDUs as\n            specified in Clause 5.3.1h of IEEE Std 802.1AZ-2014, with one Link\n            Aggregation Group (LAG) across the links. OTHER-The\n            Operator/Subscriber/Service Provider agree on another other\n            resiliency mechanism.\n          $ref: '#/components/schemas/LinkAggType'\n        egressBandwidthProfile:\n          description: \u003e-\n            MEF 26.2 sec. 14.13 - A single set of Bandwidth Profile Flow\n            parameters that covers all OVCs at the UNI. The value is either\n            Disabled (empty array) or a BWP.\n          items:\n            $ref: '#/components/schemas/BwpFlow'\n          maxItems: 1\n          minItems: 0\n          type: array\n          uniqueItems: true\n        l2cpPeering:\n          description: \u003e-\n            MEF 26.2 sec. 14.21 and  and MEF 45.1 sec. 8.1 - L2CP Peering\n            Service Attribute defined in MEF 45.1 specifies which protocols, if\n            any, are peered at the UNI. The L2CP Peering service attribute value\n            must be an empty list, or a list of entries identifying protocols to\n            be Peered where each entry consists of {Destination Address,\n            Protocol Identifier} or {Destination Address, Protocol Identifier,\n            Link Identifier}.\n          items:\n            $ref: '#/components/schemas/L2cpPeering'\n          minItems: 0\n          type: array\n          uniqueItems: false\n        maximumNumberOfCeVlanIdsPerEndPoint:\n          description: \u003e-\n            MEF 26.2 sec. 14.11 - An integer between 1 and 4094 inclusive that\n            limits the number of C-Tag VLAN IDs that can map to each OVC End\n            Point at the UNI.\n          maximum: 4094\n          minimum: 1\n          type: integer\n        tokenShare:\n          description: \u003e-\n            MEF 26.2 sec. 14.18 - An attribute that indicates whether Bandwidth\n            Profile Envelopes containing more than one Bandwidth Profile Flow\n            are supported by the Service Provider at the Operator UNI.\n          $ref: '#/components/schemas/EnabledDisabled'\n        maximumServiceFrameSize:\n          description: \u003e-\n            MEF 26.2 sec. 14.8 - Specifies the maximum size of Service Frames\n            that can be transmitted across the UNI.\n          minimum: 1522\n          type: integer\n        envelopes:\n          description: \u003e-\n            MEF 26.2 sec. 14.19 - The Envelopes and Envelope Coupling Flag\n            values to which Bandwidth Profile Flows can be mapped. Value is list\n            of {envelopeID, couplingFlagForIndexZero}. Note: Envelopes for the\n            UNI can also be specified at the OVC End Points associated with the\n            UNI.\n          items:\n            $ref: '#/components/schemas/Envelope'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        listOfPhysicalLinks:\n          description: \u003e-\n            MEF 26.2 sec. 14.2, 14.3 - This Service Attribute combines several\n            of the MEF 26.2 Objects into a single n-tuple that is consistent\n            with the way this information is described in MEF 10.4. The value of\n            the Operator UNI List of Physical Links Service Attribute is a list\n            of 6-tuples of the form ?id, physicalLink, synchronousEthernet,\n            precisionTiming, uniConnectorType,uniConnectorGender?, with one list\n            item for each physical link. The value of id is an identifier for\n            the physical link. The value of physicalLink is the specific\n            Ethernet physical layer type. synchronousEthernet indicates if\n            synchronous Ethernet is used on the physical link and has the value\n            Enabled or Disabled. The value of precisionTiming indicates if the\n            Precision Time Protocol is used on the physical link and has the\n            value Enabled or Disabled. The values of uniConnectorType and\n            uniConnectorGender specify the type of connector used. Note that the\n            id and the physicalLink come from the CarrierEthernetPhysicalLink\n            class.\n          items:\n            $ref: '#/components/schemas/UniPhysicalLink'\n          minItems: 1\n          type: array\n          uniqueItems: true\n      type: object\n    OrderedPair:\n      description: \u003e-\n        Performance Metrics (except for Group Availability) are specified for a\n        list of Ordered End Point Pairs. In other words a Frame Delay objective\n        (for example) is specified from ?A to B? and from ?C to D?. This class\n        defines one Ordered End Point Pair.\n      properties:\n        toCarrierEthernetServiceEndPoint:\n          description: \u003e-\n            This is the EVC End Point ID for an EVC End Point in the service or\n            OVC End Point ID for an OVC End Point in the service.\n          type: string\n        fromCarrierEthernetServiceEndPoint:\n          description: \u003e-\n            This is the EVC End Point ID for an EVC End Point in the service or\n            OVC End Point ID for an OVC End Point in the service.\n          type: string\n      type: object\n    OvcEgressMap:\n      discriminator:\n        mapping:\n          CC_DEI: '#/components/schemas/DeiFromCosColor'\n          CN_PCP_CC_DEI: '#/components/schemas/PcpFromCosDeiFromCosColor'\n          CC_PCP: '#/components/schemas/PcpFromCosColor'\n          CN_PCP: '#/components/schemas/PcpFromCos'\n        propertyName: mapType\n      properties:\n        mapType:\n          enum:\n            - CC_DEI\n            - CN_PCP_CC_DEI\n            - CC_PCP\n            - CN_PCP\n          type: string\n      required:\n        - mapType\n      type: object\n    PcpFromCos:\n      allOf:\n        - $ref: '#/components/schemas/OvcEgressMap'\n        - description: \u003e-\n            The PCP Field in the Egress EI Frame is determined from the Class of\n            Service of the corresponding Ingress EI Frame. This is a list that\n            contains an entry for Class of Service Name that includes the CoS\n            Name and the PCP value  (or DISCARD) to use for that CoS. For\n            example CoS=Platinum --\u003e PCP = 6. This affects the C-tag at the UNI\n            and the S-tag at the ENNI.\n          properties:\n            cnPcpEntries:\n              description: \u003e-\n                A list of mappings of each CoS to an egress PCP value or\n                DISCARD.\n              items:\n                $ref: '#/components/schemas/CnPcp'\n              minItems: 1\n              type: array\n              uniqueItems: true\n          type: object\n      x-discriminator-value: CN_PCP\n    PcpFromCosColor:\n      allOf:\n        - $ref: '#/components/schemas/OvcEgressMap'\n        - description: \u003e-\n            The PCP Field in the Egress EI Frame is determined from the Class of\n            Service Name and the Frame Color. This is a list that contains an\n            entry for Class of Service Name that includes the CoS Name and two\n            PCP values (or DISCARD), one for Green frames and one for Yellow\n            frames.  For example CoS=Platinum and Color=Green --\u003e PCP = 6  and\n            Color=Yellow --\u003e PCP = 5. This affects the C-tag at the UNI and the\n            S-tag at the ENNI.\n          properties:\n            ccPcpEntries:\n              description: \u003e-\n                A list of entries, one per CoS that indicates the PCP value for\n                Green Frames and the PCP value for Yellow Frames.\n              items:\n                $ref: '#/components/schemas/CcPcp'\n              minItems: 1\n              type: array\n              uniqueItems: true\n          type: object\n      x-discriminator-value: CC_PCP\n    PcpFromCosDeiFromCosColor:\n      allOf:\n        - $ref: '#/components/schemas/OvcEgressMap'\n        - description: \u003e-\n            This is a combination of PCP from CoS and DEI from Color. The PCP\n            Field in the Egress EI Frame is determined from the Class of Service\n            and the DEI Field is determined from the Frame Color. This is a list\n            that contains an entry for Class of Service Name that includes the\n            CoS Name, PCP value to use (or DISCARD) and the DEI value to use for\n            each color for that CoS Name. For example CoS=Platinum and\n            Color=Green --\u003e PCP = 6/DEI = 1 and Color=Yellow --\u003e DEI=0. This\n            affects the C-tag at the UNI and the S-tag at the ENNI.\n          properties:\n            cnPcpCcDeiEntries:\n              description: \u003e-\n                A list of entries, one per CoS, the specifies the PCP value for\n                the CoS and the DEI values for Green and Yellow frames in the\n                CoS.\n              items:\n                $ref: '#/components/schemas/PcpFromCosDeiFromCosColor'\n              minItems: 1\n              type: array\n              uniqueItems: true\n          type: object\n      x-discriminator-value: CN_PCP_CC_DEI\n    PcpVal:\n      description: A PCP value from 0 to 7 or UNTAGGED\n      enum:\n        - '0'\n        - '1'\n        - '2'\n        - '3'\n        - '4'\n        - '5'\n        - '6'\n        - '7'\n        - UNTAGGED\n      type: string\n    PcpValue:\n      enum:\n        - '0'\n        - '1'\n        - '2'\n        - '3'\n        - '4'\n        - '5'\n        - '6'\n        - '7'\n      type: string\n    PcpValueAndDiscard:\n      enum:\n        - '0'\n        - '1'\n        - '2'\n        - '3'\n        - '4'\n        - '5'\n        - '6'\n        - '7'\n        - DISCARD\n      type: string\n    Percentage:\n      description: This is a number of percent - a floating point number between 0 and 100\n      maximum: 100\n      minimum: 0\n      type: number\n    PhysicalLink:\n      description: An Ethernet physical layer\n      enum:\n        - 1BASE5\n        - 2BASE_TL\n        - 10BASE2\n        - 10BASE5\n        - 10BASE_F\n        - 10BASE_FB\n        - 10BASE_FL\n        - 10BASE_FP\n        - 10BASE_T\n        - 10BASE_T1L\n        - 10BASE_T1S\n        - 10BASE_TE\n        - 10BROAD36\n        - 10PASS_TS\n        - 100BASE_BX10\n        - 100BASE_FX\n        - 100BASE_LX10\n        - 100BASE_T\n        - 100BASE_T1\n        - 100BASE_T2\n        - 100BASE_T4\n        - 100BASE_TX\n        - 100BASE_X\n        - 1000BASE_BX10\n        - 1000BASE_CX\n        - 1000BASE_KX\n        - 1000BASE_LX\n        - 1000BASE_LX10\n        - 1000BASE_PX10\n        - 1000BASE_PX20\n        - 1000BASE_RHA\n        - 1000BASE_RHB\n        - 1000BASE_RHC\n        - 1000BASE_SX\n        - 1000BASE_T\n        - 1000BASE_T1\n        - 1000BASE_X\n        - 2_5GBASE_KX\n        - 2_5GBASE_T\n        - 2_5GBASE_T1\n        - 5GBASE_KR\n        - 5GBASE_T\n        - 5GBASE_T1\n        - 10GBASE_CX4\n        - 10GBASE_E\n        - 10GBASE_ER\n        - 10GBASE_EW\n        - 10GBASE_KR\n        - 10GBASE_KX4\n        - 10GBASE_L\n        - 10GBASE_LR\n        - 10GBASE_LRM\n        - 10GBASE_LW\n        - 10GBASE_LX4\n        - 10GBASE_R\n        - 10GBASE_S\n        - 10GBASE_SR\n        - 10GBASE_SW\n        - 10GBASE_T\n        - 10GBASE_T1\n        - 10GBASE_W\n        - 10GBASE_X\n        - 25GBASE_CR\n        - 25GBASE_CR_S\n        - 25GBASE_ER\n        - 25GBASE_KR\n        - 25GBASE_KR_S\n        - 25GBASE_LR\n        - 25GBASE_SR\n        - 25GBASE_T\n        - 40GBASE_CR4\n        - 40GBASE_ER4\n        - 40GBASE_FR\n        - 40GBASE_KR4\n        - 40GBASE_LR4\n        - 40GBASE_R\n        - 40GBASE_SR4\n        - 40GBASE_T\n        - 50GBASE_CR\n        - 50GBASE_ER\n        - 50GBASE_FR\n        - 50GBASE_KR\n        - 50GBASE_LR\n        - 50GBASE_SR\n        - 100GBASE_CR10\n        - 100GBASE_CR2\n        - 100GBASE_CR4\n        - 100GBASE_DR\n        - 100GBASE_ER4\n        - 100GBASE_KP4\n        - 100GBASE_KR2\n        - 100GBASE_KR4\n        - 100GBASE_LR4\n        - 100GBASE_R\n        - 100GBASE_SR10\n        - 100GBASE_SR2\n        - 100GBASE_SR4\n        - 200GBASE_CR4\n        - 200GBASE_DR4\n        - 200GBASE_ER4\n        - 200GBASE_FR4\n        - 200GBASE_KR4\n        - 200GBASE_LR4\n        - 200GBASE_SR4\n        - 400GBASE_DR4\n        - 400GBASE_ER8\n        - 400GBASE_FR8\n        - 400GBASE_LR8\n        - 400GBASE_SR16\n        - 400GBASE_SR4_2\n        - 400GBASE_SR8\n        - OTHER\n      type: string\n    ProductActionType:\n      description: |\n        Action to be performed on the Product Item. The action types are\n        described in MEF 79 (Sn 8.4.1.1).\n\n        The following mapping has been used between `ProductActionType` and MEF\n        79:\n\n        | ProductActionType | MEF 79     |\n        |------------------ | ---------- |\n        | add               | INSTALL    |\n        | modify            | CHANGE     |\n        | delete            | DISCONNECT |\n      enum:\n        - add\n        - modify\n        - delete\n      type: string\n    ProductOfferingQualification:\n      allOf:\n        - $ref: '#/components/schemas/ProductOfferingQualification_Common'\n        - properties:\n            productOfferingQualificationItem:\n              description: \u003e-\n                One or more of Product Offering Qualification Items. It MUST\n                contain exactly one entry for each item in the POQ request.\n              items:\n                $ref: '#/components/schemas/ProductOfferingQualificationItem'\n              minItems: 1\n              type: array\n            effectiveQualificationDate:\n              description: \u003e-\n                Date and time (set by the Seller) when the POQ state was set to\n                one of the completion states (done.ready,\n                done.unable_to_provide, terminated_with_error). The Seller MUST\n                NOT provide this attribute until mentioned states are achieved.\n              format: date-time\n              type: string\n            expectedPOQCompletionDate:\n              description: \u003e-\n                The date the Seller expects to provide qualification result. Set\n                by the Seller in case of providing a deferred response when the\n                POQ is in an acknowledged or inProgress state.\n              format: date-time\n              type: string\n            stateChange:\n              description: \u003e\n                A log of all state transitions for the POQ. It must be in sync\n                with the most recent POQ Request state.\n              items:\n                $ref: '#/components/schemas/MEFPOQStateChange'\n              type: array\n            href:\n              description: \u003e\n                Hyperlink to this POQ. Hyperlink MAY be used by the Seller in\n                responses. Hyperlink MUST be ignored by the Seller in case it is\n                provided by the Buyer in a request.\n              type: string\n            id:\n              description: \u003e-\n                The Serviceability Request's unique identifier assigned by the\n                Seller.\n              type: string\n            state:\n              $ref: '#/components/schemas/MEFPOQTaskStateType'\n          required:\n            - id\n            - productOfferingQualificationItem\n            - state\n          type: object\n      description: \u003e\n        Represents a response to the Buyer POQ inquiry. This type defines a set\n        of attributes that are assigned by the Seller while processing the\n        request. A POQ response is a combination of attributes defined here with\n        common attributes that are sent in the request. This type is used in\n        response to an immediate request and POQ retrieval by an identifier.\n        Reference MEF 79 (Sn 8.7 and 8.4.3).\n    ProductOfferingQualificationItem:\n      allOf:\n        - $ref: '#/components/schemas/ProductOfferingQualificationItem_Common'\n        - properties:\n            terminationError:\n              description: \u003e\n                A list of text-based reasons the Seller MUST provide when the\n                request cannot be processed. When item state is\n                `terminatedWithError` the Seller **MUST** provide at least one\n                termination error.\n              items:\n                $ref: '#/components/schemas/TerminationError'\n              type: array\n            serviceabilityConfidence:\n              $ref: '#/components/schemas/MEFServiceabilityColor'\n            serviceabilityConfidenceReason:\n              description: \u003e-\n                A free text description of the reason a particular color is\n                being provided.\n              type: string\n            alternateProductOfferingProposal:\n              description: \u003e\n                A list of one or more alternative Product Offerings that the\n                Seller is proposing to the Buyer. If 1) the Buyer has set\n                `provideAlternate=true`;  2) the Seller has determined that the\n                POQ Confidence Level for this item is `yellow` or `red`; and  3)\n                The Seller has alternate Products (e.g. similar but lower\n                bandwidth) that may be adequate.\n\n                **MUST NOT** be specified if 'state' is 'terminatedWithError' or\n                'done.abandoned'.\n              items:\n                $ref: '#/components/schemas/AlternateProductOfferingProposal'\n              type: array\n            installationInterval:\n              $ref: '#/components/schemas/Duration'\n            guaranteedUntilDate:\n              description: \u003e\n                Date until the Seller guarantees the qualification result.\n                **MUST NOT** be specified if 'state' is 'terminatedWithError' or\n                'done.abandoned'.\n              format: date-time\n              type: string\n            stateChange:\n              description: \u003e\n                A log of all state transitions for the POQ Item. It must be in\n                sync with the most recent POQ Item's state.\n              items:\n                $ref: '#/components/schemas/MEFPOQItemStateChange'\n              type: array\n            state:\n              $ref: '#/components/schemas/MEFPOQItemTaskStateType'\n          required:\n            - state\n          type: object\n      description: \u003e-\n        An individual article included in a POQ that describes a Product of a\n        particular type (Product Offering) being delivered to a specific\n        geographical location.  The objective is to determine if it is feasible\n        for the Seller to deliver this item as described and for the Seller to\n        inform the Buyer of the estimated time interval to complete this\n        delivery.\n\n        Reference: MEF 79 (Sn 8.4.3.1)\n    ProductOfferingQualificationItem_Common:\n      description: \u003e\n        Common attributes shared between a POQ request and response.  These\n        attributes are provided by the Buyer and must not be modified by the\n        Seller.\n      properties:\n        product:\n          $ref: '#/components/schemas/MEFProductRefOrValue'\n        qualificationItemRelationship:\n          description: |\n            A list of references to related POQ items in this POQ\n          items:\n            $ref: '#/components/schemas/QualificationItemRelationship'\n          type: array\n        relatedContactInformation:\n          description: \u003e-\n            Contact information of an individual or organization playing a role\n            for this POQ Item\n\n            (e.g. for MEF 79: POQ Item Location Contact, role=locationContact)\n          items:\n            $ref: '#/components/schemas/RelatedContactInformation'\n          type: array\n        action:\n          $ref: '#/components/schemas/ProductActionType'\n        id:\n          description: \u003e\n            Id of this POQ item which is unique within the POQ. Assigned by the\n            Buyer.\n          type: string\n      required:\n        - action\n        - id\n        - product\n      type: object\n    ProductOfferingQualificationItem_Create:\n      allOf:\n        - $ref: '#/components/schemas/ProductOfferingQualificationItem_Common'\n        - type: object\n      description: \u003e-\n        This structure serves as a request for a product offering qualification\n        item.\n\n        A product qualification item is an individual article included in a POQ\n        that describes a Product of a particular type (Product Offering) being\n        delivered to the geographic address  or a service site specified by the\n        Buyer.\n\n        The objective is to determine if it is feasible for the Seller to\n        deliver this item as described and for the Seller to inform the Buyer of\n        the estimated time interval to complete this delivery.\n\n        The modelling pattern introduces the `Common` supertype to aggregate\n        attributes that are common to both `ProductOfferingQualificationItem`\n        and `ProductOfferingQualificationItem_Create`. It happens that it is the\n        Create type has a subset of attributes of the response type and does not\n        introduce any new, thus the `Create` type has an empty definition.\n\n        Reference: MEF 79 (Sn 8.4.1.1)\n    ProductOfferingQualification_Common:\n      description: \u003e\n        Defines a set of POQ attributes that might be used by the Buyer and\n        cannot be modified by the Seller. The `relatedContactInformation`\n        entries provided by the Buyer cannot be changed by the Seller, however\n        the Seller might append related contact information to that list.`\n      properties:\n        instantSyncQualification:\n          default: false\n          description: \u003e-\n            If this flag is set to Yes, Buyer requests to have an instant\n            qualification to be provided in operation POST response\n          type: boolean\n        relatedContactInformation:\n          description: |-\n            Party playing a role for this qualification. MEF 79 mandates\n            providing 'Buyer Contact Information' in the request\n            ('role=buyerContactInformation') and 'Seller Contact Information'\n            in the response ('role=sellerContactInformation')\n          items:\n            $ref: '#/components/schemas/RelatedContactInformation'\n          minItems: 1\n          type: array\n        externalId:\n          description: \u003e-\n            ID given by the consumer and only understandable by him (to\n            facilitate his searches afterwards)\n          type: string\n        provideAlternative:\n          default: false\n          description: \u003e-\n            Allows the Buyer to indicate if he is willing to get an alternate\n            proposal if requested product not available.\n          type: boolean\n        projectId:\n          description: \u003e-\n            This value MAY be assigned by the Buyer to identify a project the\n            serviceability request is associated with.\n          type: string\n        requestedPOQCompletionDate:\n          description: \u003e-\n            The latest date a the POQ completion is expected. This attribute is\n            required when `instantSyncQualification=false`\n          format: date-time\n          type: string\n      required:\n        - relatedContactInformation\n      type: object\n    ProductOfferingQualification_Create:\n      allOf:\n        - $ref: '#/components/schemas/ProductOfferingQualification_Common'\n        - properties:\n            productOfferingQualificationItem:\n              description: A non-empty list of POQ items\n              items:\n                $ref: '#/components/schemas/ProductOfferingQualificationItem_Create'\n              minItems: 1\n              type: array\n          required:\n            - productOfferingQualificationItem\n          type: object\n      description: \u003e\n        Represents a request formulated by the Buyer that is composed of product\n        offering qualification items.\n\n        Reference: MEF 79 (Sn 8.4)\n    ProductOfferingQualification_Find:\n      description: \u003e\n        This class represent a single list item for the response of\n        `listProductOfferingQualification` operation. \n\n        Reference: MEF 79 (Sn 8.6)\n      properties:\n        externalId:\n          description: \u003e-\n            ID given by the consumer and only understandable by him (to\n            facilitate his searches afterwards)\n          type: string\n        id:\n          description: The POQ Request's unique identifier.\n          type: string\n        state:\n          $ref: '#/components/schemas/MEFPOQTaskStateType'\n        projectId:\n          description: 'The project ID specified by the Buyer in the POQ Request, if any.'\n          type: string\n        requestedPOQCompletionDate:\n          description: \u003e\n            The latest date the POQ completion is expected by the Buyer, if\n            specified by the Buyer.\n          format: date\n          type: string\n      required:\n        - id\n        - state\n      type: object\n    ProductOfferingRef:\n      description: \u003e-\n        A reference to a Product Offering offered by the Seller to the Buyer.  A\n        Product Offering contains the commercial and technical details of a\n        Product sold by a particular Seller. A Product Offering defines all of\n        the commercial terms and, through association with a particular Product\n        Specification, defines all the technical attributes and behaviors of the\n        Product. A Product Offering may constrain the allowable set of\n        configurable technical attributes and/or behaviors specified in the\n        associated Product Specification. Defined in MEF 79 Section 8.4.1.1\n      properties:\n        href:\n          description: \u003e\n            Hyperlink to a Product Offering in Sellers catalog. In case Seller\n            is not providing a catalog API this field is not used. The catalog\n            is provided by the Seller to the Buyer during onboarding. Hyperlink\n            MAY be used by the Seller in responses   Hyperlink MUST be ignored\n            by the Seller in case it is provided by the Buyer in a request.\n          type: string\n        id:\n          description: \u003e-\n            id of a Product Offering. It is assigned by the Seller. The Buyer\n            and the Seller exchange information about offerings' ids during the\n            onboarding process.\n          type: string\n      required:\n        - id\n      type: object\n    ProductRelationshipWithGrouping:\n      description: \u003e-\n        A relationship to existing Product. The requirements for usage for given\n        Product are described in the Product Specification. The \"WithGrouping\"\n        flavour of the Product Relationship allows for providing a list of\n        related product identifiers within a single Product Relationship. This\n        can be later used while processing the request as defined in the Product\n        Specification. The `groupingKey` attribute is used to achieve this\n        behavior in the API by marking the list of\n        `ProductRelationshipWithGroupings` within a `product` with a common key.\n      properties:\n        relationshipType:\n          description: \u003e-\n            Specifies the type (nature) of the relationship to the related\n            Product. The nature of required relationships varies for Products of\n            different types. For example, a UNI or ENNI Product may not have any\n            relationships, but an Access E-Line may have two mandatory\n            relationships (related to the UNI on one end and the ENNI on the\n            other). More complex Products such as multipoint IP or Firewall\n            Products may have more complex relationships. As a result, the\n            allowed and mandatory `relationshipType` values are defined in the\n            Product Specification.\n          type: string\n        href:\n          description: \u003e\n            Hyperlink to the product in Seller's inventory that is referenced\n            Hyperlink MAY be set by the Seller in responses. Hyperlink MUST be\n            ignored by the Seller in case it is provided by the Buyer in a\n            request.\n          type: string\n        id:\n          description: unique identifier of a Product that is referenced\n          type: string\n        groupingKey:\n          description: \u003e\n            MEF 79.0.1. Introduces a list of related ids for the\n            ProductRelationship. For sake of TMF compliance, a `groupingKey` is\n            introduced to retain id as a simple attribute. Ids from\n            relationships having the same `groupingKey` and `relationshipType`\n            MUST be treated as a list of identifiers.\n\n            Reference: MEF 79.0.1 (Sn 7)\n          type: string\n      required:\n        - id\n        - relationshipType\n      type: object\n    ProductSpecificationRef:\n      description: \u003e-\n        A reference to a structured set of well-defined technical attributes\n        and/or behaviors that are used to construct a Product Offering for sale\n        to a market.\n      properties:\n        href:\n          description: \u003e\n            Hyperlink to a Product Specification in Sellers catalog. In case\n            Seller is not providing a catalog API this field is not used. The\n            catalog is provided by the Seller to the Buyer during onboarding.\n            Hyperlink MAY be used by the Seller in responses. Hyperlink MUST be\n            ignored by the Seller in case it is provided by the Buyer in a\n            request.\n          type: string\n        id:\n          description: Unique identifier of the product specification\n          type: string\n      required:\n        - id\n      type: object\n    QualificationItemRelationship:\n      description: \u003e-\n        The relationship between product offering qualification items that can\n        be used to validate business rules between POQ items.\n\n        Reference: MEF 79.0.1 (Sn 6)\n      properties:\n        relationshipType:\n          description: \u003e\n            One of the relationship types defined in the Product Specification.\n            For example: \"relies on\".\n          type: string\n        id:\n          description: An identifier of the targeted POQ item within the same POQ request\n          type: string\n      required:\n        - id\n        - relationshipType\n      type: object\n    RelatedContactInformation:\n      description: \u003e-\n        Contact data for a person or organization that is involved in the\n        product offering qualification. In a given context it is always\n        specified by the Seller (e.g. Seller Contact Information) or by the\n        Buyer. \n\n        Reference: MEF 79 (Sn 8.11)\n      properties:\n        number:\n          description: Phone number\n          type: string\n        emailAddress:\n          description: Email address\n          type: string\n        role:\n          description: A role of the particular contact in the request\n          type: string\n        postalAddress:\n          $ref: '#/components/schemas/FieldedAddress'\n        organization:\n          description: The organization or company that the contact belongs to\n          type: string\n        name:\n          description: Name of the contact\n          type: string\n        numberExtension:\n          description: Phone number extension\n          type: string\n      required:\n        - emailAddress\n        - name\n        - number\n        - role\n      type: object\n    RelatedPlaceRefOrValue:\n      description: \u003e-\n        Place defines the places (locations) where the products being subject of\n        this qualification are to be provided.\n      discriminator:\n        mapping:\n          FieldedAddress: '#/components/schemas/FieldedAddress'\n          FormattedAddress: '#/components/schemas/FormattedAddress'\n          GeographicAddressLabel: '#/components/schemas/GeographicAddressLabel'\n          MEFGeographicPoint: '#/components/schemas/MEFGeographicPoint'\n          GeographicAddressRef: '#/components/schemas/GeographicAddressRef'\n          GeographicSiteRef: '#/components/schemas/GeographicSiteRef'\n        propertyName: '@type'\n      properties:\n        role:\n          description: \u003e-\n            Role of this place. The values that can be specified here are\n            described by Product Specification (e.g. \"INSTALL_LOCATION\").\n          type: string\n        '@type':\n          description: \u003e\n            This field is used as discriminator. The value is the name of one of\n            the types that inherit from it using 'allOf', i.e. one of\n            FieldedAddress, FormattedAddress, GeographicAddressLabel,\n            MEFGeographicPoint, GeographicAddressRef, GeographicSiteRef.\n            Moreover, it might discriminate for an additional related place as\n            defined in '@schemaLocation'.\n          enum:\n            - FieldedAddress\n            - FormattedAddress\n            - GeographicAddressLabel\n            - MEFGeographicPoint\n            - GeographicAddressRef\n            - GeographicSiteRef\n          type: string\n        '@schemaLocation':\n          description: \u003e-\n            A URL to a JSON-Schema file that defines additional attributes and\n            relationships. May be used to define additional related place types.\n            Usage of this attribute must be agreed between Buyer and Seller.\n          format: uri\n          type: string\n      required:\n        - '@type'\n        - role\n      type: object\n    SlsCosNameEntry:\n      description: \u003e-\n        This is the specification of Performance Metrics (and parameters) for\n        one Class of Service. The first element is the CoS Name. This MUST be\n        unique, i.e. there can not be two instances of this Class with the same\n        CoS Name. The CoS Name is followed by three parameters and then lists of\n        Performance Metrics.\n      properties:\n        thresholdC:\n          description: \u003e-\n            MEF 10.4 sec. 8.8 and MEF 26.2 sec. 12.13 - thresholdC is a real\n            number in the range [0,1] used as a threshold to determine whether a\n            given time interval ?tk has high loss.\n          maximum: 1\n          minimum: 0\n          type: number\n        oneWayConsecutiveHighLossIntervalsPmMetric:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.9 and MEF 26.2 sec. 12.13.9 -\n            oneWayConsecutiveHighLossIntervalsPmMetric is a reference to zero or\n            more instances of One Way Consecutive High Loss Intervals\n            Performance Metric. Each reference contains a set of parameters and\n            performance objective for the Performance Metric. If there are 0\n            instances then this Class of Service does not have an objective for\n            One Way CHLI. If there are multiple instances for this Class of\n            Service then at least one of the parameters must be different\n            between the instances.\n          items:\n            $ref: '#/components/schemas/OneWayConsecutiveHighLossIntervalsPmMetric'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        oneWayFrameDelayPmMetric:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.2 and MEF 26.2 sec. 12.13.2 -\n            oneWayFrameDelayPmMetric is a reference to zero or more instances of\n            One Way Frame Delay Performance Metric. Each reference contains a\n            set of parameters and performance objective for the Performance\n            Metric. If there are 0 instances then this Class of Service does not\n            have an objective for One Way Frame Delay. If there are multiple\n            instances for this Class of Service then at least one of the\n            parameters must be different between the instances.\n          items:\n            $ref: '#/components/schemas/OneWayFrameDelayPmMetric'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        oneWayInterFrameDelayVariationPmMetric:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.5 and MEF 26.2 sec. 12.13.5 -\n            oneWayInterFrameDelayVariationPmMetric is a reference to zero or\n            more instances of One Way Inter Frame Delay Variation Performance\n            Metric. Each reference contains a set of parameters and performance\n            objective for the Performance Metric. If there are 0 instances then\n            this Class of Service does not have an objective for One Way Inter\n            Frame Delay Variation. If there are multiple instances for this\n            Class of Service then at least one of the parameters must be\n            different between the instances.\n          items:\n            $ref: '#/components/schemas/OneWayInterFrameDelayVariationPmMetric'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        oneWayMeanFrameDelayPmMetric:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.3 and MEF 26.2 sec. 12.13.3 -\n            oneWayMeanFrameDelayPmMetric is a reference to zero or more\n            instances of One Way Mean Frame Delay Performance Metric. Each\n            reference contains a set of parameters and performance objective for\n            the Performance Metric. If there are 0 instances then this Class of\n            Service does not have an objective for One Way Mean Frame Delay. If\n            there are multiple instances for this Class of Service then at least\n            one of the parameters must be different between the instances.\n          items:\n            $ref: '#/components/schemas/OneWayMeanFrameDelayPmMetric'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        oneWayGroupAvailabilityPmMetric:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.11 and MEF 26.2 sec. 12.13.10 -\n            oneWayGroupAvailabilityPmMetric is a reference to zero or more\n            instances of One Way Group Availability Performance Metric. Each\n            reference contains a set of parameters and performance objective for\n            the Performance Metric. If there are 0 instances then this Class of\n            Service does not have an objective for One Way Group Availability.\n            If there are multiple instances for this Class of Service then at\n            least one of the parameters must be different between the instances.\n          items:\n            $ref: '#/components/schemas/OneWayAvailabilityPmMetric'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        oneWayAvailabilityPmMetric:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.7 and MEF 26.2 sec. 12.13.7 -\n            oneWayAvailabilityPmMetric is a reference to zero or more instances\n            of One Way Availability Performance Metric. Each reference contains\n            a set of parameters and performance objective for the Performance\n            Metric. If there are 0 instances then this Class of Service does not\n            have an objective for One Way Availability. If there are multiple\n            instances for this Class of Service then at least one of the\n            parameters must be different between the instances.\n          items:\n            $ref: '#/components/schemas/OneWayAvailabilityPmMetric'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        oneWayHighLossIntervalsPmMetric:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.8 and MEF 26.2 sec. 12.13.8 -\n            oneWayHighLossIntervalsPmMetric is a reference to zero or more\n            instances of One Way High Loss Intervals Performance Metric. Each\n            reference contains a set of parameters and performance objective for\n            the Performance Metric. If there are 0 instances then this Class of\n            Service does not have an objective for One Way HLI. If there are\n            multiple instances for this Class of Service then at least one of\n            the parameters must be different between the instances.\n          items:\n            $ref: '#/components/schemas/OneWayHighLossIntervalPmMetric'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        oneWayCompositePmMetric:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.10 - oneWayCompositePmMetric is a reference to\n            zero or more instances of One Way Composite Performance Metric. Each\n            reference contains a set of parameters and performance objective for\n            the Performance Metric. If there are 0 instances then this Class of\n            Service does not have an objective for One Way Composite\n            Performance. If there are multiple instances for this Class of\n            Service then at least one of the parameters must be different\n            between the instances.\n          items:\n            $ref: '#/components/schemas/OneWayCompositePmMetric'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        oneWayFrameLossRatioPmMetric:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.6 and MEF 26.2 sec. 12.13.6 -\n            oneWayFrameLossRatioPmMetric is a reference to zero or more\n            instances of One Way Frame Loss Ratio Performance Metric. Each\n            reference contains a set of parameters and performance objective for\n            the Performance Metric. If there are 0 instances then this Class of\n            Service does not have an objective for One Way Frame Loss Ratio. If\n            there are multiple instances for this Class of Service then at least\n            one of the parameters must be different between the instances.\n          items:\n            $ref: '#/components/schemas/OneWayFrameLostRatioPmMetric'\n          maxItems: 1\n          minItems: 0\n          type: array\n          uniqueItems: true\n        consecutiveIntervalN:\n          description: \"MEF 10.4 sec. 8.8 and MEF 26.2 sec. 12.13 - consectiveIntervalN is an integer ? 1, used to identify how many consecutive ?\\U0001D461\\U0001D458 intervals must have high loss to trigger a change in Availability.\"\n          minimum: 1\n          type: integer\n        deltaT:\n          description: \u003e-\n            MEF 10.4 sec. 8.8 and MEF 26.2 sec. 12.13 - deltaT is a time\n            duration in seconds much smaller than timeInterval. This is used,\n            primarily, in calculations associated with Availability, High Loss\n            Intervals and Consecutive High Loss Intervals. MEF 10.4 and MEF 26.2\n            refer to this as ?t and the k-th interval starting at ts is referred\n            to as ?tk (k is subscript).\n          minimum: 1\n          type: integer\n        oneWayFrameDelayRangePmMetric:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.4 and MEF 26.2 sec. 12.13.4 -\n            oneWayFrameDelayRangePmMetric is a reference to zero or more\n            instances of One Way Frame Delay Range Performance Metric. Each\n            reference contains a set of parameters and performance objective for\n            the Performance Metric. If there are 0 instances then this Class of\n            Service does not have an objective for One Way Frame Delay Range. If\n            there are multiple instances for this Class of Service then at least\n            one of the parameters must be different between the instances.\n          items:\n            $ref: '#/components/schemas/OneWayFrameDelayRangePmMetric'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        cosName:\n          description: This is the CoS Name for this PM Entry.\n          minLength: 1\n          type: string\n      type: object\n    SourceMacAddressLimit:\n      description: \u003e-\n        This limits the number of source MAC addresses that can be used in\n        ingress  frame mapped to the End Point of all types over a time\n        interval. It is a recommendation that each Ingress EI Frame with a\n        source MAC address that would exceed the limit be discarded by the\n        Carrier Ethernet Network.\n      properties:\n        limit:\n          description: \u003e-\n            The number of MAC source addresses that will not subject an Ingress\n            EI Frame to discard during the time interval.\n          minimum: 1\n          type: integer\n        interval:\n          description: \u003e-\n            The time interval in seconds over which the source address limit is\n            evaluated\n          $ref: '#/components/schemas/TimeDuration'\n      type: object\n    SubscriberUniCommon:\n      description: \u003e-\n        This class contains all of the Subscriber UNI Services Attributes.. This\n        class is used to compose the SubscriberUNI class.\n      properties:\n        listOfPhyLinks:\n          description: \u003e-\n            MEF 10.4 sec. 9.4 - The value of the Subscriber UNI List of Physical\n            Links Service Attribute is a list of 5-tuples of the form ?id,\n            physicalLink, synchronousEthernet, precisionTiming,\n            demarcConnectorType, gender?, with one list item for each physical\n            link. The value of id is an identifier for the physical link. The\n            value of physicalLink is the specific Ethernet physical layer type.\n            synchronousEthernet indicates if synchronous Ethernet is used on the\n            physical link and has the value Enabled or Disabled. The value of\n            precisionTiming indicates if the Precision Time Protocol is used on\n            the physical link and has the value Enabled or Disabled. The value\n            of demarcConnectorType specifies the type of connector used. Note\n            that the id and the physicalLink come from the\n            CarrierEthernetPhysicalLink class.\n          items:\n            $ref: '#/components/schemas/UniPhysicalLink'\n          minItems: 0\n          type: array\n          uniqueItems: false\n        virtualFrameMap:\n          description: \u003e-\n            MEF 10.4 sec. 9.2 and sec. 9.3 - When the value of the Subscriber\n            UNI Instantiation Service Attribute = Virtual there must exist a map\n            that maps the set of Virtual Frames that cross the UNI to a sequence\n            of pairs of the form ?s,t? where s is a standard Ethernet frame per\n            Clause 3 of IEEE Std 802.3 � 2015 [5] and t is the arrival time at\n            the UNI for all bits in s. Since MEF 10.4 does not specify the\n            contents or format of this map, it is currently defined as an\n            arbitrary length string.\n          items:\n            $ref: '#/components/schemas/VirtualFrameMap'\n          maxItems: 1\n          minItems: 0\n          type: array\n          uniqueItems: true\n        portConversation:\n          description: \u003e-\n            MEF 10.4 sec. 9.6 - A mapping of Port Conversation IDs (i.e., VLAN\n            IDs or zero for untagged frames) to an ordered list of physical\n            links if there are multiple physical links in the UNI and the link\n            aggregation is ALL_ACTIVE.\n          items:\n            $ref: '#/components/schemas/ConversationIdToAggregationLinkMap'\n          minItems: 0\n          type: array\n          uniqueItems: false\n        maximumNumberOfEndPoints:\n          description: \u003e-\n            MEF 10.4 sec. 9.9 - The maximum number of EVC End Points that can be\n            supported at the UNI\n          maximum: 4094\n          minimum: 1\n          type: integer\n        lagLinkMeg:\n          description: \u003e-\n            MEF 10.4 sec. 9.15 - Indicates if the Service Provider has\n            instantiated a LAG Link MEG End Point (MEP) on each physical link in\n            the UNI if the UNI has more than one physical link (ENABLED) or not\n            (DISABLED).\n          $ref: '#/components/schemas/EnabledDisabled'\n        l2cpAddressSet:\n          description: \u003e-\n            MEF 10.4 sec. 9.16 and MEF 45.1 sec. 8.1 - L2CP Address Set Service\n            Attribute is defined in MEF 45.1. CTA CEVLAN Tag Aware for\n            VLAN-based services where the CE-VLAN ID is used to map a frame to a\n            service. CTB CVLAN Tag Blind for Port-based services where the\n            CE-VLAN ID not used to map a frame to a service. CTB2 CVLAN Tag\n            Blind Option 2 for point-to-point Port-based services that support\n            the EPL Option 2 L2CP processing.\n          $ref: '#/components/schemas/L2cpAddressSet'\n        linkOAM:\n          description: \u003e-\n            MEF 10.4 sec. 9.13 - Controls when and how Link OAM per IEEE Std\n            802.3-2015 is run on the physical links in the UNI.\n          $ref: '#/components/schemas/EnabledDisabled'\n        meg:\n          description: \u003e-\n            MEF 10.4 sec. 9.14 - Indicates if the Service Provider has\n            instantiated a MEG End Point (MEP) at the UNI Maintenance Entity\n            Group (MEG) Level (ENABLED) or not (DISABLED).\n          $ref: '#/components/schemas/EnabledDisabled'\n        linkAggregation:\n          description: \u003e-\n            MEF 10.4 sec. 9.5 - Data type representing Link Aggregation types.\n            NONE-No Link Aggregation is used. 2_LINK_ACTIVE_STANDBY-The SP\n            network uses Link Aggregation as in either Clause 5.6.1 of IEEE Std\n            802.1AX-2008 [2] or Clause 6.7.1 of IEEE Std 802.1AX-2014 with one\n            Link Aggregation Group(LAG) across the links supporting the UNI/ENNI\n            such that all Service Frames are carried on only one of the two\n            links when both links are operational. ALL_ACTIVE-The SP Network\n            uses Link Aggregation as specified in Clause 5.3 of IEEE Std\n            802.1AX-2014, including the use of the version 2 LACPDUs as\n            specified in Clause 5.3.1h of IEEE Std 802.1AZ-2014, with one Link\n            Aggregation Group (LAG) across the links. OTHER-The\n            Operator/Subscriber/Service Provider agree on another other\n            resiliency mechanism.\n          $ref: '#/components/schemas/LinkAggType'\n        l2cpPeering:\n          description: \u003e-\n            MEF 10.4 sec. 9.17 and MEF 45.1 sec. 8.2 - L2CP Peering Service\n            Attribute defined in MEF 45.1 specifies which protocols, if any, are\n            peered at the UNI. The L2CP Peering service attribute value must be\n            an empty list, or a list of entries identifying protocols to be\n            Peered where each entry consists of {Destination Address, Protocol\n            Identifier} or {Destination Address, Protocol Identifier, Link\n            Identifier}.\n          $ref: '#/components/schemas/L2cpPeering'\n        maximumNumberOfCtagVlanIdsPerEndPoint:\n          description: \u003e-\n            MEF 10.4 sec. 9.10 - An integer greater than or equal to 1 that\n            limits the number of C-Tag VLAN IDs that can map to each EVC End\n            Point.\n          maximum: 4094\n          minimum: 1\n          type: integer\n        tokenShare:\n          description: \u003e-\n            MEF 10.4 sec. 9.11 - An attribute that indicates whether Bandwidth\n            Profile Envelopes containing more than one Bandwidth Profile Flow\n            are supported by the Service Provider at the Subscriber UNI.\n          $ref: '#/components/schemas/EnabledDisabled'\n        maximumServiceFrameSize:\n          description: \u003e-\n            MEF 10.4 sec. 9.8 - Specifies the maximum size of Service Frames\n            that can be transmitted across UNI.\n          minimum: 1522\n          type: integer\n        envelopes:\n          description: \u003e-\n            MEF 10.4 sec. 9.12 - The Envelopes and Envelope Coupling Flag values\n            to which Bandwidth Profile Flows can be mapped. Value is None or\n            non-empty list of {envelopeID, couplingFlagForIndexZero}. If this\n            property is an empty list, the value is assumed to have the value\n            None.\n          items:\n            $ref: '#/components/schemas/Envelope'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        instantiation:\n          description: \u003e-\n            MEF 10.4 sec. 9.2 - When the value is Physical, the UNI is\n            implemented using one or more instances of a standard Physical\n            Layer. When the value is Virtual, the physical layer is not\n            specified.\n          $ref: '#/components/schemas/Instantiation'\n      type: object\n    TerminationError:\n      description: \u003e-\n        This indicates an error that caused an Item to be terminated. The code\n        and propertyPath should be used like in Error422.\n      properties:\n        code:\n          $ref: '#/components/schemas/Error422Code'\n        propertyPath:\n          description: \u003e\n            A pointer to a particular property of the payload that caused the\n            validation issue. It is highly recommended that this property should\n            be used.\n\n            Defined using JavaScript Object Notation (JSON) Pointer\n            (https://tools.ietf.org/html/rfc6901).\n          type: string\n        value:\n          description: Text to describe the reason of the termination.\n          type: string\n      type: object\n    TimeDuration:\n      description: \u003e-\n        This class is used to describe durations expressed as a 2-tuple, (value,\n        units). The units from from nanoseconds to years.\n      properties:\n        timeDurationValue:\n          description: \u003e-\n            The value of the duration. For example, if the duration is 20 ms,\n            this element is 20.\n          type: integer\n        timeDurationUnits:\n          description: \u003e-\n            The unit of measure in the duration. For example, if an interval is\n            2ms, this element is MS.\n          $ref: '#/components/schemas/TimeDurationUnits'\n      type: object\n    TimeDurationUnits:\n      description: Enum listing the units of measure for a Time Duration\n      enum:\n        - NS\n        - US\n        - MS\n        - SEC\n        - MIN\n        - HOUR\n        - DAY\n        - WEEK\n        - MONTH\n        - YEAR\n      type: string\n    TimeUnit:\n      description: |\n        Represents a unit of time.\n        Reference: MEF 79 (Sn 8.4.3.1/8.4.3.2)\n      enum:\n        - calendarMonths\n        - calendarDays\n        - calendarHours\n        - calendarMinutes\n        - businessDays\n        - businessHours\n        - businessMinutes\n      type: string\n    UniConnectorGender:\n      description: \u003e-\n        This indicates whether the Subscriber is presented with a SOCKET\n        (common) or a PLUG (less common).\n      enum:\n        - SOCKET\n        - PLUG\n      type: string\n    UniConnectorType:\n      description: \u003e-\n        This indicates the type of connector that is presented to the\n        Subscriber.\n      enum:\n        - SC\n        - LC\n        - RJ45\n        - OTHER\n      type: string\n    UniPhysicalLink:\n      allOf:\n        - $ref: '#/components/schemas/CarrierEthernetPhysicalLink'\n        - $ref: '#/components/schemas/UniSpecificAttributes'\n      description: \u003e-\n        This class describes the Physical Link attributes at a UNI. It is a\n        6-tuple ?id, phy, frequency sync enable, PTP enable, connector, gender?.\n    UniSpecificAttributes:\n      properties:\n        uniConnectorGender:\n          description: \u003e-\n            This indicates whether the Subscriber is presented with a SOCKET\n            (common) or a PLUG (less common).\n          $ref: '#/components/schemas/UniConnectorGender'\n        synchronousEthernet:\n          description: \u003e-\n            Indicates if synchronous Ethernet is used on the physical link and\n            has the value either Enabled or Disabled.\n          $ref: '#/components/schemas/EnabledDisabled'\n        uniConnectorType:\n          description: \u003e-\n            This indicates the type of connector that is presented to the\n            Subscriber.\n          $ref: '#/components/schemas/UniConnectorType'\n        precisionTiming:\n          description: \u003e-\n            Indicates if the Precision Time Protocol is used on the physical\n            link and has the value either Enabled or Disabled\n          $ref: '#/components/schemas/EnabledDisabled'\n      type: object\n    VirtualFrameMap:\n      description: \u003e-\n        A map for virtual frame mapping.   The absence of this attribute\n        corresponds to a Service Attribute value of Not Applicable. Reference\n        MEF 10.4 Section 9.3 Subscriber UNI Virtual Frame Map Service Attribute.\n      properties:\n        vfMap:\n          description: \u003e-\n            MEF 10.4 sec. 9.2 and sec. 9,3 - When the value of the Subscriber\n            UNI Instantiation Service Attribute = Virtual, there must exist a\n            map that maps the set of Virtual Frames that cross the UNI to a\n            sequence of pairs of the form?s,t where s is a standard Ethernet\n            frame per Clause 3 of IEEE Std 802.3 � 2015 [5] and t is the arrival\n            time at the UNI for all bits in s. Since MEF 10.4 does not specify\n            the contents or format of this map, it is currently defined as an\n            arbitrary length string.\n          minLength: 0\n          type: string\n      type: object\n    VlanType:\n      description: \u003e-\n        An indication of the type of EVC End Point Map. If the value is UT/PT\n        then no additional information is required. If the value is LIST then a\n        list of C-VLAN ID values must be specified.\n      enum:\n        - LIST\n        - UT/PT\n      type: string\n",
			"canonicalURL": "/github.com/MEF-GIT/MEF-LSO-Sonata-SDK@ef4fcf652dd4a677be8987165b49de9eeab988f9/-/blob/generated/staticBinding/carrierEthernet/productOfferingQualificationManagement.api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/MEF-GIT/MEF-LSO-Sonata-SDK/blob/ef4fcf652dd4a677be8987165b49de9eeab988f9/generated/staticBinding/carrierEthernet/productOfferingQualificationManagement.api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: offset 7508: control characters are not allowed"
}