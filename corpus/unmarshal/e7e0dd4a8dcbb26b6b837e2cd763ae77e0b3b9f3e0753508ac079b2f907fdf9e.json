{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Saad-Amjad/laravel-restful-apis"
		},
		"file": {
			"name": "api-docs.yaml",
			"size": 0,
			"path": "storage/api-docs/api-docs.yaml",
			"byteSize": 5651,
			"content": "openapi: 3.0.0\ninfo:\n  title: 'Laravel RESTful APIs'\n  description: 'Example of RESTful APIs'\n  contact:\n    email: saad.amjad@monstar-lab.com\n  license:\n    name: 'Apache 2.0'\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\n  version: 1.0.0\nservers:\n  -\n    url: 'http://localhost:8000'\n    description: 'Demo API Server'\npaths:\n  /api/v1/register:\n    post:\n      tags:\n        - Register\n      summary: 'Register user'\n      description: 'Registers user in the system'\n      operationId: register\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/StoreRegisterRequest'\n      responses:\n        200:\n          description: 'Successful operation'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RegisterResponse'\n        400:\n          description: 'Bad Request'\n  /api/v1/login:\n    post:\n      tags:\n        - Login\n      summary: 'Login user'\n      description: 'Logins user in the system'\n      operationId: login\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/StoreLoginRequest'\n      responses:\n        200:\n          description: 'Successful operation'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LoginResponse'\n        400:\n          description: 'Bad Request'\n  /api/v1/books:\n    get:\n      tags:\n        - Books\n      summary: 'Get list of books'\n      description: 'Returns list of books'\n      operationId: index\n      responses:\n        200:\n          description: 'Successful operation'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BookCollection'\n        401:\n          description: Unauthenticated\n        403:\n          description: Forbidden\n      security:\n        -\n          apiAuth: []\ncomponents:\n  schemas:\n    BookCollection:\n      title: 'Book Collection'\n      description: 'Book Collection'\n      properties:\n        data:\n          title: Data\n          description: 'Data wrapper'\n          type: array\n          items:\n            $ref: '#/components/schemas/BookResource'\n      type: object\n      xml:\n        name: BookCollection\n    BookResource:\n      title: 'Book Resource'\n      description: 'Book resource'\n      properties:\n        id:\n          title: ID\n          description: ID\n          type: integer\n          format: int64\n          example: 1\n        title:\n          title: Title\n          description: 'Name of the new book'\n          type: string\n          example: 'Sample Book'\n        created_at:\n          title: 'Created at'\n          description: 'Created at'\n          type: string\n          format: datetime\n          example: '2020-01-27 17:50:45'\n        updated_at:\n          title: 'Updated at'\n          description: 'Updated at'\n          type: string\n          format: datetime\n          example: '2020-01-27 17:50:45'\n        author_id:\n          title: 'Author ID'\n          description: 'Author''s id of the new book'\n          type: integer\n          format: int64\n          example: 1\n      type: object\n      xml:\n        name: BookResource\n    LoginResponse:\n      title: 'Login Response'\n      description: 'Login Response'\n      properties:\n        access_token:\n          title: accessToken\n          description: 'Access Token'\n          type: string\n          example: 4|IZ95yiIqqCVsfT2rmWnnxbAwhlO2zz2Mz3dstUw8\n        token_type:\n          title: 'Token Type'\n          description: 'Type of Token'\n          type: string\n          example: Bearer\n      type: object\n      xml:\n        name: LoginResponse\n    RegisterResponse:\n      title: 'Register Response'\n      description: 'Register Response'\n      properties:\n        access_token:\n          title: accessToken\n          description: ID\n          type: string\n          example: 4|IZ95yiIqqCVsfT2rmWnnxbAwhlO2zz2Mz3dstUw8\n        token_type:\n          title: 'Token Type'\n          description: 'Type of Token'\n          type: string\n          example: Bearer\n      type: object\n      xml:\n        name: RegisterResponse\n    StoreLoginRequest:\n      title: 'Store Login Request'\n      description: 'Store login request body data'\n      required:\n        - email\n        - password\n      properties:\n        email:\n          title: email\n          description: 'Email of user'\n          type: string\n          example: saad.amjad@monstar-lab.com\n        password:\n          title: password\n          description: password\n          type: string\n          example: password123\n      type: object\n    StoreRegisterRequest:\n      title: 'Store Register Request'\n      description: 'Store register request body data'\n      required:\n        - name\n        - email\n        - password\n      properties:\n        name:\n          title: name\n          description: 'Name of the new user'\n          type: string\n          example: 'Saad Bin Amjad'\n        email:\n          title: email\n          description: 'Email of user'\n          type: string\n          example: saad.amjad@monstar-lab.com\n        password:\n          title: password\n          description: password\n          type: string\n          example: password123\n      type: object\n  securitySchemes:\n    apiAuth:\n      type: http\n      description: 'A short description for security scheme'\n      name: 'Token Based '\n      scheme: bearer\n      in: header\ntags:\n  -\n    name: Books\n    description: 'API Endpoints of Books'\nsecurity:\n  - []\n",
			"canonicalURL": "/github.com/Saad-Amjad/laravel-restful-apis@8baab0fedd45c3d4b8e827558712eedc99076b3e/-/blob/storage/api-docs/api-docs.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Saad-Amjad/laravel-restful-apis/blob/8baab0fedd45c3d4b8e827558712eedc99076b3e/storage/api-docs/api-docs.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: json: line 1:4319: json: cannot unmarshal Go value of type ogen.Spec: spec: json: unable to unmarshal JSON array into Go value of type map[string][]string"
}