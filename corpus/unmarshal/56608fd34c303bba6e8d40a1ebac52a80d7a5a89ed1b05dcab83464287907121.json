{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/beatcracker/toptout"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "docs/api-docs/openapi.yaml",
			"byteSize": 34112,
			"content": "openapi: 3.1.0\ninfo:\n  title: Toptout\n  description: Get data about telemetry channels in various applications\n  license:\n    name: MIT\n    url: https://opensource.org/licenses/MIT\n  version: 0.0.1\nservers:\n  - url: https://toptout.me/api\n    description: Static API hosted on GitHub pages\ntags:\n  - name: apps\n    description: Get application ids or categories\n  - name: telemetry\n    description: Get telemetry data by application id or category\npaths:\n  /id/:\n    get:\n      summary: Returns a list of all supported application ids\n      operationId: getApplicationId\n      tags:\n        - apps\n      responses:\n        '200':\n          description: A JSON array of all supported application ids\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n        '404':\n          description: Resource not found\n          content:\n            text/html:\n              schema:\n                type: string\n        5XX:\n          description: Unexpected error\n          content:\n            text/html:\n              schema:\n                type: string\n  /category/:\n    get:\n      summary: Returns a list of all supported application categories\n      operationId: getCategoryId\n      tags:\n        - apps\n      responses:\n        '200':\n          description: A JSON array of all supported application categories\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n        '404':\n          description: Resource not found\n          content:\n            text/html:\n              schema:\n                type: string\n        5XX:\n          description: Unexpected error\n          content:\n            text/html:\n              schema:\n                type: string\n  /telemetry/:\n    get:\n      summary: Returns telemetry details for all known application ids\n      operationId: getTelemetry\n      tags:\n        - telemetry\n      responses:\n        '200':\n          description: An array of JSON objects with telemetry channels data\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Toptout'\n        '404':\n          description: Resource not found\n          content:\n            text/html:\n              schema:\n                type: string\n        5XX:\n          description: Unexpected error\n          content:\n            text/html:\n              schema:\n                type: string\n  /telemetry/id/{id}/:\n    get:\n      summary: Returns telemetry details for specific application id\n      operationId: getTelemetryById\n      tags:\n        - telemetry\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n          examples:\n            vscode:\n              value: vscode\n      responses:\n        '200':\n          description: A JSON object with telemetry channels data\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Toptout'\n        '404':\n          description: Resource not found\n          content:\n            text/html:\n              schema:\n                type: string\n        5XX:\n          description: Unexpected error\n          content:\n            text/html:\n              schema:\n                type: string\n  /telemetry/category/{category}/:\n    get:\n      summary: Returns telemetry details for applications in specific category\n      operationId: getTelemetryByCategory\n      tags:\n        - telemetry\n      parameters:\n        - name: category\n          in: path\n          required: true\n          schema:\n            type: string\n          examples:\n            vscode:\n              value: vscode-extension\n      responses:\n        '200':\n          description: An array of JSON objects with telemetry channels data\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Toptout'\n        '404':\n          description: Resource not found\n          content:\n            text/html:\n              schema:\n                type: string\n        5XX:\n          description: Unexpected error\n          content:\n            text/html:\n              schema:\n                type: string\ncomponents:\n  schemas:\n    Links:\n      title: Links\n      description: Contains links to the main product page, telemetry and privacy policy.\n      type: object\n      additionalProperties: false\n      properties:\n        main:\n          type: string\n          format: uri\n          pattern: ^http[s]?:\\/\\/.+$\n          description: Link to the product's website. Mandatory.\n        telemetry:\n          type: string\n          format: uri\n          pattern: ^http[s]?:\\/\\/.+$\n          description: Link to the product's general telemetry description. Optional.\n        privacy:\n          type: string\n          format: uri\n          pattern: ^http[s]?:\\/\\/.+$\n          description: Link to the product's privacy policy. Optional.\n      required:\n        - main\n    Traits:\n      title: Traits\n      description: Describes telemetry channel traits\n      type: object\n      additionalProperties: false\n      properties:\n        official:\n          type: boolean\n          description: Telemetry channel officially supports opt-in/opt-out.\n        usage_data:\n          type: boolean\n          description: Telemetry channel provides usage data.\n        update_check:\n          type: boolean\n          description: Telemetry channel provides update checks.\n        error_report:\n          type: boolean\n          description: Telemetry channel provides error reports.\n      required:\n        - official\n        - usage_data\n        - update_check\n        - error_report\n    Noop:\n      title: Noop\n      description: \u003e-\n        \"No operation\". Use this for links to third-party telemetry\n        configuration tools, that are not supported by this schema.\n      type: object\n      additionalProperties: false\n      properties:\n        name:\n          type: string\n          pattern: ^\\S+(\\s+\\S+)*$\n          description: Friendly name. No leading/trailing whitespace allowed.\n        link:\n          type: string\n          format: uri\n          pattern: ^https?:\\/\\/\\S+$\n          description: 'Link to website. Example: https://example.com.'\n        description:\n          type: string\n          pattern: ^\\S+(\\s+\\S+)*$\n          description: Friendly description. No leading/trailing whitespace allowed.\n      required:\n        - description\n        - link\n        - name\n    Path:\n      title: Path\n      description: \u003e-\n        Item path. For environment variables this would be name, for files -\n        full path.\n      type: object\n      additionalProperties: false\n      properties:\n        linux:\n          type: string\n          description: This path should be used on Linux.\n        macos:\n          type: string\n          description: This path should be used on macOS.\n        windows:\n          type: string\n          description: This path should be used on Windows.\n        default:\n          type: string\n          description: if no OS-specific path is specified, this one should be used.\n      anyOf:\n        - required:\n            - default\n        - required:\n            - linux\n        - required:\n            - macos\n        - required:\n            - windows\n    StringValue:\n      title: StringValue\n      description: Opt-in/out values for env/plain_file/registry targets\n      type: object\n      additionalProperties: false\n      properties:\n        opt_out:\n          description: \u003e-\n            This value will opt-OUT of the telemetry collection. Use null to\n            indicate that entry should be removed.\n          type:\n            - string\n            - 'null'\n        opt_in:\n          description: \u003e-\n            This value will opt-IN of the telemetry collection. Use null to\n            indicate that value should be removed.\n          type:\n            - string\n            - 'null'\n      required:\n        - opt_in\n        - opt_out\n    EnvProperties:\n      title: EnvProperties\n      description: Describe variable name and applicable values\n      type: object\n      additionalProperties: false\n      properties:\n        path:\n          $ref: '#/components/schemas/Path'\n        value:\n          $ref: '#/components/schemas/StringValue'\n      required:\n        - path\n        - value\n    Env:\n      title: Env\n      description: \u003e-\n        \"Environment variable\" target. Set or remove environment variable.\n        Environment variables are by design configured in process scope. There\n        are mechanisms to configure them for every new process, but it's up to\n        OS/shell.\n      type: object\n      additionalProperties: false\n      properties:\n        scope:\n          type: object\n          description: \u003e-\n            Target scope. You can use multiple scopes: machine (applies to all\n            users of the computer), user (applies to current user of the\n            computer), process (applies to current process only).\n          additionalProperties: false\n          properties:\n            machine:\n              $ref: '#/components/schemas/EnvProperties'\n              description: Configures telemetry channel for all users of the computer.\n            user:\n              $ref: '#/components/schemas/EnvProperties'\n              description: Configures telemetry channel for current user of the computer.\n            process:\n              $ref: '#/components/schemas/EnvProperties'\n              description: Configures telemetry channel for process only.\n          anyOf:\n            - required:\n                - machine\n            - required:\n                - user\n            - required:\n                - process\n      required:\n        - scope\n    StringArrayValue:\n      title: StringArrayValue\n      description: Opt-in/out values (commandline arguments) for exec target.\n      type: object\n      additionalProperties: false\n      properties:\n        opt_out:\n          description: \u003e-\n            These arguments will opt-OUT of the telemetry collection. Use empty\n            array to indicate that no arguments to command are needed. Use null\n            to indicate that opt-out is not applicable.\n          type:\n            - array\n            - 'null'\n          items:\n            type: string\n        opt_in:\n          description: \u003e-\n            These arguments will opt-IN of the telemetry collection. Use empty\n            array to indicate that no arguments to command are needed. Use null\n            to indicate that opt-in is not applicable.\n          type:\n            - array\n            - 'null'\n          items:\n            type: string\n      required:\n        - opt_in\n        - opt_out\n    ExecProperties:\n      title: ExecProperties\n      description: Describes command name and arguments.\n      type: object\n      additionalProperties: false\n      properties:\n        path:\n          $ref: '#/components/schemas/Path'\n        value:\n          $ref: '#/components/schemas/StringArrayValue'\n      required:\n        - path\n        - value\n    Exec:\n      title: Exec\n      description: '\"Execute command\". Run command with arguments.'\n      type: object\n      additionalProperties: false\n      properties:\n        scope:\n          type: object\n          description: \u003e-\n            Target scope. You can use multiple scopes: machine (applies to all\n            users of the computer), user (applies to current user of the\n            computer), process (applies to current process only).\n          additionalProperties: false\n          properties:\n            machine:\n              $ref: '#/components/schemas/ExecProperties'\n              description: Configures telemetry channel for all users of the computer.\n            user:\n              $ref: '#/components/schemas/ExecProperties'\n              description: Configures telemetry channel for current user of the computer.\n            process:\n              $ref: '#/components/schemas/ExecProperties'\n              description: Configures telemetry channel for process only.\n          anyOf:\n            - required:\n                - machine\n            - required:\n                - user\n            - required:\n                - process\n      required:\n        - scope\n    RegistryProperties:\n      title: RegistryProperties\n      description: Describes registry path and keys/values.\n      type: object\n      additionalProperties: false\n      properties:\n        root:\n          type: string\n          description: \u003e-\n            Registry hive name:\n            https://docs.microsoft.com/en-us/windows/win32/sysinfo/predefined-keys\n          enum:\n            - HKEY_CLASSES_ROOT\n            - HKEY_CURRENT_CONFIG\n            - HKEY_CURRENT_USER\n            - HKEY_CURRENT_USER_LOCAL_SETTINGS\n            - HKEY_LOCAL_MACHINE\n            - HKEY_PERFORMANCE_DATA\n            - HKEY_PERFORMANCE_NLSTEXT\n            - HKEY_PERFORMANCE_TEXT\n            - HKEY_USERS\n        path:\n          type: string\n          description: Registry key path.\n          pattern: ^(?!\\\\).+?(?\u003c!\\\\)$\n        key:\n          type: string\n          description: Registry key name.\n        type:\n          type: string\n          description: Registry key type.\n          enum:\n            - REG_SZ\n            - REG_EXPAND_SZ\n            - REG_MULTI_SZ\n            - REG_DWORD_BIG_ENDIAN\n            - REG_DWORD\n            - REG_QWORD\n            - REG_BINARY\n        value:\n          $ref: '#/components/schemas/StringValue'\n      required:\n        - root\n        - path\n        - key\n        - type\n        - value\n    Registry:\n      title: Registry\n      description: '\"Windows registry\". Modify keys/values in Windows registry.'\n      type: object\n      additionalProperties: false\n      properties:\n        scope:\n          type: object\n          description: \u003e-\n            Target scope. You can use multiple scopes: machine (applies to all\n            users of the computer), user (applies to current user of the\n            computer), process (applies to current process only).\n          additionalProperties: false\n          properties:\n            machine:\n              $ref: '#/components/schemas/RegistryProperties'\n              description: Configures telemetry channel for all users of the computer.\n            user:\n              $ref: '#/components/schemas/RegistryProperties'\n              description: Configures telemetry channel for current user of the computer.\n            process:\n              $ref: '#/components/schemas/RegistryProperties'\n              description: Configures telemetry channel for process only.\n          anyOf:\n            - required:\n                - machine\n            - required:\n                - user\n            - required:\n                - process\n      required:\n        - scope\n    Dasel:\n      title: Dasel\n      description: \u003e-\n        Standard selector syntax no matter the data format:\n        https://github.com/TomWright/dasel\n      type: string\n    INIFileSelector:\n      title: INIFileSelector\n      description: \u003e-\n        Describes selector used to configure telemetry channel in application\n        INI configuration file.\n      type: object\n      additionalProperties: false\n      properties:\n        dasel:\n          $ref: '#/components/schemas/Dasel'\n      required:\n        - dasel\n    INIFileProperties:\n      title: INIFileProperties\n      description: Describes file path, selector for target property and values.\n      type: object\n      additionalProperties: false\n      properties:\n        path:\n          $ref: '#/components/schemas/Path'\n        selector:\n          $ref: '#/components/schemas/INIFileSelector'\n        value:\n          $ref: '#/components/schemas/StringValue'\n        display_value:\n          type: string\n      required:\n        - display_value\n        - path\n        - selector\n        - value\n    INIFile:\n      title: INIFile\n      description: '\"INI file\". Modify INI file: https://en.wikipedia.org/wiki/INI_file'\n      type: object\n      additionalProperties: false\n      properties:\n        scope:\n          type: object\n          description: \u003e-\n            Target scope. You can use multiple scopes: machine (applies to all\n            users of the computer), user (applies to current user of the\n            computer), process (applies to current process only).\n          additionalProperties: false\n          properties:\n            machine:\n              $ref: '#/components/schemas/INIFileProperties'\n              description: Configures telemetry channel for all users of the computer.\n            user:\n              $ref: '#/components/schemas/INIFileProperties'\n              description: Configures telemetry channel for current user of the computer.\n            process:\n              $ref: '#/components/schemas/INIFileProperties'\n              description: Configures telemetry channel for process only.\n          anyOf:\n            - required:\n                - machine\n            - required:\n                - user\n            - required:\n                - process\n      required:\n        - scope\n    JSONPointer:\n      title: JSONPointer\n      description: 'JSON Pointer: https://datatracker.ietf.org/doc/html/rfc6901'\n      type: string\n    JSONFileSelector:\n      title: JSONFileSelector\n      description: \u003e-\n        Describes selector used to configure telemetry channel in application\n        JSON configuration file.\n      type: object\n      additionalProperties: false\n      properties:\n        dasel:\n          $ref: '#/components/schemas/Dasel'\n        json_pointer:\n          $ref: '#/components/schemas/JSONPointer'\n      required:\n        - dasel\n        - json_pointer\n    RichValue:\n      title: RichValue\n      description: \u003e-\n        Opt-in/out values for JSON and other targets that can use non-string\n        values (e.g.: object/number/boolean/null)\n      type: object\n      additionalProperties: false\n      properties:\n        opt_out:\n          description: \u003e-\n            This value will opt-OUT of the telemetry collection. Use null to\n            indicate that the entire key holding this value should be removed.\n          type:\n            - number\n            - string\n            - boolean\n            - 'null'\n        opt_in:\n          description: \u003e-\n            This value will opt-IN to the telemetry collection. Use null to\n            indicate that value should be removed.\n          type:\n            - number\n            - string\n            - boolean\n            - 'null'\n      required:\n        - opt_in\n        - opt_out\n    JSONFileProperties:\n      title: JSONFileProperties\n      description: Describes file path, selector for target property and values.\n      type: object\n      additionalProperties: false\n      properties:\n        path:\n          $ref: '#/components/schemas/Path'\n        selector:\n          $ref: '#/components/schemas/JSONFileSelector'\n        value:\n          $ref: '#/components/schemas/RichValue'\n        display_value:\n          type: string\n      required:\n        - display_value\n        - path\n        - selector\n        - value\n    JSONFile:\n      title: JSONFile\n      description: '\"JSON file\". Modify JSON file: https://www.json.org/'\n      type: object\n      additionalProperties: false\n      properties:\n        scope:\n          type: object\n          description: \u003e-\n            Target scope. You can use multiple scopes: machine (applies to all\n            users of the computer), user (applies to current user of the\n            computer), process (applies to current process only).\n          additionalProperties: false\n          properties:\n            machine:\n              $ref: '#/components/schemas/JSONFileProperties'\n              description: Configures telemetry channel for all users of the computer.\n            user:\n              $ref: '#/components/schemas/JSONFileProperties'\n              description: Configures telemetry channel for current user of the computer.\n            process:\n              $ref: '#/components/schemas/JSONFileProperties'\n              description: Configures telemetry channel for process only.\n          anyOf:\n            - required:\n                - machine\n            - required:\n                - user\n            - required:\n                - process\n      required:\n        - scope\n    Regex:\n      title: Regex\n      description: \u003e-\n        Regular expression. RE2 flavor:\n        https://github.com/google/re2/wiki/Syntax\n      type: string\n    PlainFileSelector:\n      title: PlainFileSelector\n      description: \u003e-\n        Describes selector used to configure telemetry channel in application\n        plaintext configuration file.\n      type: object\n      additionalProperties: false\n      properties:\n        regex:\n          $ref: '#/components/schemas/Regex'\n      required:\n        - regex\n    PlainFileProperties:\n      title: PlainFileProperties\n      description: Describes file path, selector for target property and values.\n      type: object\n      additionalProperties: false\n      properties:\n        path:\n          $ref: '#/components/schemas/Path'\n        selector:\n          $ref: '#/components/schemas/PlainFileSelector'\n        value:\n          $ref: '#/components/schemas/StringValue'\n        display_value:\n          type: string\n      required:\n        - display_value\n        - path\n        - selector\n        - value\n    PlainFile:\n      title: PlainFile\n      description: '\"Plaintext file\". Modify plaintext file.'\n      type: object\n      additionalProperties: false\n      properties:\n        scope:\n          type: object\n          description: \u003e-\n            Target scope. You can use multiple scopes: machine (applies to all\n            users of the computer), user (applies to current user of the\n            computer), process (applies to current process only).\n          additionalProperties: false\n          properties:\n            machine:\n              $ref: '#/components/schemas/PlainFileProperties'\n              description: Configures telemetry channel for all users of the computer.\n            user:\n              $ref: '#/components/schemas/PlainFileProperties'\n              description: Configures telemetry channel for current user of the computer.\n            process:\n              $ref: '#/components/schemas/PlainFileProperties'\n              description: Configures telemetry channel for process only.\n          anyOf:\n            - required:\n                - machine\n            - required:\n                - user\n            - required:\n                - process\n      required:\n        - scope\n    TOMLFileSelector:\n      title: TOMLFileSelector\n      description: \u003e-\n        Describes selector used to configure telemetry channel in application\n        TOML configuration file.\n      type: object\n      additionalProperties: false\n      properties:\n        dasel:\n          $ref: '#/components/schemas/Dasel'\n      required:\n        - dasel\n    TOMLFileProperties:\n      title: TOMLFileProperties\n      description: Describes file path, selector for target property and values.\n      type: object\n      additionalProperties: false\n      properties:\n        path:\n          $ref: '#/components/schemas/Path'\n        selector:\n          $ref: '#/components/schemas/TOMLFileSelector'\n        value:\n          $ref: '#/components/schemas/RichValue'\n        display_value:\n          type: string\n      required:\n        - display_value\n        - path\n        - selector\n        - value\n    TOMLFile:\n      title: TOMLFile\n      description: '\"TOML file\". Modify TOML file.'\n      type: object\n      additionalProperties: false\n      properties:\n        scope:\n          type: object\n          description: \u003e-\n            Target scope. You can use multiple scopes: machine (applies to all\n            users of the computer), user (applies to current user of the\n            computer), process (applies to current process only).\n          additionalProperties: false\n          properties:\n            machine:\n              $ref: '#/components/schemas/TOMLFileProperties'\n              description: Configures telemetry channel for all users of the computer.\n            user:\n              $ref: '#/components/schemas/TOMLFileProperties'\n              description: Configures telemetry channel for current user of the computer.\n            process:\n              $ref: '#/components/schemas/TOMLFileProperties'\n              description: Configures telemetry channel for process only.\n          anyOf:\n            - required:\n                - machine\n            - required:\n                - user\n            - required:\n                - process\n      required:\n        - scope\n    XPath:\n      title: XPath\n      description: 'XML Path Language: https://developer.mozilla.org/docs/Web/XPath'\n      type: string\n    XMLFileSelector:\n      title: XMLFileSelector\n      description: \u003e-\n        Describes selector used to configure telemetry channel in application\n        XML configuration file.\n      type: object\n      additionalProperties: false\n      properties:\n        dasel:\n          $ref: '#/components/schemas/Dasel'\n        xpath:\n          $ref: '#/components/schemas/XPath'\n      required:\n        - dasel\n        - xpath\n    XMLFileProperties:\n      title: XMLFileProperties\n      description: Describes file path, selector for target property and values.\n      type: object\n      additionalProperties: false\n      properties:\n        path:\n          $ref: '#/components/schemas/Path'\n        selector:\n          $ref: '#/components/schemas/XMLFileSelector'\n        value:\n          $ref: '#/components/schemas/RichValue'\n        display_value:\n          type: string\n      required:\n        - display_value\n        - path\n        - selector\n        - value\n    XMLFile:\n      title: XMLFile\n      description: \u003e-\n        \"XML file\". Modify XML file:\n        https://developer.mozilla.org/docs/Web/XML/XML_introduction\n      type: object\n      additionalProperties: false\n      properties:\n        scope:\n          type: object\n          description: \u003e-\n            Target scope. You can use multiple scopes: machine (applies to all\n            users of the computer), user (applies to current user of the\n            computer), process (applies to current process only).\n          additionalProperties: false\n          properties:\n            machine:\n              $ref: '#/components/schemas/XMLFileProperties'\n              description: Configures telemetry channel for all users of the computer.\n            user:\n              $ref: '#/components/schemas/XMLFileProperties'\n              description: Configures telemetry channel for current user of the computer.\n            process:\n              $ref: '#/components/schemas/XMLFileProperties'\n              description: Configures telemetry channel for process only.\n          anyOf:\n            - required:\n                - machine\n            - required:\n                - user\n            - required:\n                - process\n      required:\n        - scope\n    YAMLFileSelector:\n      title: YAMLFileSelector\n      description: \u003e-\n        Describes selector used to configure telemetry channel in application\n        YAML configuration file.\n      type: object\n      additionalProperties: false\n      properties:\n        dasel:\n          $ref: '#/components/schemas/Dasel'\n      required:\n        - dasel\n    YAMLFileProperties:\n      title: YAMLFileProperties\n      description: Describes file path, selector for target property and values.\n      type: object\n      additionalProperties: false\n      properties:\n        path:\n          $ref: '#/components/schemas/Path'\n        selector:\n          $ref: '#/components/schemas/YAMLFileSelector'\n        value:\n          $ref: '#/components/schemas/RichValue'\n        display_value:\n          type: string\n      required:\n        - display_value\n        - path\n        - selector\n        - value\n    YAMLFile:\n      title: YAMLFile\n      description: '\"YAML file\". Modify YAML file.'\n      type: object\n      additionalProperties: false\n      properties:\n        scope:\n          type: object\n          description: \u003e-\n            Target scope. You can use multiple scopes: machine (applies to all\n            users of the computer), user (applies to current user of the\n            computer), process (applies to current process only).\n          additionalProperties: false\n          properties:\n            machine:\n              $ref: '#/components/schemas/YAMLFileProperties'\n              description: Configures telemetry channel for all users of the computer.\n            user:\n              $ref: '#/components/schemas/YAMLFileProperties'\n              description: Configures telemetry channel for current user of the computer.\n            process:\n              $ref: '#/components/schemas/YAMLFileProperties'\n              description: Configures telemetry channel for process only.\n          anyOf:\n            - required:\n                - machine\n            - required:\n                - user\n            - required:\n                - process\n      required:\n        - scope\n    Target:\n      title: Target\n      description: \u003e-\n        Describes telemetry channel configuration options. Optional, since you\n        may wish to describe telemetry channels that don't provide a ways to\n        control them.\n      type: object\n      additionalProperties: false\n      properties:\n        noop:\n          type: array\n          items:\n            $ref: '#/components/schemas/Noop'\n        env:\n          $ref: '#/components/schemas/Env'\n        exec:\n          $ref: '#/components/schemas/Exec'\n        registry:\n          $ref: '#/components/schemas/Registry'\n        ini_file:\n          $ref: '#/components/schemas/INIFile'\n        json_file:\n          $ref: '#/components/schemas/JSONFile'\n        plain_file:\n          $ref: '#/components/schemas/PlainFile'\n        toml_file:\n          $ref: '#/components/schemas/TOMLFile'\n        xml_file:\n          $ref: '#/components/schemas/XMLFile'\n        yaml_file:\n          $ref: '#/components/schemas/YAMLFile'\n      anyOf:\n        - required:\n            - noop\n        - required:\n            - env\n        - required:\n            - exec\n        - required:\n            - registry\n        - required:\n            - ini_file\n        - required:\n            - json_file\n        - required:\n            - plain_file\n        - required:\n            - toml_file\n        - required:\n            - xml_file\n        - required:\n            - yaml_file\n    Telemetry:\n      title: Telemetry\n      description: Describes single telemetry channel (version check, analytics, etc..).\n      type: object\n      additionalProperties: false\n      properties:\n        id:\n          type: string\n          pattern: ^[a-z0-9-]+$\n          description: \u003e-\n            Telemetry channel unique ID. Use [a-z0-9-] character set. Must be\n            unique in this array. Example: usage-data.\n        name:\n          type: string\n          pattern: ^\\S+(\\s+\\S+)*$\n          description: \u003e-\n            Friendly name of the channel. No leading/trailing whitespace\n            allowed. Example: Usage data.\n        traits:\n          $ref: '#/components/schemas/Traits'\n        description:\n          type: string\n          pattern: ^\\S+(\\s+\\S+)*$\n          description: 'Optional description. Example: Disable usage data reporting.'\n        links:\n          $ref: '#/components/schemas/Links'\n        target:\n          $ref: '#/components/schemas/Target'\n      required:\n        - id\n        - name\n        - traits\n    Toptout:\n      title: Toptout\n      description: Toptout data file schema. Describes application telemetry channels.\n      type: object\n      additionalProperties: false\n      properties:\n        id:\n          type: string\n          pattern: ^[a-z0-9-]+$\n          description: \u003e-\n            Product unique ID. Use [a-z0-9-] character set. Must be unique\n            across all files. Example: foo-bar.\n        name:\n          type: string\n          pattern: ^\\S+(\\s+\\S+)*$\n          description: \u003e-\n            Friendly name of the product. No leading/trailing whitespace\n            allowed. Example: Foo Bar.\n        executable_name:\n          type: array\n          description: \u003e-\n            Optional. Provide executable name(s) if presence of this product can\n            be detected by PATH environment variable lookup. No leading/trailing\n            whitespace allowed.\n          items:\n            type: string\n            pattern: ^\\S+(\\s+\\S+)*$\n        description:\n          type: string\n          pattern: ^\\S+(\\s+\\S+)*$\n          description: \u003e-\n            Short description of the collected telemetry. Usually copied from\n            the product's documentation. No leading/trailing whitespace allowed.\n        category_id:\n          type: string\n          pattern: ^[a-z0-9-]+$\n          description: \u003e-\n            Unique category id. Use [a-z0-9-] character set. The API generator\n            uses it to group products. Example: development.\n        category_name:\n          type: string\n          pattern: ^\\S+(\\s+\\S+)*$\n          description: \u003e-\n            Friendly category name. The README generator uses it to group\n            products. No leading/trailing whitespace allowed. Example:\n            Development.\n        links:\n          $ref: '#/components/schemas/Links'\n        telemetry:\n          type: array\n          description: \u003e-\n            Telemetry channels list. Contains name and optionally description\n            and opt-in/out methods. Optional, since you may wish to add a\n            product that contains telemetry but doesn't provide a way to control\n            it.\n          items:\n            $ref: '#/components/schemas/Telemetry'\n      required:\n        - description\n        - category_id\n        - category_name\n        - id\n        - links\n        - name\n",
			"canonicalURL": "/github.com/beatcracker/toptout@2d9f2c6d45dbf2095f3e49646a3211a4a140c806/-/blob/docs/api-docs/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/beatcracker/toptout/blob/2d9f2c6d45dbf2095f3e49646a3211a4a140c806/docs/api-docs/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: json: line 1:129: callback: json: cannot unmarshal array into Go struct field Schema.type of type string"
}