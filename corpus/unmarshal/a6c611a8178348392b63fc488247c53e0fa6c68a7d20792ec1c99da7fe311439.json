{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Mermade/openapi3-examples"
		},
		"file": {
			"name": "extensionsEverywhere.yaml",
			"size": 0,
			"path": "3.0/pass/extensionsEverywhere.yaml",
			"byteSize": 8802,
			"content": "openapi: 3.0.0\nx-an-extension-null: null\nx-an-extension-primitive: 1\nx-an-extension-array: []\nx-an-extension-object: {}\ninfo:\n  version: 0.0.0\n  title: Thing API (@alasdairhurst on GitHub)\n  description: https://github.com/apigee-127/sway/pull/220#issuecomment-587568565\n  contact:\n    name: Axway Person\n    url: http://www.axway.com\n    email: foo@bar.com\n    x-an-extension-null: null\n    x-an-extension-primitive: 1\n    x-an-extension-array: []\n    x-an-extension-object: {}\n  license:\n    name: FREE\n    url: http://www.axway.com\n    x-an-extension-null: null\n    x-an-extension-primitive: 1\n    x-an-extension-array: []\n    x-an-extension-object: {}\n  x-an-extension-null: null\n  x-an-extension-primitive: 1\n  x-an-extension-array: []\n  x-an-extension-object: {}\npaths:\n  x-an-extension-null: null\n  x-an-extension-primitive: 1\n  x-an-extension-array: []\n  x-an-extension-object:\n    get:\n      description: this is an x- extension and not a path/method\n      responses:\n        default:\n          description: too lazy to make a 200\n  x-not-a-path-but-used-in-ref:\n    get:\n      description: this is a method used by a path which isn't\n        'x-not-a-path-but-used-in-ref'\n      responses:\n        default:\n          description: too lazy to make a 200\n  /thingEmpty: {}\n  /thingyref:\n    $ref: \"#/paths/x-not-a-path-but-used-in-ref\"\n  /thing:\n    parameters:\n      - $ref: \"#/components/parameters/apiKey\"\n    get:\n      x-an-extension-null: null\n      x-an-extension-primitive: 1\n      x-an-extension-array: []\n      x-an-extension-object: {}\n      description: has no operation id, no parameters\n      responses:\n        default:\n          description: too lazy to make a 200\n    patch:\n      x-an-extension-null: null\n      x-an-extension-primitive: 1\n      x-an-extension-array: []\n      x-an-extension-object: {}\n      description: updates name\n      parameters:\n        - name: name\n          in: query\n          schema:\n            type: string\n        - name: apiKey\n          in: query\n          description: Overrides the path item parameters\n          schema:\n            type: number\n      responses:\n        \"204\":\n          description: done\n    delete:\n      x-an-extension-null: null\n      x-an-extension-primitive: 1\n      x-an-extension-array: []\n      x-an-extension-object: {}\n      tags:\n        - foo\n        - bar\n        - baz\n      summary: interesting endpoint which deletes something for the sake of it.\n      externalDocs:\n        description: foo\n        url: http://www.axway.com\n        x-an-extension-null: null\n        x-an-extension-primitive: 1\n        x-an-extension-array: []\n        x-an-extension-object: {}\n      operationId: deleteNameUnique\n      description: deletes name\n      parameters:\n        - $ref: \"#/components/parameters/name\"\n        - $ref: \"#/components/parameters/fooArr\"\n        - $ref: \"#/components/parameters/barInt\"\n      responses:\n        \"201\":\n          description: done\n    put:\n      x-an-extension-null: null\n      x-an-extension-primitive: 1\n      x-an-extension-array: []\n      x-an-extension-object: {}\n      operationId: uploadThing\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                thing:\n                  description: file to upload\n                  type: string\n                  format: binary\n                  x-an-extension-null: null\n                  x-an-extension-primitive: 1\n                  x-an-extension-array: []\n                  x-an-extension-object: {}\n              required:\n                - thing\n      responses:\n        default:\n          description: Updated\n    post:\n      x-an-extension-null: null\n      x-an-extension-primitive: 1\n      x-an-extension-array: []\n      x-an-extension-object: {}\n      operationId: upsert\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/wannaBeThing\"\n      deprecated: true\n      responses:\n        \"200\":\n          x-an-extension-null: null\n          x-an-extension-primitive: 1\n          x-an-extension-array: []\n          x-an-extension-object: {}\n          description: Updated\n          headers:\n            Location:\n              x-an-extension-null: null\n              x-an-extension-primitive: 1\n              x-an-extension-array: []\n              x-an-extension-object: {}\n              description: Location of new resource\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/thing\"\n              examples:\n                response:\n                  value:\n                    name: Puma\n                    id: Dog\n        \"201\":\n          description: Created\n          headers:\n            Location:\n              description: Location of new resource\n              schema:\n                type: string\n        \"204\":\n          description: Updated no content\n        \"400\":\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error\"\n        \"500\":\n          description: Server error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/serverError\"\n        \"501\":\n          description: Inline schema\n          content:\n            application/json:\n              schema:\n                type: object\n                description: why not\n        x-an-extension-null: null\n        x-an-extension-primitive: 1\n        x-an-extension-array: []\n        x-an-extension-object:\n          description: \"\"\n        default:\n          $ref: \"#/components/responses/serverError\"\nservers:\n  - url: http://localhost:8080/test\n  - url: https://localhost:8080/test\n  - url: ws://localhost:8080/test\n  - url: wss://localhost:8080/test\ncomponents:\n  parameters:\n    apiKey:\n      in: query\n      name: apiKey\n      required: true\n      schema:\n        type: string\n    name:\n      name: name\n      in: query\n      allowEmptyValue: true\n      schema:\n        type: string\n        format: password\n        enum:\n          - foo\n          - bar\n          - baz\n    fooArr:\n      name: fooArr\n      in: query\n      description: an array of array of strings no bigger than 10 characters beginning with\n        h y or m\n      style: pipeDelimited\n      schema:\n        type: array\n        items:\n          type: array\n          default:\n            - hello\n            - me\n          items:\n            type: string\n            maxLength: 10\n            minLength: 2\n            pattern: ^[hmy]\n        uniqueItems: true\n        default:\n          - - hello\n            - you\n          - - me\n    barInt:\n      x-an-extension-null: null\n      x-an-extension-primitive: 1\n      x-an-extension-array: []\n      x-an-extension-object: {}\n      in: query\n      description: an integer which is a multiple of 5 but bigger than 5 and no bigger than\n        100\n      name: barInt\n      schema:\n        type: integer\n        minimum: 5\n        maximum: 100\n        exclusiveMinimum: true\n        exclusiveMaximum: false\n        multipleOf: 5\n  responses:\n    serverError:\n      description: Server error\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/serverError\"\n  schemas:\n    geo:\n      description: A geographical coordinate\n      type: object\n      properties:\n        latitude:\n          type: number\n        longitude:\n          type: number\n    wannaBeThing:\n      x-an-extension-null: null\n      x-an-extension-primitive: 1\n      x-an-extension-array: []\n      x-an-extension-object: {}\n      discriminator:\n        propertyName: name\n      type: object\n      properties:\n        name:\n          type: string\n      required:\n        - name\n    thing:\n      x-an-extension-null: null\n      x-an-extension-primitive: 1\n      x-an-extension-array: []\n      x-an-extension-object: {}\n      type: object\n      properties:\n        id:\n          type: number\n        name:\n          type: string\n      required:\n        - id\n        - name\n    serverError:\n      x-an-extension-null: null\n      x-an-extension-primitive: 1\n      x-an-extension-array: []\n      x-an-extension-object: {}\n      type: object\n      properties:\n        message:\n          type: string\n        location:\n          $ref: \"#/components/schemas/geo\"\n      required:\n        - message\n    error:\n      x-an-extension-null: null\n      x-an-extension-primitive: 1\n      x-an-extension-array: []\n      x-an-extension-object: {}\n      type: object\n      properties:\n        messages:\n          type: array\n          items:\n            type: string\n      required:\n        - messages\n"
		}
	},
	"Error": "unmarshal: json: line 1:5441: json: cannot unmarshal array into Go struct field Operation.paths.post.responses of type ogen.Response"
}