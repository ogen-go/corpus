{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/hiteshchoudhary/pro-backend-developer"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "tshirtstore/swagger.yaml",
			"byteSize": 55769,
			"content": "openapi: \"3.0.0\"\ninfo:\n  title: Tshirt store API\n  description: LCO - a course to create API for ecomm store\n  version: 1.1.0\n  contact:\n    email: hitesh@lco.dev\n    url: \"https://lco.dev\"\n\n# servers:\n#   - url: \"https://localhost:4000/api/v1\"\n#     description: for local host - secure\n#   - url: \"http://localhost:4000/api/v1\"\n#     description: for local host - regular\n\nservers:\n  - url: \"{protocol}://{url}/api/{version}\"\n    description: for local host \n    variables:\n      version:\n        enum:\n          - v1\n          - v2\n        default: v1\n      url:\n        enum:\n          - localhost:4000\n          - lcotshirtstore.herokuapp.com\n        default: lcotshirtstore.herokuapp.com\n      protocol:\n        enum:\n          - http\n          - https\n        default: https\n\ncomponents:\n  securitySchemes:\n    cookieAuth:\n      type: apiKey\n      in: cookie\n      name: token\n    BearerAuth:\n      type: http\n      scheme: bearer\n\n\npaths:\n  /dummy:\n    get:\n      tags:\n        - Home\n      summary: returns a greet message from LCO\n      responses:\n        200:\n          description: All good success\n          content:\n            application/json:\n              schema:\n                type: string\n                example: \"mystring\"\n        400:\n          description: Bad request\n        500:\n          description: internal server error\n  \n  /signup:\n    post:\n      tags:\n        - User\n      summary: signup a new user. required files are - name, email, password and photo\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              required:\n                - name\n                - email\n                - password\n                - photo\n              properties:\n                name:\n                  type: string\n                  required: true\n                email:\n                  type: string\n                password:\n                  type: string\n                photo:\n                  in: formData\n                  description: The uploaded file data\n                  type: file\n                  format: binary\n      responses:\n        200:\n          description: All good success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  token:\n                    type: string\n                  user:\n                    type: object\n                    properties:\n                      name:\n                        type: string\n                      email:\n                        type: string\n                      role:\n                        type: string\n                      photo:\n                        type: object\n                        properties:\n                          id:\n                            type: string\n                          secure_url:\n                            type: string\n                      _id:\n                        type: string\n                      createdAt:\n                        type: string\n        400:\n          description: Bad request\n        500:\n          description: internal server error\n\n  /login:\n    post:\n      tags:\n        - User\n      summary: login a new user. required files are -  email and password. Also adds httpOnly cookie in browser. It sends token in response too.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - email\n                - password\n              properties:\n                email:\n                  type: string\n                password:\n                  type: string\n      responses:\n        200:\n          description: All good success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  token:\n                    type: string\n                  user:\n                    type: object\n                    properties:\n                      name:\n                        type: string\n                      email:\n                        type: string\n                      role:\n                        type: string\n                      photo:\n                        type: object\n                        properties:\n                          id:\n                            type: string\n                          secure_url:\n                            type: string\n                      _id:\n                        type: string\n                      createdAt:\n                        type: string\n        400:\n          description: Bad request\n        500:\n          description: internal server error\n\n  /logout:\n    get:\n      tags:\n        - User\n      summary: get request to logout the user. Also removes httpOnly cookies \n      responses:\n        200:\n          description: All good success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  message:\n                    type: string\n                  \n        400:\n          description: Bad request\n        500:\n          description: internal server error\n\n  /forgotPassword:\n    post:\n      tags:\n        - User\n      summary: sends an email with link to forgot password. Contains the token for user validation. Public hosted version will not send email to your account. Use your own SMTP details to access this feature on local project\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - email\n              properties:\n                email:\n                  type: string\n      responses:\n        200:\n          description: All good success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  message:\n                    type: string\n        400:\n          description: Bad request\n        500:\n          description: internal server error\n\n  /password/reset/{token}:\n    post:\n      tags:\n        - User\n      summary: Allows user to reset password, validated based on token. send password and confirm password fields\n      parameters:\n        - name: token\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - password\n                - confirmPassword\n              properties:\n                password:\n                  type: string\n                confirmPassword:\n                  type: string\n      responses:\n        200:\n          description: All good success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  token:\n                    type: string\n                  user:\n                    type: object\n                    properties:\n                      name:\n                        type: string\n                      email:\n                        type: string\n                      role:\n                        type: string\n                      photo:\n                        type: object\n                        properties:\n                          id:\n                            type: string\n                          secure_url:\n                            type: string\n                      _id:\n                        type: string\n                      createdAt:\n                        type: string\n        400:\n          description: Bad request\n        500:\n          description: internal server error\n\n  /userdashboard:\n    get:\n      tags:\n        - User\n      summary: Gets all details about logged in user. Send token in cookies as named token or send Bearer Auth\n      requestBody:\n      responses:\n        200:\n          description: All good success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  user:\n                    type: object\n                    properties:\n                      name:\n                        type: string\n                      email:\n                        type: string\n                      role:\n                        type: string\n                      photo:\n                        type: object\n                        properties:\n                          id:\n                            type: string\n                          secure_url:\n                            type: string\n                      _id:\n                        type: string\n                      createdAt:\n                        type: string\n        400:\n          description: Bad request\n        500:\n          description: internal server error\n\n  /password/update:\n    post:\n      tags:\n        - User\n      summary: User can update the password if he is logged in. Send oldPassword and password\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - oldPassword\n                - password\n              properties:\n                oldPassword:\n                  type: string\n                password:\n                  type: string\n      responses:\n        200:\n          description: All good success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  token:\n                    type: string\n                  user:\n                    type: object\n                    properties:\n                      name:\n                        type: string\n                      email:\n                        type: string\n                      role:\n                        type: string\n                      photo:\n                        type: object\n                        properties:\n                          id:\n                            type: string\n                          secure_url:\n                            type: string\n                      _id:\n                        type: string\n                      createdAt:\n                        type: string\n        400:\n          description: Bad request\n        500:\n          description: internal server error\n\n  /userdashboard/update:\n    post:\n      tags:\n        - User\n      summary: User can update the name, emails and photo. Photo is optional\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              required:\n                - name\n                - email\n              properties:\n                name:\n                  type: string\n                email:\n                  type: string\n                photo:\n                  in: formData\n                  description: The uploaded file data\n                  type: file\n                  format: binary\n      responses:\n        200:\n          description: All good success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  \n        400:\n          description: Bad request\n        500:\n          description: internal server error\n\n  /admin/users:\n    get:\n      tags:\n        - Admin\n      summary: If user is admin, response will get array of all users\n      requestBody:\n        \n      responses:\n        200:\n          description: All good success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    user:\n                      type: object\n                      properties:\n                        name:\n                          type: string\n                        email:\n                          type: string\n                        role:\n                          type: string\n                        photo:\n                          type: object\n                          properties:\n                            id:\n                              type: string\n                            secure_url:\n                              type: string\n                        _id:\n                          type: string\n                        createdAt:\n                          type: string\n                  \n        400:\n          description: Bad request\n        500:\n          description: internal server error\n\n  /admin/user/{id}:\n    get:\n      tags:\n        - Admin\n      summary: If user is admin, response will get details of 1 user\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        \n      responses:\n        200:\n          description: All good success\n          content:\n            application/json:\n              schema:\n                  type: object\n                  properties:\n                    user:\n                      type: object\n                      properties:\n                        name:\n                          type: string\n                        email:\n                          type: string\n                        role:\n                          type: string\n                        photo:\n                          type: object\n                          properties:\n                            id:\n                              type: string\n                            secure_url:\n                              type: string\n                        _id:\n                          type: string\n                        createdAt:\n                          type: string\n                  \n        400:\n          description: Bad request\n        500:\n          description: internal server error\n    put:\n      tags:\n        - Admin\n      summary: If user is admin, he can update mentioned fields in user\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: name\n          in: formData\n          required: true\n          schema:\n            type: string\n        - name: email\n          in: formData\n          required: true\n          schema:\n            type: string\n        - name: role\n          in: formData\n          required: true\n          schema:\n            type: string\n            enum: [user, admin, manager]\n      requestBody: \n      responses:\n        200:\n          description: All good success\n          content:\n            application/json:\n              schema:\n                  type: object\n                  properties:\n                    success:\n                      type: boolean\n                  \n        400:\n          description: Bad request\n        500:\n          description: internal server error\n    delete:\n      tags:\n        - Admin\n      summary: If user is admin, delete the user with given id\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody: \n      responses:\n        200:\n          description: All good success\n          content:\n            application/json:\n              schema:\n                  type: object\n                  properties:\n                    success:\n                      type: boolean\n                  \n        400:\n          description: Bad request\n        500:\n          description: internal server error\n\n  /manager/users:\n    get:\n      tags:\n        - Manager\n      summary: If manager, response will get array of all users whose role is user\n      requestBody:\n        \n      responses:\n        200:\n          description: All good success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    user:\n                      type: object\n                      properties:\n                        name:\n                          type: string\n                        email:\n                          type: string\n                        role:\n                          type: string\n                        photo:\n                          type: object\n                          properties:\n                            id:\n                              type: string\n                            secure_url:\n                              type: string\n                        _id:\n                          type: string\n                        createdAt:\n                          type: string\n                  \n        400:\n          description: Bad request\n        500:\n          description: internal server error\n\n  /products:\n    get:\n      tags:\n        - Product\n      summary: A simple get request will give you all available products\n      requestBody:\n        \n      responses:\n        200:\n          description: All good success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  filteredProductNumber:\n                    type: number\n                  totalcountProduct:\n                    type: number\n                  products:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        _id:\n                          type: string\n                        name:\n                          type: string\n                        price: \n                          type: number\n                        description: \n                          type: string\n                        category: \n                          type: string\n                        brand: \n                          type: string\n                        ratings: \n                          type: number\n                        numberOfReviews: \n                          type: number\n                        user: \n                          type: string\n                        photos: \n                          type: array\n                          items:\n                            type: object\n                            properties:\n                              id:\n                                type: string\n                              secure_url:\n                                type: string\n                        reviews: \n                          type: array\n                          items:\n                            type: object\n                            properties:\n                              id:\n                                type: string\n                              comment:\n                                type: string\n                              user:\n                                type: string\n                              name:\n                                type: string\n                              rating:\n                                type: number\n        400:\n          description: Bad request\n        500:\n          description: internal server error\n\n  /product/{id}:\n    get:\n      tags:\n        - Product\n      summary: Get a single product\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        \n      responses:\n        200:\n          description: All good success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  product:\n                    type: object\n                    properties:\n                      _id:\n                        type: string\n                      name:\n                        type: string\n                      price: \n                        type: number\n                      description: \n                        type: string\n                      category: \n                        type: string\n                      brand: \n                        type: string\n                      ratings: \n                        type: number\n                      numberOfReviews: \n                        type: number\n                      user: \n                        type: string\n                      photos: \n                        type: array\n                        items:\n                          type: object\n                          properties:\n                            id:\n                              type: string\n                            secure_url:\n                              type: string\n                      reviews: \n                        type: array\n                        items:\n                          type: object\n                          properties:\n                            id:\n                              type: string\n                            comment:\n                              type: string\n                            user:\n                              type: string\n                            name:\n                              type: string\n                            rating:\n                              type: number\n        400:\n          description: Bad request\n        500:\n          description: internal server error\n\n  /admin/products:\n    get:\n      tags:\n        - Admin\n      summary: If user is admin, he get all products\n      \n      requestBody:\n        \n      responses:\n        200:\n          description: All good success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  products:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        _id:\n                          type: string\n                        name:\n                          type: string\n                        price: \n                          type: number\n                        description: \n                          type: string\n                        category: \n                          type: string\n                        brand: \n                          type: string\n                        ratings: \n                          type: number\n                        numberOfReviews: \n                          type: number\n                        user: \n                          type: string\n                        photos: \n                          type: array\n                          items:\n                            type: object\n                            properties:\n                              id:\n                                type: string\n                              secure_url:\n                                type: string\n                        reviews: \n                          type: array\n                          items:\n                            type: object\n                            properties:\n                              id:\n                                type: string\n                              comment:\n                                type: string\n                              user:\n                                type: string\n                              name:\n                                type: string\n                              rating:\n                                type: number\n        400:\n          description: Bad request\n        500:\n          description: internal server error\n\n  /admin/product/add:\n    post:\n      tags:\n        - Admin\n      summary: If admin, Add a product\n\n        \n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              required:\n                - name\n                - price\n                - description\n                - category\n                - stock\n                - brand\n                - photos\n              properties:\n                name:\n                  type: string\n                  required: true\n                price:\n                  type: number\n                  required: true\n                description:\n                  type: string\n                  required: true\n                category:\n                  type: string\n                  required: true\n                  enum: [shortsleeves, longsleeves, sweatshirt, hoodies]\n                stock:\n                  type: number\n                  required: true\n                brand:\n                  type: string\n                  required: true\n                photos:\n                  in: formData\n                  description: The uploaded photos\n                  type: array\n                  items:\n                    type: file\n                    format: binary\n        \n      responses:\n        200:\n          description: All good success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  product:\n                    type: object\n                    properties:\n                      _id:\n                        type: string\n                      name:\n                        type: string\n                      price: \n                        type: number\n                      description: \n                        type: string\n                      category: \n                        type: string\n                      brand: \n                        type: string\n                      ratings: \n                        type: number\n                      numberOfReviews: \n                        type: number\n                      user: \n                        type: string\n                      photos: \n                        type: array\n                        items:\n                          type: object\n                          properties:\n                            id:\n                              type: string\n                            secure_url:\n                              type: string\n                      reviews: \n                        type: array\n                        items:\n                          type: object\n                          properties:\n                            id:\n                              type: string\n                            comment:\n                              type: string\n                            user:\n                              type: string\n                            name:\n                              type: string\n                            rating:\n                              type: number\n        400:\n          description: Bad request\n        500:\n          description: internal server error\n  \n  /admin/product/{id}:\n    put:\n      tags:\n        - Admin\n      summary: If admin, update the product. photos are optional to pass. Rest all body is set to be updated to what you pass here.\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              required:\n                - name\n                - price\n                - description\n                - category\n                - stock\n                - brand\n              properties:\n                name:\n                  type: string\n                  required: true\n                price:\n                  type: number\n                  required: true\n                description:\n                  type: number\n                  required: true\n                category:\n                  type: string\n                  required: true\n                  enum: [shortsleeves, longsleeves, sweatshirt, hoodies]\n                stock:\n                  type: number\n                  required: true\n                brand:\n                  type: string\n                  required: true\n                photos:\n                  in: formData\n                  description: The uploaded photos\n                  type: file\n                  format: binary\n        \n      responses:\n        200:\n          description: All good success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  product:\n                    type: object\n                    properties:\n                      _id:\n                        type: string\n                      name:\n                        type: string\n                      price: \n                        type: number\n                      description: \n                        type: string\n                      category: \n                        type: string\n                      brand: \n                        type: string\n                      ratings: \n                        type: number\n                      numberOfReviews: \n                        type: number\n                      user: \n                        type: string\n                      photos: \n                        type: array\n                        items:\n                          type: object\n                          properties:\n                            id:\n                              type: string\n                            secure_url:\n                              type: string\n                      reviews: \n                        type: array\n                        items:\n                          type: object\n                          properties:\n                            id:\n                              type: string\n                            comment:\n                              type: string\n                            user:\n                              type: string\n                            name:\n                              type: string\n                            rating:\n                              type: number\n        400:\n          description: Bad request\n        500:\n          description: internal server error\n    delete:\n      tags:\n        - Admin\n      summary: If admin, pass the id of product and product will be removed\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        \n      responses:\n        200:\n          description: All good success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  message:\n                    type: string\n                  \n        400:\n          description: Bad request\n        500:\n          description: internal server error\n\n  /reviews:\n      get:\n        tags:\n          - Product\n        summary: A simple get request will give you all reviews for given products\n        parameters:\n        - name: id\n          in: query\n          description: id of the product\n          required: true\n          schema:\n            type: string\n        requestBody:\n          \n        responses:\n          200:\n            description: All good success\n            content:\n              application/json:\n                schema:\n                  type: object\n                  properties:\n                    success:\n                      type: boolean\n                    reviews:\n                      type: array\n                      items:\n                        type: object\n                        properties:\n                          user:\n                            type: string\n                          name:\n                            type: string\n                          rating: \n                            type: number\n                          comment: \n                            type: string\n                          _id: \n                            type: string\n                          \n          400:\n            description: Bad request\n          500:\n            description: internal server error\n  \n  /review:\n      put:\n        tags:\n          - Product\n        summary: A logged in user can post a review on any product. If review is already posted, it will just update the existing review\n        parameters:\n        \n        requestBody:\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - rating\n                  - comment\n                  - productId\n                properties:\n                  rating:\n                    type: number\n                    required: true\n                  comment:\n                    type: string\n                    required: true\n                  productId:\n                    type: string\n                    required: true\n        responses:\n          200:\n            description: All good success\n            content:\n              application/json:\n                schema:\n                  type: object\n                  properties:\n                    success:\n                      type: boolean\n                    reviews:\n                      type: array\n                      items:\n                        type: object\n                        properties:\n                          user:\n                            type: string\n                          name:\n                            type: string\n                          rating: \n                            type: number\n                          comment: \n                            type: string\n                          _id: \n                            type: string\n                          \n          400:\n            description: Bad request\n          500:\n            description: internal server error\n      delete:\n        tags:\n          - Product\n        summary: Delete the review of logged in user on given product id.\n        parameters:\n        - name: productId\n          in: query\n          required: true\n          schema:\n            type: string\n        \n        requestBody:\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - rating\n                  - comment\n                  - productId\n                properties:\n                  rating:\n                    type: number\n                    required: true\n                  comment:\n                    type: string\n                    required: true\n                  productId:\n                    type: string\n                    required: true\n        responses:\n          200:\n            description: All good success\n            content:\n              application/json:\n                schema:\n                  type: object\n                  properties:\n                    success:\n                      type: boolean\n                    reviews:\n                      type: array\n                      items:\n                        type: object\n                        properties:\n                          user:\n                            type: string\n                          name:\n                            type: string\n                          rating: \n                            type: number\n                          comment: \n                            type: string\n                          _id: \n                            type: string\n                          \n          400:\n            description: Bad request\n          500:\n            description: internal server error\n\n  /order/create:\n    post:\n      tags:\n        - Order\n      summary: create a new order with given details\n      parameters:\n      \n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - shippingInfo\n                - paymentInfo\n                - taxAmount\n                - shippingAmount\n                - totalAmount\n                - orderItems\n              properties:\n                shippingInfo:\n                  type: object\n                  properties:\n                    address:\n                      type: string\n                    city: \n                      type: string\n                    phoneNo: \n                      type: string\n                    postalCode: \n                      type: string\n                    state: \n                      type: string\n                    country: \n                      type: string\n                paymentInfo:\n                  type: object\n                  properties:\n                    id:\n                      type: string\n                taxAmount:\n                  type: number\n                shippingAmount:\n                  type: number\n                totalAmount:\n                  type: number\n                orderItems:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      name:\n                        type: string\n                      quantity:\n                        type: string\n                      image:\n                        type: string\n                      price:\n                        type: number\n                      product:\n                        type: string\n                        description: id of product\n                  \n        \n      responses:\n        200:\n          description: All good success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  order:\n                    type: object\n                    properties:\n                      _id:\n                        type: string\n                      user:\n                        type: string\n                      orderStatus:\n                        type: string\n                      createdAt:\n                        type: string\n                      shippingInfo:\n                        type: object\n                        properties:\n                          address:\n                            type: string\n                          city: \n                            type: string\n                          phoneNo: \n                            type: string\n                          postalCode: \n                            type: string\n                          state: \n                            type: string\n                          country: \n                            type: string\n                      paymentInfo:\n                        type: object\n                        properties:\n                          id:\n                            type: string\n                      taxAmount:\n                        type: number\n                      shippingAmount:\n                        type: number\n                      totalAmount:\n                        type: number\n                      orderItems:\n                        type: array\n                        items:\n                          type: object\n                          properties:\n                            name:\n                              type: string\n                            quantity:\n                              type: string\n                            image:\n                              type: string\n                            price:\n                              type: number\n                            product:\n                              type: string\n                              description: id of product\n                        \n        400:\n          description: Bad request\n        500:\n          description: internal server error\n\n  /order/{id}:\n    get:\n      tags:\n        - Order\n      summary: get details about a order with order id\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: id of the order\n          schema:\n            type: string\n      \n      requestBody:\n        \n      responses:\n        200:\n          description: All good success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  order:\n                    type: object\n                    properties:\n                      _id:\n                        type: string\n                      user:\n                        type: object\n                        properties:\n                          name:\n                            type: string\n                          email:\n                            type: string\n                          id:\n                            type: string\n                      orderStatus:\n                        type: string\n                      createdAt:\n                        type: string\n                      shippingInfo:\n                        type: object\n                        properties:\n                          address:\n                            type: string\n                          city: \n                            type: string\n                          phoneNo: \n                            type: string\n                          postalCode: \n                            type: string\n                          state: \n                            type: string\n                          country: \n                            type: string\n                      paymentInfo:\n                        type: object\n                        properties:\n                          id:\n                            type: string\n                      taxAmount:\n                        type: number\n                      shippingAmount:\n                        type: number\n                      totalAmount:\n                        type: number\n                      orderItems:\n                        type: array\n                        items:\n                          type: object\n                          properties:\n                            name:\n                              type: string\n                            quantity:\n                              type: string\n                            image:\n                              type: string\n                            price:\n                              type: number\n                            product:\n                              type: string\n                              description: id of product\n                        \n        400:\n          description: Bad request\n        500:\n          description: internal server error\n\n  /myorder:\n    get:\n      tags:\n        - Order\n      summary: get order of logged in user\n      requestBody:\n        \n      responses:\n        200:\n          description: All good success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  order:\n                    type: object\n                    properties:\n                      _id:\n                        type: string\n                      user:\n                        type: object\n                        properties:\n                          name:\n                            type: string\n                          email:\n                            type: string\n                          id:\n                            type: string\n                      orderStatus:\n                        type: string\n                      createdAt:\n                        type: string\n                      shippingInfo:\n                        type: object\n                        properties:\n                          address:\n                            type: string\n                          city: \n                            type: string\n                          phoneNo: \n                            type: string\n                          postalCode: \n                            type: string\n                          state: \n                            type: string\n                          country: \n                            type: string\n                      paymentInfo:\n                        type: object\n                        properties:\n                          id:\n                            type: string\n                      taxAmount:\n                        type: number\n                      shippingAmount:\n                        type: number\n                      totalAmount:\n                        type: number\n                      orderItems:\n                        type: array\n                        items:\n                          type: object\n                          properties:\n                            name:\n                              type: string\n                            quantity:\n                              type: string\n                            image:\n                              type: string\n                            price:\n                              type: number\n                            product:\n                              type: string\n                              description: id of product\n                        \n        400:\n          description: Bad request\n        500:\n          description: internal server error\n\n  /admin/orders:\n    get:\n      tags:\n        - Admin\n      summary: if admin, get list of all orders\n      requestBody:\n        \n      responses:\n        200:\n          description: All good success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  orders:\n                    type: array\n                    items:\n                      properties:\n                        _id:\n                          type: string\n                        user:\n                          type: string\n                        orderStatus:\n                          type: string\n                        createdAt:\n                          type: string\n                        shippingInfo:\n                          type: object\n                          properties:\n                            address:\n                              type: string\n                            city: \n                              type: string\n                            phoneNo: \n                              type: string\n                            postalCode: \n                              type: string\n                            state: \n                              type: string\n                            country: \n                              type: string\n                        paymentInfo:\n                          type: object\n                          properties:\n                            id:\n                              type: string\n                        taxAmount:\n                          type: number\n                        shippingAmount:\n                          type: number\n                        totalAmount:\n                          type: number\n                        orderItems:\n                          type: array\n                          items:\n                            type: object\n                            properties:\n                              name:\n                                type: string\n                              quantity:\n                                type: string\n                              image:\n                                type: string\n                              price:\n                                type: number\n                              product:\n                                type: string\n                                description: id of product\n                        \n        400:\n          description: Bad request\n        500:\n          description: internal server error\n\n  /admin/order/{id}:\n    put:\n      tags:\n        - Admin\n      summary: if admin, update the status of the order\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: id of the order\n          schema:\n            type: string\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              required:\n                - orderStatus\n              properties:\n                orderStatus:\n                  type: string\n                  enum: [Processing, Delivered]\n                  required: true\n        \n      responses:\n        200:\n          description: All good success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  order:\n                    type: object\n                    properties:\n                      _id:\n                        type: string\n                      user:\n                        type: string\n                      orderStatus:\n                        type: string\n                      createdAt:\n                        type: string\n                      shippingInfo:\n                        type: object\n                        properties:\n                          address:\n                            type: string\n                          city: \n                            type: string\n                          phoneNo: \n                            type: string\n                          postalCode: \n                            type: string\n                          state: \n                            type: string\n                          country: \n                            type: string\n                      paymentInfo:\n                        type: object\n                        properties:\n                          id:\n                            type: string\n                      taxAmount:\n                        type: number\n                      shippingAmount:\n                        type: number\n                      totalAmount:\n                        type: number\n                      orderItems:\n                        type: array\n                        items:\n                          type: object\n                          properties:\n                            name:\n                              type: string\n                            quantity:\n                              type: string\n                            image:\n                              type: string\n                            price:\n                              type: number\n                            product:\n                              type: string\n                              description: id of product\n                        \n        400:\n          description: Bad request\n        500:\n          description: internal server error\n    delete:\n      tags:\n        - Admin\n      summary: if admin, delete an order with given id\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: id of the order\n          schema:\n            type: string\n      requestBody:\n        \n      responses:\n        200:\n          description: All good success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n        400:\n          description: Bad request\n        500:\n          description: internal server error\n\n  /stripekey:\n    get:\n      tags:\n        - Payment\n      summary: gets you the public stripe key\n      requestBody:\n        \n      responses:\n        200:\n          description: All good success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  stripekey:\n                    type: string\n                                 \n        400:\n          description: Bad request\n        500:\n          description: internal server error\n\n  /razorpaykey:\n    get:\n      tags:\n        - Payment\n      summary: gets you the public razorpay key\n      requestBody:\n        \n      responses:\n        200:\n          description: All good success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  razorpaykey:\n                    type: string\n                                 \n        400:\n          description: Bad request\n        500:\n          description: internal server error\n\n  /capturestripe:\n    post:\n      tags:\n        - Payment\n      summary: send amount in number. Send amount after multiplying by 100. Also request from swagger UI are not proper as to capture payment we need to send dummy card details\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              required:\n                - amount\n              properties:\n                amount:\n                  type: number\n\n        \n      responses:\n        200:\n          description: All good success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  amount:\n                    type: number\n                  client_secret:\n                    type: string\n                                 \n        400:\n          description: Bad request\n        500:\n          description: internal server error\n\n  /capturerazorpay:\n    post:\n      tags:\n        - Payment\n      summary: send amount in number. Send amount after multiplying by 100. Check orders tab, not payments. Also request from swagger UI are not proper as to capture payment we need to send dummy card details.\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              required:\n                - amount\n              properties:\n                amount:\n                  type: number\n\n        \n      responses:\n        200:\n          description: All good success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  amount:\n                    type: number\n                  order:\n                    type: object\n                    properties:\n                      id:\n                        type: string\n                      amount:\n                        type: number\n                      currency:\n                        type: string\n                                 \n        400:\n          description: Bad request\n        500:\n          description: internal server error\n\n",
			"canonicalURL": "/github.com/hiteshchoudhary/pro-backend-developer@d876ccc661b599c343890e82228a073002479aa6/-/blob/tshirtstore/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/hiteshchoudhary/pro-backend-developer/blob/d876ccc661b599c343890e82228a073002479aa6/tshirtstore/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 1: cannot unmarshal !!bool `true` into []string; yaml: line 1: cannot unmarshal !!bool `true` into []string; yaml: line 1: cannot unmarshal !!bool `true` into []string; yaml: line 1: cannot unmarshal !!bool `true` into []string; yaml: line 1: cannot unmarshal !!bool `true` into []string; yaml: line 1: cannot unmarshal !!bool `true` into []string"
}