{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ground-x/caver-js-ext-kas"
		},
		"file": {
			"name": "2021-09-30-openapi-versioned.yaml",
			"size": 0,
			"path": "yamls/kip7/2021-09-30-openapi-versioned.yaml",
			"byteSize": 95167,
			"content": "openapi: 3.0.0\ninfo:\n  version: 1.0\n  title: KIP-7 API\n  description: \"# Introduction\\nThe KIP-17 API helps BApp (Blockchain Application)\\\n    \\ developers to manage contracts and tokens created in accordance with the [KIP-7](https://docs.klaytnapi.com/v/en/api#kip-7-api)\\\n    \\ standard, which is Klaytn's technical speficication for Fungible Tokens. \\n\\\n    The functionality of the multiple endpoints enables you to do the following actions:\\n\\\n    - deploy smart contracts\\n- manage the entire life cycle of an FT from minting,\\\n    \\ to sending and burning\\n- get contract or token data\\n- authorize a third party\\\n    \\ to execute token transfers\\n- send tokens on behalf of the owner\\n\\n\\nFor more\\\n    \\ details on KAS, please refer to [KAS Docs](https://docs.klaytnapi.com/). If\\\n    \\ you have any questions or comments, please leave them in the [Klaytn Developers\\\n    \\ Forum](http://forum.klaytn.com).  \\n\\n**alias**\\n\\nWhen a method of the KIP-17\\\n    \\ API requires a contract address, you can use the contract **alias**. You can\\\n    \\ give the contract an alias when deploying, and use it in place of the complicated\\\n    \\ address.\\n\\n**deployer**\\n\\nWhen you create a contract, you will be assigned\\\n    \\ one `deployer` address per Credential, which is the account address used for\\\n    \\ managing contracts. In KIP-7 API, this address is used in many different token-related\\\n    \\ operations. You can find the `deployer` address with [KIP7Deployer](#operation/GetDefaultDeployer).\\n\\\n    \\nEven with contracts created using SDKs like \\\"caver\\\", you can still use the\\\n    \\ contract address and [Wallet API](https://refs.klaytnapi.com/en/wallet/latest)\\\n    \\ account to manage your contracts and tokens.\\n\\n# Fee Payer Options\\n\\nKAS KIP-17\\\n    \\ supports four ways to pay the transaction fees.\u003cbr /\u003e\\n\\n**1. Only using KAS\\\n    \\ Global FeePayer Account** \u003cbr /\u003e\\nSends all transactions using KAS Global FeePayer\\\n    \\ Account.\\n```\\n{\\n    \\\"options\\\": {\\n      \\\"enableGlobalFeePayer\\\": true\\n\\\n    \\    }\\n}\\n```\\n\\n\u003cbr /\u003e\\n\\n**2. Using User FeePayer Account** \u003cbr /\u003e\\nSends all\\\n    \\ transactions using User FeePayer Account.\\n```\\n{\\n  \\\"options\\\": {\\n    \\\"\\\n    enableGlobalFeePayer\\\": false,\\n    \\\"userFeePayer\\\": {\\n      \\\"krn\\\": \\\"krn:1001:wallet:20bab367-141b-439a-8b4c-ae8788b86316:feepayer-pool:default\\\"\\\n    ,\\n      \\\"address\\\": \\\"0xd6905b98E4Ba43a24E842d2b66c1410173791cab\\\"\\n    }\\n\\\n    \\  }\\n}\\n```\\n\\n\u003cbr /\u003e\\n\\n**3. Using both KAS Global FeePayer Account + User FeePayer\\\n    \\ Account** \u003cbr /\u003e\\nSends transactions using User FeePayer Account by default,\\\n    \\ and switches to the KAS Global FeePayer Account when balances are insufficient.\\n\\\n    ```\\n{\\n  \\\"options\\\": {\\n    \\\"enableGlobalFeePayer\\\": true,\\n    \\\"userFeePayer\\\"\\\n    : {\\n      \\\"krn\\\": \\\"krn:1001:wallet:20bab367-141b-439a-8b4c-ae8788b86316:feepayer-pool:default\\\"\\\n    ,\\n      \\\"address\\\": \\\"0xd6905b98E4Ba43a24E842d2b66c1410173791cab\\\"\\n    }\\n\\\n    \\  }\\n}\\n```\\n\\n\u003cbr /\u003e\\n\\n**4. Not using FeePayer Account** \u003cbr /\u003e\\nSends transactions\\\n    \\ the default way, paying the transaction fee from the user's account.\\n```\\n\\\n    {\\n  \\\"options\\\": {\\n    \\\"enableGlobalFeePayer\\\": false\\n  }\\n}\\n```\\n\\n# Error\\\n    \\ Code\\nThis section contains the errors that might occur when using the KIP-17\\\n    \\ API. KAS uses HTTP status codes. More details can be found in this [link](https://developer.mozilla.org/en/docs/Web/HTTP/Status).\\n\"\nservers:\n- url: https://kip7-api.klaytnapi.com\nsecurity:\n- basic: []\ntags:\n- name: err-400\n  description: \"The request is not valid.\\n\\n| Code | Message | Description |\\n| ---\\\n    \\ | --- | --- |\\n| 1130050 | invalid request; {data} | The data format is wrong.\\n\\\n    1100101 | data not found | Data doesn't exist.\\n1130107 | incorrect bookmark |\\\n    \\ Cursor format is wrong.\\n1010007 | invalid path or method | The path or method\\\n    \\ you entered is wrong. \\n1100251 | value out of range | Value is out of range.\\n\\\n    1104401 | failed to get account | The KRN or the `sender` address you entered\\\n    \\ is wrong. Please check your sender Account Pool.\\n1134410 | invalid address;\\\n    \\ {data} | The address you entered is wrong.\\n1134411 | invalid amount; amount\\\n    \\ | Amount is invalid.\\n1134412 | invalid krn; {data} | The KRN or the `sender`\\\n    \\ address you entered is wrong.\\n1134414 | invalid hex format: {data} | Hex format\\\n    \\ is wrong.\\n1100251 | contract not ready | Checking contract deployment status.\\n\\\n    1134403 | invalid alias format | The alias is invalid. Please check the requirements.\\n\\\n    1134418 | insufficient balance; {data} | Balance is insufficient to execute this\\\n    \\ request.\\n\"\n  x-displayName: \"400: Bad Request\"\n- name: err-401\n  description: \"The credential you entered is invalid.\\n\\n| Code | Message | Description\\\n    \\ |\\n|  --- | --- | --- |\\n| 1010009 | invalid credential | The credential you\\\n    \\ entered is invalid. \\n\"\n  x-displayName: \"401: Unauthorized\"\n- name: err-403\n  description: \"Your request has been passed on to the server, but denied due to permission\\\n    \\ issues.\\n\\n| Code | Message | Description |\\n|  --- | --- | --- |\\n| 1134300\\\n    \\ | insufficient account permission | You have no permission to this account.\\n\"\n  x-displayName: \"403: Forbidden\"\n- name: err-404\n  description: \"The resource you requested doesn't exist.\\n\\n| Code | Messages | Description\\\n    \\ |\\n| --- | --- | --- |\\n| 1134504 | contract not found | The contract doesn't\\\n    \\ exist. \\n| 1134506 | deployer not found | The deployer address doesn't exist.\\\n    \\ \\n\"\n  x-displayName: \"404: Not Found\"\n- name: err-409\n  description: \"There was a conflict with the current state of the server.\\n\\n| Code\\\n    \\ | Messages | Description |\\n| --- | --- | --- |\\n| 1134900 | duplicate alias-\\\n    \\ {alias} | This alias is already taken.\\n| 1134902 | contract already paused\\\n    \\ | Contract is already paused.\\n| 1134903 | contract already unpaused | Contract\\\n    \\ is already unpaused.\\n\"\n  x-displayName: \"409: Conflict\"\n- name: kip7-contract\n  x-displayName: Contract\n- name: kip7-token\n  x-displayName: Token\n- name: kip7-deployer\n  x-displayName: Deployer\npaths:\n  /v1/contract:\n    get:\n      tags:\n      - kip7-contract\n      summary: Get Contract List\n      description: \"Returns a list of all KIP-7 contracts deployed by the user in\\\n        \\ chronological order of contract creation request.\u003cp\u003e\u003c/p\u003e\\n\\n\\nThe `status`\\\n        \\ field in the request has the following meanings:\u003cp\u003e\u003c/p\u003e\\n\\n\\n- `init`: The\\\n        \\ initial state before sending the transaction\\n\\n- `submitted`: After the\\\n        \\ contract deployment transaction has been sent\\n\\n- `deployed`: The state\\\n        \\ in which the contract is deployed\u003cp\u003e\u003c/p\u003e\"\n      operationId: ListContractsInDeployerPool\n      parameters:\n      - name: x-chain-id\n        in: header\n        description: Klaytn Network Chain ID(1001 or 8217)\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: size\n        in: query\n        description: \"The number of items to return (min=1, max=1000, default=100).\"\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n        example: \"\"\n      - name: cursor\n        in: query\n        description: \"The pointer for the next request, after which the result will\\\n          \\ be returned.\"\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n        example: eyJjm...ZSJ9\n      - name: status\n        in: query\n        description: \"The contract deployment status you wish to return. You can select\\\n          \\ only one of [`all`,`init`,`submitted`,`deployed`]. The default value is\\\n          \\ `all`.\"\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n        example: \"\"\n      responses:\n        \"200\":\n          description: Your request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Kip7ContractListResponse'\n              examples:\n                Success:\n                  summary: Success\n                  description: Your request was successful.\n                  value:\n                    items:\n                    - address: 0x0f73bb170deb398180f02e60d7ea154c270b8fb9\n                      alias: mycontract\n                      decimals: 8\n                      name: MyKIP7\n                      status: deployed\n                      symbol: MSK7\n                      totalSupply: 0x500\n                      options:\n                        enableGlobalFeePayer: true\n                        userFeePayer:\n                          krn: krn:1001:wallet:88c1223c-66af-4122-9818-069b2e3c6b30:feepayer-pool:default\n                          address: 0xd6905b98E4Ba43a24E842d2b66c1410173791cab\n                    cursor: eyJjm...ZSJ9\n        \"400\":\n          description: Your request is not valid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid bookmark:\n                  summary: Invalid bookmark\n                  description: Cursor format ist wrong.\n                  value:\n                    code: 1130107\n                    message: incorrect bookmark\n        \"401\":\n          description: The credential you entered is invalid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid alias:\n                  summary: Invalid alias\n                  description: The credential you entered is invalid.\n                  value:\n                    code: 1010009\n                    message: The credential you provided is not valid.\n                    requestId: 1b370cb5-590d-90c2-bf4f-afb89c0b6a5a\n    post:\n      tags:\n      - kip7-contract\n      summary: Deploy Contract\n      description: \"Deploys a new KIP-7 contract with the given parameters. You will\\\n        \\ automatically be assigned a `deployer` address, which cannot be changed.\\\n        \\ You can find the `deployer` address using [KIP7Deployer](#operation/GetDefaultDeployer).\\n\\\n        \\nThe alias must only consist of lowercase letters, numbers and hyphens, and\\\n        \\ the first letter is restricted to a lowercase letter.\u003cp\u003e\u003c/p\u003e\\n\\n##### Options\\n\\\n        With `options` you can set the transaction fee payment method. You can find\\\n        \\ more details in [Fee Payer Options](#section/Fee-Payer-Options).\"\n      operationId: DeployContract\n      parameters:\n      - name: x-chain-id\n        in: header\n        description: Klaytn Network Chain ID(1001 or 8217)\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      requestBody:\n        $ref: '#/components/requestBodies/DeployKip7ContractRequest'\n      responses:\n        \"200\":\n          description: Your request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Kip7DeployResponse'\n              examples:\n                Success:\n                  summary: Success\n                  description: Your request was successful.\n                  value:\n                    status: Submitted\n                    transactionHash: 0xf7843f034f2283d0ec32886a69d44a85ce19af25d8bd89d84322b973a86328a8\n                    options:\n                      enableGlobalFeePayer: true\n                      userFeePayer:\n                        krn: krn:1001:wallet:88c1223c-66af-4122-9818-069b2e3c6b30:feepayer-pool:default\n                        address: 0xE8964cA0C83cBbF520df5597dc1f5EFc27E5E729\n        \"400\":\n          description: Your request is not valid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid request:\n                  summary: Invalid request\n                  description: The data format is wrong.\n                  value:\n                    code: 1130050\n                    message: incorrect request; alias\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n                Invalid alias format:\n                  summary: Invalid alias format\n                  description: The alias is invalid. Please check the requirements.\n                  value:\n                    code: 1134413\n                    message: invalid alias format\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n                Invalid fee payer KRN:\n                  summary: Invalid fee payer KRN\n                  description: The KRN or the `sender` address you entered is wrong.\n                  value:\n                    code: 1134412\n                    message: invalid krn; fee payer not found\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n        \"401\":\n          description: The credential you entered is invalid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid alias:\n                  summary: Invalid alias\n                  description: The credential you entered is invalid.\n                  value:\n                    code: 1010009\n                    message: The credential you provided is not valid.\n                    requestId: 1b370cb5-590d-90c2-bf4f-afb89c0b6a5a\n        \"409\":\n          description: There was a conflict with the current state of the server.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Duplicate Alias:\n                  summary: Duplicate Alias\n                  description: This alias is already taken.\n                  value:\n                    code: 1134900\n                    message: duplicate alias\n  /v1/contract/{contract-address-or-alias}:\n    get:\n      tags:\n      - kip7-contract\n      summary: Get Contract\n      description: Returns the data for a specified KIP-7 contract. You can use either\n        the contract alias or contract address.\u003cp\u003e\u003c/p\u003e\n      operationId: GetContract\n      parameters:\n      - name: x-chain-id\n        in: header\n        description: Klaytn Network Chain ID(1001 or 8217)\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: contract-address-or-alias\n        in: path\n        description: Contract address (in hex.) or alias.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Your request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Kip7ContractMetadataResponse'\n              examples:\n                Success:\n                  summary: Success\n                  description: Your request was successful.\n                  value:\n                    address: 0x0f73bb170deb398180f02e60d7ea154c270b8fb9\n                    decimals: 8\n                    name: MyKIP7\n                    symbol: MSK7\n                    totalSupply: 0x500\n                    alias: my-first-kip7\n                    options:\n                      enableGlobalFeePayer: true\n                      userFeePayer:\n                        krn: krn:1001:wallet:88c1223c-66af-4122-9818-069b2e3c6b30:feepayer-pool:default\n                        address: 0xd6905b98E4Ba43a24E842d2b66c1410173791cab\n        \"401\":\n          description: The credential you entered is invalid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid alias:\n                  summary: Invalid alias\n                  description: The credential you entered is invalid.\n                  value:\n                    code: 1010009\n                    message: The credential you provided is not valid.\n                    requestId: 1b370cb5-590d-90c2-bf4f-afb89c0b6a5a\n        \"404\":\n          description: The resource you requested doesn't exist.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Contract not found:\n                  summary: Contract not found\n                  description: The contract doesn't exist.\n                  value:\n                    code: 1134504\n                    message: contract not found\n    put:\n      tags:\n      - kip7-contract\n      summary: Update Contract\n      description: \"Updates the fee payment method for a contract.\\n\\n##### Options\\n\\\n        With `options` you can set the transaction fee payment method. You can find\\\n        \\ more details in [Fee Payer Options](#section/Fee-Payer-Options).\"\n      operationId: UpdateContract\n      parameters:\n      - name: x-chain-id\n        in: header\n        description: Klaytn Network Chain ID(1001 or 8217)\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: contract-address-or-alias\n        in: path\n        description: Contract address (in hex.) or alias.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      requestBody:\n        $ref: '#/components/requestBodies/UpdateKip7ContractRequest'\n      responses:\n        \"200\":\n          description: Your request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Kip7ContractMetadataResponse'\n              examples:\n                Success:\n                  summary: Success\n                  description: Your request was successful.\n                  value:\n                    address: 0x0f73bb170deb398180f02e60d7ea154c270b8fb9\n                    decimals: 8\n                    name: MyKIP7\n                    symbol: MSK7\n                    totalSupply: 0x500\n                    alias: my-first-kip7\n                    options:\n                      enableGlobalFeePayer: false\n                      userFeePayer:\n                        krn: krn:1001:wallet:88c1223c-66af-4122-9818-069b2e3c6b30:feepayer-pool:default\n                        address: 0xd6905b98E4Ba43a24E842d2b66c1410173791cab\n        \"400\":\n          description: Your request is not valid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid fee payer KRN:\n                  value:\n                    code: 1134412\n                    message: invalid krn;options.userFeePayer.krn\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n                Fee payer not found:\n                  value:\n                    code: 1134412\n                    message: invalid krn;fee payer not found\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n        \"401\":\n          description: The credential you entered is invalid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid alias:\n                  summary: Invalid alias\n                  description: The credential you entered is invalid.\n                  value:\n                    code: 1010009\n                    message: The credential you provided is not valid.\n                    requestId: 1b370cb5-590d-90c2-bf4f-afb89c0b6a5a\n        \"404\":\n          description: The resource you requested doesn't exist.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Contract not found:\n                  summary: Contract not found\n                  description: The contract doesn't exist.\n                  value:\n                    code: 1134504\n                    message: contract not found\n  /v1/contract/{contract-address-or-alias}/pauser:\n    post:\n      tags:\n      - kip7-contract\n      summary: Add Contract Pauser\n      description: \"Grants a specified account the authority to pause the actions\\\n        \\ of a contract. The actions of a contract here refer to sending tokens and\\\n        \\ sending tokens on the owner's behalf. To remove the authority, use [Remove\\\n        \\ Pauser](#operation/RenouncePauser).\\n\\n\u003e **NOTE**\\n\u003e \\n\u003e The `pauser` needs\\\n        \\ to be an account managed by Wallet API in order to use [Remove Contract\\\n        \\ Pauser API](#operation/RenouncePauser). Otherwise, you will have to sign\\\n        \\ and send the transaction on your own.\\n\\n##### Sender\\nThe account that\\\n        \\ grants the authority. If you leave it blank, it will automatically be set\\\n        \\ to the `deployer` address as default . You can find the `deployer` address\\\n        \\ by [KIP7Deployer](#operation/GetDefaultDeployer).   \\n\\nYou can omit the\\\n        \\ KRN if the `sender` address is managed by the KIP-7 or Wallet Service `account-pool`.\u003cbr/\u003e\\n\\\n        Otherwise you have to provide the KRN object in the header (`x-krn: krn:{chain-id}:wallet:{account-id}:account-pool:{pool\\\n        \\ name}`).\"\n      operationId: AddPauser\n      parameters:\n      - name: contract-address-or-alias\n        in: path\n        description: Contract address (in hex.) or alias.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: x-chain-id\n        in: header\n        description: Klaytn Network Chain ID(1001 or 8217)\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AddPauserKip7Request'\n            examples:\n              Success:\n                value:\n                  sender: 0x1eb15b3ccb2add3bfe132a4f6ad21ca62cf94e6d\n                  pauser: 0x9eaf20b40e0f1ced5dbba6f5cfb0d3e12b0534f4\n      responses:\n        \"200\":\n          description: Your request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Kip7TransactionStatusResponse'\n              examples:\n                Success:\n                  summary: Success\n                  description: Your request was successful.\n                  value:\n                    status: Submitted\n                    transactionHash: 0xf7843f034f2283d0ec32886a69d44a85ce19af25d8bd89d84322b973a86328a8\n                Success with multisig account:\n                  value:\n                    status: Submitted\n                    transactionId: 0x947e5149c93e0bdbd3973e348a4b3557b857d2dee865f407b29f7f02c9b5d22e\n        \"400\":\n          description: Your request is not valid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid address:\n                  value:\n                    code: 1134410\n                    message: invalid address; pauser\n        \"401\":\n          description: The credential you entered is invalid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid alias:\n                  summary: Invalid alias\n                  description: The credential you entered is invalid.\n                  value:\n                    code: 1010009\n                    message: The credential you provided is not valid.\n                    requestId: 1b370cb5-590d-90c2-bf4f-afb89c0b6a5a\n        \"403\":\n          description: Access has been denied.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                No permission:\n                  description: You have no permission to this account.\n                  value:\n                    code: 1134300\n                    message: insufficient account permissions\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n        \"404\":\n          description: The resource you requested doesn't exist.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Contract not found:\n                  summary: Contract not found\n                  description: The contract doesn't exist.\n                  value:\n                    code: 1134504\n                    message: contract not found\n  /v1/contract/{contract-address-or-alias}/pauser/{pauser-address}:\n    delete:\n      tags:\n      - kip7-contract\n      summary: Remove Contract Pauser\n      description: \"Removes the authority given to a certain account to pause the\\\n        \\ actions of specified contract. The actions of a contract here refer to sending\\\n        \\ tokens and sending tokens on the owner's behalf.\\n\\n##### Pauser\\nThe account\\\n        \\ whose authority to pause the contract will be removed.\\n\\nYou can omit the\\\n        \\ KRN if the `pauser-address` is managed by the KIP-7 or Wallet Service `account-pool`.\u003cbr\\\n        \\ /\u003e\\nOtherwise you have to provide the KRN object in the header (`x-krn:\\\n        \\ krn:{chain-id}:wallet:{account-id}:account-pool:{pool name}`).\"\n      operationId: RenouncePauser\n      parameters:\n      - name: contract-address-or-alias\n        in: path\n        description: Contract address (in hex.) or alias.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: pauser-address\n        in: path\n        description: The Klaytn account address whose authority to pause contract\n          will be removed.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: x-chain-id\n        in: header\n        description: Klaytn Network Chain ID(1001 or 8217)\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Your request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Kip7TransactionStatusResponse'\n              examples:\n                Success:\n                  summary: Success\n                  description: Your request was successful.\n                  value:\n                    status: Submitted\n                    transactionHash: 0xf7843f034f2283d0ec32886a69d44a85ce19af25d8bd89d84322b973a86328a8\n                Success with multisig account:\n                  value:\n                    status: Submitted\n                    transactionId: 0x947e5149c93e0bdbd3973e348a4b3557b857d2dee865f407b29f7f02c9b5d22e\n        \"401\":\n          description: The credential you entered is invalid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid alias:\n                  summary: Invalid alias\n                  description: The credential you entered is invalid.\n                  value:\n                    code: 1010009\n                    message: The credential you provided is not valid.\n                    requestId: 1b370cb5-590d-90c2-bf4f-afb89c0b6a5a\n        \"403\":\n          description: Access has been denied.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                No permission:\n                  description: You have no permission to this account.\n                  value:\n                    code: 1134300\n                    message: insufficient account permissions; pauser\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n        \"404\":\n          description: The resource you requested doesn't exist.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Contract not found:\n                  description: The contract doesn't exist.\n                  value:\n                    code: 1134504\n                    message: contract not found\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n  /v1/contract/{contract-address-or-alias}/pause:\n    post:\n      tags:\n      - kip7-contract\n      summary: Pause Contract\n      description: \"Pauses all actions of a specified contract. The actions of a contract\\\n        \\ here refer to sending tokens and sending tokens on the owner's behalf. You\\\n        \\ can resume the contract by using [Resume Contract](#operation/UnpauseContract).\u003cp\u003e\u003c/p\u003e\\n\\\n        \\n##### Pauser\\nThe account that sends the transaction to pause the contract.\\\n        \\ If you leave it blank, it will automatically be set to the `deployer` address\\\n        \\ as default . You can find the `deployer` address by [KIP7Deployer](#operation/GetDefaultDeployer).\\\n        \\  \\n\\nYou can omit the KRN if the `pauser` address is managed by the KIP-7\\\n        \\ or Wallet Service `account-pool`.\u003cbr /\u003e\\nOtherwise you have to provide the\\\n        \\ KRN object in the header (`x-krn: krn:{chain-id}:wallet:{account-id}:account-pool:{pool\\\n        \\ name}`).\"\n      operationId: PauseContract\n      parameters:\n      - name: x-chain-id\n        in: header\n        description: Klaytn Network Chain ID(1001 or 8217)\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: contract-address-or-alias\n        in: path\n        description: Contract address (in hex.) or alias.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PauseKip7Request'\n            examples:\n              Success:\n                value:\n                  pauser: 0x1eb15b3ccb2add3bfe132a4f6ad21ca62cf94e6d\n      responses:\n        \"200\":\n          description: Your request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Kip7TransactionStatusResponse'\n              examples:\n                Success:\n                  summary: Success\n                  description: Your request was successful.\n                  value:\n                    status: Submitted\n                    transactionHash: 0xf7843f034f2283d0ec32886a69d44a85ce19af25d8bd89d84322b973a86328a8\n        \"401\":\n          description: The credential you entered is invalid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid alias:\n                  summary: Invalid alias\n                  description: The credential you entered is invalid.\n                  value:\n                    code: 1010009\n                    message: The credential you provided is not valid.\n                    requestId: 1b370cb5-590d-90c2-bf4f-afb89c0b6a5a\n        \"404\":\n          description: The resource you requested doesn't exist.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Contract not found:\n                  summary: Contract not found\n                  description: The contract doesn't exist.\n                  value:\n                    code: 1134504\n                    message: contract not found\n        \"409\":\n          description: There was a conflict with the state of the server.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Already paused:\n                  summary: Already paused\n                  description: The contract is already paused.\n                  value:\n                    code: 1134902\n                    message: contract already paused\n  /v1/contract/{contract-address-or-alias}/unpause:\n    post:\n      tags:\n      - kip7-contract\n      summary: Resume Contract\n      description: \"Resumes the actions of the given contract. The actions of a contract\\\n        \\ here refer to sending tokens and sending tokens on the owner's behalf. \\n\\\n        \\n##### Pauser\\nThe account that sends the transaction to resume the contract.\\\n        \\ If you leave it blank, it will automatically be set to the `deployer` address\\\n        \\ as default . You can find the `deployer` address by [KIP7Deployer](#operation/GetDefaultDeployer).\\\n        \\  \\n\\nYou can omit the KRN if the `pauser` address is managed by the KIP-7\\\n        \\ or Wallet Service `account-pool`.\u003cbr/\u003e\\nOtherwise you have to provide the\\\n        \\ KRN object in the header (`x-krn: krn:{chain-id}:wallet:{account-id}:account-pool:{pool\\\n        \\ name}`).\"\n      operationId: UnpauseContract\n      parameters:\n      - name: x-chain-id\n        in: header\n        description: Klaytn Network Chain ID(1001 or 8217)\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: contract-address-or-alias\n        in: path\n        description: Contract address (in hex.) or alias.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UnpauseKip7Request'\n            examples:\n              Success:\n                value:\n                  pauser: 0x1eb15b3ccb2add3bfe132a4f6ad21ca62cf94e6d\n      responses:\n        \"200\":\n          description: Your request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Kip7TransactionStatusResponse'\n              examples:\n                Success:\n                  summary: Success\n                  description: Your request was successful.\n                  value:\n                    status: Submitted\n                    transactionHash: 0xf7843f034f2283d0ec32886a69d44a85ce19af25d8bd89d84322b973a86328a8\n        \"401\":\n          description: The credential you entered is invalid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid alias:\n                  summary: Invalid alias\n                  description: The credential you entered is invalid.\n                  value:\n                    code: 1010009\n                    message: The credential you provided is not valid.\n                    requestId: 1b370cb5-590d-90c2-bf4f-afb89c0b6a5a\n        \"404\":\n          description: The resource you requested doesn't exist.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Contract not found:\n                  summary: Contract not found\n                  description: The contract doesn't exist.\n                  value:\n                    code: 1134504\n                    message: contract not found\n        \"409\":\n          description: There was a conflict with current state of the server.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Already resumed:\n                  summary: Already resumed\n                  description: The contract is already resumed.\n                  value:\n                    code: 1134903\n                    message: contract already unpaused\n  /v1/contract/{contract-address-or-alias}/minter:\n    post:\n      tags:\n      - kip7-token\n      summary: Add Minter\n      description: \"Grants a specified account the authority to mint and burn tokens\\\n        \\ from a contract. You can remove the authority by using [Remove Minter](#operation/RenounceMinter).\\n\\\n        \\n\u003e **NOTE** \\n\u003e\\n\u003e `minter` is the address that will be granted the authority.\\\n        \\ It needs to be managed by Wallet API in order to be use [Remove Minter](#operation/RenounceMinter).\\\n        \\ Otherwise, you have to sign and send the transaction yourself.\\n\\n#####\\\n        \\ Sender\\nThe account that sends the transaction to grant the authority for\\\n        \\ tokens. If you leave it blank, it will automatically be set to the `deployer`\\\n        \\ address as default . You can find the `deployer` address by [KIP7Deployer](#operation/GetDefaultDeployer).\\\n        \\  \\n\\nYou can omit the KRN if the `sender` address is managed by the KIP-7\\\n        \\ or Wallet Service `account-pool`.\u003cbr /\u003e\\nOtherwise you have to provide the\\\n        \\ KRN object in the header (`x-krn: krn:{chain-id}:wallet:{account-id}:account-pool:{pool\\\n        \\ name}`).\"\n      operationId: AddMinter\n      parameters:\n      - name: contract-address-or-alias\n        in: path\n        description: Contract address (in hex.) or alias.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: x-chain-id\n        in: header\n        description: Klaytn Network Chain ID(1001 or 8217)\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AddMinterKip7Request'\n            examples:\n              Success:\n                value:\n                  sender: 0x1eb15b3ccb2add3bfe132a4f6ad21ca62cf94e6d\n                  minter: 0x9eaf20b40e0f1ced5dbba6f5cfb0d3e12b0534f4\n      responses:\n        \"200\":\n          description: Your request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Kip7TransactionStatusResponse'\n              examples:\n                Success:\n                  summary: \"null\"\n                  value:\n                    status: Submitted\n                    transactionHash: 0xf7843f034f2283d0ec32886a69d44a85ce19af25d8bd89d84322b973a86328a8\n        \"400\":\n          description: Your request is not valid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid address:\n                  summary: Invalid address\n                  description: Address is invalid.\n                  value:\n                    code: 1134410\n                    message: invalid address; minter\n        \"401\":\n          description: The credential you entered is invalid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid alias:\n                  summary: Invalid alias\n                  description: The credential you entered is invalid.\n                  value:\n                    code: 1010009\n                    message: The credential you provided is not valid.\n                    requestId: 1b370cb5-590d-90c2-bf4f-afb89c0b6a5a\n        \"403\":\n          description: Access has been denied.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                No permission:\n                  summary: No permission\n                  description: You have no permission to this account.\n                  value:\n                    code: 1134300\n                    message: insufficient account permissions\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n        \"404\":\n          description: The resource you requested doesn't exist.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Contract not found:\n                  summary: Contract not found\n                  description: The contract doesn't exist.\n                  value:\n                    code: 1134504\n                    message: contract not found\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n  /v1/contract/{contract-address-or-alias}/minter/{minter-address}:\n    delete:\n      tags:\n      - kip7-token\n      summary: Remove Minter\n      description: \"Removes the authority granted to a specifed account to mint and\\\n        \\ burn tokens from a contract.\\n\\n##### Minter\\nThe address whose authority\\\n        \\ to mint and burn tokens will be removed.\\n\\nYou can omit the KRN if the\\\n        \\ `minter-address` is managed by the KIP-7 or Wallet Service `account-pool`.\u003cbr\\\n        \\ /\u003e\\nOtherwise you have to provide the KRN object in the header (`x-krn:\\\n        \\ krn:{chain-id}:wallet:{account-id}:account-pool:{pool name}`).\\n\"\n      operationId: RenounceMinter\n      parameters:\n      - name: contract-address-or-alias\n        in: path\n        description: Contract address (in hex.) or alias.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: minter-address\n        in: path\n        description: The Klaytn account address whose authority to mint and burn tokens\n          will be removed.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: x-chain-id\n        in: header\n        description: Klaytn Network Chain ID(1001 or 8217)\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Your request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Kip7TransactionStatusResponse'\n              examples:\n                Success:\n                  summary: Success\n                  description: Your request was successful.\n                  value:\n                    status: Submitted\n                    transactionHash: 0xf7843f034f2283d0ec32886a69d44a85ce19af25d8bd89d84322b973a86328a8\n        \"401\":\n          description: The credential you entered is invalid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid alias:\n                  summary: Invalid alias\n                  description: The credential you entered is invalid.\n                  value:\n                    code: 1010009\n                    message: The credential you provided is not valid.\n                    requestId: 1b370cb5-590d-90c2-bf4f-afb89c0b6a5a\n        \"403\":\n          description: Access has been denied.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                No permission:\n                  summary: No permission\n                  description: You have no permission to this account.\n                  value:\n                    code: 1134300\n                    message: insufficient account permissions\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n        \"404\":\n          description: The resource you requested doesn't exist.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Contract not found:\n                  summary: Contract not found\n                  description: The contract doesn't exist.\n                  value:\n                    code: 1134504\n                    message: contract not found\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n  /v1/contract/{contract-address-or-alias}/mint:\n    post:\n      tags:\n      - kip7-token\n      summary: Mint Token\n      description: \"Mints a specified amount of tokens to a specified account address.\\n\\\n        \\nThe contract's `totalSupply` will increase accordingly.\u003cp\u003e\u003c/p\u003e\\n\\n#####\\\n        \\ From\\nThe account that sends the transaction. You can enter the Klaytn account\\\n        \\ address of an authorized Minter, or leave it blank, so it will automatically\\\n        \\ be set to the `deployer` address as default . You can find the `deployer`\\\n        \\ address by [KIP7Deployer](#operation/GetDefaultDeployer).\\n\\nYou can omit\\\n        \\ the KRN if the `from` address is managed by the KIP-7 or Wallet Service\\\n        \\ `account-pool`.\u003cbr /\u003e\\nOtherwise you have to provide the KRN object in the\\\n        \\ header (`x-krn: krn:{chain-id}:wallet:{account-id}:account-pool:{pool name}`).\\n\\\n        \\n\\n\u003e **NOTE**\\n\u003e\\n\u003e Remember that a contract address is not an account address\\\n        \\ managed by Wallet Service, so it can't in `from`.\"\n      operationId: MintToken\n      parameters:\n      - name: x-chain-id\n        in: header\n        description: Klaytn Network Chain ID(1001 or 8217)\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: contract-address-or-alias\n        in: path\n        description: Contract address (in hex.) or alias.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      requestBody:\n        $ref: '#/components/requestBodies/MintKip7TokenRequest'\n      responses:\n        \"200\":\n          description: Your request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Kip7TransactionStatusResponse'\n              examples:\n                Success:\n                  summary: Success\n                  description: Your request was successful.\n                  value:\n                    status: Submitted\n                    transactionHash: 0x31dd75c39e569b3fa5336186a6a464c0a84c487f481e80009a4d238fbe0d2357\n        \"400\":\n          description: Your request is not valid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid address:\n                  summary: Invalid address\n                  description: The address you entered is wrong.\n                  value:\n                    code: 1134410\n                    message: invalid address; to\n        \"401\":\n          description: The credential you entered is invalid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid alias:\n                  summary: Invalid alias\n                  description: The credential you entered is invalid.\n                  value:\n                    code: 1010009\n                    message: The credential you provided is not valid.\n                    requestId: 1b370cb5-590d-90c2-bf4f-afb89c0b6a5a\n        \"404\":\n          description: The resource you requested doesn't exist.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Contract not found:\n                  summary: Contract not found\n                  description: The contract doesn't exist.\n                  value:\n                    code: 1134504\n                    message: contract not found\n  /v1/contract/{contract-address-or-alias}/transfer:\n    post:\n      tags:\n      - kip7-token\n      summary: Send Token\n      description: \"Sends a token to a specified address.\\n\\n##### From\\nThe account\\\n        \\ that sends the transaction to transfer tokens. If you leave it blank, it\\\n        \\ will automatically be set to the `deployer` address as default . You can\\\n        \\ find the `deployer` address by [KIP7Deployer](#operation/GetDefaultDeployer).\\\n        \\  \u003cbr/\u003e\\n\\nYou can omit the KRN if the `from` address is managed by the KIP-7\\\n        \\ or Wallet Service `account-pool`.\u003cbr /\u003e\\nOtherwise you have to provide the\\\n        \\ KRN object in the header (`x-krn: krn:{chain-id}:wallet:{account-id}:account-pool:{pool\\\n        \\ name}`).\"\n      operationId: TransferToken\n      parameters:\n      - name: x-chain-id\n        in: header\n        description: Klaytn Network Chain ID(1001 or 8217)\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: contract-address-or-alias\n        in: path\n        description: Contract address (in hex.) or alias.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      requestBody:\n        $ref: '#/components/requestBodies/TransferKip7TokenRequest'\n      responses:\n        \"200\":\n          description: Your request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Kip7TransactionStatusResponse'\n              examples:\n                Success:\n                  summary: Success\n                  description: Your request was successful.\n                  value:\n                    status: Submitted\n                    transactionHash: 0x60412f876bfb8ae9953caa47be11cd5961a591198e09c25bb8cc3b26e416a862\n        \"400\":\n          description: Your request is not valid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid address:\n                  summary: Invalid address\n                  description: The address you entered is wrong.\n                  value:\n                    code: 1134410\n                    message: invalid address; to\n                Insufficient balance:\n                  summary: Insufficient balance\n                  description: Balance is insufficient to execute this request.\n                  value:\n                    code: 1134418\n                    message: insufficient balance; amount\n                    requestId: 653cf078-1dd1-428d-a948-6d868b4210a1\n        \"401\":\n          description: The credential you entered is invalid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid alias:\n                  summary: Invalid alias\n                  description: The credential you entered is invalid.\n                  value:\n                    code: 1010009\n                    message: The credential you provided is not valid.\n                    requestId: 1b370cb5-590d-90c2-bf4f-afb89c0b6a5a\n        \"404\":\n          description: The resource you requested doesn't exist.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Contract not found:\n                  summary: Contract not found\n                  description: The contract doesn't exist.\n                  value:\n                    code: 1134504\n                    message: contract not found\n  /v1/contract/{contract-address-or-alias}/transfer-from:\n    post:\n      tags:\n      - kip7-token\n      summary: Send Token on Behalf of Owner\n      description: \"Sends a token with an account authorized via [Approve Token Transfer](#operation/ApproveToken).\\\n        \\ You can view the remaining balance of authorized tokens by using [Get Approved\\\n        \\ Balance](#operation/GetTokenAllowance).\u003cp\u003e\u003c/p\u003e\\n\\n##### Spender\\nThe account\\\n        \\ that has been granted the authority from the `owner` to send tokens on his/her\\\n        \\ behalf.\\n\\nYou can omit the KRN if the `spender` address is managed by the\\\n        \\ KIP-7 or Wallet Service `account-pool`.\u003cbr /\u003e\\nOtherwise you have to provide\\\n        \\ the KRN object in the header (`x-krn: krn:{chain-id}:wallet:{account-id}:account-pool:{pool\\\n        \\ name}`).\"\n      operationId: TransferFromToken\n      parameters:\n      - name: x-chain-id\n        in: header\n        description: Klaytn Network Chain ID(1001 or 8217)\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: contract-address-or-alias\n        in: path\n        description: Contract address (in hex.) or alias.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      requestBody:\n        $ref: '#/components/requestBodies/TransferKip7TokenFromRequest'\n      responses:\n        \"200\":\n          description: Your request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Kip7TransactionStatusResponse'\n              examples:\n                Success:\n                  summary: Success\n                  description: Your request was successful.\n                  value:\n                    status: Submitted\n                    transactionHash: 0x60412f876bfb8ae9953caa47be11cd5961a591198e09c25bb8cc3b26e416a862\n        \"400\":\n          description: Your request is not valid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid address:\n                  summary: Invalid address\n                  description: The address you entered is wrong.\n                  value:\n                    code: 1134410\n                    message: invalid address; to\n                Insufficient balance:\n                  summary: Insufficient balance\n                  description: Balance is insufficient to execute this request.\n                  value:\n                    code: 1134418\n                    message: insufficient balance; amount\n                    requestId: 653cf078-1dd1-428d-a948-6d868b4210a1\n        \"401\":\n          description: The credential you entered is invalid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid alias:\n                  summary: Invalid alias\n                  description: The credential you entered is invalid.\n                  value:\n                    code: 1010009\n                    message: The credential you provided is not valid.\n                    requestId: 1b370cb5-590d-90c2-bf4f-afb89c0b6a5a\n        \"404\":\n          description: The resource you requested doesn't exist.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Contract not found:\n                  summary: Contract not found\n                  description: The contract doesn't exist.\n                  value:\n                    code: 1134504\n                    message: contract not found\n  /v1/contract/{contract-address-or-alias}/account/{owner}/balance:\n    get:\n      tags:\n      - kip7-token\n      summary: Get Token Balance\n      description: |-\n        \"Returns the `owner`'s balance of the tokens from a specified  KIP-7 contract. \u003cp\u003e\u003c/p\u003e\n\n        \\n\"\n      operationId: GetTokenBalance\n      parameters:\n      - name: x-chain-id\n        in: header\n        description: Klaytn Network Chain ID(1001 or 8217)\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: contract-address-or-alias\n        in: path\n        description: Contract address (in hex.) or alias.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: owner\n        in: path\n        description: The Klaytn account address whose balance is requested.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Your request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Kip7TokenBalanceResponse'\n              examples:\n                Success:\n                  summary: Success\n                  description: Your request was successful.\n                  value:\n                    balance: 0x10\n                    decimals: 8\n        \"400\":\n          description: Your request is not valid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid address:\n                  summary: Invalid address\n                  description: The address you entered is wrong.\n                  value:\n                    code: 1134410\n                    message: invalid address; owner\n        \"401\":\n          description: The credential you entered is invalid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid alias:\n                  summary: Invalid alias\n                  description: The credential you entered is invalid.\n                  value:\n                    code: 1010009\n                    message: The credential you provided is not valid.\n                    requestId: 1b370cb5-590d-90c2-bf4f-afb89c0b6a5a\n        \"404\":\n          description: The resource you requested doesn't exist.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Contract not found:\n                  summary: Contract not found\n                  description: The contract doesn't exist.\n                  value:\n                    code: 1134504\n                    message: contract not found\n  /v1/contract/{contract-address-or-alias}/approve:\n    post:\n      tags:\n      - kip7-token\n      summary: Authorize to Send Token\n      description: \"Grants authority to `spender` to send a certain amount of tokens\\\n        \\ from the `owner`'s account.\\n\\nTo send the token as an authorized `spender`,\\\n        \\ use [Send Token on Behalf of Owner](#operation/TransferFromToken).\u003cp\u003e\u003c/p\u003e\\n\\\n        \\n\u003e **NOTE** \\n\u003e\\n\u003e `spender` is the address that will be granted the authority.\\\n        \\ It needs to be managed by Wallet API in order to be use [Send Token on Behalf\\\n        \\ of Owner](#operation/TransferFromToken).\\n\\n##### Owner\\nThe account that\\\n        \\ owns the token, and grants authority to `spender`. If you leave it blank,\\\n        \\ it will automatically be set to the `deployer` address as default . You\\\n        \\ can find the `deployer` address by [KIP7Deployer](#operation/GetDefaultDeployer).\\\n        \\  \\n\\nYou can omit the KRN if the `owner` address is managed by the KIP-7\\\n        \\ or Wallet Service `account-pool`.\u003cbr /\u003e\\nOtherwise you have to provide the\\\n        \\ KRN object in the header (`x-krn: krn:{chain-id}:wallet:{account-id}:account-pool:{pool\\\n        \\ name}`).\"\n      operationId: ApproveToken\n      parameters:\n      - name: x-chain-id\n        in: header\n        description: Klaytn Network Chain ID(1001 or 8217)\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: contract-address-or-alias\n        in: path\n        description: Contract address (in hex.) or alias.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      requestBody:\n        $ref: '#/components/requestBodies/ApproveKip7TokenRequest'\n      responses:\n        \"200\":\n          description: Your request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Kip7TransactionStatusResponse'\n              examples:\n                Success:\n                  summary: Success\n                  description: Your request was successful.\n                  value:\n                    status: Submitted\n                    transactionHash: 0x60412f876bfb8ae9953caa47be11cd5961a591198e09c25bb8cc3b26e416a862\n        \"400\":\n          description: Your request is not valid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid address:\n                  summary: Invalid address\n                  description: The address you entered is wrong.\n                  value:\n                    code: 1130050\n                    message: incorrect request; spender\n        \"401\":\n          description: The credential you entered is invalid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid alias:\n                  summary: Invalid alias\n                  description: The credential you entered is invalid.\n                  value:\n                    code: 1010009\n                    message: The credential you provided is not valid.\n                    requestId: 1b370cb5-590d-90c2-bf4f-afb89c0b6a5a\n        \"404\":\n          description: The resource you requested doesn't exist.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Contract not found:\n                  summary: Contract not found\n                  description: The contract doesn't exist.\n                  value:\n                    code: 1134504\n                    message: contract not found\n  /v1/contract/{contract-address-or-alias}/account/{owner}/allowance/{spender}:\n    get:\n      tags:\n      - kip7-token\n      summary: Get Approved Balance\n      description: Returns the remaining balance of the tokens that the `owner` authorized\n        the `spender` to send.\u003cp\u003e\u003c/p\u003e\n      operationId: GetTokenAllowance\n      parameters:\n      - name: x-chain-id\n        in: header\n        description: Klaytn Network Chain ID(1001 or 8217)\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: contract-address-or-alias\n        in: path\n        description: Contract address (in hex.) or alias.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: owner\n        in: path\n        description: The Klaytn account address of the token's owner.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: spender\n        in: path\n        description: 'The Klaytn account address granted the authority to send the\n          tokens. '\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Your request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Kip7TokenBalanceResponse'\n              examples:\n                Success:\n                  summary: Success\n                  description: Your request was successful.\n                  value:\n                    balance: 0x10\n                    decimals: 8\n        \"400\":\n          description: Your request is not valid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid address:\n                  summary: Invalid address\n                  description: The address you entered is wrong.\n                  value:\n                    code: 1134410\n                    message: invalid address; owner\n        \"401\":\n          description: The credential you entered is invalid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid alias:\n                  summary: Invalid alias\n                  description: The credential you entered is invalid.\n                  value:\n                    code: 1010009\n                    message: The credential you provided is not valid.\n                    requestId: 1b370cb5-590d-90c2-bf4f-afb89c0b6a5a\n        \"404\":\n          description: The resource you requested doesn't exist.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Contract not found:\n                  summary: Contract not found\n                  description: The contract doesn't exist.\n                  value:\n                    code: 1134504\n                    message: contract not found\n  /v1/contract/{contract-address-or-alias}/burn:\n    delete:\n      tags:\n      - kip7-token\n      summary: Burn Token\n      description: \"Burns tokens. The contract's `totalSupply` will be reduced accordingly.\\\n        \\ You can find the `totalSupply` by using [Get Contract](#operation/GetContract).\\\n        \\ \u003cp\u003e\u003c/p\u003e\\n\\n##### From\\nThe account that sends the transaction to burn tokens.\\\n        \\ If you leave it blank, it will automatically be set to the `deployer` address\\\n        \\ as default . You can find the `deployer` address by [KIP7Deployer](#operation/GetDefaultDeployer).\\\n        \\  \\n\\nYou can omit the KRN if the `from` address is managed by the KIP-7\\\n        \\ or Wallet Service `account-pool`.\u003cbr /\u003e\\nOtherwise you have to provide the\\\n        \\ KRN object in the header (`x-krn: krn:{chain-id}:wallet:{account-id}:account-pool:{pool\\\n        \\ name}`).\"\n      operationId: BurnToken\n      parameters:\n      - name: x-chain-id\n        in: header\n        description: Klaytn Network Chain ID(1001 or 8217)\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: contract-address-or-alias\n        in: path\n        description: Contract address (in hex.) or alias.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      requestBody:\n        $ref: '#/components/requestBodies/BurnKip7TokenRequest'\n      responses:\n        \"200\":\n          description: Your request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Kip7TransactionStatusResponse'\n              examples:\n                Success:\n                  summary: Success\n                  description: Your request was successful.\n                  value:\n                    status: Submitted\n                    transactionHash: 0x60412f876bfb8ae9953caa47be11cd5961a591198e09c25bb8cc3b26e416a862\n        \"400\":\n          description: Your request is not valid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid amount:\n                  summary: Invalid amount\n                  value:\n                    code: 1134411\n                    message: invalid amount; amount\n        \"401\":\n          description: The credential you entered is invalid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid alias:\n                  summary: Invalid alias\n                  description: The credential you entered is invalid.\n                  value:\n                    code: 1010009\n                    message: The credential you provided is not valid.\n                    requestId: 1b370cb5-590d-90c2-bf4f-afb89c0b6a5a\n        \"404\":\n          description: The resource you requested doesn't exist.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Contract not found:\n                  summary: Contract not found\n                  description: The contract doesn't exist.\n                  value:\n                    code: 1134504\n                    message: contract not found\n  /v1/contract/{contract-address-or-alias}/burn-from:\n    delete:\n      tags:\n      - kip7-token\n      summary: Burn Authorized Tokens\n      description: \"Burns the tokens from the amount that the `spender` is authorized\\\n        \\ to send, as specified by the `owner`. The remaining balance of the tokens\\\n        \\ that the `sender` is allowed to send can be found via [Get Token Balance](#operation/GetTokenBalance).\u003cp\u003e\u003c/p\u003e\\n\\\n        \\n##### Spender\\nThe account that sends the transaction.\\n\\nYou can omit the\\\n        \\ KRN if the `spender` address is managed by the KIP-7 or Wallet Service `account-pool`.\u003cbr\\\n        \\ /\u003e\\nOtherwise you have to provide the KRN object in the header (`x-krn:\\\n        \\ krn:{chain-id}:wallet:{account-id}:account-pool:{pool name}`).\"\n      operationId: BurnFromToken\n      parameters:\n      - name: x-chain-id\n        in: header\n        description: Klaytn Network Chain ID(1001 or 8217)\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: contract-address-or-alias\n        in: path\n        description: Contract address (in hex.) or alias.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      requestBody:\n        $ref: '#/components/requestBodies/BurnFromKip7TokenRequest'\n      responses:\n        \"200\":\n          description: Your request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Kip7TransactionStatusResponse'\n              examples:\n                Success:\n                  summary: Success\n                  description: Your request was successful.\n                  value:\n                    status: Submitted\n                    transactionHash: 0x60412f876bfb8ae9953caa47be11cd5961a591198e09c25bb8cc3b26e416a862\n        \"400\":\n          description: Your request is not valid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid address:\n                  summary: Invalid address\n                  description: The address you entered is wrong.\n                  value:\n                    code: 1134410\n                    message: invalid address; address\n        \"401\":\n          description: The credential you entered is invalid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid alias:\n                  summary: Invalid alias\n                  description: The credential you entered is invalid.\n                  value:\n                    code: 1010009\n                    message: The credential you provided is not valid.\n                    requestId: 1b370cb5-590d-90c2-bf4f-afb89c0b6a5a\n        \"404\":\n          description: The resource you requested doesn't exist.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Contract not found:\n                  summary: Contract not found\n                  description: The contract doesn't exist.\n                  value:\n                    code: 1134504\n                    message: contract not found\n  /v1/deployer/default:\n    get:\n      tags:\n      - kip7-deployer\n      summary: Get Deployer Address\n      description: Retrieves the `deployer` address automatically created when deploying\n        a contract. You will get one `deployer` address per Credential.\u003cp\u003e\u003c/p\u003e\n      operationId: GetDefaultDeployer\n      parameters:\n      - name: x-chain-id\n        in: header\n        description: Klaytn Network Chain ID(1001 or 8217)\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Your request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Kip7DeployerResponse'\n              examples:\n                Success:\n                  summary: Success\n                  description: Your request was successful.\n                  value:\n                    address: 0xA490cbCB43a64cc4671F436dB9D33eD7A73Da675\n                    krn: krn:1001:kip7:88c1223c-66af-4122-9818-069b2e3c6b30:account-pool:default\n        \"401\":\n          description: The credential you entered is invalid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid alias:\n                  summary: Invalid alias\n                  description: The credential you entered is invalid.\n                  value:\n                    code: 1010009\n                    message: The credential you provided is not valid.\n                    requestId: 1b370cb5-590d-90c2-bf4f-afb89c0b6a5a\n        \"404\":\n          description: The resource you requested doesn't exist.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Deployer not Found:\n                  summary: Deployer not Found\n                  description: The deployer address doesn't exist.\n                  value:\n                    code: 1134506\n                    message: deployer not found\ncomponents:\n  schemas:\n    Kip7ContractListResponse:\n      title: Kip7ContractListResponse\n      required:\n      - cursor\n      - items\n      type: object\n      properties:\n        items:\n          type: array\n          items:\n            $ref: '#/components/schemas/Kip7ContractListResponseItem'\n        cursor:\n          type: string\n          description: \"The pointer for the next request, after which the result will\\\n            \\ be returned.\"\n          example: \"\"\n      description: \"\"\n    ErrorResponse:\n      title: ErrorResponse\n      required:\n      - code\n      - message\n      - requestId\n      type: object\n      properties:\n        code:\n          type: integer\n          description: Error Code\n        message:\n          type: string\n          description: Error Message\n        requestId:\n          type: string\n          description: Request ID\n    Kip7DeployResponse:\n      title: Kip7DeployResponse\n      required:\n      - status\n      - transactionHash\n      type: object\n      properties:\n        status:\n          type: string\n          description: \"Transaction status (`Submitted`, `Pending`)\"\n        transactionHash:\n          type: string\n          description: Transaction hash\n        options:\n          $ref: '#/components/schemas/Kip7FeePayerOptionsResponse'\n    Kip7ContractMetadataResponse:\n      title: Kip7ContractMetadataResponse\n      required:\n      - address\n      - decimals\n      - name\n      - symbol\n      - totalSupply\n      type: object\n      properties:\n        address:\n          type: string\n          description: Contract address\n          example: 0x0f73bb170deb398180f02e60d7ea154c270b8fb9\n        decimals:\n          type: integer\n          description: The number of digits that come after the decimal place when\n            displaying token values on-screen. The default value is `0`.\n          format: int64\n          example: 8\n        name:\n          type: string\n          description: Contract name\n          example: MyKIP7\n        symbol:\n          type: string\n          description: Contract symbol\n          example: MSK7\n        totalSupply:\n          type: string\n          description: Total supply (in hex)\n          example: 0x500\n        options:\n          $ref: '#/components/schemas/Kip7FeePayerOptions'\n      description: \"\"\n    AddPauserKip7Request:\n      title: AddPauserKip7Request\n      required:\n      - pauser\n      type: object\n      properties:\n        sender:\n          type: string\n          description: Klaytn account address that grants to be granted authority\n            to send and pause a contract. The default value is the `deployer`'s address.\n          example: 0x1eb15b3ccb2add3bfe132a4f6ad21ca62cf94e6d\n        pauser:\n          type: string\n          description: The Klaytn account address to be granted authority to send\n            and pause a contract.\n          example: 0x9eaf20b40e0f1ced5dbba6f5cfb0d3e12b0534f4\n      description: \"\"\n    Kip7TransactionStatusResponse:\n      title: Kip7TransactionStatusResponse\n      required:\n      - status\n      type: object\n      properties:\n        status:\n          type: string\n          description: \"Transaction status (`Submitted`,`Pending`)\"\n          example: Submitted\n        transactionHash:\n          type: string\n          description: Transaction hash\n          example: 0xf7843f034f2283d0ec32886a69d44a85ce19af25d8bd89d84322b973a86328a8\n        transactionId:\n          type: string\n          description: Multisig transaction ID\n          example: 0x947e5149c93e0bdbd3973e348a4b3557b857d2dee865f407b29f7f02c9b5d22e\n      description: \"\"\n    PauseKip7Request:\n      title: PauseKip7Request\n      type: object\n      properties:\n        pauser:\n          type: string\n          description: The Klaytn account address whose authority to send contracts\n            will be removed. The default value is the `deployer`'s address.\n    UnpauseKip7Request:\n      title: UnpauseKip7Request\n      type: object\n      properties:\n        pauser:\n          type: string\n          description: \"The Klaytn account address whose authority to carry out contract\\\n            \\ operations - transfer and authorization of tokens, etc. -  will be recovered.\\\n            \\ The default value is the `deployer`'s address.\"\n    AddMinterKip7Request:\n      title: AddMinterKip7Request\n      required:\n      - minter\n      type: object\n      properties:\n        sender:\n          type: string\n          description: Klaytn account address that grants authority to mint and burn\n            a token. The default value is the `deployer`'s address'.\n          example: 0x1eb15b3ccb2add3bfe132a4f6ad21ca62cf94e6d\n        minter:\n          type: string\n          description: The Klaytn account address to be granted authority to mint\n            and burn tokens.\n          example: 0x9eaf20b40e0f1ced5dbba6f5cfb0d3e12b0534f4\n      description: \"\"\n    Kip7TokenBalanceResponse:\n      title: Kip7TokenBalanceResponse\n      required:\n      - balance\n      - decimals\n      type: object\n      properties:\n        balance:\n          type: string\n          description: Balance (in hex.)\n          example: 0x10\n        decimals:\n          type: integer\n          description: The number of digits that come after the decimal place when\n            displaying token values on-screen. The default value is `0`.\n          format: int64\n          example: 8\n      description: \"\"\n    Kip7DeployerResponse:\n      title: Kip7DeployerResponse\n      required:\n      - address\n      - krn\n      type: object\n      properties:\n        address:\n          type: string\n          description: The default Klaytn account address (`deployer`) that manages\n            contracts.\n          example: \"939503546684984478007064713435074187155134588533\"\n        krn:\n          type: string\n          description: KRN of the account\n          example: krn:1001:kip7:88c1223c-66af-4122-9818-069b2e3c6b30:account-pool:default\n    DeployKip7ContractRequest:\n      title: DeployKip7ContractRequest\n      required:\n      - alias\n      - initialSupply\n      - name\n      - symbol\n      type: object\n      properties:\n        alias:\n          type: string\n          description: \"The alias of the contract. When using KIP-7 API, you can use\\\n            \\ the contract alias in place of the address. The alias must only consist\\\n            \\ of lowercase letters, numbers and hyphens, and the first letter is restricted\\\n            \\ to a lowercase letter.\"\n          example: mycontract\n        name:\n          type: string\n          description: Contract name\n          example: MyKIP7\n        symbol:\n          type: string\n          description: Token symbol\n          example: MSK7\n        decimals:\n          type: integer\n          description: The number of digits that come after the decimal place when\n            displaying token values on-screen. The default value is `0`.\n          format: int64\n          example: 8\n        initialSupply:\n          type: string\n          description: Initial supply (in hex.)\n          example: 0x100\n        options:\n          $ref: '#/components/schemas/Kip7FeePayerOptions'\n      description: \"\"\n    UpdateKip7ContractRequest:\n      title: UpdateKip7ContractRequest\n      type: object\n      properties:\n        options:\n          $ref: '#/components/schemas/Kip7FeePayerOptions'\n    MintKip7TokenRequest:\n      title: MintKip7TokenRequest\n      required:\n      - amount\n      - to\n      type: object\n      properties:\n        from:\n          type: string\n          description: The Klaytn account address to mint the tokens. The default\n            value is the `deployer`'s account.\n          example: not-eoa\n        to:\n          type: string\n          description: The Klaytn account address to receive the new tokens.\n          example: not-eoa\n        amount:\n          type: string\n          description: The amount of tokens to create (in hexadecimal)\n          example: 0x10\n      description: \"\"\n    TransferKip7TokenRequest:\n      title: TransferKip7TokenRequest\n      required:\n      - amount\n      - to\n      type: object\n      properties:\n        from:\n          type: string\n          description: The Klaytn account address to send the tokens. The default\n            value is the `deployer`'s address.\n          example: 0xd6905b98E4Ba43a24E842d2b66c1410173791cab\n        to:\n          type: string\n          description: The Klaytn account address to receive the tokens.\n          example: 0xaddbf9cbfd30768202b70b5504c012fbdf00b8d8\n        amount:\n          type: string\n          description: The amount of tokens to transfer (in hex.)\n          example: 0x50\n      description: \"\"\n    TransferKip7TokenFromRequest:\n      title: TransferKip7TokenFromRequest\n      required:\n      - amount\n      - owner\n      - spender\n      - to\n      type: object\n      properties:\n        spender:\n          type: string\n          description: The Klaytn account address to send tokens on behalf of the\n            `owner`.\n          example: 0xd6905b98E4Ba43a24E842d2b66c1410173791cab\n        owner:\n          type: string\n          description: The Klaytn account address of the owner granting the authority\n            to send tokens on his or her behalf.\n          example: 0x1eb15b3ccb2add3bfe132a4f6ad21ca62cf94e6d\n        to:\n          type: string\n          description: Klaytn account address to receive tokens\n          example: 0x3f3d6688385E0350B416813cD1D9461F7E8c5877\n        amount:\n          type: string\n          description: Transfer amount (in hex.)\n          example: 0x50\n      description: \"\"\n    ApproveKip7TokenRequest:\n      title: ApproveKip7TokenRequest\n      required:\n      - amount\n      - spender\n      type: object\n      properties:\n        owner:\n          type: string\n          description: The Klaytn account address to grant the authority. The default\n            value is the `deployer`'s address'.\n          example: 0x1eb15b3ccb2add3bfe132a4f6ad21ca62cf94e6d\n        spender:\n          type: string\n          description: The Klaytn account address to be granted authority.\n          example: 0x9eaf20b40e0f1ced5dbba6f5cfb0d3e12b0534f4\n        amount:\n          type: string\n          description: Approved token amount (in hex.)\n          example: 0x5c2\n      description: \"\"\n    BurnKip7TokenRequest:\n      title: BurnKip7TokenRequest\n      required:\n      - amount\n      type: object\n      properties:\n        from:\n          type: string\n          description: The Klaytn account address whose tokens will be burned. The\n            default value is the `deployer`'s address'.`\n          example: 0x1eb15b3ccb2add3bfe132a4f6ad21ca62cf94e6d\n        amount:\n          type: string\n          description: The amount of tokens to burn (in hex.)\n          example: not hex string\n      description: \"\"\n    BurnFromKip7TokenRequest:\n      title: BurnFromKip7TokenRequest\n      required:\n      - amount\n      - owner\n      - spender\n      type: object\n      properties:\n        owner:\n          type: string\n          description: The Klaytn account address of the owner of the tokens to be\n            burned.\n          example: 0x1eb15b3ccb2add3bfe132a4f6ad21ca62cf94e6d\n        spender:\n          type: string\n          description: The Klaytn account address whose authorized tokens will be\n            burned.\n          example: 0x9eaf20b40e0f1ced5dbba6f5cfb0d3e12b0534f4\n        amount:\n          type: string\n          description: The amount of tokens to burn (in hex.)\n          example: 0x100\n      description: \"\"\n    Kip7ContractListResponseItem:\n      title: Kip7ContractListResponseItem\n      required:\n      - address\n      - alias\n      - decimals\n      - name\n      - status\n      - symbol\n      - totalSupply\n      type: object\n      properties:\n        address:\n          type: string\n          description: Contract address\n          example: 0x0f73bb170deb398180f02e60d7ea154c270b8fb9\n        alias:\n          type: string\n          description: Contract alias\n          example: mycontract\n        decimals:\n          type: integer\n          description: The number of digits that come after the decimal place when\n            displaying token values on-screen. The default value is `0`.\n          format: int64\n          example: 8\n        name:\n          type: string\n          description: Contract name\n          example: MyKIP7\n        status:\n          type: string\n          description: \"Contract deployment status[`init`,`submitted`,`deployed`]\"\n          example: deployed\n        symbol:\n          type: string\n          description: Contract symbol\n          example: MSK7\n        totalSupply:\n          type: string\n          description: Total supply (in hex.)\n          example: 0x500\n        options:\n          $ref: '#/components/schemas/Kip7FeePayerOptions'\n      description: \"\"\n    Kip7FeePayerOptionsResponse:\n      title: Kip7FeePayerOption\n      type: object\n      properties:\n        enableGlobalFeepayer:\n          type: boolean\n          description: The boolean value indicating whether KAS Global Fee Delegation\n            is being used. The default value is `true`.\n        userFeePayer:\n          $ref: '#/components/schemas/Kip7FeePayerOptionsResponse_userFeePayer'\n    Kip7FeePayerOptions:\n      title: Kip7FeePayerOption\n      type: object\n      properties:\n        enableGlobalFeePayer:\n          type: boolean\n          description: The boolean value indicating whether KAS Global Fee Delegation\n            is being used. The default value is `true`.\n        userFeePayer:\n          $ref: '#/components/schemas/Kip7FeePayerOptionsResponse_userFeePayer'\n    Kip7FeePayerOptionsResponse_userFeePayer:\n      type: object\n      properties:\n        krn:\n          type: string\n          description: The KRN of the Fee-payer Pool\n        address:\n          type: string\n          description: The Klaytn account address of the FeePayer\n  requestBodies:\n    DeployKip7ContractRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/DeployKip7ContractRequest'\n          examples:\n            Success:\n              value:\n                alias: mycontract\n                name: MyKIP7\n                symbol: MSK7\n                decimals: 8\n                initialSupply: 268435456\n                options:\n                  enableGlobalFeePayer: true\n                  userFeePayer:\n                    krn: krn:1001:wallet:88c1223c-66af-4122-9818-069b2e3c6b30:feepayer-pool:default\n                    address: 0xE8964cA0C83cBbF520df5597dc1f5EFc27E5E729\n    UpdateKip7ContractRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UpdateKip7ContractRequest'\n          examples:\n            Success:\n              value:\n                options:\n                  enableGlobalFeePayer: false\n                  userFeePayer:\n                    krn: krn:1001:wallet:88c1223c-66af-4122-9818-069b2e3c6b30:feepayer-pool:default\n                    address: 0xd6905b98E4Ba43a24E842d2b66c1410173791cab\n    MintKip7TokenRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/MintKip7TokenRequest'\n          examples:\n            Success:\n              value:\n                from: 0xd6905b98E4Ba43a24E842d2b66c1410173791cab\n                to: 0xd6905b98E4Ba43a24E842d2b66c1410173791cab\n                amount: 0x10\n            with default deployer account:\n              value:\n                to: 0xd6905b98E4Ba43a24E842d2b66c1410173791cab\n                amount: 0x10\n            Bad Request - invalid address:\n              value:\n                to: \"{wrong address}\"\n                amount: 0x10\n    TransferKip7TokenRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/TransferKip7TokenRequest'\n          examples:\n            Success:\n              value:\n                from: 0xd6905b98E4Ba43a24E842d2b66c1410173791cab\n                to: 0xaddbf9cbfd30768202b70b5504c012fbdf00b8d8\n                amount: 0x50\n            Bad Request - invalid address:\n              value:\n                from: 0xd6905b98E4Ba43a24E842d2b66c1410173791cab\n                to: \"{wrong address}\"\n                amount: 0x10\n    TransferKip7TokenFromRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/TransferKip7TokenFromRequest'\n          examples:\n            Bad Request - invalid address:\n              value:\n                spender: 0xd6905b98E4Ba43a24E842d2b66c1410173791cab\n                owner: 0x1eb15b3ccb2add3bfe132a4f6ad21ca62cf94e6d\n                to: \"{wrong address}\"\n                amount: 0x50\n            Success:\n              value:\n                spender: 0xd6905b98E4Ba43a24E842d2b66c1410173791cab\n                owner: 0x1eb15b3ccb2add3bfe132a4f6ad21ca62cf94e6d\n                to: 0xaddbf9cbfd30768202b70b5504c012fbdf00b8d8\n                amount: 0x50\n    ApproveKip7TokenRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ApproveKip7TokenRequest'\n          examples:\n            Success:\n              value:\n                owner: 0x1eb15b3ccb2add3bfe132a4f6ad21ca62cf94e6d\n                spender: 0xfb7ead209e113ff15f588852f112cf331d02b4bf\n                amount: 0x5c2\n            Bad Request - invalid address:\n              value:\n                owner: 0x1eb15b3ccb2add3bfe132a4f6ad21ca62cf94e6d\n                spender: \"{wrong address}\"\n                amount: 0x5c2\n    BurnKip7TokenRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/BurnKip7TokenRequest'\n          examples:\n            Bad Request - invalid amount:\n              value:\n                from: 0x1eb15b3ccb2add3bfe132a4f6ad21ca62cf94e6d\n                amount: \"{wrong value}\"\n            Success:\n              value:\n                from: 0x1eb15b3ccb2add3bfe132a4f6ad21ca62cf94e6d\n                amount: 0x100\n    BurnFromKip7TokenRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/BurnFromKip7TokenRequest'\n          examples:\n            Bad Request - invalid address:\n              value:\n                owner: 0x1eb15b3ccb2add3bfe132a4f6ad21ca62cf94e6d\n                spender: \"{wrong address}\"\n                amount: 0x100\n            Success:\n              value:\n                owner: 0x1eb15b3ccb2add3bfe132a4f6ad21ca62cf94e6d\n                spender: 0x08c7a5d79f37f658f2dd30da0af02fdfd0cb773e\n                amount: 0x100\n            Not Found - alias:\n              value:\n                owner: 0x1eb15b3ccb2add3bfe132a4f6ad21ca62cf94e6d\n                spender: 0x08c7a5d79f37f658f2dd30da0af02fdfd0cb773e\n                amount: 0x100\n  securitySchemes:\n    basic:\n      type: http\n      description: \"KAS uses Basic HTTP Auth. All requests must have a correct Authorization\\\n        \\ header. You can create the Credential for Basic Auth by using `username`\\\n        \\ as AccessKey ID and `password` as SecretAccessKey obtained on KAS Console.\\n\\\n        \\n\u003e **NOTE**\\n\u003e\\n\u003e KAS Credential enables full access to KAS and the Klaytn\\\n        \\ accounts created using the Wallet API. It enables asset transfers of the\\\n        \\ Klaytn account's assets (like KLAY) as well as [Transaction Executions](https://docs.klaytnapi.com/v/en/tutorial/wallet-transaction-api).\\\n        \\ To keep your KAS/Klaytn accounts secure, do not share your KAS API Secret\\\n        \\ Access Key with others.\\n\\n**cURL**\\n\\n```\\n  curl --location --request\\\n        \\ GET 'https://kip7-api.klaytnapi.com/v1/contract' \\\\\\n  -u ${your_accessKeyId}:${your_secretAccessKey}\\\n        \\ \\\\\\n  --header 'x-chain-id: 1001' \\\\\\n  --header 'Content-Type: application/json'\\n\\\n        ```  \"\n      scheme: basic\nx-tagGroups:\n- name: API\n  tags:\n  - kip7-contract\n  - kip7-token\n  - kip7-deployer\n- name: Error Codes\n  tags:\n  - err-400\n  - err-401\n  - err-403\n  - err-404\n  - err-409\n"
		}
	},
	"Error": "unmarshal: json: line 1:19081: json: cannot unmarshal number into Go struct field Info.info.version of type string"
}