{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/SmartAPI/smartAPI"
		},
		"file": {
			"name": "mychem.es.json",
			"size": 0,
			"path": "src/tests/mychem.es.json",
			"byteSize": 44303,
			"content": "{\n    \"_id\": \"8f08d1446e0bb9c2b323713ce83e2bd3\",\n    \"openapi\": \"3.0.0\",\n    \"info\": {\n        \"contact\": {\n            \"email\": \"help@biothings.io\",\n            \"name\": \"Chunlei Wu\",\n            \"x-id\": \"https://github.com/newgene\",\n            \"x-role\": \"responsible developer\"\n        },\n        \"description\": \"Documentation of the MyChem.info chem query web services.  Learn more about [MyChem.info](http://MyChem.info/)\",\n        \"termsOfService\": \"http://MyChem.info/terms\",\n        \"title\": \"MyChem.info API\",\n        \"version\": \"1.0\",\n        \"x-translator\": {\n            \"component\": \"KP\",\n            \"team\": [\n                \"Service Provider\"\n            ]\n        }\n    },\n    \"servers\": [\n        {\n            \"description\": \"Encrypted Production server\",\n            \"url\": \"https://mychem.info/v1\"\n        },\n        {\n            \"description\": \"Production server\",\n            \"url\": \"http://mychem.info/v1\"\n        }\n    ],\n    \"tags\": [\n        {\n            \"name\": \"chemical\"\n        },\n        {\n            \"name\": \"drug\"\n        },\n        {\n            \"name\": \"annotation\"\n        },\n        {\n            \"name\": \"query\"\n        },\n        {\n            \"name\": \"translator\"\n        },\n        {\n            \"name\": \"biothings\"\n        }\n    ],\n    \"paths\": [\n        {\n            \"path\": \"/chem\",\n            \"pathitem\": {\n                \"post\": {\n                    \"parameters\": [\n                        {\n                            \"$ref\": \"#/components/parameters/dotfield\",\n                            \"name\": \"dotfield\"\n                        },\n                        {\n                            \"$ref\": \"#/components/parameters/fields\",\n                            \"name\": \"fields\"\n                        },\n                        {\n                            \"$ref\": \"#/components/parameters/email\",\n                            \"name\": \"email\"\n                        },\n                        {\n                            \"$ref\": \"#/components/parameters/format\",\n                            \"name\": \"format\"\n                        }\n                    ],\n                    \"requestBody\": {\n                        \"content\": {\n                            \"application/x-www-form-urlencoded\": {\n                                \"schema\": {\n                                    \"properties\": {\n                                        \"ids\": {\n                                            \"description\": \"multiple chemical IDs separated by comma. Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted. Type: string (list). Max: 1000.\",\n                                            \"type\": \"string\"\n                                        }\n                                    },\n                                    \"required\": [\n                                        \"ids\"\n                                    ]\n                                }\n                            }\n                        }\n                    },\n                    \"responses\": {\n                        \"200\": {\n                            \"content\": {\n                                \"application/json\": {\n                                    \"schema\": {\n                                        \"items\": {\n                                            \"$ref\": \"#/components/schemas/Chem\"\n                                        },\n                                        \"type\": \"array\"\n                                    }\n                                }\n                            },\n                            \"description\": \"A list of matching chemical objects\"\n                        },\n                        \"400\": {\n                            \"content\": {\n                                \"application/json\": {\n                                    \"schema\": {\n                                        \"$ref\": \"#/components/schemas/ErrorResult\"\n                                    }\n                                }\n                            },\n                            \"description\": \"A response indicating an improperly formatted query\"\n                        }\n                    },\n                    \"summary\": \"For a list of chemical IDs, return the matching chemical object\",\n                    \"tags\": [\n                        \"chemical\"\n                    ]\n                }\n            }\n        },\n        {\n            \"path\": \"/chem/{chemid}\",\n            \"pathitem\": {\n                \"get\": {\n                    \"parameters\": [\n                        {\n                            \"description\": \"Retrieve chemical objects based on ID - currently one of: [InChiKey](https://en.wikipedia.org/wiki/International_Chemical_Identifier#InChIKey), [DrugBank accession number](https://www.drugbank.ca/documentation), [ChEMBLID](https://www.ebi.ac.uk/chembl/faq#faq40), [ChEBI identifier](http://www.ebi.ac.uk/chebi/aboutChebiForward.do), [PubChem CID](https://pubchem.ncbi.nlm.nih.gov/search/help_search.html#Cid), [UNII](https://www.fda.gov/ForIndustry/DataStandards/SubstanceRegistrationSystem-UniqueIngredientIdentifierUNII/).  Supports JSONP and CORS as well.\",\n                            \"example\": \"USNINKBPBVKHHZ-CYUUQNCZSA-L\",\n                            \"in\": \"path\",\n                            \"name\": \"chemid\",\n                            \"required\": true,\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        },\n                        {\n                            \"$ref\": \"#/components/parameters/dotfield\",\n                            \"name\": \"dotfield\"\n                        },\n                        {\n                            \"$ref\": \"#/components/parameters/callback\",\n                            \"name\": \"callback\"\n                        },\n                        {\n                            \"$ref\": \"#/components/parameters/fields\",\n                            \"name\": \"fields\"\n                        },\n                        {\n                            \"$ref\": \"#/components/parameters/email\",\n                            \"name\": \"email\"\n                        },\n                        {\n                            \"$ref\": \"#/components/parameters/format\",\n                            \"name\": \"format\"\n                        }\n                    ],\n                    \"responses\": {\n                        \"200\": {\n                            \"content\": {\n                                \"application/json\": {\n                                    \"schema\": {\n                                        \"$ref\": \"#/components/schemas/Chem\"\n                                    }\n                                }\n                            },\n                            \"description\": \"A matching chemical object\"\n                        },\n                        \"404\": {\n                            \"description\": \"A response indicating an unknown chemical ID\"\n                        }\n                    },\n                    \"summary\": \"Retrieve chemical objects based on ID\",\n                    \"tags\": [\n                        \"chemical\"\n                    ]\n                }\n            }\n        },\n        {\n            \"path\": \"/metadata\",\n            \"pathitem\": {\n                \"get\": {\n                    \"parameters\": [\n                        {\n                            \"$ref\": \"#/components/parameters/callback\",\n                            \"in\": \"query\",\n                            \"name\": \"callback\"\n                        }\n                    ],\n                    \"responses\": {\n                        \"200\": {\n                            \"description\": \"MyChem.info metadata object\"\n                        }\n                    },\n                    \"summary\": \"Get metadata about the data available from MyChem.info\",\n                    \"tags\": [\n                        \"metadata\"\n                    ]\n                }\n            }\n        },\n        {\n            \"path\": \"/metadata/fields\",\n            \"pathitem\": {\n                \"get\": {\n                    \"parameters\": [\n                        {\n                            \"$ref\": \"#/components/parameters/search\",\n                            \"name\": \"search\"\n                        },\n                        {\n                            \"$ref\": \"#/components/parameters/callback\",\n                            \"name\": \"callback\"\n                        },\n                        {\n                            \"$ref\": \"#/components/parameters/prefix\",\n                            \"name\": \"prefix\"\n                        },\n                        {\n                            \"$ref\": \"#/components/parameters/format\",\n                            \"name\": \"format\"\n                        }\n                    ],\n                    \"responses\": {\n                        \"200\": {\n                            \"description\": \"MyChem.info metadata fields object\"\n                        }\n                    },\n                    \"summary\": \"Get metadata about the data fields available from a MyChem.info chem object\",\n                    \"tags\": [\n                        \"metadata\"\n                    ]\n                }\n            }\n        },\n        {\n            \"path\": \"/query\",\n            \"pathitem\": {\n                \"get\": {\n                    \"parameters\": [\n                        {\n                            \"description\": \"Query string.  The detailed query syntax can be found from our [docs](http://MyChem.info).  Examples: \\\"Fludara\\\", \\\"CHEMBI:63599\\\", \\\"DB01073\\\".\",\n                            \"example\": \"Fludara\",\n                            \"in\": \"query\",\n                            \"name\": \"q\",\n                            \"required\": true,\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        },\n                        {\n                            \"$ref\": \"#/components/parameters/dotfield\",\n                            \"name\": \"dotfield\"\n                        },\n                        {\n                            \"$ref\": \"#/components/parameters/fields\",\n                            \"name\": \"fields\"\n                        },\n                        {\n                            \"$ref\": \"#/components/parameters/facet_size\",\n                            \"name\": \"facet_size\"\n                        },\n                        {\n                            \"$ref\": \"#/components/parameters/sort\",\n                            \"name\": \"sort\"\n                        },\n                        {\n                            \"$ref\": \"#/components/parameters/callback\",\n                            \"name\": \"callback\"\n                        },\n                        {\n                            \"$ref\": \"#/components/parameters/email\",\n                            \"name\": \"email\"\n                        },\n                        {\n                            \"$ref\": \"#/components/parameters/facets\",\n                            \"name\": \"facets\"\n                        },\n                        {\n                            \"$ref\": \"#/components/parameters/size\",\n                            \"name\": \"size\"\n                        },\n                        {\n                            \"$ref\": \"#/components/parameters/from\",\n                            \"name\": \"from\"\n                        },\n                        {\n                            \"$ref\": \"#/components/parameters/format\",\n                            \"name\": \"format\"\n                        }\n                    ],\n                    \"responses\": {\n                        \"200\": {\n                            \"content\": {\n                                \"application/json\": {\n                                    \"schema\": {\n                                        \"$ref\": \"#/components/schemas/QueryResult\"\n                                    }\n                                }\n                            },\n                            \"description\": \"A query response with the \\\"hits\\\" property\"\n                        },\n                        \"400\": {\n                            \"content\": {\n                                \"application/json\": {\n                                    \"schema\": {\n                                        \"$ref\": \"#/components/schemas/ErrorResult\"\n                                    }\n                                }\n                            },\n                            \"description\": \"A response indicating an improperly formatted query\"\n                        }\n                    },\n                    \"summary\": \"Make chemical queries and return matching chemical hits. Supports JSONP and CORS as well.\",\n                    \"tags\": [\n                        \"query\"\n                    ]\n                },\n                \"post\": {\n                    \"parameters\": [\n                        {\n                            \"$ref\": \"#/components/parameters/dotfield\",\n                            \"name\": \"dotfield\"\n                        },\n                        {\n                            \"$ref\": \"#/components/parameters/email\",\n                            \"name\": \"email\"\n                        },\n                        {\n                            \"$ref\": \"#/components/parameters/fields\",\n                            \"name\": \"fields\"\n                        },\n                        {\n                            \"$ref\": \"#/components/parameters/size\",\n                            \"name\": \"size\"\n                        },\n                        {\n                            \"$ref\": \"#/components/parameters/format\",\n                            \"name\": \"format\"\n                        }\n                    ],\n                    \"requestBody\": {\n                        \"content\": {\n                            \"application/x-www-form-urlencoded\": {\n                                \"schema\": {\n                                    \"properties\": {\n                                        \"q\": {\n                                            \"description\": \"multiple query terms separated by comma (also \\\"+\\\" or whitespace).  Does not support wildcard queries\",\n                                            \"type\": \"string\"\n                                        },\n                                        \"scopes\": {\n                                            \"description\": \"a comma-separated list of fields as the search \\\"scopes\\\" (fields to search through for query term). The available \\\"fields\\\" that can be passed to the \\\"scopes\\\" parameter are listed in the **/metadata/fields** endpoint.string Default: \\\"scopes=_id\\\".\",\n                                            \"type\": \"string\"\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    \"responses\": {\n                        \"200\": {\n                            \"content\": {\n                                \"application/json\": {\n                                    \"schema\": {\n                                        \"$ref\": \"#/components/schemas/QueryPOSTResult\"\n                                    }\n                                }\n                            },\n                            \"description\": \"Query response objects with the \\\"hits\\\" property\"\n                        },\n                        \"400\": {\n                            \"content\": {\n                                \"application/json\": {\n                                    \"schema\": {\n                                        \"$ref\": \"#/components/schemas/ErrorResult\"\n                                    }\n                                }\n                            },\n                            \"description\": \"A response indicating an improperly formatted query\"\n                        }\n                    },\n                    \"summary\": \"Make batch chemical queries and return matching chemical hits\",\n                    \"tags\": [\n                        \"query\"\n                    ],\n                    \"x-bte-kgs-operations\": [\n                        {\n                            \"$ref\": \"#/components/x-bte-kgs-operations/metabolizedBy\"\n                        },\n                        {\n                            \"$ref\": \"#/components/x-bte-kgs-operations/target\"\n                        },\n                        {\n                            \"$ref\": \"#/components/x-bte-kgs-operations/treats\"\n                        },\n                        {\n                            \"$ref\": \"#/components/x-bte-kgs-operations/contraindication\"\n                        },\n                        {\n                            \"$ref\": \"#/components/x-bte-kgs-operations/metabolize\"\n                        },\n                        {\n                            \"$ref\": \"#/components/x-bte-kgs-operations/targetedBy\"\n                        },\n                        {\n                            \"$ref\": \"#/components/x-bte-kgs-operations/treatedBy\"\n                        },\n                        {\n                            \"$ref\": \"#/components/x-bte-kgs-operations/contraindicatedBy\"\n                        }\n                    ]\n                }\n            }\n        }\n    ],\n    \"components\": {\n        \"parameters\": {\n            \"callback\": {\n                \"description\": \"you can pass a \\\"callback\\\" parameter to make a JSONP call. Type: string.\",\n                \"in\": \"query\",\n                \"name\": \"callback\",\n                \"schema\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"dotfield\": {\n                \"description\": \"control the format of the returned chem object. If \\\"true\\\" or \\\"1\\\", all fields will be collapsed into a single level deep object (all nested objects will be a single level deep, using dotfield notation to signify the nested structure) Type: boolean. Default: false.\",\n                \"in\": \"query\",\n                \"name\": \"dotfield\",\n                \"schema\": {\n                    \"type\": \"boolean\"\n                }\n            },\n            \"email\": {\n                \"description\": \"If you are regular users of our services, we encourage you to provide us with an email, so that we can better track the usage or follow up with you.\",\n                \"in\": \"query\",\n                \"name\": \"email\",\n                \"schema\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"facet_size\": {\n                \"description\": \"the number of facet buckets to return in the response. Type: integer. Default: 10. Max: 1000.\",\n                \"in\": \"query\",\n                \"name\": \"facet_size\",\n                \"schema\": {\n                    \"type\": \"integer\"\n                }\n            },\n            \"facets\": {\n                \"description\": \"a comma-separated list of fields to return facets on.  In addition to query hits, the fields notated in \\\"facets\\\" will be aggregated by value and bucklet counts will be displayed in the \\\"facets\\\" field of the response object. Type: string (list). Default: None. Max: 1000.\",\n                \"in\": \"query\",\n                \"name\": \"facets\",\n                \"schema\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"fields\": {\n                \"description\": \"a comma-separated list of fields (in dotfield notation) used to limit the fields returned from the matching chem hit(s). The supported field names can be found from any chem object or from the /metadata/fields endpoint. If \\\"fields=all\\\", all available fields will be returned. Type: string (list). Default: all. Max: 1000.\",\n                \"in\": \"query\",\n                \"name\": \"fields\",\n                \"schema\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"format\": {\n                \"description\": \"controls output format of server response, currently supports: \\\"json\\\", \\\"jsonld\\\", \\\"html\\\". Type: string. Default: json.\",\n                \"in\": \"query\",\n                \"name\": \"format\",\n                \"schema\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"from\": {\n                \"description\": \"the number of matching chem hits to skip, starting from 0.  This can be useful for paging in combination with the \\\"size\\\" parameter. Type: integer. Default: None.\",\n                \"in\": \"query\",\n                \"name\": \"from\",\n                \"schema\": {\n                    \"type\": \"integer\"\n                }\n            },\n            \"prefix\": {\n                \"description\": \"Pass a prefix string to filter the available fields. Type: string. Default: None.\",\n                \"in\": \"query\",\n                \"name\": \"prefix\",\n                \"schema\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"search\": {\n                \"description\": \"Pass a search term to filter the available fields. Type: string. Default: None.\",\n                \"in\": \"query\",\n                \"name\": \"search\",\n                \"schema\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"size\": {\n                \"description\": \"the maximum number of matching chem hits to return per batch. Type: integer. Default: 10.\",\n                \"in\": \"query\",\n                \"name\": \"size\",\n                \"schema\": {\n                    \"type\": \"integer\"\n                }\n            },\n            \"sort\": {\n                \"description\": \"the comma-separated list of fields to sort on. Prefix each with \\\"-\\\" for descending order, otherwise in ascending order. Default: sort by descending score.\",\n                \"in\": \"query\",\n                \"name\": \"sort\",\n                \"schema\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schemas\": {\n            \"Chem\": {\n                \"properties\": {\n                    \"_id\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"_id\"\n                ],\n                \"type\": \"object\"\n            },\n            \"ErrorResult\": {\n                \"properties\": {\n                    \"message\": {\n                        \"type\": \"string\"\n                    },\n                    \"success\": {\n                        \"type\": \"boolean\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"QueryPOSTResult\": {\n                \"items\": {\n                    \"allOf\": [\n                        {\n                            \"$ref\": \"#/components/schemas/Chem\"\n                        },\n                        {\n                            \"properties\": {\n                                \"_score\": {\n                                    \"format\": \"float\",\n                                    \"type\": \"number\"\n                                },\n                                \"query\": {\n                                    \"type\": \"string\"\n                                }\n                            },\n                            \"type\": \"object\"\n                        }\n                    ]\n                },\n                \"type\": \"array\"\n            },\n            \"QueryResult\": {\n                \"properties\": {\n                    \"hits\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/Chem\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"max_score\": {\n                        \"format\": \"float\",\n                        \"type\": \"number\"\n                    },\n                    \"took\": {\n                        \"type\": \"integer\"\n                    },\n                    \"total\": {\n                        \"type\": \"integer\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"int64_or_array\": {\n                \"oneOf\": [\n                    {\n                        \"items\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    {\n                        \"format\": \"int64\",\n                        \"type\": \"integer\"\n                    }\n                ]\n            },\n            \"string_or_array\": {\n                \"oneOf\": [\n                    {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    {\n                        \"type\": \"string\"\n                    }\n                ]\n            }\n        },\n        \"x-bte-response-mapping\": {\n            \"metabolizedBy\": {\n                \"name\": \"drugbank.enzymes.name\",\n                \"SYMBOL\": \"drugbank.enzymes.gene_name\",\n                \"function\": \"drugbank.enzymes.general_function\",\n                \"action\": \"drugbank.enzymes.actions\"\n            },\n            \"target-drugbank\": {\n                \"name\": \"drugbank.targets.name\",\n                \"SYMBOL\": \"drugbank.targets.gene_name\",\n                \"function\": \"drugbank.targets.general_function\",\n                \"action\": \"drugbank.targets.actions\",\n                \"pubmed\": \"drugbank.targets.pmids\"\n            },\n            \"target-drugcentral\": {\n                \"name\": \"drugcentral.bioactivity.target_name\",\n                \"SYMBOL\": \"drugcentral.bioactivity.uniprot.gene_symbol\",\n                \"action\": \"drugcentral.bioactivity.action_type\"\n            },\n            \"treats\": {\n                \"name\": \"drugcentral.drug_use.indication.concept_name\",\n                \"SNOMED\": \"drugcentral.drug_use.indication.snomed_concept_id\",\n                \"UMLS\": \"drugcentral.drug_use.indication.umls_cui\"\n            },\n            \"contraindication\": {\n                \"name\": \"drugcentral.drug_use.contraindication.concept_name\",\n                \"SNOMED\": \"drugcentral.drug_use.contraindication.snomed_concept_id\",\n                \"UMLS\": \"drugcentral.drug_use.contraindication.umls_cui\"\n            },\n            \"drugbank\": {\n                \"DRUGBANK\": \"drugbank.id\"\n            },\n            \"chembl\": {\n                \"CHEMBL.COMPOUND\": \"chembl.molecule_chembl_id\"\n            }\n        },\n        \"x-bte-kgs-operations\": {\n            \"metabolizedBy\": [\n                {\n                    \"supportBatch\": true,\n                    \"inputSeparator\": \",\",\n                    \"parameters\": {\n                        \"fields\": \"drugbank.enzymes\"\n                    },\n                    \"requestBody\": {\n                        \"body\": {\n                            \"q\": \"{inputs[0]}\",\n                            \"scopes\": \"drugbank.id\"\n                        },\n                        \"header\": \"application/x-www-form-urlencoded\"\n                    },\n                    \"inputs\": [\n                        {\n                            \"id\": \"DRUGBANK\",\n                            \"semantic\": \"ChemicalSubstance\"\n                        }\n                    ],\n                    \"predicate\": \"metabolic_processing_affected_by\",\n                    \"source\": \"drugbank\",\n                    \"outputs\": [\n                        {\n                            \"id\": \"SYMBOL\",\n                            \"semantic\": \"Gene\"\n                        }\n                    ],\n                    \"response_mapping\": {\n                        \"$ref\": \"#/components/x-bte-response-mapping/metabolizedBy\"\n                    }\n                }\n            ],\n            \"target\": [\n                {\n                    \"supportBatch\": true,\n                    \"inputSeparator\": \",\",\n                    \"parameters\": {\n                        \"fields\": \"drugbank.targets\"\n                    },\n                    \"requestBody\": {\n                        \"body\": {\n                            \"q\": \"{inputs[0]}\",\n                            \"scopes\": \"drugbank.id\"\n                        },\n                        \"header\": \"application/x-www-form-urlencoded\"\n                    },\n                    \"inputs\": [\n                        {\n                            \"id\": \"DRUGBANK\",\n                            \"semantic\": \"ChemicalSubstance\"\n                        }\n                    ],\n                    \"outputs\": [\n                        {\n                            \"id\": \"SYMBOL\",\n                            \"semantic\": \"Gene\"\n                        }\n                    ],\n                    \"predicate\": \"physically_interacts_with\",\n                    \"source\": \"drugbank\",\n                    \"response_mapping\": {\n                        \"$ref\": \"#/components/x-bte-response-mapping/target-drugbank\"\n                    }\n                },\n                {\n                    \"supportBatch\": true,\n                    \"inputSeparator\": \",\",\n                    \"parameters\": {\n                        \"fields\": \"drugcentral.bioactivity\"\n                    },\n                    \"requestBody\": {\n                        \"body\": {\n                            \"q\": \"{inputs[0]}\",\n                            \"scopes\": \"chembl.molecule_chembl_id\"\n                        },\n                        \"header\": \"application/x-www-form-urlencoded\"\n                    },\n                    \"inputs\": [\n                        {\n                            \"id\": \"CHEMBL.COMPOUND\",\n                            \"semantic\": \"ChemicalSubstance\"\n                        }\n                    ],\n                    \"outputs\": [\n                        {\n                            \"id\": \"SYMBOL\",\n                            \"semantic\": \"Gene\"\n                        }\n                    ],\n                    \"predicate\": \"physically_interacts_with\",\n                    \"source\": \"drugcentral\",\n                    \"response_mapping\": {\n                        \"$ref\": \"#/components/x-bte-response-mapping/target-drugcentral\"\n                    }\n                }\n            ],\n            \"treats\": [\n                {\n                    \"supportBatch\": true,\n                    \"inputSeparator\": \",\",\n                    \"parameters\": {\n                        \"fields\": \"drugcentral.drug_use.indication\"\n                    },\n                    \"requestBody\": {\n                        \"body\": {\n                            \"q\": \"{inputs[0]}\",\n                            \"scopes\": \"chembl.molecule_chembl_id\"\n                        },\n                        \"header\": \"application/x-www-form-urlencoded\"\n                    },\n                    \"inputs\": [\n                        {\n                            \"id\": \"CHEMBL.COMPOUND\",\n                            \"semantic\": \"ChemicalSubstance\"\n                        }\n                    ],\n                    \"outputs\": [\n                        {\n                            \"id\": \"UMLS\",\n                            \"semantic\": \"Disease\"\n                        }\n                    ],\n                    \"predicate\": \"treats\",\n                    \"source\": \"drugcentral\",\n                    \"response_mapping\": {\n                        \"$ref\": \"#/components/x-bte-response-mapping/treats\"\n                    }\n                }\n            ],\n            \"contraindication\": [\n                {\n                    \"supportBatch\": true,\n                    \"inputSeparator\": \",\",\n                    \"parameters\": {\n                        \"fields\": \"drugcentral.drug_use.contraindication\"\n                    },\n                    \"requestBody\": {\n                        \"body\": {\n                            \"q\": \"{inputs[0]}\",\n                            \"scopes\": \"chembl.molecule_chembl_id\"\n                        },\n                        \"header\": \"application/x-www-form-urlencoded\"\n                    },\n                    \"inputs\": [\n                        {\n                            \"id\": \"CHEMBL.COMPOUND\",\n                            \"semantic\": \"ChemicalSubstance\"\n                        }\n                    ],\n                    \"outputs\": [\n                        {\n                            \"id\": \"UMLS\",\n                            \"semantic\": \"Disease\"\n                        }\n                    ],\n                    \"predicate\": \"contraindication\",\n                    \"source\": \"drugcentral\",\n                    \"response_mapping\": {\n                        \"$ref\": \"#/components/x-bte-response-mapping/contraindication\"\n                    }\n                }\n            ],\n            \"metabolize\": [\n                {\n                    \"supportBatch\": true,\n                    \"inputSeparator\": \",\",\n                    \"parameters\": {\n                        \"fields\": \"drugbank.id\",\n                        \"size\": \"250\"\n                    },\n                    \"requestBody\": {\n                        \"body\": {\n                            \"q\": \"{inputs[0]}\",\n                            \"scopes\": \"drugbank.enzymes.gene_name\"\n                        },\n                        \"header\": \"application/x-www-form-urlencoded\"\n                    },\n                    \"outputs\": [\n                        {\n                            \"id\": \"DRUGBANK\",\n                            \"semantic\": \"ChemicalSubstance\"\n                        }\n                    ],\n                    \"predicate\": \"metabolize\",\n                    \"source\": \"drugbank\",\n                    \"inputs\": [\n                        {\n                            \"id\": \"SYMBOL\",\n                            \"semantic\": \"Gene\"\n                        }\n                    ],\n                    \"response_mapping\": {\n                        \"$ref\": \"#/components/x-bte-response-mapping/drugbank\"\n                    }\n                }\n            ],\n            \"targetedBy\": [\n                {\n                    \"supportBatch\": true,\n                    \"inputSeparator\": \",\",\n                    \"parameters\": {\n                        \"fields\": \"drugbank.id\",\n                        \"size\": \"250\"\n                    },\n                    \"requestBody\": {\n                        \"body\": {\n                            \"q\": \"{inputs[0]}\",\n                            \"scopes\": \"drugbank.targets.gene_name\"\n                        },\n                        \"header\": \"application/x-www-form-urlencoded\"\n                    },\n                    \"outputs\": [\n                        {\n                            \"id\": \"DRUGBANK\",\n                            \"semantic\": \"ChemicalSubstance\"\n                        }\n                    ],\n                    \"inputs\": [\n                        {\n                            \"id\": \"SYMBOL\",\n                            \"semantic\": \"Gene\"\n                        }\n                    ],\n                    \"predicate\": \"physically_interacts_with\",\n                    \"source\": \"drugbank\",\n                    \"response_mapping\": {\n                        \"$ref\": \"#/components/x-bte-response-mapping/drugbank\"\n                    }\n                },\n                {\n                    \"supportBatch\": true,\n                    \"inputSeparator\": \",\",\n                    \"parameters\": {\n                        \"fields\": \"chembl.molecule_chembl_id\",\n                        \"size\": \"250\"\n                    },\n                    \"requestBody\": {\n                        \"body\": {\n                            \"q\": \"{inputs[0]}\",\n                            \"scopes\": \"drugcentral.bioactivity.uniprot.gene_symbol\"\n                        },\n                        \"header\": \"application/x-www-form-urlencoded\"\n                    },\n                    \"outputs\": [\n                        {\n                            \"id\": \"CHEMBL.COMPOUND\",\n                            \"semantic\": \"ChemicalSubstance\"\n                        }\n                    ],\n                    \"inputs\": [\n                        {\n                            \"id\": \"SYMBOL\",\n                            \"semantic\": \"Gene\"\n                        }\n                    ],\n                    \"predicate\": \"physically_interacts_with\",\n                    \"source\": \"drugcentral\",\n                    \"response_mapping\": {\n                        \"$ref\": \"#/components/x-bte-response-mapping/chembl\"\n                    }\n                }\n            ],\n            \"treatedBy\": [\n                {\n                    \"supportBatch\": true,\n                    \"inputSeparator\": \",\",\n                    \"parameters\": {\n                        \"fields\": \"chembl.molecule_chembl_id\",\n                        \"size\": \"250\"\n                    },\n                    \"requestBody\": {\n                        \"body\": {\n                            \"q\": \"{inputs[0]}\",\n                            \"scopes\": \"drugcentral.drug_use.indication.umls_cui\"\n                        },\n                        \"header\": \"application/x-www-form-urlencoded\"\n                    },\n                    \"outputs\": [\n                        {\n                            \"id\": \"CHEMBL.COMPOUND\",\n                            \"semantic\": \"ChemicalSubstance\"\n                        }\n                    ],\n                    \"inputs\": [\n                        {\n                            \"id\": \"UMLS\",\n                            \"semantic\": \"Disease\"\n                        }\n                    ],\n                    \"predicate\": \"treated_by\",\n                    \"source\": \"drugcentral\",\n                    \"response_mapping\": {\n                        \"$ref\": \"#/components/x-bte-response-mapping/chembl\"\n                    }\n                }\n            ],\n            \"contraindicatedBy\": [\n                {\n                    \"supportBatch\": true,\n                    \"inputSeparator\": \",\",\n                    \"parameters\": {\n                        \"fields\": \"chembl.molecule_chembl_id\",\n                        \"size\": \"250\"\n                    },\n                    \"requestBody\": {\n                        \"body\": {\n                            \"q\": \"{inputs[0]}\",\n                            \"scopes\": \"drugcentral.drug_use.contraindication.umls_cui\"\n                        },\n                        \"header\": \"application/x-www-form-urlencoded\"\n                    },\n                    \"outputs\": [\n                        {\n                            \"id\": \"CHEMBL.COMPOUND\",\n                            \"semantic\": \"ChemicalSubstance\"\n                        }\n                    ],\n                    \"inputs\": [\n                        {\n                            \"id\": \"UMLS\",\n                            \"semantic\": \"Disease\"\n                        }\n                    ],\n                    \"predicate\": \"contraindicated_by\",\n                    \"source\": \"drugcentral\",\n                    \"response_mapping\": {\n                        \"$ref\": \"#/components/x-bte-response-mapping/chembl\"\n                    }\n                }\n            ]\n        }\n    },\n    \"_meta\": {\n        \"url\": \"https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/mychem.info/openapi_full.yml\",\n        \"timestamp\": \"2021-01-30T03:12:06.031957+00:00\",\n        \"username\": \"tester\",\n        \"slug\": \"mychem\"\n    },\n    \"_raw\": \"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\"\n}",
			"canonicalURL": "/github.com/SmartAPI/smartAPI@4b65c612ded8e200191ecff2f382f9aaf0e552fe/-/blob/src/tests/mychem.es.json",
			"externalURLs": [
				{
					"url": "https://github.com/SmartAPI/smartAPI/blob/4b65c612ded8e200191ecff2f382f9aaf0e552fe/src/tests/mychem.es.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: json: line 52:15: json: cannot unmarshal array into Go struct field Alias.paths of type ogen.Paths"
}