{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/all-of-us/workbench"
		},
		"file": {
			"name": "firecloud.yaml",
			"size": 0,
			"path": "api/src/main/resources/firecloud.yaml",
			"byteSize": 87438,
			"content": "# A subset of the FireCloud API spec that we use to generate Java client libraries. The\n# original API spec can be found here:\n# https://github.com/broadinstitute/firecloud-orchestration/blob/develop/src/main/resources/swagger/api-docs.yaml\n# WorkspaceResponse and its children are not in the current FC API spec and can be found in the\n# Rawls spec here:\n# https://github.com/broadinstitute/rawls/blob/develop/core/src/main/resources/swagger/rawls.yaml#L5034\n\nopenapi: 3.0.1\ninfo:\n  title: FireCloud\n  description: |\n    Genome analysis execution service.\n  termsOfService: https://github.com/broadinstitute/firecloud-orchestration\n  license:\n    name: BSD\n    url: http://opensource.org/licenses/BSD-3-Clause\n  version: \"0.1\"\nservers:\n  - url: https://api.firecloud.org/\nsecurity:\n  - googleoauth:\n      - openid\n      - email\n      - profile\n      - https://www.googleapis.com/auth/devstorage.full_control\npaths:\n  /status:\n    get:\n      tags:\n        - status\n      summary: |\n        An orchestrated status check for underlying systems: Agora, Thurloe, Elasticsearch, Rawls\n      operationId: status\n      responses:\n        200:\n          description: All systems OK.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SystemStatus'\n        500:\n          description: Problem with one or more systems. See response for details.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SystemStatus'\n  /api/billing:\n    post:\n      tags:\n        - Billing\n      summary: create billing project in FireCloud and google\n      operationId: createBillingProjectFull\n      requestBody:\n        description: create project request\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateRawlsBillingProjectFullRequest'\n        required: true\n      responses:\n        204:\n          description: Successfully Created Billing Project in FireCloud and Google\n          content: {}\n        400:\n          description: FireCloud billing user must be an admin of the billing account\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        403:\n          description: You must be an admin of the google billing account\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        409:\n          description: project already exists in FireCloud or google\n          content: {}\n        500:\n          description: FireCloud Internal Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      security:\n        - googleoauth:\n            - openid\n            - email\n            - profile\n            - https://www.googleapis.com/auth/cloud-billing\n      x-codegen-request-body-name: createProjectRequest\n  /api/billing/v2:\n    post:\n      tags:\n        - billing_v2\n      summary: create billing project in rawls\n      description: create new billing project in rawls\n      operationId: createBillingProjectFullV2\n      requestBody:\n        description: create project request\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/CreateRawlsV2BillingProjectFullRequest'\n        required: true\n      responses:\n        201:\n          description: Successfully Created Billing Project in Rawls\n        400:\n          description: both you and firecloud billing user must be a user of the billing account\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        409:\n          description: project already exists in rawls\n          content: { }\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      security:\n        - authorization:\n            - openid\n            - email\n            - profile\n            - https://www.googleapis.com/auth/cloud-billing\n      x-codegen-request-body-name: createProjectRequest\n\n  /api/billing/{projectId}/members:\n    get:\n      tags:\n        - Billing\n      summary: list members of billing project the caller owns\n      operationId: listBillingProjectMembers\n      parameters:\n        - name: projectId\n          in: path\n          description: Project ID\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/BillingProjectMember'\n        403:\n          description: You must be a project owner to view the members of a project\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: FireCloud Internal Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      security:\n        - googleoauth:\n            - openid\n            - email\n            - profile\n\n  /api/billing/v2/{projectId}/members:\n    get:\n      tags:\n        - billing_v2\n      summary: list members of billing project the caller owns\n      description: list members of billing project the caller owns\n      operationId: listBillingProjectMembers\n      parameters:\n        - name: projectId\n          in: path\n          description: Project ID\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Success\n          content:\n            'application/json':\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/BillingProjectMember'\n        403:\n          description: You must be a project owner to view the members of a project\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n\n  /api/billing/{projectId}/{role}/{email}:\n    put:\n      tags:\n        - Billing\n      summary: add user to billing project the caller owns\n      operationId: addUserToBillingProject\n      parameters:\n        - name: projectId\n          in: path\n          description: Project ID\n          required: true\n          schema:\n            type: string\n        - name: role\n          in: path\n          description: role of user for project\n          required: true\n          schema:\n            type: string\n            enum:\n              - user\n              - owner\n        - name: email\n          in: path\n          description: email of user or group to add\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Successfully Added User To Billing Project\n          content: {}\n        403:\n          description: You must be a project owner to add a user to a billing project\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: User not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: FireCloud Internal Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      security:\n        - googleoauth:\n            - openid\n            - email\n            - profile\n    delete:\n      tags:\n        - billing\n      summary: remove user or group from billing project the caller owns\n      description: remove user or group from billing project the caller owns\n      operationId: removeUserFromBillingProject\n      parameters:\n        - name: projectId\n          in: path\n          description: Project ID\n          required: true\n          schema:\n            type: string\n        - name: role\n          in: path\n          description: role of user for project\n          required: true\n          schema:\n            type: string\n            enum:\n              - user\n              - owner\n        - name: email\n          in: path\n          description: email of user or group to remove\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Successfully Removed User From Billing Project\n          content: {}\n        403:\n          description: You must be a project owner to add a user to a billing project\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: User not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      security:\n        - googleoauth:\n            - openid\n            - email\n            - profile\n\n  /api/billing/v2/{projectId}/members/{workbenchRole}/{email}:\n    put:\n      tags:\n        - billing_v2\n      summary: add user or group to billing project the caller owns\n      description: add user or group to billing project the caller owns\n      operationId: addUserToBillingProject\n      parameters:\n        - name: projectId\n          in: path\n          description: Project ID\n          required: true\n          schema:\n            type: string\n        - name: workbenchRole\n          in: path\n          description: role of user for project\n          required: true\n          schema:\n            type: string\n            enum:\n              - user\n              - owner\n        - name: email\n          in: path\n          description: email of user or group to add\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Successfully Added User/Group To Billing Project\n        403:\n          description: You must be a project owner to add a user to a billing project\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: User not found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n    delete:\n      tags:\n        - billing_v2\n      summary: remove user or group from billing project the caller owns\n      description: remove user or group from billing project the caller owns\n      operationId: removeUserFromBillingProject\n      parameters:\n        - name: projectId\n          in: path\n          description: Project ID\n          required: true\n          schema:\n            type: string\n        - name: workbenchRole\n          in: path\n          description: role of user for project\n          required: true\n          schema:\n            type: string\n            enum:\n              - user\n              - owner\n        - name: email\n          in: path\n          description: email of user or group to remove\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Successfully Removed User From Billing Project\n        403:\n          description: You must be a project owner to add a user to a billing project\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: User not found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n\n  /api/user/billing/{projectName}:\n    delete:\n      tags:\n        - Billing\n      summary: delete billing project\n      description: |\n        Immediately delete the Billing Project and all of its resources, as well as the underlying Google Project. Requires that there are no Workspaces associated with this Project.\n      operationId: deleteBillingProject\n      parameters:\n        - name: projectName\n          in: path\n          description: Name of the billing project\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Successfully delete billing project\n          content: {}\n        400:\n          description: Project cannot be deleted because it contains workspaces.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        403:\n          description: You must be a project owner to delete billing project\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      security:\n        - googleoauth:\n            - openid\n            - email\n            - profile\n\n  /api/billing/v2/{projectId}:\n    get:\n      tags:\n        - billing_v2\n      summary: get billing project\n      description: get billing project\n      operationId: getBillingProject\n      parameters:\n        - name: projectId\n          in: path\n          description: Id of the billing project\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/BillingProjectResponse'\n        404:\n          description: Project Not Found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Internal Server Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n    delete:\n      tags:\n        - billing_v2\n      summary: delete billing project\n      description: delete billing project\n      operationId: deleteBillingProject\n      parameters:\n        - name: projectId\n          in: path\n          description: Id of the billing project\n          required: true\n          schema:\n            type: string\n      responses:\n        204:\n          description: OK\n        404:\n          description: Project Not Found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Internal Server Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n\n  /api/billing/v2/{projectId}/billingAccount:\n    put:\n      tags:\n        - BillingV2\n      summary: update billing account on billing project\n      description: Update the Billing Account on the Billing Project and on each Workspace in the Billing Project\n      operationId: updateBillingProjectBillingAccount\n      parameters:\n        - name: projectId\n          in: path\n          description: Id of the billing project\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: update billing account request\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/UpdateRawlsBillingAccountRequest'\n        required: true\n      responses:\n        200:\n          description: Billing Account on Billing Project is successfully updated and process is started to update the Billing Account on each Workspace in the Billing Project\n        400:\n          description: Billing account not found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: Billing Project Not Found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Internal Server Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      x-passthrough: true\n      x-passthrough-target: rawls\n    delete:\n      tags:\n        - BillingV2\n      summary: deletes the billing account on billing project\n      description: Clears the Billing Account on the Billing Project and on each Workspace in the Billing Project\n      operationId: deleteBillingProjectBillingAccount\n      parameters:\n        - name: projectId\n          in: path\n          description: Id of the billing project\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Billing account successfully removed\n        404:\n          description: Billing project Not Found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Internal Server Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      x-passthrough: true\n      x-passthrough-target: rawls\n\n  /api/nih/status:\n    get:\n      tags:\n        - Nih\n      summary: Get the current NIH status for a user\n      operationId: nihStatus\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NihStatus'\n        404:\n          description: linkedNihUsername key missing from status\n          content: {}\n        500:\n          description: Internal server error retrieving NIH status\n          content: {}\n  /api/profile/billing:\n    get:\n      tags:\n        - Profile\n      summary: List billing projects for a user\n      operationId: billing\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/BillingProjectMembership'\n        404:\n          description: User Not Found\n          content: {}\n        500:\n          description: Internal Server Error\n          content: {}\n  /api/profile/billing/{projectName}:\n    get:\n      tags:\n        - billing\n      summary: billing project status\n      description: billing project status\n      operationId: billingProjectStatus\n      parameters:\n        - name: projectName\n          in: path\n          description: Name of the billing project\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BillingProjectStatus'\n        404:\n          description: Project Not Found\n          content: {}\n        500:\n          description: Internal Server Error\n          content: {}\n  /api/workspaces:\n    get:\n      tags:\n        - Workspaces\n      summary: |\n        Lists workspaces.\n      operationId: listWorkspaces\n      parameters:\n        - name: fields\n          in: query\n          description: |\n            When specified, include only these keys in the response payload and exclude other keys. Accepts a comma-delimited list of values. To include a nested key, specify the key's path using a dot delimiter; for example, to include {\"workspace\": {\"attributes\": {}}}, specify \"workspace.attributes\". Legal values are any first-level key in the response, any first-level key inside the {\"workspace\": {}} object, and any first-level key inside the {\"workspace\": {\"attributes\": {}}} object. If omitted, will return the full response payload.\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        200:\n          description: List of workspaces.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/WorkspaceResponse'\n            text/plain:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/WorkspaceResponse'\n    post:\n      tags:\n        - Workspaces\n      summary: Create workspace\n      operationId: createWorkspace\n      requestBody:\n        description: New workspace information\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/WorkspaceIngest'\n        required: true\n      responses:\n        201:\n          description: Successful Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkspaceDetails'\n        403:\n          description: Unable to create bucket for workspace\n          content: {}\n        409:\n          description: Workspace by that name already exists\n          content: {}\n        500:\n          description: Internal Server Error\n          content: {}\n      x-codegen-request-body-name: workspace\n  /api/workspaces/{workspaceNamespace}/{workspaceName}:\n    get:\n      tags:\n        - Workspaces\n      summary: Get workspace\n      operationId: getWorkspace\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n        - name: fields\n          in: query\n          description: |\n            When specified, include only these keys in the response payload and exclude other keys. Accepts a comma-delimited list of values. To include a nested key, specify the key's path using a dot delimiter; for example, to include {\"workspace\": {\"attributes\": {}}}, specify \"workspace.attributes\". Legal values are any first-level key in the response, any first-level key inside the {\"workspace\": {}} object, and any first-level key inside the {\"workspace\": {\"attributes\": {}}} object. If omitted, will return the full response payload.\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        200:\n          description: Successful Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkspaceResponse'\n        404:\n          description: Workspace does not exist\n          content: {}\n        500:\n          description: Internal Server Error\n          content: {}\n    delete:\n      tags:\n        - Workspaces\n      summary: Delete workspace\n      operationId: deleteWorkspace\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      responses:\n        202:\n          description: Request Accepted\n          content: {}\n        403:\n          description: User does not have correct permissions to delete a published\n            workspace\n          content: {}\n        404:\n          description: Workspace does not exist\n          content: {}\n        500:\n          description: Internal Server Error\n          content: {}\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/acl:\n    get:\n      tags:\n        - Workspaces\n      summary: Get workspace ACL\n      operationId: getWorkspaceAcl\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Successful Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkspaceACL'\n        400:\n          description: Can't retrieve ACL for workspace\n          content: {}\n        404:\n          description: Workspace not found\n          content: {}\n        500:\n          description: Internal Server Error\n          content: {}\n    patch:\n      tags:\n        - Workspaces\n      summary: Update workspace ACL\n      operationId: updateWorkspaceACL\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n        - name: inviteUsersNotFound\n          in: query\n          description: true to invite unregistered users, false to ignore\n          required: true\n          schema:\n            type: boolean\n            default: false\n      requestBody:\n        description: Series of ACL updates for workspace\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/WorkspaceACLUpdate'\n        required: true\n      responses:\n        200:\n          description: Successful Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkspaceACLUpdateResponseList'\n        400:\n          description: Can't set ACL for workspace\n          content: {}\n        404:\n          description: Workspace not found\n          content: {}\n        500:\n          description: Internal Server Error\n          content: {}\n      x-codegen-request-body-name: aclUpdates\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/clone:\n    post:\n      tags:\n        - Workspaces\n      summary: Clone Workspace\n      operationId: cloneWorkspace\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Cloned workspace information\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/WorkspaceRequestClone'\n        required: true\n      responses:\n        201:\n          description: Successful Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkspaceDetails'\n        400:\n          description: Unable to create resources for workspace\n          content: {}\n        404:\n          description: Source workspace not found\n          content: {}\n        409:\n          description: Destination workspace already exists\n          content: {}\n        500:\n          description: Internal Server Error\n          content: {}\n      x-codegen-request-body-name: workspace\n  /api/staticNotebooks/convert:\n    post:\n      tags:\n        - Static Notebooks\n      summary: Convert a Notebook ipynb file to a static HTML representation\n      description: Convert a Notebook ipynb file to a static HTML representation\n      operationId: convertNotebook\n      requestBody:\n        description: Notebook ipynb file\n        content:\n          'application/json':\n            schema:\n              type: object\n        required: true\n      responses:\n        200:\n          description: Success\n          content:\n            text/html:\n              schema:\n                type: string\n        500:\n          description: Internal Error\n          content: {}\n      x-codegen-request-body-name: notebook\n  /me:\n    get:\n      tags:\n        - Profile\n      summary: Returns registration and activation status for the current user\n      operationId: me\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Me'\n        401:\n          description: Unauthorized. User is not allowed in FireCloud or has not signed\n            in.\n          content: {}\n        403:\n          description: Forbidden. User is registered in FireCloud, but not activated.\n          content: {}\n        404:\n          description: Not Found. User is authenticated to Google but not a FireCloud\n            member.\n          content: {}\n        500:\n          description: Internal Server Error determining user status.\n          content: {}\n        503:\n          description: Service Unavailable. Could not reach underlying services to\n            determine user status.\n          content: {}\n  /register/profile:\n    post:\n      tags:\n        - Profile\n      summary: Sets a profile object in the user profile service for the currently\n        logged-in user.\n      operationId: setProfile\n      requestBody:\n        description: A complete profile\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Profile'\n        required: false\n      responses:\n        200:\n          description: OK\n          content: {}\n        400:\n          description: Bad request\n          content: {}\n        500:\n          description: Internal server error\n          content: {}\n      x-codegen-request-body-name: profile\n  /register/user/v1/termsofservice:\n    post:\n      tags:\n        - Terms of Service\n      summary: Passes through to Sam API and accepts Terra Terms of Service\n      operationId: acceptTermsOfService\n      requestBody:\n        description: Must equal the (double-quoted) url of the Terra Terms of Service\n        content:\n          'application/json':\n            schema:\n              type: string\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Me'\n        404:\n          description: User Not Found.\n          content: { }\n  /register/user/v1/termsofservice/status:\n    get:\n      tags:\n        - Terms of Service\n      summary: Check whether user has accepted the current version of the Terms of Service\n      operationId: getTermsOfServiceStatus\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: boolean\n        404:\n          description: User Not Found.\n          content: { }\n  /api/groups:\n    get:\n      tags:\n        - Groups\n      summary: get the list of the groups that the caller is a member of\n      operationId: getGroups\n      responses:\n        200:\n          description: Successfully listed group membership\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ManagedGroupAccessResponse'\n        500:\n          description: FireCloud Internal Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      security:\n        - googleoauth:\n            - openid\n            - email\n            - profile\n  /api/groups/{groupName}:\n    get:\n      tags:\n        - Groups\n      summary: view the members in a group\n      operationId: getGroup\n      parameters:\n        - name: groupName\n          in: path\n          description: Group name\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Successfully loaded group\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ManagedGroupWithMembers'\n        403:\n          description: You must be an admin of this group in order to view members\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: Group not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: FireCloud Internal Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      security:\n        - googleoauth:\n            - openid\n            - email\n            - profile\n    post:\n      tags:\n        - Groups\n      summary: create a new group\n      operationId: createGroup\n      parameters:\n        - name: groupName\n          in: path\n          description: Group name\n          required: true\n          schema:\n            type: string\n      responses:\n        201:\n          description: Successfully created group\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ManagedGroupWithMembers'\n        409:\n          description: Group already exists\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: FireCloud Internal Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      security:\n        - googleoauth:\n            - openid\n            - email\n            - profile\n  /api/groups/{groupName}/{role}/{email}:\n    put:\n      tags:\n        - Groups\n      summary: add a user to a group the caller owns\n      operationId: addUserToGroup\n      parameters:\n        - name: groupName\n          in: path\n          description: Group name\n          required: true\n          schema:\n            type: string\n        - name: role\n          in: path\n          description: role of user for group\n          required: true\n          schema:\n            type: string\n            enum:\n              - member\n              - admin\n        - name: email\n          in: path\n          description: email of user or group to add\n          required: true\n          schema:\n            type: string\n      responses:\n        204:\n          description: Successfully Added User To Group\n          content: {}\n        403:\n          description: You must be an admin of this group in order to add members\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: User not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: FireCloud Internal Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      security:\n        - googleoauth:\n            - openid\n            - email\n            - profile\n    delete:\n      tags:\n        - Groups\n      summary: remove a user from a group the caller owns\n      operationId: removeUserFromGroup\n      parameters:\n        - name: groupName\n          in: path\n          description: Group name\n          required: true\n          schema:\n            type: string\n        - name: role\n          in: path\n          description: role of user for group\n          required: true\n          schema:\n            type: string\n            enum:\n              - member\n              - admin\n        - name: email\n          in: path\n          description: email of user or group to add\n          required: true\n          schema:\n            type: string\n      responses:\n        204:\n          description: Successfully Removed User From Group\n          content: {}\n        403:\n          description: You must be an admin of this group in order to remove members\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: User not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: FireCloud Internal Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      security:\n        - googleoauth:\n            - openid\n            - email\n            - profile\n  /api/proxyGroup/{email}:\n    get:\n      tags:\n        - Profile\n      summary: Returns the proxy group email for the current user\n      operationId: getProxyGroup\n      parameters:\n        - name: email\n          in: path\n          description: User email whose proxy group to retrieve\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: user proxy group\n          content:\n            application/json:\n              schema:\n                type: string\n        404:\n          description: Group not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: FireCloud Internal Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/submissions:\n    post:\n      tags:\n        - Submissions\n      summary: |\n        Create a submission.\n      operationId: createSubmission\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Submission Request\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/SubmissionRequest'\n        required: true\n      responses:\n        201:\n          description: Successful Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubmissionResponse'\n        400:\n          description: Expression eval failed or entities are not of type required\n            by method config\n          content: {}\n        404:\n          description: Method Configuration or Entity not found\n          content: {}\n        409:\n          description: Method Configuration failed to resolve input expressions with\n            the supplied Entity\n          content: {}\n        500:\n          description: Internal Error\n          content: {}\n      x-codegen-request-body-name: submissionRequest\n  /api/methods:\n    get:\n      tags:\n        - methodRepository\n      summary: |\n        Lists Method Repository methods.\n      operationId: listMethodRepositoryMethods\n      parameters:\n        - name: namespace\n          in: query\n          description: Namespace of method.\n          schema:\n            type: string\n        - name: name\n          in: query\n          description: Name of method.\n          schema:\n            type: string\n        - name: snapshotId\n          in: query\n          description: Snapshot ID of method.\n          schema:\n            type: integer\n            format: int32\n        - name: snapshotComment\n          in: query\n          description: Snapshot comment of AgoraEntity\n          schema:\n            type: string\n        - name: synopsis\n          in: query\n          description: Synopsis of method.\n          schema:\n            type: string\n        - name: documentation\n          in: query\n          description: Documentation of method.\n          schema:\n            type: string\n        - name: owner\n          in: query\n          description: Owner of method.\n          schema:\n            type: string\n        - name: payload\n          in: query\n          description: Payload of method in WDL.\n          schema:\n            type: string\n        - name: entityType\n          in: query\n          description: Type of Method - Task or Workflow\n          schema:\n            type: string\n      responses:\n        200:\n          description: List of methods\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/MethodResponse'\n        400:\n          description: Invalid arguments\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n    post:\n      tags:\n        - methodRepository\n      summary: Add a Method.\n      description: |\n        Inserts a method into the method repository and\n        gives the owner full access permissions. Must supply a namespace\n        name, payload, and entityType. Cannot supply a snapshotId\n      operationId: createMethod\n      requestBody:\n        description: Method Query\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/MethodQuery'\n        required: true\n      responses:\n        201:\n          description: Method successfully added.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        400:\n          description: Malformed input.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Internal error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      x-codegen-request-body-name: methodQuery\n  /api/methods/{namespace}/{name}/{snapshotId}:\n    post:\n      tags:\n        - methodRepository\n      summary: Create a new snapshot of an existing Method.\n      description: |\n        Inserts a new snapshot of the method into the method repository and\n        copies access permissions from previous snapshot, optionally redacting\n        the source snapshot. Documentation, synopsis, and payload are the only\n        arguments considered for the new snapshot; everything else is copied\n        from the source.\n      operationId: createMethodSnapshot\n      parameters:\n        - name: namespace\n          in: path\n          description: Method Namespace\n          required: true\n          schema:\n            type: string\n        - name: name\n          in: path\n          description: Method Name\n          required: true\n          schema:\n            type: string\n        - name: snapshotId\n          in: path\n          description: Method snapshot ID\n          required: true\n          schema:\n            type: string\n        - name: redact\n          in: query\n          description: Should the source method be redacted?\n          schema:\n            type: boolean\n            default: false\n      requestBody:\n        description: Method Query\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/MethodQuery'\n        required: true\n      responses:\n        200:\n          description: Method successfully copied.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        206:\n          description: Method successfully copied, but error while redacting.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        400:\n          description: Malformed input.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        403:\n          description: Forbidden to create copy.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: Source snapshot not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Internal error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      x-codegen-request-body-name: methodQuery\n  /api/inputsOutputs:\n    post:\n      tags:\n        - methodRepository\n      summary: Get information about a method's inputs and outputs\n      operationId: getMethodIO\n      requestBody:\n        description: Method ID\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/MethodID'\n        required: true\n      responses:\n        200:\n          description: Method Configuration inputs and outputs\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodIO'\n        400:\n          description: Method WDL can't be parsed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: No Such Method\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      x-codegen-request-body-name: methodId\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/methodconfigs:\n    post:\n      tags:\n        - methodConfigurations\n      summary: Create a Method Configuration in a workspace\n      operationId: createWorkspaceMethodConfig\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Method Configuration contents\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/MethodConfiguration'\n        required: true\n      responses:\n        201:\n          description: Successful Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidatedMethodConfiguration'\n        404:\n          description: Workspace not found\n          content: {}\n        409:\n          description: Method Configuration already exists\n          content: {}\n        500:\n          description: Internal Server Error\n          content: {}\n      x-codegen-request-body-name: newMethodConfigIngest\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/method_configs/{configNamespace}/{configName}:\n    delete:\n      tags:\n        - methodConfigurations\n      summary: Delete a method configuration in a workspace\n      operationId: deleteWorkspaceMethodConfig\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n        - name: configNamespace\n          in: path\n          description: Configuration Namespace\n          required: true\n          schema:\n            type: string\n        - name: configName\n          in: path\n          description: Configuration Name\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Successful request\n          content: {}\n        404:\n          description: Workspace or Method Configuration not found\n          content: {}\n        500:\n          description: Internal Server Error\n          content: {}\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/submissions/{submissionId}:\n    get:\n      tags:\n        - submissions\n      summary: |\n        Monitor submission status\n      operationId: getSubmission\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n        - name: submissionId\n          in: path\n          description: Submission ID\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Successful Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Submission'\n        404:\n          description: Submission not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Internal Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n    delete:\n      tags:\n        - Submissions\n      summary: Abort a running submission.\n      operationId: abortSubmission\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n        - name: submissionId\n          in: path\n          description: Submission ID\n          required: true\n          schema:\n            type: string\n      responses:\n        204:\n          description: Successful request\n          content: {}\n        404:\n          description: Submission not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Internal Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/submissions/{submissionId}/workflows/{workflowId}/outputs:\n    get:\n      tags:\n        - Submissions\n      summary: |\n        Get workflow outputs.\n      operationId: getWorkflowOutputs\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n        - name: submissionId\n          in: path\n          description: Submission ID\n          required: true\n          schema:\n            type: string\n        - name: workflowId\n          in: path\n          description: Workflow ID\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Get workflow outputs\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkflowOutputsResponse'\n        404:\n          description: Workspace, Submission or Workflow not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Internal Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n\ncomponents:\n  schemas:\n    BillingProjectMember:\n      required:\n        - email\n        - role\n      type: object\n      properties:\n        email:\n          type: string\n          description: the email of the user\n        role:\n          type: string\n          description: the role of the user in the project\n    BillingProjectMembership:\n      required:\n        - projectName\n        - role\n      type: object\n      properties:\n        projectName:\n          type: string\n          description: the name of the project to create\n        role:\n          type: string\n          description: the role of the current user in the project\n        creationStatus:\n          type: string\n          enum:\n            - Creating\n            - Ready\n            - Error\n      description: \"\"\n    BillingProjectStatus:\n      required:\n        - creationStatus\n        - projectName\n      type: object\n      properties:\n        projectName:\n          type: string\n          description: the name of the billing project\n        creationStatus:\n          type: string\n          enum:\n            - Creating\n            - AddingToPerimeter\n            - Ready\n            - Error\n      description: a billing project status\n    CreateRawlsBillingProjectFullRequest:\n      required:\n        - billingAccount\n        - projectName\n      type: object\n      properties:\n        projectName:\n          type: string\n          description: the name of the project to create\n        billingAccount:\n          type: string\n          description: the id of the billing account to use, must start with 'billingAccounts/'\n        highSecurityNetwork:\n          type: boolean\n          description: Optional, false if not specified. If true, spin up all compute\n            in a VPC network.\n        enableFlowLogs:\n          type: boolean\n          description: Optional, false if not specified. If true, enable flow logs\n            within the high security network. Requires highSecurityNetwork = true.\n        privateIpGoogleAccess:\n          type: boolean\n          description: Optional, false if not specified. If true, it configures the\n            VPC network to only allow access to GCP APIs that are protected by the\n            project's service perimeter and routes all allowed API traffic through\n            a narrow IP range. Requires highSecurityNetwork = true.\n        servicePerimeter:\n          type: string\n          description: The fully qualified name of the GCP service perimeter to put\n            this project into in the form accessPolicies/[POLICY NUMBER]/servicePerimeters/[NAME].\n            Caller must have the add_project action for this service perimeter in\n            Sam.\n      description: \"\"\n    Enabled:\n      type: object\n      properties:\n        google:\n          type: boolean\n          description: User enabled via Google?\n        ldap:\n          type: boolean\n          description: User enabled in LDAP?\n        allUsersGroup:\n          type: boolean\n          description: User is a member of the \"All Users\" group?\n        adminEnabled:\n          type: boolean\n          description: User is enabled in the system?\n        tosAccepted:\n          type: boolean\n          description: User has accepted the latest Terms of Service?\n    CreateRawlsV2BillingProjectFullRequest:\n      required:\n        - billingAccount\n        - projectName\n      type: object\n      properties:\n        projectName:\n          type: string\n          description: the name of the project to create\n        billingAccount:\n          type: string\n          description: the id of the billing account to use, must start with 'billingAccounts/'\n        servicePerimeter:\n          type: string\n          description: The fully qualified name of the GCP service perimeter to put\n            this project into in the form accessPolicies/[POLICY NUMBER]/servicePerimeters/[NAME].\n            Caller must have the add_project action for this service perimeter in\n            Sam.\n      description: \"\"\n    ErrorReport:\n      required:\n        - causes\n        - message\n        - source\n        - stackTrace\n      type: object\n      properties:\n        source:\n          type: string\n          description: service causing error\n        message:\n          type: string\n          description: what went wrong\n        statusCode:\n          type: integer\n          description: HTTP status code\n        causes:\n          type: array\n          description: errors triggering this one\n          items:\n            $ref: '#/components/schemas/ErrorReport'\n        stackTrace:\n          type: array\n          description: stack trace\n          items:\n            $ref: '#/components/schemas/StackTraceElement'\n      description: \"\"\n    ManagedGroupRef:\n      required:\n        - membersGroupName\n      type: object\n      properties:\n        membersGroupName:\n          type: string\n      description: a reference to a group that can be managed by users\n    Me:\n      type: object\n      properties:\n        userInfo:\n          $ref: '#/components/schemas/UserInfo'\n        enabled:\n          $ref: '#/components/schemas/Enabled'\n    NihStatus:\n      required:\n        - linkedNihUsername\n      type: object\n      properties:\n        linkedNihUsername:\n          type: string\n          description: The user's NIH username\n        datasetPermissions:\n          type: array\n          description: Array of FireCloud dataset permissions\n          items:\n            type: object\n            properties: {}\n        linkExpireTime:\n          type: integer\n          description: The FireCloud-calculated expiration time, in Epoch seconds\n          format: int64\n          default: 0\n    Profile:\n      required:\n        - firstName\n        - institute\n        - institutionalProgram\n        - lastName\n        - nonProfitStatus\n        - pi\n        - programLocationCity\n        - programLocationCountry\n        - programLocationState\n        - title\n      type: object\n      properties:\n        firstName:\n          type: string\n          description: User's first name\n        lastName:\n          type: string\n          description: User's last name\n        title:\n          type: string\n          description: User's title\n        contactEmail:\n          type: string\n          description: User's contact email (if different from account email)\n        institute:\n          type: string\n          description: User's home institution\n        institutionalProgram:\n          type: string\n          description: User's institutional program\n        programLocationCity:\n          type: string\n          description: User's program location city\n        programLocationState:\n          type: string\n          description: User's program location state\n        programLocationCountry:\n          type: string\n          description: User's program location country\n        pi:\n          type: string\n          description: Principal Investigator\n        nonProfitStatus:\n          type: string\n          description: User's program non-profit status\n    StackTraceElement:\n      required:\n        - className\n        - fileName\n        - lineNumber\n        - methodName\n      type: object\n      properties:\n        className:\n          type: string\n          description: class name\n        methodName:\n          type: string\n          description: method name\n        fileName:\n          type: string\n          description: source file name\n        lineNumber:\n          type: integer\n          description: line number\n      description: \"\"\n    UserInfo:\n      type: object\n      properties:\n        userSubjectId:\n          type: string\n          description: Subject ID (from Google)\n        userEmail:\n          type: string\n          description: User's email\n    WorkspaceDetails:\n      required:\n        - bucketName\n        - createdBy\n        - createdDate\n        - isLocked\n        - lastModified\n        - name\n        - namespace\n        - workspaceId\n        - googleProject\n        - workspaceVersion\n      type: object\n      properties:\n        attributes:\n          type: object\n          properties: { }\n          description: Map[String, Attribute]\n        authorizationDomain:\n          type: array\n          description: The list of groups in the Authorization Domain (empty if no\n            AD is set)\n          items:\n            $ref: '#/components/schemas/ManagedGroupRef'\n        bucketName:\n          type: string\n          description: The name of the bucket associated with the workspace\n        createdBy:\n          type: string\n          description: The user who created the workspace\n        createdDate:\n          type: string\n          description: The date the workspace was created in yyyy-MM-ddTHH:mm:ss.SSSZZ\n            format\n          format: date-time\n        isLocked:\n          type: boolean\n          description: Can the Workspace currently be modified?\n        lastModified:\n          type: string\n          description: The date the workspace was last modified in yyyy-MM-ddTHH:mm:ss.SSSZZ\n            format\n          format: date-time\n        name:\n          type: string\n          description: The name of the workspace\n        namespace:\n          type: string\n          description: The namespace the workspace belongs to\n        workflowCollectionName:\n          type: string\n          description: The name of the workflow collection associated with the workspace\n        workspaceId:\n          type: string\n          description: A UUID associated with the workspace\n        googleProject:\n          type: string\n          description: Identifies the google project used by the workspace for compute and storage\n        googleProjectNumber:\n          type: string\n          description: A different google project identifier for the same project identified by the googleProject; required by google for certain actions\n        workspaceVersion:\n          type: string\n          description: internal use\n        billingAccount:\n          type: string\n          description: The current billing account being charged for activity within this workspace. For desired billing account, look to the billing account specified on this workspace's billing project\n        billingAccountErrorMessage:\n          type: string\n          description: Error message received during most recent attempt to update the current billing account on workspace's Google project. Empty if update was successful.\n        completedCloneWorkspaceFileTransfer:\n          type: string\n          description: The date all files were successfully transferred to the workspace bucket if applicable\n            in yyyy-MM-ddTHH:mm:ss.SSSZZ format\n          format: date-time\n      description: \"\"\n    WorkspaceAccessLevel:\n      type: object\n      properties:\n        name:\n          type: string\n          description: Workspace Access Level\n      description: The level of access a user or group has on a Workspace. NoAccess,\n        Read, Write, Owner, ProjectOwner\n    WorkspaceIngest:\n      required:\n        - attributes\n        - name\n        - namespace\n      type: object\n      properties:\n        namespace:\n          type: string\n          description: New workspace namespace\n        name:\n          type: string\n          description: New workspace name\n        attributes:\n          type: object\n          additionalProperties:\n            type: string\n          description: Map of attributes\n        authorizationDomain:\n          type: array\n          description: The list of groups to form the Authorization Domain (empty\n            if no Authorization Domain is set)\n          items:\n            $ref: '#/components/schemas/ManagedGroupRef'\n        bucketLocation:\n          type: string\n          required: false\n          description: Region (NOT multi-region) in which bucket attached to the workspace should be created. If not\n            provided, the bucket will be created in the 'US' multi-region.\n    WorkspaceRequestClone:\n      required:\n        - attributes\n        - name\n        - namespace\n      type: object\n      properties:\n        namespace:\n          type: string\n          description: The namespace (billing project) the workspace belongs to\n        name:\n          type: string\n          description: The name of the workspace\n        authorizationDomain:\n          type: array\n          description: The list of groups in the Authorization Domain (empty if no\n            AD is set)\n          items:\n            $ref: '#/components/schemas/ManagedGroupRef'\n        attributes:\n          type: object\n          additionalProperties:\n            type: string\n        copyFilesWithPrefix:\n          type: string\n          description: Used for clone operations only; the prefix for files to copy\n            between source and destination workspace buckets\n        bucketLocation:\n          type: string\n          required: false\n          description: Region (NOT multi-region) in which bucket attached to the workspace should be created. If not\n            provided, the bucket will be created in the 'US' multi-region.\n      description: \"\"\n    WorkspaceResponse:\n      type: object\n      properties:\n        accessLevel:\n          type: string\n        canShare:\n          type: boolean\n        catalog:\n          type: boolean\n        workspace:\n          $ref: '#/components/schemas/WorkspaceDetails'\n        workspaceSubmissionStats:\n          $ref: '#/components/schemas/WorkspaceSubmissionStats'\n        owners:\n          type: array\n          items:\n            type: string\n      description: \"\"\n    WorkspaceSubmissionStats:\n      required:\n        - runningSubmissionsCount\n      type: object\n      properties:\n        lastSuccessDate:\n          type: string\n          description: The date of the last successful submission\n          format: date-time\n        lastFailureDate:\n          type: string\n          description: The date of the last failed submission\n          format: date-time\n        runningSubmissionsCount:\n          type: integer\n          description: Count of all the running submissions\n      description: Statistics about submissions in a workspace\n    WorkspaceACL:\n      required:\n        - acl\n      type: object\n      properties:\n        acl:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/WorkspaceAccessEntry'\n          description: Map[String, WorkspaceAccessEntry]\n      description: \"\"\n    WorkspaceACLUpdate:\n      required:\n        - accessLevel\n        - email\n      type: object\n      properties:\n        email:\n          type: string\n          description: email address of the user or group whose permissions will be\n            changed\n        accessLevel:\n          type: string\n          description: The access level to grant to this user or group (OWNER, READER,\n            WRITER, NO ACCESS)\n        canShare:\n          type: boolean\n          description: Set to true if you want this user to be able to share the workspace\n            with other users, only meaningful for readers and writers, default false\n        canCompute:\n          type: boolean\n          description: Set to true if you want this user to be able to launch compute\n            in this workspace, may not be true for readers, default false for reader,\n            true otherwise\n      description: \"\"\n    WorkspaceACLUpdateResponse:\n      required:\n        - accessLevel\n        - subjectId\n      type: object\n      properties:\n        subjectId:\n          type: string\n          description: id of the user or group whose permissions will be changed\n        accessLevel:\n          type: string\n          description: The access level granted to this user or group (OWNER, READER,\n            WRITER, NO ACCESS)\n      description: \"\"\n    WorkspaceACLUpdateResponseList:\n      required:\n        - invitesSent\n        - invitesUpdated\n        - usersNotFound\n        - usersUpdated\n      type: object\n      properties:\n        usersUpdated:\n          type: array\n          description: the users or groups who were updated\n          items:\n            $ref: '#/components/schemas/WorkspaceACLUpdateResponse'\n        invitesSent:\n          type: array\n          description: the list of invites that were sent\n          items:\n            $ref: '#/components/schemas/WorkspaceACLUpdate'\n        invitesUpdated:\n          type: array\n          description: the list of invites that were updated\n          items:\n            $ref: '#/components/schemas/WorkspaceACLUpdate'\n        usersNotFound:\n          type: array\n          description: the users or groups who were not found\n          items:\n            $ref: '#/components/schemas/WorkspaceACLUpdate'\n      description: \"\"\n    WorkspaceAccessEntry:\n      required:\n        - accessLevel\n        - canCompute\n        - canShare\n        - pending\n      type: object\n      properties:\n        accessLevel:\n          type: string\n          description: The access level granted to this user or group (OWNER, READER,\n            WRITER, NO ACCESS)\n        pending:\n          type: boolean\n          description: The status of the users access\n        canShare:\n          type: boolean\n          description: True if the user can share the workspace with others, false\n            otherwise\n        canCompute:\n          type: boolean\n          description: True if the user can launch compute in this workspace, false\n            otherwise\n      description: \"\"\n    ManagedGroupAccessResponse:\n      required:\n        - groupEmail\n        - groupName\n        - role\n      type: object\n      properties:\n        groupName:\n          type: string\n        groupEmail:\n          type: string\n        role:\n          type: string\n      description: an element of a list of groups a user has access to\n    ManagedGroupWithMembers:\n      required:\n        - adminsEmails\n        - membersEmails\n      type: object\n      properties:\n        groupEmail:\n          type: string\n        membersEmails:\n          type: array\n          items:\n            type: string\n        adminsEmails:\n          type: array\n          items:\n            type: string\n      description: a group with all of its members\n    RawlsGroupShort:\n      type: object\n      properties:\n        groupName:\n          type: string\n          description: the name of the group\n        groupEmail:\n          type: string\n          description: the email associated with the group\n      description: a reference to a group\n    SystemStatus:\n      required:\n        - ok\n        - systems\n      type: object\n      properties:\n        ok:\n          type: boolean\n          description: whether any system(s) need attention\n          example: false\n        systems:\n          type: object\n          properties: {}\n          description: Map[String, SubsystemStatus]\n          example:\n            Agora:\n              ok: true\n            Google:\n              ok: true\n            Consent:\n              ok: false\n              messages:\n                - ClusterHealth is RED\n            Rawls:\n              ok: true\n            Ontology:\n              ok: true\n            Search:\n              ok: true\n            Thurloe:\n              ok: false\n              messages:\n                - Thurloe misbehavior message\n      description: report status of systems Orchestration calls out to\n    Submission:\n      type: object\n      properties:\n        submissionId:\n          type: string\n          description: SubmissionRequest unique identifier\n        submissionDate:\n          type: string\n          description: SubmissionRequest date\n          format: date-time\n        submitter:\n          type: string\n          description: user that created the submission\n        methodConfigurationNamespace:\n          type: string\n          description: Method configuration namespace\n        methodConfigurationName:\n          type: string\n          description: Method configuration name\n        workflows:\n          type: array\n          description: Status of Workflow(s)\n          items:\n            $ref: '#/components/schemas/Workflow'\n        status:\n          $ref: '#/components/schemas/SubmissionStatus'\n        cost:\n          type: number\n          description: The compute cost of this submission\n          format: float\n        useCallCache:\n          type: boolean\n          description: Whether or not to read from cache for this submission\n        deleteIntermediateOutputFiles:\n          type: boolean\n          description: Whether or not to delete intermediate output files when the\n            workflow completes. See Cromwell docs for more information.\n        workflowFailureMode:\n          type: string\n          description: What happens after a task fails. Choose from ContinueWhilePossible\n            and NoNewCalls. Defaults to NoNewCalls if not specified. See Cromwell\n            docs for more information.\n          default: NoNewCalls\n          enum:\n            - NoNewCalls\n            - ContinueWhilePossible\n      description: \"\"\n    SubmissionStatus:\n      type: string\n      description: submission status\n      enum:\n        - Accepted\n        - Evaluating\n        - Submitting\n        - Submitted\n        - Aborting\n        - Aborted\n        - Done\n    Workflow:\n      type: object\n      properties:\n        workflowId:\n          type: string\n          description: Workflow unique identifier\n        status:\n          $ref: '#/components/schemas/WorkflowStatus'\n        statusLastChangedDate:\n          type: string\n          description: Status last-changed date\n          format: date-time\n        messages:\n          type: array\n          description: List of messages about this workflow\n          items:\n            type: string\n        cost:\n          type: number\n          description: The run cost of this workflow\n          format: float\n      description: \"\"\n    WorkflowOutputsResponse:\n      type: object\n      properties:\n        tasks:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/WorkflowOutputs'\n        workflowId:\n          type: string\n    WorkflowOutputs:\n      type: object\n      properties:\n        outputs:\n          type: object\n          description: Map[String, Object]\n          additionalProperties:\n            type: object\n    WorkflowStatus:\n      type: string\n      description: workflow status\n      enum:\n        - Queued\n        - Launching\n        - Submitted\n        - Running\n        - Failed\n        - Succeeded\n        - Aborting\n        - Aborted\n        - Unknown\n    SubmissionRequest:\n      required:\n        - methodConfigurationName\n        - methodConfigurationNamespace\n        - useCallCache\n      type: object\n      properties:\n        methodConfigurationNamespace:\n          type: string\n          description: Namespace of the method configuration to execute.\n        methodConfigurationName:\n          type: string\n          description: Name of the method configuration to execute.\n        entityType:\n          type: string\n          description: Type of root entity for expression. Optional if the method\n            configuration has no root entity.\n        entityName:\n          type: string\n          description: Name of root entity for expression. Optional if the method\n            configuration has no root entity.\n        expression:\n          type: string\n          description: Expression that resolves to one or more entities matching the\n            entity type in the method configuration. Optional if the method configuration\n            has no root entity.\n        useCallCache:\n          type: boolean\n          description: Whether or not to read from cache for this submission.\n        deleteIntermediateOutputFiles:\n          type: boolean\n          description: Whether or not to delete intermediate output files when the\n            workflow completes. See Cromwell docs for more information.\n        useReferenceDisks:\n          type: boolean\n          description: Whether or not to use pre-built disks for common genome references\n        workflowFailureMode:\n          type: string\n          description: What happens after a task fails. Choose from ContinueWhilePossible\n            and NoNewCalls. Defaults to NoNewCalls if not specified. See Cromwell\n            docs for more information.\n          default: NoNewCalls\n          enum:\n            - NoNewCalls\n            - ContinueWhilePossible\n      description: If the referenced method configuration takes no root entity, do\n        not define `entityType`, `entityName` and `expression`.\n    SubmissionResponse:\n      required:\n        - submissionId\n      type: object\n      properties:\n        submissionId:\n          type: string\n          description: Submission Id\n        submissionDate:\n          type: string\n          description: SubmissionRequest date\n          format: date-time\n    MethodConfiguration:\n      required:\n        - deleted\n        - inputs\n        - methodConfigVersion\n        - methodRepoMethod\n        - name\n        - namespace\n        - outputs\n        - prerequisites\n        - rootEntityType\n      type: object\n      properties:\n        namespace:\n          type: string\n          description: Method configuration namespace\n        name:\n          type: string\n          description: Method configuration name\n        rootEntityType:\n          type: string\n          description: Method configuration root entity type\n        inputs:\n          type: object\n          additionalProperties:\n            type: string\n          description: Input map - Map[string, string]\n        outputs:\n          type: object\n          additionalProperties:\n            type: string\n          description: Output map - Map[string, string]\n        prerequisites:\n          type: object\n          additionalProperties:\n            type: string\n          description: Prerequisites map - Map[string, string]\n        methodRepoMethod:\n          type: object\n          additionalProperties:\n            type: string\n          description: Method ID - Map\n        methodConfigVersion:\n          type: integer\n          description: Version number, incremented on edit\n          format: int32\n        deleted:\n          type: boolean\n          description: Is this config marked as deleted?\n          default: false\n    ValidatedMethodConfiguration:\n      required:\n        - extraInputs\n        - invalidInputs\n        - invalidOutputs\n        - methodConfiguration\n        - missingInputs\n        - validInputs\n        - validOutputs\n      type: object\n      properties:\n        validInputs:\n          type: array\n          items:\n            type: string\n        invalidInputs:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n        missingInputs:\n          type: array\n          items:\n            type: string\n        extraInputs:\n          type: array\n          items:\n            type: string\n        validOutputs:\n          type: array\n          items:\n            type: string\n        invalidOutputs:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n        methodConfiguration:\n          $ref: '#/components/schemas/MethodConfiguration'\n      description: Information about the validity of a method configuration's expressions\n        relative to the method itself\n    MethodResponse:\n      required:\n        - managers\n        - name\n        - namespace\n        - snapshotId\n      type: object\n      properties:\n        managers:\n          type: array\n          description: List of Owners.\n          items:\n            type: string\n        namespace:\n          type: string\n          description: Namespace which contains AgoraEntity.\n          default: YOUR_NAMESPACE\n        name:\n          type: string\n          description: Name of the AgoraEntity.\n          default: BWA\n        snapshotId:\n          type: integer\n          description: SnapshotId of AgoraEntity\n          format: int32\n        snapshotComment:\n          type: string\n          description: Snapshot comment of AgoraEntity\n          default: Improved spline reticulation\n        synopsis:\n          type: string\n          description: Synopsis which contains AgoraEntity.\n          default: Quickly aligns short nucleotide sequences.\n        documentation:\n          type: string\n          description: Documentation of the AgoraEntity. MUST BE REQUESTED EXPLICITLY.\n          default: |\n            BWA is a software package for mapping low-divergent sequences\n            against a large reference genome, such as the human genome.\n            It consists of three algorithms: BWA-backtrack, BWA-SW and BWA-MEM.\n        createDate:\n          type: string\n          description: Timestamp of creation\n        url:\n          type: string\n          description: URL where resource can be accessed.\n        payload:\n          type: string\n          description: Payload of method -- must be in WDL format. MUST BE REQUESTED\n            EXPLICITLY.\n          default: |\n            task wc {File in_file command { cat ${in_file} | wc -l } output { Int count = read_int(stdout()) }}\n        entityType:\n          type: string\n          description: Type of the AgoraEntity -- Task or Workflow.\n          default: Task\n    MethodQuery:\n      type: object\n      properties:\n        namespace:\n          type: string\n          description: Namespace which contains AgoraEntity.\n          default: YOUR_NAMESPACE\n        name:\n          type: string\n          description: Name of the AgoraEntity.\n          default: BWA\n        synopsis:\n          type: string\n          description: Synopsis which contains AgoraEntity.\n          default: Quickly aligns short nucleotide sequences.\n        snapshotComment:\n          type: string\n          description: Snapshot comment of AgoraEntity\n          default: Improved spline reticulation\n        documentation:\n          type: string\n          description: Documentation of the AgoraEntity.\n          default: |\n            BWA is a software package for mapping low-divergent sequences\n            against a large reference genome, such as the human genome.\n            It consists of three algorithms: BWA-backtrack, BWA-SW and BWA-MEM.\n        payload:\n          type: string\n          description: Payload of method -- must be in WDL format\n          default: |\n            task wc {File in_file command { cat ${in_file} | wc -l } output { Int count = read_int(stdout()) }}\n        entityType:\n          type: string\n          description: Type of the AgoraEntity -- Task or Workflow.\n          default: Task\n    MethodID:\n      type: object\n      properties:\n        methodNamespace:\n          type: string\n          description: Method namespace\n        methodName:\n          type: string\n          description: Method name\n        methodVersion:\n          type: integer\n          description: Method version\n          format: int32\n          default: 0\n    MethodIO:\n      type: object\n      properties:\n        inputs:\n          type: array\n          items:\n            $ref: '#/components/schemas/MethodInput'\n        outputs:\n          type: array\n          items:\n            $ref: '#/components/schemas/MethodOutput'\n    MethodInput:\n      type: object\n      properties:\n        inputType:\n          type: string\n        name:\n          type: string\n        optional:\n          type: boolean\n    MethodOutput:\n      type: object\n      properties:\n        outputType:\n          type: string\n        name:\n          type: string\n    BillingProjectResponse:\n      required:\n        - projectName\n        - invalidBillingAccount\n        - roles\n      type: object\n      properties:\n        projectName:\n          type: string\n          description: the name of the project\n        billingAccount:\n          type: string\n          description: the billing account to use in google projects\n        servicePerimeter:\n          type: string\n          description: the name of the service permeters for google project\n        invalidBillingAccount:\n          type: boolean\n          description: whether or not the billing account is usable by Terra\n        roles:\n          type: array\n          items:\n            type: string\n          description: the roles the caller has on the project\n        workspacesWithIncorrectBillingAccount:\n          type: array\n          items:\n            $ref: '#/components/schemas/WorkspaceBillingAccount'\n    WorkspaceBillingAccount:\n      required:\n        - workspaceName\n      type: object\n      properties:\n        workspaceName:\n          type: string\n          description: the name of the workspace\n        currentBillingAccountOnGoogleProject:\n          type: string\n          description: the billing project associated with the workspace\n    UpdateRawlsBillingAccountRequest:\n      required:\n        - billingAccount\n      type: object\n      properties:\n        billingAccount:\n          type: string\n          description: The name of the billing account to use\n  parameters:\n    workspaceNamespaceParam:\n      name: workspaceNamespace\n      in: path\n      description: Workspace Namespace\n      required: true\n      schema:\n        type: string\n    workspaceNameParam:\n      name: workspaceName\n      in: path\n      description: Workspace Name\n      required: true\n      schema:\n        type: string\n  securitySchemes:\n    googleoauth:\n      type: oauth2\n      flows:\n        implicit:\n          authorizationUrl: https://accounts.google.com/o/oauth2/auth\n          scopes:\n            openid: open id authorization\n            email: email authorization\n            profile: profile authorization\n            https://www.googleapis.com/auth/devstorage.full_control: GCS storage\n            https://www.googleapis.com/auth/cloud-billing: GCS billing\n"
		}
	},
	"Error": "unmarshal: json: line 1:191: callback: json: cannot unmarshal bool into Go struct field Schema.required of type []string"
}