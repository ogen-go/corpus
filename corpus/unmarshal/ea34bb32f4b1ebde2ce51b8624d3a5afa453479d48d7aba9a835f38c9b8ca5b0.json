{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/superdesk/web-publisher"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi.yaml",
			"byteSize": 161960,
			"content": "openapi: 3.0.0\ninfo:\n    title: Superdesk Publisher\n    version: 2.x\npaths:\n    \"/api/{version}/content/articles/{id}/related/\":\n        get:\n            summary: List related articles\n            parameters:\n                - name: sorting\n                  in: query\n                  required: false\n                  description: \"example: [updatedAt]=asc|desc\"\n                  schema:\n                      type: string\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: id\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                      pattern: \\d+\n            responses:\n                \"200\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                $ref: \"#/components/schemas/RelatedArticle\"\n                \"500\":\n                    description: Unexpected error.\n            tags:\n                - article\n    \"/api/{version}/content/articles/{id}\":\n        get:\n            summary: Show single tenant article\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: id\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                      pattern: .+\n            responses:\n                \"200\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                $ref: \"#/components/schemas/Article\"\n            tags:\n                - article\n        patch:\n            summary: Updates articles\n            description: \u003e-\n                Possible article statuses are:\n\n                 * new\n                 * published\n                 * unpublished\n                 * canceled\n\n                Changing status from any status to `published` will make article visible for every user.\n\n\n                Changing status from `published` to any other will make article hidden for user who don't have rights to see unpublished articles.\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: id\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                      pattern: .+\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: \"#/components/schemas/ArticleType\"\n                required: true\n            responses:\n                \"200\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                $ref: \"#/components/schemas/Article\"\n                \"400\":\n                    description: Returned when validation failed.\n                \"500\":\n                    description: Returned when unexpected error.\n            tags:\n                - article\n        delete:\n            summary: Deletes articles\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: id\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                      pattern: .+\n            responses:\n                \"204\":\n                    description: Returned on success.\n                \"404\":\n                    description: Returned when article not found.\n                \"500\":\n                    description: Returned when unexpected error.\n            tags:\n                - article\n    \"/api/{version}/authors/{id}\":\n        delete:\n            summary: Delete author\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: id\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                      pattern: \\d+\n            responses:\n                \"204\":\n                    description: Returned on success.\n            tags:\n                - authors\n    \"/api/{version}/content/push\":\n        post:\n            summary: Adds a new content from HTTP Push\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                description: NinJS body\n                required: true\n            responses:\n                \"201\":\n                    description: Returned on success\n            tags:\n                - content push\n    \"/api/{version}/assets/push\":\n        post:\n            summary: Adds new assets from HTTP Push\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            requestBody:\n                content:\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                media_id:\n                                    type: string\n                                media:\n                                    type: string\n                                    format: binary\n            responses:\n                \"200\":\n                    description: Returned on form errors\n                \"201\":\n                    description: Returned on successful post.\n                \"500\":\n                    description: Returned on invalid file.\n            tags:\n                - content push\n    \"/api/{version}/assets/{action}/{mediaId}.{extension}\":\n        get:\n            summary: Gets a single media file\n            description: 'Action route parameter values: \"get\" or \"push\"'\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: action\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                      pattern: get|push\n                - name: mediaId\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                      pattern: .+\n                - name: extension\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            responses:\n                \"200\":\n                    description: Returned on form errors\n                \"404\":\n                    description: Returned when file doesn't exist.\n            tags:\n                - content push\n    \"/api/{version}/content/routes/\":\n        get:\n            summary: Lists current tenant routes\n            parameters:\n                - name: type\n                  in: query\n                  required: false\n                  description: \"possible values: 'collection' or 'content'\"\n                  schema:\n                      type: string\n                - name: sorting\n                  in: query\n                  required: false\n                  description: \"example: [updatedAt]=asc|desc\"\n                  schema:\n                      type: string\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            responses:\n                \"200\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                items:\n                                    $ref: \"#/components/schemas/Route\"\n                                type: array\n            tags:\n                - route\n        post:\n            summary: Create new route\n            description: \"Parameter `type` cane have one of two values: `content`, `collection`\n        or `custom`.\"\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: \"#/components/schemas/RouteType\"\n            responses:\n                \"201\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                $ref: \"#/components/schemas/Route\"\n                \"400\":\n                    description: Returned when not valid data.\n            tags:\n                - route\n    \"/api/{version}/content/routes/{id}\":\n        get:\n            summary: Show single tenant route\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: id\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                      pattern: .+\n            responses:\n                \"200\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                $ref: \"#/components/schemas/Route\"\n            tags:\n                - route\n        patch:\n            summary: Update single route\n            description: \"Parameter `type` cane have one of two values: `content` or\n        `collection`.\"\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: id\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                      pattern: .+\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: \"#/components/schemas/RouteType\"\n                required: true\n            responses:\n                \"200\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                $ref: \"#/components/schemas/Route\"\n                \"400\":\n                    description: Returned when not valid data.\n                \"404\":\n                    description: Returned when not found.\n                \"409\":\n                    description: Returned on conflict.\n            tags:\n                - route\n        delete:\n            summary: Delete single tenant route\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: id\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                      pattern: .+\n            responses:\n                \"204\":\n                    description: Returned on success.\n            tags:\n                - route\n    \"/api/{version}/export/analytics/\":\n        get:\n            summary: Lists analytics reports\n            parameters:\n                - name: sorting\n                  in: query\n                  required: false\n                  description: \"example: [createdAt]=asc|desc\"\n                  schema:\n                      type: string\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            responses:\n                \"200\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                items:\n                                    $ref: \"#/components/schemas/AnalyticsReport\"\n                                type: array\n            tags:\n                - export\n        post:\n            summary: Export analytics data\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: \"#/components/schemas/ExportAnalyticsType\"\n            responses:\n                \"201\":\n                    description: Returned on success.\n            tags:\n                - export\n    \"/api/{version}/content/articles\":\n        patch:\n            summary: Update article comments number\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: \"#/components/schemas/ArticleCommentsType\"\n            responses:\n                \"200\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                $ref: \"#/components/schemas/Article\"\n                \"404\":\n                    description: Return when article was not found\n            tags:\n                - article\n    \"/api/{version}/content/sources/\":\n        get:\n            summary: Lists all article sources\n            parameters:\n                - name: sorting\n                  in: query\n                  required: false\n                  description: \"example: [updatedAt]=asc|desc\"\n                  schema:\n                      type: string\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            responses:\n                \"200\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                $ref: \"#/components/schemas/ArticleSource\"\n            tags:\n                - article\n    \"/api/{version}/auth/\":\n        post:\n            summary: Look for user matching provided credentials\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: \"#/components/schemas/UserAuthenticationType\"\n            responses:\n                \"200\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                $ref: \"#/components/schemas/User\"\n                \"401\":\n                    description: No user found or not authorized.\n            tags:\n                - auth\n    \"/api/{version}/auth/superdesk/\":\n        post:\n            summary: Authorize using Superdesk credentials\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: \"#/components/schemas/SuperdeskCredentialAuthenticationType\"\n            responses:\n                \"200\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                $ref: \"#/components/schemas/User\"\n                \"401\":\n                    description: No user found or not authorized.\n            tags:\n                - auth\n    \"/api/{version}/content/lists/\":\n        get:\n            summary: Lists all content lists\n            parameters:\n                - name: sorting\n                  in: query\n                  required: false\n                  description: \"example: [updatedAt]=asc|desc\"\n                  schema:\n                      type: string\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            responses:\n                \"200\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                items:\n                                    $ref: \"#/components/schemas/ContentList\"\n                                type: array\n            tags:\n                - content list\n        post:\n            summary: Create new content list\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            requestBody:\n                $ref: \"#/components/requestBodies/ContentListType\"\n            responses:\n                \"201\":\n                    description: Returned on success.\n                \"400\":\n                    description: Returned when not valid data.\n                    content:\n                        \"*/*\":\n                            schema:\n                                $ref: \"#/components/schemas/ContentList\"\n            tags:\n                - content list\n    \"/api/{version}/content/lists/{id}\":\n        get:\n            summary: Show single content list\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: id\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                      pattern: \\d+\n            responses:\n                \"200\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                $ref: \"#/components/schemas/ContentList\"\n            tags:\n                - content list\n        patch:\n            summary: Update single content list\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: id\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                      pattern: \\d+\n            requestBody:\n                $ref: \"#/components/requestBodies/ContentListType\"\n            responses:\n                \"200\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                $ref: \"#/components/schemas/ContentList\"\n                \"400\":\n                    description: Returned when not valid data.\n                \"404\":\n                    description: Returned when not found.\n                \"409\":\n                    description: Returned on conflict.\n            tags:\n                - content list\n        delete:\n            summary: Delete single content list\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: id\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                      pattern: \\d+\n            responses:\n                \"204\":\n                    description: Returned on success.\n            tags:\n                - content list\n    \"/api/{version}/content/lists/{id}/items/\":\n        get:\n            summary: Lists content list items\n            parameters:\n                - name: sticky\n                  in: query\n                  required: false\n                  description: Keep item on top of the list\n                  schema:\n                      type: boolean\n                - name: sorting\n                  in: query\n                  required: false\n                  description: \"example: [updatedAt]=asc|desc\"\n                  schema:\n                      type: string\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: id\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                      pattern: \\d+\n            responses:\n                \"200\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                items:\n                                    $ref: \"#/components/schemas/ContentListItem\"\n                                type: array\n                \"404\":\n                    description: Content list item not found.\n                \"500\":\n                    description: Unexpected error.\n            tags:\n                - content list\n    \"/api/{version}/content/lists/{listId}/items/{id}\":\n        get:\n            summary: Get single content list item\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: listId\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: id\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                      pattern: \\d+\n            responses:\n                \"200\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                $ref: \"#/components/schemas/ContentListItem\"\n            tags:\n                - content list\n        patch:\n            summary: Update single content list item\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: listId\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                      pattern: \\d+\n                - name: id\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                      pattern: \\d+\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: \"#/components/schemas/ContentListItemType\"\n            responses:\n                \"200\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                $ref: \"#/components/schemas/ContentListItem\"\n                \"400\":\n                    description: Returned when not valid data.\n                \"404\":\n                    description: Returned when not found.\n            tags:\n                - content list\n    \"/api/{version}/content/lists/{listId}/items/\":\n        patch:\n            summary: Update many content list items\n            description: \u003e-\n                - make sure that \"updated_at\" value is filled with value fetched from\n                list.\n\n\n                Possible actions: move, add, delete\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: listId\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                      pattern: \\d+\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: \"#/components/schemas/ContentListItemsType\"\n            responses:\n                \"200\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                $ref: \"#/components/schemas/ContentList\"\n                \"400\":\n                    description: Returned when not valid data.\n                \"404\":\n                    description: Returned when not found.\n            tags:\n                - content list\n    \"/api/{version}/theme/logo_upload/\":\n        post:\n            summary: Uploads current theme logo\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            requestBody:\n                $ref: \"#/components/requestBodies/postApi_version_themeLogoUpload_\"\n            responses:\n                \"201\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                $ref: \"#/components/schemas/Settings\"\n            tags:\n                - theme\n    \"/api/{version}/theme/logo_upload/{type}\":\n        post:\n            summary: Uploads current theme logo\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: type\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            requestBody:\n                $ref: \"#/components/requestBodies/postApi_version_themeLogoUpload_\"\n            responses:\n                \"201\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                $ref: \"#/components/schemas/Settings\"\n            tags:\n                - theme\n    \"/api/{version}/theme/settings/\":\n        get:\n            summary: Lists current theme settings\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            responses:\n                \"200\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                $ref: \"#/components/schemas/Settings\"\n            tags:\n                - theme\n    \"/api/{version}/packages/extra/{slug}\":\n        get:\n            summary: Get package external data\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: slug\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            responses:\n                \"201\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                items:\n                                    $ref: \"#/components/schemas/ExternalData\"\n                                type: array\n                \"400\":\n                    description: Returned on validation error.\n                \"405\":\n                    description: Method Not Allowed.\n            tags:\n                - package\n        put:\n            summary: Set new package external data\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: slug\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                required: true\n            responses:\n                \"201\":\n                    description: Returned on success.\n                \"400\":\n                    description: Returned on validation error.\n                    content:\n                        \"*/*\":\n                            schema:\n                                items:\n                                    $ref: \"#/components/schemas/ExternalData\"\n                                type: array\n                \"405\":\n                    description: Method Not Allowed.\n            tags:\n                - package\n    \"/api/{version}/failed_queue/\":\n        get:\n            summary: Lists analytics reports\n            parameters:\n                - name: limit\n                  in: query\n                  required: false\n                  description: \"example: limit=5\"\n                  schema:\n                      type: integer\n                      default: 50\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            responses:\n                \"200\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                items:\n                                    $ref: \"#/components/schemas/FailedEntry\"\n                                type: array\n            tags:\n                - failed_queue\n    \"/api/{version}/facebook/applications/\":\n        get:\n            summary: Lists Facebook Applications\n            parameters:\n                - name: sorting\n                  in: query\n                  required: false\n                  description: todo\n                  schema:\n                      type: string\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            responses:\n                \"200\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                $ref: \"#/components/schemas/FacebookApplication\"\n                \"500\":\n                    description: Unexpected error.\n            tags:\n                - facebook instant articles\n        post:\n            summary: Create Facebook application\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: \"#/components/schemas/FacebookApplicationType\"\n            responses:\n                \"201\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                $ref: \"#/components/schemas/FacebookApplication\"\n                \"400\":\n                    description: Returned when not valid data.\n            tags:\n                - facebook instant articles\n    \"/api/{version}/facebook/applications/{id}\":\n        delete:\n            summary: Delete Facebook application\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: id\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            responses:\n                \"204\":\n                    description: Returned on success.\n                \"404\":\n                    description: Application not found\n                \"409\":\n                    description: Application is used by page\n                \"500\":\n                    description: Unexpected error.\n            tags:\n                - facebook instant articles\n    \"/api/{version}/facebook/pages/\":\n        get:\n            summary: Lists Facebook Pages\n            parameters:\n                - name: sorting\n                  in: query\n                  required: false\n                  description: \"example: [updatedAt]=asc|desc\"\n                  schema:\n                      type: string\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            responses:\n                \"200\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                items:\n                                    $ref: \"#/components/schemas/FacebookPage\"\n                                type: array\n                \"500\":\n                    description: Unexpected error.\n            tags:\n                - facebook instant articles\n        post:\n            summary: Create Facebook page\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: \"#/components/schemas/FacebookPageType\"\n            responses:\n                \"201\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                $ref: \"#/components/schemas/FacebookPage\"\n                \"400\":\n                    description: Returned when not valid data.\n            tags:\n                - facebook instant articles\n    \"/api/{version}/facebook/pages/{id}\":\n        delete:\n            summary: Delete Facebook page\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: id\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            responses:\n                \"204\":\n                    description: Returned on success.\n                \"404\":\n                    description: Page not found\n                \"409\":\n                    description: Page is used by Instant Articles Feed\n                \"500\":\n                    description: Unexpected error.\n            tags:\n                - facebook instant articles\n    \"/api/{version}/facebook/instantarticles/articles/\":\n        get:\n            summary: Lists Facebook Instant Articles submitted articles\n            parameters:\n                - name: sorting\n                  in: query\n                  required: false\n                  description: \"example: [updatedAt]=asc|desc\"\n                  schema:\n                      type: string\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            responses:\n                \"200\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                items:\n                                    $ref: \"#/components/schemas/FacebookInstantArticlesArticle\"\n                                type: array\n                \"500\":\n                    description: Unexpected error.\n            tags:\n                - facebook instant articles\n    \"/api/{version}/facebook/instantarticles/articles/{submissionId}\":\n        post:\n            summary: Updates status of submitted Instant Article\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: submissionId\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            responses:\n                \"200\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                $ref: \"#/components/schemas/FacebookInstantArticlesArticle\"\n                \"500\":\n                    description: Unexpected error.\n            tags:\n                - facebook instant articles\n    \"/api/{version}/facebook/instantarticles/feed/\":\n        get:\n            summary: Lists Facebook Instant Articles feeds\n            parameters:\n                - name: sorting\n                  in: query\n                  required: false\n                  description: \"example: [updatedAt]=asc|desc\"\n                  schema:\n                      type: string\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            responses:\n                \"200\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                items:\n                                    $ref: \"#/components/schemas/FacebookInstantArticlesFeed\"\n                                type: array\n                \"500\":\n                    description: Unexpected error.\n            tags:\n                - facebook instant articles\n        post:\n            summary: Create Facebook Instant Articles feed content list\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: \"#/components/schemas/FacebookInstantArticlesFeedType\"\n            responses:\n                \"201\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                $ref: \"#/components/schemas/FacebookInstantArticlesFeed\"\n                \"400\":\n                    description: Returned when not valid data.\n            tags:\n                - facebook instant articles\n    \"/api/{version}/menus/\":\n        get:\n            summary: Lists all registered menus\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            responses:\n                \"200\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                items:\n                                    $ref: \"#/components/schemas/MenuItem\"\n                                type: array\n                \"404\":\n                    description: No menus found.\n            tags:\n                - menu\n        post:\n            summary: Create new menu\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            requestBody:\n                $ref: \"#/components/requestBodies/MenuType\"\n            responses:\n                \"201\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                $ref: \"#/components/schemas/MenuItem\"\n                \"400\":\n                    description: Returned when form have errors\n            tags:\n                - menu\n    \"/api/{version}/menus/{id}/children/\":\n        get:\n            summary: Lists all children of menu item\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: id\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            responses:\n                \"200\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                items:\n                                    $ref: \"#/components/schemas/MenuItem\"\n                                type: array\n                \"404\":\n                    description: No menus found.\n            tags:\n                - menu\n    \"/api/{version}/menus/{id}/move/\":\n        patch:\n            summary: Moves menu item to a specific position in a tree\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: id\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                      pattern: \\d+\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: \"#/components/schemas/MenuItemMoveType\"\n            responses:\n                \"200\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                $ref: \"#/components/schemas/MenuItem\"\n                \"400\":\n                    description: Validation error.\n                \"404\":\n                    description: Menu item not found.\n                \"409\":\n                    description: When Menu item is already placed at the same position.\n                \"500\":\n                    description: Unexpected error.\n            tags:\n                - menu\n    \"/api/{version}/menus/{id}\":\n        get:\n            summary: Get single menu\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: id\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            responses:\n                \"200\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                $ref: \"#/components/schemas/MenuItem\"\n                \"404\":\n                    description: Menu not found\n                \"422\":\n                    description: Menu id is not number\n            tags:\n                - menu\n        patch:\n            summary: Update single menu\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: id\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            requestBody:\n                $ref: \"#/components/requestBodies/MenuType\"\n            responses:\n                \"201\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                $ref: \"#/components/schemas/MenuItem\"\n                \"404\":\n                    description: Menu not found\n                \"405\":\n                    description: Method Not Allowed\n                \"422\":\n                    description: Menu id is not number\n            tags:\n                - menu\n        delete:\n            summary: Delete single menu\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: id\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            responses:\n                \"204\":\n                    description: Returned on success.\n                \"404\":\n                    description: Menu not found\n                \"422\":\n                    description: Menu id is not number\n            tags:\n                - menu\n    \"/api/{version}/organization/rules/evaluate\":\n        post:\n            summary: Returns a list of rules that will be executed on the package\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            requestBody:\n                $ref: \"#/components/requestBodies/Package\"\n            responses:\n                \"200\":\n                    description: Returned on success\n            tags:\n                - organization rule\n    \"/api/{version}/organization/rules/\":\n        get:\n            summary: List all current organization's articles\n            parameters:\n                - name: sorting\n                  in: query\n                  required: false\n                  description: \"example: [updatedAt]=asc|desc\"\n                  schema:\n                      type: string\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            responses:\n                \"200\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                items:\n                                    $ref: \"#/components/schemas/Rule\"\n                                type: array\n                \"500\":\n                    description: Returned when unexpected error occurred.\n            tags:\n                - organization rule\n        post:\n            summary: Create a new organization rule\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            requestBody:\n                $ref: \"#/components/requestBodies/RuleType\"\n            responses:\n                \"201\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                $ref: \"#/components/schemas/Rule\"\n                \"400\":\n                    description: Returned on validation error.\n                \"405\":\n                    description: Method Not Allowed.\n            tags:\n                - organization rule\n    \"/api/{version}/organization/rules/{id}\":\n        get:\n            summary: Show single organization rule\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: id\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                      pattern: \\d+\n            responses:\n                \"200\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                $ref: \"#/components/schemas/Rule\"\n            tags:\n                - organization rule\n        patch:\n            summary: Updates organization rule\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: id\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                      pattern: \\d+\n            requestBody:\n                $ref: \"#/components/requestBodies/RuleType\"\n            responses:\n                \"200\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                $ref: \"#/components/schemas/Rule\"\n                \"400\":\n                    description: Returned when validation failed.\n                \"500\":\n                    description: Returned when unexpected error.\n            tags:\n                - organization rule\n        delete:\n            summary: Delete single organization rule\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: id\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                      pattern: \\d+\n            responses:\n                \"204\":\n                    description: Returned on success.\n                \"404\":\n                    description: Returned when rule not found.\n                \"405\":\n                    description: Returned when method not allowed.\n            tags:\n                - organization rule\n    \"/api/{version}/packages/{id}\":\n        get:\n            summary: Show single package\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: id\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                      pattern: \\d+\n            responses:\n                \"200\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                $ref: \"#/components/schemas/Package2\"\n            tags:\n                - package\n    \"/api/{version}/packages/{id}/publish/\":\n        post:\n            summary: Publishes package to many tenants\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: id\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                      pattern: \\d+\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: \"#/components/schemas/CompositePublishActionType\"\n            responses:\n                \"200\":\n                    description: Returned on success.\n                \"400\":\n                    description: Returned when validation failed.\n                \"500\":\n                    description: Returned when unexpected error.\n            tags:\n                - package\n    \"/api/{version}/packages/{id}/unpublish/\":\n        post:\n            summary: Un-publishes package from many tenants\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: id\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                      pattern: \\d+\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: \"#/components/schemas/UnpublishFromTenantsType\"\n            responses:\n                \"200\":\n                    description: Returned on success.\n                \"400\":\n                    description: Returned when validation failed.\n                \"500\":\n                    description: Returned when unexpected error.\n            tags:\n                - package\n    \"/api/{version}/packages/{id}/\":\n        patch:\n            summary: Updates package\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: id\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                      pattern: \\d+\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: \"#/components/schemas/PackageType\"\n            responses:\n                \"200\":\n                    description: Returned on success.\n                \"400\":\n                    description: Returned when validation failed.\n                \"500\":\n                    description: Returned when unexpected error.\n            tags:\n                - package\n    \"/api/{version}/preview/package/generate_token/{routeId}\":\n        post:\n            summary: Generate package preview token for specific route\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: routeId\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                      pattern: \\d+\n            requestBody:\n                $ref: \"#/components/requestBodies/Package\"\n            responses:\n                \"200\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                type: string\n                \"400\":\n                    description: Returned when validation failed.\n                \"500\":\n                    description: Returned when unexpected error.\n            tags:\n                - package\n    \"/api/{version}/packages/seo/upload/{packageGuid}\":\n        post:\n            summary: Uploads SEO image for Package\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: packageGuid\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            requestBody:\n                $ref: \"#/components/requestBodies/postApi_version_packagesSeoUpload_package\\\n          guid_\"\n            responses:\n                \"201\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                $ref: \"#/components/schemas/ArticleSeoMetadata\"\n            tags:\n                - seo\n    \"/api/{version}/organization/destinations/\":\n        post:\n            summary: Add a new publish destination\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            requestBody:\n                $ref: \"#/components/requestBodies/PublishDestinationType\"\n            responses:\n                \"201\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                $ref: \"#/components/schemas/PublishDestination\"\n                \"400\":\n                    description: Returned when form have errors\n            tags:\n                - destination\n    \"/api/{version}/organization/destinations/{id}\":\n        patch:\n            summary: Update existing publish destination\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: id\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                      pattern: \\d+\n            requestBody:\n                $ref: \"#/components/requestBodies/PublishDestinationType\"\n            responses:\n                \"200\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                $ref: \"#/components/schemas/PublishDestination\"\n                \"400\":\n                    description: Returned when form have errors\n            tags:\n                - destination\n    \"/api/{version}/redirects/\":\n        get:\n            summary: Lists redirect routes\n            parameters:\n                - name: sorting\n                  in: query\n                  required: false\n                  description: \"example: [createdAt]=asc|desc\"\n                  schema:\n                      type: string\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            responses:\n                \"200\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                items:\n                                    $ref: \"#/components/schemas/RedirectRoute\"\n                                type: array\n            tags:\n                - redirect_route\n        post:\n            summary: Create new redirect route\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: \"#/components/schemas/RedirectRouteType\"\n            responses:\n                \"201\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                $ref: \"#/components/schemas/RedirectRoute2\"\n                \"400\":\n                    description: Returned when not valid data.\n            tags:\n                - redirect_route\n    \"/api/{version}/redirects/{id}\":\n        patch:\n            summary: Update redirect route\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: id\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                      pattern: \\d+\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: \"#/components/schemas/RedirectRouteType\"\n                required: true\n            responses:\n                \"200\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                $ref: \"#/components/schemas/RedirectRoute2\"\n                \"400\":\n                    description: Returned when not valid data.\n                \"404\":\n                    description: Returned when not found.\n                \"409\":\n                    description: Returned on conflict.\n            tags:\n                - redirect_route\n        delete:\n            summary: Delete redirect route\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: id\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                      pattern: \\d+\n            responses:\n                \"204\":\n                    description: Returned on success.\n            tags:\n                - redirect_route\n    \"/api/{version}/organization/articles/related/\":\n        post:\n            summary: Returns a list of related articles\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            requestBody:\n                $ref: \"#/components/requestBodies/Package\"\n            responses:\n                \"200\":\n                    description: Returned on success\n                    content:\n                        \"*/*\":\n                            schema:\n                                $ref: \"#/components/schemas/RelatedArticleList\"\n            tags:\n                - related article\n    \"/api/{version}/packages/{id}/related/\":\n        get:\n            summary: Returns a list of related articles\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: id\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                      pattern: \\d+\n            responses:\n                \"200\":\n                    description: Returned on success\n                    content:\n                        \"*/*\":\n                            schema:\n                                $ref: \"#/components/schemas/RelatedArticleList\"\n            tags:\n                - related article\n    \"/api/{version}/rules/\":\n        get:\n            summary: List all Rule entities for current tenant.\n            parameters:\n                - name: sorting\n                  in: query\n                  required: false\n                  description: \"example: [updatedAt]=asc|desc\"\n                  schema:\n                      type: string\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            responses:\n                \"200\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                items:\n                                    $ref: \"#/components/schemas/Rule\"\n                                type: array\n                \"405\":\n                    description: Method Not Allowed.\n            tags:\n                - tenant rule\n        post:\n            summary: Create new rule\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: \"#/components/schemas/RuleType\"\n                required: true\n            responses:\n                \"201\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                $ref: \"#/components/schemas/Rule\"\n                \"400\":\n                    description: Returned on validation error.\n                \"405\":\n                    description: Method Not Allowed.\n            tags:\n                - tenant rule\n    \"/api/{version}/rules/{id}\":\n        get:\n            summary: Get single rule\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: id\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                      pattern: \\d+\n            responses:\n                \"200\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                $ref: \"#/components/schemas/Rule\"\n                \"404\":\n                    description: Rule not found.\n                \"405\":\n                    description: Method Not Allowed.\n            tags:\n                - tenant rule\n        patch:\n            summary: Update single rule\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: id\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                      pattern: \\d+\n            requestBody:\n                $ref: \"#/components/requestBodies/RuleType\"\n            responses:\n                \"201\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                $ref: \"#/components/schemas/Rule\"\n                \"400\":\n                    description: Returned on validation error.\n                \"404\":\n                    description: Rule not found.\n                \"405\":\n                    description: Method Not Allowed.\n            tags:\n                - tenant rule\n        delete:\n            summary: Delete single rule\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: id\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                      pattern: \\d+\n            responses:\n                \"204\":\n                    description: Returned on success.\n                \"404\":\n                    description: Returned when rule not found.\n                \"405\":\n                    description: Returned when method not allowed.\n            tags:\n                - tenant rule\n    \"/api/{version}/upload/seo_image/{id}\":\n        post:\n            summary: Uploads SEO image\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: id\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            requestBody:\n                $ref: \"#/components/requestBodies/postApi_version_packagesSeoUpload_package\\\n          guid_\"\n            responses:\n                \"201\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                $ref: \"#/components/schemas/ArticleSeoMetadata\"\n            tags:\n                - seo\n    \"/api/{version}/packages/seo/{packageGuid}\":\n        get:\n            summary: Gets SEO metadata entry\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: packageGuid\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            responses:\n                \"200\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                $ref: \"#/components/schemas/ArticleSeoMetadata\"\n                \"400\":\n                    description: Returned when form have errors\n            tags:\n                - seo\n        put:\n            summary: Change SEO metadata entry\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: packageGuid\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: \"#/components/schemas/SeoMetadataType\"\n            responses:\n                \"200\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                $ref: \"#/components/schemas/ArticleSeoMetadata\"\n                \"400\":\n                    description: Returned when form have errors\n            tags:\n                - seo\n    \"/api/{version}/content/slideshows/{articleId}\":\n        get:\n            summary: List all slideshows\n            parameters:\n                - name: sorting\n                  in: query\n                  required: false\n                  description: todo\n                  schema:\n                      type: string\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: articleId\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            responses:\n                \"200\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                items:\n                                    $ref: \"#/components/schemas/Slideshow\"\n                                type: array\n            tags:\n                - slideshow\n    \"/api/{version}/content/slideshows/{articleId}/{id}\":\n        get:\n            summary: Get single slideshow\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: articleId\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: id\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                      pattern: \\d+\n            responses:\n                \"200\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                $ref: \"#/components/schemas/Slideshow\"\n            tags:\n                - slideshow\n    \"/api/{version}/content/slideshows/{articleId}/{id}/items/\":\n        get:\n            summary: Lists slideshow items\n            parameters:\n                - name: sorting\n                  in: query\n                  required: false\n                  description: \"example: [updatedAt]=asc|desc\"\n                  schema:\n                      type: string\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: articleId\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: id\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                      pattern: \\d+\n            responses:\n                \"200\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                items:\n                                    $ref: \"#/components/schemas/SlideshowItem\"\n                                type: array\n                \"404\":\n                    description: Slideshow not found.\n                \"500\":\n                    description: Unexpected error.\n            tags:\n                - slideshow\n    \"/api/{version}/subscriptions/{userId}\":\n        get:\n            summary: Lists user subscriptions\n            parameters:\n                - name: routeId\n                  in: query\n                  required: false\n                  description: Route id\n                  schema:\n                      type: integer\n                - name: articleId\n                  in: query\n                  required: false\n                  description: Article id\n                  schema:\n                      type: integer\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: userId\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            responses:\n                \"200\":\n                    description: Returned on success.\n            tags:\n                - paywall\n    \"/api/{version}/tenants/\":\n        get:\n            summary: List all tenants/websites\n            parameters:\n                - name: sorting\n                  in: query\n                  required: false\n                  description: todo\n                  schema:\n                      type: string\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            responses:\n                \"200\":\n                    description: Returned on success.\n            tags:\n                - tenant\n        post:\n            summary: Create new tenant/website\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: \"#/components/schemas/TenantType\"\n            responses:\n                \"201\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                $ref: \"#/components/schemas/Tenant\"\n                \"400\":\n                    description: Returned on failure.\n                \"409\":\n                    description: Returned on conflict.\n            tags:\n                - tenant\n    \"/api/{version}/tenants/{code}\":\n        get:\n            summary: Show single tenant/website\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: code\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                      pattern: \"[a-z0-9]+\"\n            responses:\n                \"200\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                $ref: \"#/components/schemas/Tenant\"\n            tags:\n                - tenant\n        patch:\n            summary: Update single tenant\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: code\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                      pattern: \"[a-z0-9]+\"\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: \"#/components/schemas/TenantType\"\n                required: true\n            responses:\n                \"200\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                $ref: \"#/components/schemas/Tenant\"\n                \"400\":\n                    description: Returned on failure.\n                \"404\":\n                    description: Returned when not found.\n                \"409\":\n                    description: Returned on conflict.\n            tags:\n                - tenant\n        delete:\n            summary: Delete single tenant/website\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: code\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                      pattern: \"[a-z0-9]+\"\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            type: bool\n                description: Remove tenant ignoring attached articles\n            responses:\n                \"204\":\n                    description: Returned on success.\n            tags:\n                - tenant\n    \"/api/{version}/organization/themes/\":\n        get:\n            summary: Lists all available themes in organization\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            responses:\n                \"200\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                items:\n                                    $ref: \"#/components/schemas/Theme\"\n                                type: array\n            tags:\n                - theme\n        post:\n            summary: Upload new theme to organization\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            requestBody:\n                content:\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                file:\n                                    type: string\n                                    format: binary\n            responses:\n                \"201\":\n                    description: Returned on success.\n            tags:\n                - theme\n    \"/api/{version}/themes/\":\n        get:\n            summary: Lists all available themes in tenant\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            responses:\n                \"200\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                items:\n                                    $ref: \"#/components/schemas/Theme\"\n                                type: array\n            tags:\n                - theme\n        post:\n            summary: Install theme for tenant\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: \"#/components/schemas/ThemeInstallType\"\n            responses:\n                \"201\":\n                    description: Returned on success.\n            tags:\n                - theme\n    \"/api/{version}/webhooks/\":\n        get:\n            summary: List all Webhook entities for current tenant.\n            parameters:\n                - name: sorting\n                  in: query\n                  required: false\n                  description: \"example: [updatedAt]=asc|desc\"\n                  schema:\n                      type: string\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            responses:\n                \"200\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                items:\n                                    $ref: \"#/components/schemas/Webhook\"\n                                type: array\n                \"405\":\n                    description: Method Not Allowed.\n            tags:\n                - webhook\n        post:\n            summary: Create new webhook\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            requestBody:\n                $ref: \"#/components/requestBodies/WebhookType\"\n            responses:\n                \"201\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                $ref: \"#/components/schemas/Webhook\"\n                \"400\":\n                    description: Returned on validation error.\n                \"405\":\n                    description: Method Not Allowed.\n            tags:\n                - webhook\n    \"/api/{version}/webhooks/{id}\":\n        get:\n            summary: Get single webhook\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: id\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                      pattern: \\d+\n            responses:\n                \"200\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                $ref: \"#/components/schemas/Webhook\"\n                \"404\":\n                    description: Rule not found.\n                \"405\":\n                    description: Method Not Allowed.\n            tags:\n                - webhook\n        patch:\n            summary: Update single webhook\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: id\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                      pattern: \\d+\n            requestBody:\n                $ref: \"#/components/requestBodies/WebhookType\"\n            responses:\n                \"201\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                $ref: \"#/components/schemas/Webhook\"\n                \"400\":\n                    description: Returned on validation error.\n                \"404\":\n                    description: Rule not found.\n                \"405\":\n                    description: Method Not Allowed.\n            tags:\n                - webhook\n        delete:\n            summary: Delete single webhook\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: id\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                      pattern: \\d+\n            responses:\n                \"204\":\n                    description: Returned on success.\n                \"404\":\n                    description: Returned when rule not found.\n                \"405\":\n                    description: Returned when method not allowed.\n            tags:\n                - webhook\n    \"/api/{version}/users/profile/{id}\":\n        get:\n            summary: Get user profile\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: id\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            responses:\n                \"200\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                $ref: \"#/components/schemas/User\"\n                \"404\":\n                    description: Returned on user not found.\n            tags:\n                - user\n        patch:\n            summary: Update user profile\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: id\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: \"#/components/schemas/ProfileFormType\"\n            responses:\n                \"201\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                $ref: \"#/components/schemas/User\"\n                \"400\":\n                    description: Returned on failure.\n                \"404\":\n                    description: Returned on user not found.\n            tags:\n                - user\n    \"/api/{version}/users/register/\":\n        post:\n            summary: Register new user\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: \"#/components/schemas/RegistrationFormType\"\n            responses:\n                \"201\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                $ref: \"#/components/schemas/User\"\n                \"400\":\n                    description: Returned on failure.\n                \"409\":\n                    description: Returned on conflict.\n            tags:\n                - user\n    \"/api/{version}/users/{id}/promote\":\n        patch:\n            summary: Change user roles\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: id\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            requestBody:\n                $ref: \"#/components/requestBodies/UserRolesType\"\n            responses:\n                \"200\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                $ref: \"#/components/schemas/User\"\n                \"403\":\n                    description: Returned when user don't have permissions to change roles\n                \"404\":\n                    description: Returned on user not found.\n            tags:\n                - user\n    \"/api/{version}/users/{id}/demote\":\n        patch:\n            summary: Change user roles\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: id\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            requestBody:\n                $ref: \"#/components/requestBodies/UserRolesType\"\n            responses:\n                \"200\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                $ref: \"#/components/schemas/User\"\n                \"403\":\n                    description: Returned when user don't have permissions to change roles\n                \"404\":\n                    description: Returned on user not found.\n            tags:\n                - user\n    \"/api/{version}/users/settings/\":\n        get:\n            summary: Get user settings\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            responses:\n                \"200\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                $ref: \"#/components/schemas/User\"\n                \"401\":\n                    description: Returned on user not found.\n            tags:\n                - user\n        patch:\n            summary: Update user setting\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            requestBody:\n                $ref: \"#/components/requestBodies/SettingType\"\n            responses:\n                \"200\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                $ref: \"#/components/schemas/Settings\"\n                \"404\":\n                    description: Setting not found\n            tags:\n                - user\n    \"/api/{version}/content/articles/\":\n        get:\n            summary: Search articles\n            parameters:\n                - name: status\n                  in: query\n                  required: false\n                  description: Package status\n                  schema:\n                      type: array\n                      items:\n                          type: string\n                - name: published_before\n                  in: query\n                  required: false\n                  description: The datetime before which the article has been published\n                  schema:\n                      type: string\n                - name: published_after\n                  in: query\n                  required: false\n                  description: The datetime after which the article has been published\n                  schema:\n                      type: string\n                - name: author\n                  in: query\n                  required: false\n                  description: Article authors\n                  schema:\n                      type: array\n                      items:\n                          type: string\n                - name: keywords\n                  in: query\n                  required: false\n                  description: Article keywords\n                  schema:\n                      type: array\n                      items:\n                          type: string\n                - name: term\n                  in: query\n                  required: false\n                  description: Search phrase\n                  schema:\n                      type: string\n                - name: sorting\n                  in: query\n                  required: false\n                  description: List order\n                  schema:\n                      type: array\n                      items:\n                          type: string\n                - name: source\n                  in: query\n                  required: false\n                  description: Sources\n                  schema:\n                      type: array\n                      items:\n                          type: string\n                - name: limit\n                  in: query\n                  required: false\n                  description: Items per page\n                  schema:\n                      type: integer\n                - name: page\n                  in: query\n                  required: false\n                  description: Page number\n                  schema:\n                      type: integer\n                - name: route\n                  in: query\n                  required: false\n                  description: Routes ids\n                  schema:\n                      type: array\n                      items:\n                          type: integer\n                - name: metadata\n                  in: query\n                  required: false\n                  description: \"Metadata (e.g. query param:\n            ?metadata[located][]=Sydney\u0026metadata[located][]=Berlin)\"\n                  schema:\n                      type: array\n                      items:\n                          type: string\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            responses:\n                \"200\":\n                    description: Returned on success.\n                \"500\":\n                    description: Unexpected error.\n            tags:\n                - article\n    \"/api/{version}/packages/\":\n        get:\n            summary: List all packages\n            parameters:\n                - name: status\n                  in: query\n                  required: false\n                  description: Package status\n                  schema:\n                      type: array\n                      items:\n                          type: string\n                - name: published_before\n                  in: query\n                  required: false\n                  description: The datetime before which the package has been published\n                  schema:\n                      type: string\n                - name: published_after\n                  in: query\n                  required: false\n                  description: The datetime after which the package has been published\n                  schema:\n                      type: string\n                - name: author\n                  in: query\n                  required: false\n                  description: Package authors\n                  schema:\n                      type: array\n                      items:\n                          type: string\n                - name: term\n                  in: query\n                  required: false\n                  description: Search phrase\n                  schema:\n                      type: string\n                - name: sorting\n                  in: query\n                  required: false\n                  description: List order\n                  schema:\n                      type: array\n                      items:\n                          type: string\n                - name: source\n                  in: query\n                  required: false\n                  description: Sources\n                  schema:\n                      type: array\n                      items:\n                          type: string\n                - name: limit\n                  in: query\n                  required: false\n                  description: Items per page\n                  schema:\n                      type: integer\n                - name: page\n                  in: query\n                  required: false\n                  description: Page number\n                  schema:\n                      type: integer\n                - name: tenant\n                  in: query\n                  required: false\n                  description: Tenant codes\n                  schema:\n                      type: array\n                      items:\n                          type: string\n                - name: language\n                  in: query\n                  required: false\n                  description: Language code, e.g. en\n                  schema:\n                      type: string\n                - name: route\n                  in: query\n                  required: false\n                  description: Routes ids\n                  schema:\n                      type: array\n                      items:\n                          type: integer\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            responses:\n                \"200\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                items:\n                                    $ref: \"#/components/schemas/Package2\"\n                                type: array\n                \"500\":\n                    description: Returned when unexpected error.\n            tags:\n                - package\n    \"/api/{version}/settings/\":\n        get:\n            summary: Lists all settings\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            responses:\n                \"200\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                items:\n                                    $ref: \"#/components/schemas/Settings\"\n                                type: array\n            tags:\n                - settings\n        patch:\n            summary: Change setting value\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            requestBody:\n                $ref: \"#/components/requestBodies/SettingType\"\n            responses:\n                \"200\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                $ref: \"#/components/schemas/Settings\"\n                \"404\":\n                    description: Setting not found\n            tags:\n                - settings\n    \"/api/{version}/settings/revert/{scope}\":\n        post:\n            summary: Revert settings to defaults by scope\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                - name: scope\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            responses:\n                \"204\":\n                    description: Returned on success.\n            tags:\n                - settings\n    \"/api/{version}/settings/bulk/\":\n        patch:\n            summary: Settings bulk update\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: \"#/components/schemas/BulkSettingsUpdateType\"\n            responses:\n                \"200\":\n                    description: Returned on success.\n                    content:\n                        \"*/*\":\n                            schema:\n                                items:\n                                    $ref: \"#/components/schemas/Settings\"\n                                type: array\n                \"404\":\n                    description: Setting not found\n            tags:\n                - settings\n    \"/api/{version}/token/refresh\":\n        get:\n            summary: Refresh token.\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            responses:\n                default:\n                    description: \"\"\n        post:\n            summary: Refresh token.\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            responses:\n                default:\n                    description: \"\"\n        put:\n            summary: Refresh token.\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            responses:\n                default:\n                    description: \"\"\n        patch:\n            summary: Refresh token.\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            responses:\n                default:\n                    description: \"\"\n        delete:\n            summary: Refresh token.\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            responses:\n                default:\n                    description: \"\"\n        options:\n            summary: Refresh token.\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            responses:\n                default:\n                    description: \"\"\n        head:\n            summary: Refresh token.\n            parameters:\n                - name: version\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n            responses:\n                default:\n                    description: \"\"\n    /api/doc.json:\n        get:\n            responses:\n                default:\n                    description: \"\"\nsecurity:\n    - Bearer: []\nservers:\n    - url: http://www.publisher.wip\n    - url: https://www.publisher.wip\ncomponents:\n    requestBodies:\n        MenuType:\n            content:\n                application/json:\n                    schema:\n                        $ref: \"#/components/schemas/MenuType\"\n        postApi_version_themeLogoUpload_:\n            content:\n                application/x-www-form-urlencoded:\n                    schema:\n                        type: object\n                        properties:\n                            logo:\n                                description: Logo file\n                                type: string\n                                format: binary\n        ContentListType:\n            content:\n                application/json:\n                    schema:\n                        $ref: \"#/components/schemas/ContentListType\"\n        Package:\n            content:\n                application/json:\n                    schema:\n                        $ref: \"#/components/schemas/Package\"\n        RuleType:\n            content:\n                application/json:\n                    schema:\n                        $ref: \"#/components/schemas/RuleType\"\n        postApi_version_packagesSeoUpload_packageguid_:\n            content:\n                application/x-www-form-urlencoded:\n                    schema:\n                        type: object\n                        properties:\n                            metaMediaFile:\n                                type: string\n                                format: binary\n                            ogMediaFile:\n                                type: string\n                                format: binary\n                            twitterMediaFile:\n                                type: string\n                                format: binary\n        PublishDestinationType:\n            content:\n                application/json:\n                    schema:\n                        $ref: \"#/components/schemas/PublishDestinationType\"\n        WebhookType:\n            content:\n                application/json:\n                    schema:\n                        $ref: \"#/components/schemas/WebhookType\"\n        UserRolesType:\n            content:\n                application/json:\n                    schema:\n                        $ref: \"#/components/schemas/UserRolesType\"\n        SettingType:\n            content:\n                application/json:\n                    schema:\n                        $ref: \"#/components/schemas/SettingType\"\n    securitySchemes:\n        Bearer:\n            name: Authorization\n            type: apiKey\n            in: header\n            description: \"Value: Bearer {jwt}\"\n    schemas:\n        RelatedArticle:\n            properties:\n                article:\n                    $ref: \"#/components/schemas/Article\"\n                created_at:\n                    type: string\n                    format: date-time\n                updated_at:\n                    type: string\n                    format: date-time\n            type: object\n        Article:\n            properties:\n                id:\n                    type: integer\n                title:\n                    type: string\n                body:\n                    type: string\n                slug:\n                    type: string\n                published_at:\n                    type: string\n                    format: date-time\n                status:\n                    type: string\n                route:\n                    $ref: \"#/components/schemas/Route\"\n                template_name:\n                    type: string\n                publish_start_date:\n                    type: string\n                    format: date-time\n                publish_end_date:\n                    type: string\n                    format: date-time\n                is_publishable:\n                    type: boolean\n                metadata:\n                    additionalProperties: true\n                    type: object\n                lead:\n                    type: string\n                code:\n                    type: string\n                extra:\n                    additionalProperties: true\n                    type: object\n                slideshows:\n                    $ref: \"#/components/schemas/ArrayCollection\"\n                created_at:\n                    type: string\n                    format: date-time\n                updated_at:\n                    type: string\n                    format: date-time\n                keywords:\n                    $ref: \"#/components/schemas/ArrayCollection\"\n                seo_metadata:\n                    $ref: \"#/components/schemas/ArticleSeoMetadata\"\n                feature_media:\n                    $ref: \"#/components/schemas/ArticleMedia\"\n                is_published_fbia:\n                    type: boolean\n                article_statistics:\n                    $ref: \"#/components/schemas/ArticleStatistics\"\n                external_article:\n                    $ref: \"#/components/schemas/ExternalArticle\"\n                comments_count:\n                    type: integer\n                is_published_to_apple_news:\n                    type: boolean\n                apple_news_article:\n                    $ref: \"#/components/schemas/AppleNewsArticle\"\n                tenant:\n                    $ref: \"#/components/schemas/TenantInterface\"\n                paywall_secured:\n                    type: boolean\n            type: object\n        ArticleType:\n            required:\n                - status\n                - route\n                - template_name\n                - seoMetadata\n                - paywallSecured\n            properties:\n                status:\n                    type: string\n                route:\n                    type: string\n                template_name:\n                    type: string\n                seoMetadata:\n                    $ref: \"#/components/schemas/SeoMetadataType\"\n                paywallSecured:\n                    $ref: \"#/components/schemas/BooleanType\"\n            type: object\n        Route:\n            properties:\n                requirements:\n                    additionalProperties: true\n                    type: object\n                id:\n                    title: Unique id of this route.\n                    type: integer\n                static_prefix:\n                    title: \u003e-\n                        Part of the URL that does not have parameters and thus can be used\n                        to\n\n                        naivly guess candidate routes.\n                    description: Note that this field is not used by PHPCR-ODM\n                    type: string\n                variable_pattern:\n                    title: Variable pattern part. The static part of the pattern is the id\n                        without the prefix.\n                    type: string\n                parent:\n                    type: integer\n                lft:\n                    type: integer\n                rgt:\n                    type: integer\n                level:\n                    type: integer\n                template_name:\n                    type: string\n                articles_template_name:\n                    type: string\n                type:\n                    type: string\n                cache_time_in_seconds:\n                    type: integer\n                name:\n                    type: string\n                slug:\n                    type: string\n                position:\n                    type: integer\n                articles_count:\n                    $ref: \"#/components/schemas/ArticlesCountInterface\"\n                paywall_secured:\n                    type: boolean\n            type: object\n        RouteType:\n            required:\n                - name\n                - type\n                - parent\n                - paywallSecured\n            properties:\n                name:\n                    type: string\n                slug:\n                    type: string\n                type:\n                    type: string\n                templateName:\n                    type: string\n                articlesTemplateName:\n                    type: string\n                content:\n                    type: string\n                parent:\n                    type: string\n                cacheTimeInSeconds:\n                    type: integer\n                variablePattern:\n                    type: string\n                requirements:\n                    items:\n                        $ref: \"#/components/schemas/KeyValueRowType\"\n                    type: array\n                position:\n                    type: integer\n                paywallSecured:\n                    $ref: \"#/components/schemas/BooleanType\"\n            type: object\n        ExportAnalyticsType:\n            required:\n                - routes\n                - authors\n            properties:\n                start:\n                    type: string\n                    format: date\n                end:\n                    type: string\n                    format: date\n                routes:\n                    items:\n                        $ref: \"#/components/schemas/ExportAnalyticsRouteType\"\n                    type: array\n                authors:\n                    items:\n                        type: string\n                    type: array\n                term:\n                    type: string\n            type: object\n        AnalyticsReport: []\n        ArticleCommentsType:\n            required:\n                - commentsCount\n            properties:\n                url:\n                    type: string\n                id:\n                    type: number\n                commentsCount:\n                    type: number\n            type: object\n        ArticleSource:\n            properties:\n                id:\n                    type: integer\n                name:\n                    type: string\n                created_at:\n                    type: string\n                    format: date-time\n                updated_at:\n                    type: string\n                    format: date-time\n            type: object\n        UserAuthenticationType:\n            required:\n                - username\n                - password\n            properties:\n                username:\n                    type: string\n                password:\n                    type: string\n            type: object\n        User:\n            properties:\n                username:\n                    type: string\n                email:\n                    type: string\n                last_login:\n                    type: string\n                    format: date-time\n                roles:\n                    additionalProperties: true\n                    type: object\n                first_name:\n                    type: string\n                last_name:\n                    type: string\n                about:\n                    type: string\n                created_at:\n                    type: string\n                    format: date-time\n                updated_at:\n                    type: string\n                    format: date-time\n            type: object\n        SuperdeskCredentialAuthenticationType:\n            required:\n                - sessionId\n                - token\n            properties:\n                sessionId:\n                    type: string\n                token:\n                    type: string\n            type: object\n        ContentList:\n            properties:\n                id:\n                    type: integer\n                name:\n                    type: string\n                description:\n                    type: string\n                type:\n                    type: string\n                cache_life_time:\n                    type: integer\n                limit:\n                    type: integer\n                filters:\n                    additionalProperties: true\n                    type: object\n                created_at:\n                    type: string\n                    format: date-time\n                updated_at:\n                    type: string\n                    format: date-time\n                enabled:\n                    type: boolean\n                content_list_items_updated_at:\n                    type: string\n                    format: date-time\n                content_list_items_count:\n                    $ref: \"#/components/schemas/ContentListItemsCountInterface\"\n            type: object\n        ContentListType:\n            required:\n                - name\n                - type\n            properties:\n                name:\n                    type: string\n                type:\n                    type: string\n                    enum:\n                        - automatic\n                        - manual\n                        - bucket\n                description:\n                    type: string\n                limit:\n                    type: integer\n                cacheLifeTime:\n                    type: integer\n                filters:\n                    type: string\n            type: object\n        ContentListItem:\n            properties:\n                id:\n                    type: integer\n                content:\n                    $ref: \"#/components/schemas/Article\"\n                position:\n                    type: integer\n                sticky:\n                    type: boolean\n                sticky_position:\n                    type: integer\n                created_at:\n                    type: string\n                    format: date-time\n                updated_at:\n                    type: string\n                    format: date-time\n                enabled:\n                    type: boolean\n            type: object\n        ContentListItemType:\n            properties:\n                sticky:\n                    $ref: \"#/components/schemas/BooleanType\"\n                stickyPosition:\n                    type: integer\n            type: object\n        ContentListItemsType:\n            required:\n                - items\n                - updatedAt\n            properties:\n                items:\n                    items:\n                        $ref: \"#/components/schemas/ContentListItemPositionType\"\n                    type: array\n                updatedAt:\n                    type: string\n            type: object\n        Settings:\n            properties:\n                id:\n                    type: integer\n                name:\n                    type: string\n                scope:\n                    type: string\n                value:\n                    type: string\n                owner:\n                    type: integer\n                created_at:\n                    type: string\n                    format: date-time\n                updated_at:\n                    type: string\n                    format: date-time\n            type: object\n        ExternalData:\n            properties:\n                id:\n                    type: integer\n                key:\n                    type: string\n                value:\n                    type: string\n                package:\n                    $ref: \"#/components/schemas/Package\"\n                created_at:\n                    type: string\n                    format: date-time\n                updated_at:\n                    type: string\n                    format: date-time\n            type: object\n        FailedEntry: []\n        FacebookApplication:\n            properties:\n                id:\n                    type: integer\n                app_id:\n                    type: string\n                app_secret:\n                    type: string\n                created_at:\n                    type: string\n                    format: date-time\n                updated_at:\n                    type: string\n                    format: date-time\n                enabled:\n                    type: boolean\n                _links:\n                    readOnly: true\n                    properties:\n                        list:\n                            properties:\n                                href:\n                                    type: string\n                            type: object\n            type: object\n        FacebookApplicationType:\n            required:\n                - appId\n                - appSecret\n            properties:\n                appId:\n                    type: string\n                appSecret:\n                    type: string\n            type: object\n        FacebookPage:\n            properties:\n                id:\n                    type: integer\n                page_id:\n                    type: string\n                name:\n                    type: string\n                access_token:\n                    type: string\n                application:\n                    type: string\n                created_at:\n                    type: string\n                    format: date-time\n                updated_at:\n                    type: string\n                    format: date-time\n            type: object\n        FacebookPageType:\n            required:\n                - pageId\n                - name\n            properties:\n                pageId:\n                    type: string\n                name:\n                    type: string\n            type: object\n        FacebookInstantArticlesArticle:\n            properties:\n                id:\n                    type: string\n                submission_id:\n                    type: string\n                article:\n                    $ref: \"#/components/schemas/Article\"\n                status:\n                    type: string\n                errors:\n                    type: string\n                feed:\n                    $ref: \"#/components/schemas/FacebookInstantArticlesFeed\"\n                created_at:\n                    type: string\n                    format: date-time\n                updated_at:\n                    type: string\n                    format: date-time\n            type: object\n        FacebookInstantArticlesFeed:\n            properties:\n                id:\n                    type: string\n                content_bucket:\n                    $ref: \"#/components/schemas/ContentList\"\n                facebook_page:\n                    $ref: \"#/components/schemas/FacebookPage\"\n                mode:\n                    type: integer\n                created_at:\n                    type: string\n                    format: date-time\n                updated_at:\n                    type: string\n                    format: date-time\n            type: object\n        FacebookInstantArticlesFeedType:\n            required:\n                - contentBucket\n                - facebookPage\n                - mode\n            properties:\n                contentBucket:\n                    type: string\n                    format: SWP\\Bundle\\CoreBundle\\Model\\ContentList id\n                facebookPage:\n                    type: string\n                    format: SWP\\Bundle\\CoreBundle\\Model\\FacebookPage id\n                mode:\n                    type: integer\n            type: object\n        MenuItem:\n            properties:\n                id:\n                    type: integer\n                root:\n                    type: integer\n                level:\n                    type: integer\n                name:\n                    title: Name of this menu item (used for id by parent menu).\n                    type: string\n                label:\n                    title: Label to output.\n                    type: string\n                uri:\n                    title: Uri to use in the anchor tag.\n                    type: string\n                parent:\n                    title: Parent item.\n                    type: integer\n                position:\n                    type: integer\n                route:\n                    type: integer\n            type: object\n        MenuItemMoveType:\n            required:\n                - parent\n                - position\n            properties:\n                parent:\n                    type: integer\n                position:\n                    type: integer\n            type: object\n        MenuType:\n            required:\n                - name\n            properties:\n                name:\n                    type: string\n                label:\n                    type: string\n                uri:\n                    type: string\n                parent:\n                    type: integer\n                route:\n                    type: string\n            type: object\n        Package:\n            properties:\n                id:\n                    type: integer\n                guid:\n                    type: string\n                headline:\n                    type: string\n                byline:\n                    type: string\n                slugline:\n                    type: string\n                language:\n                    type: string\n                subject:\n                    additionalProperties: true\n                    type: object\n                type:\n                    type: string\n                place:\n                    additionalProperties: true\n                    type: object\n                service:\n                    additionalProperties: true\n                    type: object\n                located:\n                    type: string\n                urgency:\n                    type: integer\n                priority:\n                    type: integer\n                version:\n                    type: integer\n                genre:\n                    additionalProperties: true\n                    type: object\n                ednote:\n                    type: string\n                description_text:\n                    type: string\n                keywords:\n                    additionalProperties: true\n                    type: object\n                pubstatus:\n                    type: string\n                evolvedfrom:\n                    type: string\n                source:\n                    type: string\n                extra:\n                    additionalProperties: true\n                    type: object\n                firstpublished:\n                    type: string\n                    format: date-time\n                copyrightnotice:\n                    type: string\n                copyrightholder:\n                    type: string\n                authors:\n                    items:\n                        $ref: \"#/components/schemas/ArticleAuthor\"\n                    type: array\n                associations:\n                    additionalProperties: true\n                    type: object\n                extra_items:\n                    additionalProperties: true\n                    type: object\n                body_html:\n                    type: string\n                created_at:\n                    type: string\n                    format: date-time\n                updated_at:\n                    type: string\n                    format: date-time\n                articles:\n                    items:\n                        $ref: \"#/components/schemas/Article2\"\n                    type: array\n                status:\n                    type: string\n            type: object\n        Rule:\n            properties:\n                id:\n                    type: integer\n                expression:\n                    type: string\n                priority:\n                    type: integer\n                configuration:\n                    additionalProperties: true\n                    type: object\n                description:\n                    type: string\n                name:\n                    type: string\n            type: object\n        RuleType:\n            required:\n                - expression\n                - priority\n                - configuration\n                - description\n                - name\n            properties:\n                expression:\n                    type: string\n                priority:\n                    type: integer\n                configuration:\n                    items:\n                        $ref: \"#/components/schemas/KeyValueRowType\"\n                    type: array\n                description:\n                    type: string\n                name:\n                    type: string\n            type: object\n        Package2:\n            properties:\n                id:\n                    type: integer\n                guid:\n                    type: string\n                headline:\n                    type: string\n                byline:\n                    type: string\n                slugline:\n                    type: string\n                language:\n                    type: string\n                subject:\n                    additionalProperties: true\n                    type: object\n                type:\n                    type: string\n                place:\n                    additionalProperties: true\n                    type: object\n                service:\n                    additionalProperties: true\n                    type: object\n                located:\n                    type: string\n                urgency:\n                    type: integer\n                priority:\n                    type: integer\n                version:\n                    type: integer\n                genre:\n                    additionalProperties: true\n                    type: object\n                ednote:\n                    type: string\n                description_text:\n                    type: string\n                keywords:\n                    additionalProperties: true\n                    type: object\n                pubstatus:\n                    type: string\n                evolvedfrom:\n                    type: string\n                source:\n                    type: string\n                extra:\n                    additionalProperties: true\n                    type: object\n                firstpublished:\n                    type: string\n                    format: date-time\n                copyrightnotice:\n                    type: string\n                copyrightholder:\n                    type: string\n                authors:\n                    items:\n                        $ref: \"#/components/schemas/ArticleAuthor2\"\n                    type: array\n                associations:\n                    additionalProperties: true\n                    type: object\n                extra_items:\n                    additionalProperties: true\n                    type: object\n                body_html:\n                    type: string\n                created_at:\n                    type: string\n                    format: date-time\n                updated_at:\n                    type: string\n                    format: date-time\n                articles:\n                    items:\n                        $ref: \"#/components/schemas/Article\"\n                    type: array\n                status:\n                    type: string\n            type: object\n        CompositePublishActionType:\n            required:\n                - destinations\n            properties:\n                destinations:\n                    items:\n                        $ref: \"#/components/schemas/PublishDestinationType\"\n                    type: array\n            type: object\n        UnpublishFromTenantsType:\n            required:\n                - tenants\n            properties:\n                tenants:\n                    items:\n                        type: string\n                        enum:\n                            - {}\n                            - {}\n                            - {}\n                    type: array\n            type: object\n        PackageType:\n            required:\n                - pubStatus\n            properties:\n                pubStatus:\n                    type: string\n            type: object\n        ArticleSeoMetadata:\n            properties:\n                meta_title:\n                    type: string\n                meta_description:\n                    type: string\n                og_title:\n                    type: string\n                og_description:\n                    type: string\n                twitter_title:\n                    type: string\n                twitter_description:\n                    type: string\n            type: object\n        PublishDestinationType:\n            required:\n                - tenant\n                - route\n                - isPublishedFbia\n                - isPublishedToAppleNews\n                - packageGuid\n                - published\n                - paywallSecured\n            properties:\n                tenant:\n                    type: string\n                route:\n                    type: string\n                isPublishedFbia:\n                    $ref: \"#/components/schemas/BooleanType\"\n                isPublishedToAppleNews:\n                    $ref: \"#/components/schemas/BooleanType\"\n                packageGuid:\n                    type: string\n                published:\n                    $ref: \"#/components/schemas/BooleanType\"\n                paywallSecured:\n                    $ref: \"#/components/schemas/BooleanType\"\n                contentLists:\n                    items:\n                        $ref: \"#/components/schemas/ContentListPositionType\"\n                    type: array\n            type: object\n        PublishDestination:\n            properties:\n                id:\n                    type: string\n                tenant:\n                    $ref: \"#/components/schemas/Tenant\"\n                route:\n                    $ref: \"#/components/schemas/Route\"\n                is_published_fbia:\n                    type: boolean\n                published:\n                    type: boolean\n                package_guid:\n                    type: string\n                content_lists:\n                    additionalProperties: true\n                    type: object\n                is_published_to_apple_news:\n                    type: boolean\n                created_at:\n                    type: string\n                    format: date-time\n                updated_at:\n                    type: string\n                    format: date-time\n                organization:\n                    $ref: \"#/components/schemas/Organization\"\n                paywall_secured:\n                    type: boolean\n            type: object\n        RedirectRoute: []\n        RedirectRouteType:\n            required:\n                - routeName\n                - permanent\n                - routeSource\n                - routeTarget\n            properties:\n                routeName:\n                    type: string\n                uri:\n                    type: string\n                permanent:\n                    type: boolean\n                routeSource:\n                    type: string\n                routeTarget:\n                    type: string\n            type: object\n        RedirectRoute2:\n            properties:\n                requirements:\n                    additionalProperties: true\n                    type: object\n                id:\n                    title: Unique id of this route.\n                    type: integer\n                static_prefix:\n                    title: \u003e-\n                        Part of the URL that does not have parameters and thus can be used\n                        to\n\n                        naivly guess candidate routes.\n                    description: Note that this field is not used by PHPCR-ODM\n                    type: string\n                variable_pattern:\n                    title: Variable pattern part. The static part of the pattern is the id\n                        without the prefix.\n                    type: string\n            type: object\n        RelatedArticleList:\n            type: object\n        SeoMetadataType:\n            required:\n                - metaDescription\n                - metaTitle\n                - ogDescription\n                - ogTitle\n                - twitterDescription\n                - twitterTitle\n            properties:\n                metaDescription:\n                    type: string\n                metaTitle:\n                    type: string\n                ogDescription:\n                    type: string\n                ogTitle:\n                    type: string\n                twitterDescription:\n                    type: string\n                twitterTitle:\n                    type: string\n            type: object\n        Slideshow:\n            properties:\n                id:\n                    type: integer\n                code:\n                    type: string\n                article:\n                    $ref: \"#/components/schemas/Article\"\n                items:\n                    items:\n                        $ref: \"#/components/schemas/SlideshowItemInterface\"\n                    type: array\n                created_at:\n                    type: string\n                    format: date-time\n                updated_at:\n                    type: string\n                    format: date-time\n            type: object\n        SlideshowItem:\n            properties:\n                article_media:\n                    $ref: \"#/components/schemas/ArticleMedia\"\n                position:\n                    type: integer\n            type: object\n        Tenant:\n            properties:\n                id:\n                    type: integer\n                subdomain:\n                    type: string\n                domain_name:\n                    type: string\n                name:\n                    type: string\n                code:\n                    type: string\n                organization:\n                    $ref: \"#/components/schemas/Organization2\"\n                created_at:\n                    type: string\n                    format: date-time\n                updated_at:\n                    type: string\n                    format: date-time\n                enabled:\n                    type: boolean\n                theme_name:\n                    type: string\n                amp_enabled:\n                    type: boolean\n                output_channel:\n                    $ref: \"#/components/schemas/OutputChannel\"\n                apple_news_config:\n                    $ref: \"#/components/schemas/AppleNewsConfig\"\n                articles_count:\n                    $ref: \"#/components/schemas/ArticlesCountInterface\"\n            type: object\n        TenantType:\n            required:\n                - name\n                - domainName\n            properties:\n                name:\n                    type: string\n                subdomain:\n                    type: string\n                domainName:\n                    type: string\n                themeName:\n                    type: string\n                    enum:\n                        - swp/default-theme\n                organization:\n                    type: number\n                    enum:\n                        - \"654321\"\n                        - \"123456\"\n                ampEnabled:\n                    $ref: \"#/components/schemas/BooleanType\"\n                fbiaEnabled:\n                    $ref: \"#/components/schemas/BooleanType\"\n                paywallEnabled:\n                    $ref: \"#/components/schemas/BooleanType\"\n                outputChannel:\n                    $ref: \"#/components/schemas/OutputChannelType\"\n                defaultLanguage:\n                    type: string\n                appleNewsConfig:\n                    $ref: \"#/components/schemas/AppleNewsConfigType\"\n            type: object\n        Theme:\n            properties:\n                screenshots:\n                    additionalProperties: true\n                    type: object\n                config:\n                    additionalProperties: true\n                    type: object\n                logo_path:\n                    type: string\n                settings:\n                    additionalProperties: true\n                    type: object\n            type: object\n        ThemeInstallType:\n            required:\n                - name\n                - processGeneratedData\n            properties:\n                name:\n                    type: string\n                processGeneratedData:\n                    $ref: \"#/components/schemas/BooleanType\"\n            type: object\n        Webhook:\n            properties:\n                url:\n                    type: string\n                enabled:\n                    type: boolean\n                id:\n                    type: string\n                events:\n                    additionalProperties: true\n                    type: object\n                created_at:\n                    type: string\n                    format: date-time\n                updated_at:\n                    type: string\n                    format: date-time\n            type: object\n        WebhookType:\n            required:\n                - url\n            properties:\n                url:\n                    type: string\n                events:\n                    items:\n                        type: string\n                    type: array\n                enabled:\n                    $ref: \"#/components/schemas/BooleanType\"\n            type: object\n        ProfileFormType:\n            required:\n                - email\n                - plainPassword\n            properties:\n                email:\n                    type: string\n                username:\n                    type: string\n                firstName:\n                    type: string\n                lastName:\n                    type: string\n                about:\n                    type: string\n                plainPassword:\n                    required:\n                        - first\n                        - second\n                    properties:\n                        first:\n                            type: string\n                            format: password\n                        second:\n                            type: string\n                            format: password\n                    type: object\n            type: object\n        RegistrationFormType:\n            required:\n                - email\n                - username\n                - plainPassword\n            properties:\n                email:\n                    type: string\n                username:\n                    type: string\n                plainPassword:\n                    required:\n                        - first\n                        - second\n                    properties:\n                        first:\n                            type: string\n                            format: password\n                        second:\n                            type: string\n                            format: password\n                    type: object\n            type: object\n        UserRolesType:\n            required:\n                - roles\n            properties:\n                roles:\n                    type: string\n            type: object\n        SettingType:\n            required:\n                - name\n                - value\n            properties:\n                name:\n                    type: string\n                value:\n                    type: string\n            type: object\n        BulkSettingsUpdateType:\n            required:\n                - bulk\n            properties:\n                bulk:\n                    items:\n                        $ref: \"#/components/schemas/SettingType\"\n                    type: array\n            type: object\n        ArrayCollection: []\n        ArticleMedia:\n            properties:\n                id:\n                    type: integer\n                file:\n                    $ref: \"#/components/schemas/File\"\n                image:\n                    $ref: \"#/components/schemas/Image\"\n                description:\n                    type: string\n                by_line:\n                    type: string\n                alt_text:\n                    type: string\n                usage_terms:\n                    type: string\n                headline:\n                    type: string\n                copyright_holder:\n                    type: string\n                copyright_notice:\n                    type: string\n            type: object\n        ArticleStatistics:\n            properties:\n                impressions_number:\n                    type: integer\n                page_views_number:\n                    type: integer\n                internal_click_rate:\n                    type: number\n                    format: float\n                created_at:\n                    type: string\n                    format: date-time\n                updated_at:\n                    type: string\n                    format: date-time\n            type: object\n        ExternalArticle:\n            type: object\n        AppleNewsArticle:\n            type: object\n        TenantInterface:\n            type: object\n        BooleanType:\n            type: object\n        ArticlesCountInterface:\n            type: object\n        KeyValueRowType:\n            required:\n                - key\n                - value\n            properties:\n                key:\n                    type: string\n                value:\n                    $ref: \"#/components/schemas/UnstructuredType\"\n            type: object\n        ExportAnalyticsRouteType:\n            required:\n                - id\n            properties:\n                id:\n                    type: string\n            type: object\n        ContentListItemsCountInterface:\n            type: object\n        ContentListItemPositionType:\n            required:\n                - action\n                - contentId\n            properties:\n                position:\n                    type: integer\n                sticky:\n                    $ref: \"#/components/schemas/BooleanType\"\n                action:\n                    type: string\n                contentId:\n                    type: integer\n            type: object\n        ArticleAuthor:\n            properties:\n                name:\n                    type: string\n                role:\n                    type: string\n                jobtitle:\n                    additionalProperties: true\n                    type: object\n                biography:\n                    type: string\n                avatar_url:\n                    type: string\n                twitter:\n                    type: string\n                instagram:\n                    type: string\n                facebook:\n                    type: string\n                id:\n                    type: integer\n                slug:\n                    type: string\n                avatar:\n                    $ref: \"#/components/schemas/AuthorMedia\"\n            type: object\n        Article2:\n            properties:\n                id:\n                    type: integer\n                title:\n                    type: string\n                body:\n                    type: string\n                slug:\n                    type: string\n                published_at:\n                    type: string\n                    format: date-time\n                status:\n                    type: string\n                route:\n                    $ref: \"#/components/schemas/Route2\"\n                template_name:\n                    type: string\n                publish_start_date:\n                    type: string\n                    format: date-time\n                publish_end_date:\n                    type: string\n                    format: date-time\n                is_publishable:\n                    type: boolean\n                metadata:\n                    additionalProperties: true\n                    type: object\n                lead:\n                    type: string\n                code:\n                    type: string\n                extra:\n                    additionalProperties: true\n                    type: object\n                slideshows:\n                    $ref: \"#/components/schemas/ArrayCollection\"\n                created_at:\n                    type: string\n                    format: date-time\n                updated_at:\n                    type: string\n                    format: date-time\n                keywords:\n                    $ref: \"#/components/schemas/ArrayCollection\"\n                seo_metadata:\n                    $ref: \"#/components/schemas/ArticleSeoMetadata2\"\n                feature_media:\n                    $ref: \"#/components/schemas/ArticleMedia2\"\n                is_published_fbia:\n                    type: boolean\n                article_statistics:\n                    $ref: \"#/components/schemas/ArticleStatistics2\"\n                external_article:\n                    $ref: \"#/components/schemas/ExternalArticle\"\n                comments_count:\n                    type: integer\n                is_published_to_apple_news:\n                    type: boolean\n                apple_news_article:\n                    $ref: \"#/components/schemas/AppleNewsArticle\"\n                tenant:\n                    $ref: \"#/components/schemas/TenantInterface\"\n                paywall_secured:\n                    type: boolean\n                _links:\n                    readOnly: true\n                    properties:\n                        self:\n                            properties:\n                                href:\n                                    type: string\n                            type: object\n                        online:\n                            properties:\n                                href:\n                                    type: string\n                            type: object\n                        related:\n                            properties:\n                                href:\n                                    type: string\n                            type: object\n                        slideshows:\n                            properties:\n                                href:\n                                    type: string\n                            type: object\n            type: object\n        ArticleAuthor2:\n            properties:\n                name:\n                    type: string\n                role:\n                    type: string\n                jobtitle:\n                    additionalProperties: true\n                    type: object\n                biography:\n                    type: string\n                avatar_url:\n                    type: string\n                twitter:\n                    type: string\n                instagram:\n                    type: string\n                facebook:\n                    type: string\n            type: object\n        ContentListPositionType:\n            required:\n                - id\n                - position\n            properties:\n                id:\n                    type: integer\n                position:\n                    type: integer\n            type: object\n        Organization:\n            properties:\n                id:\n                    type: integer\n                name:\n                    type: string\n                code:\n                    type: string\n            type: object\n        SlideshowItemInterface:\n            type: object\n        Organization2:\n            properties:\n                id:\n                    type: integer\n                name:\n                    type: string\n                code:\n                    type: string\n            type: object\n        OutputChannel:\n            properties:\n                type:\n                    type: string\n                config:\n                    additionalProperties: true\n                    type: object\n            type: object\n        AppleNewsConfig:\n            properties:\n                api_key_id:\n                    type: string\n                api_key_secret:\n                    type: string\n                channel_id:\n                    type: string\n            type: object\n        OutputChannelType:\n            required:\n                - type\n            properties:\n                type:\n                    type: string\n                    enum:\n                        - wordpress\n            type: object\n        AppleNewsConfigType:\n            properties:\n                channelId:\n                    type: string\n                apiKeyId:\n                    type: string\n                apiKeySecret:\n                    type: string\n            type: object\n        File:\n            properties:\n                id:\n                    type: string\n                file_extension:\n                    title: Uploaded file extension.\n                    type: string\n                asset_id:\n                    type: string\n            type: object\n        Image:\n            properties:\n                id:\n                    type: integer\n                file_extension:\n                    title: Uploaded file extension.\n                    type: string\n                asset_id:\n                    type: string\n                width:\n                    type: integer\n                height:\n                    type: integer\n                length:\n                    type: number\n                    format: float\n            type: object\n        UnstructuredType:\n            type: object\n        AuthorMedia:\n            properties:\n                id:\n                    type: string\n                key:\n                    type: string\n                file:\n                    $ref: \"#/components/schemas/File2\"\n                image:\n                    $ref: \"#/components/schemas/Image2\"\n                _links:\n                    readOnly: true\n                    properties:\n                        download:\n                            properties:\n                                href:\n                                    type: string\n                            type: object\n            type: object\n        Route2:\n            properties:\n                requirements:\n                    additionalProperties: true\n                    type: object\n                id:\n                    title: Unique id of this route.\n                    type: integer\n                static_prefix:\n                    title: \u003e-\n                        Part of the URL that does not have parameters and thus can be used\n                        to\n\n                        naivly guess candidate routes.\n                    description: Note that this field is not used by PHPCR-ODM\n                    type: string\n                variable_pattern:\n                    title: Variable pattern part. The static part of the pattern is the id\n                        without the prefix.\n                    type: string\n                parent:\n                    type: integer\n                lft:\n                    type: integer\n                rgt:\n                    type: integer\n                level:\n                    type: integer\n                template_name:\n                    type: string\n                articles_template_name:\n                    type: string\n                type:\n                    type: string\n                cache_time_in_seconds:\n                    type: integer\n                name:\n                    type: string\n                slug:\n                    type: string\n                position:\n                    type: integer\n                articles_count:\n                    $ref: \"#/components/schemas/ArticlesCountInterface\"\n                paywall_secured:\n                    type: boolean\n                _links:\n                    readOnly: true\n                    properties:\n                        self:\n                            properties:\n                                href:\n                                    type: string\n                            type: object\n                        parent:\n                            properties:\n                                href:\n                                    type: string\n                            type: object\n            type: object\n        ArticleSeoMetadata2:\n            properties:\n                meta_title:\n                    type: string\n                meta_description:\n                    type: string\n                og_title:\n                    type: string\n                og_description:\n                    type: string\n                twitter_title:\n                    type: string\n                twitter_description:\n                    type: string\n                _links:\n                    readOnly: true\n                    properties:\n                        meta_media_url:\n                            properties:\n                                href:\n                                    type: string\n                            type: object\n                        og_media_url:\n                            properties:\n                                href:\n                                    type: string\n                            type: object\n                        twitter_media_url:\n                            properties:\n                                href:\n                                    type: string\n                            type: object\n            type: object\n        ArticleMedia2:\n            properties:\n                id:\n                    type: integer\n                file:\n                    $ref: \"#/components/schemas/File2\"\n                image:\n                    $ref: \"#/components/schemas/Image2\"\n                description:\n                    type: string\n                by_line:\n                    type: string\n                alt_text:\n                    type: string\n                usage_terms:\n                    type: string\n                headline:\n                    type: string\n                copyright_holder:\n                    type: string\n                copyright_notice:\n                    type: string\n                _links:\n                    readOnly: true\n                    properties:\n                        download:\n                            properties:\n                                href:\n                                    type: string\n                            type: object\n            type: object\n        ArticleStatistics2:\n            properties:\n                impressions_number:\n                    type: integer\n                page_views_number:\n                    type: integer\n                internal_click_rate:\n                    type: number\n                    format: float\n                created_at:\n                    type: string\n                    format: date-time\n                updated_at:\n                    type: string\n                    format: date-time\n            type: object\n        File2:\n            properties:\n                id:\n                    type: string\n                file_extension:\n                    title: Uploaded file extension.\n                    type: string\n                asset_id:\n                    type: string\n                _links:\n                    readOnly: true\n                    properties:\n                        download:\n                            properties:\n                                href:\n                                    type: string\n                            type: object\n            type: object\n        Image2:\n            properties:\n                id:\n                    type: integer\n                file_extension:\n                    title: Uploaded file extension.\n                    type: string\n                asset_id:\n                    type: string\n                width:\n                    type: integer\n                height:\n                    type: integer\n                length:\n                    type: number\n                    format: float\n            type: object\n",
			"canonicalURL": "/github.com/superdesk/web-publisher@6bce00b444c4739d9c1e5949e917ad256e4e8be4/-/blob/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/superdesk/web-publisher/blob/6bce00b444c4739d9c1e5949e917ad256e4e8be4/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: json: callback: callback: value \"{}\" is duplicated"
}