{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/anish-shanbhag/minecraft-api"
		},
		"file": {
			"name": "spec.yaml",
			"size": 0,
			"path": "docs/spec.yaml",
			"byteSize": 69278,
			"content": "openapi: 3.0.0\ninfo:\n  title: Minecraft API\n  version: \"1.0\"\n  license:\n    name: MIT\n  description: \"\"\n  contact:\n    name: Anish Shanbhag\n    url: \"https://github.com/anish-shanbhag\"\nservers:\n  - url: \"https://i8xla88513.execute-api.us-east-1.amazonaws.com/latest\"\npaths:\n  /items:\n    get:\n      summary: Get Items\n      tags:\n        - Endpoints\n      operationId: get-items\n      parameters:\n        - schema:\n            type: number\n          in: query\n          name: limit\n          description: \"The maximum number of items to return from this query. If excluded, the query returns all items.\"\n          style: \"\"\n        - schema:\n            type: number\n            default: 1\n          in: query\n          name: page\n          description: Allows for pagination of this query. You must pass the `limit` parameter if using this parameter as well. You can think of this as dividing the items into pages of length `limit` and returning the `page`th one.\n        - schema:\n            type: string\n            default: itemId\n            enum:\n              - itemId\n              - name\n              - namespacedId\n              - description\n              - image\n              - stackSize\n          in: query\n          name: sort\n          description: Sorts the items by this field.\n        - schema:\n            type: string\n            enum:\n              - asc\n              - desc\n            default: asc\n          in: query\n          name: order\n          description: 'Whether to sort the items ascending or descending using the `sort` parameter. `\"asc\"` sorts ascending, while `\"desc\"` sorts descending.'\n        - schema:\n            default: \"*\"\n            example:\n              - name\n              - image\n              - stackSize\n            uniqueItems: false\n          in: query\n          name: fields\n          description: \"The fields of the item object to include in the response. Passing an array of strings results in all of those fields being included, while passing only a string results in only that single field being included. If you don't pass any value for this parameter, then all fields are included.\"\n        - schema:\n            type: number\n            enum:\n              - 1\n              - 16\n              - 64\n          in: query\n          name: stackSize\n          description: Filters the items by including only those with a certain stack size.\n      description: Get an array of Minecraft items.\n      responses:\n        \"200\":\n          description: OK - sent when the request was processed successfully. The body will contain the array of items.\n          headers: {}\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    itemId:\n                      type: number\n                      description: \"The numerical ID of this item. Useful for getting specific items with /items/{item}. Does not correspond with any in game numerical IDs.\"\n                    name:\n                      type: string\n                      description: The name of the item.\n                    namespacedId:\n                      type: string\n                      description: \"The namespaced ID of this item, which is used to identify the item in game when using commands.\"\n                    description:\n                      type: string\n                      description: A short description of the item and its uses. Certain items that fall under a common category share a single description.\n                    image:\n                      type: string\n                      description: \"A link to a 16x16 image of the item, which is usually displayed inside the player's inventory.\"\n                    stackSize:\n                      type: number\n                      description: \"The maximum number of this item which can fit in a single stack of the player's inventory. Can be 1, 16, or 64.\"\n              examples:\n                Example 1:\n                  value:\n                    - itemId: 1\n                      name: Acacia Boat\n                      namespacedId: acacia_boat\n                      description: A boat is both an item and a vehicle entity.\n                      image: \"https://minecraft-api.s3.amazonaws.com/items/acacia_boat.png\"\n                      stackSize: 1\n                    - itemId: 2\n                      name: Acacia Button\n                      namespacedId: acacia_button\n                      description: A button is a non-solid block that can provide temporary redstone power.\n                      image: \"https://minecraft-api.s3.amazonaws.com/items/acacia_button.png\"\n                      stackSize: 64\n                Example 2:\n                  value:\n                    - name: Fishing Rod\n                      description: A fishing rod is a tool used primarily for fishing.\n                      image: \"https://minecraft-api.s3.amazonaws.com/items/fishing_rod.png\"\n                    - name: Fletching Table\n                      description: \"A fletching table is a fletcher's job site block that can generate naturally in villages.\"\n                      image: \"https://minecraft-api.s3.amazonaws.com/items/fletching_table.png\"\n                    - name: Flint\n                      description: Flint is a mineral obtained from gravel.\n                      image: \"https://minecraft-api.s3.amazonaws.com/items/flint.png\"\n        \"400\":\n          description: Bad Request - sent when you pass the `page` parameter but not the `limit` parameter.\n        \"500\":\n          description: \"Internal Server Error - usually sent when you pass invalid fields for the `sort` or `fields` parameters, but it could also indicate a different server error as well.\"\n  \"/items/{item}\":\n    get:\n      summary: Get a Specific Item\n      tags:\n        - Endpoints\n      responses:\n        \"200\":\n          description: OK - sent when the request was processed successfully. The body will contain the item object.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  stackSize:\n                    type: number\n                    description: \"The maximum number of this item which can fit in a single stack of the player's inventory. Can be 1, 16, or 64.\"\n                  image:\n                    type: string\n                    description: \"A link to a 16x16 image of the item, which is usually displayed inside the player's inventory.\"\n                  description:\n                    type: string\n                    description: A short description of the item and its uses. Certain items that fall under a common category share a single description.\n                  namespacedId:\n                    type: string\n                    description: \"The namespaced ID of this item, which is used to identify the item in game when using commands.\"\n                  name:\n                    type: string\n                    description: The name of the item.\n                  itemId:\n                    type: number\n                    description: \"The numerical ID of this item. Useful for getting specific items with /items/{item}. Does not correspond with any in game numerical IDs.\"\n              examples:\n                Example 1:\n                  value:\n                    itemId: 23\n                    name: Apple\n                    namespacedId: apple\n                    description: Apples are food items that can be eaten by the player.\n                    image: \"https://minecraft-api.s3.amazonaws.com/items/apple.png\"\n                    stackSize: 64\n                Example 2:\n                  value:\n                    name: Enchanting Table\n                    description: \"An enchanting table is a block that allows players to spend their experience point levels to enchant tools, weapons, books and armor.\"\n                    stackSize: 64\n        \"404\":\n          description: \"Not Found - sent when no item was found with the `itemId`, `name`, or `namespacedId` in the path.\"\n        \"500\":\n          description: \"Internal Server Error - usually sent when you pass invalid fields for the `fields` parameter, but it could also indicate a different server error as well.\"\n      operationId: \"get-items-:item\"\n      description: \"Get a specific Minecraft item based on its `itemId`, `name`, or `namespacedId`.\"\n      parameters:\n        - schema:\n            default: \"*\"\n          in: query\n          name: fields\n          description: \"The fields of the item object to include in the response. Passing an array of strings results in all of those fields being included, while passing only a string results in only that single field being included. If you don't pass any value for this parameter, then all fields are included.\"\n      requestBody: {}\n    parameters:\n      - schema:\n          type: string\n        name: item\n        in: path\n        required: true\n        description: \"Can be either an `itemId`, a `name` of an item,  or a `namespacedId` of an item.\"\n  /blocks:\n    get:\n      summary: Get Blocks\n      tags:\n        - Endpoints\n      responses:\n        \"200\":\n          description: OK - sent when the request was processed successfully. The body will contain the array of blocks.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    blockId:\n                      type: number\n                      description: \"The numerical ID of this block. Useful for getting specific blocks with /blocks/{block}. Does not correspond with any in game numerical IDs.\"\n                    name:\n                      type: string\n                      description: The name of the block.\n                    namespacedId:\n                      type: string\n                      description: \"The namespaced ID of this block, which is used to identify the block in game when using commands.\"\n                    description:\n                      type: string\n                      description: A short description of the block and its uses. Certain blocks that fall under a common category share a single description.\n                    image:\n                      type: string\n                      description: \"A link to an image of the block. Image sizes can vary between blocks, but most are 200x200 or smaller. Not all blocks have an image (e.g. Air).\"\n                    itemId:\n                      type: number\n                      description: \"The `itemId` associated with the item that this block   is represented by when in the inventory. You can get more information about the item by using the `/items/{item}` endpoint. Since some blocks don't have corresponding items, this field can be `null`.\"\n                    transparent:\n                      type: boolean\n                      description: Whether this block is considered transparent by the game (does not necessarily correspond to the block being see-through).\n                    luminance:\n                      type: number\n                      description: 'The amount of light that this block gives off. Higher values mean brighter blocks. Some blocks only give off light in certain situations; in those cases, the `luminance` represents the amount of light the block gives off when it is actually \"activated\".'\n                    blastResistance:\n                      type: number\n                      description: A measure of how well this block withstands explosions. Higher values mean that it takes a stronger explosion to destroy the block.\n                    flammable:\n                      type: boolean\n                      description: Whether or not this block can catch fire from nearby blocks. Flammable blocks can also be destroyed after they burn for some time.\n                    tool:\n                      type: string\n                      description: The tool which breaks this block the fastest.\n                    requiresTool:\n                      type: boolean\n                      description: \"Whether or not this block needs to broken by its corresponding `tool` in order to drop block loot. Block loot can be either the block's corresponding item itself, or some other item, such as a Diamond in the case of Diamond Ore.\"\n                    requiresSilkTouch:\n                      type: boolean\n                      description: \"Whether the Silk Touch enchantment is required to drop this block's corresponding item as block loot. For example, `requiresSilkTouch` is `false` for Dirt because mining Dirt causes the Dirt item to drop. But, `requiresSilkTouch` is `true` for Grass Block because mining a Grass Block causes a Dirt item to drop, not a Grass Block item.\"\n              examples:\n                Example 1:\n                  value:\n                    - blockId: 23\n                      name: Anvil\n                      namespacedId: anvil\n                      description: \"An anvil is a block that allows players to repair items, rename items, and combine enchantments.\"\n                      image: \"https://minecraft-api.s3.amazonaws.com/blocks/anvil.png\"\n                      itemId: 22\n                      transparent: true\n                      luminance: 0\n                      blastResistance: 1200\n                      flammable: false\n                      tool: Pickaxe\n                      requiresTool: true\n                      requiresSilkTouch: false\n                    - blockId: 24\n                      name: Attached Melon Stem\n                      namespacedId: attached_melon_stem\n                      description: Melon seeds are an item that can be used to grow melon plants.\n                      image: \"https://minecraft-api.s3.amazonaws.com/blocks/attached_melon_stem.png\"\n                      itemId: null\n                      transparent: true\n                      luminance: 0\n                      blastResistance: 2\n                      flammable: false\n                      tool: Axe\n                      requiresTool: false\n                      requiresSilkTouch: false\n                Example 2:\n                  value:\n                    - name: Tall Grass\n                      image: \"https://minecraft-api.s3.amazonaws.com/blocks/tall_grass.png\"\n                      luminance: 0\n                      blastResistance: 0\n                    - name: Tall Seagrass\n                      image: \"https://minecraft-api.s3.amazonaws.com/blocks/tall_seagrass.png\"\n                      luminance: 0\n                      blastResistance: 0\n                    - name: Terracotta\n                      image: \"https://minecraft-api.s3.amazonaws.com/blocks/terracotta.png\"\n                      luminance: 0\n                      blastResistance: 4.2\n                    - name: Torch\n                      image: \"https://minecraft-api.s3.amazonaws.com/blocks/torch.png\"\n                      luminance: 14\n                      blastResistance: 0\n        \"400\":\n          description: \"Bad Request - sent when an invalid string is passed for the `color` parameter (it must be a hexadecimal color of the form #FFFFFF).\"\n        \"500\":\n          description: \"Internal Server Error - usually sent when you pass invalid fields for the `sort` or `fields` parameters, but it could also indicate a different server error as well.\"\n      operationId: get-blocks\n      description: \"Get an array of Minecraft blocks, including those which can't normally be obtained as items in the inventory.\"\n      parameters:\n        - schema:\n            type: number\n            minimum: \"\"\n            maximum: \"\"\n          in: query\n          name: limit\n          description: \"The maximum number of blocks to return from this query. If excluded, the query returns all blocks.\"\n          style: \"\"\n        - schema:\n            type: number\n            default: 1\n          in: query\n          name: page\n          description: Allows for pagination of this query. You must pass the `limit` parameter if using this parameter as well. You can think of this as dividing the blocks into pages of length `limit` and returning the `page`th one.\n        - schema:\n            type: string\n            default: blockId\n            enum:\n              - blockId\n              - name\n              - namespacedId\n              - description\n              - image\n              - itemId\n              - transparent\n              - luminance\n              - blastResistance\n              - flammable\n              - tool\n              - requiresTool\n              - requiresSilkTouch\n          in: query\n          name: sort\n          description: Sorts the blocks by this field.\n        - schema:\n            type: string\n            enum:\n              - asc\n              - desc\n            default: asc\n          in: query\n          name: order\n          description: 'Whether to sort the blocks ascending or descending using the `sort` parameter. `\"asc\"` sorts ascending, while `\"desc\"` sorts descending.'\n        - schema:\n            default: \"*\"\n            example:\n              - name\n              - image\n              - blastResistance\n            uniqueItems: false\n          in: query\n          name: fields\n          description: \"The fields of the block object to include in the response. Passing an array of strings results in all of those fields being included, while passing only a string results in only that single field being included. If you don't pass any value for this parameter, then all fields are included.\"\n        - schema:\n            type: string\n            example: \"#BFA32C\"\n            pattern: \"#^#[0-9A-F]{6}$\"\n          in: query\n          name: color\n          description: Filters the returned blocks by only including those within a certain threshold (`colorVariance`) of `color`. Should be a valid hexadecimal representation of a color.\n        - schema:\n            type: number\n            minimum: 0\n            maximum: 255\n            default: 20\n          in: query\n          name: colorVariance\n          description: 'Changes the maximum variance between a block''s color and the `color` parameter. Only has an affect when the `color` parameter is also passed. Higher values result in blocks which are a \"farther away\" color being included, while lower values restrict the blocks to only those which are close to `color`.'\n        - schema:\n            type: number\n            default: 0.1\n            minimum: 0\n            maximum: 1\n          in: query\n          name: colorAmount\n          description: \"Changes the minimum portion of a block which has to be a matching color defined by `color` and `colorVariance`. For example, passing an orange color for `color` and a high value for `colorAmount` may exclude Hay Bale from the result because only a small portion of the Hay Bale is orange.\"\n        - schema:\n            type: boolean\n          in: query\n          name: transparent\n          description: Filters the blocks by including only those with a certain value for the `transparent` field.\n        - schema:\n            type: number\n          in: query\n          name: luminance\n          description: Filters the blocks by including only those with a certain value for the `luminance` field.\n        - schema:\n            type: number\n          in: query\n          name: minLuminance\n          description: Filters the blocks by including only those with a value for the `luminance` field that is greater than `minLuminance`.\n        - schema:\n            type: number\n          in: query\n          name: maxLuminance\n          description: Filters the blocks by including only those with a value for the `luminance` field that is less than `maxLuminance`.\n        - schema:\n            type: number\n          in: query\n          name: blastResistance\n          description: Filters the blocks by including only those with a certain value for the `blastResistance` field.\n        - schema:\n            type: number\n          in: query\n          name: minBlastResistance\n          description: Filters the blocks by including only those with a value for the `blastResistance` field that is greater than `minBlastResistance`.\n        - schema:\n            type: number\n          in: query\n          name: maxBlastResistance\n          description: Filters the blocks by including only those with a value for the `blastResistance` field that is less than `maxBlastResistance`.\n        - schema:\n            type: boolean\n          in: query\n          name: flammable\n          description: Filters the blocks by including only those with a certain value for the `flammable` field.\n        - schema:\n            type: string\n            enum:\n              - Pickaxe\n              - Hoe\n              - Axe\n              - Shovel\n              - Sword\n              - Shears\n          in: query\n          name: tool\n          description: Filters the blocks by including only those with a certain value for the `tool` field.\n        - schema:\n            type: boolean\n          in: query\n          name: requiresTool\n          description: Filters the blocks by including only those with a certain value for the `requiresTool` field.\n        - schema:\n            type: boolean\n          in: query\n          name: requiresSilkTouch\n          description: Filters the blocks by including only those with a certain value for the `requiresSilkTouch` field.\n      requestBody: {}\n  \"/blocks/{block}\":\n    parameters:\n      - schema:\n          type: string\n        name: block\n        in: path\n        required: true\n        description: \"Can be either a `blockId`, a `name` of a block,  or a `namespacedId` of a block.\"\n    get:\n      summary: Get a Specific Block\n      tags:\n        - Endpoints\n      responses:\n        \"200\":\n          description: OK - sent when the request was processed successfully. The body will contain the block object.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  requiresSilkTouch:\n                    type: boolean\n                    description: \"Whether the Silk Touch enchantment is required to drop this block's corresponding item as block loot. For example, `requiresSilkTouch` is `false` for Dirt because mining Dirt causes the Dirt item to drop. But, `requiresSilkTouch` is `true` for Grass Block because mining a Grass Block causes a Dirt item to drop, not a Grass Block item.\"\n                  requiresTool:\n                    type: boolean\n                    description: \"Whether or not this block needs to broken by its corresponding `tool` in order to drop block loot. Block loot can be either the block's corresponding item itself, or some other item, such as a Diamond in the case of Diamond Ore.\"\n                  tool:\n                    type: string\n                    description: The tool which breaks this block the fastest.\n                  flammable:\n                    type: boolean\n                    description: Whether or not this block can catch fire from nearby blocks. Flammable blocks can also be destroyed after they burn for some time.\n                  blastResistance:\n                    type: number\n                    description: A measure of how well this block withstands explosions. Higher values mean that it takes a stronger explosion to destroy the block.\n                  luminance:\n                    type: number\n                    description: \"The amount of light that this block gives off. Higher values mean brighter blocks. Some blocks give off different amounts of light in various situations; in those cases, the `luminance` represents the maximum amount of light the block can emit.\"\n                  transparent:\n                    type: boolean\n                    description: Whether this block is considered transparent by the game (does not necessarily correspond to the block being see-through).\n                  itemId:\n                    type: number\n                    description: \"The `itemId` associated with the item that this block   is represented by when in the inventory. You can get more information about the item by using the `/items/{item}` endpoint. Since some blocks don't have corresponding items, this field can be `null`.\"\n                  image:\n                    type: string\n                    description: \"A link to an image of the block. Image sizes can vary between blocks, but most are 200x200 or smaller.\"\n                  description:\n                    type: string\n                    description: A short description of the block and its uses. Certain blocks that fall under a common category share a single description.\n                  namespacedId:\n                    type: string\n                    description: \"The namespaced ID of this block, which is used to identify the block in game when using commands.\"\n                  name:\n                    type: string\n                    description: The name of the block.\n                  blockId:\n                    type: number\n                    description: \"The numerical ID of this block. Useful for getting specific blocks with /blocks/{block}. Does not correspond with any in game numerical IDs.\"\n              examples:\n                Example 1:\n                  value:\n                    blockId: 155\n                    name: Cyan Bed\n                    namespacedId: cyan_bed\n                    description: \"A bed is a block that allows a player to sleep and to reset their spawn point to within a few blocks of the bed in the Overworld. If the bed is obstructed, the player spawns at the default world spawning location.\"\n                    image: \"https://minecraft-api.s3.amazonaws.com/blocks/cyan_bed.png\"\n                    itemId: 226\n                    transparent: true\n                    luminance: 0\n                    blastResistance: 0.2\n                    flammable: false\n                    tool: null\n                    requiresTool: false\n                    requiresSilkTouch: false\n                Example 2:\n                  value:\n                    name: Cobblestone\n                    image: \"https://minecraft-api.s3.amazonaws.com/blocks/cobblestone.png\"\n                    tool: Pickaxe\n        \"404\":\n          description: \"Not Found - sent when no block was found with the `blockId`, `name`, or `namespacedId` in the path.\"\n        \"500\":\n          description: \"Internal Server Error - usually sent when you pass invalid fields for the `fields` parameter, but it could also indicate a different server error as well.\"\n      operationId: get-blocks-block\n      description: \"Get a specific Minecraft block based on its `blockId`, `name`, or `namespacedId`.\"\n      parameters:\n        - schema:\n            example: \"name,image,blastResistance\"\n          in: query\n          name: fields\n          description: \"The fields of the block object to include in the response. Passing an array of strings results in all of those fields being included, while passing only a string results in only that single field being included. If you don't pass any value for this parameter, then all fields are included.\"\n      requestBody: {}\n  /crafting-recipes:\n    get:\n      summary: Get Crafting Recipes\n      tags:\n        - Endpoints\n      responses:\n        \"200\":\n          description: OK - sent when the request was processed successfully. The body will contain the array of crafting recipes.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    craftingRecipeId:\n                      type: number\n                      description: \"The numerical ID of this crafting recipe. Useful for getting specific crafting recipes with /crafting-recipes/{craftingRecipeId}. Does not correspond with any in game numerical IDs.\"\n                    itemId:\n                      type: number\n                      description: The `itemId` corresponding to the item which this crafting recipe produces. This field is only included when the `itemFields` parameter is not passed.\n                    item:\n                      type: object\n                      description: \"An item object representing the item which this recipe produces. This field is only included if the `itemFields` parameter is passed, and only the fields in `itemFields` are included in the object.\"\n                      properties:\n                        itemId:\n                          type: number\n                          description: \"The numerical ID of this item. Useful for getting specific items with /items/{item}. Does not correspond with any in game numerical IDs.\"\n                        name:\n                          type: string\n                          description: The name of the item.\n                        namespacedId:\n                          type: string\n                          description: \"The namespaced ID of this item, which is used to identify the item in game when using commands.\"\n                        description:\n                          type: string\n                          description: A short description of the item and its uses. Certain items that fall under a common category share a single description.\n                        image:\n                          type: string\n                          description: \"A link to a 16x16 image of the item, which is usually displayed inside the player's inventory.\"\n                        stackSize:\n                          type: number\n                          description: \"The maximum number of this item which can fit in a single stack of the player's inventory. Can be 1, 16, or 64.\"\n                    quantity:\n                      type: number\n                      description: The number of items which are produced from this recipe.\n                    shapeless:\n                      type: boolean\n                      description: \"Whether or not this recipe is shapeless, meaning that its ingredients can be placed in any order in the crafting grid.\"\n                    recipe:\n                      type:\n                        - array\n                      description: \"An array of eight elements each representing one slot of the crafting grid, from left to right and top to bottom.\"\n                      items:\n                        oneOf:\n                          - type: \"null\"\n                            description: A null value represents no item in that slot of the crafting grid.\n                          - type: string\n                            description: \"A crafting grid slot may contain a string if you pass a single field for the `itemFields` parameter that has a string value, such as `name`, `description`, `namespacedId`, or `image`.\"\n                          - type: number\n                            description: |-\n                              A crafting grid slot may contain a number if either:\n                              a) You don't pass the `itemFields` parameter - in this case, the number represents an `itemId` of an item.\n                              b) You pass the `itemFields` parameter but only include one numerical field, such as `itemId` or `stackSize`.\n                          - type: object\n                            description: A crafting grid slot may contain an object representing an item  if you pass multiple fields for the `itemFields` parameter.\n                            properties:\n                              itemId:\n                                type: number\n                                description: \"The numerical ID of this item. Useful for getting specific items with /items/{item}. Does not correspond with any in game numerical IDs.\"\n                              name:\n                                type: string\n                                description: The name of the item.\n                              namespacedId:\n                                type: string\n                                description: \"The namespaced ID of this item, which is used to identify the item in game when using commands.\"\n                              description:\n                                type: string\n                                description: A short description of the item and its uses. Certain items that fall under a common category share a single description.\n                              image:\n                                type: string\n                                description: \"A link to a 16x16 image of the item, which is usually displayed inside the player's inventory.\"\n                              stackSize:\n                                type: number\n                                description: \"The maximum number of this item which can fit in a single stack of the player's inventory. Can be 1, 16, or 64.\"\n                          - type: array\n                            description: \"In certain recipes, you can use substitute different ingredients in a slot while still crafting the same item. For example, to craft a Note Block, you can use any wood plank type in each slot around the Redstone Dust, and you will still get a Note Block. In cases such as these, an array is used in place of an item object/item field in one of the crafting grid slots. The array represents all of the possible ingredients which can be substituted for each other in that slot. The format of the items in the array is the exact same as the format of the items in the recipe array - they can be null, a string, a number, or an item object.\"\n                            items:\n                              oneOf:\n                                - type: \"null\"\n                                  description: A `null` value represents no item in that slot of the crafting grid.\n                                - type: string\n                                  description: \"A crafting grid slot may contain a string if you pass a single field for the `itemFields` parameter that has a string value, such as `name`, `description`, `namespacedId`, or `image`.\"\n                                - type: number\n                                  description: |-\n                                    A crafting grid slot may contain a number if either:\n                                    a) You don't pass the `itemFields` parameter - in this case, the number represents an `itemId` of an item.\n                                    b) You pass the `itemFields` parameter but only include one numerical field, such as `itemId` or `stackSize`.\n                                - type: object\n                                  description: A crafting grid slot may contain an object representing an item  if you pass multiple fields for the `itemFields` parameter.\n                                  properties:\n                                    itemId:\n                                      type: number\n                                      description: \"The numerical ID of this item. Useful for getting specific items with /items/{item}. Does not correspond with any in game numerical IDs.\"\n                                    name:\n                                      type: string\n                                      description: The name of the item.\n                                    namespacedId:\n                                      type: string\n                                      description: \"The namespaced ID of this item, which is used to identify the item in game when using commands.\"\n                                    description:\n                                      type: string\n                                      description: A short description of the item and its uses. Certain items that fall under a common category share a single description.\n                                    image:\n                                      type: string\n                                      description: \"A link to a 16x16 image of the item, which is usually displayed inside the player's inventory.\"\n                                    stackSize:\n                                      type: number\n                                      description: \"The maximum number of this item which can fit in a single stack of the player's inventory. Can be 1, 16, or 64.\"\n              examples:\n                \"Example 1 - limit = 3 , page = 17\":\n                  value:\n                    - craftingRecipeId: 49\n                      itemId: 77\n                      quantity: 3\n                      shapeless: false\n                      recipe:\n                        - 74\n                        - 74\n                        - 74\n                        - 74\n                        - 74\n                        - 74\n                        - null\n                        - 870\n                        - null\n                    - craftingRecipeId: 50\n                      itemId: 78\n                      quantity: 6\n                      shapeless: false\n                      recipe:\n                        - null\n                        - null\n                        - null\n                        - null\n                        - null\n                        - null\n                        - 74\n                        - 74\n                        - 74\n                    - craftingRecipeId: 51\n                      itemId: 79\n                      quantity: 4\n                      shapeless: false\n                      recipe:\n                        - 74\n                        - null\n                        - null\n                        - 74\n                        - 74\n                        - null\n                        - 74\n                        - 74\n                        - 74\n                'Example 2 - itemFields = \"name\"':\n                  value:\n                    - craftingRecipeId: 97\n                      quantity: 9\n                      shapeless: false\n                      item: Bone Meal\n                      recipe:\n                        - null\n                        - null\n                        - null\n                        - null\n                        - Bone Block\n                        - null\n                        - null\n                        - null\n                        - null\n                    - craftingRecipeId: 98\n                      quantity: 1\n                      shapeless: true\n                      item: Book\n                      recipe:\n                        - null\n                        - null\n                        - null\n                        - Paper\n                        - Paper\n                        - null\n                        - Paper\n                        - Leather\n                        - null\n                    - craftingRecipeId: 99\n                      quantity: 1\n                      shapeless: true\n                      item: Book and Quill\n                      recipe:\n                        - null\n                        - null\n                        - null\n                        - Book\n                        - Ink Sac\n                        - null\n                        - null\n                        - Feather\n                        - null\n                    - craftingRecipeId: 100\n                      quantity: 1\n                      shapeless: false\n                      item: Bookshelf\n                      recipe:\n                        - - Oak Planks\n                          - Spruce Planks\n                          - Birch Planks\n                          - Jungle Planks\n                          - Acacia Planks\n                          - Dark Oak Planks\n                        - - Oak Planks\n                          - Spruce Planks\n                          - Birch Planks\n                          - Jungle Planks\n                          - Acacia Planks\n                          - Dark Oak Planks\n                        - - Oak Planks\n                          - Spruce Planks\n                          - Birch Planks\n                          - Jungle Planks\n                          - Acacia Planks\n                          - Dark Oak Planks\n                        - Book\n                        - Book\n                        - Book\n                        - - Oak Planks\n                          - Spruce Planks\n                          - Birch Planks\n                          - Jungle Planks\n                          - Acacia Planks\n                          - Dark Oak Planks\n                        - - Oak Planks\n                          - Spruce Planks\n                          - Birch Planks\n                          - Jungle Planks\n                          - Acacia Planks\n                          - Dark Oak Planks\n                        - - Oak Planks\n                          - Spruce Planks\n                          - Birch Planks\n                          - Jungle Planks\n                          - Acacia Planks\n                          - Dark Oak Planks\n                'Example 3 - item = \"Composter\", itemFields = \"name\"':\n                  value:\n                    - craftingRecipeId: 148\n                      quantity: 1\n                      shapeless: false\n                      item: Composter\n                      recipe:\n                        - Oak Slab\n                        - null\n                        - Oak Slab\n                        - Oak Slab\n                        - null\n                        - Oak Slab\n                        - Oak Slab\n                        - Oak Slab\n                        - Oak Slab\n                    - craftingRecipeId: 149\n                      quantity: 1\n                      shapeless: false\n                      item: Composter\n                      recipe:\n                        - Spruce Slab\n                        - null\n                        - Spruce Slab\n                        - Spruce Slab\n                        - null\n                        - Spruce Slab\n                        - Spruce Slab\n                        - Spruce Slab\n                        - Spruce Slab\n                    - craftingRecipeId: 150\n                      quantity: 1\n                      shapeless: false\n                      item: Composter\n                      recipe:\n                        - Acacia Slab\n                        - null\n                        - Acacia Slab\n                        - Acacia Slab\n                        - null\n                        - Acacia Slab\n                        - Acacia Slab\n                        - Acacia Slab\n                        - Acacia Slab\n                    - craftingRecipeId: 151\n                      quantity: 1\n                      shapeless: false\n                      item: Composter\n                      recipe:\n                        - Dark Oak Slab\n                        - null\n                        - Dark Oak Slab\n                        - Dark Oak Slab\n                        - null\n                        - Dark Oak Slab\n                        - Dark Oak Slab\n                        - Dark Oak Slab\n                        - Dark Oak Slab\n                    - craftingRecipeId: 152\n                      quantity: 1\n                      shapeless: false\n                      item: Composter\n                      recipe:\n                        - Birch Slab\n                        - null\n                        - Birch Slab\n                        - Birch Slab\n                        - null\n                        - Birch Slab\n                        - Birch Slab\n                        - Birch Slab\n                        - Birch Slab\n                    - craftingRecipeId: 153\n                      quantity: 1\n                      shapeless: false\n                      item: Composter\n                      recipe:\n                        - Jungle Slab\n                        - null\n                        - Jungle Slab\n                        - Jungle Slab\n                        - null\n                        - Jungle Slab\n                        - Jungle Slab\n                        - Jungle Slab\n                        - Jungle Slab\n                'Example 4 - uses = \"Stone\", itemFields = [\"itemId\", \"name\"]':\n                  value:\n                    - craftingRecipeId: 575\n                      quantity: 1\n                      shapeless: false\n                      item:\n                        itemId: 778\n                        name: Redstone Comparator\n                      recipe:\n                        - null\n                        - itemId: 783\n                          name: Redstone Torch\n                        - null\n                        - itemId: 783\n                          name: Redstone Torch\n                        - itemId: 604\n                          name: Nether Quartz\n                        - itemId: 783\n                          name: Redstone Torch\n                        - itemId: 872\n                          name: Stone\n                        - itemId: 872\n                          name: Stone\n                        - itemId: 872\n                          name: Stone\n                    - craftingRecipeId: 578\n                      quantity: 1\n                      shapeless: false\n                      item:\n                        itemId: 782\n                        name: Redstone Repeater\n                      recipe:\n                        - null\n                        - null\n                        - null\n                        - itemId: 783\n                          name: Redstone Torch\n                        - itemId: 779\n                          name: Redstone Dust\n                        - itemId: 783\n                          name: Redstone Torch\n                        - itemId: 872\n                          name: Stone\n                        - itemId: 872\n                          name: Stone\n                        - itemId: 872\n                          name: Stone\n                    - craftingRecipeId: 623\n                      quantity: 4\n                      shapeless: false\n                      item:\n                        itemId: 877\n                        name: Stone Bricks\n                      recipe:\n                        - null\n                        - null\n                        - null\n                        - itemId: 872\n                          name: Stone\n                        - itemId: 872\n                          name: Stone\n                        - null\n                        - itemId: 872\n                          name: Stone\n                        - itemId: 872\n                          name: Stone\n                        - null\n                    - craftingRecipeId: 624\n                      quantity: 1\n                      shapeless: false\n                      item:\n                        itemId: 878\n                        name: Stone Button\n                      recipe:\n                        - null\n                        - null\n                        - null\n                        - null\n                        - itemId: 872\n                          name: Stone\n                        - null\n                        - null\n                        - null\n                        - null\n                    - craftingRecipeId: 629\n                      quantity: 1\n                      shapeless: false\n                      item:\n                        itemId: 881\n                        name: Stone Pressure Plate\n                      recipe:\n                        - null\n                        - null\n                        - null\n                        - itemId: 872\n                          name: Stone\n                        - itemId: 872\n                          name: Stone\n                        - null\n                        - null\n                        - null\n                        - null\n                    - craftingRecipeId: 632\n                      quantity: 6\n                      shapeless: false\n                      item:\n                        itemId: 883\n                        name: Stone Slab\n                      recipe:\n                        - null\n                        - null\n                        - null\n                        - null\n                        - null\n                        - null\n                        - itemId: 872\n                          name: Stone\n                        - itemId: 872\n                          name: Stone\n                        - itemId: 872\n                          name: Stone\n                    - craftingRecipeId: 633\n                      quantity: 4\n                      shapeless: false\n                      item:\n                        itemId: 884\n                        name: Stone Stairs\n                      recipe:\n                        - itemId: 872\n                          name: Stone\n                        - null\n                        - null\n                        - itemId: 872\n                          name: Stone\n                        - itemId: 872\n                          name: Stone\n                        - null\n                        - itemId: 872\n                          name: Stone\n                        - itemId: 872\n                          name: Stone\n                        - itemId: 872\n                          name: Stone\n                'Example 5 - item = 25, fields = [\"itemId\", \"recipe\"],  itemFields = \"name\"':\n                  value:\n                    - item: Arrow\n                      recipe:\n                        - null\n                        - Flint\n                        - null\n                        - null\n                        - Stick\n                        - null\n                        - null\n                        - Feather\n                        - null\n        \"404\":\n          description: Not Found - sent when there is no item corresponding to the `item` query parameter.\n        \"500\":\n          description: \"Internal Server Error - usually sent when you pass invalid fields for the `fields` or `itemFields` parameters, but it could also indicate a different server error as well.\"\n      operationId: get-crafting-recipes\n      description: Get an array of crafting recipes for Minecraft items.\n      parameters:\n        - schema:\n            type: number\n          in: query\n          name: limit\n          description: \"The maximum number of crafting recipes to return from this query. If excluded, the query returns all crafting recipes.\"\n          style: \"\"\n        - schema:\n            type: number\n            default: 1\n          in: query\n          name: page\n          description: Allows for pagination of this query. You must pass the `limit` parameter if using this parameter as well. You can think of this as dividing the crafting recipes into pages of length `limit` and returning the `page`th one.\n        - schema:\n            type: string\n            default: itemId\n            enum:\n              - craftingRecipeId\n              - itemId\n              - quantity\n              - shapeless\n          in: query\n          name: sort\n          description: Sorts the crafting recipes by this field.\n        - schema:\n            type: string\n            enum:\n              - asc\n              - desc\n            default: asc\n          in: query\n          name: order\n          description: 'Whether to sort the crafting recipes ascending or descending using the `sort` parameter. `\"asc\"` sorts ascending, while `\"desc\"` sorts descending.'\n        - schema:\n            default: \"*\"\n            example:\n              - name\n              - image\n              - stackSize\n            uniqueItems: false\n          in: query\n          name: fields\n          description: \"The fields of the crafting recipe object to include in the response. Passing an array of strings results in all of those fields being included, while passing only a string results in only that single field being included. If you don't pass any value for this parameter, then all fields are included.\"\n        - schema:\n            type: string\n          in: query\n          name: item\n          description: \"Filters the crafting recipes by only returning the recipes which produce `item`. Can be either an `itemId`, a `name`, or a `namespacedId` of an item.\"\n        - schema:\n            type: string\n          in: query\n          name: uses\n          description: \"Filters the crafting recipes by only including recipes that uses a certain item as an ingredient. Can be either an `itemId`, a `name`, or a `namespacedId` of an item.\"\n        - schema: {}\n          in: query\n          name: itemFields\n          description: \"If this parameter is passed, then instead of returning `itemId`s in the `itemId` and `recipe` fields, the recipes will have an `item` field with the fields defined in `itemFields`, and the `itemId`s in the `recipe` field will also be replaced by item objects ith the fields defined in `itemFields`. This is essentially equivalent to querying `/items/{item}` for every item found throughout the recipe object. Furthermore, if only one field is included in `itemFields`, then instead of including an item object, just the value of that field will be used in place of the `itemId`s. The valid formats of this field are the same as the valid formats of the `fields` parameter of the `/items/{item}` endpoint.\"\n  \"/crafting-recipes/{craftingRecipeId}\":\n    parameters:\n      - schema:\n          type: string\n        name: craftingRecipeId\n        in: path\n        required: true\n        description: The `craftingRecipeId` of a certain crafting recipe.\n    get:\n      summary: Get a Specific Crafting Recipe\n      tags:\n        - Endpoints\n      responses:\n        \"200\":\n          description: OK - sent when the request was processed successfully. The body will contain the crafting recipe object.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  craftingRecipeId:\n                    type: number\n                    description: \"The numerical ID of this crafting recipe. Useful for getting specific crafting recipes with /crafting-recipes/{craftingRecipeId}. Does not correspond with any in game numerical IDs.\"\n                  itemId:\n                    type: number\n                    description: The `itemId` corresponding to the item which this crafting recipe produces. This field is only included when the `itemFields` parameter is not passed.\n                  item:\n                    type: object\n                    description: \"An item object representing the item which this recipe produces. This field is only included if the `itemFields` parameter is passed, and only the fields in `itemFields` are included in the object.\"\n                    properties:\n                      itemId:\n                        type: number\n                        description: \"The numerical ID of this item. Useful for getting specific items with /items/{item}. Does not correspond with any in game numerical IDs.\"\n                      name:\n                        type: string\n                        description: The name of the item.\n                      namespacedId:\n                        type: string\n                        description: \"The namespaced ID of this item, which is used to identify the item in game when using commands.\"\n                      description:\n                        type: string\n                        description: A short description of the item and its uses. Certain items that fall under a common category share a single description.\n                      image:\n                        type: string\n                        description: \"A link to a 16x16 image of the item, which is usually displayed inside the player's inventory.\"\n                      stackSize:\n                        type: number\n                        description: \"The maximum number of this item which can fit in a single stack of the player's inventory. Can be 1, 16, or 64.\"\n                  quantity:\n                    type: number\n                    description: The number of items which are produced from this recipe.\n                  shapeless:\n                    type: boolean\n                    description: \"Whether or not this recipe is shapeless, meaning that its ingredients can be placed in any order in the crafting grid.\"\n                  recipe:\n                    type:\n                      - array\n                    description: \"An array of eight elements each representing one slot of the crafting grid, from left to right and top to bottom.\"\n                    items:\n                      oneOf:\n                        - type: \"null\"\n                          description: A null value represents no item in that slot of the crafting grid.\n                        - type: string\n                          description: \"A crafting grid slot may contain a string if you pass a single field for the `itemFields` parameter that has a string value, such as `name`, `description`, `namespacedId`, or `image`.\"\n                        - type: number\n                          description: |-\n                            A crafting grid slot may contain a number if either:\n                            a) You don't pass the `itemFields` parameter - in this case, the number represents an `itemId` of an item.\n                            b) You pass the `itemFields` parameter but only include one numerical field, such as `itemId` or `stackSize`.\n                        - type: object\n                          description: A crafting grid slot may contain an object representing an item  if you pass multiple fields for the `itemFields` parameter.\n                          properties:\n                            itemId:\n                              type: number\n                              description: \"The numerical ID of this item. Useful for getting specific items with /items/{item}. Does not correspond with any in game numerical IDs.\"\n                            name:\n                              type: string\n                              description: The name of the item.\n                            namespacedId:\n                              type: string\n                              description: \"The namespaced ID of this item, which is used to identify the item in game when using commands.\"\n                            description:\n                              type: string\n                              description: A short description of the item and its uses. Certain items that fall under a common category share a single description.\n                            image:\n                              type: string\n                              description: \"A link to a 16x16 image of the item, which is usually displayed inside the player's inventory.\"\n                            stackSize:\n                              type: number\n                              description: \"The maximum number of this item which can fit in a single stack of the player's inventory. Can be 1, 16, or 64.\"\n                        - type: array\n                          description: \"In certain recipes, you can use substitute different ingredients in a slot while still crafting the same item. For example, to craft a Note Block, you can use any wood plank type in each slot around the Redstone Dust, and you will still get a Note Block. In cases such as these, an array is used in place of an item object/item field in one of the crafting grid slots. The array represents all of the possible ingredients which can be substituted for each other in that slot. The format of the items in the array is the exact same as the format of the items in the recipe array - they can be null, a string, a number, or an item object.\"\n                          items:\n                            oneOf:\n                              - type: \"null\"\n                                description: A `null` value represents no item in that slot of the crafting grid.\n                              - type: string\n                                description: \"A crafting grid slot may contain a string if you pass a single field for the `itemFields` parameter that has a string value, such as `name`, `description`, `namespacedId`, or `image`.\"\n                              - type: number\n                                description: |-\n                                  A crafting grid slot may contain a number if either:\n                                  a) You don't pass the `itemFields` parameter - in this case, the number represents an `itemId` of an item.\n                                  b) You pass the `itemFields` parameter but only include one numerical field, such as `itemId` or `stackSize`.\n                              - type: object\n                                description: A crafting grid slot may contain an object representing an item  if you pass multiple fields for the `itemFields` parameter.\n                                properties:\n                                  itemId:\n                                    type: number\n                                    description: \"The numerical ID of this item. Useful for getting specific items with /items/{item}. Does not correspond with any in game numerical IDs.\"\n                                  name:\n                                    type: string\n                                    description: The name of the item.\n                                  namespacedId:\n                                    type: string\n                                    description: \"The namespaced ID of this item, which is used to identify the item in game when using commands.\"\n                                  description:\n                                    type: string\n                                    description: A short description of the item and its uses. Certain items that fall under a common category share a single description.\n                                  image:\n                                    type: string\n                                    description: \"A link to a 16x16 image of the item, which is usually displayed inside the player's inventory.\"\n                                  stackSize:\n                                    type: number\n                                    description: \"The maximum number of this item which can fit in a single stack of the player's inventory. Can be 1, 16, or 64.\"\n              examples:\n                Example 1 - no query parameters:\n                  value:\n                    craftingRecipeId: 26\n                    itemId: 32\n                    quantity: 8\n                    shapeless: false\n                    recipe:\n                      - 25\n                      - 25\n                      - 25\n                      - 25\n                      - 527\n                      - 25\n                      - 25\n                      - 25\n                      - 25\n                'Example 2 - itemFields = \"name\"':\n                  value:\n                    craftingRecipeId: 13\n                    quantity: 6\n                    shapeless: false\n                    item: Activator Rail\n                    recipe:\n                      - Iron Ingot\n                      - Stick\n                      - Iron Ingot\n                      - Iron Ingot\n                      - Redstone Torch\n                      - Iron Ingot\n                      - Iron Ingot\n                      - Stick\n                      - Iron Ingot\n                'Example 3 - fields = [\"itemId\", \"recipe\"], itemFields = [\"name\", \"image\"]':\n                  value:\n                    item:\n                      name: Gray Bed\n                      image: \"https://minecraft-api.s3.amazonaws.com/items/gray_bed.png\"\n                    recipe:\n                      - null\n                      - null\n                      - null\n                      - name: Gray Wool\n                        image: \"https://minecraft-api.s3.amazonaws.com/items/gray_wool.png\"\n                      - name: Gray Wool\n                        image: \"https://minecraft-api.s3.amazonaws.com/items/gray_wool.png\"\n                      - name: Gray Wool\n                        image: \"https://minecraft-api.s3.amazonaws.com/items/gray_wool.png\"\n                      - - name: Oak Planks\n                          image: \"https://minecraft-api.s3.amazonaws.com/items/oak_planks.png\"\n                        - name: Spruce Planks\n                          image: \"https://minecraft-api.s3.amazonaws.com/items/spruce_planks.png\"\n                        - name: Birch Planks\n                          image: \"https://minecraft-api.s3.amazonaws.com/items/birch_planks.png\"\n                        - name: Jungle Planks\n                          image: \"https://minecraft-api.s3.amazonaws.com/items/jungle_planks.png\"\n                        - name: Acacia Planks\n                          image: \"https://minecraft-api.s3.amazonaws.com/items/acacia_planks.png\"\n                        - name: Dark Oak Planks\n                          image: \"https://minecraft-api.s3.amazonaws.com/items/dark_oak_planks.png\"\n                      - - name: Oak Planks\n                          image: \"https://minecraft-api.s3.amazonaws.com/items/oak_planks.png\"\n                        - name: Spruce Planks\n                          image: \"https://minecraft-api.s3.amazonaws.com/items/spruce_planks.png\"\n                        - name: Birch Planks\n                          image: \"https://minecraft-api.s3.amazonaws.com/items/birch_planks.png\"\n                        - name: Jungle Planks\n                          image: \"https://minecraft-api.s3.amazonaws.com/items/jungle_planks.png\"\n                        - name: Acacia Planks\n                          image: \"https://minecraft-api.s3.amazonaws.com/items/acacia_planks.png\"\n                        - name: Dark Oak Planks\n                          image: \"https://minecraft-api.s3.amazonaws.com/items/dark_oak_planks.png\"\n                      - - name: Oak Planks\n                          image: \"https://minecraft-api.s3.amazonaws.com/items/oak_planks.png\"\n                        - name: Spruce Planks\n                          image: \"https://minecraft-api.s3.amazonaws.com/items/spruce_planks.png\"\n                        - name: Birch Planks\n                          image: \"https://minecraft-api.s3.amazonaws.com/items/birch_planks.png\"\n                        - name: Jungle Planks\n                          image: \"https://minecraft-api.s3.amazonaws.com/items/jungle_planks.png\"\n                        - name: Acacia Planks\n                          image: \"https://minecraft-api.s3.amazonaws.com/items/acacia_planks.png\"\n                        - name: Dark Oak Planks\n                          image: \"https://minecraft-api.s3.amazonaws.com/items/dark_oak_planks.png\"\n        \"404\":\n          description: Not Found - sent when no crafting recipe was found with the `craftingRecipeId` in the URL.\n        \"500\":\n          description: \"Internal Server Error - usually sent when you pass invalid fields for the `fields` or `itemFields` parameters, but it could also indicate a different server error as well.\"\n      operationId: get-crafting-recipes-craftingRecipeId\n      description: Get a specific crafting recipe based on its `craftingRecipeId`.\n      parameters:\n        - schema:\n            default: \"*\"\n            example:\n              - name\n              - image\n              - stackSize\n            uniqueItems: false\n          in: query\n          name: fields\n          description: \"The fields of the crafting recipe object to include in the response. Passing an array of strings results in all of those fields being included, while passing only a string results in only that single field being included. If you don't pass any value for this parameter, then all fields are included.\"\n        - schema: {}\n          in: query\n          name: itemFields\n          description: \"If this parameter is passed, then instead of returning `itemId`s in the `itemId` and `recipe` fields, the recipes will have an `item` field with the fields defined in `itemFields`, and the `itemId`s in the `recipe` field will also be replaced by item objects ith the fields defined in `itemFields`. This is essentially equivalent to querying `/items/{item}` for every item found throughout the recipe object. Furthermore, if only one field is included in `itemFields`, then instead of including an item object, just the value of that field will be used in place of the `itemId`s. The valid formats of this field are the same as the valid formats of the `fields` parameter of the `/items/{item}` endpoint.\"\n      requestBody: {}\ncomponents:\n  schemas: {}\n"
		}
	},
	"Error": "unmarshal: invalid number \"\""
}