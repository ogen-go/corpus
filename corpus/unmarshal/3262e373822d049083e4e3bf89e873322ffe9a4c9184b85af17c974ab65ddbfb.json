{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/interledger4j/ilpv4-connector"
		},
		"file": {
			"name": "connector-admin-open-api3.yaml",
			"size": 0,
			"path": "connector-server/swagger/connector-admin-open-api3.yaml",
			"byteSize": 27089,
			"content": "openapi: 3.0.2\ninfo:\n  title: ILPv4 Connector Admin API\n  version: 1.0.0\n  description: A JSON over HTTP API to administer an ILPv4 Connector.\n  termsOfService: 'http://swagger.io/terms/'\n  contact:\n    name: Interledger.org Team\n    url: 'https://interledger.org'\n  license:\n    name: Apache 2.0\n    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'\nservers:\n  - url: 'https://{domain}:{port}/{base}'\n    description: The default server\n    variables:\n      domain:\n        default: localhost\n      port:\n        default: '8080'\n      base:\n        default: ''\n        description: An optional base-path for the Connector admin APIs\npaths:\n  /accounts:\n    summary: Connector Accounts\n    get:\n      tags:\n        - Accounts\n      parameters:\n        - explode: false\n          name: offset\n          description: The offset to use for paging\n          schema:\n            format: uuid\n            type: string\n          in: query\n          required: false\n        - name: numPerPage\n          description: The total number of results to return in a single response.\n          schema:\n            type: number\n          in: query\n        - name: pageNumber\n          description: >-\n            The 0-based page index, computed by dividing the total number of results by the value\n            of `numPerPage`. If not specified, this value should default to `0`.\n          schema:\n            type: number\n          in: query\n          required: false\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccountPage'\n            application/hal+json:\n              schema:\n                $ref: '#/components/schemas/AccountPage'\n          description: A pageable list of Accounts configured at this Connector.\n      security:\n        - BASIC: []\n      operationId: getAccounts\n      summary: All Accounts\n      description: Retrieve a pagable collection of Connector Accounts.\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Account_ILP-over-HTTP'\n        required: true\n      tags:\n        - Accounts\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Account'\n          description: Account created.\n        '400':\n          description: 'Invalid Request (missing required fields, etc)'\n        '409':\n          description: An Account with this identifier already exists.\n      security:\n        - BASIC: []\n      operationId: createAccount\n      summary: New Account\n      description: Create a new account in the Connector.\n  '/accounts/{account_id}':\n    summary: Individual Connector Account.\n    get:\n      tags:\n        - Accounts\n      parameters:\n        - name: account_id\n          description: ID of account to return\n          schema:\n            format: uuid\n            type: string\n          in: path\n          required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Account'\n              examples:\n                A sample account:\n                  value:\n                    accountId: __ping_account__\n                    createdAt: '2019-11-14T22:24:29.495Z'\n                    modifiedAt: '2019-11-14T22:24:29.495Z'\n                    description: >-\n                      A receiver-like child account for collecting all Ping protocol\n                      revenues.\n                    accountRelationship: CHILD\n                    assetCode: USD\n                    assetScale: '2'\n                    linkType: PING\n                    ilpAddressSegment: __ping_account__\n                    connectionInitiator: true\n                    internal: false\n                    sendRoutes: false\n                    receiveRoutes: false\n                    balanceSettings:\n                      settleTo: '0'\n                    rateLimitSettings:\n                      maxPacketsPerSecond: '1'\n                    customSettings: {}\n                    _links:\n                      self:\n                        href: 'http://localhost:8080/accounts/__ping_account__'\n          description: .\n        '404':\n          content:\n            application/json:\n              examples:\n                Account not found.:\n                  value:\n                    accountId: foo\n                    type: 'https://errors.interledger.org/accounts/account-not-found'\n                    title: Account Not Found (`foo`)\n                    status: 404\n          description: Account not found\n      security:\n        - BASIC: []\n      operationId: getAccount\n      summary: Individual Account\n      description: 'Get the account identified by :account_id.'\n    put:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Account'\n            examples:\n              Updated Description:\n                value:\n                  accountId: alice\n                  createdAt: '2019-11-15T21:55:42.683Z'\n                  modifiedAt: '2019-11-15T21:55:42.683Z'\n                  description: ''\n                  accountRelationship: PEER\n                  assetCode: USD\n                  assetScale: '2'\n                  linkType: ILP_OVER_HTTP\n                  ilpAddressSegment: alice\n                  connectionInitiator: true\n                  internal: false\n                  sendRoutes: false\n                  receiveRoutes: false\n                  balanceSettings:\n                    settleTo: '0'\n                  rateLimitSettings: {}\n                  customSettings:\n                    ilpOverHttp.outgoing.url: 'https://alice.example.com/'\n                    __plaintext-ilpOverHttp.incoming.shared_secret: shh\n                    ilpOverHttp.outgoing.token_subject: connie\n                    ilpOverHttp.incoming.token_subject: alice\n                    ilpOverHttp.outgoing.auth_type: JWT_HS_256\n                    ilpOverHttp.incoming.token_audience: 'https://connie.example.com/'\n                    ilpOverHttp.incoming.token_issuer: 'https://alice.example.com/'\n                    ilpOverHttp.incoming.shared_secret: '[**REDACTED**]'\n                    ilpOverHttp.incoming.auth_type: JWT_HS_256\n                    ilpOverHttp.outgoing.token_issuer: 'https://connie.example.com/'\n                    ilpOverHttp.outgoing.token_audience: 'https://alice.example.com/'\n                    ilpOverHttp.outgoing.shared_secret: '[**REDACTED**]'\n                    __plaintext-ilpOverHttp.outgoing.shared_secret: shh\n                  _links:\n                    self:\n                      href: 'http://localhost:8080/accounts/alice'\n        required: true\n      tags:\n        - Accounts\n      parameters:\n        - name: account_id\n          schema:\n            type: string\n          in: path\n          required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Account'\n          description: The successfully update Account.\n      security:\n        - BASIC: []\n      operationId: updateAccount\n      summary: Update Account\n      description: Update a Connector account.\n    delete:\n      tags:\n        - Accounts\n      parameters:\n        - name: account_id\n          schema:\n            type: string\n          in: path\n          required: true\n      responses:\n        '204':\n          description: Account was deleted successfully; no response body returned\n        '404':\n          content:\n            application/json:\n              examples:\n                Account not found.:\n                  value:\n                    accountId: foo\n                    type: 'https://errors.interledger.org/accounts/account-not-found'\n                    title: Account Not Found (`foo`)\n                    status: 404\n          description: Account not found\n      security:\n        - BASIC: []\n      operationId: deleteAccount\n      summary: Delete Account\n      description: Delete a Connector account.\n  /routes:\n    get:\n      tags:\n        - Routes\n      responses:\n        '200':\n          content:\n            application/hal+json:\n              schema:\n                $ref: '#/components/schemas/RoutePage'\n          description: >-\n            Return a pageable collection of Routes that this Connector has in it routing table\n            (include both static and dynamic).\n      security:\n        - BASIC: []\n      summary: All Routes\n      description: Retrieve a pageable collection of all routes in this Connector's routing table.\n  /routes/static:\n    put:\n      requestBody:\n        content:\n          application/json:\n            examples:\n              New Static Route:\n                value:\n                  routePrefix: g.foo\n                  nextHopAccountId: '123'\n        required: true\n      tags:\n        - Routes\n      responses:\n        '201':\n          content:\n            application/json:\n              examples:\n                Static Route:\n                  value:\n                    routePrefix: g.foo\n                    nextHopAccountId: '123'\n          description: Returned when a new static route is created on the server.\n        '409':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StaticRouteExists'\n          description: The static route already exists in the Connector.\n      security:\n        - BASIC: []\n      operationId: CreateStaticRoute\n      summary: Create Static Route\n    delete:\n      tags:\n        - Routes\n      responses:\n        '204':\n          description: A static route was successfully removed.\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StaticRouteNotFound'\n          description: The request static route does not exist for removal.\n      security:\n        - BASIC: []\n      operationId: RemoveStaticRoute\n      summary: Remove Static Route\ncomponents:\n  schemas:\n    BalanceUpdate:\n      title: Root Type for BalanceUpdate\n      description: The delta a balance should be updated by\n      required:\n        - amount\n        - scale\n      type: object\n      properties:\n        amount:\n          type: string\n        scale:\n          type: string\n      example: |-\n        {\n            \"amount\": 100,\n            \"scale\": 2\n        }\n    Relationship:\n      description: >-\n        The type of relationship between two ILP Connector accounts, from the perspective of the\n        Connector operating this API. Each account will have one of three relationship-types that\n        reflect how the account is related to the counterparaty on the other side of an ILP link.\n        These types include `PEER`, `PARENT` or `CHILD`.\n\n        The Interledger network topology is organized in a tiered hierarchy, similar to the Internet,\n        reflecting these relationships. Large, high volume nodes are peered with one another to form\n        the backbone of the network, using the relationship type `PEER`. Smaller nodes will have links\n        to these \"tier 1\" nodes and the account will be of type `CHILD`, from the perspective of the\n        tier 1 node; From the perspective of the smaller node, the type will be `PARENT`.\n\n        A node that has links of type child must host an IL-DCP service to allow the nodes on those\n        links to request addresses. Generally these will be sub-addresses of the node's own address\n        however this is not a requirement.\n      enum:\n        - CHILD\n        - PEER\n        - PARENT\n      type: string\n    Account:\n      title: Root Type for Account\n      description: An account that is tracked by the Settlement Engine and Connector\n      required:\n        - accountRelationship\n        - accountId\n        - linkType\n      type: object\n      properties:\n        assetScale:\n          format: int32\n          description: >-\n            Interledger amounts are integers, but most currencies are typically represented as\n            fractional units, e.g. \"cents\". This property defines how many Interledger units make\n            up one regular unit. For example, to represent very small units in dollars, this could\n            be set to 9, so that Interledger amounts are expressed in nano-dollars.\n          type: integer\n        assetCode:\n          description: >-\n            Currency code or other asset identifier that will be used to select the correct rate\n            for this account.\n          type: string\n        maxPacketsPerSecond:\n          description: >-\n            The maximum number of packets-per-second that is allowed for this account. If this\n            value is not specified, then no limit is applied to this account.\n          type: string\n        balanceSettings:\n          $ref: '#/components/schemas/BalanceSettings'\n          description: >-\n            Defines whether a node (e.g., a Connector) should maintain and enforce a balance for\n            this account. The balance is always from the node's perspective. Therefore, a negative\n            balance implies the node owes money to the counterparty and a positive balance implies\n            the counterparty owes money to the node. This object is optionally-present on an\n            account, since some accounts do not track balances (e.g., client accounts).\n            Alternatively, even if an account does track a balance, it may be desirable to not\n            have any limits.\n        accountId:\n          format: uuid\n          description: The unique identifier of this account.\n          type: string\n        accountRelationship:\n          description: >-\n            The type of relationship between two ILP Connector accounts, from the perspective of\n            the Connector operating this API. Each account will have one of three\n            relationship-types that reflect how the account is related to the counterparaty on the\n            other side of an ILP link. These types include `PEER`, `PARENT` or `CHILD`.\n\n            The Interledger network topology is organized in a tiered hierarchy, similar to the\n            Internet, reflecting these relationships. Large, high volume nodes are peered with one\n            another to form the backbone of the network, using the relationship type `PEER`.\n            Smaller nodes will have links to these \"tier 1\" nodes and the account will be of type\n            `CHILD`, from the perspective of the tier 1 node; From the perspective of the smaller\n            node, the type will be `PARENT`.\n\n            A node that has links of type child must host an IL-DCP service to allow the nodes on\n            those links to request addresses. Generally these will be sub-addresses of the node's\n            own address however this is not a requirement.\n          enum:\n            - PARENT\n            - PEER\n            - CHILD\n          type: string\n        linkType:\n          description: >-\n            The type of Link that this account uses to communicate with its peer. Default value is\n            `ILP_OVER_HTTP`.\n          enum:\n            - ILP_OVER_HTTP\n            - LOOPBACK\n          type: string\n        maximumPacketAmount:\n          format: int64\n          description: >-\n            The maximum amount per-packet for incoming prepare packets. The connector will reject\n            any incoming prepare packets from this account with a higher amount.\n          type: integer\n        rateLimitSettings:\n          $ref: '#/components/schemas/AccountRateLimitSettings'\n          description: Defines any rate-limiting in effect for an account.\n        sendRoutes:\n          description: >-\n            Whether this account should receive and process route broadcasts from this peer.\n            Defaults to `false` for `CHILD` accounts and `true` otherwise.\n          type: boolean\n        receiveRoutes:\n          description: >-\n            Whether this account should broadcast routes to this peer. Defaults to `false` for\n            `CHILD` accounts and `true` otherwise.\n          type: boolean\n        createdAt:\n          format: date-time\n          description: The ISO-8601 timestamp for when this account was created.\n          type: string\n        modifiedAt:\n          format: date-time\n          description: The ISO-8601 timestamp for when this account was last modified.\n          type: string\n        description:\n          description: A human-readable description of an account.\n          type: string\n        customSettings:\n          description: Custom details for an account.\n          type: array\n          items:\n            type: string\n      example:\n        id: ''\n        relationship: PARENT\n        assetScale: 91\n        assetCode: some text\n        maxPacketsPerSecond: 47\n        balanceSettings:\n          minBalance: 77\n          maxBalance: 49\n          settleThreshold: 11\n          settleTo: 35\n    BalanceSettings:\n      description: >-\n        Defines whether a node (e.g., a Connector) should maintain and enforce a balance for this\n        account. The balance is always from the node's perspective. Therefore, a negative balance\n        implies the node owes money to the counterparty and a positive balance implies the\n        counterparty owes money to the node.\n\n\n        This object is optionally-present on an account, since some accounts do not track balances\n        (e.g., client accounts). Alternatively, even if an account does track a balance, it may be\n        desirable to not have any balance limits.\n      type: object\n      properties:\n        minBalance:\n          description: >-\n            The minimum balance (in this account's indivisible base units) the connector must\n            maintain for this account. For example, the connector will reject incoming packets if\n            the transaction would put the account balance below this number. If this value is not\n            present, then the connector will assume no minimum balance.\n          type: string\n        maxBalance:\n          description: >-\n            Maximum balance (in this account's indivisible base units) the connector will allow.\n            For example, the connector will reject outgoing packets if the transaction would put\n            the account balance above this number. If this value is not present, then the\n            connector will assume no maximum balance.\n          type: string\n        settleThreshold:\n          description: >-\n            Optional Balance (in this account's indivisible base units) numerically below which\n            the connector will automatically initiate a settlement. If this value is not present,\n            then the connector will not automatically settle.\n          type: string\n        settleTo:\n          description: >-\n            Optional Balance (in this account's indivisible base units) the connector will attempt\n            to reach when settling. If this value is not present, then the connector will not\n            automatically settle.\n          type: string\n    SettlementEngineDetails:\n      description: Optionally present information about how this account can be settled.\n      required:\n        - baseUrl\n      type: object\n      properties:\n        settlementEngineAccountId:\n          description: >-\n            The unique identifier of the Settlement Engine account, as created by calling `POST\n            /accounts/:id` on the Settlement Engine. Optional because this value will not be\n            present until an account is created.\n          type: string\n        baseUrl:\n          description: The base URL of the Settlement Engine.\n          type: string\n        customSettings:\n          description: 'Additional, custom settings that any plugin can define.'\n          type: array\n          items:\n            type: string\n    AccountRateLimitSettings:\n      description: Defines any rate-limiting in effect for an account.\n      type: object\n    Route:\n      title: Root Type for Route\n      description: A single Route in the Connector's routing table.\n      type: object\n      properties:\n        routePrefix:\n          description: >-\n            An Interledger address prefix is used to match against the destination address of a\n            particular ILP packet. The longest prefix in the routing table that matches the\n            destination address of a particular packet will be used as the best route for any\n            particular packet.\n          type: string\n        nextHopAccountId:\n          description: >-\n            The account that outgoing packets should be forwarded upon in response to a routing\n            operation.\n          type: string\n        createdAt:\n          format: date-time\n          description: The date/time this StaticRoute was created.\n          type: string\n        modifiedAt:\n          format: date-time\n          description: The date/time this StaticRoute was last modified.\n          type: string\n      example:\n        routePrefix: g.foo\n        nextHopAccountId: '123'\n        createdAt: '2019-11-18T18:25:38.533Z'\n        modifiedAt: '2019-11-18T18:25:38.533Z'\n    RoutePage:\n      description: A page in a collection of routes\n      type: object\n      example:\n        _embedded:\n          routes:\n            - routePrefix: g.foo\n              nextHopAccountId: '123'\n              path: []\n              auth: YPdfhiJL3niltb1hChYzKwFPPimfPIb0gcNtvoKglsY=\n        page:\n          size: '1'\n          totalElements: '1'\n          totalPages: '1'\n          number: '0'\n    AccountPage:\n      description: A page in a collection of Accounts.\n      type: object\n      example:\n        _embedded:\n          accounts:\n            - accountId: __ping_account__\n              createdAt: '2019-11-18T18:23:30.948Z'\n              modifiedAt: '2019-11-18T18:23:30.948Z'\n              description: A receiver-like child account for collecting all Ping protocol revenues.\n              accountRelationship: CHILD\n              assetCode: USD\n              assetScale: '2'\n              linkType: PING\n              ilpAddressSegment: __ping_account__\n              connectionInitiator: true\n              internal: false\n              sendRoutes: false\n              receiveRoutes: false\n              balanceSettings:\n                settleTo: '0'\n              rateLimitSettings:\n                maxPacketsPerSecond: '1'\n              customSettings: {}\n              _links:\n                self:\n                  href: 'http://localhost:8080/accounts/__ping_account__'\n        page:\n          size: '1'\n          totalElements: '1'\n          totalPages: '1'\n          number: '0'\n    Account_ILP-over-HTTP:\n      title: Root Type for Account_ILP-over-HTTP\n      description: ''\n      type: object\n      properties:\n        accountId:\n          type: string\n        accountRelationship:\n          type: string\n        linkType:\n          type: string\n        assetCode:\n          type: string\n        assetScale:\n          type: string\n        customSettings:\n          type: object\n          properties:\n            ilpOverHttp.incoming.auth_type:\n              type: string\n            ilpOverHttp.incoming.token_issuer:\n              type: string\n            ilpOverHttp.incoming.token_audience:\n              type: string\n            ilpOverHttp.incoming.token_subject:\n              type: string\n            __plaintext-ilpOverHttp.incoming.shared_secret:\n              type: string\n            ilpOverHttp.incoming.shared_secret:\n              type: string\n            ilpOverHttp.outgoing.auth_type:\n              type: string\n            ilpOverHttp.outgoing.token_issuer:\n              type: string\n            ilpOverHttp.outgoing.token_audience:\n              type: string\n            ilpOverHttp.outgoing.token_subject:\n              type: string\n            __plaintext-ilpOverHttp.outgoing.shared_secret:\n              type: string\n            ilpOverHttp.outgoing.shared_secret:\n              type: string\n            ilpOverHttp.outgoing.url:\n              type: string\n        sendRoutes:\n          type: boolean\n        receiveRoutes:\n          type: boolean\n      example:\n        accountId: alice\n        accountRelationship: PEER\n        linkType: ILP_OVER_HTTP\n        assetCode: USD\n        assetScale: '2'\n        customSettings:\n          ilpOverHttp.incoming.auth_type: JWT_HS_256\n          ilpOverHttp.incoming.token_issuer: 'https://alice.example.com/'\n          ilpOverHttp.incoming.token_audience: 'https://connie.example.com/'\n          ilpOverHttp.incoming.token_subject: alice\n          ilpOverHttp.incoming.shared_secret: 'enc:JKS:crypto.p12:secret0:1:aes_gcm:AAAADKZPmASojt1iayb2bPy4D-Toq7TGLTN95HzCQAeJtz0='\n          ilpOverHttp.outgoing.auth_type: JWT_HS_256\n          ilpOverHttp.outgoing.token_issuer: 'https://connie.example.com/'\n          ilpOverHttp.outgoing.token_audience: 'https://alice.example.com/'\n          ilpOverHttp.outgoing.token_subject: connie\n          ilpOverHttp.outgoing.shared_secret: 'enc:JKS:crypto.p12:secret0:1:aes_gcm:AAAADKZPmASojt1iayb2bPy4D-Toq7TGLTN95HzCQAeJtz0='\n          ilpOverHttp.outgoing.url: 'https://alice.example.com/'\n        sendRoutes: true\n        receiveRoutes: true\n    StaticRouteRequest:\n      title: Root Type for StaticRouteRequest\n      description: Payload to create a new static route\n      type: object\n      properties:\n        routePrefix:\n          type: string\n        nextHopAccountId:\n          type: string\n      example:\n        routePrefix: g.foo\n        nextHopAccountId: '123'\n    StaticRouteNotFound:\n      title: Root Type for StaticRouteNotFound\n      description: ''\n      type: object\n      properties:\n        prefix:\n          type: string\n        type:\n          type: string\n        title:\n          type: string\n        status:\n          format: int32\n          type: integer\n      example:\n        prefix: g\n        type: 'https://errors.interledger.org/routes/static/static-route-not-found'\n        title: Static Route Does Not Exist (`g`)\n        status: 404\n    StaticRouteExists:\n      title: Root Type for StaticRouteExists\n      description: ''\n      type: object\n      properties:\n        prefix:\n          type: string\n        type:\n          type: string\n        title:\n          type: string\n        status:\n          format: int32\n          type: integer\n      example:\n        prefix: g.foo\n        type: 'https://errors.interledger.org/routes/static/static-route-already-exists'\n        title: Static Route Already Exists (`g.foo`)\n        status: 409\n  securitySchemes:\n    Bearer:\n      scheme: bearer\n      type: http\n      description: An opaque Bearer token Auth scheme.\n    JWTBearer:\n      scheme: bearer\n      type: http\n      description: A JWT bearer token scheme.\n    BASIC:\n      scheme: basic\n      type: http\n      description: HTTP Basic Authentication\nsecurity:\n  Bearer: []\n  JWTBearer: []\n  BASIC: []\n",
			"canonicalURL": "/github.com/interledger4j/ilpv4-connector@e00038b75fbae57bce668ddcb1baeae3e51aa09c/-/blob/connector-server/swagger/connector-admin-open-api3.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/interledger4j/ilpv4-connector/blob/e00038b75fbae57bce668ddcb1baeae3e51aa09c/connector-server/swagger/connector-admin-open-api3.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: json: line 1:20954: json: cannot unmarshal Go value of type ogen.Spec: spec: json: cannot unmarshal JSON object into Go value of type ogen.SecurityRequirements"
}