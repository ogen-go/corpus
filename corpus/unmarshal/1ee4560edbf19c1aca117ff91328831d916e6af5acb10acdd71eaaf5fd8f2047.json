{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/HAECHI-LABS/henesis-wallet-sdk"
		},
		"file": {
			"name": "swagger-spec-v3-polygon.yaml",
			"size": 0,
			"path": "packages/api-proxy/swagger/swagger-spec-v3-polygon.yaml",
			"byteSize": 103724,
			"content": "openapi: 3.0.0\ninfo:\n  title: POLYGON\n  description: Henesis API Proxy - v3 - polygon OpenAPI Documentation\n  version: '1.0'\n  contact: {}\ntags: []\nservers:\n  - url: http://localhost:3000\ncomponents:\n  schemas:\n    InvalidAccessIpException:\n      type: object\n      properties:\n        message:\n          type: string\n          description: API 에러 메시지\n          example: ip '106.101.128.133' is not allowed\n        code:\n          type: number\n          description: 헤네시스 API 에러 코드\n          example: 4008\n      required:\n        - message\n        - code\n    InvalidAccessTokenException:\n      type: object\n      properties:\n        message:\n          type: string\n          description: API 에러 메시지\n          example: expired or invalid access token and signature\n        code:\n          type: number\n          description: 헤네시스 API 에러 코드\n          example: 4001\n      required:\n        - message\n        - code\n    AccessTokenNotProvidedException:\n      type: object\n      properties:\n        message:\n          type: string\n          description: API 에러 메시지\n          example: access token not provided\n        code:\n          type: number\n          description: 헤네시스 API 에러 코드\n          example: 4001\n      required:\n        - message\n        - code\n    NoCoinException:\n      type: object\n      properties:\n        message:\n          type: string\n          description: API 에러 메시지\n          example: there is no '2' coin at 'ETHEREUM'\n        code:\n          type: number\n          description: 헤네시스 API 에러 코드\n          example: 4000\n      required:\n        - message\n        - code\n    CoinDTO:\n      type: object\n      properties:\n        id:\n          type: number\n          description: Henesis에서 부여한 Coin의 ID\n          example: 11\n        name:\n          type: string\n          description: 코인 이름\n          example: ethereum\n        ticker:\n          type: string\n          description: 코인의 기호\n          example: ETH\n        address:\n          type: string\n          description: 코인 컨트랙트 주소\n          example: '0xdd00383e5a51166bba3e96d84c14a36d72e6c128'\n        description:\n          type: string\n          description: 코인 설명\n          example: 이더리움\n        decimals:\n          type: number\n          description: 코인의 소수점 자릿수\n          example: 18\n        blockchain:\n          type: string\n          description: 코인이 발행된 메인넷\n          example: ETHEREUM\n          enum:\n            - ETHEREUM\n            - KLAYTN\n            - BITCOIN\n            - FILECOIN\n            - BINANCE_SMART_CHAIN\n            - LITECOIN\n            - BITCOIN_CASH\n            - POLYGON\n        attributes:\n          description: 코인의 메타 데이터\n          example: \u0026ref_7\n            - ERC20_STANDARD\n          type: array\n          items:\n            type: array\n      required:\n        - id\n        - name\n        - ticker\n        - address\n        - description\n        - decimals\n        - blockchain\n        - attributes\n    InvalidStatusException:\n      type: object\n      properties:\n        message:\n          type: string\n          description: API 에러 메시지\n          example: '''status'' is invalid: not supported event status'\n        code:\n          type: number\n          description: 헤네시스 API 에러 코드\n          example: 4001\n      required:\n        - message\n        - code\n    ContractCallsDTO:\n      type: object\n      properties:\n        id:\n          type: string\n          description: 스마트 컨트랙트 호출 내역의 ID\n          example: '375031'\n        data:\n          type: string\n          description: 컨트랙트 호출시 사용된 data\n          example: \u003e-\n            0xa9059cbb0000000000000000000000001f10ecbd971eab345ea19e96dc237b1fbd63de9600000000000000000000000000000000000000000000000000000000000f4240\n        status:\n          type: string\n          description: 트랜잭션 상태\n          example: CONFIRMED\n          enum:\n            - PENDING_APPROVAL\n            - REJECTED\n            - REQUESTED\n            - PENDING\n            - FAILED\n            - REVERTED\n            - REPLACED\n            - MINED\n            - CONFIRMED\n        walletId:\n          type: string\n          description: 지갑 ID\n          example: ae40b1b3dd953e5592c21e58be30d807\n        orgId:\n          type: string\n          description: 지갑이 속한 팀(Organization)의 ID\n          example: 31cafc79bd437e1b8e7b8209e399d3f3\n        transactionId:\n          type: string\n          description: \u003e-\n            트랜잭션 ID (Henesis Wallet에서 부여하는 트랜잭션의 고유 ID입니다. 온체인상 트랜잭션 해시와 다른\n            개념입니다.)\n          example: 8c87c578d7568edc156f831cf03c3ff0\n        toAddress:\n          type: string\n          description: 호출한 스마트 컨트랙트 주소\n          example: '0xdd00383e5a51166bba3e96d84c14a36d72e6c128'\n        fromAddress:\n          type: string\n          description: 호출한 지갑의 주소\n          example: '0x1f10ecbd971eab345ea19e96dc237b1fbd63de96'\n        transactionHash:\n          type: string\n          description: 트랜잭션 해시\n          example: '0xef76a243fa224f723922a1b067dd916fb1b2568aff292d2d1d183a807804922f'\n        createdAt:\n          type: string\n          description: '트랜잭션 생성 시간 (형식: ms, UNIX time)'\n          example: '1612411568760'\n        updatedAt:\n          type: string\n          description: '트랜잭션 상태가 마지막으로 변경된 시간 (형식: ms, UNIX time)'\n          example: '1612411724023'\n        blockchain:\n          type: string\n          description: 메인넷 종류\n          example: ETHEREUM\n          enum:\n            - ETHEREUM\n            - KLAYTN\n            - BITCOIN\n            - LITECOIN\n            - FILECOIN\n            - BINANCE_SMART_CHAIN\n            - BITCOIN_CASH\n            - POLYGON\n        metadata:\n          type: string\n          description: 기타 정보 기록용 메타 데이터 (255자 제한)\n          example: metadata\n      required:\n        - id\n        - data\n        - status\n        - walletId\n        - orgId\n        - transactionId\n        - toAddress\n        - fromAddress\n        - transactionHash\n        - createdAt\n        - updatedAt\n        - blockchain\n    PaginationMetadata:\n      type: object\n      properties:\n        nextUrl:\n          type: string\n          description: 다음 pagination url\n          example: http://localhost:3000/api/v3/ethereum/transfers?page=2\n        previousUrl:\n          type: string\n          description: 이전 pagination url\n          example: http://localhost:3000/api/v3/ethereum/transfers?page=1\n        totalCount:\n          type: number\n          description: 총 갯수\n          example: 5\n      required:\n        - nextUrl\n        - previousUrl\n        - totalCount\n    GetManyResponseForContractCallsDTO:\n      type: object\n      properties:\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/ContractCallsDTO'\n        pagination:\n          $ref: '#/components/schemas/PaginationMetadata'\n      required:\n        - results\n    TransferDTO:\n      type: object\n      properties:\n        id:\n          type: number\n          description: 코인/토큰 입출금 내역의 ID\n          example: 375031\n        from:\n          type: string\n          description: 출금 주소\n          example: '0x1f10ecbd971eab345ea19e96dc237b1fbd63de96'\n        to:\n          type: string\n          description: 입금 주소\n          example: '0xdd00383e5a51166bba3e96d84c14a36d72e6c128'\n        amount:\n          type: string\n          description: 암호화폐의 양\n          example: '1000000000'\n        status:\n          type: string\n          description: 트랜잭션 상태\n          example: CONFIRMED\n          enum:\n            - PENDING_APPROVAL\n            - REJECTED\n            - REQUESTED\n            - PENDING\n            - FAILED\n            - REVERTED\n            - REPLACED\n            - MINED\n            - CONFIRMED\n        orgId:\n          type: string\n          description: 지갑이 속한 팀(Organization)의 ID\n          example: 31cafc79bd437e1b8e7b8209e399d3f3\n        decimals:\n          type: number\n          description: 암호화폐의 소수점 자릿수\n          example: 18\n        walletId:\n          type: string\n          description: 입출금 지갑 ID\n          example: ae40b1b3dd953e5592c21e58be30d807\n        depositAddressId:\n          type: string\n          description: 입금 주소 ID\n          example: ae40b1b3dd953e5592c21e58be30d807\n        ticker:\n          type: string\n          description: 암호화폐의 기호\n          example: USDT\n        transferType:\n          type: string\n          description: 입출금 타입\n          example: WITHDRAWAL\n          enum:\n            - WITHDRAWAL\n            - DEPOSIT\n        transactionId:\n          type: string\n          description: \u003e-\n            트랜잭션 ID (Henesis Wallet에서 부여하는 트랜잭션의 고유 ID입니다. 온체인상 트랜잭션 해시와 다른\n            개념입니다.)\n          example: 8c87c578d7568edc156f831cf03c3ff0\n        transactionHash:\n          type: string\n          description: 트랜잭션 해시\n          example: '0xef76a243fa224f723922a1b067dd916fb1b2568aff292d2d1d183a807804922f'\n        hopTransactionId:\n          type: string\n          description: \u003e-\n            홉 트랜잭션 ID (Henesis Wallet에서 부여하는 트랜잭션의 고유 ID입니다. 온체인상 트랜잭션 해시와 다른\n            개념입니다.)\n          example: 6f831cf03c3ff08c87c578d7568edc15\n        hopTransactionHash:\n          type: string\n          description: 홉 트랜잭션 해시\n          example: '0x60603c815f0ba0ad6b7f2ae398bd7cb9fe71347f984e32453fe4fe53f255dfd3'\n        createdAt:\n          type: string\n          description: '트랜잭션 생성 시간 (형식: ms, UNIX time)'\n          example: '1612411568760'\n        updatedAt:\n          type: string\n          description: '트랜잭션 상태가 마지막으로 변경된 시간 (형식: ms, UNIX time)'\n          example: '1612411724023'\n        name:\n          type: string\n          description: 해당 내역의 지갑 또는 입금 주소의 이름\n          example: ETH 실비 정산\n        metadata:\n          type: string\n          description: 기타 정보 기록용 메타 데이터 (255자 제한)\n          example: metadata\n      required:\n        - id\n        - from\n        - to\n        - amount\n        - status\n        - orgId\n        - decimals\n        - walletId\n        - depositAddressId\n        - ticker\n        - transferType\n        - transactionId\n        - transactionHash\n        - hopTransactionId\n        - hopTransactionHash\n        - createdAt\n        - updatedAt\n        - name\n    GetManyResponseForTransferDTO:\n      type: object\n      properties:\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/TransferDTO'\n        pagination:\n          $ref: '#/components/schemas/PaginationMetadata'\n      required:\n        - results\n    TransactionIdNotFoundException:\n      type: object\n      properties:\n        message:\n          type: string\n          description: API 에러 메시지\n          example: transaction id '1' does not exists\n        code:\n          type: number\n          description: 헤네시스 API 에러 코드\n          example: 4000\n      required:\n        - message\n        - code\n    TransactionDTO:\n      type: object\n      properties:\n        id:\n          type: string\n          description: \u003e-\n            트랜잭션 ID (Henesis Wallet에서 부여하는 트랜잭션의 고유 ID입니다, 블록체인에서 부여하는 트랜잭션 해시와\n            다른 개념입니다)\n          example: b549bfaaa74d1c4244ecc655738b1984\n        blockchain:\n          type: string\n          description: 메인넷 종류\n          example: ETHEREUM\n          enum:\n            - ETHEREUM\n            - KLAYTN\n            - BITCOIN\n            - LITECOIN\n            - FILECOIN\n            - BINANCE_SMART_CHAIN\n            - BITCOIN_CASH\n            - POLYGON\n        hash:\n          type: string\n          description: 트랜잭션 해시 (트랜잭션 상태가 REQUESTED일 때는 존재하지 않습니다)\n          example: '0x8a1ef722a2884d53a86874c8ba19bcf267bb0b8a81da00c14ddc6457cf1eaf96'\n        error:\n          type: string\n          description: 트랜잭션 전송 시 발생한 에러\n          example: 'null'\n        status:\n          type: string\n          description: 트랜잭션 상태\n          example: CONFIRMED\n          enum:\n            - PENDING_APPROVAL\n            - REJECTED\n            - REQUESTED\n            - PENDING\n            - FAILED\n            - MINED\n            - REVERTED\n            - INTERNAL_REVERTED\n            - CONFIRMED\n            - REPLACED\n        fee:\n          type: string\n          description: 트랜잭션 수수료\n          example: '10000000'\n        hopAddress:\n          type: string\n          description: 홉 주소\n          example: '0x1AA2705a26452cC22430F31A5c85974bBEDDe5a5'\n        createdAt:\n          type: string\n          description: '트랜잭션 생성 시간 (형식: ms, UNIX time)'\n          example: '1614582928222'\n        updatedAt:\n          type: string\n          description: '트랜잭션 상태가 변한 시간 (형식: ms, UNIX time)'\n          example: '1612411724023'\n      required:\n        - id\n        - blockchain\n        - status\n        - hopAddress\n        - createdAt\n        - updatedAt\n    GetManyResponseForTransactionDTO:\n      type: object\n      properties:\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/TransactionDTO'\n        pagination:\n          $ref: '#/components/schemas/PaginationMetadata'\n      required:\n        - results\n    WalletNotFoundException:\n      type: object\n      properties:\n        message:\n          type: string\n          description: API 에러 메시지\n          example: wallet 'c27732256a1f8d45df5aec31ba7ef85cd' does not exist\n        code:\n          type: number\n          description: 헤네시스 API 에러 코드\n          example: 4000\n      required:\n        - message\n        - code\n    NoWalletNameException:\n      type: object\n      properties:\n        message:\n          type: string\n          description: API 에러 메시지\n          example: wallet name should not be empty\n        code:\n          type: number\n          description: 헤네시스 API 에러 코드\n          example: 4000\n      required:\n        - message\n        - code\n    DepositAddressNotFoundException:\n      type: object\n      properties:\n        message:\n          type: string\n          description: API 에러 메시지\n          example: deposit address 'c27732256a1f8d45df5aec31ba7ef85cd' does not exist\n        code:\n          type: number\n          description: 헤네시스 API 에러 코드\n          example: 4000\n      required:\n        - message\n        - code\n    WalletDTO:\n      type: object\n      properties:\n        id:\n          type: string\n          description: 지갑 ID\n          example: ae40b1b3dd953e5592c21e58be30d807\n        name:\n          type: string\n          description: 지갑 이름\n          example: ethereum-wallet\n        address:\n          type: string\n          description: 지갑 주소\n          example: '0xdde12e85d7f5d0003eff13f7a3cf6068b5a41454'\n        blockchain:\n          type: string\n          description: 메인넷 종류\n          example: ETHEREUM\n          enum: \u0026ref_0\n            - ETHEREUM\n            - KLAYTN\n            - BITCOIN\n            - LITECOIN\n            - FILECOIN\n            - BINANCE_SMART_CHAIN\n            - BITCOIN_CASH\n            - POLYGON\n        createdAt:\n          type: string\n          description: '지갑 생성 시간 (형식: ms, UNIX time)'\n          example: '1612411568760'\n        updatedAt:\n          type: string\n          description: '지갑 정보 수정 시간 (단위: ms, UNIX time)'\n          example: '1612411724023'\n        status:\n          type: string\n          description: 지갑 상태\n          example: ACTIVE\n          enum: \u0026ref_1\n            - ACTIVE\n            - CREATING\n            - FAILED\n            - INACTIVE\n        whitelistActivated:\n          type: boolean\n          description: 출금 주소 화이트리스팅의 활성화 유무\n          example: false\n        version:\n          type: string\n          description: 컨트랙트 버전\n          example: v4\n      required:\n        - id\n        - name\n        - address\n        - blockchain\n        - createdAt\n        - updatedAt\n        - status\n    BalanceDTO:\n      type: object\n      properties:\n        coinId:\n          type: number\n          description: Henesis에서 부여한 Coin의 ID\n          example: 11\n        amount:\n          type: string\n          description: '확정된 잔액 (단위: wei, peb)'\n          example: '1000000000000'\n        spendableAmount:\n          type: string\n          description: '출금 가능한 잔액 (= 총 잔액 - 확정되지 않은 출금 요청액)(단위: wei, peb, jager)'\n          example: '1000000000000'\n        name:\n          type: string\n          description: 코인 이름\n          example: ethereum\n        ticker:\n          type: string\n          description: 코인의 기호\n          example: ETH\n        decimals:\n          type: number\n          description: 코인의 소수점 자릿수\n          example: 18\n      required:\n        - coinId\n        - amount\n        - spendableAmount\n        - name\n        - ticker\n        - decimals\n    DepositAddressDTO:\n      type: object\n      properties:\n        id:\n          type: string\n          description: 입금 주소 ID\n          example: a1f9e4c33ea9f51974490fd1c30efb3e\n        address:\n          type: string\n          description: 입금 주소\n          example: '0x70d4e4abbe12c9c5098df3b31d9ad89c99a01967'\n        name:\n          type: string\n          description: 입금 주소 이름\n          example: deposit-address-1\n        blockchain:\n          type: string\n          description: 메인넷 종류\n          example: ETHEREUM\n          enum:\n            - ETHEREUM\n            - KLAYTN\n            - BITCOIN\n            - LITECOIN\n            - FILECOIN\n            - BINANCE_SMART_CHAIN\n            - BITCOIN_CASH\n            - POLYGON\n        createdAt:\n          type: string\n          description: '지갑 생성 시간 (단위: ms, UNIX time)'\n          example: '1614582860091'\n        updatedAt:\n          type: string\n          description: '지갑 정보 수정 시간 (단위: ms, UNIX time)'\n          example: '1614582928222'\n        version:\n          type: string\n          description: 입금 주소 버전\n          example: v4\n      required:\n        - id\n        - address\n        - name\n        - blockchain\n        - createdAt\n        - updatedAt\n        - version\n    KeyDTO:\n      type: object\n      properties:\n        address:\n          type: string\n          description: ''\n          example: '0x4ef3ba60c8710f45371835cddafabf33daa83e1d'\n        pub:\n          type: string\n          description: pub\n          example: \u003e-\n            0x31bd93d049fefed19b640c8069046c223126505754b9a57f5df43a89b104d92c8d4be4f51a6b5bb08a3ec6c2ff022e8ff018bad52ee05fa81b4eeae16a0e2db1\n        feeDelegationEnabled:\n          type: boolean\n          description: feeDelegationEnabled\n          example: false\n        keyFile:\n          type: string\n          description: keyFile\n          example: '1'\n        keyId:\n          type: string\n          description: keyId\n          example: 52e779750bb1330d2f23439c6da821ee\n      required:\n        - pub\n    MasterWalletDTO:\n      type: object\n      properties:\n        id:\n          type: string\n          description: 지갑 ID\n          example: ae40b1b3dd953e5592c21e58be30d807\n        name:\n          type: string\n          description: 지갑 이름\n          example: ethereum-wallet\n        address:\n          type: string\n          description: 지갑 주소\n          example: '0xdde12e85d7f5d0003eff13f7a3cf6068b5a41454'\n        blockchain:\n          type: string\n          description: 메인넷 종류\n          example: ETHEREUM\n          enum: *ref_0\n        createdAt:\n          type: string\n          description: '지갑 생성 시간 (형식: ms, UNIX time)'\n          example: '1612411568760'\n        updatedAt:\n          type: string\n          description: '지갑 정보 수정 시간 (단위: ms, UNIX time)'\n          example: '1612411724023'\n        status:\n          type: string\n          description: 지갑 상태\n          example: ACTIVE\n          enum: *ref_1\n        whitelistActivated:\n          type: boolean\n          description: 출금 주소 화이트리스팅의 활성화 유무\n          example: false\n        version:\n          type: string\n          description: 컨트랙트 버전\n          example: v4\n        accountKey:\n          description: KEY\n          example: \u0026ref_20\n            address: '0x4ef3ba60c8710f45371835cddafabf33daa83e1d'\n            pub: \u003e-\n              0x31bd93d049fefed19b640c8069046c223126505754b9a57f5df43a89b104d92c8d4be4f51a6b5bb08a3ec6c2ff022e8ff018bad52ee05fa81b4eeae16a0e2db1\n            feeDelegationEnabled: false\n            keyFile: '1'\n            keyId: 52e779750bb1330d2f23439c6da821ee\n          allOf:\n            - $ref: '#/components/schemas/KeyDTO'\n        encryptionKey:\n          type: string\n          description: 마스터 지갑 비밀번호를 복구하기 위해 암호화하는 데 쓰인 키\n          example: f0880e48251dd2f8574a8c8a4d65311030185d5e451e8a474b89c2b473b5d953\n      required:\n        - id\n        - name\n        - address\n        - blockchain\n        - createdAt\n        - updatedAt\n        - status\n        - accountKey\n        - encryptionKey\n    ChangeWalletNameRequestDTO:\n      type: object\n      properties:\n        name:\n          type: string\n          description: 지갑의 새로운 이름\n          example: name\n      required:\n        - name\n    SendCoinRequestDTO:\n      type: object\n      properties:\n        ticker:\n          type: string\n          description: 암호화폐의 기호 (ticker)\n          example: ETH\n        to:\n          type: string\n          description: 암호화폐를 받을 지갑 주소\n          example: '0xab28d146e860e0b132695c941f706d783a158345'\n        amount:\n          type: string\n          description: '암호화폐의 양 (단위: wei, peb)'\n          example: '100000000'\n        passphrase:\n          type: string\n          description: 지갑의 비밀번호\n          example: passphrase\n        gasPrice:\n          type: string\n          description: \u003e-\n            트랜잭션에 사용할 gas price (단위: wei) null일 경우, Henesis가 자동으로 5분 안에 채굴될 수 있는\n            값으로 설정합니다.\n          example: '8000000000'\n        gasLimit:\n          type: string\n          description: 트랜잭션에 사용할 gas limit. null일 경우, Henesis가 자동으로 설정합니다.\n          example: '500000'\n        isHopTransaction:\n          type: boolean\n          description: 컨트랙트를 통한 입금을 원치 않는 경우, 컨트랙트가 아닌 EOA로 출금을 진행 합니다.\n          example: false\n        metadata:\n          type: string\n          description: 기타 정보 기록용 메타 데이터 (255자 제한)\n          example: metadata\n      required:\n        - ticker\n        - to\n        - amount\n        - passphrase\n    CreateTransactionRequestDTO:\n      type: object\n      properties:\n        to:\n          type: string\n          description: 트랜잭션을 보낼 스마트 컨트랙트 주소\n          example: '0xc10f954e2be747e1d9d47948b2c15e5b71c5d9c8'\n        value:\n          type: string\n          description: 트랜잭션에 담을 암호화폐의 양\n          example: '0'\n        data:\n          type: string\n          description: 트랜잭션에 담을 데이터\n          example: '0x0'\n        passphrase:\n          type: string\n          description: 지갑의 비밀번호\n          example: passphrase\n        gasPrice:\n          type: string\n          description: \u003e-\n            트랜잭션에 사용할 gas price (단위: wei) null일 경우, Henesis가 자동으로 5분 안에 채굴될 수 있는\n            값으로 설정합니다.\n          example: '10000000000'\n        gasLimit:\n          type: string\n          description: 트랜잭션에 사용할 gas limit. null일 경우, Henesis가 자동으로 설정합니다.\n          example: '500000'\n        metadata:\n          type: string\n          description: 기타 정보 기록용 메타 데이터 (255자 제한)\n          example: metadata\n      required:\n        - to\n        - data\n        - passphrase\n    ReplaceTransactionRequestDTO:\n      type: object\n      properties:\n        gasPrice:\n          type: string\n          description: \u003e-\n            트랜잭션에 사용할 gas price (단위: wei) null일 경우, Henesis가 자동으로 5분 안에 채굴될 수 있는\n            값으로 설정합니다.\n          example: '8000000000'\n    Target:\n      type: object\n      properties:\n        coinId:\n          type: number\n          description: Henesis에서 부여한 Coin의 ID\n          example: 11\n        userWalletId:\n          type: string\n          description: 사용자 지갑 ID\n          example: c2bd6506cb56a6baaff32653ac77ef49\n      required:\n        - coinId\n        - userWalletId\n    CreateFlushRequestDTO:\n      type: object\n      properties:\n        targets:\n          description: 집금할 대상의 목록\n          example: \u0026ref_2\n            - coinId: 11\n              userWalletId: c2bd6506cb56a6baaff32653ac77ef49\n          type: array\n          items:\n            $ref: '#/components/schemas/Target'\n        gasPrice:\n          type: string\n          description: \u003e-\n            트랜잭션에 사용할 gas price 입니다. (단위: peb, jager) null일 경우, Henesis가 자동으로 5분\n            안에 채굴될 수 있는 값으로 설정합니다.\n          example: '8000000000'\n        gasLimit:\n          type: string\n          description: 트랜잭션에 사용할 gas limit 입니다. null일 경우, Henesis가 자동으로 설정합니다.\n          example: '10000000000'\n        metadata:\n          type: string\n          description: 기타 정보 기록용 메타 데이터 (255자 제한)\n          example: metadata\n      required:\n        - targets\n    UserWalletDTO:\n      type: object\n      properties:\n        id:\n          type: string\n          description: 지갑 ID\n          example: ae40b1b3dd953e5592c21e58be30d807\n        name:\n          type: string\n          description: 지갑 이름\n          example: ethereum-wallet\n        address:\n          type: string\n          description: 지갑 주소\n          example: '0xdde12e85d7f5d0003eff13f7a3cf6068b5a41454'\n        blockchain:\n          type: string\n          description: 메인넷 종류\n          example: ETHEREUM\n          enum: *ref_0\n        createdAt:\n          type: string\n          description: '지갑 생성 시간 (형식: ms, UNIX time)'\n          example: '1612411568760'\n        updatedAt:\n          type: string\n          description: '지갑 정보 수정 시간 (단위: ms, UNIX time)'\n          example: '1612411724023'\n        status:\n          type: string\n          description: 지갑 상태\n          example: ACTIVE\n          enum: *ref_1\n        whitelistActivated:\n          type: boolean\n          description: 출금 주소 화이트리스팅의 활성화 유무\n          example: false\n        version:\n          type: string\n          description: 컨트랙트 버전\n          example: v4\n      required:\n        - id\n        - name\n        - address\n        - blockchain\n        - createdAt\n        - updatedAt\n        - status\n    GetManyResponseForUserWalletDTO:\n      type: object\n      properties:\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/UserWalletDTO'\n        pagination:\n          $ref: '#/components/schemas/PaginationMetadata'\n      required:\n        - results\n    CreateUserWalletRequestDTO:\n      type: object\n      properties:\n        name:\n          type: string\n          description: 지갑 이름\n          example: userWalletName\n        passphrase:\n          type: string\n          description: 지갑 비밀번호\n          example: passphrase\n        gasPrice:\n          type: string\n          description: '트랜잭션에 사용할 gas price (단위: wei, peb)'\n          example: '0x1'\n        salt:\n          type: string\n          description: 지갑 생성에 사용되는 난수\n          example: salt\n      required:\n        - name\n        - passphrase\n    RetryCreateUserWalletRequestDTO:\n      type: object\n      properties:\n        gasPrice:\n          type: string\n          description: |-\n            트랜잭션에 사용할 gas price (단위: wei, peb)\n            null일 경우, Henesis가 자동으로 5분 안에 채굴될 수 있는 값으로 설정합니다.\n          example: '0x1'\n    TransferNftRequestDTO:\n      type: object\n      properties:\n        nftId:\n          type: number\n          description: 출금하고자 하는 NFT 컨트랙트의 ID\n          example: 1\n        tokenOnchainId:\n          type: string\n          description: 출금하고자 하는 토큰의 id\n          example: '3'\n        to:\n          type: string\n          description: 출금 목적 주소\n          example: '0xab28d146e860e0b132695c941f706d783a158345'\n        passphrase:\n          type: string\n          description: 지갑의 비밀번호\n          example: passphrase\n        gasPrice:\n          type: string\n          description: \u003e-\n            트랜잭션에 사용할 gas price (단위: wei, peb, jager) null일 경우, Henesis가 자동으로 5분\n            안에 채굴될 수 있는 값으로 설정합니다.\n          example: '8000000000'\n        gasLimit:\n          type: string\n          description: 트랜잭션에 사용할 gas limit. null일 경우, Henesis가 자동으로 설정합니다.\n          example: '500000'\n        metadata:\n          type: string\n          description: 기타 정보 기록용 메타 데이터 (255자 제한)\n          example: metadata\n      required:\n        - nftId\n        - tokenOnchainId\n        - to\n        - passphrase\n    NftTarget:\n      type: object\n      properties:\n        nftId:\n          type: number\n          description: 집금하고자 하는 NFT 컨트랙트의 ID\n          example: 11\n        userWalletId:\n          type: string\n          description: 사용자 지갑 ID\n          example: c2bd6506cb56a6baaff32653ac77ef49\n      required:\n        - nftId\n        - userWalletId\n    CreateNftFlushRequestDTO:\n      type: object\n      properties:\n        targets:\n          description: 집금할 대상의 목록\n          example: *ref_2\n          type: array\n          items:\n            $ref: '#/components/schemas/NftTarget'\n        gasPrice:\n          type: string\n          description: \u003e-\n            트랜잭션에 사용할 gas price 입니다. (단위: wei) null일 경우, Henesis가 자동으로 5분 안에 채굴될\n            수 있는 값으로 설정합니다.\n          example: '8000000000'\n        gasLimit:\n          type: string\n          description: 트랜잭션에 사용할 gas limit 입니다. null일 경우, Henesis가 자동으로 설정합니다.\n          example: '10000000000'\n        metadata:\n          type: string\n          description: 기타 정보 기록용 메타 데이터 (255자 제한)\n          example: metadata\n      required:\n        - targets\n    NftDTO:\n      type: object\n      properties:\n        id:\n          type: number\n          description: NFT 컨트랙트의 id\n          example: 11\n        name:\n          type: string\n          description: NFT 컨트랙트의 이름\n          example: Dave Starbelly\n        symbol:\n          type: string\n          description: NFT 컨트랙트의 심볼\n          example: Dave Starbelly\n        address:\n          type: string\n          description: NFT 컨트랙트의 주소\n          example: '0xdd00383e5a51166bba3e96d84c14a36d72e6c128'\n      required:\n        - id\n        - name\n        - symbol\n        - address\n    NftBalanceDTO:\n      type: object\n      properties:\n        nft:\n          description: NFT 컨트랙트\n          example: \u0026ref_3\n            id: 11\n            name: Dave Starbelly\n            symbol: '1'\n            address: '0xdd00383e5a51166bba3e96d84c14a36d72e6c128'\n          allOf:\n            - $ref: '#/components/schemas/NftDTO'\n        tokenOnchainId:\n          type: string\n          description: 토큰의 ID\n          example: '1'\n        tokenUri:\n          type: string\n          description: 토큰의 URI\n          example: https://opensea-creatures-api.herokuapp.com/api/creature/3\n        tokenMetadata:\n          type: object\n          description: 토큰에 정의된 metadata\n          example:\n            description: Friendly OpenSea Creature that enjoys long swims in the ocean.\n            external_url: https://openseacreatures.io/3\n            image: \u003e-\n              https://storage.googleapis.com/opensea-prod.appspot.com/puffs/3.png\n            name: Dave Starbelly\n            attributes:\n              - trait_type: Base\n                value: Starfish\n              - trait_type: Eyes\n                value: Big\n        masterWalletId:\n          type: string\n          description: 마스터 지갑 id\n          example: 532d994e923817013aff23c6dc1ae766\n        userWalletId:\n          type: string\n          description: 유저 지갑 id\n          example: 4daf51ef18e3a1ce1148b33a6a1b1589\n        isWithdrawalPending:\n          type: boolean\n          description: 출금 중 여부\n          example: false\n      required:\n        - nft\n        - tokenOnchainId\n        - tokenUri\n        - tokenMetadata\n        - masterWalletId\n        - userWalletId\n        - isWithdrawalPending\n    GetManyResponseForNftBalanceDTO:\n      type: object\n      properties:\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/NftBalanceDTO'\n        pagination:\n          $ref: '#/components/schemas/PaginationMetadata'\n      required:\n        - results\n    NftTokenDTO:\n      type: object\n      properties:\n        name:\n          type: string\n          description: NFT 토큰의 이름\n          example: Haechi 1st NFT\n        onchainId:\n          type: string\n          description: NFT 토큰의 온체인 ID\n          example: '1'\n        uri:\n          type: string\n          description: NFT 토큰의 URI\n          example: https://opensea-creatures-api.herokuapp.com/api/creature/3\n        externalUrl:\n          type: string\n          description: NFT 토큰 메타데이터 중 하나인 외부 주소\n          example: https://openseacreatures.io/3\n        imageUrl:\n          type: string\n          description: NFT 토큰의 이미지 주소\n          example: https://storage.googleapis.com/opensea-prod.appspot.com/puffs/3.png\n        metadata:\n          type: object\n          description: NFT 토큰의 메타데이터\n          example: \u0026ref_4\n            description: Friendly OpenSea Creature that enjoys long swims in the ocean.\n            external_url: https://openseacreatures.io/3\n            image: \u003e-\n              https://storage.googleapis.com/opensea-prod.appspot.com/puffs/3.png\n            name: Dave Starbelly\n            attributes:\n              - trait_type: Base\n                value: Starfish\n              - trait_type: Eyes\n                value: Big\n      required:\n        - name\n        - onchainId\n        - uri\n        - externalUrl\n        - imageUrl\n        - metadata\n    NftTransferDTO:\n      type: object\n      properties:\n        id:\n          type: number\n          description: NFT 입출금 내역의 ID\n          example: 375031\n        from:\n          type: string\n          description: 출금 주소\n          example: '0x1f10ecbd971eab345ea19e96dc237b1fbd63de96'\n        to:\n          type: string\n          description: 입금 주소\n          example: '0xdd00383e5a51166bba3e96d84c14a36d72e6c128'\n        status:\n          type: string\n          description: 트랜잭션 상태\n          example: CONFIRMED\n          enum:\n            - PENDING_APPROVAL\n            - REJECTED\n            - REQUESTED\n            - PENDING\n            - FAILED\n            - REVERTED\n            - REPLACED\n            - MINED\n            - CONFIRMED\n        orgId:\n          type: string\n          description: 지갑이 속한 팀(Organization)의 ID\n          example: 31cafc79bd437e1b8e7b8209e399d3f3\n        walletId:\n          type: string\n          description: 입출금 지갑 ID\n          example: ae40b1b3dd953e5592c21e58be30d807\n        depositAddressId:\n          type: string\n          description: 입금 주소 ID\n          example: ae40b1b3dd953e5592c21e58be30d807\n        nft:\n          description: NFT 정보\n          example: *ref_3\n          allOf:\n            - $ref: '#/components/schemas/NftDTO'\n        token:\n          description: NFT 토큰 정보\n          example: \u0026ref_27\n            name: Haechi 1st NFT\n            onchainId: '1'\n            uri: https://opensea-creatures-api.herokuapp.com/api/creature/3\n            externalUrl: https://openseacreatures.io/3\n            imageUrl: \u003e-\n              https://storage.googleapis.com/opensea-prod.appspot.com/puffs/3.png\n            metadata: *ref_4\n          allOf:\n            - $ref: '#/components/schemas/NftTokenDTO'\n        transferType:\n          type: string\n          description: 입출금 타입\n          example: WITHDRAWAL\n          enum:\n            - WITHDRAWAL\n            - DEPOSIT\n        transactionId:\n          type: string\n          description: \u003e-\n            트랜잭션 ID (Henesis Wallet에서 부여하는 트랜잭션의 고유 ID입니다. 온체인상 트랜잭션 해시와 다른\n            개념입니다.)\n          example: 8c87c578d7568edc156f831cf03c3ff0\n        transactionHash:\n          type: string\n          description: 트랜잭션 해시\n          example: '0xef76a243fa224f723922a1b067dd916fb1b2568aff292d2d1d183a807804922f'\n        createdAt:\n          type: string\n          description: '트랜잭션 생성 시간 (형식: ms, UNIX time)'\n          example: '1612411568760'\n        updatedAt:\n          type: string\n          description: '트랜잭션 상태가 마지막으로 변경된 시간 (형식: ms, UNIX time)'\n          example: '1612411724023'\n        name:\n          type: string\n          description: 해당 내역의 지갑 또는 입금 주소의 이름\n          example: ETH 실비 정산\n        metadata:\n          type: string\n          description: 기타 정보 기록용 메타 데이터 (255자 제한)\n          example: metadata\n      required:\n        - id\n        - from\n        - to\n        - status\n        - orgId\n        - walletId\n        - depositAddressId\n        - nft\n        - token\n        - transferType\n        - transactionId\n        - transactionHash\n        - createdAt\n        - updatedAt\n        - name\n    GetManyResponseForNftTransferDTO:\n      type: object\n      properties:\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/NftTransferDTO'\n        pagination:\n          $ref: '#/components/schemas/PaginationMetadata'\n      required:\n        - results\n    NftNotFoundException:\n      type: object\n      properties:\n        message:\n          type: string\n          description: API 에러 메시지\n          example: nft '2' does not exist\n        code:\n          type: number\n          description: 헤네시스 API 에러 코드\n          example: 4000\n      required:\n        - message\n        - code\n    SyncMetadataRequestDTO:\n      type: object\n      properties:\n        tokenOnchainId:\n          type: string\n          description: 토큰의 ID\n          example: id\n      required:\n        - tokenOnchainId\npaths:\n  /api/v3/polygon/coins:\n    get:\n      operationId: polygon-CoinsController_getCoins\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 전체 코인 목록 조회하기\n      description: Henesis Wallet에서 지원하는 모든 가상자산(토큰, 코인)을 조회합니다.\n      parameters:\n        - \u0026ref_5\n          name: X-Henesis-Secret\n          in: header\n          description: 대시보드를 통해 발급 받은 API Secret을 입력합니다.\n          schema:\n            type: string\n        - \u0026ref_6\n          name: Authorization\n          in: header\n          description: 대시보드를 통해 발급 받은 Access Token을 입력합니다. e.g. Bearer \u003cTOKEN\\\u003e\n          schema:\n            example: Bearer \u003cTOKEN\u003e\n            default: 'Bearer '\n            type: string\n        - name: flag\n          required: true\n          in: query\n          schema:\n            type: boolean\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/CoinDTO'\n          description: ''\n        '401': \u0026ref_8\n          description: 인증이 실패했을 때 발생하는 에러입니다.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/InvalidAccessTokenException'\n                  - $ref: '#/components/schemas/AccessTokenNotProvidedException'\n                  - $ref: '#/components/schemas/InvalidAccessIpException'\n              examples:\n                InvalidAccessTokenException:\n                  value: \u0026ref_9\n                    message: expired or invalid access token and signature\n                    code: 4001\n                AccessTokenNotProvidedException:\n                  value: \u0026ref_10\n                    message: access token not provided\n                    code: 4001\n                InvalidAccessIpException:\n                  value: \u0026ref_11\n                    message: ip '106.101.128.133' is not allowed\n                    code: 4008\n      tags:\n        - coins\n  /api/v3/polygon/coins/{ticker}:\n    get:\n      operationId: polygon-CoinsController_getCoin\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 코인 정보 조회하기\n      description: Henesis Wallet에서 지원하는 특정 가상자산(토큰, 코인)을 조회합니다.\n      parameters:\n        - *ref_5\n        - *ref_6\n        - name: ticker\n          required: true\n          in: path\n          description: 코인의 기호\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CoinDTO'\n              example:\n                id: 11\n                name: ethereum\n                ticker: ETH\n                address: '0xdd00383e5a51166bba3e96d84c14a36d72e6c128'\n                description: 이더리움\n                decimals: 18\n                blockchain: ETHEREUM\n                attributes: *ref_7\n          description: ''\n        '400':\n          description: 코인 정보가 없을 때 response 입니다\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NoCoinException'\n              example:\n                message: there is no '2' coin at 'ETHEREUM'\n                code: 4000\n        '401': *ref_8\n      tags:\n        - coins\n  /api/v3/polygon/contract-calls:\n    get:\n      operationId: polygon-ContractCallsController_getCallEvents\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 스마트 컨트랙트 호출 내역 조회하기\n      description: 내가 발생시킨 스마트 컨트랙트 호출 내역을 조회합니다.\n      parameters:\n        - name: X-Henesis-Secret\n          in: header\n          description: 대시보드를 통해 발급 받은 API Secret을 입력합니다.\n          schema:\n            type: string\n        - name: Authorization\n          in: header\n          description: 대시보드를 통해 발급 받은 Access Token을 입력합니다. e.g. Bearer \u003cTOKEN\\\u003e\n          schema:\n            example: Bearer \u003cTOKEN\u003e\n            default: 'Bearer '\n            type: string\n        - name: walletId\n          required: false\n          in: query\n          description: 지갑 ID\n          schema:\n            type: string\n        - name: transactionId\n          required: false\n          in: query\n          description: \u003e-\n            트랜잭션 ID (Henesis Wallet에서 부여하는 트랜잭션의 고유 ID입니다. 온체인상 트랜잭션 해시와 다른\n            개념입니다.)\n          schema:\n            type: string\n        - name: transactionHash\n          required: false\n          in: query\n          description: 트랜잭션 해시\n          schema:\n            type: string\n        - name: status\n          required: false\n          in: query\n          description: 트랜잭션 상태\n          schema:\n            type: string\n        - name: ticker\n          required: false\n          in: query\n          description: 코인의 기호\n          schema:\n            type: string\n        - name: updatedAtGte\n          required: false\n          in: query\n          description: 'updatedAt이 해당 시점과 같거나 그보다 이후인 트랜잭션 조회 (형식: ms, UNIX time) '\n          schema:\n            type: string\n        - name: updatedAtLt\n          required: false\n          in: query\n          description: 'updatedAt이 해당 시점보다 이전인 트랜잭션 조회 (형식: ms, UNIX time) '\n          schema:\n            type: string\n        - name: size\n          required: false\n          in: query\n          description: '한 번의 요청으로 반환되는 응답의 개수 (기본값: 15)'\n          schema:\n            type: number\n        - name: page\n          required: false\n          in: query\n          description: 몇 번째 페이지를 조회할 것인지? (페이지는 0부터 시작)\n          schema:\n            type: number\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetManyResponseForContractCallsDTO'\n              example:\n                pagination: \u0026ref_12\n                  nextUrl: http://localhost:3000/api/v3/ethereum/transfers?page=2\n                  previousUrl: http://localhost:3000/api/v3/ethereum/transfers?page=1\n                  totalCount: 5\n                results:\n                  - id: '375031'\n                    data: \u003e-\n                      0xa9059cbb0000000000000000000000001f10ecbd971eab345ea19e96dc237b1fbd63de9600000000000000000000000000000000000000000000000000000000000f4240\n                    status: CONFIRMED\n                    walletId: ae40b1b3dd953e5592c21e58be30d807\n                    orgId: 31cafc79bd437e1b8e7b8209e399d3f3\n                    transactionId: 8c87c578d7568edc156f831cf03c3ff0\n                    toAddress: '0xdd00383e5a51166bba3e96d84c14a36d72e6c128'\n                    fromAddress: '0x1f10ecbd971eab345ea19e96dc237b1fbd63de96'\n                    transactionHash: \u003e-\n                      0xef76a243fa224f723922a1b067dd916fb1b2568aff292d2d1d183a807804922f\n                    createdAt: '1612411568760'\n                    updatedAt: '1612411724023'\n                    blockchain: ETHEREUM\n                    metadata: metadata\n          description: ''\n        '400':\n          description: 올바르지 않은 트랜잭션 상태(status)로 요청하면 발생합니다.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidStatusException'\n              example: \u0026ref_13\n                message: '''status'' is invalid: not supported event status'\n                code: 4001\n        '401':\n          description: 인증이 실패했을 때 발생하는 에러입니다.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/InvalidAccessTokenException'\n                  - $ref: '#/components/schemas/AccessTokenNotProvidedException'\n                  - $ref: '#/components/schemas/InvalidAccessIpException'\n              examples:\n                InvalidAccessTokenException:\n                  value: *ref_9\n                AccessTokenNotProvidedException:\n                  value: *ref_10\n                InvalidAccessIpException:\n                  value: *ref_11\n      tags:\n        - contract-calls\n  /api/v3/polygon/transfers:\n    get:\n      operationId: polygon-TransfersController_getTransfers\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 전체 입출금 목록 조회하기\n      description: 모든 지갑의 가상자산 입출금 내역을 조회합니다.\n      parameters:\n        - name: X-Henesis-Secret\n          in: header\n          description: 대시보드를 통해 발급 받은 API Secret을 입력합니다.\n          schema:\n            type: string\n        - name: Authorization\n          in: header\n          description: 대시보드를 통해 발급 받은 Access Token을 입력합니다. e.g. Bearer \u003cTOKEN\\\u003e\n          schema:\n            example: Bearer \u003cTOKEN\u003e\n            default: 'Bearer '\n            type: string\n        - name: ticker\n          required: false\n          in: query\n          description: 코인의 기호\n          schema:\n            type: string\n        - name: walletId\n          required: false\n          in: query\n          description: 단일 지갑(혹은 입금 주소)을 조회하고 싶은 경우, 해당 지갑 ID를 입력합니다.\n          schema:\n            type: string\n        - name: masterWalletId\n          required: false\n          in: query\n          description: 마스터 지갑 ID (해당 마스터 지갑을 포함하여 하위의 사용자 지갑 입출금 내역도 함께 조회합니다.)\n          schema:\n            type: string\n        - name: transactionId\n          required: false\n          in: query\n          description: \u003e-\n            트랜잭션 ID (Henesis Wallet에서 부여하는 트랜잭션의 고유 ID입니다. 온체인상 트랜잭션 해시와 다른\n            개념입니다.)\n          schema:\n            type: string\n        - name: transactionHash\n          required: false\n          in: query\n          description: 트랜잭션 해시\n          schema:\n            type: string\n        - name: status\n          required: false\n          in: query\n          description: 트랜잭션 상태\n          schema:\n            type: string\n        - name: transferType\n          required: false\n          in: query\n          description: 트랜잭션의 종류(입금, 출금)\n          schema:\n            type: string\n        - name: updatedAtGte\n          required: false\n          in: query\n          description: 'updatedAt이 해당 시점과 같거나 그보다 이후인 트랜잭션 조회 (형식: ms, UNIX time) '\n          schema:\n            type: string\n        - name: updatedAtLt\n          required: false\n          in: query\n          description: 'updatedAt이 해당 시점보다 이전인 트랜잭션 조회 (형식: ms, UNIX time) '\n          schema:\n            type: string\n        - name: size\n          required: false\n          in: query\n          description: '한 번의 요청으로 반환되는 응답의 개수 (기본값: 15)'\n          schema:\n            type: number\n        - name: page\n          required: false\n          in: query\n          description: 몇 번째 페이지를 조회할 것인지? (페이지는 0부터 시작)\n          schema:\n            type: number\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetManyResponseForTransferDTO'\n              example:\n                pagination: *ref_12\n                results:\n                  - id: 375031\n                    from: '0x1f10ecbd971eab345ea19e96dc237b1fbd63de96'\n                    to: '0xdd00383e5a51166bba3e96d84c14a36d72e6c128'\n                    amount: '1000000000'\n                    status: CONFIRMED\n                    orgId: 31cafc79bd437e1b8e7b8209e399d3f3\n                    decimals: 18\n                    walletId: ae40b1b3dd953e5592c21e58be30d807\n                    depositAddressId: ae40b1b3dd953e5592c21e58be30d807\n                    ticker: USDT\n                    transferType: WITHDRAWAL\n                    transactionId: 8c87c578d7568edc156f831cf03c3ff0\n                    transactionHash: \u003e-\n                      0xef76a243fa224f723922a1b067dd916fb1b2568aff292d2d1d183a807804922f\n                    hopTransactionId: 6f831cf03c3ff08c87c578d7568edc15\n                    hopTransactionHash: \u003e-\n                      0x60603c815f0ba0ad6b7f2ae398bd7cb9fe71347f984e32453fe4fe53f255dfd3\n                    createdAt: '1612411568760'\n                    updatedAt: '1612411724023'\n                    name: ETH 실비 정산\n                    metadata: metadata\n          description: ''\n        '400':\n          description: 올바르지 않은 트랜잭션 상태(status)로 요청하면 발생합니다.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidStatusException'\n              example: *ref_13\n        '401':\n          description: 인증이 실패했을 때 발생하는 에러입니다.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/InvalidAccessTokenException'\n                  - $ref: '#/components/schemas/AccessTokenNotProvidedException'\n                  - $ref: '#/components/schemas/InvalidAccessIpException'\n              examples:\n                InvalidAccessTokenException:\n                  value: *ref_9\n                AccessTokenNotProvidedException:\n                  value: *ref_10\n                InvalidAccessIpException:\n                  value: *ref_11\n      tags:\n        - transfers\n  /api/v3/polygon/fee-wallet/balance:\n    get:\n      operationId: polygon-FeeWalletController_getBalance\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 수수료 지갑 잔고 조회하기\n      description: 수수료 지갑의 잔액을 조회합니다.\n      parameters:\n        - name: X-Henesis-Secret\n          in: header\n          description: 대시보드를 통해 발급 받은 API Secret을 입력합니다.\n          schema:\n            type: string\n        - name: Authorization\n          in: header\n          description: 대시보드를 통해 발급 받은 Access Token을 입력합니다. e.g. Bearer \u003cTOKEN\\\u003e\n          schema:\n            example: Bearer \u003cTOKEN\u003e\n            default: 'Bearer '\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BalanceDTO'\n              example:\n                coinId: 11\n                amount: '1000000000000'\n                spendableAmount: '1000000000000'\n                name: ethereum\n                ticker: ETH\n                decimals: 18\n          description: ''\n        '401':\n          description: 인증이 실패했을 때 발생하는 에러입니다.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/InvalidAccessTokenException'\n                  - $ref: '#/components/schemas/AccessTokenNotProvidedException'\n                  - $ref: '#/components/schemas/InvalidAccessIpException'\n              examples:\n                InvalidAccessTokenException:\n                  value: *ref_9\n                AccessTokenNotProvidedException:\n                  value: *ref_10\n                InvalidAccessIpException:\n                  value: *ref_11\n      tags:\n        - fee-wallet\n  /api/v3/polygon/transactions/{transactionId}:\n    get:\n      operationId: polygon-TransactionsController_getTransaction\n      summary: 개별 트랜잭션 조회하기\n      description: 내가 발생시킨 특정 트랜잭션의 정보를 조회합니다.\n      parameters:\n        - \u0026ref_14\n          name: X-Henesis-Secret\n          in: header\n          description: 대시보드를 통해 발급 받은 API Secret을 입력합니다.\n          schema:\n            type: string\n        - \u0026ref_15\n          name: Authorization\n          in: header\n          description: 대시보드를 통해 발급 받은 Access Token을 입력합니다. e.g. Bearer \u003cTOKEN\\\u003e\n          schema:\n            example: Bearer \u003cTOKEN\u003e\n            default: 'Bearer '\n            type: string\n        - name: transactionId\n          required: true\n          in: path\n          description: \u003e-\n            트랜잭션 ID (Henesis Wallet에서 부여하는 트랜잭션의 고유 ID입니다. 온체인상 트랜잭션 해시와 다른\n            개념입니다.)\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransactionDTO'\n              example: \u0026ref_16\n                id: b549bfaaa74d1c4244ecc655738b1984\n                blockchain: ETHEREUM\n                hash: \u003e-\n                  0x8a1ef722a2884d53a86874c8ba19bcf267bb0b8a81da00c14ddc6457cf1eaf96\n                error: 'null'\n                status: CONFIRMED\n                fee: '10000000'\n                hopAddress: '0x1AA2705a26452cC22430F31A5c85974bBEDDe5a5'\n                createdAt: '1614582928222'\n                updatedAt: '1612411724023'\n          description: ''\n        '400':\n          description: transaction id가 없을 때 발생합니다\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransactionIdNotFoundException'\n              example:\n                message: transaction id '1' does not exists\n                code: 4000\n        '401': \u0026ref_17\n          description: 인증이 실패했을 때 발생하는 에러입니다.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/InvalidAccessTokenException'\n                  - $ref: '#/components/schemas/AccessTokenNotProvidedException'\n                  - $ref: '#/components/schemas/InvalidAccessIpException'\n              examples:\n                InvalidAccessTokenException:\n                  value: *ref_9\n                AccessTokenNotProvidedException:\n                  value: *ref_10\n                InvalidAccessIpException:\n                  value: *ref_11\n      tags:\n        - transactions\n  /api/v3/polygon/transactions:\n    get:\n      operationId: polygon-TransactionsController_getTransactions\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 트랜잭션 목록 조회하기\n      description: 트랜잭션 목록을 조회합니다.\n      parameters:\n        - *ref_14\n        - *ref_15\n        - name: address\n          required: false\n          in: query\n          description: 트랜잭션 주소\n          schema:\n            type: string\n        - name: toAddress\n          required: false\n          in: query\n          description: 받는 주소\n          schema:\n            type: string\n        - name: fromAddress\n          required: false\n          in: query\n          description: 보내는 주소\n          schema:\n            type: string\n        - name: transactionHash\n          required: false\n          in: query\n          description: 트랜잭션 해시\n          schema:\n            type: string\n        - name: start\n          required: false\n          in: query\n          description: 해당 시점 이후의 트랜잭션 조회\n          schema:\n            type: string\n        - name: end\n          required: false\n          in: query\n          description: 해당 시점 이전의 트랜잭션 조회\n          schema:\n            type: string\n        - name: status\n          required: false\n          in: query\n          description: 트랜잭션 상태\n          schema:\n            type: string\n        - name: statuses\n          required: false\n          in: query\n          description: 트랜잭션 상태\n          schema:\n            type: array\n            items:\n              type: string\n        - name: types\n          required: false\n          in: query\n          description: 트랜잭션 종류\n          schema:\n            type: array\n            items:\n              type: string\n        - name: keyId\n          required: false\n          in: query\n          description: 키 ID\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetManyResponseForTransactionDTO'\n              example:\n                pagination: *ref_12\n                results:\n                  - *ref_16\n          description: ''\n        '401': *ref_17\n      tags:\n        - transactions\n  /api/v3/polygon/wallets:\n    get:\n      operationId: polygon-WalletsController_getMasterWallets\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 전체 마스터 지갑 목록 조회하기\n      description: 모든 지갑의 목록을 조회합니다.\n      parameters:\n        - \u0026ref_18\n          name: X-Henesis-Secret\n          in: header\n          description: 대시보드를 통해 발급 받은 API Secret을 입력합니다.\n          schema:\n            type: string\n        - \u0026ref_19\n          name: Authorization\n          in: header\n          description: 대시보드를 통해 발급 받은 Access Token을 입력합니다. e.g. Bearer \u003cTOKEN\\\u003e\n          schema:\n            example: Bearer \u003cTOKEN\u003e\n            default: 'Bearer '\n            type: string\n        - name: name\n          required: false\n          in: query\n          description: 지갑 이름\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/MasterWalletDTO'\n          description: ''\n        '401': \u0026ref_21\n          description: 인증이 실패했을 때 발생하는 에러입니다.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/InvalidAccessTokenException'\n                  - $ref: '#/components/schemas/AccessTokenNotProvidedException'\n                  - $ref: '#/components/schemas/InvalidAccessIpException'\n              examples:\n                InvalidAccessTokenException:\n                  value: *ref_9\n                AccessTokenNotProvidedException:\n                  value: *ref_10\n                InvalidAccessIpException:\n                  value: *ref_11\n      tags:\n        - wallets\n  /api/v3/polygon/wallets/{masterWalletId}:\n    get:\n      operationId: polygon-WalletsController_getMasterWallet\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 마스터 지갑 정보 조회하기\n      description: 특정 마스터 지갑의 정보를 조회합니다.\n      parameters:\n        - *ref_18\n        - *ref_19\n        - name: masterWalletId\n          required: true\n          in: path\n          description: 마스터 지갑 ID\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WalletDTO'\n              example: \u0026ref_23\n                id: ae40b1b3dd953e5592c21e58be30d807\n                name: ethereum-wallet\n                address: '0xdde12e85d7f5d0003eff13f7a3cf6068b5a41454'\n                blockchain: ETHEREUM\n                createdAt: '1612411568760'\n                updatedAt: '1612411724023'\n                status: ACTIVE\n                whitelistActivated: false\n                version: v4\n                accountKey: *ref_20\n                encryptionKey: \u003e-\n                  f0880e48251dd2f8574a8c8a4d65311030185d5e451e8a474b89c2b473b5d953\n          description: ''\n        '400':\n          description: 해당하는 id의 지갑이 없을 때 발생합니다.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WalletNotFoundException'\n              example: \u0026ref_22\n                message: wallet 'c27732256a1f8d45df5aec31ba7ef85cd' does not exist\n                code: 4000\n        '401': *ref_21\n      tags:\n        - wallets\n  /api/v3/polygon/wallets/{masterWalletId}/balance:\n    get:\n      operationId: polygon-WalletsController_getMasterWalletBalance\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 마스터 지갑 잔고 조회하기\n      description: 특정 마스터 지갑의 잔고를 조회합니다.\n      parameters:\n        - *ref_18\n        - *ref_19\n        - name: masterWalletId\n          required: true\n          in: path\n          description: 마스터 지갑 ID\n          schema:\n            type: string\n        - name: ticker\n          required: false\n          in: query\n          description: 코인의 기호\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/BalanceDTO'\n          description: ''\n        '400':\n          description: 해당하는 id의 지갑이 없을 때 발생합니다.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WalletNotFoundException'\n              example: *ref_22\n        '401': *ref_21\n      tags:\n        - wallets\n  /api/v3/polygon/wallets/{masterWalletId}/name:\n    patch:\n      operationId: polygon-WalletsController_changeMasterWalletName\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 마스터 지갑 이름 변경하기\n      description: 특정 마스터 지갑의 이름을 변경합니다.\n      parameters:\n        - *ref_18\n        - *ref_19\n        - name: masterWalletId\n          required: true\n          in: path\n          description: 마스터 지갑 ID\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ChangeWalletNameRequestDTO'\n      responses:\n        '204':\n          description: ''\n        '400':\n          description: 다음과 같은 bad request 에러가 발생할 수 있습니다.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/WalletNotFoundException'\n                  - $ref: '#/components/schemas/NoWalletNameException'\n              examples:\n                WalletNotFoundException:\n                  value: *ref_22\n                NoWalletNameException:\n                  value: \u0026ref_25\n                    message: wallet name should not be empty\n                    code: 4000\n        '401': *ref_21\n      tags:\n        - wallets\n  /api/v3/polygon/wallets/{masterWalletId}/transfer:\n    post:\n      operationId: polygon-WalletsController_sendMasterWalletCoin\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 마스터 지갑에서 코인 전송하기\n      description: 특정 마스터 지갑에서 가상자산을 송금합니다.\n      parameters:\n        - *ref_18\n        - *ref_19\n        - name: masterWalletId\n          required: true\n          in: path\n          description: 마스터 지갑 ID\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SendCoinRequestDTO'\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransactionDTO'\n              example: *ref_16\n          description: ''\n        '400':\n          description: 해당하는 id의 지갑이 없을 때 발생합니다.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WalletNotFoundException'\n              example: *ref_22\n        '401': *ref_21\n      tags:\n        - wallets\n  /api/v3/polygon/wallets/{masterWalletId}/contract-call:\n    post:\n      operationId: polygon-WalletsController_sendMasterWalletContractCall\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 마스터 지갑에서 스마트 컨트랙트 호출하기\n      description: 특정 마스터 지갑에서 일반적인 스마트 컨트랙트 함수를 호출하는 트랜잭션을 발생시킵니다.\n      parameters:\n        - *ref_18\n        - *ref_19\n        - name: masterWalletId\n          required: true\n          in: path\n          description: 마스터 지갑 ID\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateTransactionRequestDTO'\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransactionDTO'\n              example: *ref_16\n          description: ''\n        '400':\n          description: 해당하는 id의 지갑이 없을 때 발생합니다.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WalletNotFoundException'\n              example: *ref_22\n        '401': *ref_21\n      tags:\n        - wallets\n  /api/v3/polygon/wallets/{masterWalletId}/transactions/{transactionId}/replace:\n    post:\n      operationId: polygon-WalletsController_replaceMasterWalletTransaction\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 트랜잭션 교체\n      description: 마스터 지갑에서 발생한 트랜잭션을 교체합니다\n      parameters:\n        - *ref_18\n        - *ref_19\n        - name: masterWalletId\n          required: true\n          in: path\n          description: 마스터 지갑 ID\n          schema:\n            type: string\n        - name: transactionId\n          required: true\n          in: path\n          description: \u003e-\n            트랜잭션 ID (Henesis Wallet에서 부여하는 트랜잭션의 고유 ID입니다. 온체인상 트랜잭션 해시와 다른\n            개념입니다.)\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReplaceTransactionRequestDTO'\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransactionDTO'\n              example: \u0026ref_24\n                id: b549bfaaa74d1c4244ecc655738b1984\n                blockchain: POLYGON\n                hash: \u003e-\n                  0x8a1ef722a2884d53a86874c8ba19bcf267bb0b8a81da00c14ddc6457cf1eaf96\n                error: 'null'\n                status: CONFIRMED\n                fee: '10000000'\n                createdAt: '1614582928222'\n                updatedAt: '1612411724023'\n          description: ''\n        '400':\n          description: 해당하는 id의 지갑이 없을 때 발생합니다.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WalletNotFoundException'\n              example: *ref_22\n        '401': *ref_21\n      tags:\n        - wallets\n  /api/v3/polygon/wallets/{masterWalletId}/flush:\n    post:\n      operationId: polygon-WalletsController_flush\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 사용자 지갑 잔액을 모두 끌어오기\n      description: 여러 사용자 지갑의 특정 코인/토큰 잔액을 모두 상위의 마스터 지갑으로 끌어옵니다.\n      parameters:\n        - *ref_18\n        - *ref_19\n        - name: masterWalletId\n          required: true\n          in: path\n          description: 마스터 지갑 ID\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateFlushRequestDTO'\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransactionDTO'\n              example: *ref_16\n          description: ''\n        '400':\n          description: 해당하는 id의 지갑이 없을 때 발생합니다.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WalletNotFoundException'\n              example: *ref_22\n        '401': *ref_21\n      tags:\n        - wallets\n  /api/v3/polygon/wallets/{masterWalletId}/user-wallets:\n    get:\n      operationId: polygon-WalletsController_getUserWallets\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 전체 사용자 지갑 목록 조회하기\n      description: 특정 마스터 지갑에 속한 모든 사용자 지갑 목록을 조회합니다.\n      parameters:\n        - *ref_18\n        - *ref_19\n        - name: masterWalletId\n          required: true\n          in: path\n          schema:\n            type: string\n        - name: page\n          required: false\n          in: query\n          description: 몇 번째 페이지를 조회할 것인지? (페이지는 0부터 시작)\n          schema:\n            type: number\n        - name: size\n          required: false\n          in: query\n          description: '한 번의 요청으로 반환되는 응답의 개수 (기본값: 15)'\n          schema:\n            type: number\n        - name: sort\n          required: false\n          in: query\n          description: 결과 정렬 방식\n          schema:\n            type: string\n        - name: name\n          required: false\n          in: query\n          description: 지갑 이름\n          schema:\n            type: string\n        - name: address\n          required: false\n          in: query\n          description: 지갑 주소\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetManyResponseForUserWalletDTO'\n              example: *ref_23\n          description: ''\n        '401': *ref_21\n      tags:\n        - wallets\n    post:\n      operationId: polygon-WalletsController_createUserWallet\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 사용자 지갑 생성하기\n      description: 특정 마스터 지갑 하위에 새로운 사용자 지갑을 생성합니다.\n      parameters:\n        - *ref_18\n        - *ref_19\n        - name: masterWalletId\n          required: true\n          in: path\n          description: 마스터 지갑 ID\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateUserWalletRequestDTO'\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserWalletDTO'\n              example: *ref_23\n          description: ''\n        '401': *ref_21\n      tags:\n        - wallets\n  /api/v3/polygon/wallets/{masterWalletId}/user-wallets/{userWalletId}:\n    get:\n      operationId: polygon-WalletsController_getUserWallet\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 사용자 지갑 정보 조회하기\n      description: 특정 사용자 지갑의 정보를 조회합니다.\n      parameters:\n        - *ref_18\n        - *ref_19\n        - name: masterWalletId\n          required: true\n          in: path\n          description: 마스터 지갑 ID\n          schema:\n            type: string\n        - name: userWalletId\n          required: true\n          in: path\n          description: 사용자 지갑 ID\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WalletDTO'\n              example: *ref_23\n          description: ''\n        '400':\n          description: 해당하는 id의 지갑이 없을 때 발생합니다.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WalletNotFoundException'\n              example: *ref_22\n        '401': *ref_21\n      tags:\n        - wallets\n  /api/v3/polygon/wallets/{masterWalletId}/user-wallets/{userWalletId}/recreate:\n    post:\n      operationId: polygon-WalletsController_retryCreateUserWallet\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 사용자 지갑 생성 실패시 재시도하기\n      description: 특정 마스터 지갑 하위에 특정 사용자 지갑 생성 트랜잭션이 실패했을 때 재시도합니다.\n      parameters:\n        - *ref_18\n        - *ref_19\n        - name: masterWalletId\n          required: true\n          in: path\n          description: 마스터 지갑 ID\n          schema:\n            type: string\n        - name: userWalletId\n          required: true\n          in: path\n          description: 유저 지갑 ID\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RetryCreateUserWalletRequestDTO'\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransactionDTO'\n              example: *ref_24\n          description: ''\n        '401': *ref_21\n      tags:\n        - wallets\n  /api/v3/polygon/wallets/{masterWalletId}/user-wallets/{userWalletId}/balance:\n    get:\n      operationId: polygon-WalletsController_getUserWalletBalance\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 사용자 지갑 잔고 조회하기\n      description: 특정 사용자 지갑의 잔고를 조회합니다.\n      parameters:\n        - *ref_18\n        - *ref_19\n        - name: masterWalletId\n          required: true\n          in: path\n          description: 마스터 지갑 ID\n          schema:\n            type: string\n        - name: userWalletId\n          required: true\n          in: path\n          description: 사용자 지갑 ID\n          schema:\n            type: string\n        - name: ticker\n          required: false\n          in: query\n          description: 코인의 기호\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/BalanceDTO'\n          description: ''\n        '400':\n          description: 해당하는 id의 지갑이 없을 때 발생합니다.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WalletNotFoundException'\n              example: *ref_22\n        '401': *ref_21\n      tags:\n        - wallets\n  /api/v3/polygon/wallets/{masterWalletId}/user-wallets/{userWalletId}/name:\n    patch:\n      operationId: polygon-WalletsController_changeUserWalletName\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 사용자 지갑 이름 변경하기\n      description: 특정 사용자 지갑의 이름을 변경합니다.\n      parameters:\n        - *ref_18\n        - *ref_19\n        - name: masterWalletId\n          required: true\n          in: path\n          description: 마스터 지갑 ID\n          schema:\n            type: string\n        - name: userWalletId\n          required: true\n          in: path\n          description: 사용자 지갑 ID\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ChangeWalletNameRequestDTO'\n      responses:\n        '204':\n          description: ''\n        '400':\n          description: 다음과 같은 bad request 에러가 발생할 수 있습니다.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/WalletNotFoundException'\n                  - $ref: '#/components/schemas/NoWalletNameException'\n              examples:\n                WalletNotFoundException:\n                  value: *ref_22\n                NoWalletNameException:\n                  value: *ref_25\n        '401': *ref_21\n      tags:\n        - wallets\n  /api/v3/polygon/wallets/{masterWalletId}/user-wallets/{userWalletId}/transfer:\n    post:\n      operationId: polygon-WalletsController_sendUserWalletCoin\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 사용자 지갑에서 코인 전송하기\n      description: 특정 사용자 지갑에서 가상자산을 송금합니다.\n      parameters:\n        - *ref_18\n        - *ref_19\n        - name: masterWalletId\n          required: true\n          in: path\n          description: 마스터 지갑 ID\n          schema:\n            type: string\n        - name: userWalletId\n          required: true\n          in: path\n          description: 사용자 지갑 ID\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SendCoinRequestDTO'\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransactionDTO'\n              example: *ref_16\n          description: ''\n        '400':\n          description: 해당하는 id의 지갑이 없을 때 발생합니다.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WalletNotFoundException'\n              example: *ref_22\n        '401': *ref_21\n      tags:\n        - wallets\n  /api/v3/polygon/wallets/{masterWalletId}/user-wallets/{userWalletId}/contract-call:\n    post:\n      operationId: polygon-WalletsController_sendUserWalletContractCall\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 사용자 지갑에서 스마트 컨트랙트 호출하기\n      description: 특정 사용자 지갑에서 일반적인 스마트 컨트랙트 함수를 호출하는 트랜잭션을 발생시킵니다.\n      parameters:\n        - *ref_18\n        - *ref_19\n        - name: masterWalletId\n          required: true\n          in: path\n          description: 마스터 지갑 ID\n          schema:\n            type: string\n        - name: userWalletId\n          required: true\n          in: path\n          description: 사용자 지갑 ID\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateTransactionRequestDTO'\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransactionDTO'\n              example: *ref_16\n          description: ''\n        '400':\n          description: 해당하는 id의 지갑이 없을 때 발생합니다.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WalletNotFoundException'\n              example: *ref_22\n        '401': *ref_21\n      tags:\n        - wallets\n  /api/v3/polygon/wallets/{masterWalletId}/nft/transfer:\n    post:\n      operationId: polygon-WalletsController_transferNft\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 마스터 지갑 NFT 출금하기\n      description: 특정 마스터 지갑에서 NFT 토큰을 출금합니다.\n      parameters:\n        - *ref_18\n        - *ref_19\n        - name: masterWalletId\n          required: true\n          in: path\n          description: 마스터 지갑 ID\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TransferNftRequestDTO'\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransactionDTO'\n              example: *ref_24\n          description: ''\n        '401': *ref_21\n      tags:\n        - wallets\n  /api/v3/polygon/wallets/{masterWalletId}/nft/flush:\n    post:\n      operationId: polygon-WalletsController_nftFlush\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 사용자 지갑 NFT 모두 끌어오기\n      description: 사용자 지갑의 특정 NFT를 모두 상위의 지갑으로 끌어옵니다.\n      parameters:\n        - *ref_18\n        - *ref_19\n        - name: masterWalletId\n          required: true\n          in: path\n          description: 마스터 지갑 ID\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateNftFlushRequestDTO'\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransactionDTO'\n              example: *ref_24\n          description: ''\n        '400':\n          description: 해당하는 id의 지갑이 없을 때 발생합니다.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WalletNotFoundException'\n              example: *ref_22\n        '401': *ref_21\n      tags:\n        - wallets\n  /api/v3/polygon/wallets/{masterWalletId}/user-wallets/{userWalletId}/nft/transfer:\n    post:\n      operationId: polygon-WalletsController_transferUserWalletNft\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 사용자 지갑 NFT 출금하기\n      description: 특정 사용자 지갑에서 NFT 토큰을 출금합니다.\n      parameters:\n        - *ref_18\n        - *ref_19\n        - name: masterWalletId\n          required: true\n          in: path\n          description: 마스터 지갑 ID\n          schema:\n            type: string\n        - name: userWalletId\n          required: true\n          in: path\n          description: 사용자 지갑 ID\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TransferNftRequestDTO'\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransactionDTO'\n              example: *ref_16\n          description: ''\n        '401': *ref_21\n      tags:\n        - wallets\n  /api/v3/polygon/wallets/{masterWalletId}/nft/balance:\n    get:\n      operationId: polygon-WalletsController_getNftBalance\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: NFT 잔고 조회하기\n      description: 특정 지갑의 NFT 잔고를 조회합니다.\n      parameters:\n        - *ref_18\n        - *ref_19\n        - name: masterWalletId\n          required: true\n          in: path\n          description: 마스터 지갑 ID\n          schema:\n            type: string\n        - name: size\n          required: false\n          in: query\n          description: '한 번의 요청으로 반환되는 응답의 개수 (기본값: 15)'\n          schema:\n            type: number\n        - name: page\n          required: false\n          in: query\n          description: 몇 번째 페이지를 조회할 것인지? (페이지는 0부터 시작)\n          schema:\n            type: number\n        - name: tokenOnchainId\n          required: false\n          in: query\n          description: NFT 토큰의 온체인 ID\n          schema:\n            type: string\n        - name: tokenName\n          required: false\n          in: query\n          description: NFT 토큰의 이름\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetManyResponseForNftBalanceDTO'\n              example: \u0026ref_26\n                pagination: *ref_12\n                results:\n                  - nft: *ref_3\n                    tokenOnchainId: '1'\n                    tokenUri: https://opensea-creatures-api.herokuapp.com/api/creature/3\n                    tokenMetadata:\n                      description: \u003e-\n                        Friendly OpenSea Creature that enjoys long swims in the\n                        ocean.\n                      external_url: https://openseacreatures.io/3\n                      image: \u003e-\n                        https://storage.googleapis.com/opensea-prod.appspot.com/puffs/3.png\n                      name: Dave Starbelly\n                      attributes:\n                        - trait_type: Base\n                          value: Starfish\n                        - trait_type: Eyes\n                          value: Big\n                    walletId: 532d994e923817013aff23c6dc1ae766\n                    depositAddressId: 4daf51ef18e3a1ce1148b33a6a1b1589\n                    isWithdrawalPending: false\n          description: ''\n        '401': *ref_21\n      tags:\n        - wallets\n  /api/v3/polygon/wallets/{masterWalletId}/user-wallets/{userWalletId}/nft/balance:\n    get:\n      operationId: polygon-WalletsController_getUserWalletNftBalance\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 사용자 지갑 NFT 잔고 조회하기\n      description: 특정 사용자 지갑의 NFT 잔고를 조회합니다.\n      parameters:\n        - *ref_18\n        - *ref_19\n        - name: masterWalletId\n          required: true\n          in: path\n          description: 마스터 지갑 ID\n          schema:\n            type: string\n        - name: userWalletId\n          required: true\n          in: path\n          description: 사용자 지갑 ID\n          schema:\n            type: string\n        - name: size\n          required: false\n          in: query\n          description: '한 번의 요청으로 반환되는 응답의 개수 (기본값: 15)'\n          schema:\n            type: number\n        - name: page\n          required: false\n          in: query\n          description: 몇 번째 페이지를 조회할 것인지? (페이지는 0부터 시작)\n          schema:\n            type: number\n        - name: tokenOnchainId\n          required: false\n          in: query\n          description: NFT 토큰의 온체인 ID\n          schema:\n            type: string\n        - name: tokenName\n          required: false\n          in: query\n          description: NFT 토큰의 이름\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetManyResponseForNftBalanceDTO'\n              example: *ref_26\n          description: ''\n        '401': *ref_21\n      tags:\n        - wallets\n  /api/v3/polygon/wallets/{masterWalletId}/nft/transfers:\n    get:\n      operationId: polygon-WalletsController_getNftTransfers\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 전체 NFT 입출금 목록 조회하기\n      description: 특정 지갑의 NFT 입출금 내역을 조회합니다.\n      parameters:\n        - *ref_18\n        - *ref_19\n        - name: masterWalletId\n          required: true\n          in: path\n          description: 마스터 지갑 ID\n          schema:\n            type: string\n        - name: nftId\n          required: false\n          in: query\n          description: NFT 컨트랙트의 ID\n          schema:\n            type: number\n        - name: tokenName\n          required: false\n          in: query\n          description: NFT 토큰의 이름\n          schema:\n            type: string\n        - name: tokenOnchainId\n          required: false\n          in: query\n          description: NFT 토큰의 온체인 ID\n          schema:\n            type: string\n        - name: userWalletId\n          required: false\n          in: query\n          description: 사용자 지갑 ID\n          schema:\n            type: string\n        - name: transactionId\n          required: false\n          in: query\n          description: \u003e-\n            트랜잭션 ID (Henesis Wallet에서 부여하는 트랜잭션의 고유 ID입니다. 온체인상 트랜잭션 해시와 다른\n            개념입니다.)\n          schema:\n            type: string\n        - name: transactionHash\n          required: false\n          in: query\n          description: 트랜잭션 해시\n          schema:\n            type: string\n        - name: status\n          required: false\n          in: query\n          description: 트랜잭션 상태\n          schema:\n            type: string\n        - name: transferType\n          required: false\n          in: query\n          description: 트랜잭션의 종류(입금, 출금)\n          schema:\n            type: string\n        - name: updatedAtGte\n          required: false\n          in: query\n          description: 'updatedAt이 해당 시점과 같거나 그보다 이후인 트랜잭션 조회 (형식: ms, UNIX time) '\n          schema:\n            type: string\n        - name: updatedAtLt\n          required: false\n          in: query\n          description: 'updatedAt이 해당 시점보다 이전인 트랜잭션 조회 (형식: ms, UNIX time) '\n          schema:\n            type: string\n        - name: size\n          required: false\n          in: query\n          description: '한 번의 요청으로 반환되는 응답의 개수 (기본값: 15)'\n          schema:\n            type: number\n        - name: page\n          required: false\n          in: query\n          description: 몇 번째 페이지를 조회할 것인지? (페이지는 0부터 시작)\n          schema:\n            type: number\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetManyResponseForNftTransferDTO'\n              example:\n                pagination: *ref_12\n                results:\n                  - id: 375031\n                    from: '0x1f10ecbd971eab345ea19e96dc237b1fbd63de96'\n                    to: '0xdd00383e5a51166bba3e96d84c14a36d72e6c128'\n                    status: CONFIRMED\n                    orgId: 31cafc79bd437e1b8e7b8209e399d3f3\n                    walletId: ae40b1b3dd953e5592c21e58be30d807\n                    depositAddressId: ae40b1b3dd953e5592c21e58be30d807\n                    nft: *ref_3\n                    token: *ref_27\n                    transferType: WITHDRAWAL\n                    transactionId: 8c87c578d7568edc156f831cf03c3ff0\n                    transactionHash: \u003e-\n                      0xef76a243fa224f723922a1b067dd916fb1b2568aff292d2d1d183a807804922f\n                    createdAt: '1612411568760'\n                    updatedAt: '1612411724023'\n                    name: POLYGON 실비 정산\n                    metadata: metadata\n          description: ''\n        '400':\n          description: 올바르지 않은 트랜잭션 상태(status)로 요청하면 발생합니다.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidStatusException'\n              example: *ref_13\n        '401': *ref_21\n      tags:\n        - wallets\n  /api/v3/polygon/nfts:\n    get:\n      operationId: polygon-NftsController_getNfts\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 전체 NFT 컨트랙트 목록 조회하기\n      description: 모든 NFT 컨트랙트를 조회합니다.\n      parameters:\n        - \u0026ref_28\n          name: X-Henesis-Secret\n          in: header\n          description: 대시보드를 통해 발급 받은 API Secret을 입력합니다.\n          schema:\n            type: string\n        - \u0026ref_29\n          name: Authorization\n          in: header\n          description: 대시보드를 통해 발급 받은 Access Token을 입력합니다. e.g. Bearer \u003cTOKEN\\\u003e\n          schema:\n            example: Bearer \u003cTOKEN\u003e\n            default: 'Bearer '\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/NftDTO'\n          description: ''\n        '401': \u0026ref_30\n          description: 인증이 실패했을 때 발생하는 에러입니다.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/InvalidAccessTokenException'\n                  - $ref: '#/components/schemas/AccessTokenNotProvidedException'\n                  - $ref: '#/components/schemas/InvalidAccessIpException'\n              examples:\n                InvalidAccessTokenException:\n                  value: *ref_9\n                AccessTokenNotProvidedException:\n                  value: *ref_10\n                InvalidAccessIpException:\n                  value: *ref_11\n      tags:\n        - nfts\n  /api/v3/polygon/nfts/{nftId}:\n    get:\n      operationId: polygon-NftsController_getNft\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: NFT 컨트랙트 조회하기\n      description: NFT 컨트랙트를 조회합니다.\n      parameters:\n        - *ref_28\n        - *ref_29\n        - name: nftId\n          required: true\n          in: path\n          schema:\n            type: number\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NftDTO'\n          description: ''\n        '401': *ref_30\n      tags:\n        - nfts\n  /api/v3/polygon/nfts/{nftId}/sync-metadata:\n    post:\n      operationId: polygon-NftsController_syncMetadata\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: NFT metadata 동기화 요청하기\n      description: NFT 컨트랙트의 metadata 동기화를 요청합니다.\n      parameters:\n        - *ref_28\n        - *ref_29\n        - name: nftId\n          required: true\n          in: path\n          description: NFT 컨트랙트의 ID\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SyncMetadataRequestDTO'\n      responses:\n        '204':\n          description: ''\n        '400':\n          description: 해당하는 id의 NFT 컨트랙트가 없을 때 발생합니다.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NftNotFoundException'\n              example:\n                message: nft '2' does not exist\n                code: 4000\n        '401': *ref_30\n      tags:\n        - nfts\n",
			"canonicalURL": "/github.com/HAECHI-LABS/henesis-wallet-sdk@d27d873a69b359d6b3f9f55911e598facc747d00/-/blob/packages/api-proxy/swagger/swagger-spec-v3-polygon.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/HAECHI-LABS/henesis-wallet-sdk/blob/d27d873a69b359d6b3f9f55911e598facc747d00/packages/api-proxy/swagger/swagger-spec-v3-polygon.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: convert YAML to JSON: yaml: unknown anchor 'ref_4' referenced"
}