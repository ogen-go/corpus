{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/okta/okta-sdk-dotnet"
		},
		"file": {
			"name": "management.yaml",
			"size": 0,
			"path": "openapi3/management.yaml",
			"byteSize": 803288,
			"content": "openapi: 3.0.3\ninfo:\n  title: Okta Management\n  description: Allows customers to easily access the Okta Management APIs\n  termsOfService: https://developer.okta.com/terms/\n  contact:\n    name: Okta Developer Team\n    url: https://developer.okta.com/\n    email: devex-public@okta.com\n  license:\n    name: Apache-2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0.html\n  version: 3.0.0\n  x-logo:\n    url: logo.svg\n    backgroundColor: transparent\n    altText: Okta Developer\nexternalDocs:\n  description: Find more info here\n  url: https://developer.okta.com/docs/api/getting_started/design_principles.html\nservers:\n  - url: https://{yourOktaDomain}\n    variables:\n      yourOktaDomain:\n        default: subdomain.okta.com\n        description: The domain of your organization. This can be a provided subdomain of an official okta domain (okta.com, oktapreview.com, etc) or one of your configured custom domains.\ntags:\n  - name: AgentPools\n    x-displayName: Agent Pools\n    description: The Agent Pools API provides operation to manage the update settings of the agents for your organization.\n  - name: ApiToken\n    x-displayName: API Tokens\n    description: The API Tokens API provides operations to manage SSWS API tokens for your organization.\n  - name: Application\n    x-displayName: Applications\n    description: The Applications API provides operations to manage applications and/or assignments to users or groups for your organization.\n  - name: Authenticator\n    x-displayName: Authenticators\n    description: |-\n      The Authenticators Administration API provides operations to configure which Authenticators are available to end users for use when signing in to applications.\n\n      End users are required to use one or more Authenticators depending on the security requirements of the authentication policy.\n\n      Okta Identity Engine currently supports Authenticators for the following factors:\n\n      **Knowledge-based:**\n\n      * Password\n      * Security Question\n\n      **Possession-based:**\n\n      * Phone (SMS, Voice Call)\n      * Email\n      * WebAuthn\n      * Duo\n      * Custom App \u003cea\u003eEarly Access\u003c/ea\u003e\n  - name: AuthorizationServer\n    x-displayName: Authorization Servers\n    description: Authorization Servers generate OAuth 2.0 and OpenID Connect tokens, including access tokens and ID tokens. The Okta Management API gives you the ability to configure and manage Authorization Servers and the security policies that are attached to them.\n  - name: Behavior\n    x-displayName: Behavior Rules\n    description: The Behavior Rules API provides operations to manage the behavior detection rules for your organization.\n  - name: CAPTCHA\n    x-displayName: CAPTCHAs\n    description: |-\n      As an option to increase org security, Okta supports CAPTCHA services to prevent automated sign-in attempts. You can integrate one of two providers: [hCaptcha](https://www.hcaptcha.com/) or [reCAPTCHA v2](https://developers.google.com/recaptcha/docs/invisible).\n\n      The vendor implementations supported by Okta are both invisible. They each run risk-analysis software in the background during user sign in to determine the likelihood that the user is a bot. This risk analysis is based on the settings that you configure with the provider that you choose.\n\n      Before you configure your org to use CAPTCHA, sign in to the vendor of your choice or sign up for an account. For more details, refer to [CAPTCHA integration](https://help.okta.com/okta_help.htm?type=oie\u0026id=csh-captcha).\n  - name: Customization\n    x-displayName: Customizations\n    description: |-\n      The Brands API allows you to customize the look and feel of pages and templates, such as the Okta-hosted sign-in page, error pages, email templates, and the Okta End-User Dashboard.\n\n      Each org starts off with Okta's default branding. You can upload your own assets (colors, background image, logo, and favicon) to replace Okta's default brand assets. You can then publish these assets directly to your pages and templates.\n\n      \u003e**Important:** Despite being called the Brands API (due to conventions around REST API naming), each org can currently contain only one brand and one theme. We will likely allow multiple brands and themes per org at some point in the future, so stay tuned!\n  - name: Device\n    x-displayName: Devices\n    description: |-\n      The Okta Devices API provides a centralized integration platform to fetch and manage device information. Okta administrators can use these APIs to manage workforce identity Device object information.\n\n      The Devices API supports the following **Device Operations**:\n      * Get, Delete Device objects.\n      * Perform lifecycle transitions on the Device objects.\n\n      The Devices API supports the following **Authorization Schemes**:\n      * SSWS - [API tokens](https://developer.okta.com/docs/reference/core-okta-api/#authentication)\n      * Bearer - [OAuth2.0 and OpenID Connect](https://developer.okta.com/docs/concepts/oauth-openid/)\n\n      \u003e **Note:** For devices to enroll in Okta and show up in the Devices API, the following actions are required:\n      \u003e 1. Admins - Enable Okta FastPass. See [Enable FastPass](https://help.okta.com/okta_help.htm?type=oie\u0026id=ext-fp-enable)\n      \u003e 2. End users with existing mobile Okta Verify enrollments - After you upgrade your org to Okta Identity Engine, direct end users with existing Okta Verify enrollments to use [FastPass](https://help.okta.com/okta_help.htm?type=oie\u0026id=csh-fp-main).\n\n      \u003e End users with a new enrollment in Okta Verify on an Okta Identity Engine org have a device record created in the device inventory by default.\n      See [Device Registration](https://help.okta.com/okta_help.htm?type=oie\u0026id=csh-device-registration), [Login Using Okta Verify](https://help.okta.com/okta_help.htm?type=eu\u0026id=ext-ov-user-overview).\n  - name: DeviceAssurance\n    x-displayName: Device Assurance Policies\n    description: The Device Assurance Policies API provides operations to manage device assurance policies in your organization.\n  - name: Domain\n    x-displayName: Domains\n    description: The Domains API provides operations to manage custom domains for your organization.\n  - name: EmailDomain\n    x-displayName: Email Domains\n    description: The Email Domains API provides operations to manage custom domains for your organization.\n  - name: EventHook\n    x-displayName: Event Hooks\n    description: |-\n      The Event Hooks API provides operations to manage event hooks for your organization.\n\n      For general information on event hooks and how to create and use them, see [Event hooks](https://developer.okta.com/docs/concepts/event-hooks/). The following documentation is only for the management API, which provides a CRUD interface for registering event hooks.\n\n      For a step-by-step guide on implementing an example event hook, see the [Event hook](https://developer.okta.com/docs/guides/event-hook-implementation/) guide.\n  - name: Feature\n    x-displayName: Features\n    description: |-\n      The Okta Features API provides operations to manage self-service Early Access (EA) and Beta features in your org.\n\n      \u003e **Note:** Important background information for this API is available on the [Feature Lifecycle Management](https://developer.okta.com/docs/concepts/feature-lifecycle-management/) page.\n  - name: Group\n    x-displayName: Groups\n    description: The Groups API provides operations to manage Okta Groups and their user members for your organization.\n  - name: IdentityProvider\n    x-displayName: Identity Providers\n    description: The Identity Providers API provides operations to manage federations with external Identity Providers (IdP). For example, your app can support signing in with credentials from Apple, Facebook, Google, LinkedIn, Microsoft, an enterprise IdP using SAML 2.0, or an IdP using the OpenID Connect (`OIDC`) protocol.\n  - name: InlineHook\n    x-displayName: Inline Hooks\n    description: |-\n      The Inline Hooks API provides operations to manage inline hooks for your organization.\n\n      For general information on inline hooks and how to create and use them, see [inline hooks](https://developer.okta.com/docs/concepts/inline-hooks/). The following documentation is only for the management API, which provides a CRUD interface for registering inline hooks.\n  - name: LinkedObject\n    x-displayName: Linked Objects\n    description: |-\n      Users have relationships to each other, like manager and subordinate or customer and sales representative. You can create users with relationships by using the Linked Objects API to represent the relationship.\n\n      1. Create a Linked Object definition such as Manager:Subordinate or Case Worker:Client. These pairs are represented by a `primary` attribute and an `associated` attribute.\n      2. Link users together to create the relationship between the two. You create a Linked Object value with a single request that links one `primary` and one `associated` user.\n\n      For each relationship:\n\n      * A user has at most one `primary` link (a user has a single manager), but can have many `associated` links (a user can have many subordinates).\n      * A user can be the `primary` in one relationship and the `associated` in another.\n      * A user can be both the `primary` and `associated` in the same relationship.\n\n      Okta Expression Language function for [Linked Objects](https://developer.okta.com/docs/reference/okta-expression-language/#linked-object-function) provides access to the details about a linked user.\n\n      \u003e **Note:** The Linked Objects feature isn't available for OpenID Connect claims.\n\n      ## Example usage\n\n      Okta allows you to create up to 200 Linked Object definitions. These definitions are one-to-many, for example:\n\n      * A manager has many subordinates. Each subordinate has one manager.\n      * A sales representative has many customers. Each customer has one sales rep.\n      * A case worker has many clients. Each client has one case worker.\n\n      Most organizations have more than one manager or sales representative. You can create the Linked Object definition once, and then assign the `primary` relationship to as many users as you have people in that relationship.\n\n      You can assign the `associated` relationship for a single `primary` user to as many users as needed. The `associated` user can be related to only one `primary` per Linked Object definition. But a user can be assigned to more than one Linked Object definition.\n\n      For example, assume that you've created one Linked Object definition for manager (`primary`) and for subordinates (`associated`):\n\n      * Joe is Frank's manager.\n      * Bob is Joe's manager, but Jane's subordinate.\n      * Jane is the CEO, so she reports to herself.\n\n      Thus, you can create chains of relationships (Jane \u003e Bob \u003e Joe \u003e Frank) or terminal relationships (Jane is both `primary` and `associated` user).\n\n      Then, if you create another Linked Object relationship for scrum team membership, you could assign relationships to the same four users:\n\n      * Bob is the scrum lead for the Identity Scrum team.\n      * Joe and Frank are both contributors to the team.\n\n      Bob can be the `primary` for a Manager:Subordinate, an `associated` user for that same Linked Object definition, and also the `primary` for the Scrumlead:Contributor Linked Object definition.\n\n      To represent a relationship, create a Linked Object definition that specifies a `primary` (parent) relationship and an `associated` (child) relationship, and then add a link in which the appropriate user is assigned to each side of that link type.\n\n      ## Links between User Types\n\n      If you created multiple User Types, they all share the same Linked Object definitions. For example, if you have separate User Types for employees and contractors, a link could designate an employee as the manager for a contractor, with the contractor being a subordinate of that employee.\n  - name: LogStream\n    x-displayName: Log Streaming\n    description: The Log Streaming API provides operations to manage Log Stream configurations for an org. You can configure up to two Log Stream integrations per org.\n  - name: NetworkZone\n    x-displayName: Network Zones\n    description: |-\n      The Okta Zones API provides operations to manage Zones in your organization. There are two usage Zone types: Policy Network Zones and Blocklist Network Zones. Policy Network Zones are used to guide policy decisions. Blocklist Network Zones are used to deny access from certain IP addresses, locations, proxy types, or Autonomous System Numbers (ASNs) before policy evaluation.\n\n      A default system Policy Network Zone is provided in your Okta org. You can use the Zones API to modify the default Policy Network Zone or to create a custom Policy or Blocklist Network Zone. When you create your custom Zone, you can specify if the Zone is an IP Zone or a Dynamic Zone. An IP Zone allows you to define network perimeters around a set of IPs, whereas a Dynamic Zone allows you to define network perimeters around location, IP type, and ASNs.\n  - name: OrgSetting\n    x-displayName: Org Settings\n    description: The Org Settings API provides operations to manage your org account settings such as contact information, granting Okta Support access, and more.\n  - name: Policy\n    x-displayName: Policies\n    description: |-\n      The Okta Policy API enables an Administrator to perform Policy and Policy Rule operations. The Policy framework is used by Okta to control Rules and settings that govern, among other things, user session lifetime, whether multi-factor authentication is required when logging in, what MFA factors may be employed, password complexity requirements, what types of self-service operations are permitted under various circumstances, and what identity provider to route users to.\n\n      Policy settings for a particular Policy type, such as Sign On Policy, consist of one or more Policy objects, each of which contains one or more Policy Rules. Policies and Rules contain conditions that determine whether they are applicable to a particular user at a particular time.\n  - name: PrincipalRateLimit\n    x-displayName: Principal Rate Limits\n    description: The Principal Rate Limits API provides operations to manage Principal Rate Limits for your organization.\n  - name: ProfileMapping\n    x-displayName: Profile Mappings\n    description: The Mappings API provides operations to manage the mapping of properties between an Okta User's and an App User's Profile properties using [Okta Expression Language](https://developer.okta.com/docs/reference/okta-expression-language). More information on Okta User and App User Profiles can be found in Okta's [User profiles](https://developer.okta.com/docs/concepts/user-profiles/#what-is-the-okta-universal-directory).\n  - name: PushProvider\n    x-displayName: Push Providers\n    description: The Push Providers API provides operations to manage Push Providers for your organization.\n  - name: RateLimitSettings\n    x-displayName: Rate Limit Settings\n    description: The Rate Limit Settings APIs provide operations to manage settings and configurations surrounding rate limiting in your Okta organization.\n  - name: ResourceSet\n    x-displayName: Resource Sets\n    description: The Resource Sets API provides operations to manage Resource Sets as custom collections of resources. You can use Resource Sets to assign Custom Roles to administrators who are scoped to the designated resources. See [Supported Resources](https://developer.okta.com/docs/concepts/role-assignment/#supported-resources).\n  - name: RiskEvent\n    x-displayName: Risk Events\n    description: The Risk Events API provides the ability for third-party Risk Providers to send Risk Events to Okta. See [Third-party risk provider integration overview](https://developer.okta.com/docs/guides/third-party-risk-integration/) for guidance on integrating third-party risk providers with Okta.\n  - name: RiskProvider\n    x-displayName: Risk Providers\n    description: The Risk Providers API provides the ability to manage the Risk Providers within Okta. See [Third-party risk provider integration overview](https://developer.okta.com/docs/guides/third-party-risk-integration/) for guidance on integrating third-party risk providers with Okta.\n  - name: Role\n    x-displayName: Roles\n    description: |-\n      The Roles API provides operations to manage administrative Role assignments for a User.\n\n      Role listing APIs provide a union of both standard and Custom Roles assigned to a User or Group.\n  - name: RoleAssignment\n    x-displayName: Role Assignments\n    description: These APIs allow you to assign custom roles to user and groups, as well as designate Third-Party Administrator status to a user or group.\n  - name: RoleTarget\n    x-displayName: Role Targets\n    description: |-\n      Role targets are a way of defining permissions for admin roles into a smaller subset of Groups or Apps within your org. Targets limit an admin's permissions to a targeted area of the org. You can define admin roles to target Groups, Applications, and Application Instances.\n\n      * **Group targets:** Grant an admin permission to manage only a specified Group. For example, an admin role may be assigned to manage only the IT Group.\n      * **App targets:** Grant an admin permission to manage all instances of the specified Apps. Target Apps are Okta catalog Apps. For example, you can have multiple configurations of an Okta catalog App, such as Salesforce or Facebook. When you add a Salesforce or Facebook App as a target, that grants the admin permission to manage all the instances of those Apps and create new instances of them.\n      * **App Instance targets:** Grant an admin permission to manage an instance of one App or instances of multiple Apps. App Instances are specific Apps that admins have created in their org. For example, there may be a Salesforce App configured differently for each sales region of a company. When you create an App Instance target, you can assign an admin to manage only two instances of the configured Salesforce Apps and then also to manage an instance of another configured App such as Workday.\n\n      \u003e **Note:** Don't use these operations with a Custom Role ID. Custom Role assignments always require a target Resource Set. See [Role Assignments](https://developer.okta.com/docs/concepts/role-assignment/) for more information.\n  - name: Schema\n    x-displayName: Schemas\n    description: |-\n      The Schemas API provides operations to manage custom User profiles as well as endpoints to discover the structure of the Log Stream configuration.\n\n      Okta's [Universal Directory](https://help.okta.com/okta_help.htm?id=ext_About_Universal_Directory) allows administrators to define custom User profiles for Okta Users and Applications.\n      Okta adopts a subset of [JSON Schema Draft 4](https://tools.ietf.org/html/draft-zyp-json-schema-04) as the schema language to describe and validate extensible User profiles.\n      For Log Stream Schemas, Okta uses [JSON Schema Draft 2020-12](https://json-schema.org/specification.html).\n      [JSON Schema](http://json-schema.org/) is a lightweight declarative format for describing the structure, constraints, and validation of JSON documents.\n\n      \u003e **Note:** Okta implements only a subset of [JSON Schema Draft 4](https://tools.ietf.org/html/draft-zyp-json-schema-04) and [JSON Schema Draft 2020-12](https://json-schema.org/specification.html). This document describes which parts apply to Okta, and any extensions Okta has made to [JSON Schema Draft 4](https://tools.ietf.org/html/draft-zyp-json-schema-04) and [JSON Schema Draft 2020-12](https://json-schema.org/specification.html).\n  - name: Session\n    x-displayName: Sessions\n    description: |-\n      Okta uses a cookie-based authentication mechanism to maintain a user's authentication Session across web requests. The Okta Sessions API provides operations to create and manage authentication Sessions for users in your Okta organization.\n\n      \u003e**Note:** Some browsers block third-party cookies by default, which disrupts Okta functionality in certain flows. See [FAQ: How Blocked Third Party Cookies Can Potentially Impact Your Okta Environment](https://support.okta.com/help/s/article/FAQ-How-Blocking-Third-Party-Cookies-Can-Potentially-Impact-Your-Okta-Environment).\n\n      \u003e**Note:** The Sessions API doesn't support direct authentication. Direct authentication is supported through the [Authentication API](https://developer.okta.com/docs/reference/api/authn/#authentication-operations) or through OIDC using the [Resource Owner Password flow](https://developer.okta.com/docs/guides/implement-grant-type/ropassword/main/).\n\n      ### Session cookie\n\n      Okta uses an HTTP session cookie to provide access to your Okta organization and applications across web requests for an interactive user agent such as a web browser. A session cookie has an expiration configurable by an administrator for the organization and is valid until the cookie expires or the user closes the Session (logout) or browser application.\n\n      ### Session token\n\n      A [session token](https://developer.okta.com/docs/reference/api/authn/#session-token) is a one-time bearer token that provides proof of authentication and may be redeemed for an interactive SSO session in Okta in a user agent. Session tokens can only be used **once** to establish a Session for a user and are revoked when the token expires.\n\n      Okta provides a very rich [Authentication API](https://developer.okta.com/docs/reference/api/authn/) to validate a [user's primary credentials](https://developer.okta.com/docs/reference/api/authn/#primary-authentication) and secondary [MFA factor](https://developer.okta.com/docs/reference/api/authn/#verify-factor). A session token is returned after successful authentication, which can be later exchanged for a session cookie that uses one of the following flows:\n\n      - [Retrieve a session cookie by visiting the OpenID Connect Authorization Endpoint](https://developer.okta.com/docs/guides/session-cookie/main/#retrieve-a-session-cookie-through-the-openid-connect-authorization-endpoint)\n      - [Retrieve a session cookie by visiting a session redirect link](https://developer.okta.com/docs/guides/session-cookie/main/#retrieve-a-session-cookie-by-visiting-a-session-redirect-link)\n      - [Retrieve a session cookie by visiting an application embed link](https://developer.okta.com/docs/guides/session-cookie/main/#retrieve-a-session-cookie-by-visiting-an-application-embed-link)\n\n      \u003e**Note:** **Session tokens** are secrets and should be protected at rest and during transit. A session token for a user is equivalent to having the user's actual credentials.\n  - name: Subscription\n    x-displayName: Subscriptions\n    description: The Subscriptions API provides operations to manage email subscription settings for Okta administrator notifications.\n  - name: SystemLog\n    x-displayName: System Log\n    description: |-\n      The System Log records system events that are related to your organization in order to provide an audit trail that can be used to understand platform activity and to diagnose problems.\n\n      The System Log API provides near real-time, read-only access to your organization's system log and is the programmatic counterpart of the [System Log UI](https://help.okta.com/okta_help.htm?id=ext_Reports_SysLog).\n\n      The terms \"event\" and \"log event\" are often used interchangeably. In the context of this API, an \"event\" is an occurrence of interest within the system, and a \"log\" or \"log event\" is the recorded fact.\n\n      The System Log API supports these primary use cases:\n        * Event data export into a security information and event management system (SIEM)\n        * System monitoring\n        * Development debugging\n        * Event introspection and audit\n\n      The System Log API isn't intended for use as a Database as a Service (DBaaS) or to serve data directly to downstream consumers without an intermediate data store.\n\n      See [Events API Migration](https://developer.okta.com/docs/concepts/events-api-migration/) for information on migrating from the Events API to the System Log API.\n  - name: Template\n    x-displayName: SMS Templates\n    description: |-\n      The SMS Templates API provides operations to manage custom SMS templates for verification.\n\n      \u003e **Note:** Only SMS custom Templates are available through the API.\n\n      SMS Templates customize the SMS message that is sent to users. One default SMS Template is provided. All custom Templates must have the variable `${code}` as part of the text. The `${code}` variable is replaced with the actual SMS code when the message is sent. Optionally, you can also use the variable `${org.name}`. If a Template contains `${org.name}`, it is replaced with the organization name before the SMS message is sent.\n  - name: ThreatInsight\n    x-displayName: ThreatInsight\n    description: |-\n      [Okta ThreatInsight](https://help.okta.com/okta_help.htm?id=ext_threatinsight) maintains a constantly evolving list of IPs that exhibit suspicious behaviors suggestive of malicious activity. Authentication requests associated with an IP in this list can be logged in [System Log](https://help.okta.com/okta_help.htm?id=ext_Reports_SysLog) and blocked. The Okta ThreatInsight Configuration API provides operations to manage your ThreatInsight configuration.\n\n      In order to prevent abuse, Okta ThreatInsight works in a limited capacity for free trial editions. Please contact Okta support if fully functional Okta ThreatInsight is required.\n  - name: TrustedOrigin\n    x-displayName: Trusted Origins\n    description: |-\n      The Trusted Origins API provides operations to manage Trusted Origins and sources.\n\n      When external URLs are requested during sign-in, sign-out, or recovery operations, Okta checks those URLs against the allowed list of Trusted Origins. Trusted Origins also enable browser-based applications to access Okta APIs from JavaScript (CORS). If the origins aren't specified, the related operation (redirect or Okta API access) isn't permitted.\n\n      You can also configure Trusted Origins to allow iFrame embedding of Okta resources, such as Okta sign-in pages and the Okta End-User Dashboard, within that origin. This is an Early Access feature. To enable it, contact [Okta Support](https://support.okta.com/help/s/).\n\n      \u003e **Note:** This Early Access feature is supported for Okta domains only. It isn't currently supported for custom domains.\n  - name: User\n    x-displayName: Users\n    description: The User API provides operations to manage users in your organization.\n  - name: UserFactor\n    x-displayName: Factors\n    description: The Factors API provides operations to enroll, manage, and verify factors for multifactor authentication (MFA). Manage both administration and end-user accounts, or verify an individual factor at any time.\n  - name: UserType\n    x-displayName: User Types\n    description: The User Types API provides operations to manage User Types.\npaths:\n  /.well-known/okta-organization:\n    get:\n      summary: Retrieve the Well-Known Org Metadata\n      description: Retrieves the well-known org metadata, which includes the id, configured custom domains, authentication pipeline, and various other org settings.\n      operationId: wellknownOrgMetadata\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WellKnownOrgMetadata'\n              examples:\n                Identity Engine Org with Custom Domain:\n                  $ref: '#/components/examples/WellKnownOrgMetadataResponseCustomUrlOie'\n                Classic Org:\n                  $ref: '#/components/examples/WellKnownOrgMetadataResponseClassic'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      tags:\n        - OrgSetting\n  /api/v1/agentPools:\n    get:\n      summary: List all Agent Pools\n      description: Fetches AgentPools based on request parameters for a given org\n      operationId: getAgentPools\n      parameters:\n        - $ref: '#/components/parameters/queryLimitPerPoolType'\n        - $ref: '#/components/parameters/queryPoolType'\n        - $ref: '#/components/parameters/queryAfter'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/AgentPool'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.agentPools.read\n      tags:\n        - AgentPools\n  /api/v1/agentPools/{poolId}/updates:\n    get:\n      summary: List all Agent Pool updates\n      description: Gets List of Agent pool updates\n      operationId: getAgentPoolsUpdates\n      parameters:\n        - $ref: '#/components/parameters/pathPoolId'\n        - $ref: '#/components/parameters/queryScheduled'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/AgentPoolUpdate'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.agentPools.read\n      tags:\n        - AgentPools\n    post:\n      summary: Create an Agent Pool update\n      description: Creates an Agent pool update \\n For user flow 2 manual update, starts the update immediately. \\n For user flow 3, schedules the update based on the configured update window and delay.\n      operationId: createAgentPoolsUpdate\n      parameters:\n        - $ref: '#/components/parameters/pathPoolId'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AgentPoolUpdate'\n        required: true\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AgentPoolUpdate'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.agentPools.manage\n      tags:\n        - AgentPools\n  /api/v1/agentPools/{poolId}/updates/settings:\n    parameters:\n      - $ref: '#/components/parameters/pathPoolId'\n    get:\n      summary: Retrieve an Agent Pool update's settings\n      description: Gets the current state of the agent pool update instance settings\n      operationId: getAgentPoolsUpdateSettings\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AgentPoolUpdateSetting'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.agentPools.read\n      tags:\n        - AgentPools\n    post:\n      summary: Update an Agent Pool update settings\n      description: Updates Agent pool update settings\n      operationId: setAgentPoolsUpdateSettings\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AgentPoolUpdateSetting'\n        required: true\n      responses:\n        '201':\n          description: Updated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AgentPoolUpdateSetting'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.agentPools.manage\n      tags:\n        - AgentPools\n  /api/v1/agentPools/{poolId}/updates/{updateId}:\n    parameters:\n      - $ref: '#/components/parameters/pathPoolId'\n      - $ref: '#/components/parameters/pathUpdateId'\n    get:\n      summary: Retrieve an Agent Pool update by id\n      description: Gets Agent pool update from updateId\n      operationId: getAgentPoolsUpdateInstance\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AgentPoolUpdate'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.agentPools.read\n      tags:\n        - AgentPools\n    post:\n      summary: Update an Agent Pool update by id\n      description: Updates Agent pool update and return latest agent pool update\n      operationId: updateAgentPoolsUpdate\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AgentPoolUpdate'\n        required: true\n      responses:\n        '201':\n          description: Updated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AgentPoolUpdate'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.agentPools.manage\n      tags:\n        - AgentPools\n    delete:\n      summary: Delete an Agent Pool update\n      description: Deletes Agent pool update\n      operationId: deleteAgentPoolsUpdate\n      responses:\n        '204':\n          description: Deleted\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.agentPools.manage\n      tags:\n        - AgentPools\n  /api/v1/agentPools/{poolId}/updates/{updateId}/activate:\n    parameters:\n      - $ref: '#/components/parameters/pathPoolId'\n      - $ref: '#/components/parameters/pathUpdateId'\n    post:\n      summary: Activate an Agent Pool update\n      description: Activates scheduled Agent pool update\n      operationId: activateAgentPoolsUpdate\n      responses:\n        '201':\n          description: Activated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AgentPoolUpdate'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.agentPools.manage\n      tags:\n        - AgentPools\n  /api/v1/agentPools/{poolId}/updates/{updateId}/deactivate:\n    parameters:\n      - $ref: '#/components/parameters/pathPoolId'\n      - $ref: '#/components/parameters/pathUpdateId'\n    post:\n      summary: Deactivate an Agent Pool update\n      description: Deactivates scheduled Agent pool update\n      operationId: deactivateAgentPoolsUpdate\n      responses:\n        '201':\n          description: Deactivated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AgentPoolUpdate'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.agentPools.manage\n      tags:\n        - AgentPools\n  /api/v1/agentPools/{poolId}/updates/{updateId}/pause:\n    parameters:\n      - $ref: '#/components/parameters/pathPoolId'\n      - $ref: '#/components/parameters/pathUpdateId'\n    post:\n      summary: Pause an Agent Pool update\n      description: Pauses running or queued Agent pool update\n      operationId: pauseAgentPoolsUpdate\n      responses:\n        '201':\n          description: Paused\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AgentPoolUpdate'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.agentPools.manage\n      tags:\n        - AgentPools\n  /api/v1/agentPools/{poolId}/updates/{updateId}/resume:\n    parameters:\n      - $ref: '#/components/parameters/pathPoolId'\n      - $ref: '#/components/parameters/pathUpdateId'\n    post:\n      summary: Resume an Agent Pool update\n      description: Resumes running or queued Agent pool update\n      operationId: resumeAgentPoolsUpdate\n      responses:\n        '201':\n          description: Resumed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AgentPoolUpdate'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.agentPools.manage\n      tags:\n        - AgentPools\n  /api/v1/agentPools/{poolId}/updates/{updateId}/retry:\n    parameters:\n      - $ref: '#/components/parameters/pathPoolId'\n      - $ref: '#/components/parameters/pathUpdateId'\n    post:\n      summary: Retry an Agent Pool update\n      description: Retries Agent pool update\n      operationId: retryAgentPoolsUpdate\n      responses:\n        '201':\n          description: Retried\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AgentPoolUpdate'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.agentPools.manage\n      tags:\n        - AgentPools\n  /api/v1/agentPools/{poolId}/updates/{updateId}/stop:\n    parameters:\n      - $ref: '#/components/parameters/pathPoolId'\n      - $ref: '#/components/parameters/pathUpdateId'\n    post:\n      summary: Stop an Agent Pool update\n      description: Stops Agent pool update\n      operationId: stopAgentPoolsUpdate\n      responses:\n        '201':\n          description: Stopped\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AgentPoolUpdate'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.agentPools.manage\n      tags:\n        - AgentPools\n  /api/v1/api-tokens:\n    get:\n      summary: List all API Token Metadata\n      description: Enumerates the metadata of the active API tokens in your organization.\n      operationId: listApiTokens\n      parameters:\n        - $ref: '#/components/parameters/queryAfter'\n        - $ref: '#/components/parameters/queryLimit'\n        - name: q\n          in: query\n          description: Finds a token that matches the name or clientName.\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ApiToken'\n              examples:\n                List Tokens:\n                  $ref: '#/components/examples/ApiTokenListMetadataResponse'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.apiTokens.read\n      tags:\n        - ApiToken\n  /api/v1/api-tokens/current:\n    delete:\n      summary: Revoke the Current API Token\n      description: Revokes the API token provided in the Authorization header.\n      operationId: revokeCurrentApiToken\n      responses:\n        '204':\n          description: No Content\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n      tags:\n        - ApiToken\n  /api/v1/api-tokens/{apiTokenId}:\n    parameters:\n      - $ref: '#/components/parameters/pathApiTokenId'\n    get:\n      summary: Retrieve an API Token's Metadata\n      description: Get the metadata for an active API token by id.\n      operationId: getApiToken\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiToken'\n              examples:\n                HCaptcha:\n                  $ref: '#/components/examples/ApiTokenMetadataResponse'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.apiTokens.read\n      tags:\n        - ApiToken\n    delete:\n      summary: Revoke an API Token\n      description: Revoke an API token by id.\n      operationId: revokeApiToken\n      responses:\n        '204':\n          description: No Content\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.apiTokens.manage\n      tags:\n        - ApiToken\n  /api/v1/apps:\n    get:\n      summary: List all Applications\n      description: Enumerates apps added to your organization with pagination. A subset of apps can be returned that match a supported filter expression or query.\n      operationId: listApplications\n      parameters:\n        - name: q\n          in: query\n          schema:\n            type: string\n        - name: after\n          in: query\n          description: Specifies the pagination cursor for the next page of apps\n          schema:\n            type: string\n        - name: limit\n          in: query\n          description: Specifies the number of results for a page\n          schema:\n            type: integer\n            format: int32\n            default: -1\n        - name: filter\n          in: query\n          description: Filters apps by status, user.id, group.id or credentials.signing.kid expression\n          schema:\n            type: string\n        - name: expand\n          in: query\n          description: Traverses users link relationship and optionally embeds Application User resource\n          schema:\n            type: string\n        - name: includeNonDeleted\n          in: query\n          schema:\n            type: boolean\n            default: false\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Application'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.apps.read\n      tags:\n        - Application\n    post:\n      summary: Create an Application\n      description: Adds a new application to your Okta organization.\n      operationId: createApplication\n      parameters:\n        - name: activate\n          in: query\n          description: Executes activation lifecycle operation when creating the app\n          schema:\n            type: boolean\n            default: true\n        - name: OktaAccessGateway-Agent\n          in: header\n          schema:\n            type: string\n      x-codegen-request-body-name: application\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Application'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Application'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.apps.manage\n      tags:\n        - Application\n  /api/v1/apps/{appId}:\n    get:\n      summary: Retrieve an Application\n      description: Fetches an application from your Okta organization by `id`.\n      operationId: getApplication\n      parameters:\n        - name: appId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: expand\n          in: query\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Application'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.apps.read\n      tags:\n        - Application\n    put:\n      summary: Replace an Application\n      description: Updates an application in your organization.\n      operationId: updateApplication\n      parameters:\n        - name: appId\n          in: path\n          required: true\n          schema:\n            type: string\n      x-codegen-request-body-name: application\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Application'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Application'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.apps.manage\n      tags:\n        - Application\n    delete:\n      summary: Delete an Application\n      description: Removes an inactive application.\n      operationId: deleteApplication\n      parameters:\n        - name: appId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.apps.manage\n      tags:\n        - Application\n  /api/v1/apps/{appId}/connections/default:\n    get:\n      summary: Retrieve the default Provisioning Connection\n      description: Get default Provisioning Connection for application\n      operationId: getDefaultProvisioningConnectionForApplication\n      parameters:\n        - in: path\n          name: appId\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProvisioningConnection'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.apps.read\n      tags:\n        - Application\n    post:\n      summary: Update the default Provisioning Connection\n      description: Set default Provisioning Connection for application\n      operationId: setDefaultProvisioningConnectionForApplication\n      parameters:\n        - in: path\n          name: appId\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: activate\n          schema:\n            type: boolean\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ProvisioningConnectionRequest'\n        required: true\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProvisioningConnection'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.apps.manage\n      tags:\n        - Application\n  /api/v1/apps/{appId}/connections/default/lifecycle/activate:\n    post:\n      summary: Activate the default Provisioning Connection\n      description: Activates the default Provisioning Connection for an application.\n      operationId: activateDefaultProvisioningConnectionForApplication\n      parameters:\n        - in: path\n          name: appId\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.apps.manage\n      tags:\n        - Application\n  /api/v1/apps/{appId}/connections/default/lifecycle/deactivate:\n    post:\n      summary: Deactivate the default Provisioning Connection for an Application\n      description: Deactivates the default Provisioning Connection for an application.\n      operationId: deactivateDefaultProvisioningConnectionForApplication\n      parameters:\n        - in: path\n          name: appId\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.apps.manage\n      tags:\n        - Application\n  /api/v1/apps/{appId}/credentials/csrs:\n    get:\n      summary: List all Certificate Signing Requests\n      description: Enumerates Certificate Signing Requests for an application\n      operationId: listCsrsForApplication\n      parameters:\n        - name: appId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Csr'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.apps.read\n      tags:\n        - Application\n    post:\n      summary: Generate a Certificate Signing Request\n      description: Generates a new key pair and returns the Certificate Signing Request for it.\n      operationId: generateCsrForApplication\n      parameters:\n        - name: appId\n          in: path\n          required: true\n          schema:\n            type: string\n      x-codegen-request-body-name: metadata\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CsrMetadata'\n        required: true\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Csr'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.apps.manage\n      tags:\n        - Application\n  /api/v1/apps/{appId}/credentials/csrs/{csrId}:\n    get:\n      summary: Retrieve a Certificate Signing Request\n      description: Fetches a certificate signing request for the app by `id`.\n      operationId: getCsrForApplication\n      parameters:\n        - name: appId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: csrId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Csr'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.apps.read\n      tags:\n        - Application\n    delete:\n      summary: Revoke a Certificate Signing Request\n      description: Revokes a certificate signing request and deletes the key pair from the application.\n      operationId: revokeCsrFromApplication\n      parameters:\n        - name: appId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: csrId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.apps.manage\n      tags:\n        - Application\n  /api/v1/apps/{appId}/credentials/csrs/{csrId}/lifecycle/publish:\n    post:\n      summary: Publish a Certificate Signing Request\n      description: Updates a certificate signing request for the app with a signed X.509 certificate and adds it into the application key credentials\n      operationId: publishCsrFromApplication\n      parameters:\n        - name: appId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: csrId\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/x-x509-ca-cert:\n            schema:\n              type: string\n              format: binary\n              x-okta-operationId: publishBinaryCerCert\n          application/pkix-cert:\n            schema:\n              type: string\n              format: binary\n              x-okta-operationId: publishBinaryDerCert\n          application/x-pem-file:\n            schema:\n              type: string\n              format: binary\n              x-okta-operationId: publishBinaryPemCert\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JsonWebKey'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.apps.manage\n      tags:\n        - Application\n  /api/v1/apps/{appId}/credentials/keys:\n    get:\n      summary: List all Key Credentials\n      description: Enumerates key credentials for an application\n      operationId: listApplicationKeys\n      parameters:\n        - name: appId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/JsonWebKey'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.apps.read\n      tags:\n        - Application\n  /api/v1/apps/{appId}/credentials/keys/generate:\n    post:\n      summary: Generate a Key Credential\n      description: Generates a new X.509 certificate for an application key credential\n      operationId: generateApplicationKey\n      parameters:\n        - name: appId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: validityYears\n          in: query\n          schema:\n            type: integer\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JsonWebKey'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.apps.manage\n      tags:\n        - Application\n  /api/v1/apps/{appId}/credentials/keys/{keyId}:\n    get:\n      summary: Retrieve a Key Credential\n      description: Gets a specific application key credential by kid\n      operationId: getApplicationKey\n      parameters:\n        - name: appId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: keyId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JsonWebKey'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.apps.read\n      tags:\n        - Application\n  /api/v1/apps/{appId}/credentials/keys/{keyId}/clone:\n    post:\n      summary: Clone a Key Credential\n      description: Clones a X.509 certificate for an application key credential from a source application to target application.\n      operationId: cloneApplicationKey\n      parameters:\n        - name: appId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: keyId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: targetAid\n          in: query\n          description: Unique key of the target Application\n          required: true\n          schema:\n            type: string\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JsonWebKey'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.apps.manage\n      tags:\n        - Application\n  /api/v1/apps/{appId}/features:\n    get:\n      summary: List all Features\n      description: List Features for application\n      operationId: listFeaturesForApplication\n      parameters:\n        - in: path\n          name: appId\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/ApplicationFeature'\n                type: array\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.apps.read\n      tags:\n        - Application\n  /api/v1/apps/{appId}/features/{name}:\n    get:\n      summary: Retrieve a Feature\n      description: Fetches a Feature object for an application.\n      operationId: getFeatureForApplication\n      parameters:\n        - in: path\n          name: appId\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: name\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApplicationFeature'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.apps.read\n      tags:\n        - Application\n    put:\n      summary: Update a Feature\n      description: Updates a Feature object for an application.\n      operationId: updateFeatureForApplication\n      parameters:\n        - in: path\n          name: appId\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CapabilitiesObject'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApplicationFeature'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.apps.manage\n      tags:\n        - Application\n  /api/v1/apps/{appId}/grants:\n    get:\n      summary: List all Scope Consent Grants\n      description: Lists all scope consent grants for the application\n      operationId: listScopeConsentGrants\n      parameters:\n        - name: appId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: expand\n          in: query\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/OAuth2ScopeConsentGrant'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n      tags:\n        - Application\n    post:\n      summary: Grant Consent to Scope\n      description: Grants consent for the application to request an OAuth 2.0 Okta scope\n      operationId: grantConsentToScope\n      parameters:\n        - name: appId\n          in: path\n          required: true\n          schema:\n            type: string\n      x-codegen-request-body-name: oAuth2ScopeConsentGrant\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/OAuth2ScopeConsentGrant'\n        required: true\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OAuth2ScopeConsentGrant'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n      tags:\n        - Application\n  /api/v1/apps/{appId}/grants/{grantId}:\n    get:\n      summary: Retrieve a Scope Consent Grant\n      description: Fetches a single scope consent grant for the application\n      operationId: getScopeConsentGrant\n      parameters:\n        - name: appId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: grantId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: expand\n          in: query\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OAuth2ScopeConsentGrant'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n      tags:\n        - Application\n    delete:\n      summary: Revoke a Scope Consent Grant\n      description: Revokes permission for the application to request the given scope\n      operationId: revokeScopeConsentGrant\n      parameters:\n        - name: appId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: grantId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n      tags:\n        - Application\n  /api/v1/apps/{appId}/groups:\n    get:\n      summary: List all Assigned Groups\n      description: Enumerates group assignments for an application.\n      operationId: listApplicationGroupAssignments\n      parameters:\n        - name: appId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: q\n          in: query\n          schema:\n            type: string\n        - name: after\n          in: query\n          description: Specifies the pagination cursor for the next page of assignments\n          schema:\n            type: string\n        - name: limit\n          in: query\n          description: Specifies the number of results for a page\n          schema:\n            type: integer\n            format: int32\n            default: -1\n        - name: expand\n          in: query\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ApplicationGroupAssignment'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.apps.read\n      tags:\n        - Application\n  /api/v1/apps/{appId}/groups/{groupId}:\n    get:\n      summary: Retrieve an Assigned Group\n      description: Fetches an application group assignment\n      operationId: getApplicationGroupAssignment\n      parameters:\n        - name: appId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: groupId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: expand\n          in: query\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApplicationGroupAssignment'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.apps.read\n      tags:\n        - Application\n    put:\n      summary: Assign a Group\n      description: Assigns a group to an application\n      operationId: createApplicationGroupAssignment\n      parameters:\n        - name: appId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: groupId\n          in: path\n          required: true\n          schema:\n            type: string\n      x-codegen-request-body-name: applicationGroupAssignment\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ApplicationGroupAssignment'\n        required: false\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApplicationGroupAssignment'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.apps.manage\n      tags:\n        - Application\n    delete:\n      summary: Unassign a Group\n      description: Removes a group assignment from an application.\n      operationId: deleteApplicationGroupAssignment\n      parameters:\n        - name: appId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: groupId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.apps.manage\n      tags:\n        - Application\n  /api/v1/apps/{appId}/lifecycle/activate:\n    post:\n      summary: Activate an Application\n      description: Activates an inactive application.\n      operationId: activateApplication\n      parameters:\n        - name: appId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.apps.manage\n      tags:\n        - Application\n  /api/v1/apps/{appId}/lifecycle/deactivate:\n    post:\n      summary: Deactivate an Application\n      description: Deactivates an active application.\n      operationId: deactivateApplication\n      parameters:\n        - name: appId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.apps.manage\n      tags:\n        - Application\n  /api/v1/apps/{appId}/logo:\n    post:\n      summary: Upload a Logo\n      description: The file must be in PNG, JPG, or GIF format, and less than 1 MB in size. For best results use landscape orientation, a transparent background, and a minimum size of 420px by 120px to prevent upscaling.\n      operationId: uploadApplicationLogo\n      parameters:\n        - in: path\n          name: appId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                file:\n                  type: string\n                  format: binary\n              required:\n                - file\n      responses:\n        '201':\n          description: Created\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.apps.manage\n      tags:\n        - Application\n  /api/v1/apps/{appId}/policies/{policyId}:\n    put:\n      summary: Assign an application to a specific policy\n      description: Assign an application to a specific policy. This unassigns the application from its currently assigned policy.\n      operationId: assignApplicationPolicy\n      parameters:\n        - in: path\n          name: appId\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: policyId\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.apps.manage\n      tags:\n        - Application\n  /api/v1/apps/{appId}/tokens:\n    get:\n      summary: List all OAuth 2.0 Tokens\n      description: Lists all tokens for the application\n      operationId: listOAuth2TokensForApplication\n      parameters:\n        - name: appId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: expand\n          in: query\n          schema:\n            type: string\n        - name: after\n          in: query\n          schema:\n            type: string\n        - name: limit\n          in: query\n          schema:\n            type: integer\n            format: int32\n            default: 20\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/OAuth2Token'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.apps.read\n      tags:\n        - Application\n    delete:\n      summary: Revoke all OAuth 2.0 Tokens\n      description: Revokes all tokens for the specified application\n      operationId: revokeOAuth2TokensForApplication\n      parameters:\n        - name: appId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.apps.manage\n      tags:\n        - Application\n  /api/v1/apps/{appId}/tokens/{tokenId}:\n    get:\n      summary: Retrieve an OAuth 2.0 Token\n      description: Gets a token for the specified application\n      operationId: getOAuth2TokenForApplication\n      parameters:\n        - name: appId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: tokenId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: expand\n          in: query\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OAuth2Token'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.apps.read\n      tags:\n        - Application\n    delete:\n      summary: Revoke an OAuth 2.0 Token\n      description: Revokes the specified token for the specified application\n      operationId: revokeOAuth2TokenForApplication\n      parameters:\n        - name: appId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: tokenId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.apps.manage\n      tags:\n        - Application\n  /api/v1/apps/{appId}/users:\n    get:\n      summary: List all Assigned Users\n      description: Enumerates all assigned [application users](#application-user-model) for an application.\n      operationId: listApplicationUsers\n      parameters:\n        - name: appId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: q\n          in: query\n          schema:\n            type: string\n        - name: query_scope\n          in: query\n          schema:\n            type: string\n        - name: after\n          in: query\n          description: specifies the pagination cursor for the next page of assignments\n          schema:\n            type: string\n        - name: limit\n          in: query\n          description: specifies the number of results for a page\n          schema:\n            type: integer\n            format: int32\n            default: -1\n        - name: filter\n          in: query\n          schema:\n            type: string\n        - name: expand\n          in: query\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/AppUser'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.apps.read\n      tags:\n        - Application\n    post:\n      summary: Assign a User\n      description: Assigns an user to an application with [credentials](#application-user-credentials-object) and an app-specific [profile](#application-user-profile-object). Profile mappings defined for the application are first applied before applying any profile properties specified in the request.\n      operationId: assignUserToApplication\n      parameters:\n        - name: appId\n          in: path\n          required: true\n          schema:\n            type: string\n      x-codegen-request-body-name: appUser\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AppUser'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppUser'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.apps.manage\n      tags:\n        - Application\n  /api/v1/apps/{appId}/users/{userId}:\n    get:\n      summary: Retrieve an Assigned User\n      description: Fetches a specific user assignment for application by `id`.\n      operationId: getApplicationUser\n      parameters:\n        - name: appId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: expand\n          in: query\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppUser'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.apps.read\n      tags:\n        - Application\n    post:\n      summary: Update an Application Profile for Assigned User\n      description: Updates a user's profile for an application\n      operationId: updateApplicationUser\n      parameters:\n        - name: appId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n      x-codegen-request-body-name: appUser\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AppUser'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppUser'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.apps.manage\n      tags:\n        - Application\n    delete:\n      summary: Unassign a User\n      description: Removes an assignment for a user from an application.\n      operationId: deleteApplicationUser\n      parameters:\n        - name: appId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: sendEmail\n          in: query\n          schema:\n            type: boolean\n            default: false\n          x-okta-added-version: 1.5.0\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.apps.manage\n      tags:\n        - Application\n  /api/v1/authenticators:\n    get:\n      summary: List all Authenticators\n      description: Enumerates authenticators in your organization.\n      operationId: listAuthenticators\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Authenticator'\n                type: array\n              examples:\n                Org Authenticators:\n                  $ref: '#/components/examples/AuthenticatorsResponse'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.authenticators.read\n      tags:\n        - Authenticator\n    post:\n      summary: Create an Authenticator\n      description: Creates an authenticator. You can use this operation as part of the \"Create a custom authenticator\" flow. See the [Custom authenticator integration guide](https://developer.okta.com/docs/guides/authenticators-custom-authenticator/android/main/).\n      operationId: createAuthenticator\n      parameters:\n        - in: query\n          name: activate\n          description: Whether to execute the activation lifecycle operation when Okta creates the authenticator\n          schema:\n            type: boolean\n            default: false\n      x-codegen-request-body-name: authenticator\n      requestBody:\n        $ref: '#/components/requestBodies/AuthenticatorRequestBody'\n      responses:\n        '200':\n          $ref: '#/components/responses/AuthenticatorResponse'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.authenticators.manage\n      tags:\n        - Authenticator\n  /api/v1/authenticators/{authenticatorId}:\n    get:\n      summary: Retrieve an Authenticator\n      description: Fetches an authenticator from your Okta organization by `authenticatorId`.\n      operationId: getAuthenticator\n      parameters:\n        - in: path\n          name: authenticatorId\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/AuthenticatorResponse'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.authenticators.read\n      tags:\n        - Authenticator\n    put:\n      summary: Replace an Authenticator\n      description: Updates an authenticator\n      operationId: updateAuthenticator\n      parameters:\n        - in: path\n          name: authenticatorId\n          required: true\n          schema:\n            type: string\n      x-codegen-request-body-name: authenticator\n      requestBody:\n        $ref: '#/components/requestBodies/AuthenticatorRequestBody'\n      responses:\n        '200':\n          $ref: '#/components/responses/AuthenticatorResponse'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.authenticators.manage\n      tags:\n        - Authenticator\n  /api/v1/authenticators/{authenticatorId}/lifecycle/activate:\n    post:\n      summary: Activate an Authenticator\n      description: Activates an authenticator by `authenticatorId`.\n      operationId: activateAuthenticator\n      parameters:\n        - in: path\n          name: authenticatorId\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/AuthenticatorResponse'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.authenticators.manage\n      tags:\n        - Authenticator\n  /api/v1/authenticators/{authenticatorId}/lifecycle/deactivate:\n    post:\n      summary: Deactivate an Authenticator\n      description: Deactivates an authenticator by `authenticatorId`.\n      operationId: deactivateAuthenticator\n      parameters:\n        - in: path\n          name: authenticatorId\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/AuthenticatorResponse'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.authenticators.manage\n      tags:\n        - Authenticator\n  /api/v1/authorizationServers:\n    get:\n      summary: List all Authorization Servers\n      description: List all authorization servers\n      operationId: listAuthorizationServers\n      parameters:\n        - name: q\n          in: query\n          schema:\n            type: string\n        - name: limit\n          in: query\n          schema:\n            type: integer\n            format: int32\n            default: 200\n        - name: after\n          in: query\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/AuthorizationServer'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.authorizationServers.read\n      tags:\n        - AuthorizationServer\n    post:\n      summary: Create an Authorization Server\n      description: Create an authorization server\n      operationId: createAuthorizationServer\n      x-codegen-request-body-name: authorizationServer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AuthorizationServer'\n        required: true\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthorizationServer'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.authorizationServers.manage\n      tags:\n        - AuthorizationServer\n  /api/v1/authorizationServers/{authServerId}:\n    get:\n      summary: Retrieve an Authorization Server\n      description: Retrieve an authorization server\n      operationId: getAuthorizationServer\n      parameters:\n        - name: authServerId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthorizationServer'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.authorizationServers.read\n      tags:\n        - AuthorizationServer\n    put:\n      summary: Replace an Authorization Server\n      description: Replace an authorization server\n      operationId: updateAuthorizationServer\n      parameters:\n        - name: authServerId\n          in: path\n          required: true\n          schema:\n            type: string\n      x-codegen-request-body-name: authorizationServer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AuthorizationServer'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthorizationServer'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.authorizationServers.manage\n      tags:\n        - AuthorizationServer\n    delete:\n      summary: Delete an Authorization Server\n      description: Delete an authorization server\n      operationId: deleteAuthorizationServer\n      parameters:\n        - name: authServerId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.authorizationServers.manage\n      tags:\n        - AuthorizationServer\n  /api/v1/authorizationServers/{authServerId}/claims:\n    get:\n      summary: List all Custom Token Claims\n      description: List all custom token claims\n      operationId: listOAuth2Claims\n      parameters:\n        - name: authServerId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/OAuth2Claim'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.authorizationServers.read\n      tags:\n        - AuthorizationServer\n    post:\n      summary: Create a Custom Token Claim\n      description: Create a custom token claim\n      operationId: createOAuth2Claim\n      parameters:\n        - name: authServerId\n          in: path\n          required: true\n          schema:\n            type: string\n      x-codegen-request-body-name: oAuth2Claim\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/OAuth2Claim'\n        required: true\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OAuth2Claim'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.authorizationServers.manage\n      tags:\n        - AuthorizationServer\n  /api/v1/authorizationServers/{authServerId}/claims/{claimId}:\n    get:\n      summary: Retrieve a Custom Token Claim\n      description: Retrieve a custom token claim\n      operationId: getOAuth2Claim\n      parameters:\n        - name: authServerId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: claimId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OAuth2Claim'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.authorizationServers.read\n      tags:\n        - AuthorizationServer\n    put:\n      summary: Replace a Custom Token Claim\n      description: Replace a custom token claim\n      operationId: updateOAuth2Claim\n      parameters:\n        - name: authServerId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: claimId\n          in: path\n          required: true\n          schema:\n            type: string\n      x-codegen-request-body-name: oAuth2Claim\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/OAuth2Claim'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OAuth2Claim'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.authorizationServers.manage\n      tags:\n        - AuthorizationServer\n    delete:\n      summary: Delete a Custom Token Claim\n      description: Delete a custom token claim\n      operationId: deleteOAuth2Claim\n      parameters:\n        - name: authServerId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: claimId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.authorizationServers.manage\n      tags:\n        - AuthorizationServer\n  /api/v1/authorizationServers/{authServerId}/clients:\n    get:\n      summary: List all Clients\n      description: List all clients\n      operationId: listOAuth2ClientsForAuthorizationServer\n      parameters:\n        - name: authServerId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/OAuth2Client'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.authorizationServers.read\n      tags:\n        - AuthorizationServer\n  /api/v1/authorizationServers/{authServerId}/clients/{clientId}/tokens:\n    get:\n      summary: List all Refresh Tokens for a Client\n      description: List all refresh tokens for a client\n      operationId: listRefreshTokensForAuthorizationServerAndClient\n      parameters:\n        - name: authServerId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: clientId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: expand\n          in: query\n          schema:\n            type: string\n        - name: after\n          in: query\n          schema:\n            type: string\n        - name: limit\n          in: query\n          schema:\n            type: integer\n            format: int32\n            default: -1\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/OAuth2RefreshToken'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.authorizationServers.read\n      tags:\n        - AuthorizationServer\n    delete:\n      summary: Revoke all Refresh Tokens for a Client\n      description: Revoke all refresh tokens for a client\n      operationId: revokeRefreshTokensForAuthorizationServerAndClient\n      parameters:\n        - name: authServerId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: clientId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.authorizationServers.manage\n      tags:\n        - AuthorizationServer\n  /api/v1/authorizationServers/{authServerId}/clients/{clientId}/tokens/{tokenId}:\n    get:\n      summary: Retrieve a Refresh Token for a Client\n      description: Retrieve a refresh token for a client\n      operationId: getRefreshTokenForAuthorizationServerAndClient\n      parameters:\n        - name: authServerId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: clientId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: tokenId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: expand\n          in: query\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OAuth2RefreshToken'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.authorizationServers.read\n      tags:\n        - AuthorizationServer\n    delete:\n      summary: Revoke a Refresh Token for a Client\n      description: Revoke a refresh token for a client\n      operationId: revokeRefreshTokenForAuthorizationServerAndClient\n      parameters:\n        - name: authServerId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: clientId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: tokenId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.authorizationServers.manage\n      tags:\n        - AuthorizationServer\n  /api/v1/authorizationServers/{authServerId}/credentials/keys:\n    get:\n      summary: List all Credential Keys\n      description: List all credential keys\n      operationId: listAuthorizationServerKeys\n      parameters:\n        - name: authServerId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/JsonWebKey'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.authorizationServers.read\n      tags:\n        - AuthorizationServer\n  /api/v1/authorizationServers/{authServerId}/credentials/lifecycle/keyRotate:\n    post:\n      summary: Rotate all Credential Keys\n      description: Rotate all credential keys\n      operationId: rotateAuthorizationServerKeys\n      parameters:\n        - name: authServerId\n          in: path\n          required: true\n          schema:\n            type: string\n      x-codegen-request-body-name: use\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/JwkUse'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/JsonWebKey'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.authorizationServers.manage\n      tags:\n        - AuthorizationServer\n  /api/v1/authorizationServers/{authServerId}/lifecycle/activate:\n    post:\n      summary: Activate an Authorization Server\n      description: Activate an authorization server\n      operationId: activateAuthorizationServer\n      parameters:\n        - name: authServerId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.authorizationServers.manage\n      tags:\n        - AuthorizationServer\n  /api/v1/authorizationServers/{authServerId}/lifecycle/deactivate:\n    post:\n      summary: Deactivate an Authorization Server\n      description: Deactivate an authorization server\n      operationId: deactivateAuthorizationServer\n      parameters:\n        - name: authServerId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.authorizationServers.manage\n      tags:\n        - AuthorizationServer\n  /api/v1/authorizationServers/{authServerId}/policies:\n    get:\n      summary: List all Policies\n      description: List all policies\n      operationId: listAuthorizationServerPolicies\n      parameters:\n        - name: authServerId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/AuthorizationServerPolicy'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.authorizationServers.read\n      tags:\n        - AuthorizationServer\n    post:\n      summary: Create a Policy\n      description: Create a policy\n      operationId: createAuthorizationServerPolicy\n      parameters:\n        - name: authServerId\n          in: path\n          required: true\n          schema:\n            type: string\n      x-codegen-request-body-name: policy\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AuthorizationServerPolicy'\n        required: true\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthorizationServerPolicy'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.authorizationServers.manage\n      tags:\n        - AuthorizationServer\n  /api/v1/authorizationServers/{authServerId}/policies/{policyId}:\n    get:\n      summary: Retrieve a Policy\n      description: Retrieve a policy\n      operationId: getAuthorizationServerPolicy\n      parameters:\n        - name: authServerId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: policyId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthorizationServerPolicy'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.authorizationServers.read\n      tags:\n        - AuthorizationServer\n    put:\n      summary: Replace a Policy\n      description: Replace a policy\n      operationId: updateAuthorizationServerPolicy\n      parameters:\n        - name: authServerId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: policyId\n          in: path\n          required: true\n          schema:\n            type: string\n      x-codegen-request-body-name: policy\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AuthorizationServerPolicy'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthorizationServerPolicy'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.authorizationServers.manage\n      tags:\n        - AuthorizationServer\n    delete:\n      summary: Delete a Policy\n      description: Delete a policy\n      operationId: deleteAuthorizationServerPolicy\n      parameters:\n        - name: authServerId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: policyId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.authorizationServers.manage\n      tags:\n        - AuthorizationServer\n  /api/v1/authorizationServers/{authServerId}/policies/{policyId}/lifecycle/activate:\n    post:\n      summary: Activate a Policy\n      description: Activate Authorization Server Policy\n      operationId: activateAuthorizationServerPolicy\n      parameters:\n        - name: authServerId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: policyId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.authorizationServers.manage\n      tags:\n        - AuthorizationServer\n  /api/v1/authorizationServers/{authServerId}/policies/{policyId}/lifecycle/deactivate:\n    post:\n      summary: Deactivate a Policy\n      description: Deactivate Authorization Server Policy\n      operationId: deactivateAuthorizationServerPolicy\n      parameters:\n        - name: authServerId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: policyId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.authorizationServers.manage\n      tags:\n        - AuthorizationServer\n  /api/v1/authorizationServers/{authServerId}/policies/{policyId}/rules:\n    get:\n      summary: List all Policy Rules\n      description: Enumerates all policy rules for the specified Custom Authorization Server and Policy.\n      operationId: listAuthorizationServerPolicyRules\n      parameters:\n        - name: policyId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: authServerId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/AuthorizationServerPolicyRule'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.authorizationServers.read\n      tags:\n        - AuthorizationServer\n    post:\n      summary: Create a Policy Rule\n      description: Creates a policy rule for the specified Custom Authorization Server and Policy.\n      operationId: createAuthorizationServerPolicyRule\n      parameters:\n        - name: policyId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: authServerId\n          in: path\n          required: true\n          schema:\n            type: string\n      x-codegen-request-body-name: policyRule\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AuthorizationServerPolicyRule'\n        required: true\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthorizationServerPolicyRule'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.authorizationServers.manage\n      tags:\n        - AuthorizationServer\n  /api/v1/authorizationServers/{authServerId}/policies/{policyId}/rules/{ruleId}:\n    get:\n      summary: Retrieve a Policy Rule\n      description: Returns a Policy Rule by ID that is defined in the specified Custom Authorization Server and Policy.\n      operationId: getAuthorizationServerPolicyRule\n      parameters:\n        - name: policyId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: authServerId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: ruleId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthorizationServerPolicyRule'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.authorizationServers.read\n      tags:\n        - AuthorizationServer\n    put:\n      summary: Replace a Policy Rule\n      description: Updates the configuration of the Policy Rule defined in the specified Custom Authorization Server and Policy.\n      operationId: updateAuthorizationServerPolicyRule\n      parameters:\n        - name: policyId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: authServerId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: ruleId\n          in: path\n          required: true\n          schema:\n            type: string\n      x-codegen-request-body-name: policyRule\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AuthorizationServerPolicyRule'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthorizationServerPolicyRule'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.authorizationServers.manage\n      tags:\n        - AuthorizationServer\n    delete:\n      summary: Delete a Policy Rule\n      description: Deletes a Policy Rule defined in the specified Custom Authorization Server and Policy.\n      operationId: deleteAuthorizationServerPolicyRule\n      parameters:\n        - name: policyId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: authServerId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: ruleId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.authorizationServers.manage\n      tags:\n        - AuthorizationServer\n  /api/v1/authorizationServers/{authServerId}/policies/{policyId}/rules/{ruleId}/lifecycle/activate:\n    post:\n      summary: Activate a Policy Rule\n      description: Activate Authorization Server Policy Rule\n      operationId: activateAuthorizationServerPolicyRule\n      parameters:\n        - name: authServerId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: policyId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: ruleId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.authorizationServers.manage\n      tags:\n        - AuthorizationServer\n  /api/v1/authorizationServers/{authServerId}/policies/{policyId}/rules/{ruleId}/lifecycle/deactivate:\n    post:\n      summary: Deactivate a Policy Rule\n      description: Deactivate Authorization Server Policy Rule\n      operationId: deactivateAuthorizationServerPolicyRule\n      parameters:\n        - name: authServerId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: policyId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: ruleId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.authorizationServers.manage\n      tags:\n        - AuthorizationServer\n  /api/v1/authorizationServers/{authServerId}/scopes:\n    get:\n      summary: List all Custom Token Scopes\n      description: List all custom token scopes\n      operationId: listOAuth2Scopes\n      parameters:\n        - name: authServerId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: q\n          in: query\n          schema:\n            type: string\n        - name: filter\n          in: query\n          schema:\n            type: string\n        - name: cursor\n          in: query\n          schema:\n            type: string\n        - name: limit\n          in: query\n          schema:\n            type: integer\n            format: int32\n            default: -1\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/OAuth2Scope'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.authorizationServers.read\n      tags:\n        - AuthorizationServer\n    post:\n      summary: Create a Custom Token Scope\n      description: Create a custom token scope\n      operationId: createOAuth2Scope\n      parameters:\n        - name: authServerId\n          in: path\n          required: true\n          schema:\n            type: string\n      x-codegen-request-body-name: oAuth2Scope\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/OAuth2Scope'\n        required: true\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OAuth2Scope'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.authorizationServers.manage\n      tags:\n        - AuthorizationServer\n  /api/v1/authorizationServers/{authServerId}/scopes/{scopeId}:\n    get:\n      summary: Retrieve a Custom Token Scope\n      description: Retrieve a custom token scope\n      operationId: getOAuth2Scope\n      parameters:\n        - name: authServerId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: scopeId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OAuth2Scope'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.authorizationServers.read\n      tags:\n        - AuthorizationServer\n    put:\n      summary: Replace a Custom Token Scope\n      description: Replace a custom token scope\n      operationId: updateOAuth2Scope\n      parameters:\n        - name: authServerId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: scopeId\n          in: path\n          required: true\n          schema:\n            type: string\n      x-codegen-request-body-name: oAuth2Scope\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/OAuth2Scope'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OAuth2Scope'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.authorizationServers.manage\n      tags:\n        - AuthorizationServer\n    delete:\n      summary: Delete a Custom Token Scope\n      description: Delete a custom token scope\n      operationId: deleteOAuth2Scope\n      parameters:\n        - name: authServerId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: scopeId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.authorizationServers.manage\n      tags:\n        - AuthorizationServer\n  /api/v1/behaviors:\n    get:\n      summary: List all Behavior Detection Rules\n      description: Enumerates Behavior Detection Rules in your organization with pagination.\n      operationId: listBehaviorDetectionRules\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/BehaviorRule'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.behaviors.read\n      tags:\n        - Behavior\n    post:\n      summary: Create a Behavior Detection Rule\n      description: Adds a new Behavior Detection Rule to your organization.\n      operationId: createBehaviorDetectionRule\n      x-codegen-request-body-name: rule\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BehaviorRule'\n            examples:\n              BehaviorRuleRequest:\n                $ref: '#/components/examples/BehaviorRuleRequest'\n        required: true\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BehaviorRule'\n              examples:\n                BehaviorRuleReSponse:\n                  $ref: '#/components/examples/BehaviorRuleResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              examples:\n                API Validation Failed:\n                  $ref: '#/components/examples/ErrorApiValidationFailed'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.behaviors.manage\n      tags:\n        - Behavior\n  /api/v1/behaviors/{behaviorId}:\n    parameters:\n      - $ref: '#/components/parameters/pathBehaviorId'\n    get:\n      summary: Retrieve a Behavior Detection Rule\n      description: Fetches a Behavior Detection Rule by `behaviorId`.\n      operationId: getBehaviorDetectionRule\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BehaviorRule'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              examples:\n                Resource Not Found:\n                  $ref: '#/components/examples/ErrorResourceNotFound'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.behaviors.read\n      tags:\n        - Behavior\n    put:\n      summary: Replace a Behavior Detection Rule\n      description: Update a Behavior Detection Rule by `behaviorId`.\n      operationId: updateBehaviorDetectionRule\n      x-codegen-request-body-name: rule\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BehaviorRule'\n            examples:\n              BehaviorRuleRequest:\n                $ref: '#/components/examples/BehaviorRuleRequest'\n        required: true\n      responses:\n        '200':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BehaviorRule'\n              examples:\n                BehaviorRuleReSponse:\n                  $ref: '#/components/examples/BehaviorRuleResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              examples:\n                API Validation Failed:\n                  $ref: '#/components/examples/ErrorApiValidationFailed'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              examples:\n                Resource Not Found:\n                  $ref: '#/components/examples/ErrorResourceNotFound'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.behaviors.manage\n      tags:\n        - Behavior\n    delete:\n      summary: Delete a Behavior Detection Rule\n      description: Delete a Behavior Detection Rule by `behaviorId`.\n      operationId: deleteBehaviorDetectionRule\n      responses:\n        '204':\n          description: No Content\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              examples:\n                Resource Not Found:\n                  $ref: '#/components/examples/ErrorResourceNotFound'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.behaviors.manage\n      tags:\n        - Behavior\n  /api/v1/behaviors/{behaviorId}/lifecycle/activate:\n    post:\n      summary: Activate a Behavior Detection Rule\n      description: Activate Behavior Detection Rule\n      operationId: activateBehaviorDetectionRule\n      parameters:\n        - $ref: '#/components/parameters/pathBehaviorId'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BehaviorRule'\n              examples:\n                BehaviorRuleReSponse:\n                  $ref: '#/components/examples/BehaviorRuleResponse'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.behaviors.manage\n      tags:\n        - Behavior\n  /api/v1/behaviors/{behaviorId}/lifecycle/deactivate:\n    post:\n      summary: Deactivate a Behavior Detection Rule\n      description: Deactivate Behavior Detection Rule\n      operationId: deactivateBehaviorDetectionRule\n      parameters:\n        - $ref: '#/components/parameters/pathBehaviorId'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BehaviorRule'\n              examples:\n                BehaviorRuleReSponse:\n                  $ref: '#/components/examples/BehaviorRuleResponse'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.behaviors.manage\n      tags:\n        - Behavior\n  /api/v1/brands:\n    get:\n      summary: List all Brands\n      description: List all the brands in your org.\n      operationId: listBrands\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Brand'\n              examples:\n                Get brands response:\n                  $ref: '#/components/examples/ListBrandsResponse'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.brands.read\n      tags:\n        - Customization\n    post:\n      summary: Create a Brand\n      description: Create new brand in your org\n      operationId: createBrand\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateBrandRequest'\n            examples:\n              Create brand request:\n                $ref: '#/components/examples/CreateBrandRequest'\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Brand'\n              examples:\n                Create brand response:\n                  $ref: '#/components/examples/CreateBrandResponse'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.brands.manage\n      tags:\n        - Customization\n  /api/v1/brands/{brandId}:\n    parameters:\n      - $ref: '#/components/parameters/pathBrandId'\n    get:\n      summary: Retrieve a Brand\n      description: Fetches a brand by `brandId`\n      operationId: getBrand\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Brand'\n              examples:\n                Get brand response:\n                  $ref: '#/components/examples/GetBrandResponse'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.brands.read\n      tags:\n        - Customization\n    put:\n      summary: Replace a Brand\n      description: Updates a brand by `brandId`\n      operationId: updateBrand\n      x-codegen-request-body-name: brand\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BrandRequest'\n            examples:\n              Update brand request:\n                $ref: '#/components/examples/UpdateBrandRequest'\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Brand'\n              examples:\n                Update brand response:\n                  $ref: '#/components/examples/UpdateBrandResponse'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.brands.manage\n      tags:\n        - Customization\n    delete:\n      summary: Delete a brand\n      description: Deletes a brand by its unique identifier.\n      operationId: deleteBrand\n      responses:\n        '204':\n          description: Successfully deleted the brand.\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '409':\n          description: Conflict\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              examples:\n                Cannot delete default brand:\n                  $ref: '#/components/examples/ErrorDeleteDefaultBrand'\n                Cannot delete brand associated with a domain:\n                  $ref: '#/components/examples/ErrorDeleteBrandAssociatedWithDomain'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.brands.manage\n      tags:\n        - Customization\n  /api/v1/brands/{brandId}/domains:\n    parameters:\n      - $ref: '#/components/parameters/pathBrandId'\n    get:\n      summary: List all Domains associated with a Brand\n      description: List all domains associated with a brand by `brandId`\n      operationId: getBrandDomains\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BrandDomains'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.brands.read\n      tags:\n        - Customization\n    post:\n      summary: Link a Brand to a Domain\n      description: Link a Brand to a Domain by `domainId`\n      operationId: linkBrandDomain\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateBrandDomainRequest'\n            examples:\n              Create brand request:\n                $ref: '#/components/examples/CreateBrandDomainRequest'\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BrandDomain'\n              examples:\n                Link a brand with a domain:\n                  $ref: '#/components/examples/LinkBrandDomain'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '409':\n          description: Conflict\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              examples:\n                Cannot link default brand with a domain:\n                  $ref: '#/components/examples/ErrorLinkDefaultBrand'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.brands.manage\n      tags:\n        - Customization\n  /api/v1/brands/{brandId}/domains/{domainId}:\n    parameters:\n      - $ref: '#/components/parameters/pathBrandId'\n      - $ref: '#/components/parameters/pathDomainId'\n    delete:\n      summary: Unlink a Brand from a Domain\n      description: Unlink brand and domain by its unique identifier\n      operationId: unlinkBrandDomain\n      responses:\n        '204':\n          description: Successfully unlinked the domain from the brand\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.brands.manage\n      tags:\n        - Customization\n  /api/v1/brands/{brandId}/pages/error:\n    parameters:\n      - $ref: '#/components/parameters/pathBrandId'\n      - $ref: '#/components/parameters/queryExpandPageRoot'\n    get:\n      summary: Retrieve the Error Page\n      description: Retrieves the error page.\n      operationId: retrieveErrorPage\n      responses:\n        '200':\n          description: Successfully retrieved the error page.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PageRoot'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.brands.read\n      tags:\n        - Customization\n  /api/v1/brands/{brandId}/pages/error/customized:\n    parameters:\n      - $ref: '#/components/parameters/pathBrandId'\n    get:\n      summary: Retrieve the Customized Error Page\n      description: Retrieves the customized error page.\n      operationId: retrieveCustomizedErrorPage\n      responses:\n        '200':\n          description: Successfully retrieved the customized error page.\n          headers:\n            Location:\n              schema:\n                type: string\n                format: uri\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomizablePage'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.brands.read\n      tags:\n        - Customization\n    put:\n      summary: Replace the Customized Error Page\n      description: Replaces the customized error page.\n      operationId: replaceCustomizedErrorPage\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CustomizablePage'\n        required: true\n      responses:\n        '200':\n          description: Successfully replaced the customized error page.\n          headers:\n            Location:\n              schema:\n                type: string\n                format: uri\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomizablePage'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.brands.manage\n      tags:\n        - Customization\n    delete:\n      summary: Reset the Customized Error Page\n      description: Resets the customized error page.\n      operationId: resetCustomizedErrorPage\n      responses:\n        '204':\n          description: Successfully reset the customized error page.\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.brands.manage\n      tags:\n        - Customization\n  /api/v1/brands/{brandId}/pages/error/default:\n    parameters:\n      - $ref: '#/components/parameters/pathBrandId'\n    get:\n      summary: Retrieve the Default Error Page\n      description: Retrieves the default error page.\n      operationId: retrieveDefaultErrorPage\n      responses:\n        '200':\n          description: Successfully retrieved the default error page.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomizablePage'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.brands.read\n      tags:\n        - Customization\n  /api/v1/brands/{brandId}/pages/error/preview:\n    parameters:\n      - $ref: '#/components/parameters/pathBrandId'\n    get:\n      summary: Retrieve the Preview Error Page Preview\n      description: Retrieves the preview error page.\n      operationId: retrievePreviewErrorPage\n      responses:\n        '200':\n          description: Successfully retrieved the preview error page.\n          headers:\n            Location:\n              schema:\n                type: string\n                format: uri\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomizablePage'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.brands.read\n      tags:\n        - Customization\n    put:\n      summary: Replace the Preview Error Page\n      description: Replace the preview error page.\n      operationId: replacePreviewErrorPage\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CustomizablePage'\n        required: true\n      responses:\n        '200':\n          description: Successfully replaced the preview error page.\n          headers:\n            Location:\n              schema:\n                type: string\n                format: uri\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomizablePage'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.brands.manage\n      tags:\n        - Customization\n    delete:\n      summary: Reset the Preview Error Page\n      description: Reset the preview error page.\n      operationId: resetPreviewErrorPage\n      responses:\n        '204':\n          description: Successfully reset the preview error page.\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.brands.manage\n      tags:\n        - Customization\n  /api/v1/brands/{brandId}/pages/sign-in:\n    parameters:\n      - $ref: '#/components/parameters/pathBrandId'\n      - $ref: '#/components/parameters/queryExpandPageRoot'\n    get:\n      summary: Retrieve the Sign-in Page\n      description: Retrieves the sign-in page.\n      operationId: retrieveSignInPage\n      responses:\n        '200':\n          description: Successfully retrieved the sign-in page.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PageRoot'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.brands.read\n      tags:\n        - Customization\n  /api/v1/brands/{brandId}/pages/sign-in/customized:\n    parameters:\n      - $ref: '#/components/parameters/pathBrandId'\n    get:\n      summary: Retrieve the Customized Sign-in Page\n      description: Retrieves the customized sign-in page.\n      operationId: retrieveCustomizedSignInPage\n      responses:\n        '200':\n          description: Successfully retrieved the customized sign-in page.\n          headers:\n            Location:\n              schema:\n                type: string\n                format: uri\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SignInPage'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.brands.read\n      tags:\n        - Customization\n    put:\n      summary: Replace the Customized Sign-in Page\n      description: Replaces the customized sign-in page.\n      operationId: replaceCustomizedSignInPage\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SignInPage'\n        required: true\n      responses:\n        '200':\n          description: Successfully replaced the customized sign-in page.\n          headers:\n            Location:\n              schema:\n                type: string\n                format: uri\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SignInPage'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.brands.manage\n      tags:\n        - Customization\n    delete:\n      summary: Reset the Customized Sign-in Page\n      description: Reset the customized sign-in page.\n      operationId: resetCustomizedSignInPage\n      responses:\n        '204':\n          description: Successfully reset the sign-in page.\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.brands.manage\n      tags:\n        - Customization\n  /api/v1/brands/{brandId}/pages/sign-in/default:\n    parameters:\n      - $ref: '#/components/parameters/pathBrandId'\n    get:\n      summary: Retrieve the Default Sign-in Page\n      description: Retrieves the default sign-in page.\n      operationId: retrieveDefaultSignInPage\n      responses:\n        '200':\n          description: Successfully retrieved the default sign-in page.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SignInPage'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.brands.read\n      tags:\n        - Customization\n  /api/v1/brands/{brandId}/pages/sign-in/preview:\n    parameters:\n      - $ref: '#/components/parameters/pathBrandId'\n    get:\n      summary: Retrieve the Preview Sign-in Page Preview\n      description: Retrieves the preview sign-in page.\n      operationId: retrievePreviewSignInPage\n      responses:\n        '200':\n          description: Successfully retrieved the preview sign-in page.\n          headers:\n            Location:\n              schema:\n                type: string\n                format: uri\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SignInPage'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.brands.read\n      tags:\n        - Customization\n    put:\n      summary: Replace the Preview Sign-in Page\n      description: Replace the preview sign-in page.\n      operationId: replacePreviewSignInPage\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SignInPage'\n        required: true\n      responses:\n        '200':\n          description: Successfully replaced the preview sign-in page.\n          headers:\n            Location:\n              schema:\n                type: string\n                format: uri\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SignInPage'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.brands.manage\n      tags:\n        - Customization\n    delete:\n      summary: Reset the Preview Sign-in Page\n      description: Reset the preview sign-in page.\n      operationId: resetPreviewSignInPage\n      responses:\n        '204':\n          description: Successfully reset the preview sign-in page.\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.brands.manage\n      tags:\n        - Customization\n  /api/v1/brands/{brandId}/pages/sign-in/widget-versions:\n    parameters:\n      - $ref: '#/components/parameters/pathBrandId'\n    get:\n      summary: List all Sign-in Widget Versions\n      description: List all sign-in widget versions.\n      operationId: listAllSignInWidgetVersions\n      responses:\n        '200':\n          description: Successfully listed the sign-in widget versions.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n                  pattern: ^\\d+\\.\\d+$\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.brands.read\n      tags:\n        - Customization\n  /api/v1/brands/{brandId}/pages/sign-out/customized:\n    parameters:\n      - $ref: '#/components/parameters/pathBrandId'\n    get:\n      summary: Retrieve the Sign-out Page Settings\n      description: Retrieves the sign-out page settings.\n      operationId: retrieveSignOutPageSettings\n      responses:\n        '200':\n          description: Successfully retrieved the sign-out page settings.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HostedPage'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.brands.read\n      tags:\n        - Customization\n    put:\n      summary: Replace the Sign-out Page Settings\n      description: Replaces the sign-out page settings.\n      operationId: replaceSignOutPageSettings\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/HostedPage'\n        required: true\n      responses:\n        '200':\n          description: Successfully replaced the sign-out page settings.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HostedPage'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.brands.manage\n      tags:\n        - Customization\n  /api/v1/brands/{brandId}/templates/email:\n    parameters:\n      - $ref: '#/components/parameters/pathBrandId'\n    get:\n      summary: List all Email Templates\n      description: Lists all email templates.\n      operationId: listEmailTemplates\n      parameters:\n        - $ref: '#/components/parameters/queryAfter'\n        - $ref: '#/components/parameters/queryLimit'\n        - $ref: '#/components/parameters/queryExpandEmailTemplate'\n      responses:\n        '200':\n          description: Successfully returned the list of email templates.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/EmailTemplate'\n              examples:\n                List email templates response:\n                  $ref: '#/components/examples/ListEmailTemplateResponse'\n          headers:\n            Link:\n              schema:\n                type: string\n              description: The pagination header containing links to the current and next page of results. See [Pagination](/#pagination) for more information.\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.templates.read\n      tags:\n        - Customization\n  /api/v1/brands/{brandId}/templates/email/{templateName}:\n    parameters:\n      - $ref: '#/components/parameters/pathBrandId'\n      - $ref: '#/components/parameters/pathTemplateName'\n    get:\n      summary: Retrieve an Email Template\n      description: Gets the details of an email template by name.\n      operationId: getEmailTemplate\n      parameters:\n        - $ref: '#/components/parameters/queryExpandEmailTemplate'\n      responses:\n        '200':\n          description: Successfully retrieved the email template.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmailTemplate'\n              examples:\n                Get email template response:\n                  $ref: '#/components/examples/GetEmailTemplateResponse'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.templates.read\n      tags:\n        - Customization\n  /api/v1/brands/{brandId}/templates/email/{templateName}/customizations:\n    parameters:\n      - $ref: '#/components/parameters/pathBrandId'\n      - $ref: '#/components/parameters/pathTemplateName'\n    get:\n      summary: List all Email Customizations\n      description: Lists all customizations of an email template.\n      operationId: listEmailCustomizations\n      parameters:\n        - $ref: '#/components/parameters/queryAfter'\n        - $ref: '#/components/parameters/queryLimit'\n      responses:\n        '200':\n          description: Successfully retrieved all email customizations for the specified email template.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/EmailCustomization'\n              examples:\n                List Email customizations response:\n                  $ref: '#/components/examples/ListEmailCustomizationResponse'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.templates.read\n      tags:\n        - Customization\n    post:\n      summary: Create an Email Customization\n      description: Creates a new email customization.\n      operationId: createEmailCustomization\n      x-codegen-request-body-name: instance\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EmailCustomization'\n            examples:\n              Create email customization request:\n                $ref: '#/components/examples/CreateUpdateEmailCustomizationRequest'\n      responses:\n        '201':\n          description: Successfully created the email customization.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmailCustomization'\n              examples:\n                Create email customization response:\n                  $ref: '#/components/examples/CreateUpdateEmailCustomizationResponse'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '409':\n          description: Could not create the email customization because it conflicts with an existing email customization.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              examples:\n                Default email customization already exists:\n                  $ref: '#/components/examples/ErrorEmailCustomizationDefaultAlreadyExists'\n                Email customization already exists for the specified language:\n                  $ref: '#/components/examples/ErrorEmailCustomizationLanguageAlreadyExists'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.templates.manage\n      tags:\n        - Customization\n    delete:\n      summary: Delete all Email Customizations\n      description: Deletes all customizations for an email template.\n      operationId: deleteAllCustomizations\n      responses:\n        '204':\n          description: Successfully deleted all customizations for the email template.\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.templates.manage\n      tags:\n        - Customization\n  /api/v1/brands/{brandId}/templates/email/{templateName}/customizations/{customizationId}:\n    parameters:\n      - $ref: '#/components/parameters/pathBrandId'\n      - $ref: '#/components/parameters/pathTemplateName'\n      - $ref: '#/components/parameters/pathCustomizationId'\n    get:\n      summary: Retrieve an Email Customization\n      description: Gets an email customization by its unique identifier.\n      operationId: getEmailCustomization\n      responses:\n        '200':\n          description: Successfully retrieved the email customization.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmailCustomization'\n              examples:\n                Get email customization response:\n                  $ref: '#/components/examples/EmailCustomizationResponse'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.templates.read\n      tags:\n        - Customization\n    put:\n      summary: Replace an Email Customization\n      description: Updates an existing email customization using the property values provided.\n      operationId: updateEmailCustomization\n      x-codegen-request-body-name: instance\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EmailCustomization'\n            examples:\n              Update email customization request:\n                $ref: '#/components/examples/CreateUpdateEmailCustomizationRequest'\n        description: Request\n      responses:\n        '200':\n          description: Successfully updated the email customization.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmailCustomization'\n              examples:\n                Update email customization response:\n                  $ref: '#/components/examples/CreateUpdateEmailCustomizationResponse'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '409':\n          description: Could not update the email customization because the update would cause a conflict with an existing email customization.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              examples:\n                Default email customization already exists:\n                  $ref: '#/components/examples/ErrorEmailCustomizationDefaultAlreadyExists'\n                Email customization already exists for the specified language:\n                  $ref: '#/components/examples/ErrorEmailCustomizationLanguageAlreadyExists'\n                Cannot set the default email customization's isDefault to false:\n                  $ref: '#/components/examples/ErrorEmailCustomizationCannotClearDefault'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.templates.manage\n      tags:\n        - Customization\n    delete:\n      summary: Delete an Email Customization\n      description: Deletes an email customization by its unique identifier.\n      operationId: deleteEmailCustomization\n      responses:\n        '204':\n          description: Successfully deleted the email customization.\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '409':\n          description: Could not delete the email customization deleted because it is the default email customization.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              examples:\n                Cannot delete default email customization:\n                  $ref: '#/components/examples/ErrorEmailCustomizationCannotDeleteDefault'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.templates.manage\n      tags:\n        - Customization\n  /api/v1/brands/{brandId}/templates/email/{templateName}/customizations/{customizationId}/preview:\n    parameters:\n      - $ref: '#/components/parameters/pathBrandId'\n      - $ref: '#/components/parameters/pathTemplateName'\n      - $ref: '#/components/parameters/pathCustomizationId'\n    get:\n      summary: Preview an Email Customization\n      description: Generates a preview of an email customization. All variable references (e.g., `${user.profile.firstName}`) are populated using the current user's context.\n      operationId: getCustomizationPreview\n      responses:\n        '200':\n          description: Successfully generated a preview of the email customization.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmailPreview'\n              examples:\n                Preview email customization response:\n                  $ref: '#/components/examples/PreviewEmailCustomizationResponse'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.templates.read\n      tags:\n        - Customization\n  /api/v1/brands/{brandId}/templates/email/{templateName}/default-content:\n    parameters:\n      - $ref: '#/components/parameters/pathBrandId'\n      - $ref: '#/components/parameters/pathTemplateName'\n    get:\n      summary: Retrieve an Email Template Default Content\n      description: Gets an email template's default content.\n      operationId: getEmailDefaultContent\n      parameters:\n        - $ref: '#/components/parameters/queryLanguage'\n      responses:\n        '200':\n          description: Successfully retrieved the email template's default content.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmailDefaultContent'\n              examples:\n                Get email template default content response:\n                  $ref: '#/components/examples/EmailTemplateDefaultContentResponse'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.templates.read\n      tags:\n        - Customization\n  /api/v1/brands/{brandId}/templates/email/{templateName}/default-content/preview:\n    parameters:\n      - $ref: '#/components/parameters/pathBrandId'\n      - $ref: '#/components/parameters/pathTemplateName'\n    get:\n      summary: Preview the Email Template Default Content\n      description: Generates a preview of an email template's default content. All variable references (e.g., `${user.profile.firstName}`) are populated using the current user's context.\n      operationId: getEmailDefaultPreview\n      parameters:\n        - $ref: '#/components/parameters/queryLanguage'\n      responses:\n        '200':\n          description: Successfully generated a preview of the email template's default content.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmailPreview'\n              examples:\n                Preview email template default content response:\n                  $ref: '#/components/examples/PreviewEmailTemplateDefaultContentResponse'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.templates.read\n      tags:\n        - Customization\n  /api/v1/brands/{brandId}/templates/email/{templateName}/settings:\n    parameters:\n      - $ref: '#/components/parameters/pathBrandId'\n      - $ref: '#/components/parameters/pathTemplateName'\n    get:\n      summary: Retrieve the Email Template Settings\n      description: Gets an email template's settings.\n      operationId: getEmailSettings\n      responses:\n        '200':\n          description: Successfully retrieved the email template's settings.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmailSettings'\n              examples:\n                Get email template settings response:\n                  $ref: '#/components/examples/EmailSettingsResponse'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.templates.read\n      tags:\n        - Customization\n    put:\n      summary: Replace the Email Template Settings\n      description: Updates an email template's settings.\n      operationId: updateEmailSettings\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EmailSettings'\n      responses:\n        '204':\n          description: Successfully updated the email template's settings.\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '422':\n          description: Could not update the email template's settings due to an invalid setting value.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              examples:\n                Invalid email template recipients:\n                  $ref: '#/components/examples/ErrorInvalidEmailTemplateRecipients'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.templates.manage\n      tags:\n        - Customization\n  /api/v1/brands/{brandId}/templates/email/{templateName}/test:\n    parameters:\n      - $ref: '#/components/parameters/pathBrandId'\n      - $ref: '#/components/parameters/pathTemplateName'\n    post:\n      summary: Send a Test Email\n      description: |-\n        Sends a test email to the current user’s primary and secondary email addresses. The email content is selected based on the following priority:\n        1. The email customization for the language specified in the `language` query parameter.\n        2. The email template's default customization.\n        3. The email template’s default content, translated to the current user's language.\n      operationId: sendTestEmail\n      parameters:\n        - $ref: '#/components/parameters/queryLanguage'\n      responses:\n        '204':\n          description: Successfully sent a test email.\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.templates.read\n      tags:\n        - Customization\n  /api/v1/brands/{brandId}/themes:\n    parameters:\n      - $ref: '#/components/parameters/pathBrandId'\n    get:\n      summary: List all Themes\n      description: List all the themes in your brand\n      operationId: listBrandThemes\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ThemeResponse'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.brands.read\n      tags:\n        - Customization\n  /api/v1/brands/{brandId}/themes/{themeId}:\n    parameters:\n      - $ref: '#/components/parameters/pathBrandId'\n      - $ref: '#/components/parameters/pathThemeId'\n    get:\n      summary: Retrieve a Theme\n      description: Fetches a theme for a brand\n      operationId: getBrandTheme\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThemeResponse'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.brands.read\n      tags:\n        - Customization\n    put:\n      summary: Replace a Theme\n      description: Updates a theme for a brand\n      operationId: updateBrandTheme\n      x-codegen-request-body-name: theme\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Theme'\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThemeResponse'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.brands.manage\n      tags:\n        - Customization\n  /api/v1/brands/{brandId}/themes/{themeId}/background-image:\n    parameters:\n      - $ref: '#/components/parameters/pathBrandId'\n      - $ref: '#/components/parameters/pathThemeId'\n    post:\n      summary: Upload the Background Image\n      description: Updates the background image for your Theme\n      operationId: uploadBrandThemeBackgroundImage\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              description: The file must be in PNG, JPG, or GIF format and less than 2 MB in size.\n              properties:\n                file:\n                  type: string\n                  format: binary\n              required:\n                - file\n        description: background image file\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ImageUploadResponse'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.brands.manage\n      tags:\n        - Customization\n    delete:\n      summary: Delete the Background Image\n      description: Deletes a Theme background image.\n      operationId: deleteBrandThemeBackgroundImage\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.brands.manage\n      tags:\n        - Customization\n  /api/v1/brands/{brandId}/themes/{themeId}/favicon:\n    parameters:\n      - $ref: '#/components/parameters/pathBrandId'\n      - $ref: '#/components/parameters/pathThemeId'\n    post:\n      summary: Upload the Favicon\n      description: Updates the favicon for your theme\n      operationId: uploadBrandThemeFavicon\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              description: The file must be in PNG, or ico format and less than ?? in size and 128 x 128 dimensions\n              properties:\n                file:\n                  type: string\n                  format: binary\n              required:\n                - file\n        description: favicon file\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ImageUploadResponse'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.brands.manage\n      tags:\n        - Customization\n    delete:\n      summary: Delete the Favicon\n      description: Deletes a Theme favicon. The theme will use the default Okta favicon.\n      operationId: deleteBrandThemeFavicon\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.brands.manage\n      tags:\n        - Customization\n  /api/v1/brands/{brandId}/themes/{themeId}/logo:\n    parameters:\n      - $ref: '#/components/parameters/pathBrandId'\n      - $ref: '#/components/parameters/pathThemeId'\n    post:\n      summary: Upload the Logo\n      description: Updates the logo for your Theme\n      operationId: uploadBrandThemeLogo\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              description: The file must be in PNG, JPG, or GIF format and less than 100kB in size. For best results use landscape orientation, a transparent background, and a minimum size of 300px by 50px to prevent upscaling.\n              type: object\n              properties:\n                file:\n                  type: string\n                  format: binary\n              required:\n                - file\n        description: logo file\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ImageUploadResponse'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.brands.manage\n      tags:\n        - Customization\n    delete:\n      summary: Delete the Logo\n      description: Deletes a Theme logo. The theme will use the default Okta logo.\n      operationId: deleteBrandThemeLogo\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.brands.manage\n      tags:\n        - Customization\n  /api/v1/captchas:\n    get:\n      summary: List all CAPTCHA instances\n      description: Enumerates CAPTCHA instances in your organization with pagination. A subset of CAPTCHA instances can be returned that match a supported filter expression or query.\n      operationId: listCaptchaInstances\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/CAPTCHAInstance'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.captchas.read\n      tags:\n        - CAPTCHA\n    post:\n      summary: Create a CAPTCHA instance\n      description: Adds a new CAPTCHA instance to your organization. In the current release, we only allow one CAPTCHA instance per org.\n      operationId: createCaptchaInstance\n      x-codegen-request-body-name: instance\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CAPTCHAInstance'\n            examples:\n              HCaptcha:\n                $ref: '#/components/examples/CAPTCHAInstanceRequestHCaptcha'\n              ReCaptcha:\n                $ref: '#/components/examples/CAPTCHAInstanceRequestReCaptcha'\n        required: true\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CAPTCHAInstance'\n              examples:\n                HCaptcha:\n                  $ref: '#/components/examples/CAPTCHAInstanceResponseHCaptcha'\n                ReCaptcha:\n                  $ref: '#/components/examples/CAPTCHAInstanceResponseReCaptcha'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              examples:\n                Access Denied:\n                  $ref: '#/components/examples/ErrorAccessDenied'\n                Error Limit of One CAPTCHA instance per org:\n                  $ref: '#/components/examples/ErrorCAPTCHALimitOfOne'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.captchas.manage\n      tags:\n        - CAPTCHA\n  /api/v1/captchas/{captchaId}:\n    parameters:\n      - $ref: '#/components/parameters/pathCaptchaId'\n    get:\n      summary: Retrieve a CAPTCHA Instance\n      description: Fetches a CAPTCHA instance by `captchaId`.\n      operationId: getCaptchaInstance\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CAPTCHAInstance'\n              examples:\n                HCaptcha:\n                  $ref: '#/components/examples/CAPTCHAInstanceResponseHCaptcha'\n                ReCaptcha:\n                  $ref: '#/components/examples/CAPTCHAInstanceResponseReCaptcha'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.captchas.read\n      tags:\n        - CAPTCHA\n    post:\n      summary: Update a CAPTCHA instance\n      description: Partially update a CAPTCHA instance by `captchaId`.\n      operationId: partialUpdateCaptchaInstance\n      x-codegen-request-body-name: instance\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CAPTCHAInstance'\n            examples:\n              HCaptcha:\n                $ref: '#/components/examples/CAPTCHAInstanceRequestHCaptcha'\n              ReCaptcha:\n                $ref: '#/components/examples/CAPTCHAInstanceRequestReCaptcha'\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CAPTCHAInstance'\n              examples:\n                HCaptcha:\n                  $ref: '#/components/examples/CAPTCHAInstanceResponseHCaptcha'\n                ReCaptcha:\n                  $ref: '#/components/examples/CAPTCHAInstanceResponseReCaptcha'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.captchas.manage\n      tags:\n        - CAPTCHA\n    put:\n      summary: Replace a CAPTCHA instance\n      description: Update a CAPTCHA instance by `captchaId`.\n      operationId: updateCaptchaInstance\n      x-codegen-request-body-name: instance\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CAPTCHAInstance'\n            examples:\n              HCaptcha:\n                $ref: '#/components/examples/CAPTCHAInstanceRequestHCaptcha'\n              ReCaptcha:\n                $ref: '#/components/examples/CAPTCHAInstanceRequestReCaptcha'\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CAPTCHAInstance'\n              examples:\n                HCaptcha:\n                  $ref: '#/components/examples/CAPTCHAInstanceResponseHCaptcha'\n                ReCaptcha:\n                  $ref: '#/components/examples/CAPTCHAInstanceResponseReCaptcha'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.captchas.manage\n      tags:\n        - CAPTCHA\n    delete:\n      summary: Delete a CAPTCHA Instance\n      description: Delete a CAPTCHA instance by `captchaId`. If the CAPTCHA instance is currently being used in the org, the delete will not be allowed.\n      operationId: deleteCaptchaInstance\n      responses:\n        '204':\n          description: No Content\n        '403':\n          description: Forbidden\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              examples:\n                Access Denied:\n                  $ref: '#/components/examples/ErrorAccessDenied'\n                Cannot remove CAPTCHA in use:\n                  $ref: '#/components/examples/ErrorCAPTCHAOrgWideSetting'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.captchas.manage\n      tags:\n        - CAPTCHA\n  /api/v1/device-assurances:\n    get:\n      summary: List all Device Assurance Policies\n      description: Enumerates Device Assurance Policies in your organization.\n      operationId: listDeviceAssurancePolicies\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DeviceAssurance'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.deviceAssurance.read\n      tags:\n        - DeviceAssurance\n    post:\n      summary: Create a Device Assurance Policy\n      description: Adds a new Device Assurance Policy.\n      operationId: createDeviceAssurancePolicy\n      x-codegen-request-body-name: deviceAssurance\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeviceAssurance'\n            examples:\n              ANDROID:\n                $ref: '#/components/examples/DeviceAssuranceAndroidRequest'\n              MACOS:\n                $ref: '#/components/examples/DeviceAssuranceMacOSRequest'\n              WINDOWS:\n                $ref: '#/components/examples/DeviceAssuranceWindowsRequest'\n              IOS:\n                $ref: '#/components/examples/DeviceAssuranceIosRequest'\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeviceAssurance'\n              examples:\n                DeviceAssuranceResponse:\n                  $ref: '#/components/examples/DeviceAssuranceResponse'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.deviceAssurance.manage\n      tags:\n        - DeviceAssurance\n  /api/v1/device-assurances/{deviceAssuranceId}:\n    get:\n      summary: Retrieve a Device Assurance Policy\n      description: Fetches a Device Assurance Policy by `deviceAssuranceId`.\n      operationId: getDeviceAssurancePolicy\n      parameters:\n        - $ref: '#/components/parameters/pathDeviceAssuranceId'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeviceAssurance'\n              examples:\n                DeviceAssuranceResponse:\n                  $ref: '#/components/examples/DeviceAssuranceResponse'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.deviceAssurance.read\n      tags:\n        - DeviceAssurance\n    put:\n      summary: Replace a Device Assurance Policy\n      description: Updates a Device Assurance Policy by `deviceAssuranceId`.\n      operationId: updateDeviceAssurancePolicy\n      parameters:\n        - $ref: '#/components/parameters/pathDeviceAssuranceId'\n      x-codegen-request-body-name: deviceAssurance\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeviceAssurance'\n            examples:\n              DeviceAssuranceResponse:\n                $ref: '#/components/examples/DeviceAssuranceResponse'\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeviceAssurance'\n              examples:\n                DeviceAssuranceResponse:\n                  $ref: '#/components/examples/DeviceAssuranceResponse'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.deviceAssurance.manage\n      tags:\n        - DeviceAssurance\n    delete:\n      summary: Delete a Device Assurance Policy\n      description: Delete a Device Assurance Policy by `deviceAssuranceId`. If the Device Assurance Policy is currently being used in the org Authentication Policies, the delete will not be allowed.\n      operationId: deleteDeviceAssurancePolicy\n      parameters:\n        - $ref: '#/components/parameters/pathDeviceAssuranceId'\n      responses:\n        '204':\n          description: No Content\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '409':\n          description: Conflict\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              examples:\n                Cannot delete device assurance policy in use by authentication policies:\n                  $ref: '#/components/examples/ErrorDeviceAssuranceInUse'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.deviceAssurance.manage\n      tags:\n        - DeviceAssurance\n  /api/v1/devices:\n    get:\n      summary: List all Devices\n      description: |-\n        Lists all devices with pagination support.\n\n        A subset of Devices can be returned that match a supported search criteria using the `search` query parameter.\n\n        Searches for devices based on the properties specified in the `search` parameter conforming SCIM filter specifications (case-insensitive). This data is eventually consistent. The API returns different results depending on specified queries in the request. Empty list is returned if no objects match `search` request.\n\n        \u003e **Note:** Listing devices with `search` should not be used as a part of any critical flows—such as authentication or updates—to prevent potential data loss. `search` results may not reflect the latest information, as this endpoint uses a search index which may not be up-to-date with recent updates to the object. \u003cbr\u003e Don't use search results directly for record updates, as the data might be stale and therefore overwrite newer data, resulting in data loss. \u003cbr\u003e Use an `id` lookup for records that you update to ensure your results contain the latest data.\n\n        This operation equires [URL encoding](http://en.wikipedia.org/wiki/Percent-encoding). For example, `search=profile.displayName eq \"Bob\"` is encoded as `search=profile.displayName%20eq%20%22Bob%22`.\n      operationId: listDevices\n      parameters:\n        - $ref: '#/components/parameters/queryAfter'\n        - $ref: '#/components/parameters/queryLimit'\n        - name: search\n          in: query\n          description: SCIM filter expression that filters the results. Searches include all Device `profile` properties, as well as the Device `id`, `status` and `lastUpdated` properties.\n          schema:\n            type: string\n          examples:\n            Devices that have a `status` of `ACTIVE`:\n              value: status eq \"ACTIVE\"\n            Devices last updated after a specific timestamp:\n              value: lastUpdated gt \"yyyy-MM-dd'T'HH:mm:ss.SSSZ\"\n            Devices with a specified `id`:\n              value: id eq \"guo4a5u7JHHhjXrMK0g4\"\n            Devices that have a `displayName` of `Bob`:\n              value: profile.displayName eq \"Bob\"\n            Devices that have an `platform` of `WINDOWS`:\n              value: profile.platform eq \"WINDOWS\"\n            Devices whose `sid` starts with `S-1`:\n              value: profile.sid sw \"S-1\"\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Device'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.devices.read\n      tags:\n        - Device\n  /api/v1/devices/{deviceId}:\n    parameters:\n      - $ref: '#/components/parameters/pathDeviceId'\n    get:\n      summary: Retrieve a Device\n      description: Retrieve a device by `deviceId`\n      operationId: getDevice\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Device'\n              examples:\n                Example Response:\n                  $ref: '#/components/examples/DeviceResponse'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.devices.read\n      tags:\n        - Device\n    delete:\n      summary: Delete a Device\n      description: Deletes a device by `deviceId`\n      operationId: deleteDevice\n      responses:\n        '204':\n          description: No Content\n        '403':\n          description: Forbidden\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              examples:\n                Access Denied:\n                  $ref: '#/components/examples/ErrorAccessDenied'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.devices.manage\n      tags:\n        - Device\n  /api/v1/devices/{deviceId}/lifecycle/activate:\n    parameters:\n      - $ref: '#/components/parameters/pathDeviceId'\n    post:\n      summary: Activate a Device\n      description: Activates a device by `deviceId`\n      operationId: activateDevice\n      responses:\n        '204':\n          description: No Content\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.devices.manage\n      tags:\n        - Device\n  /api/v1/devices/{deviceId}/lifecycle/deactivate:\n    parameters:\n      - $ref: '#/components/parameters/pathDeviceId'\n    post:\n      summary: Deactivate a Device\n      description: Deactivates a device by `deviceId`\n      operationId: deactivateDevice\n      responses:\n        '204':\n          description: No Content\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.devices.manage\n      tags:\n        - Device\n  /api/v1/devices/{deviceId}/lifecycle/suspend:\n    parameters:\n      - $ref: '#/components/parameters/pathDeviceId'\n    post:\n      summary: Suspend a Device\n      description: Suspends a device by `deviceId`\n      operationId: suspendDevice\n      responses:\n        '204':\n          description: No Content\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.devices.manage\n      tags:\n        - Device\n  /api/v1/devices/{deviceId}/lifecycle/unsuspend:\n    parameters:\n      - $ref: '#/components/parameters/pathDeviceId'\n    post:\n      summary: Unsuspend a Device\n      description: Unsuspends a device by `deviceId`\n      operationId: unsuspendDevice\n      responses:\n        '204':\n          description: No Content\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.devices.manage\n      tags:\n        - Device\n  /api/v1/domains:\n    get:\n      summary: List all Domains\n      description: List all verified custom Domains for the org.\n      operationId: listDomains\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DomainListResponse'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.domains.read\n      tags:\n        - Domain\n    post:\n      summary: Create a Domain\n      description: Creates your domain.\n      operationId: createDomain\n      x-codegen-request-body-name: domain\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Domain'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DomainResponse'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.domains.manage\n      tags:\n        - Domain\n  /api/v1/domains/{domainId}:\n    get:\n      summary: Retrieve a Domain\n      description: Fetches a Domain by `id`.\n      operationId: getDomain\n      parameters:\n        - name: domainId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DomainResponse'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.domains.read\n      tags:\n        - Domain\n    put:\n      summary: Replace a Domain's brandId\n      description: Updates a Domain by `id`.\n      operationId: updateDomain\n      parameters:\n        - name: domainId\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateDomain'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DomainResponse'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.domains.manage\n      tags:\n        - Domain\n    delete:\n      summary: Delete a Domain\n      description: Deletes a Domain by `id`.\n      operationId: deleteDomain\n      parameters:\n        - name: domainId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.domains.manage\n      tags:\n        - Domain\n  /api/v1/domains/{domainId}/certificate:\n    put:\n      summary: Replace the Certificate\n      description: Creates the Certificate for the Domain.\n      operationId: createCertificate\n      parameters:\n        - name: domainId\n          in: path\n          required: true\n          schema:\n            type: string\n      x-codegen-request-body-name: certificate\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DomainCertificate'\n        required: true\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.domains.manage\n      tags:\n        - Domain\n  /api/v1/domains/{domainId}/verify:\n    post:\n      summary: Verify a Domain\n      description: Verifies the Domain by `id`.\n      operationId: verifyDomain\n      parameters:\n        - name: domainId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DomainResponse'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.domains.manage\n      tags:\n        - Domain\n  /api/v1/email-domains:\n    get:\n      summary: List all email domains\n      description: List all the email domains in your org.\n      operationId: listEmailDomains\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmailDomainListResponse'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.email-domains.read\n      tags:\n        - EmailDomain\n    post:\n      summary: Create an Email Domain\n      description: Creates a custom email domain.\n      operationId: createEmailDomain\n      x-codegen-request-body-name: emailDomain\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EmailDomain'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmailDomainResponse'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.email-domains.manage\n      tags:\n        - EmailDomain\n  /api/v1/email-domains/{emailDomainId}:\n    get:\n      summary: Retrieve a Email Domain\n      description: Fetches an Email Domain by `emailDomainId`.\n      operationId: getEmailDomain\n      parameters:\n        - $ref: '#/components/parameters/pathEmailDomainId'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmailDomainResponse'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.email-domains.read\n      tags:\n        - EmailDomain\n    put:\n      summary: Replace an Email Domain\n      description: Replaces an email domain by `emailDomainId`\n      operationId: updateEmailDomain\n      parameters:\n        - $ref: '#/components/parameters/pathEmailDomainId'\n      x-codegen-request-body-name: updateEmailDomain\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateEmailDomain'\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmailDomainResponse'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.email-domains.manage\n      tags:\n        - EmailDomain\n    delete:\n      summary: Delete an Email Domain\n      description: Deletes an Email Domain by `emailDomainId`.\n      operationId: deleteEmailDomain\n      parameters:\n        - $ref: '#/components/parameters/pathEmailDomainId'\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.email-domains.manage\n      tags:\n        - EmailDomain\n  /api/v1/email-domains/{emailDomainId}/brands:\n    get:\n      summary: List all brands linked to an email domain\n      description: List all brands linked to an email domain.\n      operationId: listEmailDomainBrands\n      parameters:\n        - $ref: '#/components/parameters/pathEmailDomainId'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Brand'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.email-domains.read\n      tags:\n        - EmailDomain\n  /api/v1/email-domains/{emailDomainId}/verify:\n    post:\n      summary: Verify an Email Domain\n      description: Verifies an Email Domain by `emailDomainId`.\n      operationId: verifyEmailDomain\n      parameters:\n        - $ref: '#/components/parameters/pathEmailDomainId'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmailDomainResponse'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.email-domains.manage\n      tags:\n        - EmailDomain\n  /api/v1/eventHooks:\n    get:\n      summary: List all Event Hooks\n      description: Lists all event hooks\n      operationId: listEventHooks\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/EventHook'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.eventHooks.read\n      tags:\n        - EventHook\n    post:\n      summary: Create an Event Hook\n      description: Creates an event hook\n      operationId: createEventHook\n      x-codegen-request-body-name: eventHook\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EventHook'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EventHook'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.eventHooks.manage\n      tags:\n        - EventHook\n  /api/v1/eventHooks/{eventHookId}:\n    get:\n      summary: Retrieve an Event Hook\n      description: Retrieves an event hook\n      operationId: getEventHook\n      parameters:\n        - name: eventHookId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EventHook'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.eventHooks.read\n      tags:\n        - EventHook\n    put:\n      summary: Replace an Event Hook\n      description: Replaces an event hook\n      operationId: updateEventHook\n      parameters:\n        - name: eventHookId\n          in: path\n          required: true\n          schema:\n            type: string\n      x-codegen-request-body-name: eventHook\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EventHook'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EventHook'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.eventHooks.manage\n      tags:\n        - EventHook\n    delete:\n      summary: Delete an Event Hook\n      description: Deletes an event hook\n      operationId: deleteEventHook\n      parameters:\n        - name: eventHookId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.eventHooks.manage\n      tags:\n        - EventHook\n  /api/v1/eventHooks/{eventHookId}/lifecycle/activate:\n    post:\n      summary: Activate an Event Hook\n      description: Activates an event hook\n      operationId: activateEventHook\n      parameters:\n        - name: eventHookId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EventHook'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.eventHooks.manage\n      tags:\n        - EventHook\n  /api/v1/eventHooks/{eventHookId}/lifecycle/deactivate:\n    post:\n      summary: Deactivate an Event Hook\n      description: Deactivates an event hook\n      operationId: deactivateEventHook\n      parameters:\n        - name: eventHookId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EventHook'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.eventHooks.manage\n      tags:\n        - EventHook\n  /api/v1/eventHooks/{eventHookId}/lifecycle/verify:\n    post:\n      summary: Verify an Event Hook\n      description: Verifies an event hook\n      operationId: verifyEventHook\n      parameters:\n        - name: eventHookId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EventHook'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.eventHooks.manage\n      tags:\n        - EventHook\n  /api/v1/features:\n    get:\n      summary: List all Features\n      description: List all features\n      operationId: listFeatures\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Feature'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.features.read\n      tags:\n        - Feature\n  /api/v1/features/{featureId}:\n    get:\n      summary: Retrieve a Feature\n      description: Retrieve a feature\n      operationId: getFeature\n      parameters:\n        - name: featureId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Feature'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.features.read\n      tags:\n        - Feature\n  /api/v1/features/{featureId}/dependencies:\n    get:\n      summary: List all Dependencies\n      description: List all dependencies\n      operationId: listFeatureDependencies\n      parameters:\n        - name: featureId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Feature'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.features.read\n      tags:\n        - Feature\n  /api/v1/features/{featureId}/dependents:\n    get:\n      summary: List all Dependents\n      description: List all dependents\n      operationId: listFeatureDependents\n      parameters:\n        - name: featureId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Feature'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.features.read\n      tags:\n        - Feature\n  /api/v1/features/{featureId}/{lifecycle}:\n    post:\n      summary: Update a Feature Lifecycle\n      description: Update a feature lifecycle\n      operationId: updateFeatureLifecycle\n      parameters:\n        - name: featureId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: lifecycle\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: mode\n          in: query\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Feature'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.features.manage\n      tags:\n        - Feature\n  /api/v1/groups:\n    get:\n      summary: List all Groups\n      description: Enumerates groups in your organization with pagination. A subset of groups can be returned that match a supported filter expression or query.\n      operationId: listGroups\n      parameters:\n        - name: q\n          in: query\n          description: Searches the name property of groups for matching value\n          schema:\n            type: string\n        - name: filter\n          in: query\n          description: Filter expression for groups\n          schema:\n            type: string\n        - name: after\n          in: query\n          description: Specifies the pagination cursor for the next page of groups\n          schema:\n            type: string\n        - name: limit\n          in: query\n          description: Specifies the number of group results in a page\n          schema:\n            type: integer\n            format: int32\n            default: 10000\n        - name: expand\n          in: query\n          description: If specified, it causes additional metadata to be included in the response.\n          schema:\n            type: string\n        - name: search\n          in: query\n          description: Searches for groups with a supported filtering expression for all attributes except for _embedded, _links, and objectClass\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Group'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.groups.read\n      tags:\n        - Group\n    post:\n      summary: Create a Group\n      description: Adds a new group with `OKTA_GROUP` type to your organization.\n      operationId: createGroup\n      x-codegen-request-body-name: group\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Group'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Group'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.groups.manage\n      tags:\n        - Group\n  /api/v1/groups/rules:\n    get:\n      summary: List all Group Rules\n      description: Lists all group rules for your organization.\n      operationId: listGroupRules\n      parameters:\n        - name: limit\n          in: query\n          description: Specifies the number of rule results in a page\n          schema:\n            type: integer\n            format: int32\n            default: 50\n        - name: after\n          in: query\n          description: Specifies the pagination cursor for the next page of rules\n          schema:\n            type: string\n        - name: search\n          in: query\n          description: Specifies the keyword to search fules for\n          schema:\n            type: string\n        - name: expand\n          in: query\n          description: If specified as `groupIdToGroupNameMap`, then show group names\n          schema:\n            type: string\n          x-okta-added-version: 1.3.0\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/GroupRule'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.groups.read\n      tags:\n        - Group\n    post:\n      summary: Create a Group Rule\n      description: Creates a group rule to dynamically add users to the specified group if they match the condition\n      operationId: createGroupRule\n      x-codegen-request-body-name: groupRule\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GroupRule'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GroupRule'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.groups.manage\n      tags:\n        - Group\n  /api/v1/groups/rules/{ruleId}:\n    get:\n      summary: Retrieve a Group Rule\n      description: Fetches a specific group rule by id from your organization\n      operationId: getGroupRule\n      parameters:\n        - name: ruleId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: expand\n          in: query\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GroupRule'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.groups.read\n      tags:\n        - Group\n    put:\n      summary: Replace a Group Rule\n      description: Updates a group rule. Only `INACTIVE` rules can be updated.\n      operationId: updateGroupRule\n      parameters:\n        - name: ruleId\n          in: path\n          required: true\n          schema:\n            type: string\n      x-codegen-request-body-name: groupRule\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GroupRule'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GroupRule'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.groups.manage\n      tags:\n        - Group\n    delete:\n      summary: Delete a group Rule\n      description: Removes a specific group rule by id from your organization\n      operationId: deleteGroupRule\n      parameters:\n        - name: ruleId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: removeUsers\n          in: query\n          description: Indicates whether to keep or remove users from groups assigned by this rule.\n          schema:\n            type: boolean\n      responses:\n        '202':\n          description: Accepted\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.groups.manage\n      tags:\n        - Group\n  /api/v1/groups/rules/{ruleId}/lifecycle/activate:\n    post:\n      summary: Activate a Group Rule\n      description: Activates a specific group rule by id from your organization\n      operationId: activateGroupRule\n      parameters:\n        - name: ruleId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.groups.manage\n      tags:\n        - Group\n  /api/v1/groups/rules/{ruleId}/lifecycle/deactivate:\n    post:\n      summary: Deactivate a Group Rule\n      description: Deactivates a specific group rule by id from your organization\n      operationId: deactivateGroupRule\n      parameters:\n        - name: ruleId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.groups.manage\n      tags:\n        - Group\n  /api/v1/groups/{groupId}:\n    get:\n      summary: List all Group Rules\n      description: Fetches a group from your organization.\n      operationId: getGroup\n      parameters:\n        - name: groupId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Group'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.groups.read\n      tags:\n        - Group\n    put:\n      summary: Replace a Group\n      description: Updates the profile for a group with `OKTA_GROUP` type from your organization.\n      operationId: updateGroup\n      parameters:\n        - name: groupId\n          in: path\n          required: true\n          schema:\n            type: string\n      x-codegen-request-body-name: group\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Group'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Group'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.groups.manage\n      tags:\n        - Group\n    delete:\n      summary: Delete a Group\n      description: Removes a group with `OKTA_GROUP` type from your organization.\n      operationId: deleteGroup\n      parameters:\n        - name: groupId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.groups.manage\n      tags:\n        - Group\n  /api/v1/groups/{groupId}/apps:\n    get:\n      summary: List all Assigned Applications\n      description: Enumerates all applications that are assigned to a group.\n      operationId: listAssignedApplicationsForGroup\n      parameters:\n        - name: groupId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: after\n          in: query\n          description: Specifies the pagination cursor for the next page of apps\n          schema:\n            type: string\n        - name: limit\n          in: query\n          description: Specifies the number of app results for a page\n          schema:\n            type: integer\n            format: int32\n            default: 20\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Application'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.groups.read\n      tags:\n        - Group\n  /api/v1/groups/{groupId}/owners:\n    get:\n      summary: List all Owners\n      description: List all owners for a specific group.\n      operationId: getGroupOwners\n      parameters:\n        - name: groupId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: filter\n          in: query\n          description: SCIM Filter expression for group owners. Allows to filter owners by type.\n          schema:\n            type: string\n        - name: after\n          in: query\n          description: Specifies the pagination cursor for the next page of owners\n          schema:\n            type: string\n        - name: limit\n          in: query\n          description: Specifies the number of owner results in a page\n          schema:\n            type: integer\n            format: int32\n            default: 1000\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/GroupOwner'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.groups.read\n      tags:\n        - Group\n    post:\n      summary: Assign a Group Owner\n      description: Assigns a group owner for a specific group.\n      operationId: addGroupOwner\n      parameters:\n        - name: groupId\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GroupOwner'\n        required: true\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GroupOwner'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.groups.manage\n      tags:\n        - Group\n  /api/v1/groups/{groupId}/owners/{ownerId}:\n    delete:\n      summary: Delete a Group Owner\n      description: Delete a group owner from a specific group.\n      operationId: deleteGroupOwner\n      parameters:\n        - name: groupId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: ownerId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.groups.manage\n      tags:\n        - Group\n  /api/v1/groups/{groupId}/roles:\n    get:\n      summary: List all Assigned Roles of Group\n      description: Lists all assigned roles of group identified by `groupId`\n      operationId: listGroupAssignedRoles\n      parameters:\n        - name: groupId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: expand\n          in: query\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Role'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.roles.read\n      tags:\n        - RoleAssignment\n    post:\n      summary: Assign a Role to a Group\n      description: Assigns a role to a group.\n      operationId: assignRoleToGroup\n      parameters:\n        - name: groupId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: disableNotifications\n          in: query\n          description: Setting this to `true` grants the group third-party admin status\n          schema:\n            type: boolean\n      x-codegen-request-body-name: assignRoleRequest\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AssignRoleRequest'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Role'\n        '201':\n          description: Success\n          content: {}\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.roles.manage\n      tags:\n        - RoleAssignment\n  /api/v1/groups/{groupId}/roles/{roleId}:\n    get:\n      summary: Retrieve a Role assigned to Group\n      description: Retrieves a role identified by `roleId` assigned to group identified by `groupId`\n      operationId: getGroupAssignedRole\n      parameters:\n        - name: groupId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: roleId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Role'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.roles.read\n      tags:\n        - RoleAssignment\n    delete:\n      summary: Unassign a Role from a Group\n      description: Unassigns a role identified by `roleId` assigned to group identified by `groupId`\n      operationId: unassignRoleFromGroup\n      parameters:\n        - name: groupId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: roleId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.roles.manage\n      tags:\n        - RoleAssignment\n  /api/v1/groups/{groupId}/roles/{roleId}/targets/catalog/apps:\n    get:\n      summary: List all Application Targets for an Application Administrator Role\n      description: Lists all App targets for an `APP_ADMIN` Role assigned to a Group. This methods return list may include full Applications or Instances. The response for an instance will have an `ID` value, while Application will not have an ID.\n      operationId: listApplicationTargetsForApplicationAdministratorRoleForGroup\n      parameters:\n        - name: groupId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: roleId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: after\n          in: query\n          schema:\n            type: string\n        - name: limit\n          in: query\n          schema:\n            type: integer\n            format: int32\n            default: 20\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/CatalogApplication'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.roles.read\n      tags:\n        - RoleTarget\n  /api/v1/groups/{groupId}/roles/{roleId}/targets/catalog/apps/{appName}:\n    put:\n      summary: Assign an Application Target to Administrator Role\n      description: Assign an application target to administrator role\n      operationId: addApplicationTargetToAdminRoleGivenToGroup\n      parameters:\n        - name: groupId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: roleId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: appName\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.roles.manage\n      tags:\n        - RoleTarget\n    delete:\n      summary: Delete an Application Target from Application Administrator Role\n      description: Delete an application target from application administrator role\n      operationId: removeApplicationTargetFromApplicationAdministratorRoleGivenToGroup\n      parameters:\n        - name: groupId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: roleId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: appName\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.roles.manage\n      tags:\n        - RoleTarget\n  /api/v1/groups/{groupId}/roles/{roleId}/targets/catalog/apps/{appName}/{applicationId}:\n    put:\n      summary: Assign an Application Instance Target to Application Administrator Role\n      description: Add App Instance Target to App Administrator Role given to a Group\n      operationId: addApplicationInstanceTargetToAppAdminRoleGivenToGroup\n      parameters:\n        - name: groupId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: roleId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: appName\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: applicationId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.roles.manage\n      tags:\n        - RoleTarget\n    delete:\n      summary: Delete an Application Instance Target to Application Administrator Role\n      description: Remove App Instance Target to App Administrator Role given to a Group\n      operationId: removeApplicationTargetFromAdministratorRoleGivenToGroup\n      parameters:\n        - name: groupId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: roleId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: appName\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: applicationId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.roles.manage\n      tags:\n        - RoleTarget\n  /api/v1/groups/{groupId}/roles/{roleId}/targets/groups:\n    get:\n      summary: List all Group Targets for a Group Role\n      description: Enumerates group targets for a group role.\n      operationId: listGroupTargetsForGroupRole\n      parameters:\n        - name: groupId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: roleId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: after\n          in: query\n          schema:\n            type: string\n        - name: limit\n          in: query\n          schema:\n            type: integer\n            format: int32\n            default: 20\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Group'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.roles.read\n      tags:\n        - RoleTarget\n  /api/v1/groups/{groupId}/roles/{roleId}/targets/groups/{targetGroupId}:\n    put:\n      summary: Assign a Group Target for Group Role\n      description: Enumerates group targets for a group role.\n      operationId: addGroupTargetToGroupAdministratorRoleForGroup\n      parameters:\n        - name: groupId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: roleId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: targetGroupId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.roles.manage\n      tags:\n        - RoleTarget\n    delete:\n      summary: Delete a Group Target for Group Role\n      description: remove group target for a group role.\n      operationId: removeGroupTargetFromGroupAdministratorRoleGivenToGroup\n      parameters:\n        - name: groupId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: roleId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: targetGroupId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.roles.manage\n      tags:\n        - RoleTarget\n  /api/v1/groups/{groupId}/users:\n    get:\n      summary: List all Member Users\n      description: Enumerates all users that are a member of a group.\n      operationId: listGroupUsers\n      parameters:\n        - name: groupId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: after\n          in: query\n          description: Specifies the pagination cursor for the next page of users\n          schema:\n            type: string\n        - name: limit\n          in: query\n          description: Specifies the number of user results in a page\n          schema:\n            type: integer\n            format: int32\n            default: 1000\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/User'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.groups.read\n      tags:\n        - Group\n  /api/v1/groups/{groupId}/users/{userId}:\n    put:\n      summary: Assign a User\n      description: Adds a user to a group with 'OKTA_GROUP' type.\n      operationId: addUserToGroup\n      parameters:\n        - name: groupId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.groups.manage\n      tags:\n        - Group\n    delete:\n      summary: Unassign a User\n      description: Removes a user from a group with 'OKTA_GROUP' type.\n      operationId: removeUserFromGroup\n      parameters:\n        - name: groupId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.groups.manage\n      tags:\n        - Group\n  /api/v1/hook-keys:\n    get:\n      summary: List all keys\n      description: Lists all keys\n      operationId: listHookKeys\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/HookKey'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.inlineHooks.read\n      tags:\n        - HookKey\n    post:\n      summary: Create a key\n      description: Creates a key\n      operationId: addHookKey\n      x-codegen-request-body-name: keyRequest\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/KeyRequest'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HookKey'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.inlineHooks.manage\n      tags:\n        - HookKey\n  /api/v1/hook-keys/public/{keyId}:\n    get:\n      summary: Retrieve a public key\n      description: Retrieves a public key by `keyId`\n      operationId: getPublicKey\n      parameters:\n        - name: keyId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JsonWebKey'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.inlineHooks.read\n      tags:\n        - HookKey\n  /api/v1/hook-keys/{hookKeyId}:\n    get:\n      summary: Retrieve a key\n      description: Retrieves a key by `hookKeyId`\n      operationId: getHookKey\n      parameters:\n        - name: hookKeyId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HookKey'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.inlineHooks.read\n      tags:\n        - HookKey\n    put:\n      summary: Replace a key\n      description: Replace a key by `hookKeyId`\n      operationId: replaceHookKey\n      parameters:\n        - name: hookKeyId\n          in: path\n          required: true\n          schema:\n            type: string\n      x-codegen-request-body-name: keyRequest\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/KeyRequest'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HookKey'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.inlineHooks.manage\n      tags:\n        - HookKey\n    delete:\n      summary: Delete a key\n      description: Deletes a key by `hookKeyId`. Once deleted, the Hook Key is unrecoverable. As a safety precaution, unused keys are eligible for deletion.\n      operationId: deleteHookKey\n      parameters:\n        - name: hookKeyId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.inlineHooks.manage\n      tags:\n        - HookKey\n  /api/v1/iam/resource-sets:\n    get:\n      summary: List all Resource Sets\n      description: Lists all resource sets with pagination support\n      operationId: listResourceSets\n      parameters:\n        - $ref: '#/components/parameters/queryAfter'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceSets'\n              examples:\n                Example Response:\n                  $ref: '#/components/examples/ResourceSetsResponse'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.roles.read\n      tags:\n        - ResourceSet\n    post:\n      summary: Create a Resource Set\n      description: Creates a new resource set\n      operationId: createResourceSet\n      x-codegen-request-body-name: instance\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ResourceSet'\n            examples:\n              Example Request:\n                $ref: '#/components/examples/ResourceSetRequest'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceSet'\n              examples:\n                Example Response:\n                  $ref: '#/components/examples/ResourceSetResponse'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              examples:\n                Access Denied:\n                  $ref: '#/components/examples/ErrorAccessDenied'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.roles.manage\n      tags:\n        - ResourceSet\n  /api/v1/iam/resource-sets/{resourceSetId}:\n    parameters:\n      - $ref: '#/components/parameters/pathResourceSetId'\n    get:\n      summary: Retrieve a Resource Set\n      description: Retrieve a resource set by `resourceSetId`\n      operationId: getResourceSet\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceSet'\n              examples:\n                Example Response:\n                  $ref: '#/components/examples/ResourceSetResponse'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.roles.read\n      tags:\n        - ResourceSet\n    put:\n      summary: Replace a Resource Set\n      description: Replaces a resource set by `resourceSetId`\n      operationId: replaceResourceSet\n      x-codegen-request-body-name: instance\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ResourceSet'\n            examples:\n              Example Request:\n                $ref: '#/components/examples/ResourceSetRequest'\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceSet'\n              examples:\n                Example Response:\n                  $ref: '#/components/examples/ResourceSetResponse'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.roles.manage\n      tags:\n        - ResourceSet\n    delete:\n      summary: Delete a Resource Set\n      description: Deletes a role by `resourceSetId`\n      operationId: deleteResourceSet\n      responses:\n        '204':\n          description: No Content\n        '403':\n          description: Forbidden\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              examples:\n                Access Denied:\n                  $ref: '#/components/examples/ErrorAccessDenied'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.roles.manage\n      tags:\n        - ResourceSet\n  /api/v1/iam/resource-sets/{resourceSetId}/bindings:\n    parameters:\n      - $ref: '#/components/parameters/pathResourceSetId'\n    get:\n      summary: List all Bindings\n      description: Lists all resource set bindings with pagination support\n      operationId: listBindings\n      parameters:\n        - $ref: '#/components/parameters/queryAfter'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceSetBindings'\n              examples:\n                Example Response:\n                  $ref: '#/components/examples/ResourceSetBindingsResponse'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.roles.read\n      tags:\n        - ResourceSet\n    post:\n      summary: Create a Resource Set Binding\n      description: Creates a new resource set binding\n      operationId: createResourceSetBinding\n      x-codegen-request-body-name: instance\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ResourceSetBindingCreateRequest'\n            examples:\n              Example Request:\n                $ref: '#/components/examples/ResourceSetBindingCreateRequestExample'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceSetBindingResponse'\n              examples:\n                Example Response:\n                  $ref: '#/components/examples/ResourceSetBindingResponseExample'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              examples:\n                Access Denied:\n                  $ref: '#/components/examples/ErrorAccessDenied'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.roles.manage\n      tags:\n        - ResourceSet\n  /api/v1/iam/resource-sets/{resourceSetId}/bindings/{roleIdOrLabel}:\n    parameters:\n      - $ref: '#/components/parameters/pathResourceSetId'\n      - $ref: '#/components/parameters/pathRoleIdOrLabel'\n    get:\n      summary: Retrieve a Binding\n      description: Retrieves a resource set binding by `resourceSetId` and `roleIdOrLabel`\n      operationId: getBinding\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceSetBindingResponse'\n              examples:\n                Example Response:\n                  $ref: '#/components/examples/ResourceSetBindingResponseWithIdExample'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.roles.read\n      tags:\n        - ResourceSet\n    delete:\n      summary: Delete a Binding\n      description: Deletes a resource set binding by `resourceSetId` and `roleIdOrLabel`\n      operationId: deleteBinding\n      responses:\n        '204':\n          description: No Content\n        '403':\n          description: Forbidden\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              examples:\n                Access Denied:\n                  $ref: '#/components/examples/ErrorAccessDenied'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.roles.manage\n      tags:\n        - ResourceSet\n  /api/v1/iam/resource-sets/{resourceSetId}/bindings/{roleIdOrLabel}/members:\n    parameters:\n      - $ref: '#/components/parameters/pathResourceSetId'\n      - $ref: '#/components/parameters/pathRoleIdOrLabel'\n    get:\n      summary: List all Members of a binding\n      description: Lists all members of a resource set binding with pagination support\n      operationId: listMembersOfBinding\n      parameters:\n        - $ref: '#/components/parameters/queryAfter'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceSetBindingMembers'\n              examples:\n                Example Response:\n                  $ref: '#/components/examples/ResourceSetBindingMembersResponse'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.roles.read\n      tags:\n        - ResourceSet\n    patch:\n      summary: Add more Members to a binding\n      description: Adds more members to a resource set binding\n      operationId: addMembersToBinding\n      x-codegen-request-body-name: instance\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ResourceSetBindingAddMembersRequest'\n            examples:\n              Example Request:\n                $ref: '#/components/examples/ResourceSetBindingAddMembersRequestExample'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceSetBindingResponse'\n              examples:\n                Example Response:\n                  $ref: '#/components/examples/ResourceSetBindingResponseExample'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              examples:\n                Access Denied:\n                  $ref: '#/components/examples/ErrorAccessDenied'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.roles.manage\n      tags:\n        - ResourceSet\n  /api/v1/iam/resource-sets/{resourceSetId}/bindings/{roleIdOrLabel}/members/{memberId}:\n    parameters:\n      - $ref: '#/components/parameters/pathResourceSetId'\n      - $ref: '#/components/parameters/pathRoleIdOrLabel'\n      - $ref: '#/components/parameters/pathMemberId'\n    get:\n      summary: Retrieve a Member of a binding\n      description: Retreieves a member identified by `memberId` for a binding\n      operationId: getMemberOfBinding\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceSetBindingMember'\n              examples:\n                Example Response:\n                  $ref: '#/components/examples/ResourceSetBindingMemberResponse'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.roles.read\n      tags:\n        - ResourceSet\n    delete:\n      summary: Unassign a Member from a binding\n      description: Unassigns a member identified by `memberId` from a binding\n      operationId: unassignMemberFromBinding\n      x-codegen-request-body-name: instance\n      responses:\n        '204':\n          description: No Content\n        '403':\n          description: Forbidden\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              examples:\n                Access Denied:\n                  $ref: '#/components/examples/ErrorAccessDenied'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.roles.manage\n      tags:\n        - ResourceSet\n  /api/v1/iam/resource-sets/{resourceSetId}/resources:\n    parameters:\n      - $ref: '#/components/parameters/pathResourceSetId'\n    get:\n      summary: List all Resources of a resource set\n      description: Lists all resources that make up the resource set\n      operationId: listResourceSetResources\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceSetResources'\n              examples:\n                Example Response:\n                  $ref: '#/components/examples/ResourceSetResourcesResponse'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.roles.read\n      tags:\n        - ResourceSet\n    patch:\n      summary: Add a Resource to a resource set\n      description: Adds more resources to a resource set\n      operationId: addResourceSetResource\n      x-codegen-request-body-name: instance\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ResourceSetResourcePatchRequest'\n            examples:\n              Example Request:\n                $ref: '#/components/examples/ResourceSetResourcePatchRequestExample'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceSet'\n              examples:\n                Example Response:\n                  $ref: '#/components/examples/ResourceSetResponse'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              examples:\n                Access Denied:\n                  $ref: '#/components/examples/ErrorAccessDenied'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.roles.manage\n      tags:\n        - ResourceSet\n  /api/v1/iam/resource-sets/{resourceSetId}/resources/{resourceId}:\n    parameters:\n      - $ref: '#/components/parameters/pathResourceSetId'\n      - $ref: '#/components/parameters/pathResourceId'\n    delete:\n      summary: Delete a Resource from a resource set\n      description: Deletes a resource identified by `resourceId` from a resource set\n      operationId: deleteResourceSetResource\n      responses:\n        '204':\n          description: No Content\n        '403':\n          description: Forbidden\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              examples:\n                Access Denied:\n                  $ref: '#/components/examples/ErrorAccessDenied'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.roles.manage\n      tags:\n        - ResourceSet\n  /api/v1/iam/roles:\n    get:\n      summary: List all Roles\n      description: Lists all roles with pagination support\n      operationId: listRoles\n      parameters:\n        - $ref: '#/components/parameters/queryAfter'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IamRoles'\n              examples:\n                Example Response:\n                  $ref: '#/components/examples/RolesResponse'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.roles.read\n      tags:\n        - Role\n    post:\n      summary: Create a Role\n      description: Creates a new role\n      operationId: createRole\n      x-codegen-request-body-name: instance\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/IamRole'\n            examples:\n              Example Request:\n                $ref: '#/components/examples/RoleRequest'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IamRole'\n              examples:\n                Example Response:\n                  $ref: '#/components/examples/RoleResponse'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              examples:\n                Access Denied:\n                  $ref: '#/components/examples/ErrorAccessDenied'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.roles.manage\n      tags:\n        - Role\n  /api/v1/iam/roles/{roleIdOrLabel}:\n    parameters:\n      - $ref: '#/components/parameters/pathRoleIdOrLabel'\n    get:\n      summary: Retrieve a Role\n      description: Retrieve a role by `roleIdOrLabel`\n      operationId: getRole\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IamRole'\n              examples:\n                Example Response:\n                  $ref: '#/components/examples/RoleResponse'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.roles.read\n      tags:\n        - Role\n    put:\n      summary: Replace a Role\n      description: Replaces a role by `roleIdOrLabel`\n      operationId: replaceRole\n      x-codegen-request-body-name: instance\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/IamRole'\n            examples:\n              Example Request:\n                $ref: '#/components/examples/RoleRequest'\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IamRole'\n              examples:\n                Example Response:\n                  $ref: '#/components/examples/RoleResponse'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.roles.manage\n      tags:\n        - Role\n    delete:\n      summary: Delete a Role\n      description: Deletes a role by `roleIdOrLabel`\n      operationId: deleteRole\n      responses:\n        '204':\n          description: No Content\n        '403':\n          description: Forbidden\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              examples:\n                Access Denied:\n                  $ref: '#/components/examples/ErrorAccessDenied'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.roles.manage\n      tags:\n        - Role\n  /api/v1/iam/roles/{roleIdOrLabel}/permissions:\n    parameters:\n      - $ref: '#/components/parameters/pathRoleIdOrLabel'\n    get:\n      summary: List all Permissions\n      description: Lists all permissions of the role by `roleIdOrLabel`\n      operationId: listRolePermissions\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Permissions'\n              examples:\n                Example Response:\n                  $ref: '#/components/examples/PermissionsResponse'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.roles.read\n      tags:\n        - Role\n  /api/v1/iam/roles/{roleIdOrLabel}/permissions/{permissionType}:\n    parameters:\n      - $ref: '#/components/parameters/pathRoleIdOrLabel'\n      - $ref: '#/components/parameters/pathPermissionType'\n    get:\n      summary: Retrieve a Permission\n      description: Retrieves a permission by `permissionType`\n      operationId: getRolePermission\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Permission'\n              examples:\n                Example Response:\n                  $ref: '#/components/examples/PermissionResponse'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.roles.read\n      tags:\n        - Role\n    post:\n      summary: Create a Permission\n      description: Adds a permission specified by `permissionType` to the role\n      operationId: addRolePermission\n      x-codegen-request-body-name: instance\n      responses:\n        '204':\n          description: No Content\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.roles.manage\n      tags:\n        - Role\n    delete:\n      summary: Delete a Permission\n      description: Deletes a permission from a role by `permissionType`\n      operationId: deleteRolePermission\n      responses:\n        '204':\n          description: No Content\n        '403':\n          description: Forbidden\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              examples:\n                Access Denied:\n                  $ref: '#/components/examples/ErrorAccessDenied'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.roles.manage\n      tags:\n        - Role\n  /api/v1/idps:\n    get:\n      summary: List all Identity Providers\n      description: Enumerates IdPs in your organization with pagination. A subset of IdPs can be returned that match a supported filter expression or query.\n      operationId: listIdentityProviders\n      parameters:\n        - name: q\n          in: query\n          description: Searches the name property of IdPs for matching value\n          schema:\n            type: string\n        - name: after\n          in: query\n          description: Specifies the pagination cursor for the next page of IdPs\n          schema:\n            type: string\n        - name: limit\n          in: query\n          description: Specifies the number of IdP results in a page\n          schema:\n            type: integer\n            format: int32\n            default: 20\n        - name: type\n          in: query\n          description: Filters IdPs by type\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/IdentityProvider'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.idps.read\n      tags:\n        - IdentityProvider\n    post:\n      summary: Create an Identity Provider\n      description: Adds a new IdP to your organization.\n      operationId: createIdentityProvider\n      x-codegen-request-body-name: identityProvider\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/IdentityProvider'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IdentityProvider'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.idps.manage\n      tags:\n        - IdentityProvider\n  /api/v1/idps/credentials/keys:\n    get:\n      summary: List all Credential Keys\n      description: Enumerates IdP key credentials.\n      operationId: listIdentityProviderKeys\n      parameters:\n        - name: after\n          in: query\n          description: Specifies the pagination cursor for the next page of keys\n          schema:\n            type: string\n        - name: limit\n          in: query\n          description: Specifies the number of key results in a page\n          schema:\n            type: integer\n            format: int32\n            default: 20\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/JsonWebKey'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.idps.read\n      tags:\n        - IdentityProvider\n    post:\n      summary: Create an X.509 Certificate Public Key\n      description: Adds a new X.509 certificate credential to the IdP key store.\n      operationId: createIdentityProviderKey\n      x-codegen-request-body-name: jsonWebKey\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/JsonWebKey'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JsonWebKey'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.idps.manage\n      tags:\n        - IdentityProvider\n  /api/v1/idps/credentials/keys/{keyId}:\n    get:\n      summary: Retrieve an Credential Key\n      description: Gets a specific IdP Key Credential by `kid`\n      operationId: getIdentityProviderKey\n      parameters:\n        - name: keyId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JsonWebKey'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.idps.read\n      tags:\n        - IdentityProvider\n    delete:\n      summary: Delete a Signing Credential Key\n      description: Deletes a specific IdP Key Credential by `kid` if it is not currently being used by an Active or Inactive IdP.\n      operationId: deleteIdentityProviderKey\n      parameters:\n        - name: keyId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.idps.manage\n      tags:\n        - IdentityProvider\n  /api/v1/idps/{idpId}:\n    get:\n      summary: Retrieve an Identity Provider\n      description: Fetches an IdP by `id`.\n      operationId: getIdentityProvider\n      parameters:\n        - name: idpId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IdentityProvider'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.idps.read\n      tags:\n        - IdentityProvider\n    put:\n      summary: Replace an Identity Provider\n      description: Updates the configuration for an IdP.\n      operationId: updateIdentityProvider\n      parameters:\n        - name: idpId\n          in: path\n          required: true\n          schema:\n            type: string\n      x-codegen-request-body-name: identityProvider\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/IdentityProvider'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IdentityProvider'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.idps.manage\n      tags:\n        - IdentityProvider\n    delete:\n      summary: Delete an Identity Provider\n      description: Removes an IdP from your organization.\n      operationId: deleteIdentityProvider\n      parameters:\n        - name: idpId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.idps.manage\n      tags:\n        - IdentityProvider\n  /api/v1/idps/{idpId}/credentials/csrs:\n    get:\n      summary: List all Certificate Signing Requests\n      description: Enumerates Certificate Signing Requests for an IdP\n      operationId: listCsrsForIdentityProvider\n      parameters:\n        - name: idpId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Csr'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.idps.read\n      tags:\n        - IdentityProvider\n    post:\n      summary: Generate a Certificate Signing Request\n      description: Generates a new key pair and returns a Certificate Signing Request for it.\n      operationId: generateCsrForIdentityProvider\n      parameters:\n        - name: idpId\n          in: path\n          required: true\n          schema:\n            type: string\n      x-codegen-request-body-name: metadata\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CsrMetadata'\n        required: true\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Csr'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.idps.manage\n      tags:\n        - IdentityProvider\n  /api/v1/idps/{idpId}/credentials/csrs/{csrId}:\n    get:\n      summary: Retrieve a Certificate Signing Request\n      description: Gets a specific Certificate Signing Request model by id\n      operationId: getCsrForIdentityProvider\n      parameters:\n        - name: idpId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: csrId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Csr'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.idps.read\n      tags:\n        - IdentityProvider\n    delete:\n      summary: Revoke a Certificate Signing Request\n      description: Revoke a Certificate Signing Request and delete the key pair from the IdP\n      operationId: revokeCsrForIdentityProvider\n      parameters:\n        - name: idpId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: csrId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.idps.manage\n      tags:\n        - IdentityProvider\n  /api/v1/idps/{idpId}/credentials/csrs/{csrId}/lifecycle/publish:\n    post:\n      summary: Publish a Certificate Signing Request\n      description: Update the Certificate Signing Request with a signed X.509 certificate and add it into the signing key credentials for the IdP.\n      operationId: publishCsrForIdentityProvider\n      parameters:\n        - name: idpId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: csrId\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/x-x509-ca-cert:\n            schema:\n              type: string\n              format: binary\n              x-okta-operationId: publishBinaryCerCertForIdentityProvider\n          application/pkix-cert:\n            schema:\n              type: string\n              format: binary\n              x-okta-operationId: publishBinaryDerCertForIdentityProvider\n          application/x-pem-file:\n            schema:\n              type: string\n              format: binary\n              x-okta-operationId: publishBinaryPemCertForIdentityProvider\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JsonWebKey'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.idps.manage\n      tags:\n        - IdentityProvider\n  /api/v1/idps/{idpId}/credentials/keys:\n    get:\n      summary: List all Signing Credential Keys\n      description: Enumerates signing key credentials for an IdP\n      operationId: listIdentityProviderSigningKeys\n      parameters:\n        - name: idpId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/JsonWebKey'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.idps.read\n      tags:\n        - IdentityProvider\n  /api/v1/idps/{idpId}/credentials/keys/generate:\n    post:\n      summary: Generate a new Signing Credential Key\n      description: Generates a new X.509 certificate for an IdP signing key credential to be used for signing assertions sent to the IdP\n      operationId: generateIdentityProviderSigningKey\n      parameters:\n        - name: idpId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: validityYears\n          in: query\n          description: expiry of the IdP Key Credential\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JsonWebKey'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.idps.manage\n      tags:\n        - IdentityProvider\n  /api/v1/idps/{idpId}/credentials/keys/{keyId}:\n    get:\n      summary: Retrieve a Signing Credential Key\n      description: Gets a specific IdP Key Credential by `kid`\n      operationId: getIdentityProviderSigningKey\n      parameters:\n        - name: idpId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: keyId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JsonWebKey'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.idps.read\n      tags:\n        - IdentityProvider\n  /api/v1/idps/{idpId}/credentials/keys/{keyId}/clone:\n    post:\n      summary: Clone a Signing Credential Key\n      description: Clones a X.509 certificate for an IdP signing key credential from a source IdP to target IdP\n      operationId: cloneIdentityProviderKey\n      parameters:\n        - name: idpId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: keyId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: targetIdpId\n          in: query\n          required: true\n          schema:\n            type: string\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JsonWebKey'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.idps.manage\n      tags:\n        - IdentityProvider\n  /api/v1/idps/{idpId}/lifecycle/activate:\n    post:\n      summary: Activate an Identity Provider\n      description: Activates an inactive IdP.\n      operationId: activateIdentityProvider\n      parameters:\n        - name: idpId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IdentityProvider'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.idps.manage\n      tags:\n        - IdentityProvider\n  /api/v1/idps/{idpId}/lifecycle/deactivate:\n    post:\n      summary: Deactivate an Identity Provider\n      description: Deactivates an active IdP.\n      operationId: deactivateIdentityProvider\n      parameters:\n        - name: idpId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IdentityProvider'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.idps.manage\n      tags:\n        - IdentityProvider\n  /api/v1/idps/{idpId}/users:\n    get:\n      summary: List all Users\n      description: Find all the users linked to an identity provider\n      operationId: listIdentityProviderApplicationUsers\n      parameters:\n        - name: idpId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/IdentityProviderApplicationUser'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.idps.read\n      tags:\n        - IdentityProvider\n  /api/v1/idps/{idpId}/users/{userId}:\n    get:\n      summary: Retrieve a User\n      description: Fetches a linked IdP user by ID\n      operationId: getIdentityProviderApplicationUser\n      parameters:\n        - name: idpId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IdentityProviderApplicationUser'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.idps.read\n      tags:\n        - IdentityProvider\n    post:\n      summary: Link a User to a Social IdP\n      description: Links an Okta user to an existing Social Identity Provider. This does not support the SAML2 Identity Provider Type\n      operationId: linkUserToIdentityProvider\n      parameters:\n        - name: idpId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n      x-codegen-request-body-name: userIdentityProviderLinkRequest\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserIdentityProviderLinkRequest'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IdentityProviderApplicationUser'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.users.manage\n      tags:\n        - IdentityProvider\n    delete:\n      summary: Unlink a User from IdP\n      description: Removes the link between the Okta user and the IdP user.\n      operationId: unlinkUserFromIdentityProvider\n      parameters:\n        - name: idpId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.idps.manage\n      tags:\n        - IdentityProvider\n  /api/v1/idps/{idpId}/users/{userId}/credentials/tokens:\n    get:\n      summary: List all Tokens from a OIDC Identity Provider\n      description: Fetches the tokens minted by the Social Authentication Provider when the user authenticates with Okta via Social Auth.\n      operationId: listSocialAuthTokens\n      parameters:\n        - name: idpId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/SocialAuthToken'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.idps.read\n      tags:\n        - IdentityProvider\n  /api/v1/inlineHooks:\n    get:\n      summary: List all Inline Hooks\n      description: Lists all inline hooks\n      operationId: listInlineHooks\n      parameters:\n        - name: type\n          in: query\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/InlineHook'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.inlineHooks.read\n      tags:\n        - InlineHook\n    post:\n      summary: Create an Inline Hook\n      description: Creates an inline hook\n      operationId: createInlineHook\n      x-codegen-request-body-name: inlineHook\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/InlineHook'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InlineHook'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.inlineHooks.manage\n      tags:\n        - InlineHook\n  /api/v1/inlineHooks/{inlineHookId}:\n    get:\n      summary: Retrieve an Inline Hook\n      description: Retrieves an inline hook by `inlineHookId`\n      operationId: getInlineHook\n      parameters:\n        - name: inlineHookId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InlineHook'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.inlineHooks.read\n      tags:\n        - InlineHook\n    put:\n      summary: Replace an Inline Hook\n      description: Replaces an inline hook by `inlineHookId`\n      operationId: updateInlineHook\n      parameters:\n        - name: inlineHookId\n          in: path\n          required: true\n          schema:\n            type: string\n      x-codegen-request-body-name: inlineHook\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/InlineHook'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InlineHook'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.inlineHooks.manage\n      tags:\n        - InlineHook\n    delete:\n      summary: Delete an Inline Hook\n      description: Deletes an inline hook by `inlineHookId`. Once deleted, the Inline Hook is unrecoverable. As a safety precaution, only Inline Hooks with a status of INACTIVE are eligible for deletion.\n      operationId: deleteInlineHook\n      parameters:\n        - name: inlineHookId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.inlineHooks.manage\n      tags:\n        - InlineHook\n  /api/v1/inlineHooks/{inlineHookId}/execute:\n    post:\n      summary: Execute an Inline Hook\n      description: Executes the inline hook by `inlineHookId` using the request body as the input. This will send the provided data through the Channel and return a response if it matches the correct data contract. This execution endpoint should only be used for testing purposes.\n      operationId: executeInlineHook\n      parameters:\n        - name: inlineHookId\n          in: path\n          required: true\n          schema:\n            type: string\n      x-codegen-request-body-name: payloadData\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/InlineHookPayload'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InlineHookResponse'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.inlineHooks.manage\n      tags:\n        - InlineHook\n  /api/v1/inlineHooks/{inlineHookId}/lifecycle/activate:\n    post:\n      summary: Activate an Inline Hook\n      description: Activates the inline hook by `inlineHookId`\n      operationId: activateInlineHook\n      parameters:\n        - name: inlineHookId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InlineHook'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.inlineHooks.manage\n      tags:\n        - InlineHook\n  /api/v1/inlineHooks/{inlineHookId}/lifecycle/deactivate:\n    post:\n      summary: Deactivate an Inline Hook\n      description: Deactivates the inline hook by `inlineHookId`\n      operationId: deactivateInlineHook\n      parameters:\n        - name: inlineHookId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InlineHook'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.inlineHooks.manage\n      tags:\n        - InlineHook\n  /api/v1/logStreams:\n    get:\n      summary: List all Log Streams\n      description: Lists all log streams. You can request a paginated list or a subset of Log Streams that match a supported filter expression.\n      operationId: listLogStreams\n      parameters:\n        - $ref: '#/components/parameters/queryAfter'\n        - $ref: '#/components/parameters/queryLimit'\n        - name: filter\n          in: query\n          description: SCIM filter expression that filters the results. This expression only supports the `eq` operator on either the `status` or `type`.\n          schema:\n            type: string\n          examples:\n            Filter on type for AWS EventBridge:\n              value: type eq \"aws_eventbridge\"\n            Filter on status for `ACTIVE` Log Streams:\n              value: status eq \"ACTIVE\"\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/LogStream'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.logStreams.read\n      tags:\n        - LogStream\n    post:\n      summary: Create a Log Stream\n      description: Creates a new log stream\n      operationId: createLogStream\n      x-codegen-request-body-name: instance\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LogStream'\n            examples:\n              Example Request:\n                $ref: '#/components/examples/LogStreamRequest'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LogStream'\n              examples:\n                Example Response:\n                  $ref: '#/components/examples/LogStreamResponse'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              examples:\n                Access Denied:\n                  $ref: '#/components/examples/ErrorAccessDenied'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.logStreams.manage\n      tags:\n        - LogStream\n  /api/v1/logStreams/{logStreamId}:\n    parameters:\n      - $ref: '#/components/parameters/pathLogStreamId'\n    get:\n      summary: Retrieve a Log Stream\n      description: Retrieve a log stream by `logStreamId`\n      operationId: getLogStream\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LogStream'\n              examples:\n                Example Response:\n                  $ref: '#/components/examples/LogStreamResponse'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.logStreams.read\n      tags:\n        - LogStream\n    put:\n      summary: Replace a Log Stream\n      description: Replaces a log stream by `logStreamId`\n      operationId: replaceLogStream\n      x-codegen-request-body-name: instance\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LogStream'\n            examples:\n              Example Request:\n                $ref: '#/components/examples/LogStreamRequest'\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LogStream'\n              examples:\n                Example Response:\n                  $ref: '#/components/examples/LogStreamResponse'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.logStreams.manage\n      tags:\n        - LogStream\n    delete:\n      summary: Delete a Log Stream\n      description: Deletes a log stream by `logStreamId`\n      operationId: deleteLogStream\n      responses:\n        '204':\n          description: No Content\n        '403':\n          description: Forbidden\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              examples:\n                Access Denied:\n                  $ref: '#/components/examples/ErrorAccessDenied'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.logStreams.manage\n      tags:\n        - LogStream\n  /api/v1/logStreams/{logStreamId}/lifecycle/activate:\n    parameters:\n      - $ref: '#/components/parameters/pathLogStreamId'\n    post:\n      summary: Activate a Log Stream\n      description: Activates a log stream by `logStreamId`\n      operationId: activateLogStream\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LogStream'\n              examples:\n                Example Response:\n                  $ref: '#/components/examples/LogStreamResponse'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.logStreams.manage\n      tags:\n        - LogStream\n  /api/v1/logStreams/{logStreamId}/lifecycle/deactivate:\n    parameters:\n      - $ref: '#/components/parameters/pathLogStreamId'\n    post:\n      summary: Deactivate a Log Stream\n      description: Deactivates a log stream by `logStreamId`\n      operationId: deactivateLogStream\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LogStream'\n              examples:\n                Example Response:\n                  $ref: '#/components/examples/LogStreamResponse'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.logStreams.manage\n      tags:\n        - LogStream\n  /api/v1/logs:\n    get:\n      summary: List all System Log Events\n      description: The Okta System Log API provides read access to your organization’s system log. This API provides more functionality than the Events API\n      operationId: getLogs\n      parameters:\n        - name: since\n          in: query\n          schema:\n            type: string\n            format: date-time\n        - name: until\n          in: query\n          schema:\n            type: string\n            format: date-time\n        - name: filter\n          in: query\n          schema:\n            type: string\n        - name: q\n          in: query\n          schema:\n            type: string\n        - name: limit\n          in: query\n          schema:\n            type: integer\n            default: 100\n        - name: sortOrder\n          in: query\n          schema:\n            type: string\n            default: ASCENDING\n        - name: after\n          in: query\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/LogEvent'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.logs.read\n      tags:\n        - SystemLog\n  /api/v1/mappings:\n    get:\n      summary: List all Profile Mappings\n      description: Enumerates Profile Mappings in your organization with pagination.\n      operationId: listProfileMappings\n      parameters:\n        - name: after\n          in: query\n          schema:\n            type: string\n        - name: limit\n          in: query\n          schema:\n            type: integer\n            format: int32\n            default: -1\n        - name: sourceId\n          in: query\n          schema:\n            type: string\n        - name: targetId\n          in: query\n          schema:\n            type: string\n            default: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ProfileMapping'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.profileMappings.read\n      tags:\n        - ProfileMapping\n  /api/v1/mappings/{mappingId}:\n    get:\n      summary: Retrieve a Profile Mapping\n      description: Fetches a single Profile Mapping referenced by its ID.\n      operationId: getProfileMapping\n      parameters:\n        - name: mappingId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProfileMapping'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.profileMappings.read\n      tags:\n        - ProfileMapping\n    post:\n      summary: Update a Profile Mapping\n      description: Updates an existing Profile Mapping by adding, updating, or removing one or many Property Mappings.\n      operationId: updateProfileMapping\n      parameters:\n        - name: mappingId\n          in: path\n          required: true\n          schema:\n            type: string\n      x-codegen-request-body-name: profileMapping\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ProfileMapping'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProfileMapping'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.profileMappings.manage\n      tags:\n        - ProfileMapping\n  /api/v1/meta/layouts/apps/{appName}:\n    get:\n      summary: Retrieve the UI Layout for an Application\n      description: Takes an Application name as an input parameter and retrieves the App Instance page Layout for that Application.\n      operationId: getApplicationLayout\n      parameters:\n        - name: appName\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApplicationLayout'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.schemas.read\n      tags:\n        - Schema\n  /api/v1/meta/schemas/apps/{appInstanceId}/default:\n    get:\n      summary: Retrieve the default Application User Schema for an Application\n      description: Fetches the Schema for an App User\n      operationId: getApplicationUserSchema\n      parameters:\n        - name: appInstanceId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserSchema'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.schemas.read\n      tags:\n        - Schema\n    post:\n      summary: Update the default Application User Schema for an Application\n      description: Partial updates on the User Profile properties of the Application User Schema.\n      operationId: updateApplicationUserProfile\n      parameters:\n        - name: appInstanceId\n          in: path\n          required: true\n          schema:\n            type: string\n      x-codegen-request-body-name: body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserSchema'\n            examples:\n              Add a custom property to the app user schema:\n                $ref: '#/components/examples/AppUserSchemaAddRequest'\n        required: false\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserSchema'\n              examples:\n                Response with a subset of properties for brevity:\n                  $ref: '#/components/examples/AppUserSchemaResponse'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.schemas.manage\n      tags:\n        - Schema\n  /api/v1/meta/schemas/group/default:\n    get:\n      summary: Retrieve the default Group Schema\n      description: Fetches the group schema\n      operationId: getGroupSchema\n      parameters: []\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GroupSchema'\n              examples:\n                Response with a subset of properties for brevity:\n                  $ref: '#/components/examples/GroupSchemaResponse'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.schemas.read\n      tags:\n        - Schema\n    post:\n      summary: Update the default Group Schema\n      description: Updates, adds or removes one or more custom Group Profile properties in the schema\n      operationId: updateGroupSchema\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GroupSchema'\n            examples:\n              Add a custom property to the group schema:\n                $ref: '#/components/examples/GroupSchemaAddRequest'\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GroupSchema'\n              example:\n                Response with a subset of properties for brevity:\n                  $ref: '#/components/examples/GroupSchemaResponse'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.schemas.manage\n      tags:\n        - Schema\n  /api/v1/meta/schemas/logStream:\n    get:\n      summary: List the Log Stream Schemas\n      description: Lists the schema for all log stream types visible for this org.\n      operationId: listLogStreamSchemas\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/LogStreamSchema'\n              examples:\n                All log stream schemas for your org:\n                  $ref: '#/components/examples/LogStreamSchemaList'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.logStreams.read\n      tags:\n        - Schema\n  /api/v1/meta/schemas/logStream/{logStreamType}:\n    parameters:\n      - name: logStreamType\n        in: path\n        required: true\n        schema:\n          $ref: '#/components/schemas/LogStreamType'\n    get:\n      summary: Retrieve the Log Stream Schema for the schema type\n      description: Retrieves the schema for a Log Stream type. The `logStreamType` element in the URL specifies the Log Stream type, which is either `aws_eventbridge` or `splunk_cloud_logstreaming`. Use the `aws_eventbridge` literal to retrieve the AWS EventBridge type schema, and use the `splunk_cloud_logstreaming` literal retrieve the Splunk Cloud type schema.\n      operationId: getLogStreamSchema\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LogStreamSchema'\n              examples:\n                Schema for type `aws_eventbridge`:\n                  $ref: '#/components/examples/LogStreamSchemaAws'\n                Schema for type `splunk_cloud_logstreaming`:\n                  $ref: '#/components/examples/LogStreamSchemaSplunk'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.logStreams.read\n      tags:\n        - Schema\n  /api/v1/meta/schemas/user/linkedObjects:\n    get:\n      summary: List all Linked Object Definitions\n      description: List all linked object definitions\n      operationId: listLinkedObjectDefinitions\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/LinkedObject'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.linkedObjects.read\n      tags:\n        - LinkedObject\n    post:\n      summary: Create a Linked Object Definition\n      description: Create a linked object definition\n      operationId: addLinkedObjectDefinition\n      x-codegen-request-body-name: linkedObject\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LinkedObject'\n        required: true\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LinkedObject'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.linkedObjects.manage\n      tags:\n        - LinkedObject\n  /api/v1/meta/schemas/user/linkedObjects/{linkedObjectName}:\n    parameters:\n      - name: linkedObjectName\n        in: path\n        required: true\n        schema:\n          type: string\n    get:\n      summary: Retrieve a Linked Object Definition\n      description: Retrieve a linked object definition\n      operationId: getLinkedObjectDefinition\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LinkedObject'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.linkedObjects.read\n      tags:\n        - LinkedObject\n    delete:\n      summary: Delete a Linked Object Definition\n      description: Delete a linked object definition\n      operationId: deleteLinkedObjectDefinition\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.linkedObjects.manage\n      tags:\n        - LinkedObject\n  /api/v1/meta/schemas/user/{schemaId}:\n    parameters:\n      - name: schemaId\n        in: path\n        required: true\n        schema:\n          type: string\n    get:\n      summary: Retrieve a User Schema\n      description: Fetches the schema for a Schema Id.\n      operationId: getUserSchema\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserSchema'\n              examples:\n                Response with a subset of properties for brevity:\n                  $ref: '#/components/examples/UserSchemaResponse'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.schemas.read\n      tags:\n        - Schema\n    post:\n      summary: Update a User Schema\n      description: Partial updates on the User Profile properties of the user schema.\n      operationId: updateUserProfile\n      x-codegen-request-body-name: userSchema\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserSchema'\n            examples:\n              Add a custom property to the user schema:\n                $ref: '#/components/examples/UserSchemaAddRequest'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserSchema'\n              examples:\n                Response with a subset of properties for brevity:\n                  $ref: '#/components/examples/UserSchemaResponse'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.schemas.manage\n      tags:\n        - Schema\n  /api/v1/meta/types/user:\n    get:\n      summary: List all User Types\n      description: Fetches all User Types in your org\n      operationId: listUserTypes\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UserType'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.userTypes.read\n      tags:\n        - UserType\n    post:\n      summary: Create a User Type\n      description: Creates a new User Type. A default User Type is automatically created along with your org, and you may add another 9 User Types for a maximum of 10.\n      operationId: createUserType\n      x-codegen-request-body-name: userType\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserType'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserType'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.userTypes.manage\n      tags:\n        - UserType\n  /api/v1/meta/types/user/{typeId}:\n    parameters:\n      - name: typeId\n        in: path\n        required: true\n        schema:\n          type: string\n    get:\n      summary: Retrieve a User Type\n      description: Fetches a User Type by ID. The special identifier `default` may be used to fetch the default User Type.\n      operationId: getUserType\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserType'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.userTypes.read\n      tags:\n        - UserType\n    post:\n      summary: Update a User Type\n      description: Updates an existing User Type\n      operationId: updateUserType\n      x-codegen-request-body-name: userType\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserType'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserType'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.userTypes.manage\n      tags:\n        - UserType\n    put:\n      summary: Replace a User Type\n      description: Replace an existing User Type\n      operationId: replaceUserType\n      x-codegen-request-body-name: userType\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserType'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserType'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.userTypes.manage\n      tags:\n        - UserType\n    delete:\n      summary: Delete a User Type\n      description: Deletes a User Type permanently. This operation is not permitted for the default type, nor for any User Type that has existing users\n      operationId: deleteUserType\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.userTypes.manage\n      tags:\n        - UserType\n  /api/v1/org:\n    get:\n      summary: Retrieve the Org Settings\n      description: Get settings of your organization.\n      operationId: getOrgSettings\n      parameters: []\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrgSetting'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.orgs.read\n      tags:\n        - OrgSetting\n    post:\n      summary: Update the Org Settings\n      description: Partial update settings of your organization.\n      operationId: partialUpdateOrgSetting\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/OrgSetting'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrgSetting'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.orgs.manage\n      tags:\n        - OrgSetting\n    put:\n      summary: Replace the Org Settings\n      description: Update settings of your organization.\n      operationId: updateOrgSetting\n      x-codegen-request-body-name: orgSetting\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/OrgSetting'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrgSetting'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.orgs.manage\n      tags:\n        - OrgSetting\n  /api/v1/org/contacts:\n    get:\n      summary: Retrieve the Org Contact Types\n      description: Gets Contact Types of your organization.\n      operationId: getOrgContactTypes\n      parameters: []\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/OrgContactTypeObj'\n                type: array\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.orgs.read\n      tags:\n        - OrgSetting\n  /api/v1/org/contacts/{contactType}:\n    get:\n      summary: Retrieve the User of the Contact Type\n      description: Retrieves the URL of the User associated with the specified Contact Type.\n      operationId: getOrgContactUser\n      parameters:\n        - in: path\n          name: contactType\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrgContactUser'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.orgs.read\n      tags:\n        - OrgSetting\n    put:\n      summary: Replace the User of the Contact Type\n      description: Updates the User associated with the specified Contact Type.\n      operationId: updateOrgContactUser\n      parameters:\n        - in: path\n          name: contactType\n          required: true\n          schema:\n            type: string\n      x-codegen-request-body-name: orgContactUser\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/OrgContactUser'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrgContactUser'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.orgs.manage\n      tags:\n        - OrgSetting\n  /api/v1/org/email/bounces/remove-list:\n    post:\n      summary: Remove Emails from Email Provider Bounce List\n      description: A list of email addresses to be removed from the set of email addresses that are bounced.\n      operationId: bulkRemoveEmailAddressBounces\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BouncesRemoveListObj'\n            examples:\n              example-1:\n                value:\n                  emailAddresses:\n                    - name@company.com\n                    - unknown.email@okta.com\n                    - name@okta@com\n      responses:\n        '200':\n          description: Removes the provided list of emails from the set of email addresses that are bounced so that the provider resumes sending emails to those addresses.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BouncesRemoveListResult'\n              examples:\n                example-1:\n                  value:\n                    errors:\n                      - emailAddress: unknown.email@okta.com\n                        reason: This email address does not belong to any user in your organization.\n                      - emailAddress: name@okta@com\n                        reason: Invalid email address. The provided email address failed validation against RFC 3696.\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.orgs.manage\n      tags:\n        - OrgSetting\n  /api/v1/org/logo:\n    post:\n      summary: Upload the Org Logo\n      description: Updates the logo for your organization.\n      operationId: updateOrgLogo\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              description: The file must be in PNG, JPG, or GIF format and less than 100kB in size. For best results use landscape orientation, a transparent background, and a minimum size of 300px by 50px to prevent upscaling.\n              type: object\n              properties:\n                file:\n                  type: string\n                  format: binary\n              required:\n                - file\n        description: logo file\n      responses:\n        '201':\n          description: Created\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.apps.manage\n      tags:\n        - OrgSetting\n  /api/v1/org/preferences:\n    get:\n      summary: Retrieve the Org Preferences\n      description: Gets preferences of your organization.\n      operationId: getOrgPreferences\n      parameters: []\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrgPreferences'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.orgs.read\n      tags:\n        - OrgSetting\n  /api/v1/org/preferences/hideEndUserFooter:\n    post:\n      summary: Update the Preference to Hide the Okta Dashboard Footer\n      description: Hide the Okta UI footer for all end users of your organization.\n      operationId: hideOktaUIFooter\n      parameters: []\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrgPreferences'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.orgs.manage\n      tags:\n        - OrgSetting\n  /api/v1/org/preferences/showEndUserFooter:\n    post:\n      summary: Update the Preference to Show the Okta Dashboard Footer\n      description: Makes the Okta UI footer visible for all end users of your organization.\n      operationId: showOktaUIFooter\n      parameters: []\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrgPreferences'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.orgs.manage\n      tags:\n        - OrgSetting\n  /api/v1/org/privacy/oktaCommunication:\n    get:\n      summary: Retreive the Okta Communication Settings\n      description: Gets Okta Communication Settings of your organization.\n      operationId: getOktaCommunicationSettings\n      parameters: []\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrgOktaCommunicationSetting'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.orgs.read\n      tags:\n        - OrgSetting\n  /api/v1/org/privacy/oktaCommunication/optIn:\n    post:\n      summary: Opt in all Users to Okta Communication emails\n      description: Opts in all users of this org to Okta Communication emails.\n      operationId: optInUsersToOktaCommunicationEmails\n      parameters: []\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrgOktaCommunicationSetting'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.orgs.manage\n      tags:\n        - OrgSetting\n  /api/v1/org/privacy/oktaCommunication/optOut:\n    post:\n      summary: Opt out all Users from Okta Communication emails\n      description: Opts out all users of this org from Okta Communication emails.\n      operationId: optOutUsersFromOktaCommunicationEmails\n      parameters: []\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrgOktaCommunicationSetting'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.orgs.manage\n      tags:\n        - OrgSetting\n  /api/v1/org/privacy/oktaSupport:\n    get:\n      summary: Retrieve the Okta Support Settings\n      description: Gets Okta Support Settings of your organization.\n      operationId: getOrgOktaSupportSettings\n      parameters: []\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrgOktaSupportSettingsObj'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.orgs.read\n      tags:\n        - OrgSetting\n  /api/v1/org/privacy/oktaSupport/extend:\n    post:\n      summary: Extend Okta Support Access\n      description: Extends the length of time that Okta Support can access your org by 24 hours. This means that 24 hours are added to the remaining access time.\n      operationId: extendOktaSupport\n      parameters: []\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrgOktaSupportSettingsObj'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.orgs.manage\n      tags:\n        - OrgSetting\n  /api/v1/org/privacy/oktaSupport/grant:\n    post:\n      summary: Grant Okta Support Access to your Org\n      description: Enables you to temporarily allow Okta Support to access your org as an administrator for eight hours.\n      operationId: grantOktaSupport\n      parameters: []\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrgOktaSupportSettingsObj'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.orgs.manage\n      tags:\n        - OrgSetting\n  /api/v1/org/privacy/oktaSupport/revoke:\n    post:\n      summary: Revoke Okta Support Access\n      description: Revokes Okta Support access to your organization.\n      operationId: revokeOktaSupport\n      parameters: []\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrgOktaSupportSettingsObj'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.orgs.manage\n      tags:\n        - OrgSetting\n  /api/v1/policies:\n    get:\n      summary: List all Policies\n      description: Gets all policies with the specified type.\n      operationId: listPolicies\n      parameters:\n        - name: type\n          in: query\n          required: true\n          schema:\n            type: string\n        - name: status\n          in: query\n          schema:\n            type: string\n        - name: expand\n          in: query\n          schema:\n            type: string\n            default: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Policy'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.policies.read\n      tags:\n        - Policy\n    post:\n      summary: Create a Policy\n      description: Creates a policy.\n      operationId: createPolicy\n      parameters:\n        - name: activate\n          in: query\n          schema:\n            type: boolean\n            default: true\n      x-codegen-request-body-name: policy\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Policy'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Policy'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.policies.manage\n      tags:\n        - Policy\n  /api/v1/policies/{policyId}:\n    get:\n      summary: Retrieve a Policy\n      description: Gets a policy.\n      operationId: getPolicy\n      parameters:\n        - name: policyId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: expand\n          in: query\n          schema:\n            type: string\n            default: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Policy'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.policies.read\n      tags:\n        - Policy\n    put:\n      summary: Replace a Policy\n      description: Updates a policy.\n      operationId: updatePolicy\n      parameters:\n        - name: policyId\n          in: path\n          required: true\n          schema:\n            type: string\n      x-codegen-request-body-name: policy\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Policy'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Policy'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.policies.manage\n      tags:\n        - Policy\n    delete:\n      summary: Delete a Policy\n      description: Removes a policy.\n      operationId: deletePolicy\n      parameters:\n        - name: policyId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.policies.manage\n      tags:\n        - Policy\n  /api/v1/policies/{policyId}/clone:\n    post:\n      summary: Clone an existing policy\n      description: Clones an existing policy.\n      operationId: clonePolicy\n      parameters:\n        - name: policyId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Policy'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.policies.manage\n      tags:\n        - Policy\n  /api/v1/policies/{policyId}/lifecycle/activate:\n    post:\n      summary: Activate a Policy\n      description: Activates a policy.\n      operationId: activatePolicy\n      parameters:\n        - name: policyId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.policies.manage\n      tags:\n        - Policy\n  /api/v1/policies/{policyId}/lifecycle/deactivate:\n    post:\n      summary: Deactivate a Policy\n      description: Deactivates a policy.\n      operationId: deactivatePolicy\n      parameters:\n        - name: policyId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.policies.manage\n      tags:\n        - Policy\n  /api/v1/policies/{policyId}/rules:\n    get:\n      summary: List all Policy Rules\n      description: Enumerates all policy rules.\n      operationId: listPolicyRules\n      parameters:\n        - name: policyId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/PolicyRule'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.policies.read\n      tags:\n        - Policy\n    post:\n      summary: Create a Policy Rule\n      description: Creates a policy rule.\n      operationId: createPolicyRule\n      parameters:\n        - name: policyId\n          in: path\n          required: true\n          schema:\n            type: string\n      x-codegen-request-body-name: policyRule\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PolicyRule'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PolicyRule'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.policies.manage\n      tags:\n        - Policy\n  /api/v1/policies/{policyId}/rules/{ruleId}:\n    get:\n      summary: Retrieve a Policy Rule\n      description: Gets a policy rule.\n      operationId: getPolicyRule\n      parameters:\n        - name: policyId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: ruleId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PolicyRule'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.policies.read\n      tags:\n        - Policy\n    put:\n      summary: Replace a Policy Rule\n      description: Updates a policy rule.\n      operationId: updatePolicyRule\n      parameters:\n        - name: policyId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: ruleId\n          in: path\n          required: true\n          schema:\n            type: string\n      x-codegen-request-body-name: policyRule\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PolicyRule'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PolicyRule'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.policies.manage\n      tags:\n        - Policy\n    delete:\n      summary: Delete a Policy Rule\n      description: Removes a policy rule.\n      operationId: deletePolicyRule\n      parameters:\n        - name: policyId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: ruleId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.policies.manage\n      tags:\n        - Policy\n  /api/v1/policies/{policyId}/rules/{ruleId}/lifecycle/activate:\n    post:\n      summary: Activate a Policy Rule\n      description: Activates a policy rule.\n      operationId: activatePolicyRule\n      parameters:\n        - name: policyId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: ruleId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.policies.manage\n      tags:\n        - Policy\n  /api/v1/policies/{policyId}/rules/{ruleId}/lifecycle/deactivate:\n    post:\n      summary: Deactivate a Policy Rule\n      description: Deactivates a policy rule.\n      operationId: deactivatePolicyRule\n      parameters:\n        - name: policyId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: ruleId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.policies.manage\n      tags:\n        - Policy\n  /api/v1/principal-rate-limits:\n    get:\n      summary: List all Principal Rate Limits\n      description: Lists all Principal Rate Limit entities considering the provided parameters.\n      operationId: listPrincipalRateLimitEntities\n      parameters:\n        - name: filter\n          in: query\n          schema:\n            type: string\n        - name: after\n          in: query\n          schema:\n            type: string\n        - name: limit\n          in: query\n          schema:\n            type: integer\n            format: int32\n            default: 20\n            maximum: 50\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/PrincipalRateLimitEntity'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.principalRateLimits.read\n      tags:\n        - PrincipalRateLimit\n    post:\n      summary: Create a Principal Rate Limit\n      description: Adds a new Principal Rate Limit entity to your organization. In the current release, we only allow one Principal Rate Limit entity per org and principal.\n      operationId: createPrincipalRateLimitEntity\n      x-codegen-request-body-name: entity\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PrincipalRateLimitEntity'\n            examples:\n              SSWSToken:\n                $ref: '#/components/examples/PrincipalRateLimitEntityRequestSSWSToken'\n              EmptyPercentages:\n                $ref: '#/components/examples/PrincipalRateLimitEntityRequestEmptyPercentages'\n        required: true\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PrincipalRateLimitEntity'\n              examples:\n                SSWSToken:\n                  $ref: '#/components/examples/PrincipalRateLimitEntityResponseSSWSToken'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.principalRateLimits.manage\n      tags:\n        - PrincipalRateLimit\n  /api/v1/principal-rate-limits/{principalRateLimitId}:\n    parameters:\n      - $ref: '#/components/parameters/pathPrincipalRateLimitId'\n    get:\n      summary: Retrieve a Principal Rate Limit\n      description: Fetches a Principal Rate Limit entity by `principalRateLimitId`.\n      operationId: getPrincipalRateLimitEntity\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PrincipalRateLimitEntity'\n              examples:\n                SSWSToken:\n                  $ref: '#/components/examples/PrincipalRateLimitEntityResponseSSWSToken'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.principalRateLimits.read\n      tags:\n        - PrincipalRateLimit\n    put:\n      summary: Replace a Principal Rate Limit\n      description: Update a  Principal Rate Limit entity by `principalRateLimitId`.\n      operationId: updatePrincipalRateLimitEntity\n      x-codegen-request-body-name: entity\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PrincipalRateLimitEntity'\n            examples:\n              SSWSToken:\n                $ref: '#/components/examples/PrincipalRateLimitEntityRequestSSWSToken'\n              EmptyPercentages:\n                $ref: '#/components/examples/PrincipalRateLimitEntityRequestEmptyPercentages'\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PrincipalRateLimitEntity'\n              examples:\n                SSWSToken:\n                  $ref: '#/components/examples/PrincipalRateLimitEntityResponseSSWSToken'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.principalRateLimits.manage\n      tags:\n        - PrincipalRateLimit\n  /api/v1/push-providers:\n    get:\n      summary: List all Push Providers\n      description: Enumerates push providers in your organization.\n      operationId: listPushProviders\n      parameters:\n        - name: type\n          in: query\n          description: Filters push providers by `providerType`\n          schema:\n            $ref: '#/components/schemas/ProviderType'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/PushProvider'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.pushProviders.read\n      tags:\n        - PushProvider\n    post:\n      summary: Create a Push Provider\n      description: Adds a new push provider to your organization.\n      operationId: createPushProvider\n      x-codegen-request-body-name: pushProvider\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PushProvider'\n            examples:\n              APNs:\n                $ref: '#/components/examples/PushProviderAPNsRequest'\n              FCM:\n                $ref: '#/components/examples/PushProviderFCMRequest'\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PushProvider'\n              examples:\n                APNs:\n                  $ref: '#/components/examples/PushProviderAPNsResponse'\n                FCM:\n                  $ref: '#/components/examples/PushProviderFCMResponse'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.pushProviders.manage\n      tags:\n        - PushProvider\n  /api/v1/push-providers/{pushProviderId}:\n    get:\n      summary: Retrieve a Push Provider\n      description: Fetches a push provider by `pushProviderId`.\n      operationId: getPushProvider\n      parameters:\n        - $ref: '#/components/parameters/pathPushProviderId'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PushProvider'\n              examples:\n                APNs:\n                  $ref: '#/components/examples/PushProviderAPNsResponse'\n                FCM:\n                  $ref: '#/components/examples/PushProviderFCMResponse'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.pushProviders.read\n      tags:\n        - PushProvider\n    put:\n      summary: Replace a Push Provider\n      description: Updates a push provider by `pushProviderId`.\n      operationId: updatePushProvider\n      parameters:\n        - $ref: '#/components/parameters/pathPushProviderId'\n      x-codegen-request-body-name: pushProvider\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PushProvider'\n            examples:\n              APNs:\n                $ref: '#/components/examples/PushProviderAPNsRequest'\n              FCM:\n                $ref: '#/components/examples/PushProviderFCMRequest'\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PushProvider'\n              examples:\n                APNs:\n                  $ref: '#/components/examples/PushProviderAPNsResponse'\n                FCM:\n                  $ref: '#/components/examples/PushProviderFCMResponse'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.pushProviders.manage\n      tags:\n        - PushProvider\n    delete:\n      summary: Delete a Push Provider\n      description: Delete a push provider by `pushProviderId`. If the push provider is currently being used in the org by a custom authenticator, the delete will not be allowed.\n      operationId: deletePushProvider\n      parameters:\n        - $ref: '#/components/parameters/pathPushProviderId'\n      responses:\n        '204':\n          description: No Content\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '409':\n          description: Conflict\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              examples:\n                Cannot remove push provider in use by a custom app authenticator:\n                  $ref: '#/components/examples/ErrorPushProviderUsedByCustomAppAuthenticator'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.pushProviders.manage\n      tags:\n        - PushProvider\n  /api/v1/rate-limit-settings/admin-notifications:\n    get:\n      summary: Retrieve the Rate Limit Admin Notification Settings\n      description: Retrieves the currently configured Rate Limit Admin Notification Settings\n      operationId: getRateLimitSettingsAdminNotifications\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RateLimitAdminNotifications'\n              examples:\n                Enabled:\n                  $ref: '#/components/examples/RateLimitAdminNotificationsEnabled'\n                Disabled:\n                  $ref: '#/components/examples/RateLimitAdminNotificationsDisabled'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.rateLimits.read\n      tags:\n        - RateLimitSettings\n    put:\n      summary: Replace the Rate Limit Admin Notification Settings\n      description: Replaces the Rate Limit Admin Notification Settings and returns the configured properties\n      operationId: replaceRateLimitSettingsAdminNotifications\n      x-codegen-request-body-name: RateLimitAdminNotifications\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RateLimitAdminNotifications'\n            examples:\n              Enabled:\n                $ref: '#/components/examples/RateLimitAdminNotificationsEnabled'\n              Disabled:\n                $ref: '#/components/examples/RateLimitAdminNotificationsDisabled'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RateLimitAdminNotifications'\n              examples:\n                Enabled:\n                  $ref: '#/components/examples/RateLimitAdminNotificationsEnabled'\n                Disabled:\n                  $ref: '#/components/examples/RateLimitAdminNotificationsDisabled'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.rateLimits.manage\n      tags:\n        - RateLimitSettings\n  /api/v1/rate-limit-settings/per-client:\n    get:\n      summary: Retrieve the Per-Client Rate Limit Settings\n      description: Retrieves the currently configured Per-Client Rate Limit Settings\n      operationId: getRateLimitSettingsPerClient\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PerClientRateLimitSettings'\n              examples:\n                EnforceDefault:\n                  $ref: '#/components/examples/PerClientRateLimitSettingsEnforceDefault'\n                EnforceDefaultWithOverrides:\n                  $ref: '#/components/examples/PerClientRateLimitSettingsEnforceDefaultWithOverrides'\n                PreviewDefaultWithOverrides:\n                  $ref: '#/components/examples/PerClientRateLimitSettingsPreviewDefaultWithOverrides'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.rateLimits.read\n      tags:\n        - RateLimitSettings\n    put:\n      summary: Replace the Per-Client Rate Limit Settings\n      description: Replaces the Per-Client Rate Limit Settings and returns the configured properties\n      operationId: replaceRateLimitSettingsPerClient\n      x-codegen-request-body-name: perClientRateLimitSettings\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PerClientRateLimitSettings'\n            examples:\n              EnforceDefault:\n                $ref: '#/components/examples/PerClientRateLimitSettingsEnforceDefault'\n              EnforceDefaultWithOverrides:\n                $ref: '#/components/examples/PerClientRateLimitSettingsEnforceDefaultWithOverrides'\n              PreviewDefaultWithOverrides:\n                $ref: '#/components/examples/PerClientRateLimitSettingsPreviewDefaultWithOverrides'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PerClientRateLimitSettings'\n              examples:\n                EnforceDefault:\n                  $ref: '#/components/examples/PerClientRateLimitSettingsEnforceDefault'\n                EnforceDefaultWithOverrides:\n                  $ref: '#/components/examples/PerClientRateLimitSettingsEnforceDefaultWithOverrides'\n                PreviewDefaultWithOverrides:\n                  $ref: '#/components/examples/PerClientRateLimitSettingsPreviewDefaultWithOverrides'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.rateLimits.manage\n      tags:\n        - RateLimitSettings\n  /api/v1/risk/events/ip:\n    post:\n      summary: Send multiple Risk Events\n      description: A Risk Provider can send Risk Events to Okta using this API. This API has a rate limit of 30 requests per minute. The caller should include multiple Risk Events (up to a maximum of 20 events) in a single payload to reduce the number of API calls. If a client has more risk signals to send than what the API supports, we recommend prioritizing posting high risk signals.\n      operationId: sendRiskEvents\n      x-codegen-request-body-name: instance\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/RiskEvent'\n            examples:\n              Example Request:\n                $ref: '#/components/examples/RiskEventsRequest'\n        required: true\n      responses:\n        '202':\n          description: Accepted\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              examples:\n                Access Denied:\n                  $ref: '#/components/examples/ErrorAccessDenied'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.riskEvents.manage\n      tags:\n        - RiskEvent\n  /api/v1/risk/providers:\n    get:\n      summary: List all Risk Providers\n      description: Lists all Risk Providers\n      operationId: listRiskProviders\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/RiskProvider'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.riskProviders.read\n      tags:\n        - RiskProvider\n    post:\n      summary: Create a Risk Provider\n      description: Creates a risk provider. A maximum of 3 providers can be created. By default, one risk provider is created by Okta.\n      operationId: createRiskProvider\n      x-codegen-request-body-name: instance\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RiskProvider'\n            examples:\n              Request Example:\n                $ref: '#/components/examples/RiskProviderRequest'\n        required: true\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RiskProvider'\n              examples:\n                Example Response:\n                  $ref: '#/components/examples/RiskProviderResponse'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              examples:\n                Access Denied:\n                  $ref: '#/components/examples/ErrorAccessDenied'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.riskProviders.manage\n      tags:\n        - RiskProvider\n  /api/v1/risk/providers/{riskProviderId}:\n    parameters:\n      - $ref: '#/components/parameters/pathRiskProviderId'\n    get:\n      summary: Retrieve a Risk Provider\n      description: Retrieves a risk provider by `riskProviderId`.\n      operationId: getRiskProvider\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RiskProvider'\n              examples:\n                Example Response:\n                  $ref: '#/components/examples/RiskProviderResponse'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.riskProviders.read\n      tags:\n        - RiskProvider\n    put:\n      summary: Replace a Risk Provider\n      description: Replaces a risk provider by `riskProviderId`.\n      operationId: updateRiskProvider\n      x-codegen-request-body-name: instance\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RiskProvider'\n            examples:\n              Request Example:\n                $ref: '#/components/examples/RiskProviderRequest'\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RiskProvider'\n              examples:\n                Example Response:\n                  $ref: '#/components/examples/RiskProviderResponse'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.riskProviders.manage\n      tags:\n        - RiskProvider\n    delete:\n      summary: Delete a Risk Provider\n      description: Delete a CAPTCHA instance by `riskProviderId`.\n      operationId: deleteRiskProvider\n      responses:\n        '204':\n          description: No Content\n        '403':\n          description: Forbidden\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              examples:\n                Access Denied:\n                  $ref: '#/components/examples/ErrorAccessDenied'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.riskProviders.manage\n      tags:\n        - RiskProvider\n  /api/v1/roles/{roleTypeOrRoleId}/subscriptions:\n    get:\n      summary: List all Subscriptions of a Custom Role\n      description: When roleType List all subscriptions of a Role. Else when roleId List subscriptions of a Custom Role\n      operationId: listRoleSubscriptions\n      parameters:\n        - in: path\n          name: roleTypeOrRoleId\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Subscription'\n                type: array\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          description: Not Found\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.roles.read\n      tags:\n        - Subscription\n  /api/v1/roles/{roleTypeOrRoleId}/subscriptions/{notificationType}:\n    get:\n      summary: List all Subscriptions of a Custom Role with a specific notification type\n      description: When roleType Get subscriptions of a Role with a specific notification type. Else when roleId Get subscription of a Custom Role with a specific notification type.\n      operationId: getRoleSubscriptionByNotificationType\n      parameters:\n        - in: path\n          name: roleTypeOrRoleId\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: notificationType\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Subscription'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          description: Not Found\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.roles.read\n      tags:\n        - Subscription\n  /api/v1/roles/{roleTypeOrRoleId}/subscriptions/{notificationType}/subscribe:\n    post:\n      summary: Subscribe a Custom Role to a specific notification type\n      description: When roleType Subscribes a Role to a specific notification type. When you change the subscription status of a Role, it overrides the subscription of any individual user of that Role. Else when roleId Subscribes a Custom Role to a specific notification type. When you change the subscription status of a Custom Role, it overrides the subscription of any individual user of that Custom Role.\n      operationId: subscribeRoleSubscriptionByNotificationType\n      parameters:\n        - in: path\n          name: roleTypeOrRoleId\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: notificationType\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          description: Not Found\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.roles.manage\n      tags:\n        - Subscription\n  /api/v1/roles/{roleTypeOrRoleId}/subscriptions/{notificationType}/unsubscribe:\n    post:\n      summary: Unsubscribe a Custom Role from a specific notification type\n      description: When roleType Unsubscribes a Role from a specific notification type. When you change the subscription status of a Role, it overrides the subscription of any individual user of that Role. Else when roleId Unsubscribes a Custom Role from a specific notification type. When you change the subscription status of a Custom Role, it overrides the subscription of any individual user of that Custom Role.\n      operationId: unsubscribeRoleSubscriptionByNotificationType\n      parameters:\n        - in: path\n          name: roleTypeOrRoleId\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: notificationType\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          description: Not Found\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.roles.manage\n      tags:\n        - Subscription\n  /api/v1/sessions:\n    post:\n      summary: Create a Session with Session Token\n      description: Creates a new session for a user with a valid session token. Use this API if, for example, you want to set the session cookie yourself instead of allowing Okta to set it, or want to hold the session ID in order to delete a session via the API instead of visiting the logout URL.\n      operationId: createSession\n      x-codegen-request-body-name: createSessionRequest\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateSessionRequest'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Session'\n        '400':\n          description: Bad Request\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n      tags:\n        - Session\n  /api/v1/sessions/{sessionId}:\n    get:\n      summary: Retrieve a Session\n      description: Get details about a session.\n      operationId: getSession\n      parameters:\n        - name: sessionId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Session'\n        '400':\n          description: Bad Request\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          description: Not Found\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.sessions.read\n      tags:\n        - Session\n    delete:\n      summary: Delete a Session\n      description: End a session.\n      operationId: endSession\n      parameters:\n        - name: sessionId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.sessions.manage\n      tags:\n        - Session\n  /api/v1/sessions/{sessionId}/lifecycle/refresh:\n    post:\n      summary: Refresh a Session\n      description: Refresh a session.\n      operationId: refreshSession\n      parameters:\n        - name: sessionId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Session'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          description: Not Found\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.sessions.manage\n      tags:\n        - Session\n  /api/v1/templates/sms:\n    get:\n      summary: List all SMS Templates\n      description: Enumerates custom SMS templates in your organization. A subset of templates can be returned that match a template type.\n      operationId: listSmsTemplates\n      parameters:\n        - name: templateType\n          in: query\n          schema:\n            $ref: '#/components/schemas/SmsTemplateType'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/SmsTemplate'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.templates.read\n      tags:\n        - Template\n    post:\n      summary: Create an SMS Template\n      description: Adds a new custom SMS template to your organization.\n      operationId: createSmsTemplate\n      x-codegen-request-body-name: smsTemplate\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SmsTemplate'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SmsTemplate'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.templates.manage\n      tags:\n        - Template\n  /api/v1/templates/sms/{templateId}:\n    get:\n      summary: Retrieve an SMS Template\n      description: Fetches a specific template by `id`\n      operationId: getSmsTemplate\n      parameters:\n        - name: templateId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SmsTemplate'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.templates.read\n      tags:\n        - Template\n    post:\n      summary: Update an SMS Template\n      description: 'Updates only some of the SMS template properties:'\n      operationId: partialUpdateSmsTemplate\n      parameters:\n        - name: templateId\n          in: path\n          required: true\n          schema:\n            type: string\n      x-codegen-request-body-name: smsTemplate\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SmsTemplate'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SmsTemplate'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.templates.manage\n      tags:\n        - Template\n    put:\n      summary: Replace an SMS Template\n      description: Updates the SMS template.\n      operationId: updateSmsTemplate\n      parameters:\n        - name: templateId\n          in: path\n          required: true\n          schema:\n            type: string\n      x-codegen-request-body-name: smsTemplate\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SmsTemplate'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SmsTemplate'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.templates.manage\n      tags:\n        - Template\n    delete:\n      summary: Delete an SMS Template\n      description: Removes an SMS template.\n      operationId: deleteSmsTemplate\n      parameters:\n        - name: templateId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.templates.manage\n      tags:\n        - Template\n  /api/v1/threats/configuration:\n    get:\n      summary: Retrieve the ThreatInsight Configuration\n      description: Gets current ThreatInsight configuration\n      operationId: getCurrentConfiguration\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThreatInsightConfiguration'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.threatInsights.read\n      tags:\n        - ThreatInsight\n    post:\n      summary: Update the ThreatInsight Configuration\n      description: Updates ThreatInsight configuration\n      operationId: updateConfiguration\n      x-codegen-request-body-name: threatInsightConfiguration\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ThreatInsightConfiguration'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThreatInsightConfiguration'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.threatInsights.manage\n      tags:\n        - ThreatInsight\n  /api/v1/trustedOrigins:\n    get:\n      summary: List all Trusted Origins\n      description: List all trusted origins\n      operationId: listOrigins\n      parameters:\n        - name: q\n          in: query\n          schema:\n            type: string\n        - name: filter\n          in: query\n          schema:\n            type: string\n        - name: after\n          in: query\n          schema:\n            type: string\n        - name: limit\n          in: query\n          schema:\n            type: integer\n            format: int32\n            default: -1\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/TrustedOrigin'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.trustedOrigins.read\n      tags:\n        - TrustedOrigin\n    post:\n      summary: Create a Trusted Origin\n      description: Create a trusted origin\n      operationId: createOrigin\n      x-codegen-request-body-name: trustedOrigin\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TrustedOrigin'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TrustedOrigin'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.trustedOrigins.manage\n      tags:\n        - TrustedOrigin\n  /api/v1/trustedOrigins/{trustedOriginId}:\n    get:\n      summary: Retrieve a Trusted Origin\n      description: Retrieve a trusted origin\n      operationId: getOrigin\n      parameters:\n        - name: trustedOriginId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TrustedOrigin'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.trustedOrigins.read\n      tags:\n        - TrustedOrigin\n    put:\n      summary: Replace a Trusted Origin\n      description: Replace a trusted origin\n      operationId: updateOrigin\n      parameters:\n        - name: trustedOriginId\n          in: path\n          required: true\n          schema:\n            type: string\n      x-codegen-request-body-name: trustedOrigin\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TrustedOrigin'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TrustedOrigin'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.trustedOrigins.manage\n      tags:\n        - TrustedOrigin\n    delete:\n      summary: Delete a Trusted Origin\n      description: Delete a trusted origin\n      operationId: deleteOrigin\n      parameters:\n        - name: trustedOriginId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Success\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.trustedOrigins.manage\n      tags:\n        - TrustedOrigin\n  /api/v1/trustedOrigins/{trustedOriginId}/lifecycle/activate:\n    post:\n      summary: Activate a Trusted Origin\n      description: Activate a trusted origin\n      operationId: activateOrigin\n      parameters:\n        - name: trustedOriginId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TrustedOrigin'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.trustedOrigins.manage\n      tags:\n        - TrustedOrigin\n  /api/v1/trustedOrigins/{trustedOriginId}/lifecycle/deactivate:\n    post:\n      summary: Deactivate a Trusted Origin\n      description: Deactivate a trusted origin\n      operationId: deactivateOrigin\n      parameters:\n        - name: trustedOriginId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TrustedOrigin'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.trustedOrigins.manage\n      tags:\n        - TrustedOrigin\n  /api/v1/users:\n    get:\n      summary: List all Users\n      description: Lists users in your organization with pagination in most cases.  A subset of users can be returned that match a supported filter expression or search criteria.\n      operationId: listUsers\n      parameters:\n        - name: q\n          in: query\n          description: Finds a user that matches firstName, lastName, and email properties\n          schema:\n            type: string\n        - $ref: '#/components/parameters/queryAfter'\n        - name: limit\n          in: query\n          description: Specifies the number of results returned. Defaults to 10 if `q` is provided.\n          schema:\n            type: integer\n            format: int32\n            default: 200\n        - name: filter\n          in: query\n          description: Filters users with a supported expression for a subset of properties\n          schema:\n            type: string\n        - name: search\n          in: query\n          description: Searches for users with a supported filtering expression for most properties. Okta recommends using this parameter for search for best performance.\n          schema:\n            type: string\n        - name: sortBy\n          in: query\n          schema:\n            type: string\n        - name: sortOrder\n          in: query\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/User'\n              examples:\n                User List:\n                  $ref: '#/components/examples/ListUsersResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.users.read\n      tags:\n        - User\n    post:\n      summary: Create a User\n      description: Creates a new user in your Okta organization with or without credentials.\n      operationId: createUser\n      parameters:\n        - name: activate\n          in: query\n          description: Executes activation lifecycle operation when creating the user\n          schema:\n            type: boolean\n            default: true\n        - name: provider\n          in: query\n          description: Indicates whether to create a user with a specified authentication provider\n          schema:\n            type: boolean\n            default: false\n        - name: nextLogin\n          in: query\n          description: With activate=true, set nextLogin to \"changePassword\" to have the password be EXPIRED, so user must change it the next time they log in.\n          schema:\n            $ref: '#/components/schemas/UserNextLogin'\n          x-okta-added-version: 0.14.0\n      x-codegen-request-body-name: body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateUserRequest'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              examples:\n                Create user with too many groups specified:\n                  $ref: '#/components/examples/ErrorCreateUserWithTooManyManyGroupsResponse'\n                Create user with expired password and activate set to `false`:\n                  $ref: '#/components/examples/ErrorCreateUserWithExpiredPasswordWithoutActivation'\n                Create user with expired password and `null` password:\n                  $ref: '#/components/examples/ErrorCreateUserWithExpiredPasswordWithNullPassword'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.users.manage\n      tags:\n        - User\n  /api/v1/users/{associatedUserId}/linkedObjects/{primaryRelationshipName}/{primaryUserId}:\n    put:\n      summary: Create a Linked Object for two User\n      description: Sets a linked object for two users.\n      operationId: setLinkedObjectForUser\n      parameters:\n        - name: associatedUserId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: primaryRelationshipName\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: primaryUserId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Success\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - oauth2:\n            - okta.users.manage\n      tags:\n        - User\n  /api/v1/users/{userId}:\n    get:\n      summary: Retrieve a User\n      description: Fetches a user from your Okta organization.\n      operationId: getUser\n      parameters:\n        - $ref: '#/components/parameters/pathUserId'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.users.read\n      tags:\n        - User\n    post:\n      summary: Update a User\n      description: Fetch a user by `id`, `login`, or `login shortname` if the short name is unambiguous.\n      operationId: partialUpdateUser\n      parameters:\n        - $ref: '#/components/parameters/pathUserId'\n        - name: strict\n          in: query\n          schema:\n            type: boolean\n      x-codegen-request-body-name: user\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateUserRequest'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.users.manage\n      tags:\n        - User\n    put:\n      summary: Replace a User\n      description: Update a user's profile and/or credentials using strict-update semantics.\n      operationId: updateUser\n      parameters:\n        - $ref: '#/components/parameters/pathUserId'\n        - name: strict\n          in: query\n          schema:\n            type: boolean\n          x-okta-added-version: 1.10.0\n      x-codegen-request-body-name: user\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateUserRequest'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.users.manage\n      tags:\n        - User\n    delete:\n      summary: Delete a User\n      description: Deletes a user permanently.  This operation can only be performed on users that have a `DEPROVISIONED` status.  **This action cannot be recovered!**\n      operationId: deactivateOrDeleteUser\n      parameters:\n        - $ref: '#/components/parameters/pathUserId'\n        - name: sendEmail\n          in: query\n          schema:\n            type: boolean\n            default: false\n          x-okta-added-version: 1.5.0\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.users.manage\n      tags:\n        - User\n  /api/v1/users/{userId}/appLinks:\n    get:\n      summary: List all Assigned Application Links\n      description: Fetches appLinks for all direct or indirect (via group membership) assigned applications.\n      operationId: listAppLinks\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/AppLink'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.users.read\n      tags:\n        - User\n  /api/v1/users/{userId}/clients:\n    get:\n      summary: List all Clients\n      description: Lists all client resources for which the specified user has grants or tokens.\n      operationId: listUserClients\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/OAuth2Client'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.users.read\n      tags:\n        - User\n  /api/v1/users/{userId}/clients/{clientId}/grants:\n    get:\n      summary: List all Grants for a Client\n      description: Lists all grants for a specified user and client\n      operationId: listGrantsForUserAndClient\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: clientId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: expand\n          in: query\n          schema:\n            type: string\n        - name: after\n          in: query\n          schema:\n            type: string\n        - name: limit\n          in: query\n          schema:\n            type: integer\n            format: int32\n            default: 20\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/OAuth2ScopeConsentGrant'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.users.read\n      tags:\n        - User\n    delete:\n      summary: Revoke all Grants for a Client\n      description: Revokes all grants for the specified user and client\n      operationId: revokeGrantsForUserAndClient\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: clientId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.users.manage\n      tags:\n        - User\n  /api/v1/users/{userId}/clients/{clientId}/tokens:\n    get:\n      summary: List all Refresh Tokens for a Client\n      description: Lists all refresh tokens issued for the specified User and Client.\n      operationId: listRefreshTokensForUserAndClient\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: clientId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: expand\n          in: query\n          schema:\n            type: string\n        - name: after\n          in: query\n          schema:\n            type: string\n        - name: limit\n          in: query\n          schema:\n            type: integer\n            format: int32\n            default: 20\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/OAuth2RefreshToken'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.users.read\n      tags:\n        - User\n    delete:\n      summary: Revoke all Refresh Tokens for a Client\n      description: Revokes all refresh tokens issued for the specified User and Client.\n      operationId: revokeTokensForUserAndClient\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: clientId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.users.manage\n      tags:\n        - User\n  /api/v1/users/{userId}/clients/{clientId}/tokens/{tokenId}:\n    get:\n      summary: Retrieve a Refresh Token for a Client\n      description: Gets a refresh token issued for the specified User and Client.\n      operationId: getRefreshTokenForUserAndClient\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: clientId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: tokenId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: expand\n          in: query\n          schema:\n            type: string\n        - name: limit\n          in: query\n          schema:\n            type: integer\n            default: 20\n        - name: after\n          in: query\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OAuth2RefreshToken'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.users.read\n      tags:\n        - User\n    delete:\n      summary: Revoke a Token for a Client\n      description: Revokes the specified refresh token.\n      operationId: revokeTokenForUserAndClient\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: clientId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: tokenId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.users.manage\n      tags:\n        - User\n  /api/v1/users/{userId}/credentials/change_password:\n    post:\n      summary: Change Password\n      description: Changes a user's password by validating the user's current password. This operation can only be performed on users in `STAGED`, `ACTIVE`, `PASSWORD_EXPIRED`, or `RECOVERY` status that have a valid password credential\n      operationId: changePassword\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: strict\n          in: query\n          schema:\n            type: boolean\n          x-okta-added-version: 1.10.0\n      x-codegen-request-body-name: changePasswordRequest\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ChangePasswordRequest'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserCredentials'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.users.manage\n      tags:\n        - User\n  /api/v1/users/{userId}/credentials/change_recovery_question:\n    post:\n      summary: Change Recovery Question\n      description: Changes a user's recovery question \u0026 answer credential by validating the user's current password.  This operation can only be performed on users in **STAGED**, **ACTIVE** or **RECOVERY** `status` that have a valid password credential\n      operationId: changeRecoveryQuestion\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n      x-codegen-request-body-name: userCredentials\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserCredentials'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserCredentials'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.users.manage\n      tags:\n        - User\n  /api/v1/users/{userId}/credentials/forgot_password:\n    post:\n      summary: Initiate Forgot Password\n      description: Initiate forgot password flow. Generates a one-time token (OTT) that can be used to reset a user's password.\n      operationId: forgotPassword\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: sendEmail\n          in: query\n          required: false\n          schema:\n            type: boolean\n            default: true\n      responses:\n        '200':\n          description: Reset url\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForgotPasswordResponse'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.users.manage\n      tags:\n        - User\n  /api/v1/users/{userId}/credentials/forgot_password_recovery_question:\n    post:\n      summary: Reset Password with Recovery Question\n      description: Resets the user's password to the specified password if the provided answer to the recovery question is correct.\n      operationId: forgotPasswordSetNewPassword\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: sendEmail\n          in: query\n          required: false\n          schema:\n            type: boolean\n            default: true\n      x-codegen-request-body-name: userCredentials\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserCredentials'\n        required: true\n      responses:\n        '200':\n          description: Credentials\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserCredentials'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.users.manage\n      tags:\n        - User\n  /api/v1/users/{userId}/factors:\n    get:\n      summary: List all Factors\n      description: Enumerates all the enrolled factors for the specified user\n      operationId: listFactors\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UserFactor'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.users.read\n      tags:\n        - UserFactor\n    post:\n      summary: Enroll a Factor\n      description: Enrolls a user with a supported factor.\n      operationId: enrollFactor\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: updatePhone\n          in: query\n          schema:\n            type: boolean\n            default: false\n        - name: templateId\n          in: query\n          description: id of SMS template (only for SMS factor)\n          schema:\n            type: string\n        - name: tokenLifetimeSeconds\n          in: query\n          schema:\n            type: integer\n            format: int32\n            default: 300\n          x-okta-added-version: 1.3.0\n        - name: activate\n          in: query\n          schema:\n            type: boolean\n            default: false\n          x-okta-added-version: 1.3.0\n      x-codegen-request-body-name: body\n      requestBody:\n        description: Factor\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserFactor'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserFactor'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.users.manage\n      tags:\n        - UserFactor\n  /api/v1/users/{userId}/factors/catalog:\n    get:\n      summary: List all Supported Factors\n      description: Enumerates all the supported factors that can be enrolled for the specified user\n      operationId: listSupportedFactors\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UserFactor'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.users.read\n      tags:\n        - UserFactor\n  /api/v1/users/{userId}/factors/questions:\n    get:\n      summary: List all Supported Security Questions\n      description: Enumerates all available security questions for a user's `question` factor\n      operationId: listSupportedSecurityQuestions\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/SecurityQuestion'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n      tags:\n        - UserFactor\n  /api/v1/users/{userId}/factors/{factorId}:\n    get:\n      summary: Retrieve a Factor\n      description: Fetches a factor for the specified user\n      operationId: getFactor\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: factorId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserFactor'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.users.read\n      tags:\n        - UserFactor\n    delete:\n      summary: Delete a Factor\n      description: Unenrolls an existing factor for the specified user, allowing the user to enroll a new factor.\n      operationId: deleteFactor\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: factorId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: removeEnrollmentRecovery\n          in: query\n          schema:\n            type: boolean\n            default: false\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.users.manage\n      tags:\n        - UserFactor\n  /api/v1/users/{userId}/factors/{factorId}/lifecycle/activate:\n    post:\n      summary: Activate a Factor\n      description: The `sms` and `token:software:totp` factor types require activation to complete the enrollment process.\n      operationId: activateFactor\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: factorId\n          in: path\n          required: true\n          schema:\n            type: string\n      x-codegen-request-body-name: body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ActivateFactorRequest'\n        required: false\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserFactor'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.users.manage\n      tags:\n        - UserFactor\n  /api/v1/users/{userId}/factors/{factorId}/transactions/{transactionId}:\n    get:\n      summary: Retrieve a Factor Transaction Status\n      description: Polls factors verification transaction for status.\n      operationId: getFactorTransactionStatus\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: factorId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: transactionId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VerifyUserFactorResponse'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.users.read\n      tags:\n        - UserFactor\n  /api/v1/users/{userId}/factors/{factorId}/verify:\n    post:\n      summary: Verify an MFA Factor\n      description: Verifies an OTP for a `token` or `token:hardware` factor\n      operationId: verifyFactor\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: factorId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: templateId\n          in: query\n          schema:\n            type: string\n        - name: tokenLifetimeSeconds\n          in: query\n          schema:\n            type: integer\n            format: int32\n            default: 300\n          x-okta-added-version: 1.3.0\n        - name: X-Forwarded-For\n          in: header\n          schema:\n            type: string\n          x-okta-added-version: 1.11.0\n        - name: User-Agent\n          in: header\n          schema:\n            type: string\n          x-okta-added-version: 1.11.0\n        - name: Accept-Language\n          in: header\n          schema:\n            type: string\n      x-codegen-request-body-name: body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/VerifyFactorRequest'\n        required: false\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VerifyUserFactorResponse'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.users.manage\n      tags:\n        - UserFactor\n  /api/v1/users/{userId}/grants:\n    get:\n      summary: List all User Grants\n      description: Lists all grants for the specified user\n      operationId: listUserGrants\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: scopeId\n          in: query\n          schema:\n            type: string\n        - name: expand\n          in: query\n          schema:\n            type: string\n        - name: after\n          in: query\n          schema:\n            type: string\n        - name: limit\n          in: query\n          schema:\n            type: integer\n            format: int32\n            default: 20\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/OAuth2ScopeConsentGrant'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.users.read\n      tags:\n        - User\n    delete:\n      summary: Revoke all User Grants\n      description: Revokes all grants for a specified user\n      operationId: revokeUserGrants\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.users.manage\n      tags:\n        - User\n  /api/v1/users/{userId}/grants/{grantId}:\n    get:\n      summary: Retrieve a User Grant\n      description: Gets a grant for the specified user\n      operationId: getUserGrant\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: grantId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: expand\n          in: query\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OAuth2ScopeConsentGrant'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.users.read\n      tags:\n        - User\n    delete:\n      summary: Revoke a User Grant\n      description: Revokes one grant for a specified user\n      operationId: revokeUserGrant\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: grantId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.users.manage\n      tags:\n        - User\n  /api/v1/users/{userId}/groups:\n    get:\n      summary: List all Groups\n      description: Fetches the groups of which the user is a member.\n      operationId: listUserGroups\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Group'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.users.read\n      tags:\n        - User\n  /api/v1/users/{userId}/idps:\n    get:\n      summary: List all Identity Providers\n      description: Lists the IdPs associated with the user.\n      operationId: listUserIdentityProviders\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/IdentityProvider'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.users.read\n      tags:\n        - User\n  /api/v1/users/{userId}/lifecycle/activate:\n    post:\n      summary: Activate a User\n      description: Activates a user.  This operation can only be performed on users with a `STAGED` status.  Activation of a user is an asynchronous operation. The user will have the `transitioningToStatus` property with a value of `ACTIVE` during activation to indicate that the user hasn't completed the asynchronous operation.  The user will have a status of `ACTIVE` when the activation process is complete.\n      operationId: activateUser\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: sendEmail\n          in: query\n          description: Sends an activation email to the user if true\n          required: true\n          schema:\n            type: boolean\n            default: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserActivationToken'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.users.manage\n      tags:\n        - User\n  /api/v1/users/{userId}/lifecycle/deactivate:\n    post:\n      summary: Deactivate a User\n      description: 'Deactivates a user. This operation can only be performed on users that do not have a `DEPROVISIONED` status. While the asynchronous operation (triggered by HTTP header `Prefer: respond-async`) is proceeding the user''s `transitioningToStatus` property is `DEPROVISIONED`. The user''s status is `DEPROVISIONED` when the deactivation process is complete.'\n      operationId: deactivateUser\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: sendEmail\n          in: query\n          schema:\n            type: boolean\n            default: false\n          x-okta-added-version: 1.5.0\n      responses:\n        '200':\n          description: OK\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.users.manage\n      tags:\n        - User\n  /api/v1/users/{userId}/lifecycle/expire_password:\n    post:\n      summary: Expire Password\n      description: This operation transitions the user to the status of `PASSWORD_EXPIRED` so that the user is required to change their password at their next login.\n      operationId: expirePassword\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.users.manage\n      tags:\n        - User\n  /api/v1/users/{userId}/lifecycle/expire_password_with_temp_password:\n    post:\n      summary: Expire Password and Set Temporary Password\n      description: This operation transitions the user to the status of `PASSWORD_EXPIRED` so that the user is required to change their password at their next login, and also sets the user's password to a temporary password returned in the response.\n      operationId: expirePasswordAndGetTemporaryPassword\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TempPassword'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.users.manage\n      tags:\n        - User\n  /api/v1/users/{userId}/lifecycle/reactivate:\n    post:\n      summary: Reactivate a User\n      description: Reactivates a user.  This operation can only be performed on users with a `PROVISIONED` status.  This operation restarts the activation workflow if for some reason the user activation was not completed when using the activationToken from [Activate User](#activate-user).\n      operationId: reactivateUser\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: sendEmail\n          in: query\n          description: Sends an activation email to the user if true\n          schema:\n            type: boolean\n            default: false\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserActivationToken'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.users.manage\n      tags:\n        - User\n  /api/v1/users/{userId}/lifecycle/reset_factors:\n    post:\n      summary: Reset all Factors\n      description: This operation resets all factors for the specified user. All MFA factor enrollments returned to the unenrolled state. The user's status remains ACTIVE. This link is present only if the user is currently enrolled in one or more MFA factors.\n      operationId: resetFactors\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.users.manage\n      tags:\n        - User\n  /api/v1/users/{userId}/lifecycle/reset_password:\n    post:\n      summary: Reset Password\n      description: Generates a one-time token (OTT) that can be used to reset a user's password.  The OTT link can be automatically emailed to the user or returned to the API caller and distributed using a custom flow.\n      operationId: resetPassword\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: sendEmail\n          in: query\n          required: true\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResetPasswordToken'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.users.manage\n      tags:\n        - User\n  /api/v1/users/{userId}/lifecycle/suspend:\n    post:\n      summary: Suspend a User\n      description: Suspends a user.  This operation can only be performed on users with an `ACTIVE` status.  The user will have a status of `SUSPENDED` when the process is complete.\n      operationId: suspendUser\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.users.manage\n      tags:\n        - User\n  /api/v1/users/{userId}/lifecycle/unlock:\n    post:\n      summary: Unlock a User\n      description: Unlocks a user with a `LOCKED_OUT` status and returns them to `ACTIVE` status.  Users will be able to login with their current password.\n      operationId: unlockUser\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.users.manage\n      tags:\n        - User\n  /api/v1/users/{userId}/lifecycle/unsuspend:\n    post:\n      summary: Unsuspend a User\n      description: Unsuspends a user and returns them to the `ACTIVE` state.  This operation can only be performed on users that have a `SUSPENDED` status.\n      operationId: unsuspendUser\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.users.manage\n      tags:\n        - User\n  /api/v1/users/{userId}/linkedObjects/{relationshipName}:\n    get:\n      summary: List all Linked Objects\n      description: Get linked objects for a user, relationshipName can be a primary or associated relationship name\n      operationId: getLinkedObjectsForUser\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: relationshipName\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: after\n          in: query\n          schema:\n            type: string\n        - name: limit\n          in: query\n          schema:\n            type: integer\n            format: int32\n            default: -1\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ResponseLinks'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.users.read\n      tags:\n        - User\n    delete:\n      summary: Delete a Linked Object\n      description: Delete linked objects for a user, relationshipName can be ONLY a primary relationship name\n      operationId: removeLinkedObjectForUser\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: relationshipName\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.users.manage\n      tags:\n        - User\n  /api/v1/users/{userId}/roles:\n    get:\n      summary: List all Roles assigned to a User\n      description: Lists all roles assigned to a user identified by `userId`\n      operationId: listAssignedRolesForUser\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: expand\n          in: query\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Role'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.roles.read\n      tags:\n        - RoleAssignment\n    post:\n      summary: Assign a Role to a User\n      description: Assigns a role to a user identified by `userId`\n      operationId: assignRoleToUser\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: disableNotifications\n          description: Setting this to `true` grants the user third-party admin status\n          in: query\n          schema:\n            type: boolean\n      x-codegen-request-body-name: assignRoleRequest\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AssignRoleRequest'\n        required: true\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Role'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.roles.manage\n      tags:\n        - RoleAssignment\n  /api/v1/users/{userId}/roles/{roleId}:\n    get:\n      summary: Retrieve a Role assigned to a User\n      description: Retrieves a role identified by `roleId` assigned to a user identified by `userId`\n      operationId: getUserAssignedRole\n      parameters:\n        - in: path\n          name: userId\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: roleId\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Role'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.roles.read\n      tags:\n        - RoleAssignment\n    delete:\n      summary: Unassign a Role from a User\n      description: Unassigns a role identified by `roleId` from a user identified by `userId`\n      operationId: unassignRoleFromUser\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: roleId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.roles.manage\n      tags:\n        - RoleAssignment\n  /api/v1/users/{userId}/roles/{roleId}/targets/catalog/apps:\n    get:\n      summary: List all Application Targets for Application Administrator Role\n      description: Lists all App targets for an `APP_ADMIN` Role assigned to a User. This methods return list may include full Applications or Instances. The response for an instance will have an `ID` value, while Application will not have an ID.\n      operationId: listApplicationTargetsForApplicationAdministratorRoleForUser\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: roleId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: after\n          in: query\n          schema:\n            type: string\n        - name: limit\n          in: query\n          schema:\n            type: integer\n            format: int32\n            default: 20\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/CatalogApplication'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.roles.read\n      tags:\n        - RoleTarget\n    put:\n      summary: Assign all Apps as Target to Role\n      description: Assign all Apps as Target to Role\n      operationId: addAllAppsAsTargetToRole\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: roleId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.roles.manage\n      tags:\n        - RoleTarget\n  /api/v1/users/{userId}/roles/{roleId}/targets/catalog/apps/{appName}:\n    put:\n      summary: Assign an Application Target to Administrator Role\n      description: Assign an application target to administrator role\n      operationId: addApplicationTargetToAdminRoleForUser\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: roleId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: appName\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.roles.manage\n      tags:\n        - RoleTarget\n    delete:\n      summary: Unassign an Application Target from Application Administrator Role\n      description: Unassign an application target from application administrator role\n      operationId: removeApplicationTargetFromApplicationAdministratorRoleForUser\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: roleId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: appName\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.roles.manage\n      tags:\n        - RoleTarget\n  /api/v1/users/{userId}/roles/{roleId}/targets/catalog/apps/{appName}/{applicationId}:\n    put:\n      summary: Assign an Application Instance Target to an Application Administrator Role\n      description: Add App Instance Target to App Administrator Role given to a User\n      operationId: addApplicationTargetToAppAdminRoleForUser\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: roleId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: appName\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: applicationId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.roles.manage\n      tags:\n        - RoleTarget\n    delete:\n      summary: Unassign an Application Instance Target to Application Administrator Role\n      description: Remove App Instance Target to App Administrator Role given to a User\n      operationId: removeApplicationTargetFromAdministratorRoleForUser\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: roleId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: appName\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: applicationId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.roles.manage\n      tags:\n        - RoleTarget\n  /api/v1/users/{userId}/roles/{roleId}/targets/groups:\n    get:\n      summary: List all Group Targets for Role\n      description: List all group targets for role\n      operationId: listGroupTargetsForRole\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: roleId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: after\n          in: query\n          schema:\n            type: string\n        - name: limit\n          in: query\n          schema:\n            type: integer\n            format: int32\n            default: 20\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Group'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.roles.read\n      tags:\n        - RoleTarget\n  /api/v1/users/{userId}/roles/{roleId}/targets/groups/{groupId}:\n    put:\n      summary: Assign a Group Target to Role\n      description: Assign a Group Target to Role\n      operationId: addGroupTargetToRole\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: roleId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: groupId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.roles.manage\n      tags:\n        - RoleTarget\n    delete:\n      summary: Unassign a Group Target from Role\n      description: Unassign a Group Target from Role\n      operationId: removeGroupTargetFromRole\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: roleId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: groupId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.roles.manage\n      tags:\n        - RoleTarget\n  /api/v1/users/{userId}/sessions:\n    delete:\n      summary: Delete all User Sessions\n      description: Removes all active identity provider sessions. This forces the user to authenticate on the next operation. Optionally revokes OpenID Connect and OAuth refresh and access tokens issued to the user.\n      operationId: clearUserSessions\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: oauthTokens\n          in: query\n          description: Revoke issued OpenID Connect and OAuth refresh and access tokens\n          schema:\n            type: boolean\n            default: false\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.users.manage\n      tags:\n        - User\n  /api/v1/users/{userId}/subscriptions:\n    get:\n      summary: List all Subscriptions\n      description: List subscriptions of a User. Only lists subscriptions for current user. An AccessDeniedException message is sent if requests are made from other users.\n      operationId: listUserSubscriptions\n      parameters:\n        - in: path\n          name: userId\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Subscription'\n                type: array\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          description: Not Found\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.users.read\n      tags:\n        - Subscription\n  /api/v1/users/{userId}/subscriptions/{notificationType}:\n    get:\n      summary: List all Subscriptions by type\n      description: Get the subscriptions of a User with a specific notification type. Only gets subscriptions for current user. An AccessDeniedException message is sent if requests are made from other users.\n      operationId: getUserSubscriptionByNotificationType\n      parameters:\n        - in: path\n          name: userId\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: notificationType\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Subscription'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          description: Not Found\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.users.read\n      tags:\n        - Subscription\n  /api/v1/users/{userId}/subscriptions/{notificationType}/subscribe:\n    post:\n      summary: Subscribe to a specific notification type\n      description: Subscribes a User to a specific notification type. Only the current User can subscribe to a specific notification type. An AccessDeniedException message is sent if requests are made from other users.\n      operationId: subscribeUserSubscriptionByNotificationType\n      parameters:\n        - in: path\n          name: userId\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: notificationType\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          description: Not Found\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.users.manage\n      tags:\n        - Subscription\n  /api/v1/users/{userId}/subscriptions/{notificationType}/unsubscribe:\n    post:\n      summary: Unsubscribe from a specific notification type\n      description: Unsubscribes a User from a specific notification type. Only the current User can unsubscribe from a specific notification type. An AccessDeniedException message is sent if requests are made from other users.\n      operationId: unsubscribeUserSubscriptionByNotificationType\n      parameters:\n        - in: path\n          name: userId\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: notificationType\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          description: Not Found\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.users.manage\n      tags:\n        - Subscription\n  /api/v1/zones:\n    get:\n      summary: List all Network Zones\n      description: Enumerates network zones added to your organization with pagination. A subset of zones can be returned that match a supported filter expression or query.\n      operationId: listNetworkZones\n      parameters:\n        - name: after\n          in: query\n          description: Specifies the pagination cursor for the next page of network zones\n          schema:\n            type: string\n        - name: limit\n          in: query\n          description: Specifies the number of results for a page\n          schema:\n            type: integer\n            format: int32\n            default: -1\n        - name: filter\n          in: query\n          description: Filters zones by usage or id expression\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/NetworkZone'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.networkZones.read\n      tags:\n        - NetworkZone\n    post:\n      summary: Create a Network Zone\n      description: Adds a new network zone to your Okta organization.\n      operationId: createNetworkZone\n      x-codegen-request-body-name: zone\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NetworkZone'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NetworkZone'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.networkZones.manage\n      tags:\n        - NetworkZone\n  /api/v1/zones/{zoneId}:\n    get:\n      summary: Retrieve a Network Zone\n      description: Fetches a network zone from your Okta organization by `id`.\n      operationId: getNetworkZone\n      parameters:\n        - name: zoneId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NetworkZone'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.networkZones.read\n      tags:\n        - NetworkZone\n    put:\n      summary: Replace a Network Zone\n      description: Updates a network zone in your organization.\n      operationId: updateNetworkZone\n      parameters:\n        - name: zoneId\n          in: path\n          required: true\n          schema:\n            type: string\n      x-codegen-request-body-name: zone\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NetworkZone'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NetworkZone'\n        '400':\n          $ref: '#/components/responses/ErrorApiValidationFailed400'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.networkZones.manage\n      tags:\n        - NetworkZone\n    delete:\n      summary: Delete a Network Zone\n      description: Removes network zone.\n      operationId: deleteNetworkZone\n      parameters:\n        - name: zoneId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.networkZones.manage\n      tags:\n        - NetworkZone\n  /api/v1/zones/{zoneId}/lifecycle/activate:\n    post:\n      summary: Activate a Network Zone\n      description: Activate Network Zone\n      operationId: activateNetworkZone\n      parameters:\n        - name: zoneId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NetworkZone'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.networkZones.manage\n      tags:\n        - NetworkZone\n  /api/v1/zones/{zoneId}/lifecycle/deactivate:\n    post:\n      summary: Deactivate a Network Zone\n      description: Deactivates a network zone.\n      operationId: deactivateNetworkZone\n      parameters:\n        - name: zoneId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NetworkZone'\n        '403':\n          $ref: '#/components/responses/ErrorAccessDenied403'\n        '404':\n          $ref: '#/components/responses/ErrorResourceNotFound404'\n        '429':\n          $ref: '#/components/responses/ErrorTooManyRequests429'\n      security:\n        - apiToken: []\n        - oauth2:\n            - okta.networkZones.manage\n      tags:\n        - NetworkZone\ncomponents:\n  securitySchemes:\n    apiToken:\n      description: 'Pass the API token as the Authorization header value prefixed with SSWS: `Authorization: SSWS {API Token}`'\n      name: Authorization\n      type: apiKey\n      in: header\n    oauth2:\n      type: oauth2\n      description: 'Pass the access_token as the value of the Authorization header: `Authorization: Bearer {access_token}`'\n      flows:\n        authorizationCode:\n          authorizationUrl: /oauth2/v1/authorize\n          tokenUrl: /oauth2/v1/token\n          scopes:\n            okta.agentPools.manage: Allows the app to create and manage agent pools in your Okta organization.\n            okta.agentPools.read: Allows the app to read agent pools in your Okta organization.\n            okta.apiToken.manage: Allows the app to manage API Tokens in your Okta organization.\n            okta.apiToken.read: Allows the app to read API Tokens in your Okta organization.\n            okta.apps.manage: Allows the app to create and manage Apps in your Okta organization.\n            okta.apps.read: Allows the app to read information about Apps in your Okta organization.\n            okta.authenticators.manage: Allows the app to manage all authenticators (e.g. enrollments, reset).\n            okta.authenticators.read: Allows the app to read org authenticators information.\n            okta.authorizationServers.manage: Allows the app to create and manage Authorization Servers in your Okta organization.\n            okta.authorizationServers.read: Allows the app to read information about Authorization Servers in your Okta organization.\n            okta.behaviors.manage: Allows the app to create and manage behavior detection rules in your Okta organization.\n            okta.behaviors.read: Allows the app to read behavior detection rules in your Okta organization.\n            okta.brands.manage: Allows the app to create and manage Brands and Themes in your Okta organization.\n            okta.brands.read: Allows the app to read information about Brands and Themes in your Okta organization.\n            okta.captchas.manage: Allows the app to create and manage CAPTCHAs in your Okta organization.\n            okta.captchas.read: Allows the app to read information about CAPTCHAs in your Okta organization.\n            okta.deviceAssurance.manage: Allows the app to manage device assurances.\n            okta.deviceAssurance.read: Allows the app to read device assurances.\n            okta.devices.manage: Allows the app to manage device status transitions and delete a device.\n            okta.devices.read: Allows the app to read the existing device's profile and search devices.\n            okta.domains.manage: Allows the app to manage custom Domains for your Okta organization.\n            okta.domains.read: Allows the app to read information about custom Domains for your Okta organization.\n            okta.eventHooks.manage: Allows the app to create and manage Event Hooks in your Okta organization.\n            okta.eventHooks.read: Allows the app to read information about Event Hooks in your Okta organization.\n            okta.groups.manage: Allows the app to manage existing groups in your Okta organization.\n            okta.groups.read: Allows the app to read information about groups and their members in your Okta organization.\n            okta.idps.manage: Allows the app to create and manage Identity Providers in your Okta organization.\n            okta.idps.read: Allows the app to read information about Identity Providers in your Okta organization.\n            okta.inlineHooks.manage: Allows the app to create and manage Inline Hooks in your Okta organization.\n            okta.inlineHooks.read: Allows the app to read information about Inline Hooks in your Okta organization.\n            okta.linkedObjects.manage: Allows the app to manage linked object definitions in your Okta organization.\n            okta.linkedObjects.read: Allows the app to read linked object definitions in your Okta organization.\n            okta.logStreams.manage: Allows the app to create and manage log streams in your Okta organization.\n            okta.logStreams.read: Allows the app to read information about log streams in your Okta organization.\n            okta.logs.read: Allows the app to read information about System Log entries in your Okta organization.\n            okta.orgs.manage: Allows the app to manage organization-specific details for your Okta organization.\n            okta.orgs.read: Allows the app to read organization-specific details about your Okta organization.\n            okta.policies.manage: Allows the app to manage policies in your Okta organization.\n            okta.policies.read: Allows the app to read information about policies in your Okta organization.\n            okta.principalRateLimits.manage: Allows the app to create and manage Principal Rate Limits in your Okta organization.\n            okta.principalRateLimits.read: Allows the app to read information about Principal Rate Limits in your Okta organization.\n            okta.profileMappings.manage: Allows the app to manage user profile mappings in your Okta organization.\n            okta.profileMappings.read: Allows the app to read user profile mappings in your Okta organization.\n            okta.pushProviders.manage: Allows the app to create and manage push notification providers such as APNs and FCM.\n            okta.pushProviders.read: Allows the app to read push notification providers such as APNs and FCM.\n            okta.rateLimits.manage: Allows the app to create and manage rate limits in your Okta organization.\n            okta.rateLimits.read: Allows the app to read information about rate limits in your Okta organization.\n            okta.riskEvents.manage: Allows the app to publish risk events to your Okta organization.\n            okta.riskProviders.manage: Allows the app to create and manage risk provider integrations in your Okta organization.\n            okta.riskProviders.read: Allows the app to read all risk provider integrations in your Okta organization.\n            okta.roles.manage: Allows the app to manage administrative role assignments for users in your Okta organization.\n            okta.roles.read: Allows the app to read administrative role assignments for users in your Okta organization.\n            okta.schemas.manage: Allows the app to create and manage Schemas in your Okta organization.\n            okta.schemas.read: Allows the app to read information about Schemas in your Okta organization.\n            okta.sessions.manage: Allows the app to manage all sessions in your Okta organization.\n            okta.sessions.read: Allows the app to read all sessions in your Okta organization.\n            okta.templates.manage: Allows the app to manage all custom templates in your Okta organization.\n            okta.templates.read: Allows the app to read all custom templates in your Okta organization.\n            okta.trustedOrigins.manage: Allows the app to manage all Trusted Origins in your Okta organization.\n            okta.trustedOrigins.read: Allows the app to read all Trusted Origins in your Okta organization.\n            okta.userTypes.manage: Allows the app to manage user types in your Okta organization.\n            okta.userTypes.read: Allows the app to read user types in your Okta organization.\n            okta.users.manage: Allows the app to create new users and to manage all users' profile and credentials information.\n            okta.users.read: Allows the app to read the existing users' profiles and credentials.\n  examples:\n    ApiTokenListMetadataResponse:\n      value:\n        - name: My API Token\n          userId: 00uabcdefg1234567890\n          tokenWindow: P30D\n          id: 00Tabcdefg1234567890\n          clientName: Okta API\n          expiresAt: 2021-12-11T20:38:10.000Z\n          created: 2021-11-09T20:38:10.000Z\n          lastUpdated: 2021-11-11T20:38:10.000Z\n          _links:\n            self:\n              href: https://{yourOktaDomain}/api/v1/api-tokens/00Tabcdefg1234567890\n              hints:\n                allow:\n                  - GET\n                  - DELETE\n            user:\n              href: https://{yourOktaDomain}/api/v1/users/00uabcdefg1234567890\n              hints:\n                allow:\n                  - GET\n        - name: Another API Token\n          userId: 00uabcdefg1234567890\n          tokenWindow: PT5M\n          id: 00T1234567890abcdefg\n          clientName: Okta API\n          expiresAt: 2021-11-11T20:43:10.000Z\n          created: 2021-11-09T20:38:10.000Z\n          lastUpdated: 2021-11-11T20:38:10.000Z\n          _links:\n            self:\n              href: https://{yourOktaDomain}/api/v1/api-tokens/00T1234567890abcdefg\n              hints:\n                allow:\n                  - GET\n                  - DELETE\n            user:\n              href: https://{yourOktaDomain}/api/v1/users/00uabcdefg1234567890\n              hints:\n                allow:\n                  - GET\n    ApiTokenMetadataResponse:\n      value:\n        name: My API Token\n        userId: 00uXXXXXXXXXXXXXXXXX\n        tokenWindow: P30D\n        id: 00Tabcdefg1234567890\n        clientName: Okta API\n        expiresAt: 2021-12-11T20:38:10.000Z\n        created: 2021-11-09T20:38:10.000Z\n        lastUpdated: 2021-11-11T20:38:10.000Z\n        _links:\n          self:\n            href: https://{yourOktaDomain}/api/v1/api-tokens/00Tabcdefg1234567890\n            hints:\n              allow:\n                - GET\n                - DELETE\n          user:\n            href: https://{yourOktaDomain}/api/v1/users/00uXXXXXXXXXXXXXXXXX\n            hints:\n              allow:\n                - GET\n    AppUserSchemaAddRequest:\n      value:\n        definitions:\n          custom:\n            id: '#custom'\n            type: object\n            properties:\n              twitterUserName:\n                title: Twitter username\n                description: User's username for twitter.com\n                type: string\n                required: false\n                minLength: 1\n                maxLength: 20\n            required: []\n    AppUserSchemaResponse:\n      value:\n        id: https://{yourOktaDomain}/meta/schemas/apps/0oa25gejWwdXNnFH90g4/default\n        $schema: http://json-schema.org/draft-04/schema#\n        name: Example App\n        title: Example App User\n        lastUpdated: '2017-07-18T23:18:43.000Z'\n        created: '2017-07-18T22:35:30.000Z'\n        definitions:\n          base:\n            id: '#base'\n            type: object\n            properties:\n              userName:\n                title: Username\n                type: string\n                required: true\n                scope: NONE\n                maxLength: 100\n            required:\n              - userName\n          custom:\n            id: '#custom'\n            type: object\n            properties:\n              twitterUserName:\n                title: Twitter username\n                description: User's username for twitter.com\n                type: string\n                scope: NONE\n                minLength: 1\n                maxLength: 20\n            required: []\n        type: object\n        properties:\n          profile:\n            allOf:\n              - $ref: '#/definitions/base'\n              - $ref: '#/definitions/custom'\n    AuthenticatorRequestDuo:\n      value:\n        key: duo\n        name: Duo Security\n        provider:\n          type: DUO\n          configuration:\n            userNameTemplate:\n              template: oktaId\n            integrationKey: testIntegrationKey\n            secretKey: testSecretKey\n            host: https://api-xxxxxxxx.duosecurity.com\n    AuthenticatorResponseDuo:\n      value:\n        type: app\n        id: aut9gnvcjUHIWb37J0g4\n        key: duo\n        status: ACTIVE\n        name: Duo Security\n        created: '2022-07-15T21:14:02.000Z'\n        lastUpdated: '2022-07-15T21:14:02.000Z'\n        settings: {}\n        provider:\n          type: DUO\n          configuration:\n            host: https://api-xxxxxxxx.duosecurity.com\n            userNameTemplate:\n              template: oktaId\n        _links:\n          self:\n            href: https://{yourOktaDomain}/api/v1/authenticators/aut5gnvcjUHIWb25J0g4\n            hints:\n              allow:\n                - GET\n                - PUT\n          deactivate:\n            href: https://{yourOktaDomain}/api/v1/authenticators/aut5gnvcjUHIWb25J0g4/lifecycle/deactivate\n            hints:\n              allow:\n                - POST\n          methods:\n            href: https://{yourOktaDomain}/api/v1/authenticators/aut5gnvcjUHIWb25J0g4/methods\n            hints:\n              allow:\n                - GET\n    AuthenticatorResponseEmail: \u0026ref_0\n      value:\n        type: email\n        id: aut1nbsPHh7jNjjyP0g4\n        key: okta_email\n        status: ACTIVE\n        name: Email\n        created: '2020-07-26T21:05:23.000Z'\n        lastUpdated: '2020-07-28T21:45:52.000Z'\n        settings:\n          allowedFor: any\n          tokenLifetimeInMinutes: 5\n        _links:\n          self:\n            href: https://{yourOktaDomain}/api/v1/authenticators/aut1nbsPHh7jNjjyP0g4\n            hints:\n              allow:\n                - GET\n                - PUT\n          methods:\n            href: https://{yourOktaDomain}/api/v1/authenticators/aut1nbsPHh7jNjjyP0g4/methods\n            hints:\n              allow:\n                - GET\n          deactivate:\n            href: https://{yourOktaDomain}/api/v1/authenticators/aut1nbsPHh7jNjjyP0g4/lifecycle/deactivate\n            hints:\n              allow:\n                - POST\n    AuthenticatorResponsePassword: \u0026ref_1\n      value:\n        type: password\n        id: aut1nbtrJKKA9m45a0g4\n        key: okta_password\n        status: ACTIVE\n        name: Password\n        created: '2020-07-26T21:05:23.000Z'\n        lastUpdated: '2020-07-26T21:05:23.000Z'\n        _links:\n          self:\n            href: https://{yourOktaDomain}/api/v1/authenticators/aut1nbtrJKKA9m45a0g4\n            hints:\n              allow:\n                - GET\n                - PUT\n          methods:\n            href: https://{yourOktaDomain}/api/v1/authenticators/aut1nbtrJKKA9m45a0g4/methods\n            hints:\n              allow:\n                - GET\n    AuthenticatorResponsePhone: \u0026ref_2\n      value:\n        type: phone\n        id: aut1nbuyD8m1ckAYc0g4\n        key: phone_number\n        status: INACTIVE\n        name: Phone\n        created: '2020-07-26T21:05:23.000Z'\n        lastUpdated: '2020-07-29T00:21:29.000Z'\n        settings:\n          allowedFor: none\n        _links:\n          self:\n            href: https://{yourOktaDomain}/api/v1/authenticators/aut1nbuyD8m1ckAYc0g4\n            hints:\n              allow:\n                - GET\n                - PUT\n          methods:\n            href: https://{yourOktaDomain}/api/v1/authenticators/aut1nbuyD8m1ckAYc0g4/methods\n            hints:\n              allow:\n                - GET\n          activate:\n            href: https://{yourOktaDomain}/api/v1/authenticators/aut1nbuyD8m1ckAYc0g4/lifecycle/activate\n            hints:\n              allow:\n                - POST\n    AuthenticatorResponseSecurityQuestion:\n      value:\n        type: security_question\n        id: aut1nbvIgEenhwE6c0g4\n        key: security_question\n        status: ACTIVE\n        name: Security Question\n        created: '2020-07-26T21:05:23.000Z'\n        lastUpdated: '2020-07-26T21:05:23.000Z'\n        _links:\n          self:\n            href: https://{yourOktaDomain}/api/v1/authenticators/aut1nbvIgEenhwE6c0g4\n            hints:\n              allow:\n                - GET\n          methods:\n            href: https://{yourOktaDomain}/api/v1/authenticators/aut1nbvIgEenhwE6c0g4/methods\n            hints:\n              allow:\n                - GET\n          deactivate:\n            href: https://{yourOktaDomain}/api/v1/authenticators/aut1nbvIgEenhwE6c0g4/lifecycle/deactivate\n            hints:\n              allow:\n                - POST\n    AuthenticatorResponseWebAuthn: \u0026ref_3\n      value:\n        type: security_key\n        id: aut1nd8PQhGcQtSxB0g4\n        key: webauthn\n        status: ACTIVE\n        name: Security Key or Biometric\n        created: '2020-07-26T21:16:37.000Z'\n        lastUpdated: '2020-07-27T18:59:30.000Z'\n        _links:\n          self:\n            href: https://{yourOktaDomain}/api/v1/authenticators/aut1nd8PQhGcQtSxB0g4\n            hints:\n              allow:\n                - GET\n                - PUT\n          methods:\n            href: https://{yourOktaDomain}/api/v1/authenticators/aut1nd8PQhGcQtSxB0g4/methods\n            hints:\n              allow:\n                - GET\n          deactivate:\n            href: https://{yourOktaDomain}/api/v1/authenticators/aut1nd8PQhGcQtSxB0g4/lifecycle/deactivate\n            hints:\n              allow:\n                - POST\n    AuthenticatorsResponse:\n      value:\n        - *ref_0\n        - *ref_1\n        - *ref_2\n        - *ref_3\n    BehaviorRuleRequest:\n      value:\n        name: My Behavior Rule\n        type: VELOCITY\n    BehaviorRuleResponse:\n      value:\n        id: abcd1234\n        name: My Behavior Rule\n        type: VELOCITY\n        settings:\n          velocityKph: 805\n        status: ACTIVE\n        created: 2021-11-09T20:38:10.000Z\n        lastUpdated: 2021-11-11T20:38:10.000Z\n        _link:\n          self:\n            href: https://your-subdomain.okta.com/api/v1/behaviors/abcd1234\n            hints:\n              allow:\n                - GET\n                - POST\n                - PUT\n                - DELETE\n    CAPTCHAInstanceRequestHCaptcha:\n      value:\n        name: myHCaptcha\n        secretKey: xxxxxxxxxxx\n        siteKey: xxxxxxxxxxx\n        type: HCAPTCHA\n    CAPTCHAInstanceRequestReCaptcha:\n      value:\n        name: myReCaptcha\n        secretKey: xxxxxxxxxxx\n        siteKey: yyyyyyyyyyyyyyy\n        type: RECAPTCHA_V2\n    CAPTCHAInstanceResponseHCaptcha:\n      value:\n        id: abcd1234\n        name: myHCaptcha\n        siteKey: xxxxxxxxxxx\n        type: HCAPTCHA\n        _links:\n          self:\n            href: https://your-subdomain.okta.com/api/v1/captchas/abcd1234\n            hints:\n              allow:\n                - GET\n                - POST\n                - PUT\n                - DELETE\n    CAPTCHAInstanceResponseReCaptcha:\n      value:\n        id: abcd4567\n        name: myReCaptcha\n        siteKey: yyyyyyyyyyyyyyy\n        type: RECAPTCHA_V2\n        _links:\n          self:\n            href: https://your-subdomain.okta.com/api/v1/captchas/abcd4567\n            hints:\n              allow:\n                - GET\n                - POST\n                - PUT\n                - DELETE\n    CreateBrandDomainRequest:\n      value:\n        domainId: OcD11vyscTlIkpC7i0g4\n    CreateBrandRequest:\n      value:\n        name: My Awesome Brand\n    CreateBrandResponse:\n      value:\n        id: bnd114iNkrcN6aR680g5\n        removePoweredByOkta: false\n        customPrivacyPolicyUrl: null\n        name: My Awesome Brand\n        isDefault: false\n        _links:\n          self:\n            href: https://{yourOktaDomain}/api/v1/brands/bnd114iNkrcN6aR680g5\n            hints:\n              allow:\n                - GET\n                - PUT\n                - DELETE\n          themes:\n            href: https://{yourOktaDomain}/api/v1/brands/bnd114iNkrcN6aR680g5/themes\n            hints:\n              allow:\n                - GET\n    CreateUpdateEmailCustomizationRequest:\n      value:\n        language: fr\n        subject: Bienvenue dans ${org.name}!\n        body: \u003c!DOCTYPE html\u003e\u003chtml\u003e\u003cbody\u003e\u003cp\u003eBonjour ${user.profile.firstName}. \u003ca href=\"${activationLink}\"\u003eActiver le compte\u003c/a\u003e\u003c/p\u003e\u003c/body\u003e\u003c/html\u003e\n        isDefault: false\n    CreateUpdateEmailCustomizationResponse:\n      value:\n        language: fr\n        subject: Bienvenue dans ${org.name}!\n        body: \u003c!DOCTYPE html\u003e\u003chtml\u003e\u003cbody\u003e\u003cp\u003eBonjour ${user.profile.firstName}. \u003ca href=\"${activationLink}\"\u003eActiver le compte\u003c/a\u003e\u003c/p\u003e\u003c/body\u003e\u003c/html\u003e\n        isDefault: false\n        id: oel11u6DqUiMbQkpl0g4\n        created: 2021-11-09T20:38:10.000Z\n        lastUpdated: 2021-11-11T20:38:10.000Z\n        _links:\n          self:\n            href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/customizations/oel11u6DqUiMbQkpl0g4\n            hints:\n              allow:\n                - GET\n                - PUT\n                - DELETE\n          template:\n            href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation\n            hints:\n              allow:\n                - GET\n          preview:\n            href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/customizations/oel11u6DqUiMbQkpl0g4/preview\n            hints:\n              allow:\n                - GET\n          test:\n            href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/test\n            hints:\n              allow:\n                - POST\n    DeviceAssuranceAndroidRequest:\n      value:\n        name: Device Assurance Android\n        osVersion:\n          minimum: 12.4.5\n        diskEncryptionType:\n          include:\n            - USER\n            - FULL\n        jailbreak: false\n        platform: ANDROID\n        screenLockType:\n          include:\n            - BIOMETRIC\n        secureHardwarePresent: true\n    DeviceAssuranceIosRequest:\n      value:\n        name: Device Assurance IOS\n        osVersion:\n          minimum: 12.4.5\n        jailbreak: false\n        platform: IOS\n        screenLockType:\n          include:\n            - BIOMETRIC\n    DeviceAssuranceMacOSRequest:\n      value:\n        name: Device Assurance macOS\n        osVersion:\n          minimum: 12.4.5\n        diskEncryptionType:\n          include:\n            - ALL_INTERNAL_VOLUMES\n        platform: MACOS\n        screenLockType:\n          include:\n            - PASSCODE\n            - BIOMETRIC\n        secureHardwarePresent: true\n    DeviceAssuranceResponse:\n      value:\n        id: dae3m8o4rWhwReDeM1c5\n        name: Device Assurance Example\n        lastUpdate: 2022-01-01T00:00:00.000Z\n        createdUpdate: 2022-01-01T00:00:00.000Z\n        lastUpdatedBy: 00u217pyf72CdUrBt1c5\n        createdBy: 00u217pyf72CdUrBt1c5\n        osVersion:\n          minimum: 12.4.5.9\n        diskEncryptionType:\n          include:\n            - ALL_INTERNAL_VOLUMES\n        platform: WINDOWS\n        screenLockType:\n          include:\n            - PASSCODE\n            - BIOMETRIC\n        secureHardwarePresent: true\n        _links:\n          self:\n            href: https://your-subdomain.okta.com/api/v1/device-assurances/dae3m8o4rWhwReDeM1c5\n            hints:\n              allow:\n                - DELETE\n                - GET\n                - PUT\n    DeviceAssuranceWindowsRequest:\n      value:\n        name: Device Assurance Windows\n        osVersion:\n          minimum: 12.4.5.9\n        diskEncryptionType:\n          include:\n            - ALL_INTERNAL_VOLUMES\n        platform: WINDOWS\n        screenLockType:\n          include:\n            - PASSCODE\n            - BIOMETRIC\n        secureHardwarePresent: true\n    DeviceResponse:\n      value:\n        id: guo8jx5vVoxfvJeLb0w4\n        status: ACTIVE\n        created: '2020-11-03T21:47:01.000Z'\n        lastUpdated: '2020-11-03T23:46:27.000Z'\n        profile:\n          displayName: DESKTOP-EHAD3IE\n          platform: WINDOWS\n          manufacturer: International Corp\n          model: VMware7,1\n          osVersion: 10.0.18362\n          serialNumber: 56 4d 4f 95 74 c5 d3 e7-fc 3a 57 9c c2 f8 5d ce\n          udid: 954F4D56-C574-E7D3-FC3A-579CC2F85DCE\n          sid: S-1-5-21-3992267483-1860856704-2413701314-500\n          registered: true\n          secureHardwarePresent: false\n        resourceId: guo8jx5vVoxfvJeLb0w4\n        resourceDisplayName:\n          value: DESKTOP-EHAD3IE\n          sensitive: false\n        resourceType: UDDevice\n        resourceAlternateId: null\n        _links:\n          suspend:\n            href: https://{yourOktaDomain}/api/v1/devices/guo8jx5vVoxfvJeLb0w4/lifecycle/suspend\n            hints:\n              allow:\n                - POST\n          self:\n            href: https://{yourOktaDomain}/api/v1/devices/guo8jx5vVoxfvJeLb0w4\n            hints:\n              allow:\n                - GET\n                - PATCH\n                - PUT\n          users:\n            href: https://{yourOktaDomain}/api/v1/devices/guo8jx5vVoxfvJeLb0w4/users\n            hints:\n              allow:\n                - GET\n          deactivate:\n            href: https://{yourOktaDomain}/api/v1/devices/guo8jx5vVoxfvJeLb0w4/lifecycle/deactivate\n            hints:\n              allow:\n                - POST\n    EmailCustomizationResponse:\n      value:\n        language: en\n        isDefault: true\n        subject: Welcome to ${org.name}!\n        body: \u003c!DOCTYPE html\u003e\u003chtml\u003e\u003cbody\u003e\u003cp\u003eHello, ${user.profile.firstName}. Click \u003ca href=\"${activationLink}\"\u003ehere\u003c/a\u003e to activate your account.\u003c/body\u003e\u003c/html\u003e\n        id: oel11u6DqUiMbQkpl0g4\n        created: 2021-11-09T20:38:10.000Z\n        lastUpdated: 2021-11-11T20:38:10.000Z\n        _links:\n          self:\n            href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/customizations/oel11u6DqUiMbQkpl0g4\n            hints:\n              allow:\n                - GET\n                - PUT\n                - DELETE\n          template:\n            href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation\n            hints:\n              allow:\n                - GET\n          preview:\n            href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/customizations/oel11u6DqUiMbQkpl0g4/preview\n            hints:\n              allow:\n                - GET\n          test:\n            href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/test\n            hints:\n              allow:\n                - POST\n    EmailSettingsResponse:\n      value:\n        recipients: ALL_USERS\n        _links:\n          self:\n            href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/settings\n            hints:\n              allow:\n                - GET\n                - PUT\n          template:\n            href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation\n            hints:\n              allow:\n                - GET\n    EmailTemplateDefaultContentResponse:\n      value:\n        subject: Welcome to ${org.name}!\n        body: \u003c!DOCTYPE html\u003e\u003chtml\u003e\u003cbody\u003e\u003cp\u003eHello, ${user.profile.firstName}. Click \u003ca href=\"${activationLink}\"\u003ehere\u003c/a\u003e to activate your account.\u003c/body\u003e\u003c/html\u003e\n        _links:\n          self:\n            href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/default-content\n            hints:\n              allow:\n                - GET\n          template:\n            href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation\n            hints:\n              allow:\n                - GET\n          preview:\n            href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/default-content/preview\n            hints:\n              allow:\n                - GET\n    ErrorAccessDenied:\n      value:\n        errorCode: E0000006\n        errorSummary: You do not have permission to perform the requested action\n        errorLink: E0000006\n        errorId: sampleNUSD_8fdkFd8fs8SDBK\n        errorCauses: []\n    ErrorApiValidationFailed:\n      value:\n        errorCode: E0000001\n        errorSummary: 'Api validation failed: {0}'\n        errorLink: E0000001\n        errorId: sampleiCF-8D5rLW6myqiPItW\n        errorCauses: []\n    ErrorCAPTCHALimitOfOne:\n      value:\n        errorCode: E0000165\n        errorSummary: CAPTCHA count limit reached. At most one CAPTCHA instance is allowed per Org.\n        errorLink: E0000165\n        errorId: oaejrB1fWL1S7mc-2KcG-SOtw\n        errorCauses: []\n    ErrorCAPTCHAOrgWideSetting:\n      value:\n        errorCode: E0000149\n        errorSummary: Current CAPTCHA is associated with org-wide settings, cannot be removed.\n        errorLink: E0000149\n        errorId: samplezsusshPdiTWiITwqBt8\n        errorCauses: []\n    ErrorCreateUserWithExpiredPasswordWithNullPassword:\n      value:\n        errorCode: E0000124\n        errorSummary: Could not create user. To create a user and expire their password immediately, a password must be specified\n        errorLink: E0000124\n        errorId: oaeXxuZgXBySvqi1FvtkwoYCA\n        errorCauses:\n          - errorSummary: Could not create user. To create a user and expire their password immediately, a password must be specified\n    ErrorCreateUserWithExpiredPasswordWithoutActivation:\n      value:\n        errorCode: E0000125\n        errorSummary: Could not create user. To create a user and expire their password immediately, \"activate\" must be true\n        errorLink: E0000125\n        errorId: oaeDd77L9R-TJaD7j_rXsQ31w\n        errorCauses:\n          - errorSummary: Could not create user. To create a user and expire their password immediately, \"activate\" must be true\n    ErrorCreateUserWithTooManyManyGroupsResponse:\n      value:\n        errorCode: E0000093\n        errorSummary: Target count limit exceeded\n        errorLink: E0000093\n        errorId: oaePVSLIYnIQsC0B-ptBIllVA\n        errorCauses:\n          - errorSummary: The number of group targets is too large.\n    ErrorDeleteBrandAssociatedWithDomain:\n      value:\n        errorCode: E0000201\n        errorSummary: A brand associated with a domain cannot be deleted\n        errorLink: E0000201\n        errorId: oaeAdRqprFuTyKokyYPbURJkA\n        errorCauses: []\n    ErrorDeleteDefaultBrand:\n      value:\n        errorCode: E0000200\n        errorSummary: A default brand cannot be deleted\n        errorLink: E0000200\n        errorId: oaeAdRqprFuTyKokyYPbURJkA\n        errorCauses: []\n    ErrorDeviceAssuranceInUse:\n      value:\n        errorSummary: Device assurance is in use and cannot be deleted.\n        errorId: oaenwA1ra80S9W-pvbh4m6haA\n        errorCauses: []\n    ErrorEmailCustomizationCannotClearDefault:\n      value:\n        errorCode: E0000185\n        errorSummary: The isDefault parameter of the default email template customization can't be set to false.\n        errorLink: E0000185\n        errorId: oaejrB1fWL1S7mc-2KcG-SOtw\n        errorCauses: []\n    ErrorEmailCustomizationCannotDeleteDefault:\n      value:\n        errorCode: E0000184\n        errorSummary: A default email template customization can't be deleted.\n        errorLink: E0000184\n        errorId: oaeAdRqprFuTyKokyYPbURJkA\n        errorCauses: []\n    ErrorEmailCustomizationDefaultAlreadyExists:\n      value:\n        errorCode: E0000182\n        errorSummary: A default email template customization already exists.\n        errorLink: E0000182\n        errorId: oaeXYwTiMvASsC3O4HCzjFaCA\n        errorCauses: []\n    ErrorEmailCustomizationLanguageAlreadyExists:\n      value:\n        errorCode: E0000183\n        errorSummary: An email template customization for that language already exists.\n        errorLink: E0000183\n        errorId: oaeUcGELffqRay0u1OPdnPypw\n        errorCauses: []\n    ErrorInvalidEmailTemplateRecipients:\n      value:\n        errorCode: E0000189\n        errorSummary: This template does not support the recipients value.\n        errorLink: E0000189\n        errorId: oae8L1-UkcNTeGi5xVQ28_lww\n        errorCauses: []\n    ErrorLinkDefaultBrand:\n      value:\n        errorCode: E0000203\n        errorSummary: Failed to associate this domain with the given brandId\n        errorLink: E0000203\n        errorId: oaeAdRqprFuTyKokyYPbURJkA\n        errorCauses:\n          - errorSummary: The default brand cannot be mapped to a domain\n    ErrorPushProviderUsedByCustomAppAuthenticator:\n      value:\n        errorCode: E0000187\n        errorSummary: Cannot delete push provider because it is being used by a custom app authenticator.\n        errorLink: E0000187\n        errorId: oaenwA1ra80S9W-pvbh4m6haA\n        errorCauses: []\n    ErrorResourceNotFound:\n      value:\n        errorCode: E0000007\n        errorSummary: 'Not found: {0}'\n        errorLink: E0000007\n        errorId: sampleMlLvGUj_YD5v16vkYWY\n        errorCauses: []\n    ErrorTooManyRequests:\n      value:\n        errorCode: E0000047\n        errorSummary: You exceeded the maximum number of requests. Try again in a while.\n        errorLink: E0000047\n        errorId: sampleQPivGUj_ND5v78vbYWW\n        errorCauses: []\n    GetBrandResponse:\n      value:\n        id: bnd114iNkrcN6aR680g4\n        removePoweredByOkta: false\n        customPrivacyPolicyUrl: null\n        name: Okta Default\n        isDefault: true\n        _links:\n          self:\n            href: https://{yourOktaDomain}/api/v1/brands/bnd114iNkrcN6aR680g4\n            hints:\n              allow:\n                - GET\n                - PUT\n                - DELETE\n          themes:\n            href: https://{yourOktaDomain}/api/v1/brands/bnd114iNkrcN6aR680g4/themes\n            hints:\n              allow:\n                - GET\n    GetEmailTemplateResponse:\n      value:\n        name: UserActivation\n        _links:\n          self:\n            href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation\n            hints:\n              allow:\n                - GET\n          settings:\n            href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/settings\n            hints:\n              allow:\n                - GET\n                - PUT\n          defaultContent:\n            href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/default-content\n            hints:\n              allow:\n                - GET\n          customizations:\n            href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/customizations\n            hints:\n              allow:\n                - GET\n                - POST\n                - DELETE\n          test:\n            href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/test\n            hints:\n              allow:\n                - POST\n    GroupSchemaAddRequest:\n      value:\n        definitions:\n          custom:\n            id: '#custom'\n            type: object\n            properties:\n              groupContact:\n                title: Group administrative contact\n                description: Group administrative contact\n                type: string\n                required: false\n                minLength: 1\n                maxLength: 20\n                permissions:\n                  - principal: SELF\n                    action: READ_WRITE\n            required: []\n    GroupSchemaResponse:\n      value:\n        $schema: http://json-schema.org/draft-04/schema#\n        _links:\n          self:\n            href: https://{yourOktaDomain}/api/v1/meta/schemas/group/default\n            method: GET\n            rel: self\n        created: '2021-01-30T00:18:24.000Z'\n        definitions:\n          base:\n            id: '#base'\n            properties: {}\n            required:\n              - name\n            type: object\n          custom:\n            id: '#custom'\n            properties:\n              groupContact:\n                description: Group administrative contact\n                master:\n                  type: PROFILE_MASTER\n                mutability: READ_WRITE\n                permissions:\n                  - action: READ_WRITE\n                    principal: SELF\n                scope: NONE\n                title: Group administrative contact\n                type: string\n            required: []\n            type: object\n        description: Okta group profile template\n        id: https://{yourOktaDomain}/meta/schemas/group/default\n        lastUpdated: '2021-02-25T23:05:31.000Z'\n        name: group\n        properties:\n          profile:\n            allOf:\n              - $ref: '#/definitions/custom'\n              - $ref: '#/definitions/base'\n        title: Okta group\n        type: object\n    LinkBrandDomain:\n      value:\n        domainId: OcD11vyscTlIkpC7i0g4\n        _links:\n          self:\n            href: https://{yourOktaDomain}/api/v1/brands/bnd114iNkrcN6aR680g4/domains/OcD11vyscTlIkpC7i0g4\n            hints:\n              allow:\n                - PUT\n                - DELETE\n          brand:\n            href: https://{yourOktaDomain}/api/v1/brands/bnd114iNkrcN6aR680g4\n            hints:\n              allow:\n                - GET\n                - PUT\n                - DELETE\n          domain:\n            href: https://{yourOktaDomain}/api/v1/domains/OcD11vyscTlIkpC7i0g4\n            hints:\n              allow:\n                - GET\n                - PUT\n                - DELETE\n    ListBrandsResponse:\n      value:\n        - id: bnd114iNkrcN6aR680g4\n          name: Okta Default\n          isDefault: true\n          removePoweredByOkta: false\n          customPrivacyPolicyUrl: null\n          _links:\n            self:\n              href: https://{yourOktaDomain}/api/v1/brands/bnd114iNkrcN6aR680g4\n              hints:\n                allow:\n                  - GET\n                  - PUT\n                  - DELETE\n            themes:\n              href: https://{yourOktaDomain}/api/v1/brands/bnd114iNkrcN6aR680g4/themes\n              hints:\n                allow:\n                  - GET\n    ListEmailCustomizationResponse:\n      value:\n        - language: en\n          isDefault: true\n          subject: Welcome to ${org.name}!\n          body: \u003c!DOCTYPE html\u003e\u003chtml\u003e\u003cbody\u003e\u003cp\u003eHello, ${user.profile.firstName}. Click \u003ca href=\"${activationLink}\"\u003ehere\u003c/a\u003e to activate your account.\u003c/body\u003e\u003c/html\u003e\n          id: oel11u6DqUiMbQkpl0g4\n          created: 2021-11-09T20:38:10.000Z\n          lastUpdated: 2021-11-11T20:38:10.000Z\n          _links:\n            self:\n              href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/customizations/oel11u6DqUiMbQkpl0g4\n              hints:\n                allow:\n                  - GET\n                  - PUT\n                  - DELETE\n            template:\n              href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation\n              hints:\n                allow:\n                  - GET\n            preview:\n              href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/customizations/oel11u6DqUiMbQkpl0g4/preview\n              hints:\n                allow:\n                  - GET\n            test:\n              href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/test\n              hints:\n                allow:\n                  - POST\n    ListEmailTemplateResponse:\n      value:\n        - name: UserActivation\n          _links:\n            self:\n              href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation\n              hints:\n                allow:\n                  - GET\n            settings:\n              href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/settings\n              hints:\n                allow:\n                  - GET\n                  - PUT\n            defaultContent:\n              href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/default-content\n              hints:\n                allow:\n                  - GET\n            customizations:\n              href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/customizations\n              hints:\n                allow:\n                  - GET\n                  - POST\n                  - DELETE\n            test:\n              href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/test\n              hints:\n                allow:\n                  - POST\n    ListUsersResponse:\n      value:\n        - id: 00u118oQYT4TBGuay0g4\n          status: ACTIVE\n          created: 2022-04-04T15:56:05.000Z\n          activated: null\n          statusChanged: null\n          lastLogin: 2022-05-04T19:50:52.000Z\n          lastUpdated: 2022-05-05T18:15:44.000Z\n          passwordChanged: 2022-04-04T16:00:22.000Z\n          type:\n            id: oty1162QAr8hJjTaq0g4\n          profile:\n            firstName: Alice\n            lastName: Smith\n            mobilePhone: null\n            secondEmail: null\n            login: alice.smith@example.com\n            email: alice.smith@example.com\n          credentials:\n            password: {}\n            provider:\n              type: OKTA\n              name: OKTA\n          _links:\n            self:\n              href: http://your-subdomain.okta.com/api/v1/users/00u118oQYT4TBGuay0g4\n    LogStreamRequest:\n      value:\n        type: aws_eventbridge\n        name: Example AWS EventBridge\n        settings:\n          eventSourceName: your-event-source-name\n          accountId: '123456789012'\n          region: us-east-2\n    LogStreamResponse:\n      value:\n        id: 0oa1orqUGCIoCGNxf0g4\n        type: aws_eventbridge\n        name: Example AWS EventBridge\n        lastUpdated: '2021-10-21T16:55:30.000Z'\n        created: '2021-10-21T16:55:29.000Z'\n        status: ACTIVE\n        settings:\n          accountId: '123456789012'\n          eventSourceName: your-event-source-name\n          region: us-east-2\n        _links:\n          self:\n            href: http://{yourOktaDomain}/api/v1/logStreams/0oa1orqUGCIoCGNxf0g4\n            method: GET\n          deactivate:\n            href: http://{yourOktaDomain}/api/v1/logStreams/0oa1orqUGCIoCGNxf0g4/lifecycle/deactivate\n            method: POST\n    LogStreamSchemaAws:\n      value: \u0026ref_4\n        $schema: https://json-schema.org/draft/2020-12/schema\n        $id: http://{yourOktaDomain}/api/v1/meta/schemas/logStream/aws_eventbridge\n        title: AWS EventBridge\n        type: object\n        properties:\n          settings:\n            description: Configuration properties specific to AWS EventBridge\n            type: object\n            properties:\n              accountId:\n                title: AWS Account ID\n                description: Your Amazon AWS Account ID.\n                type: string\n                writeOnce: true\n                pattern: ^\\d{12}$\n              eventSourceName:\n                title: AWS Event Source Name\n                description: An alphanumeric name (no spaces) to identify this event source in AWS EventBridge.\n                type: string\n                writeOnce: true\n                pattern: ^[\\.\\-_A-Za-z0-9]{1,75}$\n              region:\n                title: AWS Region\n                description: The destination AWS region for your system log events.\n                type: string\n                writeOnce: true\n                oneOf:\n                  - title: US East (Ohio)\n                    const: us-east-2\n                  - title: US East (N. Virginia)\n                    const: us-east-1\n                  - title: US West (N. California)\n                    const: us-west-1\n                  - title: US West (Oregon)\n                    const: us-west-2\n                  - title: Canada (Central)\n                    const: ca-central-1\n                  - title: Europe (Frankfurt)\n                    const: eu-central-1\n                  - title: Europe (Ireland)\n                    const: eu-west-1\n                  - title: Europe (London)\n                    const: eu-west-2\n                  - title: Europe (Paris)\n                    const: eu-west-3\n                  - title: Europe (Milan)\n                    const: eu-south-1\n                  - title: Europe (Stockholm)\n                    const: eu-north-1\n            required:\n              - eventSourceName\n              - accountId\n              - region\n            errorMessage:\n              properties:\n                accountId: Account number must be 12 digits.\n                eventSourceName: Event source name can use numbers, letters, the symbols \".\", \"-\" or \"_\". It must use fewer than 76 characters.\n          name:\n            title: Name\n            description: A name for this log stream in Okta\n            type: string\n            writeOnce: false\n            pattern: ^.{1,100}$\n        required:\n          - name\n          - settings\n        errorMessage:\n          properties:\n            name: Name can't exceed 100 characters.\n    LogStreamSchemaList:\n      value:\n        - *ref_4\n        - \u0026ref_5\n          $schema: https://json-schema.org/draft/2020-12/schema\n          $id: http://{yourOktaDomain}/api/v1/meta/schemas/logStream/splunk_cloud_logstreaming\n          title: Splunk Cloud\n          type: object\n          properties:\n            settings:\n              description: Configuration properties specific to Splunk Cloud\n              type: object\n              properties:\n                host:\n                  title: Host\n                  description: 'The domain for your Splunk Cloud instance without http or https. For example: acme.splunkcloud.com'\n                  type: string\n                  writeOnce: false\n                  pattern: ^([a-z0-9]+(-[a-z0-9]+)*){1,100}\\.splunkcloud(gc|fed)?\\.com$\n                token:\n                  title: HEC Token\n                  description: The token from your Splunk Cloud HTTP Event Collector (HEC).\n                  type: string\n                  writeOnce: false\n                  pattern: '[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}'\n              required:\n                - host\n                - token\n              errorMessage:\n                properties:\n                  host: 'Host should be a domain without http or https. For example: acme.splunkcloud.com'\n            name:\n              title: Name\n              description: A name for this log stream in Okta\n              type: string\n              writeOnce: false\n              pattern: ^.{1,100}$\n          required:\n            - name\n            - settings\n          errorMessage:\n            properties:\n              name: Name can't exceed 100 characters.\n    LogStreamSchemaSplunk:\n      value: *ref_5\n    PerClientRateLimitSettingsEnforceDefault:\n      value:\n        defaultMode: ENFORCE\n    PerClientRateLimitSettingsEnforceDefaultWithOverrides:\n      value:\n        defaultMode: ENFORCE\n        useCaseModeOverrides:\n          OAUTH2_AUTHORIZE: PREVIEW\n          OIE_APP_INTENT: DISABLE\n    PerClientRateLimitSettingsPreviewDefaultWithOverrides:\n      value:\n        defaultMode: PREVIEW\n        useCaseModeOverrides:\n          LOGIN_PAGE: ENFORCE\n    PermissionResponse:\n      value:\n        label: okta.users.manage\n        created: '2021-02-06T16:20:57.000Z'\n        lastUpdated: '2021-02-06T16:20:57.000Z'\n        _links:\n          role:\n            href: https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3\n          self:\n            href: https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3/permissions/okta.users.manage\n    PermissionsResponse:\n      value:\n        permissions:\n          - label: okta.users.create\n            created: '2021-02-06T16:20:57.000Z'\n            lastUpdated: '2021-02-06T16:20:57.000Z'\n            _links:\n              role:\n                href: https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3\n              self:\n                href: https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3/permissions/okta.users.create\n          - label: okta.users.read\n            created: '2021-02-06T16:20:57.000Z'\n            lastUpdated: '2021-02-06T16:20:57.000Z'\n            _links:\n              role:\n                href: https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3\n              self:\n                href: https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3/permissions/okta.users.read\n          - label: okta.groups.read\n            created: '2021-02-06T16:20:57.000Z'\n            lastUpdated: '2021-02-06T16:20:57.000Z'\n            _links:\n              role:\n                href: https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3\n              self:\n                href: https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3/permissions/okta.groups.read\n          - label: okta.users.userprofile.manage\n            created: '2021-02-06T16:20:57.000Z'\n            lastUpdated: '2021-02-06T16:20:57.000Z'\n            _links:\n              role:\n                href: https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3\n              self:\n                href: https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3/permissions/okta.users.userprofile.manage\n    PreviewEmailCustomizationResponse:\n      value:\n        subject: Welcome to Okta!\n        body: \u003c!DOCTYPE html\u003e\u003chtml\u003e\u003cbody\u003e\u003cp\u003eHello, John. Click \u003ca href=\"https://{yourOktaDomain}/...\"\u003ehere\u003c/a\u003e to activate your account.\u003c/body\u003e\u003c/html\u003e\n        _links:\n          self:\n            href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/customizations/oel2kk1zYJBJbeaGo0g4/preview\n            hints:\n              allow:\n                - GET\n          template:\n            href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation\n            hints:\n              allow:\n                - GET\n          test:\n            href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/test\n            hints:\n              allow:\n                - POST\n    PreviewEmailTemplateDefaultContentResponse:\n      value:\n        subject: Welcome to Okta!\n        body: \u003c!DOCTYPE html\u003e\u003chtml\u003e\u003cbody\u003e\u003cp\u003eHello, John. Click \u003ca href=\"https://{yourOktaDomain}/...\"\u003ehere\u003c/a\u003e to activate your account.\u003c/body\u003e\u003c/html\u003e\n        _links:\n          self:\n            href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/default-content/preview\n            hints:\n              allow:\n                - GET\n          template:\n            href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation\n            hints:\n              allow:\n                - GET\n          defaultContent:\n            href: https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/test/default-content\n            hints:\n              allow:\n                - POST\n    PrincipalRateLimitEntityRequestEmptyPercentages:\n      value:\n        principalId: token1234\n        principalType: SSWS_TOKEN\n    PrincipalRateLimitEntityRequestSSWSToken:\n      value:\n        principalId: token1234\n        principalType: SSWS_TOKEN\n        defaultPercentage: 50\n        defaultConcurrencyPercentage: 75\n    PrincipalRateLimitEntityResponseSSWSToken:\n      value:\n        id: abcd1234\n        orgId: org1234\n        principalId: token1234\n        principalType: SSWS_TOKEN\n        defaultPercentage: 50\n        defaultConcurrencyPercentage: 75\n        createdDate: '2022-05-19T20:05:32.720Z'\n        createdBy: user1234\n        lastUpdate: '2022-05-20T21:13:07.410Z'\n        lastUpdatedBy: user4321\n    PushProviderAPNsRequest:\n      value:\n        name: APNs Example\n        providerType: APNS\n        configuration:\n          keyId: KEY_ID\n          teamId: TEAM_ID\n          tokenSigningKey: '-----BEGIN PRIVATE KEY-----\\nPRIVATE_KEY\\n-----END PRIVATE KEY-----\\n'\n          fileName: fileName.p8\n    PushProviderAPNsResponse:\n      value:\n        id: ppctekcmngGaqeiBxB0g4\n        name: APNs Example\n        providerType: APNS\n        lastUpdatedDate: 2022-01-01T00:00:00.000Z\n        configuration:\n          keyId: KEY_ID\n          teamId: TEAM_ID\n          fileName: fileName.p8\n        _links:\n          self:\n            href: https://your-subdomain.okta.com/api/v1/push-providers/ppctekcmngGaqeiBxB0g4\n            hints:\n              allow:\n                - DELETE\n                - GET\n                - PUT\n    PushProviderFCMRequest:\n      value:\n        name: FCM Example\n        providerType: FCM\n        configuration:\n          serviceAccountJson:\n            type: service_account\n            project_id: PROJECT_ID\n            private_key_id: KEY_ID\n            private_key: '-----BEGIN PRIVATE KEY-----\\nPRIVATE_KEY\\n-----END PRIVATE KEY-----\\n'\n            client_email: SERVICE_ACCOUNT_EMAIL\n            client_id: CLIENT_ID\n            auth_uri: https://accounts.google.com/o/oauth2/auth\n            token_uri: https://accounts.google.com/o/oauth2/token\n            auth_provider_x509_cert_url: https://www.googleapis.com/oauth2/v1/certs\n            client_x509_cert_url: https://www.googleapis.com/robot/v1/metadata/x509/SERVICE_ACCOUNT_EMAIL\n          fileName: fileName.json\n    PushProviderFCMResponse:\n      value:\n        id: ppctekcmngGaqeiBxB0g4\n        name: FCM Example\n        providerType: FCM\n        lastUpdatedDate: 2022-01-01T00:00:00.000Z\n        configuration:\n          projectId: PROJECT_ID\n          fileName: fileName.p8\n        _links:\n          self:\n            href: https://your-subdomain.okta.com/api/v1/push-providers/ppctekcmngGaqeiBxB0g4\n            hints:\n              allow:\n                - DELETE\n                - GET\n                - PUT\n    RateLimitAdminNotificationsDisabled:\n      value:\n        notificationsEnabled: false\n    RateLimitAdminNotificationsEnabled:\n      value:\n        notificationsEnabled: true\n    ResourceSetBindingAddMembersRequestExample:\n      value:\n        additions:\n          - https://{yourOktaDomain}/api/v1/groups/00guaxWZ0AOa5NFAj0g3\n          - https://{yourOktaDomain}/api/v1/users/00u67DU2qNCjNZYO0g3\n    ResourceSetBindingCreateRequestExample:\n      value:\n        role: cr0Yq6IJxGIr0ouum0g3\n        members:\n          - https://{yourOktaDomain}/api/v1/groups/00guaxWZ0AOa5NFAj0g3\n    ResourceSetBindingMemberResponse:\n      value:\n        id: irb1qe6PGuMc7Oh8N0g4\n        created: '2021-02-06T16:20:57.000Z'\n        lastUpdated: '2021-02-06T16:20:57.000Z'\n        _links:\n          self:\n            href: https://{yourOktaDomain}/api/v1/users/00uuk41Hjga5qGfQ30g3\n    ResourceSetBindingMembersResponse:\n      value:\n        members:\n          - id: irb1qe6PGuMc7Oh8N0g4\n            created: '2021-02-06T16:20:57.000Z'\n            lastUpdated: '2021-02-06T16:20:57.000Z'\n            _links:\n              self:\n                href: https://{yourOktaDomain}/api/v1/users/00uuk41Hjga5qGfQ30g3\n          - id: irb1q92TFAHzySt3x0g4\n            created: '2021-02-06T16:20:57.000Z'\n            lastUpdated: '2021-02-06T16:20:57.000Z'\n            _links:\n              self:\n                href: https://{yourOktaDomain}/api/v1/groups/00guaxWZ0AOa5NFAj0g3\n        _links:\n          binding:\n            href: https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/bindings/cr0Yq6IJxGIr0ouum0g3\n          next:\n            href: https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/bindings/cr0Yq6IJxGIr0ouum0g3/members?after=0ouRq6IJmGIr3ouum0g3\n    ResourceSetBindingResponseExample:\n      value:\n        _links:\n          self:\n            href: https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/bindings/cr0Yq6IJxGIr0ouum0g3\n          bindings:\n            href: https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/bindings\n          resource-set:\n            href: https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g\n    ResourceSetBindingResponseWithIdExample:\n      value:\n        id: cr0Yq6IJxGIr0ouum0g3\n        _links:\n          self:\n            href: https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/bindings/cr0Yq6IJxGIr0ouum0g3\n          bindings:\n            href: https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/bindings\n          resource-set:\n            href: https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g\n    ResourceSetBindingsResponse:\n      value:\n        roles:\n          - id: cr0WxyzJxGIr0ouum0g4\n            _links:\n              self:\n                href: https://{yourOktaDomain}/api/v1/iam/roles/cr0WxyzJxGIr0ouum0g4\n              members:\n                href: https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/bindings/cr0WxyzJxGIr0ouum0g4/members\n        _links:\n          self:\n            href: https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/bindings\n          resource-set:\n            href: https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g\n          next:\n            href: https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/bindings?after=cr0WxyzJxGIr0ouum0g4\n    ResourceSetRequest:\n      value:\n        label: SF-IT-People\n        description: People in the IT department of San Francisco\n        resources:\n          - https://{yourOktaDomain}/api/v1/groups/00guaxWZ0AOa5NFAj0g3\n          - https://{yourOktaDomain}/api/v1/groups/00gu67DU2qNCjNZYO0g3/users\n          - https://{yourOktaDomain}/api/v1/users\n    ResourceSetResourcePatchRequestExample:\n      value:\n        additions:\n          - https://{yourOktaDomain}/api/v1/groups/00guaxWZ0AOa5NFAj0g3\n          - https://{yourOktaDomain}/api/v1/groups/00gu67DU2qNCjNZYO0g3/users\n    ResourceSetResourcesResponse:\n      value:\n        resources:\n          - id: ire106sQKoHoXXsAe0g4\n            created: '2021-02-06T16:20:57.000Z'\n            lastUpdated: '2021-02-06T16:20:57.000Z'\n            _links:\n              self:\n                href: https://{yourOktaDomain}/api/v1/groups/00guaxWZ0AOa5NFAj0g3\n          - id: ire106riDrTYl4qA70g4\n            created: '2021-02-06T16:20:57.000Z'\n            lastUpdated: '2021-02-06T16:20:57.000Z'\n            _links:\n              self:\n                href: https://{yourOktaDomain}/api/v1/groups/00gu67DU2qNCjNZYO0g3/users\n          - id: irezvo4AwE2ngpMw40g3\n            created: '2021-02-06T16:20:57.000Z'\n            lastUpdated: '2021-02-06T16:20:57.000Z'\n            _links:\n              users:\n                href: https://{yourOktaDomain}/api/v1/users\n              groups:\n                href: https://{yourOktaDomain}/api/v1/groups\n        _links:\n          next:\n            href: https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/resources?after=irezvn1ZZxLSIBM2J0g3\n          resource-set:\n            href: https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g\n    ResourceSetResponse:\n      value:\n        id: iamoJDFKaJxGIr0oamd9g\n        label: SF-IT-People\n        description: People in the IT department of San Francisco\n        created: '2021-02-06T16:20:57.000Z'\n        lastUpdated: '2021-02-06T16:20:57.000Z'\n        _links:\n          self:\n            href: https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g\n          resources:\n            href: https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/resources\n          bindings:\n            href: https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/bindings\n    ResourceSetsResponse:\n      value:\n        resource-sets:\n          - id: iamoJDFKaJxGIr0oamd9g\n            label: SF-IT-1\n            description: First San Francisco IT Resource Set\n            created: '2021-02-06T16:20:57.000Z'\n            lastUpdated: '2021-02-06T16:20:57.000Z'\n            _links:\n              self:\n                href: https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g\n              resources:\n                href: https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/resources\n              bindings:\n                href: https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/bindings\n          - id: iamoJDFKaJxGIr0oamd0q\n            label: SF-IT-2\n            description: Second San Francisco IT Resource Set\n            created: '2021-02-06T16:20:57.000Z'\n            lastUpdated: '2021-02-06T16:20:57.000Z'\n            _links:\n              self:\n                href: https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd0q\n              resources:\n                href: https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd0q/resources\n              bindings:\n                href: https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd0q/bindings\n        _links:\n          next:\n            href: https://{yourOktaDomain}/api/v1/iam/resource-sets?after=iamoJDFKaJxGIr0oamd0q\n    RiskEventsRequest:\n      value:\n        - timestamp: '2021-01-20T00:00:00.001Z'\n          subjects:\n            - ip: 6.7.6.7\n              riskLevel: MEDIUM\n            - ip: 1.1.1.1\n              riskLevel: HIGH\n              message: Detected Attack tooling and suspicious activity\n        - timestamp: '2021-01-20T01:00:00.001Z'\n          subjects:\n            - ip: 6.7.6.7\n              riskLevel: LOW\n            - ip: 2.2.2.2\n              riskLevel: HIGH\n    RiskProviderRequest:\n      value:\n        name: Risk-Partner-X\n        action: log_only\n        clientId: 00ckjsfgjkdkjdkkljjsd\n    RiskProviderResponse:\n      value:\n        id: 00rp12r4skkjkjgsn\n        action: log_only\n        name: Risk-Partner-X\n        clientId: 00ckjsfgjkdkjdkkljjsd\n        created: '2021-01-05 22:18:30'\n        lastUpdated: '2021-01-05 21:23:10'\n        _links:\n          self:\n            href: https://{yourOktaDomain}/api/v1/risk/providers/00rp12r4skkjkjgsn\n            hints:\n              allow:\n                - GET\n                - PUT\n    RoleRequest:\n      value:\n        label: UserCreator\n        description: Create users\n        permissions:\n          - okta.users.create\n          - okta.users.read\n          - okta.groups.read\n          - okta.users.userprofile.manage\n    RoleResponse:\n      value:\n        id: cr0Yq6IJxGIr0ouum0g3\n        label: UserCreator\n        description: Create users\n        created: '2021-02-06T16:20:57.000Z'\n        lastUpdated: '2021-02-06T16:20:57.000Z'\n        _links:\n          permissions:\n            href: https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3/permissions\n          self:\n            href: https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3\n    RolesResponse:\n      value:\n        roles:\n          - id: cr0Yq6IJxGIr0ouum0g3\n            label: UserCreator\n            description: Create users\n            created: '2021-02-06T16:20:57.000Z'\n            lastUpdated: '2021-02-06T16:20:57.000Z'\n            _links:\n              permissions:\n                href: https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3/permissions\n              self:\n                href: https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3\n          - id: cr0Fw7HKcWIroo88m3r1\n            label: GroupMembershipManager\n            description: Manage group membership\n            created: '2021-02-06T16:20:57.000Z'\n            lastUpdated: '2021-02-06T16:20:57.000Z'\n            _links:\n              permissions:\n                href: https://{yourOktaDomain}/api/v1/iam/roles/cr0Fw7HKcWIroo88m3r1/permissions\n              self:\n                href: https://{yourOktaDomain}/api/v1/iam/roles/cr0Fw7HKcWIroo88m3r1\n        _links:\n          next:\n            href: https://{yourOktaDomain}/api/v1/iam/roles?after=cr0Fw7HKcWIroo88m3r1\n    UpdateBrandRequest:\n      value:\n        customPrivacyPolicyUrl: https://www.someHost.com/privacy-policy\n        agreeToCustomPrivacyPolicy: true\n        removePoweredByOkta: true\n        name: New Name For Brand\n    UpdateBrandResponse:\n      value:\n        id: bnd114iNkrcN6aR680g4\n        removePoweredByOkta: true\n        agreeToCustomPrivacyPolicy: true\n        name: New Name For Brand\n        isDefault: true\n        customPrivacyPolicyUrl: https://www.someHost.com/privacy-policy\n        _links:\n          self:\n            href: https://{yourOktaDomain}/api/v1/brands/bnd114iNkrcN6aR680g4\n            hints:\n              allow:\n                - GET\n                - PUT\n                - DELETE\n          themes:\n            href: https://{yourOktaDomain}/api/v1/brands/bnd114iNkrcN6aR680g4/themes\n            hints:\n              allow:\n                - GET\n    UserSchemaAddRequest:\n      value:\n        definitions:\n          custom:\n            id: '#custom'\n            type: object\n            properties:\n              twitterUserName:\n                title: Twitter username\n                description: Twitter Username\n                type: string\n                required: false\n                minLength: 1\n                maxLength: 20\n                permissions:\n                  - principal: SELF\n                    action: READ_WRITE\n            required: []\n    UserSchemaResponse:\n      value:\n        id: https://{yourOktaDomain}/meta/schemas/user/default\n        $schema: http://json-schema.org/draft-04/schema#\n        name: user\n        title: Default Okta User\n        lastUpdated: '2015-09-05T10:40:45.000Z'\n        created: '2015-02-02T10:27:36.000Z'\n        definitions:\n          base:\n            id: '#base'\n            type: object\n            properties:\n              login:\n                title: Username\n                type: string\n                required: true\n                minLength: 5\n                maxLength: 100\n                permissions:\n                  - principal: SELF\n                    action: READ_WRITE\n              firstName:\n                title: First name\n                type: string\n                required: true\n                minLength: 1\n                maxLength: 50\n                permissions:\n                  - principal: SELF\n                    action: READ_WRITE\n              lastName:\n                title: Last name\n                type: string\n                required: true\n                minLength: 1\n                maxLength: 50\n                permissions:\n                  - principal: SELF\n                    action: READ_WRITE\n              email:\n                title: Primary email\n                type: string\n                required: true\n                format: email\n                permissions:\n                  - principal: SELF\n                    action: READ_WRITE\n            required:\n              - login\n              - firstName\n              - lastName\n              - email\n          custom:\n            id: '#custom'\n            type: object\n            properties:\n              twitterUserName:\n                title: Twitter username\n                description: User's username for twitter.com\n                type: string\n                required: false\n                minLength: 1\n                maxLength: 20\n                permissions:\n                  - principal: SELF\n                    action: READ_WRITE\n            required: []\n        type: object\n        properties:\n          profile:\n            allOf:\n              - $ref: '#/definitions/base'\n              - $ref: '#/definitions/custom'\n    WellKnownOrgMetadataResponseClassic:\n      value:\n        id: 00o5rb5mt2H3d1TJd0h7\n        _links:\n          organization:\n            href: https://{{yourOktaDomain}}\n        pipeline: v1\n        settings:\n          analyticsCollectionEnabled: false\n          bugReportingEnabled: true\n          omEnabled: true\n    WellKnownOrgMetadataResponseCustomUrlOie:\n      value:\n        id: 00o47wwoytgsDqEtz0g7\n        _links:\n          organization:\n            href: https://{{yourSubdomain}}.okta.com\n          alternate:\n            href: https://{{yourCustomDomain}}\n        pipeline: idx\n        settings:\n          analyticsCollectionEnabled: false\n          bugReportingEnabled: true\n          omEnabled: false\n  parameters:\n    pathApiTokenId:\n      name: apiTokenId\n      in: path\n      schema:\n        type: string\n        example: 00Tabcdefg1234567890\n      required: true\n      description: id of the API Token\n    pathBehaviorId:\n      name: behaviorId\n      in: path\n      schema:\n        type: string\n        example: abcd1234\n      required: true\n      description: id of the Behavior Detection Rule\n    pathBrandId:\n      name: brandId\n      in: path\n      required: true\n      schema:\n        type: string\n      description: The ID of the brand.\n    pathCaptchaId:\n      name: captchaId\n      in: path\n      schema:\n        type: string\n        example: abcd1234\n      required: true\n      description: id of the CAPTCHA\n    pathCustomizationId:\n      name: customizationId\n      in: path\n      required: true\n      schema:\n        type: string\n      description: The ID of the email customization.\n    pathDeviceAssuranceId:\n      in: path\n      name: deviceAssuranceId\n      required: true\n      description: Id of the Device Assurance Policy\n      schema:\n        type: string\n    pathDeviceId:\n      name: deviceId\n      in: path\n      schema:\n        type: string\n        example: guo4a5u7JHHhjXrMK0g4\n      required: true\n      description: '`id` of the device'\n    pathDomainId:\n      name: domainId\n      in: path\n      required: true\n      schema:\n        type: string\n      description: The ID of the domain.\n    pathEmailDomainId:\n      name: emailDomainId\n      in: path\n      required: true\n      schema:\n        type: string\n        description: The ID of the email domain.\n    pathLogStreamId:\n      name: logStreamId\n      in: path\n      schema:\n        type: string\n        example: abcd1234\n      required: true\n      description: id of the log stream\n    pathMemberId:\n      name: memberId\n      in: path\n      schema:\n        type: string\n        example: irb1qe6PGuMc7Oh8N0g4\n      required: true\n      description: '`id` of a member'\n    pathPermissionType:\n      name: permissionType\n      in: path\n      schema:\n        type: string\n        example: okta.users.manage\n      required: true\n      description: An okta permission type\n    pathPoolId:\n      name: poolId\n      in: path\n      description: Id of the agent pool for which the settings will apply\n      schema:\n        type: string\n      required: true\n    pathPrincipalRateLimitId:\n      name: principalRateLimitId\n      in: path\n      schema:\n        type: string\n        example: abcd1234\n      required: true\n      description: id of the Principal Rate Limit\n    pathPushProviderId:\n      in: path\n      name: pushProviderId\n      required: true\n      description: Id of the push provider\n      schema:\n        type: string\n    pathResourceId:\n      name: resourceId\n      in: path\n      schema:\n        type: string\n        example: ire106sQKoHoXXsAe0g4\n      required: true\n      description: '`id` of a resource'\n    pathResourceSetId:\n      name: resourceSetId\n      in: path\n      schema:\n        type: string\n        example: iamoJDFKaJxGIr0oamd9g\n      required: true\n      description: '`id` of a resource set'\n    pathRiskProviderId:\n      name: riskProviderId\n      in: path\n      schema:\n        type: string\n        example: 00rp12r4skkjkjgsn\n      required: true\n      description: '`id` of the risk provider'\n    pathRoleIdOrLabel:\n      name: roleIdOrLabel\n      in: path\n      schema:\n        type: string\n        example: cr0Yq6IJxGIr0ouum0g3\n      required: true\n      description: '`id` or `label` of the role'\n    pathTemplateName:\n      name: templateName\n      in: path\n      required: true\n      schema:\n        type: string\n      description: The name of the email template.\n    pathThemeId:\n      name: themeId\n      in: path\n      required: true\n      schema:\n        type: string\n      description: The ID of the theme.\n    pathUpdateId:\n      name: updateId\n      in: path\n      description: Id of the update\n      schema:\n        type: string\n      required: true\n    pathUserId:\n      name: userId\n      in: path\n      required: true\n      schema:\n        type: string\n    queryAfter:\n      name: after\n      in: query\n      schema:\n        type: string\n      description: The cursor to use for pagination. It is an opaque string that specifies your current location in the list and is obtained from the `Link` response header. See [Pagination](/#pagination) for more information.\n    queryExpandEmailTemplate:\n      name: expand\n      in: query\n      style: form\n      explode: false\n      required: false\n      schema:\n        type: array\n        items:\n          type: string\n          enum:\n            - settings\n            - customizationCount\n      description: Specifies additional metadata to be included in the response.\n    queryExpandPageRoot:\n      name: expand\n      in: query\n      style: form\n      explode: false\n      required: false\n      schema:\n        type: array\n        items:\n          type: string\n          enum:\n            - default\n            - customized\n            - customizedUrl\n            - preview\n            - previewUrl\n      description: Specifies additional metadata to be included in the response.\n    queryLanguage:\n      name: language\n      schema:\n        $ref: '#/components/schemas/Language'\n      in: query\n      description: The language to use for the email. Defaults to the current user's language if unspecified.\n    queryLimit:\n      name: limit\n      in: query\n      schema:\n        type: integer\n        minimum: 1\n        maximum: 200\n        default: 20\n      description: A limit on the number of objects to return.\n    queryLimitPerPoolType:\n      name: limitPerPoolType\n      in: query\n      schema:\n        type: integer\n        default: 5\n      required: false\n      description: Maximum number of AgentPools being returned\n    queryPoolType:\n      name: poolType\n      in: query\n      schema:\n        $ref: '#/components/schemas/AgentType'\n      required: false\n      description: Agent type to search for\n    queryScheduled:\n      name: scheduled\n      in: query\n      description: Scope the list only to scheduled or ad-hoc updates. If the parameter is not provided we will return the whole list of updates.\n      schema:\n        type: boolean\n      required: false\n  schemas:\n    APNSConfiguration:\n      properties:\n        fileName:\n          type: string\n          description: (Optional) File name for Admin Console display\n        keyId:\n          type: string\n          description: 10-character Key ID obtained from the Apple developer account\n        teamId:\n          type: string\n          description: 10-character Team ID used to develop the iOS app\n        tokenSigningKey:\n          type: string\n          description: APNs private authentication token signing key\n          writeOnly: true\n    APNSPushProvider:\n      allOf:\n        - $ref: '#/components/schemas/PushProvider'\n        - type: object\n          properties:\n            configuration:\n              $ref: '#/components/schemas/APNSConfiguration'\n    AccessPolicy:\n      allOf:\n        - $ref: '#/components/schemas/Policy'\n        - type: object\n          properties:\n            conditions:\n              $ref: '#/components/schemas/PolicyRuleConditions'\n    AccessPolicyConstraint:\n      type: object\n      properties:\n        methods:\n          items:\n            type: string\n          type: array\n        reauthenticateIn:\n          type: string\n        types:\n          items:\n            type: string\n          type: array\n    AccessPolicyConstraints:\n      type: object\n      properties:\n        knowledge:\n          $ref: '#/components/schemas/KnowledgeConstraint'\n        possession:\n          $ref: '#/components/schemas/PossessionConstraint'\n    AccessPolicyRule:\n      allOf:\n        - $ref: '#/components/schemas/PolicyRule'\n        - type: object\n          properties:\n            actions:\n              $ref: '#/components/schemas/AccessPolicyRuleActions'\n            conditions:\n              $ref: '#/components/schemas/AccessPolicyRuleConditions'\n    AccessPolicyRuleActions:\n      allOf:\n        - $ref: '#/components/schemas/PolicyRuleActions'\n        - type: object\n          properties:\n            appSignOn:\n              $ref: '#/components/schemas/AccessPolicyRuleApplicationSignOn'\n    AccessPolicyRuleApplicationSignOn:\n      type: object\n      properties:\n        access:\n          type: string\n        verificationMethod:\n          $ref: '#/components/schemas/VerificationMethod'\n    AccessPolicyRuleConditions:\n      allOf:\n        - $ref: '#/components/schemas/PolicyRuleConditions'\n        - type: object\n          properties:\n            device:\n              $ref: '#/components/schemas/DeviceAccessPolicyRuleCondition'\n            elCondition:\n              $ref: '#/components/schemas/AccessPolicyRuleCustomCondition'\n            userType:\n              $ref: '#/components/schemas/UserTypeCondition'\n    AccessPolicyRuleCustomCondition:\n      properties:\n        condition:\n          type: string\n    AcsEndpoint:\n      type: object\n      properties:\n        index:\n          type: integer\n        url:\n          type: string\n    ActivateFactorRequest:\n      type: object\n      properties:\n        attestation:\n          type: string\n        clientData:\n          type: string\n        passCode:\n          type: string\n        registrationData:\n          type: string\n        stateToken:\n          type: string\n    Agent:\n      description: Agent details\n      type: object\n      properties:\n        id:\n          type: string\n          readOnly: true\n        isHidden:\n          type: boolean\n        isLatestGAedVersion:\n          type: boolean\n        lastConnection:\n          type: string\n          format: date-time\n        name:\n          type: string\n        operationalStatus:\n          $ref: '#/components/schemas/OperationalStatus'\n        poolId:\n          type: string\n        type:\n          $ref: '#/components/schemas/AgentType'\n        updateMessage:\n          type: string\n        updateStatus:\n          $ref: '#/components/schemas/AgentUpdateInstanceStatus'\n        version:\n          type: string\n        _links:\n          $ref: '#/components/schemas/HrefObject'\n    AgentPool:\n      description: An AgentPool is a collection of agents that serve a common purpose. An AgentPool has a unique ID within an org, and contains a collection of agents disjoint to every other AgentPool (i.e. no two AgentPools share an Agent).\n      type: object\n      properties:\n        agents:\n          type: array\n          items:\n            $ref: '#/components/schemas/Agent'\n        id:\n          type: string\n          readOnly: true\n        name:\n          type: string\n        operationalStatus:\n          $ref: '#/components/schemas/OperationalStatus'\n        type:\n          $ref: '#/components/schemas/AgentType'\n    AgentPoolUpdate:\n      description: Various information about agent auto update configuration\n      type: object\n      properties:\n        agents:\n          type: array\n          items:\n            $ref: '#/components/schemas/Agent'\n        agentType:\n          $ref: '#/components/schemas/AgentType'\n        enabled:\n          type: boolean\n        id:\n          type: string\n          readOnly: true\n        name:\n          type: string\n        notifyAdmin:\n          type: boolean\n        reason:\n          type: string\n        schedule:\n          $ref: '#/components/schemas/AutoUpdateSchedule'\n        sortOrder:\n          type: integer\n        status:\n          $ref: '#/components/schemas/AgentUpdateJobStatus'\n        targetVersion:\n          type: string\n        _links:\n          $ref: '#/components/schemas/HrefObject'\n    AgentPoolUpdateSetting:\n      description: Setting for auto-update\n      type: object\n      properties:\n        agentType:\n          $ref: '#/components/schemas/AgentType'\n        continueOnError:\n          type: boolean\n        latestVersion:\n          type: string\n        minimalSupportedVersion:\n          type: string\n        poolId:\n          type: string\n          readOnly: true\n        poolName:\n          type: string\n        releaseChannel:\n          $ref: '#/components/schemas/ReleaseChannel'\n    AgentType:\n      description: Agent types that are being monitored\n      type: string\n      enum:\n        - AD\n        - IWA\n        - LDAP\n        - MFA\n        - OPP\n        - RUM\n        - Radius\n    AgentUpdateInstanceStatus:\n      description: Status for one agent regarding the status to auto-update that agent\n      type: string\n      enum:\n        - Cancelled\n        - Failed\n        - InProgress\n        - PendingCompletion\n        - Scheduled\n        - Success\n    AgentUpdateJobStatus:\n      description: Overall state for the auto-update job from admin perspective\n      type: string\n      enum:\n        - Cancelled\n        - Failed\n        - InProgress\n        - Paused\n        - Scheduled\n        - Success\n    AllowedForEnum:\n      type: string\n      enum:\n        - any\n        - none\n        - recovery\n        - sso\n    ApiToken:\n      title: API Token\n      description: An API token for an Okta User. This token is NOT scoped any further and can be used for any API the user has permissions to call.\n      type: object\n      properties:\n        clientName:\n          type: string\n          readOnly: true\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n        expiresAt:\n          type: string\n          format: date-time\n          readOnly: true\n        id:\n          type: string\n          readOnly: true\n        lastUpdated:\n          type: string\n          format: date-time\n          readOnly: true\n        name:\n          type: string\n        tokenWindow:\n          $ref: '#/components/schemas/TimeDuration'\n        userId:\n          type: string\n        _link:\n          type: object\n          properties:\n            self:\n              $ref: '#/components/schemas/HrefObject'\n          readOnly: true\n      required:\n        - name\n    AppAndInstanceConditionEvaluatorAppOrInstance:\n      type: object\n      properties:\n        id:\n          type: string\n          readOnly: true\n        name:\n          type: string\n        type:\n          $ref: '#/components/schemas/AppAndInstanceType'\n    AppAndInstancePolicyRuleCondition:\n      type: object\n      properties:\n        exclude:\n          type: array\n          items:\n            $ref: '#/components/schemas/AppAndInstanceConditionEvaluatorAppOrInstance'\n        include:\n          type: array\n          items:\n            $ref: '#/components/schemas/AppAndInstanceConditionEvaluatorAppOrInstance'\n    AppAndInstanceType:\n      type: string\n      enum:\n        - APP\n        - APP_TYPE\n    AppInstancePolicyRuleCondition:\n      type: object\n      properties:\n        exclude:\n          type: array\n          items:\n            type: string\n        include:\n          type: array\n          items:\n            type: string\n    AppLink:\n      type: object\n      properties:\n        appAssignmentId:\n          type: string\n          readOnly: true\n        appInstanceId:\n          type: string\n          readOnly: true\n        appName:\n          type: string\n          readOnly: true\n        credentialsSetup:\n          type: boolean\n          readOnly: true\n        hidden:\n          type: boolean\n          readOnly: true\n        id:\n          type: string\n          readOnly: true\n        label:\n          type: string\n          readOnly: true\n        linkUrl:\n          type: string\n          readOnly: true\n        logoUrl:\n          type: string\n          readOnly: true\n        sortOrder:\n          type: integer\n          readOnly: true\n    AppUser:\n      type: object\n      properties:\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n        credentials:\n          $ref: '#/components/schemas/AppUserCredentials'\n        externalId:\n          type: string\n          readOnly: true\n        id:\n          type: string\n          readOnly: false\n        lastSync:\n          type: string\n          format: date-time\n          readOnly: true\n        lastUpdated:\n          type: string\n          format: date-time\n          readOnly: true\n        passwordChanged:\n          type: string\n          format: date-time\n          readOnly: true\n          nullable: true\n        profile:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n        scope:\n          type: string\n        status:\n          type: string\n          readOnly: true\n        statusChanged:\n          type: string\n          format: date-time\n          readOnly: true\n        syncState:\n          type: string\n          readOnly: true\n        _embedded:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n          readOnly: true\n        _links:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n          readOnly: true\n    AppUserCredentials:\n      type: object\n      properties:\n        password:\n          $ref: '#/components/schemas/AppUserPasswordCredential'\n        userName:\n          type: string\n    AppUserPasswordCredential:\n      type: object\n      properties:\n        value:\n          type: string\n          format: password\n    Application:\n      type: object\n      properties:\n        accessibility:\n          $ref: '#/components/schemas/ApplicationAccessibility'\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n        features:\n          type: array\n          items:\n            type: string\n        id:\n          type: string\n          readOnly: true\n        label:\n          $ref: '#/components/schemas/ApplicationLabel'\n        lastUpdated:\n          type: string\n          format: date-time\n          readOnly: true\n        licensing:\n          $ref: '#/components/schemas/ApplicationLicensing'\n        profile:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n        signOnMode:\n          $ref: '#/components/schemas/ApplicationSignOnMode'\n        status:\n          $ref: '#/components/schemas/ApplicationLifecycleStatus'\n        visibility:\n          $ref: '#/components/schemas/ApplicationVisibility'\n        _embedded:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n          readOnly: true\n        _links:\n          $ref: '#/components/schemas/ApplicationLinks'\n      discriminator:\n        propertyName: signOnMode\n        mapping:\n          AUTO_LOGIN: '#/components/schemas/AutoLoginApplication'\n          BASIC_AUTH: '#/components/schemas/BasicAuthApplication'\n          BOOKMARK: '#/components/schemas/BookmarkApplication'\n          BROWSER_PLUGIN: '#/components/schemas/BrowserPluginApplication'\n          OPENID_CONNECT: '#/components/schemas/OpenIdConnectApplication'\n          SAML_1_1: '#/components/schemas/SamlApplication'\n          SAML_2_0: '#/components/schemas/SamlApplication'\n          SECURE_PASSWORD_STORE: '#/components/schemas/SecurePasswordStoreApplication'\n          WS_FEDERATION: '#/components/schemas/WsFederationApplication'\n    ApplicationAccessibility:\n      type: object\n      properties:\n        errorRedirectUrl:\n          type: string\n        loginRedirectUrl:\n          type: string\n        selfService:\n          type: boolean\n    ApplicationCredentials:\n      type: object\n      properties:\n        signing:\n          $ref: '#/components/schemas/ApplicationCredentialsSigning'\n        userNameTemplate:\n          $ref: '#/components/schemas/ApplicationCredentialsUsernameTemplate'\n    ApplicationCredentialsOAuthClient:\n      type: object\n      properties:\n        autoKeyRotation:\n          type: boolean\n        client_id:\n          type: string\n        client_secret:\n          type: string\n        token_endpoint_auth_method:\n          $ref: '#/components/schemas/OAuthEndpointAuthenticationMethod'\n    ApplicationCredentialsScheme:\n      type: string\n      enum:\n        - ADMIN_SETS_CREDENTIALS\n        - EDIT_PASSWORD_ONLY\n        - EDIT_USERNAME_AND_PASSWORD\n        - EXTERNAL_PASSWORD_SYNC\n        - SHARED_USERNAME_AND_PASSWORD\n    ApplicationCredentialsSigning:\n      type: object\n      properties:\n        kid:\n          type: string\n        lastRotated:\n          type: string\n          format: date-time\n          readOnly: true\n        nextRotation:\n          type: string\n          format: date-time\n          readOnly: true\n        rotationMode:\n          type: string\n        use:\n          $ref: '#/components/schemas/ApplicationCredentialsSigningUse'\n    ApplicationCredentialsSigningUse:\n      type: string\n      enum:\n        - sig\n    ApplicationCredentialsUsernameTemplate:\n      type: object\n      properties:\n        pushStatus:\n          type: string\n        suffix:\n          type: string\n        template:\n          type: string\n        type:\n          type: string\n    ApplicationFeature:\n      type: object\n      properties:\n        capabilities:\n          $ref: '#/components/schemas/CapabilitiesObject'\n        description:\n          type: string\n        name:\n          type: string\n        status:\n          $ref: '#/components/schemas/EnabledStatus'\n        _links:\n          additionalProperties:\n            type: object\n          readOnly: true\n          type: object\n    ApplicationGroupAssignment:\n      type: object\n      properties:\n        id:\n          type: string\n          readOnly: true\n        lastUpdated:\n          type: string\n          format: date-time\n          readOnly: true\n        priority:\n          type: integer\n        profile:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n        _embedded:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n          readOnly: true\n        _links:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n          readOnly: true\n    ApplicationLabel:\n      type: string\n    ApplicationLayout:\n      type: object\n      properties:\n        elements:\n          type: array\n          items:\n            type: object\n            additionalProperties: true\n        label:\n          type: string\n        options:\n          type: object\n          additionalProperties: {}\n        rule:\n          type: object\n          properties:\n            effect:\n              type: string\n            condition:\n              $ref: '#/components/schemas/ApplicationLayoutRuleCondition'\n        scope:\n          type: string\n        type:\n          type: string\n    ApplicationLayoutRuleCondition:\n      type: object\n      properties:\n        schema:\n          type: object\n          additionalProperties: {}\n        scope:\n          type: string\n    ApplicationLicensing:\n      type: object\n      properties:\n        seatCount:\n          type: integer\n    ApplicationLifecycleStatus:\n      type: string\n      enum:\n        - ACTIVE\n        - DELETED\n        - INACTIVE\n      readOnly: true\n    ApplicationLinks:\n      additionalProperties: true\n      type: object\n      properties:\n        accessPolicy:\n          $ref: '#/components/schemas/HrefObject'\n        activate:\n          $ref: '#/components/schemas/HrefObject'\n        deactivate:\n          $ref: '#/components/schemas/HrefObject'\n        groups:\n          $ref: '#/components/schemas/HrefObject'\n        logo:\n          type: array\n          items:\n            $ref: '#/components/schemas/HrefObject'\n        metadata:\n          $ref: '#/components/schemas/HrefObject'\n        self:\n          $ref: '#/components/schemas/HrefObject'\n        users:\n          $ref: '#/components/schemas/HrefObject'\n      readOnly: true\n    ApplicationSettings:\n      type: object\n      properties:\n        identityStoreId:\n          type: string\n        implicitAssignment:\n          type: boolean\n        inlineHookId:\n          type: string\n        notes:\n          $ref: '#/components/schemas/ApplicationSettingsNotes'\n        notifications:\n          $ref: '#/components/schemas/ApplicationSettingsNotifications'\n    ApplicationSettingsNotes:\n      type: object\n      properties:\n        admin:\n          type: string\n        enduser:\n          type: string\n    ApplicationSettingsNotifications:\n      type: object\n      properties:\n        vpn:\n          $ref: '#/components/schemas/ApplicationSettingsNotificationsVpn'\n    ApplicationSettingsNotificationsVpn:\n      type: object\n      properties:\n        helpUrl:\n          type: string\n        message:\n          type: string\n        network:\n          $ref: '#/components/schemas/ApplicationSettingsNotificationsVpnNetwork'\n    ApplicationSettingsNotificationsVpnNetwork:\n      type: object\n      properties:\n        connection:\n          type: string\n        exclude:\n          type: array\n          items:\n            type: string\n        include:\n          type: array\n          items:\n            type: string\n    ApplicationSignOnMode:\n      type: string\n      enum:\n        - AUTO_LOGIN\n        - BASIC_AUTH\n        - BOOKMARK\n        - BROWSER_PLUGIN\n        - OPENID_CONNECT\n        - SAML_1_1\n        - SAML_2_0\n        - SECURE_PASSWORD_STORE\n        - WS_FEDERATION\n    ApplicationVisibility:\n      type: object\n      properties:\n        appLinks:\n          type: object\n          additionalProperties:\n            type: boolean\n        autoLaunch:\n          type: boolean\n        autoSubmitToolbar:\n          type: boolean\n        hide:\n          $ref: '#/components/schemas/ApplicationVisibilityHide'\n    ApplicationVisibilityHide:\n      type: object\n      properties:\n        iOS:\n          type: boolean\n        web:\n          type: boolean\n    AssignRoleRequest:\n      type: object\n      properties:\n        type:\n          $ref: '#/components/schemas/RoleType'\n    AuthenticationProvider:\n      type: object\n      properties:\n        name:\n          type: string\n        type:\n          $ref: '#/components/schemas/AuthenticationProviderType'\n    AuthenticationProviderType:\n      type: string\n      enum:\n        - ACTIVE_DIRECTORY\n        - FEDERATION\n        - IMPORT\n        - LDAP\n        - OKTA\n        - SOCIAL\n    Authenticator:\n      type: object\n      properties:\n        created:\n          format: date-time\n          readOnly: true\n          type: string\n        id:\n          readOnly: true\n          type: string\n        key:\n          type: string\n        lastUpdated:\n          format: date-time\n          readOnly: true\n          type: string\n        name:\n          type: string\n        provider:\n          $ref: '#/components/schemas/AuthenticatorProvider'\n        settings:\n          $ref: '#/components/schemas/AuthenticatorSettings'\n        status:\n          $ref: '#/components/schemas/AuthenticatorStatus'\n        type:\n          $ref: '#/components/schemas/AuthenticatorType'\n        _links:\n          additionalProperties:\n            type: object\n          readOnly: true\n          type: object\n    AuthenticatorProvider:\n      properties:\n        configuration:\n          $ref: '#/components/schemas/AuthenticatorProviderConfiguration'\n        type:\n          type: string\n    AuthenticatorProviderConfiguration:\n      properties:\n        authPort:\n          type: integer\n        hostName:\n          type: string\n        instanceId:\n          type: string\n        sharedSecret:\n          type: string\n        userNameTemplate:\n          $ref: '#/components/schemas/AuthenticatorProviderConfigurationUserNameTemplate'\n    AuthenticatorProviderConfigurationUserNameTemplate:\n      properties:\n        template:\n          type: string\n    AuthenticatorSettings:\n      type: object\n      properties:\n        allowedFor:\n          $ref: '#/components/schemas/AllowedForEnum'\n        appInstanceId:\n          type: string\n        channelBinding:\n          $ref: '#/components/schemas/ChannelBinding'\n        compliance:\n          $ref: '#/components/schemas/Compliance'\n        tokenLifetimeInMinutes:\n          type: integer\n        userVerification:\n          $ref: '#/components/schemas/UserVerificationEnum'\n    AuthenticatorStatus:\n      type: string\n      enum:\n        - ACTIVE\n        - INACTIVE\n    AuthenticatorType:\n      type: string\n      enum:\n        - app\n        - email\n        - federated\n        - password\n        - phone\n        - security_key\n        - security_question\n    AuthorizationServer:\n      type: object\n      properties:\n        audiences:\n          type: array\n          items:\n            type: string\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n        credentials:\n          $ref: '#/components/schemas/AuthorizationServerCredentials'\n        description:\n          type: string\n        id:\n          type: string\n          readOnly: true\n        issuer:\n          type: string\n        issuerMode:\n          $ref: '#/components/schemas/IssuerMode'\n        lastUpdated:\n          type: string\n          format: date-time\n          readOnly: true\n        name:\n          type: string\n        status:\n          $ref: '#/components/schemas/LifecycleStatus'\n        _links:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n          readOnly: true\n    AuthorizationServerCredentials:\n      type: object\n      properties:\n        signing:\n          $ref: '#/components/schemas/AuthorizationServerCredentialsSigningConfig'\n    AuthorizationServerCredentialsRotationMode:\n      type: string\n      enum:\n        - AUTO\n        - MANUAL\n    AuthorizationServerCredentialsSigningConfig:\n      type: object\n      properties:\n        kid:\n          type: string\n        lastRotated:\n          type: string\n          format: date-time\n          readOnly: true\n        nextRotation:\n          type: string\n          format: date-time\n          readOnly: true\n        rotationMode:\n          $ref: '#/components/schemas/AuthorizationServerCredentialsRotationMode'\n        use:\n          $ref: '#/components/schemas/AuthorizationServerCredentialsUse'\n    AuthorizationServerCredentialsUse:\n      type: string\n      enum:\n        - sig\n    AuthorizationServerPolicy:\n      allOf:\n        - $ref: '#/components/schemas/Policy'\n        - type: object\n          properties:\n            conditions:\n              $ref: '#/components/schemas/PolicyRuleConditions'\n    AuthorizationServerPolicyRule:\n      allOf:\n        - $ref: '#/components/schemas/PolicyRule'\n        - type: object\n          properties:\n            actions:\n              $ref: '#/components/schemas/AuthorizationServerPolicyRuleActions'\n            conditions:\n              $ref: '#/components/schemas/AuthorizationServerPolicyRuleConditions'\n    AuthorizationServerPolicyRuleActions:\n      allOf:\n        - $ref: '#/components/schemas/PolicyRuleActions'\n        - type: object\n          properties:\n            token:\n              $ref: '#/components/schemas/TokenAuthorizationServerPolicyRuleAction'\n    AuthorizationServerPolicyRuleConditions:\n      allOf:\n        - $ref: '#/components/schemas/PolicyRuleConditions'\n        - type: object\n          properties:\n            clients:\n              $ref: '#/components/schemas/ClientPolicyCondition'\n            grantTypes:\n              $ref: '#/components/schemas/GrantTypePolicyRuleCondition'\n            people:\n              $ref: '#/components/schemas/PolicyPeopleCondition'\n            scopes:\n              $ref: '#/components/schemas/OAuth2ScopesMediationPolicyRuleCondition'\n    AutoLoginApplication:\n      allOf:\n        - $ref: '#/components/schemas/Application'\n        - type: object\n          properties:\n            credentials:\n              $ref: '#/components/schemas/SchemeApplicationCredentials'\n            name:\n              type: string\n            settings:\n              $ref: '#/components/schemas/AutoLoginApplicationSettings'\n    AutoLoginApplicationSettings:\n      allOf:\n        - $ref: '#/components/schemas/ApplicationSettings'\n        - type: object\n          properties:\n            signOn:\n              $ref: '#/components/schemas/AutoLoginApplicationSettingsSignOn'\n    AutoLoginApplicationSettingsSignOn:\n      type: object\n      properties:\n        loginUrl:\n          type: string\n        redirectUrl:\n          type: string\n    AutoUpdateSchedule:\n      description: The schedule of auto-update configured by admin.\n      type: object\n      properties:\n        cron:\n          type: string\n        delay:\n          description: delay in days\n          type: integer\n        duration:\n          description: duration in minutes\n          type: integer\n        lastUpdated:\n          description: last time when the updated finished (success or failed, exclude cancelled), null if job haven't finished once yet.\n          type: string\n          format: date-time\n        timezone:\n          type: string\n    AwsRegion:\n      description: An AWS region\n      type: string\n      enum:\n        - ca-central-1\n        - eu-central-1\n        - eu-north-1\n        - eu-south-1\n        - eu-west-1\n        - eu-west-2\n        - eu-west-3\n        - us-east-1\n        - us-east-2\n        - us-west-1\n        - us-west-2\n    BaseEmailDomain:\n      type: object\n      properties:\n        displayName:\n          type: string\n        userName:\n          type: string\n      required:\n        - displayName\n        - userName\n    BasicApplicationSettings:\n      allOf:\n        - $ref: '#/components/schemas/ApplicationSettings'\n        - type: object\n          properties:\n            app:\n              $ref: '#/components/schemas/BasicApplicationSettingsApplication'\n    BasicApplicationSettingsApplication:\n      type: object\n      properties:\n        authURL:\n          type: string\n        url:\n          type: string\n    BasicAuthApplication:\n      x-okta-defined-as:\n        name: template_basic_auth\n      allOf:\n        - $ref: '#/components/schemas/Application'\n        - type: object\n          properties:\n            credentials:\n              $ref: '#/components/schemas/SchemeApplicationCredentials'\n            name:\n              type: string\n              default: template_basic_auth\n            settings:\n              $ref: '#/components/schemas/BasicApplicationSettings'\n    BeforeScheduledActionPolicyRuleCondition:\n      type: object\n      properties:\n        duration:\n          $ref: '#/components/schemas/Duration'\n        lifecycleAction:\n          $ref: '#/components/schemas/ScheduledUserLifecycleAction'\n    BehaviorRule:\n      title: Behavior Detection Rule\n      type: object\n      properties:\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n        id:\n          type: string\n          readOnly: true\n        lastUpdated:\n          type: string\n          format: date-time\n          readOnly: true\n        name:\n          type: string\n          maxLength: 128\n        status:\n          $ref: '#/components/schemas/LifecycleStatus'\n        type:\n          $ref: '#/components/schemas/BehaviorRuleType'\n        _link:\n          type: object\n          properties:\n            self:\n              $ref: '#/components/schemas/HrefObject'\n          readOnly: true\n      required:\n        - name\n        - type\n      discriminator:\n        propertyName: type\n        mapping:\n          ANOMALOUS_LOCATION: '#/components/schemas/BehaviorRuleAnomalousLocation'\n          ANOMALOUS_IP: '#/components/schemas/BehaviorRuleAnomalousIP'\n          ANOMALOUS_DEVICE: '#/components/schemas/BehaviorRuleAnomalousDevice'\n          VELOCITY: '#/components/schemas/BehaviorRuleVelocity'\n    BehaviorRuleAnomalousDevice:\n      allOf:\n        - $ref: '#/components/schemas/BehaviorRule'\n        - type: object\n          properties:\n            settings:\n              $ref: '#/components/schemas/BehaviorRuleSettingsAnomalousDevice'\n    BehaviorRuleAnomalousIP:\n      allOf:\n        - $ref: '#/components/schemas/BehaviorRule'\n        - type: object\n          properties:\n            settings:\n              $ref: '#/components/schemas/BehaviorRuleSettingsAnomalousIP'\n    BehaviorRuleAnomalousLocation:\n      allOf:\n        - $ref: '#/components/schemas/BehaviorRule'\n        - type: object\n          properties:\n            settings:\n              $ref: '#/components/schemas/BehaviorRuleSettingsAnomalousLocation'\n    BehaviorRuleSettings:\n      title: Behavior Detection Rule Settings\n      type: object\n    BehaviorRuleSettingsAnomalousDevice:\n      allOf:\n        - $ref: '#/components/schemas/BehaviorRuleSettingsHistoryBased'\n    BehaviorRuleSettingsAnomalousIP:\n      allOf:\n        - $ref: '#/components/schemas/BehaviorRuleSettingsHistoryBased'\n        - type: object\n          properties:\n            maxEventsUsedForEvaluation:\n              type: integer\n              minimum: 0\n              maximum: 100\n              default: 50\n    BehaviorRuleSettingsAnomalousLocation:\n      allOf:\n        - $ref: '#/components/schemas/BehaviorRuleSettingsHistoryBased'\n        - type: object\n          properties:\n            granularity:\n              $ref: '#/components/schemas/LocationGranularity'\n            radiusKilometers:\n              type: integer\n              description: Required when `granularity` is `LAT_LONG`. Radius from the provided coordinates in kilometers.\n          required:\n            - granularity\n    BehaviorRuleSettingsHistoryBased:\n      allOf:\n        - $ref: '#/components/schemas/BehaviorRuleSettings'\n        - title: Behavior Detection Rule Settings based on Event History\n          type: object\n          properties:\n            maxEventsUsedForEvaluation:\n              type: integer\n              minimum: 1\n              maximum: 100\n              default: 20\n            minEventsNeededForEvaluation:\n              type: integer\n              minimum: 0\n              maximum: 10\n              default: 0\n    BehaviorRuleSettingsVelocity:\n      allOf:\n        - $ref: '#/components/schemas/BehaviorRuleSettings'\n        - title: Behavior Detection Rule Settings based on device velocity in kilometers per hour.\n          type: object\n          properties:\n            velocityKph:\n              type: integer\n              minimum: 1\n              default: 805\n          required:\n            - velocityKph\n    BehaviorRuleType:\n      type: string\n      enum:\n        - ANOMALOUS_DEVICE\n        - ANOMALOUS_IP\n        - ANOMALOUS_LOCATION\n        - VELOCITY\n    BehaviorRuleVelocity:\n      allOf:\n        - $ref: '#/components/schemas/BehaviorRule'\n        - type: object\n          properties:\n            settings:\n              $ref: '#/components/schemas/BehaviorRuleSettingsVelocity'\n    BookmarkApplication:\n      x-okta-defined-as:\n        name: bookmark\n      allOf:\n        - $ref: '#/components/schemas/Application'\n        - type: object\n          properties:\n            credentials:\n              $ref: '#/components/schemas/ApplicationCredentials'\n            name:\n              type: string\n              default: bookmark\n            settings:\n              $ref: '#/components/schemas/BookmarkApplicationSettings'\n    BookmarkApplicationSettings:\n      allOf:\n        - $ref: '#/components/schemas/ApplicationSettings'\n        - type: object\n          properties:\n            app:\n              $ref: '#/components/schemas/BookmarkApplicationSettingsApplication'\n    BookmarkApplicationSettingsApplication:\n      type: object\n      properties:\n        requestIntegration:\n          type: boolean\n        url:\n          type: string\n    BouncesRemoveListError:\n      type: object\n      properties:\n        emailAddress:\n          type: string\n        reason:\n          type: string\n    BouncesRemoveListObj:\n      type: object\n      properties:\n        emailAddresses:\n          type: array\n          items:\n            type: string\n    BouncesRemoveListResult:\n      type: object\n      properties:\n        errors:\n          type: array\n          items:\n            $ref: '#/components/schemas/BouncesRemoveListError'\n    Brand:\n      type: object\n      properties:\n        agreeToCustomPrivacyPolicy:\n          type: boolean\n        customPrivacyPolicyUrl:\n          type: string\n        defaultApp:\n          type: object\n          properties:\n            appInstanceId:\n              type: string\n            appLinkName:\n              type: string\n        displayLanguage:\n          $ref: '#/components/schemas/Language'\n        id:\n          readOnly: true\n          type: string\n        isDefault:\n          readOnly: true\n          type: boolean\n        name:\n          type: string\n        removePoweredByOkta:\n          type: boolean\n        _links:\n          properties:\n            self:\n              $ref: '#/components/schemas/HrefObject'\n            themes:\n              $ref: '#/components/schemas/HrefObject'\n          readOnly: true\n          type: object\n    BrandDomain:\n      type: object\n      properties:\n        domainId:\n          type: string\n          readOnly: true\n        _links:\n          type: object\n          properties:\n            self:\n              $ref: '#/components/schemas/HrefObject'\n            brand:\n              $ref: '#/components/schemas/HrefObject'\n            domain:\n              $ref: '#/components/schemas/HrefObject'\n          readOnly: true\n          description: Links to resources related to this brand domain\n    BrandDomains:\n      title: BrandDomains\n      items:\n        $ref: '#/components/schemas/DomainResponse'\n      type: array\n    BrandRequest:\n      type: object\n      properties:\n        agreeToCustomPrivacyPolicy:\n          type: boolean\n        customPrivacyPolicyUrl:\n          type: string\n        name:\n          type: string\n        removePoweredByOkta:\n          type: boolean\n    BrowserPluginApplication:\n      allOf:\n        - $ref: '#/components/schemas/Application'\n        - type: object\n          properties:\n            credentials:\n              $ref: '#/components/schemas/SchemeApplicationCredentials'\n            name:\n              type: string\n            settings:\n              $ref: '#/components/schemas/SwaApplicationSettings'\n    CAPTCHAInstance:\n      title: CAPTCHAInstance\n      description: ''\n      type: object\n      properties:\n        id:\n          type: string\n          readOnly: true\n        name:\n          type: string\n        secretKey:\n          type: string\n          writeOnly: true\n        siteKey:\n          type: string\n        type:\n          $ref: '#/components/schemas/CAPTCHAType'\n        _links:\n          type: object\n          properties:\n            self:\n              $ref: '#/components/schemas/HrefObject'\n          readOnly: true\n    CAPTCHAType:\n      type: string\n      enum:\n        - HCAPTCHA\n        - RECAPTCHA_V2\n    CallUserFactor:\n      allOf:\n        - $ref: '#/components/schemas/UserFactor'\n        - type: object\n          properties:\n            profile:\n              $ref: '#/components/schemas/CallUserFactorProfile'\n    CallUserFactorProfile:\n      type: object\n      properties:\n        phoneExtension:\n          type: string\n        phoneNumber:\n          type: string\n    CapabilitiesCreateObject:\n      type: object\n      properties:\n        lifecycleCreate:\n          $ref: '#/components/schemas/LifecycleCreateSettingObject'\n    CapabilitiesObject:\n      type: object\n      properties:\n        create:\n          $ref: '#/components/schemas/CapabilitiesCreateObject'\n        update:\n          $ref: '#/components/schemas/CapabilitiesUpdateObject'\n    CapabilitiesUpdateObject:\n      type: object\n      properties:\n        lifecycleDeactivate:\n          $ref: '#/components/schemas/LifecycleDeactivateSettingObject'\n        password:\n          $ref: '#/components/schemas/PasswordSettingObject'\n        profile:\n          $ref: '#/components/schemas/ProfileSettingObject'\n    CatalogApplication:\n      type: object\n      properties:\n        category:\n          type: string\n        description:\n          type: string\n        displayName:\n          type: string\n        features:\n          type: array\n          items:\n            type: string\n        id:\n          type: string\n          readOnly: true\n        lastUpdated:\n          type: string\n          format: date-time\n          readOnly: true\n        name:\n          type: string\n        signOnModes:\n          type: array\n          items:\n            type: string\n        status:\n          $ref: '#/components/schemas/CatalogApplicationStatus'\n        verificationStatus:\n          type: string\n        website:\n          type: string\n        _links:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n          readOnly: true\n    CatalogApplicationStatus:\n      type: string\n      enum:\n        - ACTIVE\n        - INACTIVE\n    ChangeEnum:\n      type: string\n      enum:\n        - CHANGE\n        - KEEP_EXISTING\n    ChangePasswordRequest:\n      type: object\n      properties:\n        newPassword:\n          $ref: '#/components/schemas/PasswordCredential'\n        oldPassword:\n          $ref: '#/components/schemas/PasswordCredential'\n    ChannelBinding:\n      type: object\n      properties:\n        required:\n          $ref: '#/components/schemas/RequiredEnum'\n        style:\n          type: string\n    ClientPolicyCondition:\n      type: object\n      properties:\n        include:\n          type: array\n          items:\n            type: string\n    Compliance:\n      type: object\n      properties:\n        fips:\n          $ref: '#/components/schemas/FipsEnum'\n    ContextPolicyRuleCondition:\n      allOf:\n        - $ref: '#/components/schemas/DevicePolicyRuleCondition'\n        - type: object\n          properties:\n            expression:\n              type: string\n    CreateBrandDomainRequest:\n      title: CreateBrandDomainRequest\n      type: object\n      properties:\n        domainId:\n          type: string\n    CreateBrandRequest:\n      title: CreateBrandRequest\n      type: object\n      properties:\n        name:\n          type: string\n    CreateSessionRequest:\n      type: object\n      properties:\n        sessionToken:\n          type: string\n    CreateUserRequest:\n      type: object\n      properties:\n        credentials:\n          $ref: '#/components/schemas/UserCredentials'\n        groupIds:\n          type: array\n          items:\n            type: string\n        profile:\n          $ref: '#/components/schemas/UserProfile'\n        type:\n          $ref: '#/components/schemas/UserType'\n      required:\n        - profile\n    Csr:\n      type: object\n      properties:\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n        csr:\n          type: string\n          readOnly: true\n        id:\n          type: string\n          readOnly: true\n        kty:\n          type: string\n          readOnly: true\n    CsrMetadata:\n      type: object\n      properties:\n        subject:\n          $ref: '#/components/schemas/CsrMetadataSubject'\n        subjectAltNames:\n          $ref: '#/components/schemas/CsrMetadataSubjectAltNames'\n    CsrMetadataSubject:\n      type: object\n      properties:\n        commonName:\n          type: string\n        countryName:\n          type: string\n        localityName:\n          type: string\n        organizationalUnitName:\n          type: string\n        organizationName:\n          type: string\n        stateOrProvinceName:\n          type: string\n    CsrMetadataSubjectAltNames:\n      type: object\n      properties:\n        dnsNames:\n          type: array\n          items:\n            type: string\n    CustomHotpUserFactor:\n      allOf:\n        - $ref: '#/components/schemas/UserFactor'\n        - type: object\n          properties:\n            factorProfileId:\n              type: string\n            profile:\n              $ref: '#/components/schemas/CustomHotpUserFactorProfile'\n    CustomHotpUserFactorProfile:\n      type: object\n      properties:\n        sharedSecret:\n          type: string\n    CustomizablePage:\n      type: object\n      properties:\n        pageContent:\n          type: string\n    DNSRecord:\n      type: object\n      properties:\n        expiration:\n          type: string\n        fqdn:\n          type: string\n        recordType:\n          $ref: '#/components/schemas/DNSRecordType'\n        values:\n          type: array\n          items:\n            type: string\n    DNSRecordType:\n      type: string\n      enum:\n        - CNAME\n        - TXT\n    Device:\n      type: object\n      properties:\n        created:\n          type: string\n          format: date-time\n          description: Timestamp when the device was created\n          readOnly: true\n        id:\n          type: string\n          description: Unique key for the device\n          readOnly: true\n        lastUpdated:\n          type: string\n          format: date-time\n          description: Timestamp when the device was last updated\n          readOnly: true\n        profile:\n          $ref: '#/components/schemas/DeviceProfile'\n        resourceAlternateId:\n          type: string\n          readOnly: true\n        resourceDisplayName:\n          $ref: '#/components/schemas/DeviceDisplayName'\n        resourceId:\n          type: string\n          description: Alternate key for the `id`\n          readOnly: true\n        resourceType:\n          type: string\n          default: UDDevice\n          readOnly: true\n        status:\n          $ref: '#/components/schemas/DeviceStatus'\n        _links:\n          type: object\n          properties:\n            self:\n              $ref: '#/components/schemas/HrefObject'\n            users:\n              $ref: '#/components/schemas/HrefObject'\n            activate:\n              $ref: '#/components/schemas/HrefObject'\n            deactivate:\n              $ref: '#/components/schemas/HrefObject'\n            suspend:\n              $ref: '#/components/schemas/HrefObject'\n            unsuspend:\n              $ref: '#/components/schemas/HrefObject'\n          readOnly: true\n    DeviceAccessPolicyRuleCondition:\n      allOf:\n        - $ref: '#/components/schemas/DevicePolicyRuleCondition'\n        - type: object\n          properties:\n            managed:\n              type: boolean\n            registered:\n              type: boolean\n    DeviceAssurance:\n      title: DeviceAssurance\n      type: object\n      properties:\n        createdBy:\n          type: string\n          readOnly: true\n        createdDate:\n          type: string\n          readOnly: true\n        diskEncryptionType:\n          type: object\n          properties:\n            include:\n              type: array\n              items:\n                $ref: '#/components/schemas/DiskEncryptionType'\n        id:\n          type: string\n          readOnly: true\n        jailbreak:\n          type: boolean\n        lastUpdatedBy:\n          type: string\n          readOnly: true\n        lastUpdatedDate:\n          type: string\n          readOnly: true\n        name:\n          type: string\n          description: Display name of the Device Assurance Policy\n        osVersion:\n          $ref: '#/components/schemas/VersionObject'\n        platform:\n          $ref: '#/components/schemas/Platform'\n        screenLockType:\n          type: object\n          properties:\n            include:\n              type: array\n              items:\n                $ref: '#/components/schemas/ScreenLockType'\n        secureHardwarePresent:\n          type: boolean\n        _links:\n          type: object\n          properties:\n            self:\n              $ref: '#/components/schemas/HrefObject'\n          readOnly: true\n    DeviceDisplayName:\n      type: object\n      properties:\n        sensitive:\n          type: boolean\n        value:\n          type: string\n    DevicePlatform:\n      description: OS platform of the device\n      type: string\n      enum:\n        - ANDROID\n        - IOS\n        - MACOS\n        - WINDOWS\n    DevicePolicyMDMFramework:\n      type: string\n      enum:\n        - AFW\n        - NATIVE\n        - SAFE\n    DevicePolicyPlatformType:\n      type: string\n      enum:\n        - ANDROID\n        - IOS\n        - OSX\n        - WINDOWS\n    DevicePolicyRuleCondition:\n      type: object\n      properties:\n        migrated:\n          type: boolean\n        platform:\n          $ref: '#/components/schemas/DevicePolicyRuleConditionPlatform'\n        rooted:\n          type: boolean\n        trustLevel:\n          $ref: '#/components/schemas/DevicePolicyTrustLevel'\n    DevicePolicyRuleConditionPlatform:\n      type: object\n      properties:\n        supportedMDMFrameworks:\n          type: array\n          items:\n            $ref: '#/components/schemas/DevicePolicyMDMFramework'\n        types:\n          type: array\n          items:\n            $ref: '#/components/schemas/DevicePolicyPlatformType'\n    DevicePolicyTrustLevel:\n      type: string\n      enum:\n        - ANY\n        - TRUSTED\n    DeviceProfile:\n      type: object\n      properties:\n        displayName:\n          type: string\n          description: Display name of the device\n          minLength: 1\n          maxLength: 255\n        imei:\n          type: string\n          description: International Mobile Equipment Identity of the device\n          minLength: 14\n          maxLength: 17\n        manufacturer:\n          type: string\n          description: Name of the manufacturer of the device\n          maxLength: 127\n        meid:\n          type: string\n          description: Mobile equipment identifier of the device\n          maxLength: 14\n        model:\n          type: string\n          description: Model of the device\n          maxLength: 127\n        osVersion:\n          type: string\n          description: Version of the device OS\n          maxLength: 127\n        platform:\n          $ref: '#/components/schemas/DevicePlatform'\n        registered:\n          type: boolean\n          description: Indicates if the device is registered at Okta\n        secureHardwarePresent:\n          type: boolean\n          description: Indicates if the device constains a secure hardware functionality\n        serialNumber:\n          type: string\n          description: Serial number of the device\n          maxLength: 127\n        sid:\n          type: string\n          description: Windows Security identifier of the device\n          maxLength: 256\n        tpmPublicKeyHash:\n          type: string\n          description: Windows Trsted Platform Module hash value\n        udid:\n          type: string\n          description: macOS Unique Device identifier of the device\n          maxLength: 47\n      required:\n        - displayName\n        - platform\n        - registered\n    DeviceStatus:\n      type: string\n      enum:\n        - ACTIVE\n        - CREATED\n        - DEACTIVATED\n        - SUSPENDED\n    DiskEncryptionType:\n      type: string\n      enum:\n        - ALL_INTERNAL_VOLUMES\n        - FULL\n        - USER\n    Domain:\n      type: object\n      properties:\n        brandId:\n          type: string\n        certificateSourceType:\n          $ref: '#/components/schemas/DomainCertificateSourceType'\n        dnsRecords:\n          type: array\n          items:\n            $ref: '#/components/schemas/DNSRecord'\n        domain:\n          type: string\n        id:\n          type: string\n        publicCertificate:\n          $ref: '#/components/schemas/DomainCertificateMetadata'\n        validationStatus:\n          $ref: '#/components/schemas/DomainValidationStatus'\n    DomainCertificate:\n      type: object\n      properties:\n        certificate:\n          type: string\n        certificateChain:\n          type: string\n        privateKey:\n          type: string\n        type:\n          $ref: '#/components/schemas/DomainCertificateType'\n    DomainCertificateMetadata:\n      type: object\n      properties:\n        expiration:\n          type: string\n        fingerprint:\n          type: string\n        subject:\n          type: string\n    DomainCertificateSourceType:\n      type: string\n      enum:\n        - MANUAL\n        - OKTA_MANAGED\n    DomainCertificateType:\n      type: string\n      enum:\n        - PEM\n    DomainLinks:\n      type: object\n      properties:\n        brand:\n          $ref: '#/components/schemas/HrefObject'\n        certificate:\n          $ref: '#/components/schemas/HrefObject'\n        self:\n          $ref: '#/components/schemas/HrefObject'\n        verify:\n          $ref: '#/components/schemas/HrefObject'\n    DomainListResponse:\n      type: object\n      properties:\n        domains:\n          type: array\n          items:\n            $ref: '#/components/schemas/DomainResponse'\n    DomainResponse:\n      type: object\n      properties:\n        brandId:\n          type: string\n        certificateSourceType:\n          $ref: '#/components/schemas/DomainCertificateSourceType'\n        dnsRecords:\n          type: array\n          items:\n            $ref: '#/components/schemas/DNSRecord'\n        domain:\n          type: string\n        id:\n          type: string\n        publicCertificate:\n          $ref: '#/components/schemas/DomainCertificateMetadata'\n        validationStatus:\n          $ref: '#/components/schemas/DomainValidationStatus'\n        _links:\n          $ref: '#/components/schemas/DomainLinks'\n    DomainValidationStatus:\n      type: string\n      enum:\n        - COMPLETED\n        - IN_PROGRESS\n        - NOT_STARTED\n        - VERIFIED\n    Duration:\n      type: object\n      properties:\n        number:\n          type: integer\n        unit:\n          type: string\n    EmailContent:\n      type: object\n      properties:\n        body:\n          type: string\n          description: The email's HTML body. May contain [variable references](https://velocity.apache.org/engine/1.7/user-guide.html#references).\n        subject:\n          type: string\n          description: The email's subject. May contain [variable references](https://velocity.apache.org/engine/1.7/user-guide.html#references).\n      required:\n        - subject\n        - body\n    EmailCustomization:\n      allOf:\n        - $ref: '#/components/schemas/EmailContent'\n        - type: object\n          properties:\n            created:\n              type: string\n              format: date-time\n              readOnly: true\n              description: The UTC time at which this email customization was created.\n            id:\n              type: string\n              readOnly: true\n              description: A unique identifier for this email customization.\n            isDefault:\n              type: boolean\n              description: Whether this is the default customization for the email template. Each customized email template must have exactly one default customization. Defaults to `true` for the first customization and `false` thereafter.\n            language:\n              $ref: '#/components/schemas/Language'\n            lastUpdated:\n              type: string\n              format: date-time\n              readOnly: true\n              description: The UTC time at which this email customization was last updated.\n            _links:\n              type: object\n              properties:\n                self:\n                  $ref: '#/components/schemas/HrefObject'\n                template:\n                  $ref: '#/components/schemas/HrefObject'\n                preview:\n                  $ref: '#/components/schemas/HrefObject'\n                test:\n                  $ref: '#/components/schemas/HrefObject'\n              readOnly: true\n              description: Links to resources related to this email customization.\n          required:\n            - language\n    EmailDefaultContent:\n      allOf:\n        - $ref: '#/components/schemas/EmailContent'\n        - type: object\n          properties:\n            _links:\n              type: object\n              properties:\n                self:\n                  $ref: '#/components/schemas/HrefObject'\n                template:\n                  $ref: '#/components/schemas/HrefObject'\n                preview:\n                  $ref: '#/components/schemas/HrefObject'\n                test:\n                  $ref: '#/components/schemas/HrefObject'\n              readOnly: true\n              description: Links to resources related to this email template's default content.\n    EmailDomain:\n      allOf:\n        - $ref: '#/components/schemas/BaseEmailDomain'\n      type: object\n      properties:\n        domain:\n          type: string\n      required:\n        - domain\n    EmailDomainListResponse:\n      type: object\n      properties:\n        email-domains:\n          type: array\n          items:\n            $ref: '#/components/schemas/EmailDomainResponse'\n    EmailDomainResponse:\n      allOf:\n        - $ref: '#/components/schemas/BaseEmailDomain'\n      type: object\n      properties:\n        dnsValidationRecords:\n          type: array\n          items:\n            $ref: '#/components/schemas/DNSRecord'\n        domain:\n          type: string\n        id:\n          type: string\n        validationStatus:\n          $ref: '#/components/schemas/EmailDomainStatus'\n    EmailDomainStatus:\n      type: string\n      enum:\n        - DELETED\n        - ERROR\n        - NOT_STARTED\n        - POLLING\n        - VERIFIED\n    EmailPreview:\n      type: object\n      properties:\n        body:\n          type: string\n          readOnly: true\n          description: The email's HTML body.\n        subject:\n          type: string\n          readOnly: true\n          description: The email's subject.\n        _links:\n          type: object\n          properties:\n            self:\n              $ref: '#/components/schemas/HrefObject'\n            contentSource:\n              $ref: '#/components/schemas/HrefObject'\n            template:\n              $ref: '#/components/schemas/HrefObject'\n            test:\n              $ref: '#/components/schemas/HrefObject'\n            defaultContent:\n              $ref: '#/components/schemas/HrefObject'\n          readOnly: true\n          description: Links to resources related to this email preview.\n    EmailSettings:\n      type: object\n      properties:\n        recipients:\n          type: string\n          enum:\n            - ALL_USERS\n            - ADMINS_ONLY\n            - NO_USERS\n      required:\n        - recipients\n    EmailTemplate:\n      type: object\n      properties:\n        name:\n          type: string\n          readOnly: true\n          description: The name of this email template.\n        _embedded:\n          type: object\n          properties:\n            settings:\n              $ref: '#/components/schemas/EmailSettings'\n            customizationCount:\n              type: integer\n          readOnly: true\n        _links:\n          type: object\n          properties:\n            self:\n              $ref: '#/components/schemas/HrefObject'\n            settings:\n              $ref: '#/components/schemas/HrefObject'\n            defaultContent:\n              $ref: '#/components/schemas/HrefObject'\n            customizations:\n              $ref: '#/components/schemas/HrefObject'\n            test:\n              $ref: '#/components/schemas/HrefObject'\n          readOnly: true\n          description: Links to resources related to this email template.\n    EmailTemplateTouchPointVariant:\n      type: string\n      enum:\n        - FULL_THEME\n        - OKTA_DEFAULT\n    EmailUserFactor:\n      allOf:\n        - $ref: '#/components/schemas/UserFactor'\n        - type: object\n          properties:\n            profile:\n              $ref: '#/components/schemas/EmailUserFactorProfile'\n    EmailUserFactorProfile:\n      type: object\n      properties:\n        email:\n          type: string\n    EnabledStatus:\n      type: string\n      enum:\n        - DISABLED\n        - ENABLED\n    EndUserDashboardTouchPointVariant:\n      type: string\n      enum:\n        - FULL_THEME\n        - LOGO_ON_FULL_WHITE_BACKGROUND\n        - OKTA_DEFAULT\n        - WHITE_LOGO_BACKGROUND\n    Error:\n      title: Error\n      type: object\n      properties:\n        errorCauses:\n          type: array\n          items:\n            type: object\n            properties:\n              errorSummary:\n                type: string\n        errorCode:\n          type: string\n          description: An Okta code for this type of error\n        errorId:\n          type: string\n          description: A unique identifier for this error. This can be used by Okta Support to help with troubleshooting.\n        errorLink:\n          type: string\n          description: An Okta code for this type of error\n        errorSummary:\n          type: string\n          description: A short description of what caused this error. Sometimes this contains dynamically-generated information about your specific error.\n    ErrorPageTouchPointVariant:\n      type: string\n      enum:\n        - BACKGROUND_IMAGE\n        - BACKGROUND_SECONDARY_COLOR\n        - OKTA_DEFAULT\n    EventHook:\n      type: object\n      properties:\n        channel:\n          $ref: '#/components/schemas/EventHookChannel'\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n        createdBy:\n          type: string\n        events:\n          $ref: '#/components/schemas/EventSubscriptions'\n        id:\n          type: string\n          readOnly: true\n        lastUpdated:\n          type: string\n          format: date-time\n          readOnly: true\n        name:\n          type: string\n        status:\n          $ref: '#/components/schemas/LifecycleStatus'\n        verificationStatus:\n          $ref: '#/components/schemas/EventHookVerificationStatus'\n        _links:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n          readOnly: true\n    EventHookChannel:\n      type: object\n      properties:\n        config:\n          $ref: '#/components/schemas/EventHookChannelConfig'\n        type:\n          $ref: '#/components/schemas/EventHookChannelType'\n        version:\n          type: string\n    EventHookChannelConfig:\n      type: object\n      properties:\n        authScheme:\n          $ref: '#/components/schemas/EventHookChannelConfigAuthScheme'\n        headers:\n          type: array\n          items:\n            $ref: '#/components/schemas/EventHookChannelConfigHeader'\n        uri:\n          type: string\n    EventHookChannelConfigAuthScheme:\n      type: object\n      properties:\n        key:\n          type: string\n        type:\n          $ref: '#/components/schemas/EventHookChannelConfigAuthSchemeType'\n        value:\n          type: string\n    EventHookChannelConfigAuthSchemeType:\n      type: string\n      enum:\n        - HEADER\n    EventHookChannelConfigHeader:\n      type: object\n      properties:\n        key:\n          type: string\n        value:\n          type: string\n    EventHookChannelType:\n      type: string\n      enum:\n        - HTTP\n    EventHookVerificationStatus:\n      type: string\n      enum:\n        - UNVERIFIED\n        - VERIFIED\n    EventSubscriptionType:\n      type: string\n      enum:\n        - EVENT_TYPE\n        - FLOW_EVENT\n    EventSubscriptions:\n      type: object\n      properties:\n        items:\n          type: array\n          items:\n            type: string\n        type:\n          $ref: '#/components/schemas/EventSubscriptionType'\n      discriminator:\n        propertyName: type\n    FCMConfiguration:\n      properties:\n        fileName:\n          type: string\n          description: (Optional) File name for Admin Console display\n        projectId:\n          type: string\n          description: Project ID of FCM configuration\n          readOnly: true\n        serviceAccountJson:\n          type: object\n          description: JSON containing the private service account key and service account details. See [Creating and managing service account keys](https://cloud.google.com/iam/docs/creating-managing-service-account-keys) for more information on creating service account keys in JSON.\n          writeOnly: true\n    FCMPushProvider:\n      allOf:\n        - $ref: '#/components/schemas/PushProvider'\n        - type: object\n          properties:\n            configuration:\n              $ref: '#/components/schemas/FCMConfiguration'\n    FactorProvider:\n      type: string\n      enum:\n        - CUSTOM\n        - DUO\n        - FIDO\n        - GOOGLE\n        - OKTA\n        - RSA\n        - SYMANTEC\n        - YUBICO\n    FactorResultType:\n      type: string\n      enum:\n        - CANCELLED\n        - CHALLENGE\n        - ERROR\n        - FAILED\n        - PASSCODE_REPLAYED\n        - REJECTED\n        - SUCCESS\n        - TIMEOUT\n        - TIME_WINDOW_EXCEEDED\n        - WAITING\n    FactorStatus:\n      type: string\n      enum:\n        - ACTIVE\n        - DISABLED\n        - ENROLLED\n        - EXPIRED\n        - INACTIVE\n        - NOT_SETUP\n        - PENDING_ACTIVATION\n    FactorType:\n      type: string\n      enum:\n        - call\n        - email\n        - hotp\n        - push\n        - question\n        - sms\n        - token\n        - token:hardware\n        - token:hotp\n        - token:software:totp\n        - u2f\n        - web\n        - webauthn\n    Feature:\n      type: object\n      properties:\n        description:\n          type: string\n        id:\n          type: string\n          readOnly: true\n        name:\n          type: string\n        stage:\n          $ref: '#/components/schemas/FeatureStage'\n        status:\n          $ref: '#/components/schemas/EnabledStatus'\n        type:\n          $ref: '#/components/schemas/FeatureType'\n        _links:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n          readOnly: true\n    FeatureStage:\n      type: object\n      properties:\n        state:\n          $ref: '#/components/schemas/FeatureStageState'\n        value:\n          $ref: '#/components/schemas/FeatureStageValue'\n    FeatureStageState:\n      type: string\n      enum:\n        - CLOSED\n        - OPEN\n    FeatureStageValue:\n      type: string\n      enum:\n        - BETA\n        - EA\n    FeatureType:\n      type: string\n      enum:\n        - self-service\n    FipsEnum:\n      type: string\n      enum:\n        - OPTIONAL\n        - REQUIRED\n    ForgotPasswordResponse:\n      type: object\n      properties:\n        resetPasswordUrl:\n          type: string\n          readOnly: true\n    GrantOrTokenStatus:\n      type: string\n      enum:\n        - ACTIVE\n        - REVOKED\n    GrantTypePolicyRuleCondition:\n      type: object\n      properties:\n        include:\n          type: array\n          items:\n            type: string\n    Group:\n      type: object\n      properties:\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n        id:\n          type: string\n          readOnly: true\n        lastMembershipUpdated:\n          type: string\n          format: date-time\n          readOnly: true\n        lastUpdated:\n          type: string\n          format: date-time\n          readOnly: true\n        objectClass:\n          type: array\n          readOnly: true\n          items:\n            type: string\n        profile:\n          $ref: '#/components/schemas/GroupProfile'\n        type:\n          $ref: '#/components/schemas/GroupType'\n        _embedded:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n          readOnly: true\n        _links:\n          type: object\n          properties:\n            apps:\n              $ref: '#/components/schemas/HrefObject'\n            logo:\n              type: array\n              items:\n                $ref: '#/components/schemas/HrefObject'\n            self:\n              $ref: '#/components/schemas/HrefObject'\n            source:\n              $ref: '#/components/schemas/HrefObject'\n            users:\n              $ref: '#/components/schemas/HrefObject'\n          readOnly: true\n    GroupCondition:\n      type: object\n      properties:\n        exclude:\n          type: array\n          items:\n            type: string\n        include:\n          type: array\n          items:\n            type: string\n    GroupOwner:\n      type: object\n      properties:\n        displayName:\n          type: string\n          readOnly: true\n        id:\n          type: string\n          readOnly: true\n        lastUpdated:\n          type: string\n          format: date-time\n          readOnly: true\n        originId:\n          type: string\n        originType:\n          $ref: '#/components/schemas/GroupOwnerOriginType'\n        resolved:\n          type: boolean\n        type:\n          $ref: '#/components/schemas/GroupOwnerType'\n    GroupOwnerOriginType:\n      type: string\n      enum:\n        - APPLICATION\n        - OKTA_DIRECTORY\n    GroupOwnerType:\n      type: string\n      enum:\n        - GROUP\n        - UNKNOWN\n        - USER\n    GroupPolicyRuleCondition:\n      type: object\n      properties:\n        exclude:\n          type: array\n          items:\n            type: string\n        include:\n          type: array\n          items:\n            type: string\n    GroupProfile:\n      type: object\n      properties:\n        description:\n          type: string\n        name:\n          type: string\n      x-okta-extensible: true\n    GroupRule:\n      type: object\n      properties:\n        actions:\n          $ref: '#/components/schemas/GroupRuleAction'\n        conditions:\n          $ref: '#/components/schemas/GroupRuleConditions'\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n        id:\n          type: string\n          readOnly: true\n        lastUpdated:\n          type: string\n          format: date-time\n          readOnly: true\n        name:\n          type: string\n        status:\n          $ref: '#/components/schemas/GroupRuleStatus'\n        type:\n          type: string\n    GroupRuleAction:\n      type: object\n      properties:\n        assignUserToGroups:\n          $ref: '#/components/schemas/GroupRuleGroupAssignment'\n    GroupRuleConditions:\n      type: object\n      properties:\n        expression:\n          $ref: '#/components/schemas/GroupRuleExpression'\n        people:\n          $ref: '#/components/schemas/GroupRulePeopleCondition'\n    GroupRuleExpression:\n      type: object\n      properties:\n        type:\n          type: string\n        value:\n          type: string\n    GroupRuleGroupAssignment:\n      type: object\n      properties:\n        groupIds:\n          type: array\n          items:\n            type: string\n    GroupRuleGroupCondition:\n      type: object\n      properties:\n        exclude:\n          type: array\n          items:\n            type: string\n        include:\n          type: array\n          items:\n            type: string\n    GroupRulePeopleCondition:\n      type: object\n      properties:\n        groups:\n          $ref: '#/components/schemas/GroupRuleGroupCondition'\n        users:\n          $ref: '#/components/schemas/GroupRuleUserCondition'\n    GroupRuleStatus:\n      type: string\n      enum:\n        - ACTIVE\n        - INACTIVE\n        - INVALID\n    GroupRuleUserCondition:\n      type: object\n      properties:\n        exclude:\n          type: array\n          items:\n            type: string\n        include:\n          type: array\n          items:\n            type: string\n    GroupSchema:\n      type: object\n      properties:\n        $schema:\n          readOnly: true\n          type: string\n        created:\n          readOnly: true\n          type: string\n        definitions:\n          $ref: '#/components/schemas/GroupSchemaDefinitions'\n        description:\n          type: string\n        id:\n          readOnly: true\n          type: string\n        lastUpdated:\n          readOnly: true\n          type: string\n        name:\n          readOnly: true\n          type: string\n        properties:\n          $ref: '#/components/schemas/UserSchemaProperties'\n        title:\n          type: string\n        type:\n          readOnly: true\n          type: string\n        _links:\n          additionalProperties:\n            type: object\n          readOnly: true\n          type: object\n      x-okta-allow-null-property-value-for-updates: true\n    GroupSchemaAttribute:\n      type: object\n      properties:\n        description:\n          type: string\n        enum:\n          items:\n            type: string\n          type: array\n        externalName:\n          type: string\n        externalNamespace:\n          type: string\n        items:\n          $ref: '#/components/schemas/UserSchemaAttributeItems'\n        master:\n          $ref: '#/components/schemas/UserSchemaAttributeMaster'\n        maxLength:\n          type: integer\n        minLength:\n          type: integer\n        mutability:\n          type: string\n        oneOf:\n          items:\n            $ref: '#/components/schemas/UserSchemaAttributeEnum'\n          type: array\n        permissions:\n          items:\n            $ref: '#/components/schemas/UserSchemaAttributePermission'\n          type: array\n        required:\n          type: boolean\n        scope:\n          $ref: '#/components/schemas/UserSchemaAttributeScope'\n        title:\n          type: string\n        type:\n          $ref: '#/components/schemas/UserSchemaAttributeType'\n        union:\n          $ref: '#/components/schemas/UserSchemaAttributeUnion'\n        unique:\n          type: string\n    GroupSchemaBase:\n      type: object\n      properties:\n        id:\n          readOnly: true\n          type: string\n        properties:\n          $ref: '#/components/schemas/GroupSchemaBaseProperties'\n        required:\n          items:\n            type: string\n          type: array\n        type:\n          type: string\n    GroupSchemaBaseProperties:\n      type: object\n      properties:\n        description:\n          $ref: '#/components/schemas/GroupSchemaAttribute'\n        name:\n          $ref: '#/components/schemas/GroupSchemaAttribute'\n    GroupSchemaCustom:\n      type: object\n      properties:\n        id:\n          readOnly: true\n          type: string\n        properties:\n          additionalProperties:\n            $ref: '#/components/schemas/GroupSchemaAttribute'\n          type: object\n        required:\n          items:\n            type: string\n          type: array\n        type:\n          type: string\n    GroupSchemaDefinitions:\n      type: object\n      properties:\n        base:\n          $ref: '#/components/schemas/GroupSchemaBase'\n        custom:\n          $ref: '#/components/schemas/GroupSchemaCustom'\n    GroupType:\n      type: string\n      enum:\n        - APP_GROUP\n        - BUILT_IN\n        - OKTA_GROUP\n    HardwareUserFactor:\n      allOf:\n        - $ref: '#/components/schemas/UserFactor'\n        - type: object\n          properties:\n            profile:\n              $ref: '#/components/schemas/HardwareUserFactorProfile'\n    HardwareUserFactorProfile:\n      type: object\n      properties:\n        credentialId:\n          type: string\n    HookKey:\n      type: object\n      properties:\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n        id:\n          type: string\n          readOnly: true\n        isUsed:\n          type: string\n          format: boolean\n        keyId:\n          type: string\n          readOnly: true\n        lastUpdated:\n          type: string\n          format: date-time\n          readOnly: true\n        name:\n          type: string\n          readOnly: false\n        _embedded:\n          $ref: '#/components/schemas/JsonWebKey'\n    HostedPage:\n      type: object\n      properties:\n        type:\n          $ref: '#/components/schemas/HostedPageType'\n        url:\n          type: string\n      required:\n        - type\n    HostedPageType:\n      type: string\n      enum:\n        - EXTERNALLY_HOSTED\n        - OKTA_DEFAULT\n    HrefObject:\n      title: Link Object\n      description: Singular link objected returned in HAL `_links` object.\n      type: object\n      properties:\n        hints:\n          type: object\n          properties:\n            allow:\n              type: array\n              items:\n                $ref: '#/components/schemas/HttpMethod'\n        href:\n          type: string\n        name:\n          type: string\n        type:\n          type: string\n          description: The media type of the link. If omitted, it is implicitly `application/json`.\n      required:\n        - href\n    HttpMethod:\n      type: string\n      enum:\n        - DELETE\n        - GET\n        - POST\n        - PUT\n    IamRole:\n      type: object\n      properties:\n        created:\n          type: string\n          format: date-time\n          description: Timestamp when the role was created\n          readOnly: true\n        description:\n          type: string\n          description: Description of the role\n        id:\n          type: string\n          description: Unique key for the role\n          readOnly: true\n        label:\n          type: string\n          description: Unique label for the role\n        lastUpdated:\n          type: string\n          format: date-time\n          description: Timestamp when the role was last updated\n          readOnly: true\n        permissions:\n          type: array\n          description: Array of permissions that the role will grant. See [Permission Types](https://developer.okta.com/docs/concepts/role-assignment/#permission-types).\n          items:\n            $ref: '#/components/schemas/RolePermissionType'\n        _links:\n          type: object\n          properties:\n            self:\n              $ref: '#/components/schemas/HrefObject'\n            permissions:\n              $ref: '#/components/schemas/HrefObject'\n          readOnly: true\n      required:\n        - label\n        - description\n        - permissions\n    IamRoles:\n      type: object\n      properties:\n        roles:\n          type: array\n          items:\n            $ref: '#/components/schemas/IamRole'\n        _links:\n          type: object\n          properties:\n            next:\n              $ref: '#/components/schemas/HrefObject'\n          readOnly: true\n    IdentityProvider:\n      type: object\n      properties:\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n          nullable: true\n        id:\n          type: string\n          readOnly: true\n        issuerMode:\n          $ref: '#/components/schemas/IssuerMode'\n        lastUpdated:\n          type: string\n          format: date-time\n          readOnly: true\n        name:\n          type: string\n        policy:\n          $ref: '#/components/schemas/IdentityProviderPolicy'\n        protocol:\n          $ref: '#/components/schemas/Protocol'\n        status:\n          $ref: '#/components/schemas/LifecycleStatus'\n        type:\n          $ref: '#/components/schemas/IdentityProviderType'\n        _links:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n          readOnly: true\n    IdentityProviderApplicationUser:\n      type: object\n      properties:\n        created:\n          type: string\n        externalId:\n          type: string\n        id:\n          type: string\n          readOnly: true\n        lastUpdated:\n          type: string\n        profile:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n        _embedded:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n          readOnly: true\n        _links:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n          readOnly: true\n    IdentityProviderCredentials:\n      type: object\n      properties:\n        client:\n          $ref: '#/components/schemas/IdentityProviderCredentialsClient'\n        signing:\n          $ref: '#/components/schemas/IdentityProviderCredentialsSigning'\n        trust:\n          $ref: '#/components/schemas/IdentityProviderCredentialsTrust'\n    IdentityProviderCredentialsClient:\n      type: object\n      properties:\n        client_id:\n          type: string\n        client_secret:\n          type: string\n    IdentityProviderCredentialsSigning:\n      type: object\n      properties:\n        kid:\n          type: string\n    IdentityProviderCredentialsTrust:\n      type: object\n      properties:\n        audience:\n          type: string\n        issuer:\n          type: string\n        kid:\n          type: string\n        revocation:\n          $ref: '#/components/schemas/IdentityProviderCredentialsTrustRevocation'\n        revocationCacheLifetime:\n          type: integer\n    IdentityProviderCredentialsTrustRevocation:\n      type: string\n      enum:\n        - CRL\n        - DELTA_CRL\n        - OCSP\n    IdentityProviderPolicy:\n      allOf:\n        - $ref: '#/components/schemas/Policy'\n        - type: object\n          properties:\n            accountLink:\n              $ref: '#/components/schemas/PolicyAccountLink'\n            conditions:\n              $ref: '#/components/schemas/PolicyRuleConditions'\n            maxClockSkew:\n              type: integer\n            provisioning:\n              $ref: '#/components/schemas/Provisioning'\n            subject:\n              $ref: '#/components/schemas/PolicySubject'\n    IdentityProviderPolicyProvider:\n      type: string\n      enum:\n        - ANY\n        - OKTA\n        - SPECIFIC_IDP\n    IdentityProviderPolicyRuleCondition:\n      type: object\n      properties:\n        idpIds:\n          type: array\n          items:\n            type: string\n        provider:\n          $ref: '#/components/schemas/IdentityProviderPolicyProvider'\n    IdentityProviderType:\n      type: string\n      enum:\n        - AgentlessDSSO\n        - FACEBOOK\n        - GOOGLE\n        - IWA\n        - LINKEDIN\n        - MICROSOFT\n        - OIDC\n        - OKTA\n        - SAML2\n        - X509\n    IdpPolicyRuleAction:\n      type: object\n      properties:\n        providers:\n          items:\n            $ref: '#/components/schemas/IdpPolicyRuleActionProvider'\n          type: array\n    IdpPolicyRuleActionProvider:\n      type: object\n      properties:\n        id:\n          readOnly: true\n          type: string\n        type:\n          type: string\n    IframeEmbedScopeAllowedApps:\n      type: string\n      enum:\n        - OKTA_ENDUSER\n    ImageUploadResponse:\n      type: object\n      properties:\n        url:\n          readOnly: true\n          type: string\n    InactivityPolicyRuleCondition:\n      type: object\n      properties:\n        number:\n          type: integer\n        unit:\n          type: string\n    InlineHook:\n      type: object\n      properties:\n        channel:\n          $ref: '#/components/schemas/InlineHookChannel'\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n        id:\n          type: string\n          readOnly: true\n        lastUpdated:\n          type: string\n          format: date-time\n          readOnly: true\n        name:\n          type: string\n        status:\n          $ref: '#/components/schemas/InlineHookStatus'\n        type:\n          $ref: '#/components/schemas/InlineHookType'\n        version:\n          type: string\n        _links:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n          readOnly: true\n    InlineHookChannel:\n      type: object\n      properties:\n        type:\n          $ref: '#/components/schemas/InlineHookChannelType'\n        version:\n          type: string\n      discriminator:\n        propertyName: type\n        mapping:\n          HTTP: '#/components/schemas/InlineHookChannelHttp'\n          OAUTH: '#/components/schemas/InlineHookChannelOAuth'\n    InlineHookChannelConfig:\n      type: object\n      properties:\n        authScheme:\n          $ref: '#/components/schemas/InlineHookChannelConfigAuthScheme'\n        headers:\n          type: array\n          items:\n            $ref: '#/components/schemas/InlineHookChannelConfigHeaders'\n        method:\n          type: string\n        uri:\n          type: string\n    InlineHookChannelConfigAuthScheme:\n      type: object\n      properties:\n        key:\n          type: string\n        type:\n          type: string\n        value:\n          type: string\n    InlineHookChannelConfigHeaders:\n      type: object\n      properties:\n        key:\n          type: string\n        value:\n          type: string\n    InlineHookChannelHttp:\n      allOf:\n        - $ref: '#/components/schemas/InlineHookChannel'\n        - type: object\n          properties:\n            config:\n              $ref: '#/components/schemas/InlineHookChannelConfig'\n    InlineHookChannelOAuth:\n      allOf:\n        - $ref: '#/components/schemas/InlineHookChannel'\n        - type: object\n          properties:\n            config:\n              $ref: '#/components/schemas/InlineHookOAuthChannelConfig'\n    InlineHookChannelType:\n      type: string\n      enum:\n        - HTTP\n        - OAUTH\n    InlineHookOAuthBasicConfig:\n      allOf:\n        - $ref: '#/components/schemas/InlineHookChannelConfig'\n      type: object\n      properties:\n        authType:\n          type: string\n        clientId:\n          type: string\n        scope:\n          type: string\n        tokenUrl:\n          type: string\n    InlineHookOAuthChannelConfig:\n      type: object\n      properties:\n        authType:\n          type: string\n      discriminator:\n        propertyName: authType\n        mapping:\n          client_secret_post: '#/components/schemas/InlineHookOAuthClientSecretConfig'\n          private_key_jwt: '#/components/schemas/InlineHookOAuthPrivateKeyJwtConfig'\n    InlineHookOAuthClientSecretConfig:\n      allOf:\n        - $ref: '#/components/schemas/InlineHookOAuthBasicConfig'\n      type: object\n      properties:\n        clientSecret:\n          type: string\n    InlineHookOAuthPrivateKeyJwtConfig:\n      allOf:\n        - $ref: '#/components/schemas/InlineHookOAuthBasicConfig'\n      type: object\n      properties:\n        hookKeyId:\n          type: string\n    InlineHookPayload:\n      type: object\n      x-okta-extensible: true\n    InlineHookResponse:\n      type: object\n      properties:\n        commands:\n          type: array\n          items:\n            $ref: '#/components/schemas/InlineHookResponseCommands'\n    InlineHookResponseCommandValue:\n      type: object\n      properties:\n        op:\n          type: string\n        path:\n          type: string\n        value:\n          type: string\n    InlineHookResponseCommands:\n      type: object\n      properties:\n        type:\n          type: string\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/InlineHookResponseCommandValue'\n    InlineHookStatus:\n      type: string\n      enum:\n        - ACTIVE\n        - INACTIVE\n    InlineHookType:\n      type: string\n      enum:\n        - com.okta.import.transform\n        - com.okta.oauth2.tokens.transform\n        - com.okta.saml.tokens.transform\n        - com.okta.user.credential.password.import\n        - com.okta.user.pre-registration\n    IssuerMode:\n      type: string\n      enum:\n        - CUSTOM_URL\n        - DYNAMIC\n        - ORG_URL\n    JsonWebKey:\n      type: object\n      properties:\n        alg:\n          type: string\n        created:\n          type: string\n          format: date-time\n        e:\n          type: string\n        expiresAt:\n          type: string\n          format: date-time\n        key_ops:\n          type: array\n          items:\n            type: string\n        kid:\n          type: string\n        kty:\n          type: string\n        lastUpdated:\n          type: string\n          format: date-time\n        'n':\n          type: string\n        status:\n          type: string\n        use:\n          type: string\n        x5c:\n          type: array\n          items:\n            type: string\n        x5t:\n          type: string\n        x5t#S256:\n          type: string\n        x5u:\n          type: string\n        _links:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n          readOnly: true\n    JwkUse:\n      type: object\n      properties:\n        use:\n          $ref: '#/components/schemas/JwkUseType'\n    JwkUseType:\n      type: string\n      enum:\n        - sig\n    KeyRequest:\n      type: object\n      properties:\n        name:\n          type: string\n    KnowledgeConstraint:\n      allOf:\n        - $ref: '#/components/schemas/AccessPolicyConstraint'\n    Language:\n      description: The language specified as an [IETF BCP 47 language tag](https://datatracker.ietf.org/doc/html/rfc5646).\n      type: string\n    LifecycleCreateSettingObject:\n      type: object\n      properties:\n        status:\n          $ref: '#/components/schemas/EnabledStatus'\n    LifecycleDeactivateSettingObject:\n      type: object\n      properties:\n        status:\n          $ref: '#/components/schemas/EnabledStatus'\n    LifecycleExpirationPolicyRuleCondition:\n      type: object\n      properties:\n        lifecycleStatus:\n          type: string\n        number:\n          type: integer\n        unit:\n          type: string\n    LifecycleStatus:\n      type: string\n      enum:\n        - ACTIVE\n        - INACTIVE\n    LinkedObject:\n      type: object\n      properties:\n        associated:\n          $ref: '#/components/schemas/LinkedObjectDetails'\n        primary:\n          $ref: '#/components/schemas/LinkedObjectDetails'\n        _links:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n          readOnly: true\n    LinkedObjectDetails:\n      type: object\n      properties:\n        description:\n          type: string\n        name:\n          type: string\n        title:\n          type: string\n        type:\n          $ref: '#/components/schemas/LinkedObjectDetailsType'\n    LinkedObjectDetailsType:\n      type: string\n      enum:\n        - USER\n    LoadingPageTouchPointVariant:\n      type: string\n      enum:\n        - NONE\n        - OKTA_DEFAULT\n    LocationGranularity:\n      type: string\n      enum:\n        - CITY\n        - COUNTRY\n        - LAT_LONG\n        - SUBDIVISION\n    LogActor:\n      type: object\n      properties:\n        alternateId:\n          type: string\n          readOnly: true\n        detail:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n          readOnly: true\n        displayName:\n          type: string\n          readOnly: true\n        id:\n          type: string\n          readOnly: true\n        type:\n          type: string\n          readOnly: true\n    LogAuthenticationContext:\n      type: object\n      properties:\n        authenticationProvider:\n          $ref: '#/components/schemas/LogAuthenticationProvider'\n        authenticationStep:\n          type: integer\n          readOnly: true\n        credentialProvider:\n          $ref: '#/components/schemas/LogCredentialProvider'\n        credentialType:\n          $ref: '#/components/schemas/LogCredentialType'\n        externalSessionId:\n          type: string\n          readOnly: true\n        interface:\n          type: string\n          readOnly: true\n        issuer:\n          $ref: '#/components/schemas/LogIssuer'\n    LogAuthenticationProvider:\n      type: string\n      enum:\n        - ACTIVE_DIRECTORY\n        - FACTOR_PROVIDER\n        - FEDERATION\n        - LDAP\n        - OKTA_AUTHENTICATION_PROVIDER\n        - SOCIAL\n    LogClient:\n      type: object\n      properties:\n        device:\n          type: string\n          readOnly: true\n        geographicalContext:\n          $ref: '#/components/schemas/LogGeographicalContext'\n        id:\n          type: string\n          readOnly: true\n        ipAddress:\n          type: string\n          readOnly: true\n        userAgent:\n          $ref: '#/components/schemas/LogUserAgent'\n        zone:\n          type: string\n          readOnly: true\n    LogCredentialProvider:\n      type: string\n      enum:\n        - DUO\n        - GOOGLE\n        - OKTA_AUTHENTICATION_PROVIDER\n        - OKTA_CREDENTIAL_PROVIDER\n        - RSA\n        - SYMANTEC\n        - YUBIKEY\n    LogCredentialType:\n      type: string\n      enum:\n        - ASSERTION\n        - EMAIL\n        - IWA\n        - JWT\n        - OAuth 2.0\n        - OTP\n        - PASSWORD\n        - SMS\n    LogDebugContext:\n      type: object\n      properties:\n        debugData:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n          readOnly: true\n    LogEvent:\n      type: object\n      properties:\n        actor:\n          $ref: '#/components/schemas/LogActor'\n        authenticationContext:\n          $ref: '#/components/schemas/LogAuthenticationContext'\n        client:\n          $ref: '#/components/schemas/LogClient'\n        debugContext:\n          $ref: '#/components/schemas/LogDebugContext'\n        displayMessage:\n          type: string\n          readOnly: true\n        eventType:\n          type: string\n          readOnly: true\n        legacyEventType:\n          type: string\n          readOnly: true\n        outcome:\n          $ref: '#/components/schemas/LogOutcome'\n        published:\n          type: string\n          format: date-time\n          readOnly: true\n        request:\n          $ref: '#/components/schemas/LogRequest'\n        securityContext:\n          $ref: '#/components/schemas/LogSecurityContext'\n        severity:\n          $ref: '#/components/schemas/LogSeverity'\n        target:\n          type: array\n          readOnly: true\n          items:\n            $ref: '#/components/schemas/LogTarget'\n        transaction:\n          $ref: '#/components/schemas/LogTransaction'\n        uuid:\n          type: string\n          readOnly: true\n        version:\n          type: string\n          readOnly: true\n    LogGeographicalContext:\n      type: object\n      properties:\n        city:\n          type: string\n          readOnly: true\n        country:\n          type: string\n          readOnly: true\n        geolocation:\n          $ref: '#/components/schemas/LogGeolocation'\n        postalCode:\n          type: string\n          readOnly: true\n        state:\n          type: string\n          readOnly: true\n    LogGeolocation:\n      type: object\n      properties:\n        lat:\n          type: number\n          format: double\n          readOnly: true\n        lon:\n          type: number\n          format: double\n          readOnly: true\n    LogIpAddress:\n      type: object\n      properties:\n        geographicalContext:\n          $ref: '#/components/schemas/LogGeographicalContext'\n        ip:\n          type: string\n          readOnly: true\n        source:\n          type: string\n          readOnly: true\n        version:\n          type: string\n          readOnly: true\n    LogIssuer:\n      type: object\n      properties:\n        id:\n          type: string\n          readOnly: true\n        type:\n          type: string\n          readOnly: true\n    LogOutcome:\n      type: object\n      properties:\n        reason:\n          type: string\n          readOnly: true\n        result:\n          type: string\n          readOnly: true\n    LogRequest:\n      type: object\n      properties:\n        ipChain:\n          type: array\n          readOnly: true\n          items:\n            $ref: '#/components/schemas/LogIpAddress'\n    LogSecurityContext:\n      type: object\n      properties:\n        asNumber:\n          type: integer\n          readOnly: true\n        asOrg:\n          type: string\n          readOnly: true\n        domain:\n          type: string\n          readOnly: true\n        isp:\n          type: string\n          readOnly: true\n        isProxy:\n          type: boolean\n          readOnly: true\n    LogSeverity:\n      type: string\n      enum:\n        - DEBUG\n        - ERROR\n        - INFO\n        - WARN\n    LogStream:\n      type: object\n      properties:\n        created:\n          type: string\n          format: date-time\n          description: Timestamp when the Log Stream was created\n          readOnly: true\n        id:\n          type: string\n          description: Unique key for the Log Stream\n          readOnly: true\n        lastUpdated:\n          type: string\n          format: date-time\n          description: Timestamp when the Log Stream was last updated\n          readOnly: true\n        name:\n          type: string\n          description: Unique name for the Log Stream\n        status:\n          $ref: '#/components/schemas/LifecycleStatus'\n        type:\n          $ref: '#/components/schemas/LogStreamType'\n        _links:\n          type: object\n          properties:\n            self:\n              $ref: '#/components/schemas/HrefObject'\n            activate:\n              $ref: '#/components/schemas/HrefObject'\n            deactivate:\n              $ref: '#/components/schemas/HrefObject'\n          readOnly: true\n      discriminator:\n        propertyName: type\n        mapping:\n          aws_eventbridge: '#/components/schemas/LogStreamAws'\n          splunk_cloud_logstreaming: '#/components/schemas/LogStreamSplunk'\n    LogStreamAws:\n      allOf:\n        - $ref: '#/components/schemas/LogStream'\n        - type: object\n          properties:\n            settings:\n              $ref: '#/components/schemas/LogStreamSettingsAws'\n    LogStreamSchema:\n      type: object\n      properties:\n        $schema:\n          type: string\n          readOnly: true\n        created:\n          type: string\n          readOnly: true\n        errorMessage:\n          type: object\n        id:\n          type: string\n          readOnly: true\n        lastUpdated:\n          type: string\n          readOnly: true\n        name:\n          type: string\n          readOnly: true\n        properties:\n          type: object\n        required:\n          type: array\n          items:\n            type: string\n        title:\n          type: string\n        type:\n          type: string\n          readOnly: true\n        _links:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n          readOnly: true\n    LogStreamSettings:\n      type: object\n    LogStreamSettingsAws:\n      allOf:\n        - $ref: '#/components/schemas/LogStreamSettings'\n        - description: The AWS EventBridge Settings object specifies the configuration for the `aws_eventbridge` Log Stream type. This can't be modified after creation.\n          type: object\n          properties:\n            accountId:\n              type: string\n              description: Your AWS account ID\n              minLength: 12\n              maxLength: 12\n            eventSourceName:\n              type: string\n              description: An alphanumeric name (no spaces) to identify this event source in AWS EventBridge\n              pattern: ^[a-zA-Z0-9.\\-_]$\n              minLength: 1\n              maxLength: 75\n            region:\n              $ref: '#/components/schemas/AwsRegion'\n    LogStreamSettingsSplunk:\n      allOf:\n        - $ref: '#/components/schemas/LogStreamSettings'\n        - description: The Splunk Cloud Settings object specifies the configuration for the `splunk_cloud_logstreaming` Log Stream type.\n          type: object\n          properties:\n            host:\n              type: string\n              description: 'The domain name for your Splunk Cloud instance. Don''t include `http` or `https` in the string. For example: `acme.splunkcloud.com`'\n              minLength: 17\n              maxLength: 116\n            token:\n              type: string\n              description: The HEC token for your Splunk Cloud HTTP Event Collector\n              pattern: (?i)^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\n    LogStreamSplunk:\n      allOf:\n        - $ref: '#/components/schemas/LogStream'\n        - type: object\n          properties:\n            settings:\n              $ref: '#/components/schemas/LogStreamSettingsSplunk'\n    LogStreamType:\n      description: The Log Stream type specifies the streaming provider used. Okta supports [AWS EventBridge](https://aws.amazon.com/eventbridge/) and [Splunk Cloud](https://www.splunk.com/en_us/software/splunk-cloud-platform.html).\n      type: string\n      enum:\n        - aws_eventbridge\n        - splunk_cloud_logstreaming\n    LogTarget:\n      type: object\n      properties:\n        alternateId:\n          type: string\n          readOnly: true\n        detailEntry:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n          readOnly: true\n        displayName:\n          type: string\n          readOnly: true\n        id:\n          type: string\n          readOnly: true\n        type:\n          type: string\n          readOnly: true\n    LogTransaction:\n      type: object\n      properties:\n        detail:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n          readOnly: true\n        id:\n          type: string\n          readOnly: true\n        type:\n          type: string\n          readOnly: true\n    LogUserAgent:\n      type: object\n      properties:\n        browser:\n          type: string\n          readOnly: true\n        os:\n          type: string\n          readOnly: true\n        rawUserAgent:\n          type: string\n          readOnly: true\n    MDMEnrollmentPolicyEnrollment:\n      type: string\n      enum:\n        - ANY_OR_NONE\n        - OMM\n    MDMEnrollmentPolicyRuleCondition:\n      type: object\n      properties:\n        blockNonSafeAndroid:\n          type: boolean\n        enrollment:\n          $ref: '#/components/schemas/MDMEnrollmentPolicyEnrollment'\n    MultifactorEnrollmentPolicy:\n      allOf:\n        - $ref: '#/components/schemas/Policy'\n        - type: object\n          properties:\n            conditions:\n              $ref: '#/components/schemas/PolicyRuleConditions'\n            settings:\n              $ref: '#/components/schemas/MultifactorEnrollmentPolicySettings'\n    MultifactorEnrollmentPolicyAuthenticatorSettings:\n      type: object\n      properties:\n        enroll:\n          type: object\n          properties:\n            self:\n              $ref: '#/components/schemas/MultifactorEnrollmentPolicyAuthenticatorStatus'\n        key:\n          $ref: '#/components/schemas/MultifactorEnrollmentPolicyAuthenticatorType'\n    MultifactorEnrollmentPolicyAuthenticatorStatus:\n      type: string\n      enum:\n        - NOT_ALLOWED\n        - OPTIONAL\n        - REQUIRED\n    MultifactorEnrollmentPolicyAuthenticatorType:\n      type: string\n      enum:\n        - custom_app\n        - custom_otp\n        - duo\n        - external_idp\n        - google_otp\n        - okta_email\n        - okta_password\n        - okta_verify\n        - onprem_mfa\n        - phone_number\n        - rsa_token\n        - security_question\n        - symantec_vip\n        - webauthn\n        - yubikey_token\n    MultifactorEnrollmentPolicySettings:\n      type: object\n      properties:\n        authenticators:\n          items:\n            $ref: '#/components/schemas/MultifactorEnrollmentPolicyAuthenticatorSettings'\n          type: array\n        type:\n          $ref: '#/components/schemas/MultifactorEnrollmentPolicySettingsType'\n    MultifactorEnrollmentPolicySettingsType:\n      type: string\n      enum:\n        - AUTHENTICATORS\n    NetworkZone:\n      type: object\n      properties:\n        asns:\n          type: array\n          items:\n            type: string\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n        gateways:\n          type: array\n          items:\n            $ref: '#/components/schemas/NetworkZoneAddress'\n        id:\n          type: string\n          readOnly: true\n        lastUpdated:\n          type: string\n          format: date-time\n          readOnly: true\n        locations:\n          type: array\n          items:\n            $ref: '#/components/schemas/NetworkZoneLocation'\n        name:\n          type: string\n        proxies:\n          type: array\n          items:\n            $ref: '#/components/schemas/NetworkZoneAddress'\n        proxyType:\n          type: string\n        status:\n          $ref: '#/components/schemas/NetworkZoneStatus'\n        system:\n          type: boolean\n        type:\n          $ref: '#/components/schemas/NetworkZoneType'\n        usage:\n          $ref: '#/components/schemas/NetworkZoneUsage'\n        _links:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n          readOnly: true\n    NetworkZoneAddress:\n      type: object\n      properties:\n        type:\n          $ref: '#/components/schemas/NetworkZoneAddressType'\n        value:\n          type: string\n    NetworkZoneAddressType:\n      type: string\n      enum:\n        - CIDR\n        - RANGE\n    NetworkZoneLocation:\n      type: object\n      properties:\n        country:\n          type: string\n        region:\n          type: string\n    NetworkZoneStatus:\n      type: string\n      enum:\n        - ACTIVE\n        - INACTIVE\n    NetworkZoneType:\n      type: string\n      enum:\n        - DYNAMIC\n        - IP\n    NetworkZoneUsage:\n      type: string\n      enum:\n        - BLOCKLIST\n        - POLICY\n    NotificationType:\n      type: string\n      enum:\n        - AD_AGENT\n        - APP_IMPORT\n        - CONNECTOR_AGENT\n        - IWA_AGENT\n        - LDAP_AGENT\n        - OKTA_ANNOUNCEMENT\n        - OKTA_ISSUE\n        - OKTA_UPDATE\n        - RATELIMIT_NOTIFICATION\n        - REPORT_SUSPICIOUS_ACTIVITY\n        - USER_DEPROVISION\n        - USER_LOCKED_OUT\n    OAuth2Actor:\n      type: object\n      properties:\n        id:\n          type: string\n          readOnly: true\n        type:\n          type: string\n    OAuth2Claim:\n      type: object\n      properties:\n        alwaysIncludeInToken:\n          type: boolean\n        claimType:\n          $ref: '#/components/schemas/OAuth2ClaimType'\n        conditions:\n          $ref: '#/components/schemas/OAuth2ClaimConditions'\n        group_filter_type:\n          $ref: '#/components/schemas/OAuth2ClaimGroupFilterType'\n        id:\n          type: string\n          readOnly: true\n        name:\n          type: string\n        status:\n          $ref: '#/components/schemas/LifecycleStatus'\n        system:\n          type: boolean\n        value:\n          type: string\n        valueType:\n          $ref: '#/components/schemas/OAuth2ClaimValueType'\n        _links:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n          readOnly: true\n    OAuth2ClaimConditions:\n      type: object\n      properties:\n        scopes:\n          type: array\n          items:\n            type: string\n    OAuth2ClaimGroupFilterType:\n      type: string\n      enum:\n        - CONTAINS\n        - EQUALS\n        - REGEX\n        - STARTS_WITH\n    OAuth2ClaimType:\n      type: string\n      enum:\n        - IDENTITY\n        - RESOURCE\n    OAuth2ClaimValueType:\n      type: string\n      enum:\n        - EXPRESSION\n        - GROUPS\n        - SYSTEM\n    OAuth2Client:\n      type: object\n      properties:\n        client_id:\n          type: string\n          readOnly: true\n        client_name:\n          type: string\n          readOnly: true\n        client_uri:\n          type: string\n          readOnly: true\n        logo_uri:\n          type: string\n          readOnly: true\n        _links:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n          readOnly: true\n    OAuth2RefreshToken:\n      type: object\n      properties:\n        clientId:\n          type: string\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n        createdBy:\n          $ref: '#/components/schemas/OAuth2Actor'\n        expiresAt:\n          type: string\n          format: date-time\n          readOnly: true\n        id:\n          type: string\n          readOnly: true\n        issuer:\n          type: string\n        lastUpdated:\n          type: string\n          format: date-time\n          readOnly: true\n        scopes:\n          type: array\n          items:\n            type: string\n        status:\n          $ref: '#/components/schemas/GrantOrTokenStatus'\n        userId:\n          type: string\n        _embedded:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n          readOnly: true\n        _links:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n          readOnly: true\n    OAuth2Scope:\n      type: object\n      properties:\n        consent:\n          $ref: '#/components/schemas/OAuth2ScopeConsentType'\n        default:\n          type: boolean\n        description:\n          type: string\n        displayName:\n          type: string\n        id:\n          type: string\n          readOnly: true\n        metadataPublish:\n          $ref: '#/components/schemas/OAuth2ScopeMetadataPublish'\n        name:\n          type: string\n        system:\n          type: boolean\n    OAuth2ScopeConsentGrant:\n      type: object\n      properties:\n        clientId:\n          type: string\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n        createdBy:\n          $ref: '#/components/schemas/OAuth2Actor'\n        id:\n          type: string\n          readOnly: true\n        issuer:\n          type: string\n        lastUpdated:\n          type: string\n          format: date-time\n          readOnly: true\n        scopeId:\n          type: string\n        source:\n          $ref: '#/components/schemas/OAuth2ScopeConsentGrantSource'\n        status:\n          $ref: '#/components/schemas/GrantOrTokenStatus'\n        userId:\n          type: string\n        _embedded:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n          readOnly: true\n        _links:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n          readOnly: true\n    OAuth2ScopeConsentGrantSource:\n      type: string\n      enum:\n        - ADMIN\n        - END_USER\n    OAuth2ScopeConsentType:\n      type: string\n      enum:\n        - ADMIN\n        - IMPLICIT\n        - REQUIRED\n    OAuth2ScopeMetadataPublish:\n      type: string\n      enum:\n        - ALL_CLIENTS\n        - NO_CLIENTS\n    OAuth2ScopesMediationPolicyRuleCondition:\n      type: object\n      properties:\n        include:\n          type: array\n          items:\n            type: string\n    OAuth2Token:\n      type: object\n      properties:\n        clientId:\n          type: string\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n        expiresAt:\n          type: string\n          format: date-time\n          readOnly: true\n        id:\n          type: string\n          readOnly: true\n        issuer:\n          type: string\n        lastUpdated:\n          type: string\n          format: date-time\n          readOnly: true\n        scopes:\n          type: array\n          items:\n            type: string\n        status:\n          $ref: '#/components/schemas/GrantOrTokenStatus'\n        userId:\n          type: string\n        _embedded:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n          readOnly: true\n        _links:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n          readOnly: true\n    OAuthApplicationCredentials:\n      allOf:\n        - $ref: '#/components/schemas/ApplicationCredentials'\n        - type: object\n          properties:\n            oauthClient:\n              $ref: '#/components/schemas/ApplicationCredentialsOAuthClient'\n    OAuthEndpointAuthenticationMethod:\n      type: string\n      enum:\n        - client_secret_basic\n        - client_secret_jwt\n        - client_secret_post\n        - none\n        - private_key_jwt\n    OAuthGrantType:\n      type: string\n      enum:\n        - authorization_code\n        - client_credentials\n        - implicit\n        - interaction_code\n        - password\n        - refresh_token\n    OAuthResponseType:\n      type: string\n      enum:\n        - code\n        - id_token\n        - token\n    OktaSignOnPolicy:\n      allOf:\n        - $ref: '#/components/schemas/Policy'\n        - type: object\n          properties:\n            conditions:\n              $ref: '#/components/schemas/OktaSignOnPolicyConditions'\n    OktaSignOnPolicyConditions:\n      allOf:\n        - $ref: '#/components/schemas/PolicyRuleConditions'\n        - type: object\n          properties:\n            people:\n              $ref: '#/components/schemas/PolicyPeopleCondition'\n    OktaSignOnPolicyFactorPromptMode:\n      type: string\n      enum:\n        - ALWAYS\n        - DEVICE\n        - SESSION\n    OktaSignOnPolicyRule:\n      allOf:\n        - $ref: '#/components/schemas/PolicyRule'\n        - type: object\n          properties:\n            actions:\n              $ref: '#/components/schemas/OktaSignOnPolicyRuleActions'\n            conditions:\n              $ref: '#/components/schemas/OktaSignOnPolicyRuleConditions'\n    OktaSignOnPolicyRuleActions:\n      allOf:\n        - $ref: '#/components/schemas/PolicyRuleActions'\n        - type: object\n          properties:\n            signon:\n              $ref: '#/components/schemas/OktaSignOnPolicyRuleSignonActions'\n    OktaSignOnPolicyRuleConditions:\n      allOf:\n        - $ref: '#/components/schemas/PolicyRuleConditions'\n        - type: object\n          properties:\n            authContext:\n              $ref: '#/components/schemas/PolicyRuleAuthContextCondition'\n            network:\n              $ref: '#/components/schemas/PolicyNetworkCondition'\n            people:\n              $ref: '#/components/schemas/PolicyPeopleCondition'\n    OktaSignOnPolicyRuleSignonActions:\n      type: object\n      properties:\n        access:\n          $ref: '#/components/schemas/PolicyAccess'\n        factorLifetime:\n          type: integer\n        factorPromptMode:\n          $ref: '#/components/schemas/OktaSignOnPolicyFactorPromptMode'\n        rememberDeviceByDefault:\n          type: boolean\n          default: false\n        requireFactor:\n          type: boolean\n          default: false\n        session:\n          $ref: '#/components/schemas/OktaSignOnPolicyRuleSignonSessionActions'\n    OktaSignOnPolicyRuleSignonSessionActions:\n      type: object\n      properties:\n        maxSessionIdleMinutes:\n          type: integer\n        maxSessionLifetimeMinutes:\n          type: integer\n        usePersistentCookie:\n          type: boolean\n          default: false\n    OpenIdConnectApplication:\n      x-okta-defined-as:\n        name: oidc_client\n      allOf:\n        - $ref: '#/components/schemas/Application'\n        - type: object\n          properties:\n            credentials:\n              $ref: '#/components/schemas/OAuthApplicationCredentials'\n            name:\n              type: string\n              default: oidc_client\n            settings:\n              $ref: '#/components/schemas/OpenIdConnectApplicationSettings'\n    OpenIdConnectApplicationConsentMethod:\n      type: string\n      enum:\n        - REQUIRED\n        - TRUSTED\n    OpenIdConnectApplicationIdpInitiatedLogin:\n      type: object\n      properties:\n        default_scope:\n          type: array\n          items:\n            type: string\n        mode:\n          type: string\n    OpenIdConnectApplicationIssuerMode:\n      type: string\n      enum:\n        - CUSTOM_URL\n        - DYNAMIC\n        - ORG_URL\n    OpenIdConnectApplicationSettings:\n      allOf:\n        - $ref: '#/components/schemas/ApplicationSettings'\n        - type: object\n          properties:\n            oauthClient:\n              $ref: '#/components/schemas/OpenIdConnectApplicationSettingsClient'\n    OpenIdConnectApplicationSettingsClient:\n      type: object\n      properties:\n        application_type:\n          $ref: '#/components/schemas/OpenIdConnectApplicationType'\n        client_uri:\n          type: string\n        consent_method:\n          $ref: '#/components/schemas/OpenIdConnectApplicationConsentMethod'\n        grant_types:\n          type: array\n          items:\n            $ref: '#/components/schemas/OAuthGrantType'\n        idp_initiated_login:\n          $ref: '#/components/schemas/OpenIdConnectApplicationIdpInitiatedLogin'\n        initiate_login_uri:\n          type: string\n        issuer_mode:\n          $ref: '#/components/schemas/OpenIdConnectApplicationIssuerMode'\n        jwks:\n          $ref: '#/components/schemas/OpenIdConnectApplicationSettingsClientKeys'\n        logo_uri:\n          type: string\n        policy_uri:\n          type: string\n        post_logout_redirect_uris:\n          type: array\n          items:\n            type: string\n        redirect_uris:\n          type: array\n          items:\n            type: string\n        refresh_token:\n          $ref: '#/components/schemas/OpenIdConnectApplicationSettingsRefreshToken'\n        response_types:\n          type: array\n          items:\n            $ref: '#/components/schemas/OAuthResponseType'\n        tos_uri:\n          type: string\n        wildcard_redirect:\n          type: string\n    OpenIdConnectApplicationSettingsClientKeys:\n      type: object\n      properties:\n        keys:\n          type: array\n          items:\n            $ref: '#/components/schemas/JsonWebKey'\n    OpenIdConnectApplicationSettingsRefreshToken:\n      type: object\n      properties:\n        leeway:\n          type: integer\n        rotation_type:\n          $ref: '#/components/schemas/OpenIdConnectRefreshTokenRotationType'\n    OpenIdConnectApplicationType:\n      type: string\n      enum:\n        - browser\n        - native\n        - service\n        - web\n    OpenIdConnectRefreshTokenRotationType:\n      type: string\n      enum:\n        - ROTATE\n        - STATIC\n    OperationalStatus:\n      description: Operational status of a given agent\n      type: string\n      enum:\n        - DEGRADED\n        - DISRUPTED\n        - INACTIVE\n        - OPERATIONAL\n    OrgContactType:\n      type: string\n      enum:\n        - BILLING\n        - TECHNICAL\n    OrgContactTypeObj:\n      type: object\n      properties:\n        contactType:\n          $ref: '#/components/schemas/OrgContactType'\n        _links:\n          additionalProperties:\n            type: object\n    OrgContactUser:\n      type: object\n      properties:\n        userId:\n          type: string\n        _links:\n          additionalProperties:\n            type: object\n          readOnly: true\n          type: object\n    OrgOktaCommunicationSetting:\n      type: object\n      properties:\n        optOutEmailUsers:\n          type: boolean\n          readOnly: true\n        _links:\n          additionalProperties:\n            type: object\n    OrgOktaSupportSetting:\n      type: string\n      enum:\n        - DISABLED\n        - ENABLED\n    OrgOktaSupportSettingsObj:\n      type: object\n      properties:\n        expiration:\n          format: date-time\n          type: string\n          readOnly: true\n        support:\n          $ref: '#/components/schemas/OrgOktaSupportSetting'\n        _links:\n          additionalProperties:\n            type: object\n    OrgPreferences:\n      type: object\n      properties:\n        showEndUserFooter:\n          type: boolean\n          readOnly: true\n        _links:\n          additionalProperties:\n            type: object\n    OrgSetting:\n      type: object\n      properties:\n        address1:\n          type: string\n        address2:\n          type: string\n        city:\n          type: string\n        companyName:\n          type: string\n        country:\n          type: string\n        created:\n          format: date-time\n          readOnly: true\n          type: string\n        endUserSupportHelpURL:\n          type: string\n        expiresAt:\n          format: date-time\n          readOnly: true\n          type: string\n        id:\n          readOnly: true\n          type: string\n        lastUpdated:\n          format: date-time\n          readOnly: true\n          type: string\n        phoneNumber:\n          type: string\n        postalCode:\n          type: string\n        state:\n          type: string\n        status:\n          readOnly: true\n          type: string\n        subdomain:\n          readOnly: true\n          type: string\n        supportPhoneNumber:\n          type: string\n        website:\n          type: string\n        _links:\n          additionalProperties:\n            type: object\n    PageRoot:\n      type: object\n      properties:\n        _embedded:\n          type: object\n          properties:\n            default:\n              $ref: '#/components/schemas/CustomizablePage'\n            customized:\n              $ref: '#/components/schemas/CustomizablePage'\n            customizedUrl:\n              type: string\n              format: uri\n            preview:\n              $ref: '#/components/schemas/CustomizablePage'\n            previewUrl:\n              type: string\n              format: uri\n          readOnly: true\n        _links:\n          type: object\n          properties:\n            self:\n              $ref: '#/components/schemas/HrefObject'\n            default:\n              $ref: '#/components/schemas/HrefObject'\n            customized:\n              $ref: '#/components/schemas/HrefObject'\n            preview:\n              $ref: '#/components/schemas/HrefObject'\n          readOnly: true\n    PasswordCredential:\n      type: object\n      properties:\n        hash:\n          $ref: '#/components/schemas/PasswordCredentialHash'\n        hook:\n          $ref: '#/components/schemas/PasswordCredentialHook'\n        value:\n          type: string\n          format: password\n    PasswordCredentialHash:\n      type: object\n      properties:\n        algorithm:\n          $ref: '#/components/schemas/PasswordCredentialHashAlgorithm'\n        salt:\n          type: string\n        saltOrder:\n          type: string\n        value:\n          type: string\n        workFactor:\n          type: integer\n    PasswordCredentialHashAlgorithm:\n      type: string\n      enum:\n        - BCRYPT\n        - MD5\n        - SHA-1\n        - SHA-256\n        - SHA-512\n    PasswordCredentialHook:\n      type: object\n      properties:\n        type:\n          type: string\n    PasswordDictionary:\n      type: object\n      properties:\n        common:\n          $ref: '#/components/schemas/PasswordDictionaryCommon'\n    PasswordDictionaryCommon:\n      type: object\n      properties:\n        exclude:\n          type: boolean\n          default: false\n    PasswordExpirationPolicyRuleCondition:\n      type: object\n      properties:\n        number:\n          type: integer\n        unit:\n          type: string\n    PasswordPolicy:\n      allOf:\n        - $ref: '#/components/schemas/Policy'\n        - type: object\n          properties:\n            conditions:\n              $ref: '#/components/schemas/PasswordPolicyConditions'\n            settings:\n              $ref: '#/components/schemas/PasswordPolicySettings'\n    PasswordPolicyAuthenticationProviderCondition:\n      type: object\n      properties:\n        include:\n          type: array\n          items:\n            type: string\n        provider:\n          $ref: '#/components/schemas/PasswordPolicyAuthenticationProviderType'\n    PasswordPolicyAuthenticationProviderType:\n      type: string\n      enum:\n        - ACTIVE_DIRECTORY\n        - ANY\n        - LDAP\n        - OKTA\n    PasswordPolicyConditions:\n      allOf:\n        - $ref: '#/components/schemas/PolicyRuleConditions'\n        - type: object\n          properties:\n            authProvider:\n              $ref: '#/components/schemas/PasswordPolicyAuthenticationProviderCondition'\n            people:\n              $ref: '#/components/schemas/PolicyPeopleCondition'\n    PasswordPolicyDelegationSettings:\n      type: object\n      properties:\n        options:\n          $ref: '#/components/schemas/PasswordPolicyDelegationSettingsOptions'\n    PasswordPolicyDelegationSettingsOptions:\n      type: object\n      properties:\n        skipUnlock:\n          type: boolean\n    PasswordPolicyPasswordSettings:\n      type: object\n      properties:\n        age:\n          $ref: '#/components/schemas/PasswordPolicyPasswordSettingsAge'\n        complexity:\n          $ref: '#/components/schemas/PasswordPolicyPasswordSettingsComplexity'\n        lockout:\n          $ref: '#/components/schemas/PasswordPolicyPasswordSettingsLockout'\n    PasswordPolicyPasswordSettingsAge:\n      type: object\n      properties:\n        expireWarnDays:\n          type: integer\n        historyCount:\n          type: integer\n        maxAgeDays:\n          type: integer\n        minAgeMinutes:\n          type: integer\n    PasswordPolicyPasswordSettingsComplexity:\n      type: object\n      properties:\n        dictionary:\n          $ref: '#/components/schemas/PasswordDictionary'\n        excludeAttributes:\n          type: array\n          items:\n            type: string\n        excludeUsername:\n          type: boolean\n          default: true\n        minLength:\n          type: integer\n        minLowerCase:\n          type: integer\n        minNumber:\n          type: integer\n        minSymbol:\n          type: integer\n        minUpperCase:\n          type: integer\n    PasswordPolicyPasswordSettingsLockout:\n      type: object\n      properties:\n        autoUnlockMinutes:\n          type: integer\n        maxAttempts:\n          type: integer\n        showLockoutFailures:\n          type: boolean\n        userLockoutNotificationChannels:\n          type: array\n          items:\n            type: string\n    PasswordPolicyRecoveryEmail:\n      type: object\n      properties:\n        properties:\n          $ref: '#/components/schemas/PasswordPolicyRecoveryEmailProperties'\n        status:\n          $ref: '#/components/schemas/LifecycleStatus'\n    PasswordPolicyRecoveryEmailProperties:\n      type: object\n      properties:\n        recoveryToken:\n          $ref: '#/components/schemas/PasswordPolicyRecoveryEmailRecoveryToken'\n    PasswordPolicyRecoveryEmailRecoveryToken:\n      type: object\n      properties:\n        tokenLifetimeMinutes:\n          type: integer\n    PasswordPolicyRecoveryFactorSettings:\n      type: object\n      properties:\n        status:\n          $ref: '#/components/schemas/LifecycleStatus'\n    PasswordPolicyRecoveryFactors:\n      type: object\n      properties:\n        okta_call:\n          $ref: '#/components/schemas/PasswordPolicyRecoveryFactorSettings'\n        okta_email:\n          $ref: '#/components/schemas/PasswordPolicyRecoveryEmail'\n        okta_sms:\n          $ref: '#/components/schemas/PasswordPolicyRecoveryFactorSettings'\n        recovery_question:\n          $ref: '#/components/schemas/PasswordPolicyRecoveryQuestion'\n    PasswordPolicyRecoveryQuestion:\n      type: object\n      properties:\n        properties:\n          $ref: '#/components/schemas/PasswordPolicyRecoveryQuestionProperties'\n        status:\n          $ref: '#/components/schemas/LifecycleStatus'\n    PasswordPolicyRecoveryQuestionComplexity:\n      type: object\n      properties:\n        minLength:\n          type: integer\n          readOnly: true\n    PasswordPolicyRecoveryQuestionProperties:\n      type: object\n      properties:\n        complexity:\n          $ref: '#/components/schemas/PasswordPolicyRecoveryQuestionComplexity'\n    PasswordPolicyRecoverySettings:\n      type: object\n      properties:\n        factors:\n          $ref: '#/components/schemas/PasswordPolicyRecoveryFactors'\n    PasswordPolicyRule:\n      allOf:\n        - $ref: '#/components/schemas/PolicyRule'\n        - type: object\n          properties:\n            actions:\n              $ref: '#/components/schemas/PasswordPolicyRuleActions'\n            conditions:\n              $ref: '#/components/schemas/PasswordPolicyRuleConditions'\n    PasswordPolicyRuleAction:\n      type: object\n      properties:\n        access:\n          $ref: '#/components/schemas/PolicyAccess'\n    PasswordPolicyRuleActions:\n      allOf:\n        - $ref: '#/components/schemas/PolicyRuleActions'\n        - type: object\n          properties:\n            passwordChange:\n              $ref: '#/components/schemas/PasswordPolicyRuleAction'\n            selfServicePasswordReset:\n              $ref: '#/components/schemas/PasswordPolicyRuleAction'\n            selfServiceUnlock:\n              $ref: '#/components/schemas/PasswordPolicyRuleAction'\n    PasswordPolicyRuleConditions:\n      allOf:\n        - $ref: '#/components/schemas/PolicyRuleConditions'\n        - type: object\n          properties:\n            network:\n              $ref: '#/components/schemas/PolicyNetworkCondition'\n            people:\n              $ref: '#/components/schemas/PolicyPeopleCondition'\n    PasswordPolicySettings:\n      type: object\n      properties:\n        delegation:\n          $ref: '#/components/schemas/PasswordPolicyDelegationSettings'\n        password:\n          $ref: '#/components/schemas/PasswordPolicyPasswordSettings'\n        recovery:\n          $ref: '#/components/schemas/PasswordPolicyRecoverySettings'\n    PasswordSettingObject:\n      type: object\n      properties:\n        change:\n          $ref: '#/components/schemas/ChangeEnum'\n        seed:\n          $ref: '#/components/schemas/SeedEnum'\n        status:\n          $ref: '#/components/schemas/EnabledStatus'\n    PerClientRateLimitMode:\n      type: string\n      enum:\n        - DISABLE\n        - ENFORCE\n        - PREVIEW\n    PerClientRateLimitSettings:\n      title: PerClientRateLimitSettings\n      description: ''\n      type: object\n      properties:\n        defaultMode:\n          $ref: '#/components/schemas/PerClientRateLimitMode'\n          description: The default PerClientRateLimitMode that applies to any use case in the absence of a more specific override\n        useCaseModeOverrides:\n          description: A map of Per-Client Rate Limit Use Case to the applicable PerClientRateLimitMode. Overrides the `defaultMode` property for the specified use cases.\n          type: object\n          properties:\n            LOGIN_PAGE:\n              $ref: '#/components/schemas/PerClientRateLimitMode'\n            OAUTH2_AUTHORIZE:\n              $ref: '#/components/schemas/PerClientRateLimitMode'\n            OIE_APP_INTENT:\n              $ref: '#/components/schemas/PerClientRateLimitMode'\n      required:\n        - defaultMode\n    Permission:\n      type: object\n      properties:\n        created:\n          type: string\n          format: date-time\n          description: Timestamp when the role was created\n          readOnly: true\n        label:\n          type: string\n          description: The permission type\n          readOnly: true\n        lastUpdated:\n          type: string\n          format: date-time\n          description: Timestamp when the role was last updated\n          readOnly: true\n        _links:\n          type: object\n          properties:\n            self:\n              $ref: '#/components/schemas/HrefObject'\n            role:\n              $ref: '#/components/schemas/HrefObject'\n          readOnly: true\n    Permissions:\n      type: object\n      properties:\n        permissions:\n          type: array\n          items:\n            $ref: '#/components/schemas/Permission'\n    PipelineType:\n      description: The authentication pipeline of the org. `idx` means the org is using the Identity Engine, while `v1` means the org is using the Classic authentication pipeline.\n      type: string\n      enum:\n        - idx\n        - v1\n    Platform:\n      type: string\n      enum:\n        - ANDROID\n        - IOS\n        - MACOS\n        - WINDOWS\n    PlatformConditionEvaluatorPlatform:\n      type: object\n      properties:\n        os:\n          $ref: '#/components/schemas/PlatformConditionEvaluatorPlatformOperatingSystem'\n        type:\n          $ref: '#/components/schemas/PolicyPlatformType'\n    PlatformConditionEvaluatorPlatformOperatingSystem:\n      type: object\n      properties:\n        expression:\n          type: string\n        type:\n          $ref: '#/components/schemas/PolicyPlatformOperatingSystemType'\n        version:\n          $ref: '#/components/schemas/PlatformConditionEvaluatorPlatformOperatingSystemVersion'\n    PlatformConditionEvaluatorPlatformOperatingSystemVersion:\n      type: object\n      properties:\n        matchType:\n          $ref: '#/components/schemas/PlatformConditionOperatingSystemVersionMatchType'\n        value:\n          type: string\n    PlatformConditionOperatingSystemVersionMatchType:\n      type: string\n      enum:\n        - EXPRESSION\n        - SEMVER\n    PlatformPolicyRuleCondition:\n      type: object\n      properties:\n        exclude:\n          type: array\n          items:\n            $ref: '#/components/schemas/PlatformConditionEvaluatorPlatform'\n        include:\n          type: array\n          items:\n            $ref: '#/components/schemas/PlatformConditionEvaluatorPlatform'\n    Policy:\n      type: object\n      properties:\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n        description:\n          type: string\n        id:\n          type: string\n          readOnly: true\n        lastUpdated:\n          type: string\n          format: date-time\n          readOnly: true\n        name:\n          type: string\n        priority:\n          type: integer\n        status:\n          $ref: '#/components/schemas/LifecycleStatus'\n        system:\n          type: boolean\n        type:\n          $ref: '#/components/schemas/PolicyType'\n        _embedded:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n          readOnly: true\n        _links:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n          readOnly: true\n      discriminator:\n        propertyName: type\n        mapping:\n          ACCESS_POLICY: '#/components/schemas/AccessPolicy'\n          IDP_DISCOVERY: '#/components/schemas/IdentityProviderPolicy'\n          MFA_ENROLL: '#/components/schemas/MultifactorEnrollmentPolicy'\n          OAUTH_AUTHORIZATION_POLICY: '#/components/schemas/AuthorizationServerPolicy'\n          OKTA_SIGN_ON: '#/components/schemas/OktaSignOnPolicy'\n          PASSWORD: '#/components/schemas/PasswordPolicy'\n          PROFILE_ENROLLMENT: '#/components/schemas/ProfileEnrollmentPolicy'\n    PolicyAccess:\n      type: string\n      enum:\n        - ALLOW\n        - DENY\n    PolicyAccountLink:\n      type: object\n      properties:\n        action:\n          $ref: '#/components/schemas/PolicyAccountLinkAction'\n        filter:\n          $ref: '#/components/schemas/PolicyAccountLinkFilter'\n    PolicyAccountLinkAction:\n      type: string\n      enum:\n        - AUTO\n        - DISABLED\n    PolicyAccountLinkFilter:\n      type: object\n      properties:\n        groups:\n          $ref: '#/components/schemas/PolicyAccountLinkFilterGroups'\n    PolicyAccountLinkFilterGroups:\n      type: object\n      properties:\n        include:\n          type: array\n          items:\n            type: string\n    PolicyNetworkCondition:\n      type: object\n      properties:\n        connection:\n          $ref: '#/components/schemas/PolicyNetworkConnection'\n        exclude:\n          type: array\n          items:\n            type: string\n        include:\n          type: array\n          items:\n            type: string\n    PolicyNetworkConnection:\n      type: string\n      enum:\n        - ANYWHERE\n        - ZONE\n    PolicyPeopleCondition:\n      type: object\n      properties:\n        groups:\n          $ref: '#/components/schemas/GroupCondition'\n        users:\n          $ref: '#/components/schemas/UserCondition'\n    PolicyPlatformOperatingSystemType:\n      type: string\n      enum:\n        - ANDROID\n        - ANY\n        - IOS\n        - OSX\n        - OTHER\n        - WINDOWS\n    PolicyPlatformType:\n      type: string\n      enum:\n        - ANY\n        - DESKTOP\n        - MOBILE\n        - OTHER\n    PolicyRule:\n      type: object\n      properties:\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n          nullable: true\n        id:\n          type: string\n        lastUpdated:\n          type: string\n          format: date-time\n          readOnly: true\n          nullable: true\n        name:\n          type: string\n        priority:\n          type: integer\n        status:\n          $ref: '#/components/schemas/LifecycleStatus'\n        system:\n          type: boolean\n          default: false\n        type:\n          $ref: '#/components/schemas/PolicyRuleType'\n      discriminator:\n        propertyName: type\n        mapping:\n          ACCESS_POLICY: '#/components/schemas/AccessPolicyRule'\n          PASSWORD: '#/components/schemas/PasswordPolicyRule'\n          PROFILE_ENROLLMENT: '#/components/schemas/ProfileEnrollmentPolicyRule'\n          RESOURCE_ACCESS: '#/components/schemas/AuthorizationServerPolicyRule'\n          SIGN_ON: '#/components/schemas/OktaSignOnPolicyRule'\n    PolicyRuleActions:\n      type: object\n      properties:\n        enroll:\n          $ref: '#/components/schemas/PolicyRuleActionsEnroll'\n        idp:\n          $ref: '#/components/schemas/IdpPolicyRuleAction'\n        passwordChange:\n          $ref: '#/components/schemas/PasswordPolicyRuleAction'\n        selfServicePasswordReset:\n          $ref: '#/components/schemas/PasswordPolicyRuleAction'\n        selfServiceUnlock:\n          $ref: '#/components/schemas/PasswordPolicyRuleAction'\n        signon:\n          $ref: '#/components/schemas/OktaSignOnPolicyRuleSignonActions'\n    PolicyRuleActionsEnroll:\n      type: object\n      properties:\n        self:\n          $ref: '#/components/schemas/PolicyRuleActionsEnrollSelf'\n    PolicyRuleActionsEnrollSelf:\n      type: string\n      enum:\n        - CHALLENGE\n        - LOGIN\n        - NEVER\n    PolicyRuleAuthContextCondition:\n      type: object\n      properties:\n        authType:\n          $ref: '#/components/schemas/PolicyRuleAuthContextType'\n    PolicyRuleAuthContextType:\n      type: string\n      enum:\n        - ANY\n        - RADIUS\n    PolicyRuleConditions:\n      type: object\n      properties:\n        app:\n          $ref: '#/components/schemas/AppAndInstancePolicyRuleCondition'\n        apps:\n          $ref: '#/components/schemas/AppInstancePolicyRuleCondition'\n        authContext:\n          $ref: '#/components/schemas/PolicyRuleAuthContextCondition'\n        authProvider:\n          $ref: '#/components/schemas/PasswordPolicyAuthenticationProviderCondition'\n        beforeScheduledAction:\n          $ref: '#/components/schemas/BeforeScheduledActionPolicyRuleCondition'\n        clients:\n          $ref: '#/components/schemas/ClientPolicyCondition'\n        context:\n          $ref: '#/components/schemas/ContextPolicyRuleCondition'\n        device:\n          $ref: '#/components/schemas/DevicePolicyRuleCondition'\n        grantTypes:\n          $ref: '#/components/schemas/GrantTypePolicyRuleCondition'\n        groups:\n          $ref: '#/components/schemas/GroupPolicyRuleCondition'\n        identityProvider:\n          $ref: '#/components/schemas/IdentityProviderPolicyRuleCondition'\n        mdmEnrollment:\n          $ref: '#/components/schemas/MDMEnrollmentPolicyRuleCondition'\n        network:\n          $ref: '#/components/schemas/PolicyNetworkCondition'\n        people:\n          $ref: '#/components/schemas/PolicyPeopleCondition'\n        platform:\n          $ref: '#/components/schemas/PlatformPolicyRuleCondition'\n        risk:\n          $ref: '#/components/schemas/RiskPolicyRuleCondition'\n        riskScore:\n          $ref: '#/components/schemas/RiskScorePolicyRuleCondition'\n        scopes:\n          $ref: '#/components/schemas/OAuth2ScopesMediationPolicyRuleCondition'\n        userIdentifier:\n          $ref: '#/components/schemas/UserIdentifierPolicyRuleCondition'\n        users:\n          $ref: '#/components/schemas/UserPolicyRuleCondition'\n        userStatus:\n          $ref: '#/components/schemas/UserStatusPolicyRuleCondition'\n    PolicyRuleType:\n      type: string\n      enum:\n        - ACCESS_POLICY\n        - IDP_DISCOVERY\n        - MFA_ENROLL\n        - PASSWORD\n        - PROFILE_ENROLLMENT\n        - RESOURCE_ACCESS\n        - SIGN_ON\n    PolicySubject:\n      type: object\n      properties:\n        filter:\n          type: string\n        format:\n          type: array\n          items:\n            type: string\n        matchAttribute:\n          type: string\n        matchType:\n          $ref: '#/components/schemas/PolicySubjectMatchType'\n        userNameTemplate:\n          $ref: '#/components/schemas/PolicyUserNameTemplate'\n    PolicySubjectMatchType:\n      type: string\n      enum:\n        - CUSTOM_ATTRIBUTE\n        - EMAIL\n        - USERNAME\n        - USERNAME_OR_EMAIL\n    PolicyType:\n      type: string\n      enum:\n        - ACCESS_POLICY\n        - IDP_DISCOVERY\n        - MFA_ENROLL\n        - OAUTH_AUTHORIZATION_POLICY\n        - OKTA_SIGN_ON\n        - PASSWORD\n        - PROFILE_ENROLLMENT\n    PolicyUserNameTemplate:\n      type: object\n      properties:\n        template:\n          type: string\n    PolicyUserStatus:\n      type: string\n      enum:\n        - ACTIVATING\n        - ACTIVE\n        - DELETED\n        - DELETING\n        - EXPIRED_PASSWORD\n        - INACTIVE\n        - PENDING\n        - SUSPENDED\n    PossessionConstraint:\n      allOf:\n        - $ref: '#/components/schemas/AccessPolicyConstraint'\n        - type: object\n          properties:\n            deviceBound:\n              type: string\n            hardwareProtection:\n              type: string\n            phishingResistant:\n              type: string\n            userPresence:\n              type: string\n    PreRegistrationInlineHook:\n      type: object\n      properties:\n        inlineHookId:\n          type: string\n    PrincipalRateLimitEntity:\n      title: PrincipalRateLimitEntity\n      description: ''\n      type: object\n      properties:\n        createdBy:\n          type: string\n          readOnly: true\n        createdDate:\n          type: string\n          format: date-time\n          readOnly: true\n        defaultConcurrencyPercentage:\n          type: integer\n          readOnly: true\n        defaultPercentage:\n          type: integer\n          readOnly: true\n        id:\n          type: string\n          readOnly: true\n        lastUpdate:\n          type: string\n          format: date-time\n          readOnly: true\n        lastUpdatedBy:\n          type: string\n          readOnly: true\n        orgId:\n          type: string\n          readOnly: true\n        principalId:\n          type: string\n        principalType:\n          $ref: '#/components/schemas/PrincipalType'\n      required:\n        - principalId\n        - principalType\n    PrincipalType:\n      type: string\n      enum:\n        - SSWS_TOKEN\n    ProfileEnrollmentPolicy:\n      allOf:\n        - $ref: '#/components/schemas/Policy'\n        - type: object\n          properties:\n            conditions:\n              $ref: '#/components/schemas/PolicyRuleConditions'\n    ProfileEnrollmentPolicyRule:\n      allOf:\n        - $ref: '#/components/schemas/PolicyRule'\n        - type: object\n          properties:\n            actions:\n              $ref: '#/components/schemas/ProfileEnrollmentPolicyRuleActions'\n            conditions:\n              $ref: '#/components/schemas/PolicyRuleConditions'\n    ProfileEnrollmentPolicyRuleAction:\n      type: object\n      properties:\n        access:\n          type: string\n        activationRequirements:\n          $ref: '#/components/schemas/ProfileEnrollmentPolicyRuleActivationRequirement'\n        preRegistrationInlineHooks:\n          items:\n            $ref: '#/components/schemas/PreRegistrationInlineHook'\n          type: array\n        profileAttributes:\n          items:\n            $ref: '#/components/schemas/ProfileEnrollmentPolicyRuleProfileAttribute'\n          type: array\n        targetGroupIds:\n          items:\n            type: string\n          type: array\n        unknownUserAction:\n          type: string\n    ProfileEnrollmentPolicyRuleActions:\n      allOf:\n        - $ref: '#/components/schemas/PolicyRuleActions'\n        - type: object\n          properties:\n            profileEnrollment:\n              $ref: '#/components/schemas/ProfileEnrollmentPolicyRuleAction'\n    ProfileEnrollmentPolicyRuleActivationRequirement:\n      type: object\n      properties:\n        emailVerification:\n          type: boolean\n    ProfileEnrollmentPolicyRuleProfileAttribute:\n      type: object\n      properties:\n        label:\n          type: string\n        name:\n          type: string\n        required:\n          type: boolean\n    ProfileMapping:\n      type: object\n      properties:\n        id:\n          type: string\n          readOnly: true\n        properties:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/ProfileMappingProperty'\n          readOnly: true\n        source:\n          $ref: '#/components/schemas/ProfileMappingSource'\n        target:\n          $ref: '#/components/schemas/ProfileMappingSource'\n        _links:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n          readOnly: true\n    ProfileMappingProperty:\n      type: object\n      properties:\n        expression:\n          type: string\n        pushStatus:\n          $ref: '#/components/schemas/ProfileMappingPropertyPushStatus'\n    ProfileMappingPropertyPushStatus:\n      type: string\n      enum:\n        - DONT_PUSH\n        - PUSH\n    ProfileMappingSource:\n      type: object\n      properties:\n        id:\n          type: string\n          readOnly: true\n        name:\n          type: string\n          readOnly: true\n        type:\n          type: string\n          readOnly: true\n        _links:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n          readOnly: true\n    ProfileSettingObject:\n      type: object\n      properties:\n        status:\n          $ref: '#/components/schemas/EnabledStatus'\n    Protocol:\n      type: object\n      properties:\n        algorithms:\n          $ref: '#/components/schemas/ProtocolAlgorithms'\n        credentials:\n          $ref: '#/components/schemas/IdentityProviderCredentials'\n        endpoints:\n          $ref: '#/components/schemas/ProtocolEndpoints'\n        issuer:\n          $ref: '#/components/schemas/ProtocolEndpoint'\n        relayState:\n          $ref: '#/components/schemas/ProtocolRelayState'\n        scopes:\n          type: array\n          items:\n            type: string\n        settings:\n          $ref: '#/components/schemas/ProtocolSettings'\n        type:\n          $ref: '#/components/schemas/ProtocolType'\n    ProtocolAlgorithmType:\n      type: object\n      properties:\n        signature:\n          $ref: '#/components/schemas/ProtocolAlgorithmTypeSignature'\n    ProtocolAlgorithmTypeSignature:\n      type: object\n      properties:\n        algorithm:\n          type: string\n        scope:\n          $ref: '#/components/schemas/ProtocolAlgorithmTypeSignatureScope'\n    ProtocolAlgorithmTypeSignatureScope:\n      type: string\n      enum:\n        - ANY\n        - NONE\n        - REQUEST\n        - RESPONSE\n        - TOKEN\n    ProtocolAlgorithms:\n      type: object\n      properties:\n        request:\n          $ref: '#/components/schemas/ProtocolAlgorithmType'\n        response:\n          $ref: '#/components/schemas/ProtocolAlgorithmType'\n    ProtocolEndpoint:\n      type: object\n      properties:\n        binding:\n          $ref: '#/components/schemas/ProtocolEndpointBinding'\n        destination:\n          type: string\n        type:\n          $ref: '#/components/schemas/ProtocolEndpointType'\n        url:\n          type: string\n    ProtocolEndpointBinding:\n      type: string\n      enum:\n        - HTTP-POST\n        - HTTP-REDIRECT\n    ProtocolEndpointType:\n      type: string\n      enum:\n        - INSTANCE\n        - ORG\n    ProtocolEndpoints:\n      type: object\n      properties:\n        acs:\n          $ref: '#/components/schemas/ProtocolEndpoint'\n        authorization:\n          $ref: '#/components/schemas/ProtocolEndpoint'\n        jwks:\n          $ref: '#/components/schemas/ProtocolEndpoint'\n        metadata:\n          $ref: '#/components/schemas/ProtocolEndpoint'\n        slo:\n          $ref: '#/components/schemas/ProtocolEndpoint'\n        sso:\n          $ref: '#/components/schemas/ProtocolEndpoint'\n        token:\n          $ref: '#/components/schemas/ProtocolEndpoint'\n        userInfo:\n          $ref: '#/components/schemas/ProtocolEndpoint'\n    ProtocolRelayState:\n      type: object\n      properties:\n        format:\n          $ref: '#/components/schemas/ProtocolRelayStateFormat'\n    ProtocolRelayStateFormat:\n      type: string\n      enum:\n        - FROM_URL\n        - OPAQUE\n    ProtocolSettings:\n      type: object\n      properties:\n        nameFormat:\n          type: string\n    ProtocolType:\n      type: string\n      enum:\n        - MTLS\n        - OAUTH2\n        - OIDC\n        - SAML2\n    ProviderType:\n      type: string\n      enum:\n        - APNS\n        - FCM\n    Provisioning:\n      type: object\n      properties:\n        action:\n          $ref: '#/components/schemas/ProvisioningAction'\n        conditions:\n          $ref: '#/components/schemas/ProvisioningConditions'\n        groups:\n          $ref: '#/components/schemas/ProvisioningGroups'\n        profileMaster:\n          type: boolean\n    ProvisioningAction:\n      type: string\n      enum:\n        - AUTO\n        - CALLOUT\n        - DISABLED\n    ProvisioningConditions:\n      type: object\n      properties:\n        deprovisioned:\n          $ref: '#/components/schemas/ProvisioningDeprovisionedCondition'\n        suspended:\n          $ref: '#/components/schemas/ProvisioningSuspendedCondition'\n    ProvisioningConnection:\n      type: object\n      properties:\n        authScheme:\n          $ref: '#/components/schemas/ProvisioningConnectionAuthScheme'\n        status:\n          $ref: '#/components/schemas/ProvisioningConnectionStatus'\n        _links:\n          additionalProperties:\n            type: object\n          readOnly: true\n          type: object\n    ProvisioningConnectionAuthScheme:\n      type: string\n      enum:\n        - TOKEN\n        - UNKNOWN\n    ProvisioningConnectionProfile:\n      type: object\n      properties:\n        authScheme:\n          $ref: '#/components/schemas/ProvisioningConnectionAuthScheme'\n        token:\n          type: string\n    ProvisioningConnectionRequest:\n      type: object\n      properties:\n        profile:\n          $ref: '#/components/schemas/ProvisioningConnectionProfile'\n    ProvisioningConnectionStatus:\n      type: string\n      enum:\n        - DISABLED\n        - ENABLED\n        - UNKNOWN\n    ProvisioningDeprovisionedAction:\n      type: string\n      enum:\n        - NONE\n        - REACTIVATE\n    ProvisioningDeprovisionedCondition:\n      type: object\n      properties:\n        action:\n          $ref: '#/components/schemas/ProvisioningDeprovisionedAction'\n    ProvisioningGroups:\n      type: object\n      properties:\n        action:\n          $ref: '#/components/schemas/ProvisioningGroupsAction'\n        assignments:\n          type: array\n          items:\n            type: string\n        filter:\n          type: array\n          items:\n            type: string\n        sourceAttributeName:\n          type: string\n    ProvisioningGroupsAction:\n      type: string\n      enum:\n        - APPEND\n        - ASSIGN\n        - NONE\n        - SYNC\n    ProvisioningSuspendedAction:\n      type: string\n      enum:\n        - NONE\n        - UNSUSPEND\n    ProvisioningSuspendedCondition:\n      type: object\n      properties:\n        action:\n          $ref: '#/components/schemas/ProvisioningSuspendedAction'\n    PushProvider:\n      title: PushProvider\n      type: object\n      properties:\n        id:\n          type: string\n          readOnly: true\n        lastUpdatedDate:\n          type: string\n          readOnly: true\n        name:\n          type: string\n          description: Display name of the push provider\n        providerType:\n          $ref: '#/components/schemas/ProviderType'\n        _links:\n          type: object\n          properties:\n            self:\n              $ref: '#/components/schemas/HrefObject'\n          readOnly: true\n      discriminator:\n        propertyName: providerType\n        mapping:\n          APNS: '#/components/schemas/APNSPushProvider'\n          FCM: '#/components/schemas/FCMPushProvider'\n    PushUserFactor:\n      allOf:\n        - $ref: '#/components/schemas/UserFactor'\n        - type: object\n          properties:\n            expiresAt:\n              type: string\n              format: date-time\n            factorResult:\n              $ref: '#/components/schemas/FactorResultType'\n            profile:\n              $ref: '#/components/schemas/PushUserFactorProfile'\n    PushUserFactorProfile:\n      type: object\n      properties:\n        credentialId:\n          type: string\n        deviceToken:\n          type: string\n        deviceType:\n          type: string\n        name:\n          type: string\n        platform:\n          type: string\n        version:\n          type: string\n    RateLimitAdminNotifications:\n      title: RateLimitAdminNotifications\n      description: ''\n      type: object\n      properties:\n        notificationsEnabled:\n          type: boolean\n      required:\n        - notificationsEnabled\n    RecoveryQuestionCredential:\n      type: object\n      properties:\n        answer:\n          type: string\n        question:\n          type: string\n    ReleaseChannel:\n      description: Release channel for auto-update\n      type: string\n      enum:\n        - BETA\n        - EA\n        - GA\n        - TEST\n    RequiredEnum:\n      type: string\n      enum:\n        - ALWAYS\n        - HIGH_RISK_ONLY\n        - NEVER\n    ResetPasswordToken:\n      type: object\n      properties:\n        resetPasswordUrl:\n          type: string\n          readOnly: true\n    ResourceSet:\n      type: object\n      properties:\n        created:\n          type: string\n          format: date-time\n          description: Timestamp when the role was created\n          readOnly: true\n        description:\n          type: string\n          description: Description of the resource set\n        id:\n          type: string\n          description: Unique key for the role\n          readOnly: true\n        label:\n          type: string\n          description: Unique label for the resource set\n        lastUpdated:\n          type: string\n          format: date-time\n          description: Timestamp when the role was last updated\n          readOnly: true\n        _links:\n          type: object\n          properties:\n            self:\n              $ref: '#/components/schemas/HrefObject'\n            resources:\n              $ref: '#/components/schemas/HrefObject'\n            bindings:\n              $ref: '#/components/schemas/HrefObject'\n          readOnly: true\n    ResourceSetBindingAddMembersRequest:\n      type: object\n      properties:\n        additions:\n          type: array\n          items:\n            type: string\n    ResourceSetBindingCreateRequest:\n      type: object\n      properties:\n        members:\n          type: array\n          items:\n            type: string\n        role:\n          type: string\n          description: Unique key for the role\n    ResourceSetBindingMember:\n      type: object\n      properties:\n        created:\n          type: string\n          format: date-time\n          description: Timestamp when the role was created\n          readOnly: true\n        id:\n          type: string\n          description: Unique key for the role\n          readOnly: true\n        lastUpdated:\n          type: string\n          format: date-time\n          description: Timestamp when the role was last updated\n          readOnly: true\n        _links:\n          type: object\n          properties:\n            self:\n              $ref: '#/components/schemas/HrefObject'\n          readOnly: true\n    ResourceSetBindingMembers:\n      type: object\n      properties:\n        members:\n          type: array\n          items:\n            $ref: '#/components/schemas/ResourceSetBindingMember'\n        _links:\n          type: object\n          properties:\n            binding:\n              $ref: '#/components/schemas/HrefObject'\n            next:\n              $ref: '#/components/schemas/HrefObject'\n          readOnly: true\n    ResourceSetBindingResponse:\n      type: object\n      properties:\n        id:\n          type: string\n          description: '`id` of the role'\n        _links:\n          type: object\n          properties:\n            self:\n              $ref: '#/components/schemas/HrefObject'\n            bindings:\n              $ref: '#/components/schemas/HrefObject'\n            resource-set:\n              $ref: '#/components/schemas/HrefObject'\n          readOnly: true\n    ResourceSetBindingRole:\n      type: object\n      properties:\n        id:\n          type: string\n        _links:\n          type: object\n          properties:\n            self:\n              $ref: '#/components/schemas/HrefObject'\n            members:\n              $ref: '#/components/schemas/HrefObject'\n    ResourceSetBindings:\n      type: object\n      properties:\n        roles:\n          type: array\n          items:\n            $ref: '#/components/schemas/ResourceSetBindingRole'\n        _links:\n          type: object\n          properties:\n            self:\n              $ref: '#/components/schemas/HrefObject'\n            bindings:\n              $ref: '#/components/schemas/HrefObject'\n            resource-set:\n              $ref: '#/components/schemas/HrefObject'\n          readOnly: true\n    ResourceSetResource:\n      type: object\n      properties:\n        created:\n          type: string\n          format: date-time\n          description: Timestamp when the role was created\n          readOnly: true\n        description:\n          type: string\n          description: Description of the resource set\n        id:\n          type: string\n          description: Unique key for the role\n          readOnly: true\n        lastUpdated:\n          type: string\n          format: date-time\n          description: Timestamp when the role was last updated\n          readOnly: true\n        _links:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n          readOnly: true\n    ResourceSetResourcePatchRequest:\n      type: object\n      properties:\n        additions:\n          type: array\n          items:\n            type: string\n    ResourceSetResources:\n      type: object\n      properties:\n        resources:\n          type: array\n          items:\n            $ref: '#/components/schemas/ResourceSetResource'\n        _links:\n          type: object\n          properties:\n            next:\n              $ref: '#/components/schemas/HrefObject'\n            resource-set:\n              $ref: '#/components/schemas/HrefObject'\n    ResourceSets:\n      type: object\n      properties:\n        resource-sets:\n          type: array\n          items:\n            $ref: '#/components/schemas/ResourceSet'\n        _links:\n          type: object\n          properties:\n            next:\n              $ref: '#/components/schemas/HrefObject'\n          readOnly: true\n    ResponseLinks:\n      type: object\n    RiskEvent:\n      type: object\n      properties:\n        expiresAt:\n          type: string\n          format: date-time\n          description: 'Time stamp at which the event expires (Expressed as a UTC time zone using ISO 8601 format: yyyy-MM-dd''T''HH:mm:ss.SSS''Z''). If this optional field is not included, Okta automatically expires the event 24 hours after the event is consumed.'\n        subjects:\n          type: array\n          items:\n            $ref: '#/components/schemas/RiskEventSubject'\n        timestamp:\n          type: string\n          format: date-time\n          description: 'Time stamp at which the event is produced (Expressed as a UTC time zone using ISO 8601 format: yyyy-MM-dd''T''HH:mm:ss.SSS''Z'').'\n      required:\n        - subjects\n    RiskEventSubject:\n      type: object\n      properties:\n        ip:\n          type: string\n          description: Either an IpV4 or IpV6 address.\n        message:\n          type: string\n          description: Any additional message that the provider can send specifying the reason for the risk level of the IP.\n          maxLength: 512\n          pattern: ^[a-zA-Z0-9.\\-_]$\n        riskLevel:\n          $ref: '#/components/schemas/RiskEventSubjectRiskLevel'\n      required:\n        - ip\n    RiskEventSubjectRiskLevel:\n      type: string\n      enum:\n        - HIGH\n        - LOW\n        - MEDIUM\n    RiskPolicyRuleCondition:\n      type: object\n      properties:\n        behaviors:\n          uniqueItems: true\n          type: array\n          items:\n            type: string\n    RiskProvider:\n      type: object\n      properties:\n        action:\n          $ref: '#/components/schemas/RiskProviderAction'\n        clientId:\n          type: string\n          description: The ID of the [OAuth service app](https://developer.okta.com/docs/guides/implement-oauth-for-okta-serviceapp/main/#create-a-service-app-and-grant-scopes) that is used to send risk events to Okta\n        created:\n          type: string\n          format: date-time\n          description: Timestamp when the risk provider was created\n          readOnly: true\n        id:\n          type: string\n          description: The ID of the risk provider\n          readOnly: true\n        lastUpdated:\n          type: string\n          format: date-time\n          description: Timestamp when the risk provider was last updated\n          readOnly: true\n        name:\n          type: string\n          description: Name of the risk provider\n          maxLength: 50\n        _links:\n          type: object\n          properties:\n            self:\n              $ref: '#/components/schemas/HrefObject'\n          readOnly: true\n      required:\n        - name\n        - clientId\n    RiskProviderAction:\n      description: The action taken by Okta during authentication attempts based on the risk events sent by this provider. Logging can be found in the SystemLogs.\n      default: log_only\n      type: string\n      enum:\n        - enforce_and_log\n        - log_only\n        - none\n    RiskScorePolicyRuleCondition:\n      type: object\n      properties:\n        level:\n          type: string\n    Role:\n      type: object\n      properties:\n        assignmentType:\n          $ref: '#/components/schemas/RoleAssignmentType'\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n        description:\n          type: string\n        id:\n          type: string\n          readOnly: true\n        label:\n          type: string\n          readOnly: true\n        lastUpdated:\n          type: string\n          format: date-time\n          readOnly: true\n        status:\n          $ref: '#/components/schemas/LifecycleStatus'\n        type:\n          $ref: '#/components/schemas/RoleType'\n        _embedded:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n          readOnly: true\n        _links:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n          readOnly: true\n    RoleAssignmentType:\n      type: string\n      enum:\n        - GROUP\n        - USER\n    RolePermissionType:\n      type: string\n      enum:\n        - okta.apps.assignment.manage\n        - okta.apps.manage\n        - okta.apps.manageFirstPartyApps\n        - okta.apps.read\n        - okta.authzServers.manage\n        - okta.authzServers.read\n        - okta.customizations.manage\n        - okta.customizations.read\n        - okta.governance.accessCertifications.manage\n        - okta.governance.accessRequests.manage\n        - okta.groups.appAssignment.manage\n        - okta.groups.create\n        - okta.groups.manage\n        - okta.groups.members.manage\n        - okta.groups.read\n        - okta.profilesources.import.run\n        - okta.users.appAssignment.manage\n        - okta.users.create\n        - okta.users.credentials.expirePassword\n        - okta.users.credentials.manage\n        - okta.users.credentials.resetFactors\n        - okta.users.credentials.resetPassword\n        - okta.users.groupMembership.manage\n        - okta.users.lifecycle.activate\n        - okta.users.lifecycle.clearSessions\n        - okta.users.lifecycle.deactivate\n        - okta.users.lifecycle.delete\n        - okta.users.lifecycle.manage\n        - okta.users.lifecycle.suspend\n        - okta.users.lifecycle.unlock\n        - okta.users.lifecycle.unsuspend\n        - okta.users.manage\n        - okta.users.read\n        - okta.users.userprofile.manage\n    RoleType:\n      type: string\n      enum:\n        - API_ACCESS_MANAGEMENT_ADMIN\n        - APP_ADMIN\n        - GROUP_MEMBERSHIP_ADMIN\n        - HELP_DESK_ADMIN\n        - MOBILE_ADMIN\n        - ORG_ADMIN\n        - READ_ONLY_ADMIN\n        - REPORT_ADMIN\n        - SUPER_ADMIN\n        - USER_ADMIN\n    SamlApplication:\n      allOf:\n        - $ref: '#/components/schemas/Application'\n        - type: object\n          properties:\n            credentials:\n              $ref: '#/components/schemas/ApplicationCredentials'\n            name:\n              type: string\n            settings:\n              $ref: '#/components/schemas/SamlApplicationSettings'\n    SamlApplicationSettings:\n      allOf:\n        - $ref: '#/components/schemas/ApplicationSettings'\n        - type: object\n          properties:\n            app:\n              $ref: '#/components/schemas/SamlApplicationSettingsApplication'\n            signOn:\n              $ref: '#/components/schemas/SamlApplicationSettingsSignOn'\n    SamlApplicationSettingsApplication:\n      type: object\n      properties:\n        acsUrl:\n          type: string\n        audRestriction:\n          type: string\n        baseUrl:\n          type: string\n    SamlApplicationSettingsSignOn:\n      type: object\n      properties:\n        acsEndpoints:\n          type: array\n          items:\n            $ref: '#/components/schemas/AcsEndpoint'\n        allowMultipleAcsEndpoints:\n          type: boolean\n        assertionSigned:\n          type: boolean\n        attributeStatements:\n          type: array\n          items:\n            $ref: '#/components/schemas/SamlAttributeStatement'\n        audience:\n          type: string\n        audienceOverride:\n          type: string\n        authnContextClassRef:\n          type: string\n        defaultRelayState:\n          type: string\n        destination:\n          type: string\n        destinationOverride:\n          type: string\n        digestAlgorithm:\n          type: string\n        honorForceAuthn:\n          type: boolean\n        idpIssuer:\n          type: string\n        inlineHooks:\n          items:\n            $ref: '#/components/schemas/SignOnInlineHook'\n          type: array\n        recipient:\n          type: string\n        recipientOverride:\n          type: string\n        requestCompressed:\n          type: boolean\n        responseSigned:\n          type: boolean\n        signatureAlgorithm:\n          type: string\n        slo:\n          $ref: '#/components/schemas/SingleLogout'\n        spCertificate:\n          $ref: '#/components/schemas/SpCertificate'\n        spIssuer:\n          type: string\n        ssoAcsUrl:\n          type: string\n        ssoAcsUrlOverride:\n          type: string\n        subjectNameIdFormat:\n          type: string\n        subjectNameIdTemplate:\n          type: string\n    SamlAttributeStatement:\n      type: object\n      properties:\n        filterType:\n          type: string\n        filterValue:\n          type: string\n        name:\n          type: string\n        namespace:\n          type: string\n        type:\n          type: string\n        values:\n          type: array\n          items:\n            type: string\n    ScheduledUserLifecycleAction:\n      type: object\n      properties:\n        status:\n          $ref: '#/components/schemas/PolicyUserStatus'\n    SchemeApplicationCredentials:\n      allOf:\n        - $ref: '#/components/schemas/ApplicationCredentials'\n        - type: object\n          properties:\n            password:\n              $ref: '#/components/schemas/PasswordCredential'\n            revealPassword:\n              type: boolean\n            scheme:\n              $ref: '#/components/schemas/ApplicationCredentialsScheme'\n            signing:\n              $ref: '#/components/schemas/ApplicationCredentialsSigning'\n            userName:\n              type: string\n    ScreenLockType:\n      type: string\n      enum:\n        - BIOMETRIC\n        - PASSCODE\n    SecurePasswordStoreApplication:\n      x-okta-defined-as:\n        name: template_sps\n      allOf:\n        - $ref: '#/components/schemas/Application'\n        - type: object\n          properties:\n            credentials:\n              $ref: '#/components/schemas/SchemeApplicationCredentials'\n            name:\n              type: string\n              default: template_sps\n            settings:\n              $ref: '#/components/schemas/SecurePasswordStoreApplicationSettings'\n    SecurePasswordStoreApplicationSettings:\n      allOf:\n        - $ref: '#/components/schemas/ApplicationSettings'\n        - type: object\n          properties:\n            app:\n              $ref: '#/components/schemas/SecurePasswordStoreApplicationSettingsApplication'\n    SecurePasswordStoreApplicationSettingsApplication:\n      type: object\n      properties:\n        optionalField1:\n          type: string\n        optionalField1Value:\n          type: string\n        optionalField2:\n          type: string\n        optionalField2Value:\n          type: string\n        optionalField3:\n          type: string\n        optionalField3Value:\n          type: string\n        passwordField:\n          type: string\n        url:\n          type: string\n        usernameField:\n          type: string\n    SecurityQuestion:\n      type: object\n      properties:\n        answer:\n          type: string\n        question:\n          type: string\n        questionText:\n          type: string\n    SecurityQuestionUserFactor:\n      allOf:\n        - $ref: '#/components/schemas/UserFactor'\n        - type: object\n          properties:\n            profile:\n              $ref: '#/components/schemas/SecurityQuestionUserFactorProfile'\n    SecurityQuestionUserFactorProfile:\n      type: object\n      properties:\n        answer:\n          type: string\n        question:\n          type: string\n        questionText:\n          type: string\n    SeedEnum:\n      type: string\n      enum:\n        - OKTA\n        - RANDOM\n    Session:\n      type: object\n      properties:\n        amr:\n          type: array\n          readOnly: true\n          items:\n            $ref: '#/components/schemas/SessionAuthenticationMethod'\n        createdAt:\n          type: string\n          format: date-time\n          readOnly: true\n        expiresAt:\n          type: string\n          format: date-time\n          readOnly: true\n        id:\n          type: string\n          readOnly: true\n        idp:\n          $ref: '#/components/schemas/SessionIdentityProvider'\n        lastFactorVerification:\n          type: string\n          format: date-time\n          readOnly: true\n        lastPasswordVerification:\n          type: string\n          format: date-time\n          readOnly: true\n        login:\n          type: string\n          readOnly: true\n        status:\n          $ref: '#/components/schemas/SessionStatus'\n        userId:\n          type: string\n          readOnly: true\n        _links:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n          readOnly: true\n    SessionAuthenticationMethod:\n      type: string\n      enum:\n        - fpt\n        - geo\n        - hwk\n        - kba\n        - mca\n        - mfa\n        - otp\n        - pwd\n        - sc\n        - sms\n        - swk\n        - tel\n    SessionIdentityProvider:\n      type: object\n      properties:\n        id:\n          type: string\n          readOnly: true\n        type:\n          $ref: '#/components/schemas/SessionIdentityProviderType'\n    SessionIdentityProviderType:\n      type: string\n      enum:\n        - ACTIVE_DIRECTORY\n        - FEDERATION\n        - LDAP\n        - OKTA\n        - SOCIAL\n    SessionStatus:\n      type: string\n      enum:\n        - ACTIVE\n        - MFA_ENROLL\n        - MFA_REQUIRED\n    SignInPage:\n      allOf:\n        - $ref: '#/components/schemas/CustomizablePage'\n        - type: object\n          properties:\n            widgetCustomizations:\n              type: object\n              properties:\n                signInLabel:\n                  type: string\n                usernameLabel:\n                  type: string\n                usernameInfoTip:\n                  type: string\n                passwordLabel:\n                  type: string\n                passwordInfoTip:\n                  type: string\n                showPasswordVisibilityToggle:\n                  type: boolean\n                showUserIdentifier:\n                  type: boolean\n                forgotPasswordLabel:\n                  type: string\n                forgotPasswordUrl:\n                  type: string\n                unlockAccountLabel:\n                  type: string\n                unlockAccountUrl:\n                  type: string\n                helpLabel:\n                  type: string\n                helpUrl:\n                  type: string\n                customLink1Label:\n                  type: string\n                customLink1Url:\n                  type: string\n                customLink2Label:\n                  type: string\n                customLink2Url:\n                  type: string\n                authenticatorPageCustomLinkLabel:\n                  type: string\n                authenticatorPageCustomLinkUrl:\n                  type: string\n                classicRecoveryFlowEmailOrUsernameLabel:\n                  type: string\n            widgetVersion:\n              $ref: '#/components/schemas/Version'\n    SignInPageTouchPointVariant:\n      type: string\n      enum:\n        - BACKGROUND_IMAGE\n        - BACKGROUND_SECONDARY_COLOR\n        - OKTA_DEFAULT\n    SignOnInlineHook:\n      properties:\n        id:\n          type: string\n          readOnly: false\n    SingleLogout:\n      type: object\n      properties:\n        enabled:\n          type: boolean\n        issuer:\n          type: string\n        logoutUrl:\n          type: string\n    SmsTemplate:\n      type: object\n      properties:\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n        id:\n          type: string\n          readOnly: true\n        lastUpdated:\n          type: string\n          format: date-time\n          readOnly: true\n        name:\n          type: string\n        template:\n          type: string\n        translations:\n          $ref: '#/components/schemas/SmsTemplateTranslations'\n        type:\n          $ref: '#/components/schemas/SmsTemplateType'\n    SmsTemplateTranslations:\n      type: object\n      x-okta-extensible: true\n    SmsTemplateType:\n      type: string\n      enum:\n        - SMS_VERIFY_CODE\n    SmsUserFactor:\n      allOf:\n        - $ref: '#/components/schemas/UserFactor'\n        - type: object\n          properties:\n            profile:\n              $ref: '#/components/schemas/SmsUserFactorProfile'\n    SmsUserFactorProfile:\n      type: object\n      properties:\n        phoneNumber:\n          type: string\n    SocialAuthToken:\n      type: object\n      properties:\n        expiresAt:\n          type: string\n          format: date-time\n          readOnly: true\n        id:\n          type: string\n          readOnly: true\n        scopes:\n          type: array\n          items:\n            type: string\n        token:\n          type: string\n        tokenAuthScheme:\n          type: string\n        tokenType:\n          type: string\n    SpCertificate:\n      type: object\n      properties:\n        x5c:\n          type: array\n          items:\n            type: string\n    Subscription:\n      type: object\n      properties:\n        channels:\n          items:\n            type: string\n          type: array\n        notificationType:\n          $ref: '#/components/schemas/NotificationType'\n        status:\n          $ref: '#/components/schemas/SubscriptionStatus'\n        _links:\n          additionalProperties:\n            type: object\n          readOnly: true\n          type: object\n    SubscriptionStatus:\n      type: string\n      enum:\n        - subscribed\n        - unsubscribed\n    SwaApplicationSettings:\n      allOf:\n        - $ref: '#/components/schemas/ApplicationSettings'\n        - type: object\n          properties:\n            app:\n              $ref: '#/components/schemas/SwaApplicationSettingsApplication'\n    SwaApplicationSettingsApplication:\n      type: object\n      properties:\n        buttonField:\n          type: string\n        buttonSelector:\n          type: string\n        checkbox:\n          type: string\n        extraFieldSelector:\n          type: string\n        extraFieldValue:\n          type: string\n        loginUrlRegex:\n          type: string\n        passwordField:\n          type: string\n        passwordSelector:\n          type: string\n        redirectUrl:\n          type: string\n        targetURL:\n          type: string\n        url:\n          type: string\n        usernameField:\n          type: string\n        userNameSelector:\n          type: string\n    TempPassword:\n      type: object\n      properties:\n        tempPassword:\n          type: string\n          readOnly: true\n    Theme:\n      type: object\n      properties:\n        backgroundImage:\n          readOnly: true\n          type: string\n        emailTemplateTouchPointVariant:\n          $ref: '#/components/schemas/EmailTemplateTouchPointVariant'\n        endUserDashboardTouchPointVariant:\n          $ref: '#/components/schemas/EndUserDashboardTouchPointVariant'\n        errorPageTouchPointVariant:\n          $ref: '#/components/schemas/ErrorPageTouchPointVariant'\n        loadingPageTouchPointVariant:\n          $ref: '#/components/schemas/LoadingPageTouchPointVariant'\n        primaryColorContrastHex:\n          type: string\n        primaryColorHex:\n          type: string\n        secondaryColorContrastHex:\n          type: string\n        secondaryColorHex:\n          type: string\n        signInPageTouchPointVariant:\n          $ref: '#/components/schemas/SignInPageTouchPointVariant'\n        _links:\n          additionalProperties:\n            type: object\n          readOnly: true\n          type: object\n    ThemeResponse:\n      type: object\n      properties:\n        backgroundImage:\n          readOnly: true\n          type: string\n        emailTemplateTouchPointVariant:\n          $ref: '#/components/schemas/EmailTemplateTouchPointVariant'\n        endUserDashboardTouchPointVariant:\n          $ref: '#/components/schemas/EndUserDashboardTouchPointVariant'\n        errorPageTouchPointVariant:\n          $ref: '#/components/schemas/ErrorPageTouchPointVariant'\n        favicon:\n          readOnly: true\n          type: string\n        id:\n          readOnly: true\n          type: string\n        loadingPageTouchPointVariant:\n          $ref: '#/components/schemas/LoadingPageTouchPointVariant'\n        logo:\n          readOnly: true\n          type: string\n        primaryColorContrastHex:\n          type: string\n        primaryColorHex:\n          type: string\n        secondaryColorContrastHex:\n          type: string\n        secondaryColorHex:\n          type: string\n        signInPageTouchPointVariant:\n          $ref: '#/components/schemas/SignInPageTouchPointVariant'\n        _links:\n          additionalProperties:\n            type: object\n          readOnly: true\n          type: object\n    ThreatInsightConfiguration:\n      type: object\n      properties:\n        action:\n          type: string\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n        excludeZones:\n          type: array\n          items:\n            type: string\n        lastUpdated:\n          type: string\n          format: date-time\n          readOnly: true\n        _links:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n          readOnly: true\n    TimeDuration:\n      description: A time duration specified as an [ISO-8601 duration](https://en.wikipedia.org/wiki/ISO_8601#Durations).\n      type: string\n      pattern: ^P(?!$)(\\d+Y)?(\\d+M)?(\\d+W)?(\\d+D)?(T(?=\\d)(\\d+H)?(\\d+M)?(\\d+S)?)?$\n    TokenAuthorizationServerPolicyRuleAction:\n      type: object\n      properties:\n        accessTokenLifetimeMinutes:\n          type: integer\n        inlineHook:\n          $ref: '#/components/schemas/TokenAuthorizationServerPolicyRuleActionInlineHook'\n        refreshTokenLifetimeMinutes:\n          type: integer\n        refreshTokenWindowMinutes:\n          type: integer\n    TokenAuthorizationServerPolicyRuleActionInlineHook:\n      type: object\n      properties:\n        id:\n          type: string\n          readOnly: false\n    TokenUserFactor:\n      allOf:\n        - $ref: '#/components/schemas/UserFactor'\n        - type: object\n          properties:\n            profile:\n              $ref: '#/components/schemas/TokenUserFactorProfile'\n    TokenUserFactorProfile:\n      type: object\n      properties:\n        credentialId:\n          type: string\n    TotpUserFactor:\n      allOf:\n        - $ref: '#/components/schemas/UserFactor'\n        - type: object\n          properties:\n            profile:\n              $ref: '#/components/schemas/TotpUserFactorProfile'\n    TotpUserFactorProfile:\n      type: object\n      properties:\n        credentialId:\n          type: string\n    TrustedOrigin:\n      type: object\n      properties:\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n        createdBy:\n          type: string\n        id:\n          type: string\n          readOnly: true\n        lastUpdated:\n          type: string\n          format: date-time\n          readOnly: true\n        lastUpdatedBy:\n          type: string\n        name:\n          type: string\n        origin:\n          type: string\n        scopes:\n          type: array\n          items:\n            $ref: '#/components/schemas/TrustedOriginScope'\n        status:\n          type: string\n        _links:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n          readOnly: true\n    TrustedOriginScope:\n      type: object\n      properties:\n        allowedOktaApps:\n          type: array\n          items:\n            $ref: '#/components/schemas/IframeEmbedScopeAllowedApps'\n        type:\n          $ref: '#/components/schemas/TrustedOriginScopeType'\n    TrustedOriginScopeType:\n      type: string\n      enum:\n        - CORS\n        - IFRAME_EMBED\n        - REDIRECT\n    U2fUserFactor:\n      allOf:\n        - $ref: '#/components/schemas/UserFactor'\n        - type: object\n          properties:\n            profile:\n              $ref: '#/components/schemas/U2fUserFactorProfile'\n    U2fUserFactorProfile:\n      type: object\n      properties:\n        credentialId:\n          type: string\n    UpdateDomain:\n      type: object\n      properties:\n        brandId:\n          type: string\n    UpdateEmailDomain:\n      allOf:\n        - $ref: '#/components/schemas/BaseEmailDomain'\n    UpdateUserRequest:\n      type: object\n      properties:\n        credentials:\n          $ref: '#/components/schemas/UserCredentials'\n        profile:\n          $ref: '#/components/schemas/UserProfile'\n    User:\n      type: object\n      properties:\n        activated:\n          type: string\n          format: date-time\n          readOnly: true\n          nullable: true\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n        credentials:\n          $ref: '#/components/schemas/UserCredentials'\n        id:\n          type: string\n          readOnly: true\n        lastLogin:\n          type: string\n          format: date-time\n          readOnly: true\n          nullable: true\n        lastUpdated:\n          type: string\n          format: date-time\n          readOnly: true\n        passwordChanged:\n          type: string\n          format: date-time\n          readOnly: true\n          nullable: true\n        profile:\n          $ref: '#/components/schemas/UserProfile'\n        status:\n          $ref: '#/components/schemas/UserStatus'\n        statusChanged:\n          type: string\n          format: date-time\n          readOnly: true\n          nullable: true\n        transitioningToStatus:\n          $ref: '#/components/schemas/UserStatus'\n        type:\n          $ref: '#/components/schemas/UserType'\n        _embedded:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n          readOnly: true\n        _links:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n          readOnly: true\n    UserActivationToken:\n      type: object\n      properties:\n        activationToken:\n          type: string\n          readOnly: true\n        activationUrl:\n          type: string\n          readOnly: true\n    UserCondition:\n      type: object\n      properties:\n        exclude:\n          type: array\n          items:\n            type: string\n        include:\n          type: array\n          items:\n            type: string\n    UserCredentials:\n      type: object\n      properties:\n        password:\n          $ref: '#/components/schemas/PasswordCredential'\n        provider:\n          $ref: '#/components/schemas/AuthenticationProvider'\n        recovery_question:\n          $ref: '#/components/schemas/RecoveryQuestionCredential'\n    UserFactor:\n      type: object\n      properties:\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n        factorType:\n          $ref: '#/components/schemas/FactorType'\n        id:\n          type: string\n          readOnly: true\n        lastUpdated:\n          type: string\n          format: date-time\n          readOnly: true\n        provider:\n          $ref: '#/components/schemas/FactorProvider'\n        status:\n          $ref: '#/components/schemas/FactorStatus'\n        verify:\n          $ref: '#/components/schemas/VerifyFactorRequest'\n        _embedded:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n          readOnly: true\n        _links:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n          readOnly: true\n      discriminator:\n        propertyName: factorType\n        mapping:\n          call: '#/components/schemas/CallUserFactor'\n          email: '#/components/schemas/EmailUserFactor'\n          push: '#/components/schemas/PushUserFactor'\n          question: '#/components/schemas/SecurityQuestionUserFactor'\n          sms: '#/components/schemas/SmsUserFactor'\n          token: '#/components/schemas/TokenUserFactor'\n          token:hardware: '#/components/schemas/HardwareUserFactor'\n          token:hotp: '#/components/schemas/CustomHotpUserFactor'\n          token:software:totp: '#/components/schemas/TotpUserFactor'\n          u2f: '#/components/schemas/U2fUserFactor'\n          web: '#/components/schemas/WebUserFactor'\n          webauthn: '#/components/schemas/WebAuthnUserFactor'\n          hotp: '#/components/schemas/CustomHotpUserFactor'\n    UserIdentifierConditionEvaluatorPattern:\n      type: object\n      properties:\n        matchType:\n          $ref: '#/components/schemas/UserIdentifierMatchType'\n        value:\n          type: string\n    UserIdentifierMatchType:\n      type: string\n      enum:\n        - CONTAINS\n        - EQUALS\n        - EXPRESSION\n        - STARTS_WITH\n        - SUFFIX\n    UserIdentifierPolicyRuleCondition:\n      type: object\n      properties:\n        attribute:\n          type: string\n        patterns:\n          type: array\n          items:\n            $ref: '#/components/schemas/UserIdentifierConditionEvaluatorPattern'\n        type:\n          $ref: '#/components/schemas/UserIdentifierType'\n    UserIdentifierType:\n      type: string\n      enum:\n        - ATTRIBUTE\n        - IDENTIFIER\n    UserIdentityProviderLinkRequest:\n      type: object\n      properties:\n        externalId:\n          type: string\n    UserLifecycleAttributePolicyRuleCondition:\n      type: object\n      properties:\n        attributeName:\n          type: string\n        matchingValue:\n          type: string\n    UserNextLogin:\n      type: string\n      enum:\n        - changePassword\n    UserPolicyRuleCondition:\n      type: object\n      properties:\n        exclude:\n          type: array\n          items:\n            type: string\n        inactivity:\n          $ref: '#/components/schemas/InactivityPolicyRuleCondition'\n        include:\n          type: array\n          items:\n            type: string\n        lifecycleExpiration:\n          $ref: '#/components/schemas/LifecycleExpirationPolicyRuleCondition'\n        passwordExpiration:\n          $ref: '#/components/schemas/PasswordExpirationPolicyRuleCondition'\n        userLifecycleAttribute:\n          $ref: '#/components/schemas/UserLifecycleAttributePolicyRuleCondition'\n    UserProfile:\n      additionalProperties: true\n      type: object\n      properties:\n        city:\n          type: string\n          maxLength: 128\n          nullable: true\n        costCenter:\n          type: string\n        countryCode:\n          type: string\n          maxLength: 2\n          nullable: true\n        department:\n          type: string\n        displayName:\n          type: string\n        division:\n          type: string\n        email:\n          type: string\n          format: email\n          minLength: 5\n          maxLength: 100\n        employeeNumber:\n          type: string\n        firstName:\n          type: string\n          minLength: 1\n          maxLength: 50\n          nullable: true\n        honorificPrefix:\n          type: string\n        honorificSuffix:\n          type: string\n        lastName:\n          type: string\n          minLength: 1\n          maxLength: 50\n          nullable: true\n        locale:\n          $ref: '#/components/schemas/Language'\n        login:\n          type: string\n          maxLength: 100\n        manager:\n          type: string\n        managerId:\n          type: string\n        middleName:\n          type: string\n        mobilePhone:\n          type: string\n          maxLength: 100\n          nullable: true\n        nickName:\n          type: string\n        organization:\n          type: string\n        postalAddress:\n          type: string\n          maxLength: 4096\n          nullable: true\n        preferredLanguage:\n          type: string\n        primaryPhone:\n          type: string\n          maxLength: 100\n          nullable: true\n        profileUrl:\n          type: string\n        secondEmail:\n          type: string\n          format: email\n          minLength: 5\n          maxLength: 100\n          nullable: true\n        state:\n          type: string\n          maxLength: 128\n          nullable: true\n        streetAddress:\n          type: string\n          maxLength: 1024\n          nullable: true\n        timezone:\n          type: string\n        title:\n          type: string\n        userType:\n          type: string\n        zipCode:\n          type: string\n          maxLength: 50\n          nullable: true\n    UserSchema:\n      type: object\n      properties:\n        $schema:\n          type: string\n          readOnly: true\n        created:\n          type: string\n          readOnly: true\n        definitions:\n          $ref: '#/components/schemas/UserSchemaDefinitions'\n        id:\n          type: string\n          readOnly: true\n        lastUpdated:\n          type: string\n          readOnly: true\n        name:\n          type: string\n          readOnly: true\n        properties:\n          $ref: '#/components/schemas/UserSchemaProperties'\n        title:\n          type: string\n        type:\n          type: string\n          readOnly: true\n        _links:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n          readOnly: true\n    UserSchemaAttribute:\n      type: object\n      properties:\n        description:\n          type: string\n        enum:\n          type: array\n          items:\n            type: string\n        externalName:\n          type: string\n        externalNamespace:\n          type: string\n        items:\n          $ref: '#/components/schemas/UserSchemaAttributeItems'\n        master:\n          $ref: '#/components/schemas/UserSchemaAttributeMaster'\n        maxLength:\n          type: integer\n        minLength:\n          type: integer\n        mutability:\n          type: string\n        oneOf:\n          type: array\n          items:\n            $ref: '#/components/schemas/UserSchemaAttributeEnum'\n        pattern:\n          type: string\n        permissions:\n          type: array\n          items:\n            $ref: '#/components/schemas/UserSchemaAttributePermission'\n        required:\n          type: boolean\n        scope:\n          $ref: '#/components/schemas/UserSchemaAttributeScope'\n        title:\n          type: string\n        type:\n          $ref: '#/components/schemas/UserSchemaAttributeType'\n        union:\n          $ref: '#/components/schemas/UserSchemaAttributeUnion'\n        unique:\n          type: string\n      x-okta-allow-null-property-value-for-updates: true\n    UserSchemaAttributeEnum:\n      type: object\n      properties:\n        const:\n          type: string\n        title:\n          type: string\n    UserSchemaAttributeItems:\n      type: object\n      properties:\n        enum:\n          type: array\n          items:\n            type: string\n        oneOf:\n          type: array\n          items:\n            $ref: '#/components/schemas/UserSchemaAttributeEnum'\n        type:\n          type: string\n    UserSchemaAttributeMaster:\n      type: object\n      properties:\n        priority:\n          type: array\n          items:\n            $ref: '#/components/schemas/UserSchemaAttributeMasterPriority'\n        type:\n          $ref: '#/components/schemas/UserSchemaAttributeMasterType'\n    UserSchemaAttributeMasterPriority:\n      type: object\n      properties:\n        type:\n          type: string\n        value:\n          type: string\n    UserSchemaAttributeMasterType:\n      type: string\n      enum:\n        - OKTA\n        - OVERRIDE\n        - PROFILE_MASTER\n    UserSchemaAttributePermission:\n      type: object\n      properties:\n        action:\n          type: string\n        principal:\n          type: string\n    UserSchemaAttributeScope:\n      type: string\n      enum:\n        - NONE\n        - SELF\n    UserSchemaAttributeType:\n      type: string\n      enum:\n        - array\n        - boolean\n        - integer\n        - number\n        - string\n    UserSchemaAttributeUnion:\n      type: string\n      enum:\n        - DISABLE\n        - ENABLE\n    UserSchemaBase:\n      type: object\n      properties:\n        id:\n          type: string\n        properties:\n          $ref: '#/components/schemas/UserSchemaBaseProperties'\n        required:\n          type: array\n          items:\n            type: string\n        type:\n          type: string\n    UserSchemaBaseProperties:\n      type: object\n      properties:\n        city:\n          $ref: '#/components/schemas/UserSchemaAttribute'\n        costCenter:\n          $ref: '#/components/schemas/UserSchemaAttribute'\n        countryCode:\n          $ref: '#/components/schemas/UserSchemaAttribute'\n        department:\n          $ref: '#/components/schemas/UserSchemaAttribute'\n        displayName:\n          $ref: '#/components/schemas/UserSchemaAttribute'\n        division:\n          $ref: '#/components/schemas/UserSchemaAttribute'\n        email:\n          $ref: '#/components/schemas/UserSchemaAttribute'\n        employeeNumber:\n          $ref: '#/components/schemas/UserSchemaAttribute'\n        firstName:\n          $ref: '#/components/schemas/UserSchemaAttribute'\n        honorificPrefix:\n          $ref: '#/components/schemas/UserSchemaAttribute'\n        honorificSuffix:\n          $ref: '#/components/schemas/UserSchemaAttribute'\n        lastName:\n          $ref: '#/components/schemas/UserSchemaAttribute'\n        locale:\n          $ref: '#/components/schemas/UserSchemaAttribute'\n        login:\n          $ref: '#/components/schemas/UserSchemaAttribute'\n        manager:\n          $ref: '#/components/schemas/UserSchemaAttribute'\n        managerId:\n          $ref: '#/components/schemas/UserSchemaAttribute'\n        middleName:\n          $ref: '#/components/schemas/UserSchemaAttribute'\n        mobilePhone:\n          $ref: '#/components/schemas/UserSchemaAttribute'\n        nickName:\n          $ref: '#/components/schemas/UserSchemaAttribute'\n        organization:\n          $ref: '#/components/schemas/UserSchemaAttribute'\n        postalAddress:\n          $ref: '#/components/schemas/UserSchemaAttribute'\n        preferredLanguage:\n          $ref: '#/components/schemas/UserSchemaAttribute'\n        primaryPhone:\n          $ref: '#/components/schemas/UserSchemaAttribute'\n        profileUrl:\n          $ref: '#/components/schemas/UserSchemaAttribute'\n        secondEmail:\n          $ref: '#/components/schemas/UserSchemaAttribute'\n        state:\n          $ref: '#/components/schemas/UserSchemaAttribute'\n        streetAddress:\n          $ref: '#/components/schemas/UserSchemaAttribute'\n        timezone:\n          $ref: '#/components/schemas/UserSchemaAttribute'\n        title:\n          $ref: '#/components/schemas/UserSchemaAttribute'\n        userType:\n          $ref: '#/components/schemas/UserSchemaAttribute'\n        zipCode:\n          $ref: '#/components/schemas/UserSchemaAttribute'\n    UserSchemaDefinitions:\n      type: object\n      properties:\n        base:\n          $ref: '#/components/schemas/UserSchemaBase'\n        custom:\n          $ref: '#/components/schemas/UserSchemaPublic'\n    UserSchemaProperties:\n      type: object\n      properties:\n        profile:\n          $ref: '#/components/schemas/UserSchemaPropertiesProfile'\n    UserSchemaPropertiesProfile:\n      type: object\n      properties:\n        allOf:\n          type: array\n          items:\n            $ref: '#/components/schemas/UserSchemaPropertiesProfileItem'\n    UserSchemaPropertiesProfileItem:\n      type: object\n      properties:\n        $ref:\n          type: string\n    UserSchemaPublic:\n      type: object\n      properties:\n        id:\n          type: string\n        properties:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/UserSchemaAttribute'\n        required:\n          type: array\n          items:\n            type: string\n        type:\n          type: string\n    UserStatus:\n      type: string\n      enum:\n        - ACTIVE\n        - DEPROVISIONED\n        - LOCKED_OUT\n        - PASSWORD_EXPIRED\n        - PROVISIONED\n        - RECOVERY\n        - STAGED\n        - SUSPENDED\n    UserStatusPolicyRuleCondition:\n      type: object\n      properties:\n        value:\n          $ref: '#/components/schemas/PolicyUserStatus'\n    UserType:\n      type: object\n      properties:\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n        createdBy:\n          type: string\n          readOnly: true\n        default:\n          type: boolean\n          readOnly: true\n        description:\n          type: string\n        displayName:\n          type: string\n        id:\n          type: string\n        lastUpdated:\n          type: string\n          format: date-time\n          readOnly: true\n        lastUpdatedBy:\n          type: string\n          readOnly: true\n        name:\n          type: string\n        _links:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n          readOnly: true\n    UserTypeCondition:\n      properties:\n        exclude:\n          items:\n            type: string\n          type: array\n        include:\n          items:\n            type: string\n          type: array\n    UserVerificationEnum:\n      type: string\n      enum:\n        - PREFERRED\n        - REQUIRED\n    VerificationMethod:\n      type: object\n      properties:\n        constraints:\n          items:\n            $ref: '#/components/schemas/AccessPolicyConstraints'\n          type: array\n        factorMode:\n          type: string\n        reauthenticateIn:\n          type: string\n        type:\n          type: string\n    VerifyFactorRequest:\n      type: object\n      properties:\n        activationToken:\n          type: string\n        answer:\n          type: string\n        attestation:\n          type: string\n        clientData:\n          type: string\n        nextPassCode:\n          type: string\n        passCode:\n          type: string\n        registrationData:\n          type: string\n        stateToken:\n          type: string\n    VerifyUserFactorResponse:\n      type: object\n      properties:\n        expiresAt:\n          type: string\n          format: date-time\n          readOnly: true\n        factorResult:\n          $ref: '#/components/schemas/VerifyUserFactorResult'\n        factorResultMessage:\n          type: string\n        _embedded:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n          readOnly: true\n        _links:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n          readOnly: true\n    VerifyUserFactorResult:\n      type: string\n      enum:\n        - CHALLENGE\n        - ERROR\n        - EXPIRED\n        - FAILED\n        - PASSCODE_REPLAYED\n        - REJECTED\n        - SUCCESS\n        - TIMEOUT\n        - TIME_WINDOW_EXCEEDED\n        - WAITING\n    Version:\n      description: The version specified as a [Semantic Version](https://semver.org/).\n      type: string\n      pattern: ^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$\n    VersionObject:\n      type: object\n      properties:\n        minimum:\n          type: string\n    WebAuthnUserFactor:\n      allOf:\n        - $ref: '#/components/schemas/UserFactor'\n        - type: object\n          properties:\n            profile:\n              $ref: '#/components/schemas/WebAuthnUserFactorProfile'\n    WebAuthnUserFactorProfile:\n      type: object\n      properties:\n        authenticatorName:\n          type: string\n        credentialId:\n          type: string\n    WebUserFactor:\n      allOf:\n        - $ref: '#/components/schemas/UserFactor'\n        - type: object\n          properties:\n            profile:\n              $ref: '#/components/schemas/WebUserFactorProfile'\n    WebUserFactorProfile:\n      type: object\n      properties:\n        credentialId:\n          type: string\n    WellKnownOrgMetadata:\n      type: object\n      properties:\n        id:\n          type: string\n          description: The unique identifier of the Org\n        pipeline:\n          $ref: '#/components/schemas/PipelineType'\n        settings:\n          $ref: '#/components/schemas/WellKnownOrgMetadataSettings'\n        _links:\n          type: object\n          properties:\n            alternate:\n              $ref: '#/components/schemas/HrefObject'\n            organization:\n              $ref: '#/components/schemas/HrefObject'\n    WellKnownOrgMetadataSettings:\n      type: object\n      properties:\n        analyticsCollectionEnabled:\n          type: boolean\n        bugReportingEnabled:\n          type: boolean\n        omEnabled:\n          type: boolean\n          description: Whether the legacy Okta Mobile application is enabled for the org\n    WsFederationApplication:\n      x-okta-defined-as:\n        name: template_wsfed\n      allOf:\n        - $ref: '#/components/schemas/Application'\n        - type: object\n          properties:\n            name:\n              type: string\n              default: template_wsfed\n            settings:\n              $ref: '#/components/schemas/WsFederationApplicationSettings'\n    WsFederationApplicationSettings:\n      allOf:\n        - $ref: '#/components/schemas/ApplicationSettings'\n        - type: object\n          properties:\n            app:\n              $ref: '#/components/schemas/WsFederationApplicationSettingsApplication'\n    WsFederationApplicationSettingsApplication:\n      type: object\n      properties:\n        attributeStatements:\n          type: string\n        audienceRestriction:\n          type: string\n        authnContextClassRef:\n          type: string\n        groupFilter:\n          type: string\n        groupName:\n          type: string\n        groupValueFormat:\n          type: string\n        nameIDFormat:\n          type: string\n        realm:\n          type: string\n        siteURL:\n          type: string\n        usernameAttribute:\n          type: string\n        wReplyOverride:\n          type: boolean\n        wReplyURL:\n          type: string\n  responses:\n    ErrorApiValidationFailed400:\n      description: Bad Request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          examples:\n            API Validation Failed:\n              $ref: '#/components/examples/ErrorApiValidationFailed'\n    ErrorAccessDenied403:\n      description: Forbidden\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          examples:\n            Access Denied:\n              $ref: '#/components/examples/ErrorAccessDenied'\n    ErrorResourceNotFound404:\n      description: Not Found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          examples:\n            Resource Not Found:\n              $ref: '#/components/examples/ErrorResourceNotFound'\n    ErrorTooManyRequests429:\n      description: Too Many Requests\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          examples:\n            Resource Not Found:\n              $ref: '#/components/examples/ErrorTooManyRequests'\n    AuthenticatorResponse:\n      description: OK\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Authenticator'\n          examples:\n            Duo:\n              $ref: '#/components/examples/AuthenticatorResponseDuo'\n            Email:\n              $ref: '#/components/examples/AuthenticatorResponseEmail'\n            Password:\n              $ref: '#/components/examples/AuthenticatorResponsePassword'\n            Phone:\n              $ref: '#/components/examples/AuthenticatorResponsePhone'\n            WebAuthn:\n              $ref: '#/components/examples/AuthenticatorResponseWebAuthn'\n            Security Question:\n              $ref: '#/components/examples/AuthenticatorResponseSecurityQuestion'\n  requestBodies:\n    AuthenticatorRequestBody:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Authenticator'\n          examples:\n            Duo:\n              $ref: '#/components/examples/AuthenticatorRequestDuo'\n      required: true\n",
			"canonicalURL": "/github.com/okta/okta-sdk-dotnet@79b87828ff3a7201c960f61ebf93753bc1627619/-/blob/openapi3/management.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/okta/okta-sdk-dotnet/blob/79b87828ff3a7201c960f61ebf93753bc1627619/openapi3/management.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: convert YAML to JSON: yaml: unknown anchor 'ref_0' referenced"
}