{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/windmill-labs/windmill"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "backend/windmill-api/openapi.yaml",
			"byteSize": 138542,
			"content": "openapi: \"3.0.3\"\n\ninfo:\n  version: 1.56.1\n  title: Windmill server API\n  contact:\n    name: Windmill contact\n    email: contact@windmill.dev\n    url: https://windmill.dev\n\n  license:\n    name: Apache 2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0.html\n\nexternalDocs:\n  description: documentation portal\n  url: https://docs.windmill.dev\n\nservers:\n  - url: /api\n\nsecurity:\n  - bearerAuth: []\n  - cookieAuth: []\n\npaths:\n  /version:\n    get:\n      summary: get backend version\n      operationId: backendVersion\n      tags:\n        - settings\n      responses:\n        \"200\":\n          description: git version of backend\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /openapi.yaml:\n    get:\n      summary: get openapi yaml spec\n      operationId: getOpenApiYaml\n      tags:\n        - settings\n      responses:\n        \"200\":\n          description: openapi yaml file content\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /w/{workspace}/audit/get/{id}:\n    get:\n      summary: get audit log (requires admin privilege)\n      operationId: getAuditLog\n      tags:\n        - audit\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/PathId\"\n      responses:\n        \"200\":\n          description: an audit log\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AuditLog\"\n\n  /w/{workspace}/audit/list:\n    get:\n      summary: list audit logs (requires admin privilege)\n      operationId: listAuditLogs\n      tags:\n        - audit\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/Page\"\n        - $ref: \"#/components/parameters/PerPage\"\n        - $ref: \"#/components/parameters/Before\"\n        - $ref: \"#/components/parameters/After\"\n        - $ref: \"#/components/parameters/Username\"\n        - $ref: \"#/components/parameters/Operation\"\n        - $ref: \"#/components/parameters/ResourceName\"\n        - $ref: \"#/components/parameters/ActionKind\"\n\n      responses:\n        \"200\":\n          description: a list of audit logs\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/AuditLog\"\n\n  /auth/login:\n    post:\n      security: []\n      summary: login with password\n      operationId: login\n      tags:\n        - user\n      requestBody:\n        description: credentials\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Login\"\n\n      responses:\n        \"200\":\n          description: \u003e\n            Successfully authenticated.\n            The session ID is returned in a cookie named `token` and as plaintext response.\n            Preferred method of authorization is through the bearer token. The cookie is only for browser convenience.\n\n          headers:\n            Set-Cookie:\n              schema:\n                type: string\n                example: token=abcde12345; Path=/; HttpOnly\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /auth/logout:\n    post:\n      security: []\n      summary: logout\n      operationId: logout\n      tags:\n        - user\n\n      responses:\n        \"200\":\n          description: clear cookies and clear token (if applicable)\n          headers:\n            Set-Cookie:\n              schema:\n                type: string\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /w/{workspace}/users/add:\n    post:\n      summary: create user (require admin privilege)\n      operationId: createUser\n      tags:\n        - user\n        - admin\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n      requestBody:\n        description: new user\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/NewUser\"\n      responses:\n        \"201\":\n          description: user created\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /w/{workspace}/users/update/{username}:\n    post:\n      summary: update user (require admin privilege)\n      operationId: updateUser\n      tags:\n        - user\n        - admin\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - name: username\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: new user\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/EditWorkspaceUser\"\n      responses:\n        \"200\":\n          description: edited user\n          content:\n            text/plain:\n              schema:\n                type: string\n\n\n  /w/{workspace}/users/is_owner/{path}:\n    get:\n      summary: is owner of path\n      operationId: isOwnerOfPath\n      tags:\n        - user\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/Path\"\n      responses:\n        \"200\":\n          description: is owner\n          content:\n            application/json:\n              schema:\n                type: boolean\n\n  /users/setpassword:\n    post:\n      summary: set password\n      operationId: setPassword\n      tags:\n        - user\n      requestBody:\n        description: set password\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                password:\n                  type: string\n              required:\n                - password\n      responses:\n        \"200\":\n          description: password set\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /users/create:\n    post:\n      summary: create user\n      operationId: createUserGlobally\n      tags:\n        - user\n      requestBody:\n        description: user info\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                email:\n                  type: string\n                password:\n                  type: string\n                super_admin:\n                  type: boolean\n                name:\n                  type: string\n                company:\n                  type: string\n              required:\n                - email\n                - password\n                - super_admin\n      responses:\n        \"201\":\n          description: user created\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /users/update/{email}:\n    post:\n      summary: global update user (require super admin)\n      operationId: globalUserUpdate\n      tags:\n        - user\n      parameters:\n        - name: email\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: new user info\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                is_super_admin:\n                  type: boolean\n      responses:\n        \"200\":\n          description: user updated\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /users/delete/{email}:\n    delete:\n      summary: global delete user (require super admin)\n      operationId: globalUserDelete\n      tags:\n        - user\n      parameters:\n        - name: email\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: user deleted\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /w/{workspace}/users/delete/{username}:\n    delete:\n      summary: delete user (require admin privilege)\n      operationId: deleteUser\n      tags:\n        - user\n        - admin\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - name: username\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: delete user\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /workspaces/list:\n    get:\n      summary: list all workspaces visible to me\n      operationId: listWorkspaces\n      tags:\n        - workspace\n      responses:\n        \"200\":\n          description: all workspaces\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Workspace\"\n\n  /workspaces/allowed_domain_auto_invite:\n    get:\n      summary: is domain allowed for auto invi\n      operationId: isDomainAllowed\n      tags:\n        - workspace\n      responses:\n        \"200\":\n          description: domain allowed or not\n          content:\n            application/json:\n              schema:\n                type: boolean\n\n  /workspaces/users:\n    get:\n      summary: list all workspaces visible to me with user info\n      operationId: listUserWorkspaces\n      tags:\n        - workspace\n      responses:\n        \"200\":\n          description: workspace with associated username\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserWorkspaceList\"\n\n  /workspaces/list_as_superadmin:\n    get:\n      summary: list all workspaces as super admin (require to be super admin)\n      operationId: listWorkspacesAsSuperAdmin\n      tags:\n        - workspace\n      parameters:\n        - $ref: \"#/components/parameters/Page\"\n        - $ref: \"#/components/parameters/PerPage\"\n      responses:\n        \"200\":\n          description: workspaces\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Workspace\"\n\n  /workspaces/create:\n    post:\n      summary: create workspace\n      operationId: createWorkspace\n      tags:\n        - workspace\n      requestBody:\n        description: new token\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateWorkspace\"\n      responses:\n        \"201\":\n          description: token created\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /workspaces/exists:\n    post:\n      summary: exists workspace\n      operationId: existsWorkspace\n      tags:\n        - workspace\n      requestBody:\n        description: id of workspace\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                id:\n                  type: string\n              required:\n                - id\n      responses:\n        \"200\":\n          description: status\n          content:\n            text/plain:\n              schema:\n                type: boolean\n\n  /workspaces/exists_username:\n    post:\n      summary: exists username\n      operationId: existsUsername\n      tags:\n        - workspace\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                id:\n                  type: string\n                username:\n                  type: string\n              required:\n                - id\n                - username\n      responses:\n        \"200\":\n          description: status\n          content:\n            text/plain:\n              schema:\n                type: boolean\n\n  /users/email:\n    get:\n      summary: get current user email (if logged in)\n      operationId: getCurrentEmail\n      tags:\n        - user\n      responses:\n        \"200\":\n          description: user email\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /users/usage:\n    get:\n      summary: get current usage outside of premium workspaces\n      operationId: getUsage\n      tags:\n        - user\n      responses:\n        \"200\":\n          description: free usage\n          content:\n            text/plain:\n              schema:\n                type: number\n\n  /users/whoami:\n    get:\n      summary: get current global whoami (if logged in)\n      operationId: globalWhoami\n      tags:\n        - user\n      responses:\n        \"200\":\n          description: user email\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GlobalUserInfo\"\n\n  /users/list_invites:\n    get:\n      summary: list all workspace invites\n      operationId: listWorkspaceInvites\n      tags:\n        - user\n      responses:\n        \"200\":\n          description: list all workspace invites\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/WorkspaceInvite\"\n\n  /w/{workspace}/users/whoami:\n    get:\n      summary: whoami\n      operationId: whoami\n      tags:\n        - user\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n      responses:\n        \"200\":\n          description: user\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n\n  /w/{workspace}/users/leave_workspace:\n    post:\n      summary: leave workspace\n      operationId: leaveWorkspace\n      tags:\n        - user\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n      responses:\n        \"200\":\n          description: status\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /users/accept_invite:\n    post:\n      summary: accept invite to workspace\n      operationId: acceptInvite\n      tags:\n        - user\n      requestBody:\n        description: accept invite\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                workspace_id:\n                  type: string\n                username:\n                  type: string\n              required:\n                - workspace_id\n                - username\n      responses:\n        \"200\":\n          description: status\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /users/decline_invite:\n    post:\n      summary: decline invite to workspace\n      operationId: declineInvite\n      tags:\n        - user\n      requestBody:\n        description: decline invite\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                workspace_id:\n                  type: string\n              required:\n                - workspace_id\n      responses:\n        \"200\":\n          description: status\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /w/{workspace}/workspaces/invite_user:\n    post:\n      summary: invite user to workspace\n      operationId: inviteUser\n      tags:\n        - workspace\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n      requestBody:\n        description: WorkspaceInvite\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                email:\n                  type: string\n                is_admin:\n                  type: boolean\n                operator:\n                  type: boolean\n              required:\n                - email\n                - is_admin\n                - operator\n      responses:\n        \"200\":\n          description: status\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /w/{workspace}/workspaces/delete_invite:\n    post:\n      summary: delete user invite\n      operationId: delete invite\n      tags:\n        - workspace\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n      requestBody:\n        description: WorkspaceInvite\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                email:\n                  type: string\n                is_admin:\n                  type: boolean\n                operator:\n                  type: boolean\n              required:\n                - email\n                - is_admin\n                - operator\n      responses:\n        \"200\":\n          description: status\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /w/{workspace}/workspaces/delete:\n    delete:\n      summary: delete workspace\n      operationId: deleteWorkspace\n      tags:\n        - workspace\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n      responses:\n        \"200\":\n          description: status\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /w/{workspace}/users/whois/{username}:\n    get:\n      summary: whois\n      operationId: whois\n      tags:\n        - user\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - name: username\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: user\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n\n  /users/list_as_super_admin:\n    get:\n      summary: list all users as super admin (require to be super amdin)\n      operationId: listUsersAsSuperAdmin\n      tags:\n        - user\n      parameters:\n        - $ref: \"#/components/parameters/Page\"\n        - $ref: \"#/components/parameters/PerPage\"\n      responses:\n        \"200\":\n          description: user\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/GlobalUserInfo\"\n\n  /w/{workspace}/workspaces/list_pending_invites:\n    get:\n      summary: list pending invites for a workspace\n      operationId: listPendingInvites\n      tags:\n        - workspace\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n      responses:\n        \"200\":\n          description: user\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/WorkspaceInvite\"\n\n  /w/{workspace}/workspaces/get_settings:\n    get:\n      summary: get settings\n      operationId: getSettings\n      tags:\n        - workspace\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n\n      responses:\n        \"200\":\n          description: status\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  workspace_id:\n                    type: string\n                  slack_name:\n                    type: string\n                  slack_team_id:\n                    type: string\n                  slack_command_script:\n                    type: string\n                  auto_invite_domain:\n                    type: string\n                  auto_invite_operator:\n                    type: boolean\n\n  /w/{workspace}/workspaces/premium_info:\n    get:\n      summary: get premium info\n      operationId: getPremiumInfo\n      tags:\n        - workspace\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n\n      responses:\n        \"200\":\n          description: status\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  premium:\n                    type: boolean\n                  usage:\n                    type: number\n                required:\n                  - premium\n\n  /w/{workspace}/workspaces/edit_slack_command:\n    post:\n      summary: edit slack command\n      operationId: editSlackCommand\n      tags:\n        - workspace\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n      requestBody:\n        description: WorkspaceInvite\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                slack_command_script:\n                  type: string\n\n      responses:\n        \"200\":\n          description: status\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /w/{workspace}/workspaces/edit_auto_invite:\n    post:\n      summary: edit auto invite\n      operationId: editAutoInvite\n      tags:\n        - workspace\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n      requestBody:\n        description: WorkspaceInvite\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                operator:\n                  type: boolean\n\n      responses:\n        \"200\":\n          description: status\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /w/{workspace}/users/list:\n    get:\n      summary: list users\n      operationId: listUsers\n      tags:\n        - user\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n      responses:\n        \"200\":\n          description: user\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/User\"\n\n  /w/{workspace}/users/list_usernames:\n    get:\n      summary: list usernames\n      operationId: listUsernames\n      tags:\n        - user\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n      responses:\n        \"200\":\n          description: user\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n\n  /users/tokens/create:\n    post:\n      summary: create token\n      operationId: createToken\n      tags:\n        - user\n      requestBody:\n        description: new token\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/NewToken\"\n      responses:\n        \"201\":\n          description: token created\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /users/tokens/delete/{token_prefix}:\n    delete:\n      summary: delete token\n      operationId: deleteToken\n      tags:\n        - user\n      parameters:\n        - name: token_prefix\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: delete token\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /users/tokens/list:\n    get:\n      summary: list token\n      operationId: listTokens\n      tags:\n        - user\n      responses:\n        \"200\":\n          description: truncated token\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/TruncatedToken\"\n\n  /w/{workspace}/variables/create:\n    post:\n      summary: create variable\n      operationId: createVariable\n      tags:\n        - variable\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n      requestBody:\n        description: new variable\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateVariable\"\n      responses:\n        \"201\":\n          description: variable created\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /w/{workspace}/variables/delete/{path}:\n    delete:\n      summary: delete variable\n      operationId: deleteVariable\n      tags:\n        - variable\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/Path\"\n      responses:\n        \"200\":\n          description: variable deleted\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /w/{workspace}/variables/update/{path}:\n    post:\n      summary: update variable\n      operationId: updateVariable\n      tags:\n        - variable\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/Path\"\n      requestBody:\n        description: updated variable\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/EditVariable\"\n      responses:\n        \"200\":\n          description: variable updated\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /w/{workspace}/variables/get/{path}:\n    get:\n      summary: get variable\n      operationId: getVariable\n      tags:\n        - variable\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/Path\"\n        - name: decrypt_secret\n          description: |\n            ask to decrypt secret if this variable is secret\n            (if not secret no effect, default: true)\n          in: query\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: variable\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListableVariable\"\n\n  /w/{workspace}/variables/exists/{path}:\n    get:\n      summary: does variable exists at path\n      operationId: existsVariable\n      tags:\n        - variable\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/Path\"\n      responses:\n        \"200\":\n          description: variable\n          content:\n            application/json:\n              schema:\n                type: boolean\n\n  /w/{workspace}/variables/list:\n    get:\n      summary: list variables\n      operationId: listVariable\n      tags:\n        - variable\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n      responses:\n        \"200\":\n          description: variable list\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/ListableVariable\"\n\n  /w/{workspace}/variables/list_contextual:\n    get:\n      summary: list contextual variables\n      operationId: listContextualVariables\n      tags:\n        - variable\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n      responses:\n        \"200\":\n          description: contextual variable list\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/ContextualVariable\"\n\n  /oauth/login_callback/{client_name}:\n    post:\n      security: []\n      summary: login with oauth authorization flow\n      operationId: loginWithOauth\n      tags:\n        - user\n      parameters:\n        - $ref: \"#/components/parameters/ClientName\"\n      requestBody:\n        description: Partially filled script\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                code:\n                  type: string\n                state:\n                  type: string\n\n      responses:\n        \"200\":\n          description: \u003e\n            Successfully authenticated.\n            The session ID is returned in a cookie named `token` and as plaintext response.\n            Preferred method of authorization is through the bearer token. The cookie is only for browser convenience.\n\n          headers:\n            Set-Cookie:\n              schema:\n                type: string\n                example: token=abcde12345; Path=/; HttpOnly\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /w/{workspace}/oauth/connect_slack_callback:\n    post:\n      summary: connect slack callback\n      operationId: connectSlackCallback\n      tags:\n        - oauth\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n      requestBody:\n        description: code endpoint\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                code:\n                  type: string\n                state:\n                  type: string\n              required:\n                - code\n                - state\n      responses:\n        \"200\":\n          description: slack token\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /oauth/connect_callback/{client_name}:\n    post:\n      summary: connect callback\n      operationId: connectCallback\n      tags:\n        - oauth\n      parameters:\n        - $ref: \"#/components/parameters/ClientName\"\n      requestBody:\n        description: code endpoint\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                code:\n                  type: string\n                state:\n                  type: string\n              required:\n                - code\n                - state\n      responses:\n        \"200\":\n          description: oauth token\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TokenResponse\"\n\n  /w/{workspace}/oauth/create_account:\n    post:\n      summary: create OAuth account\n      operationId: createAccount\n      tags:\n        - oauth\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n      requestBody:\n        description: code endpoint\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                refresh_token:\n                  type: string\n                expires_in:\n                  type: integer\n                owner:\n                  type: string\n                client:\n                  type: string\n              required:\n                - expires_in\n                - owner\n                - client\n      responses:\n        \"200\":\n          description: account set\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /w/{workspace}/oauth/refresh_token/{id}:\n    post:\n      summary: refresh token\n      operationId: refreshToken\n      tags:\n        - oauth\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/AccountId\"\n      requestBody:\n        description: variable path\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                path:\n                  type: string\n              required:\n                - path\n      responses:\n        \"200\":\n          description: token refreshed\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /w/{workspace}/oauth/disconnect/{id}:\n    post:\n      summary: disconnect account\n      operationId: disconnectAccount\n      tags:\n        - oauth\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/AccountId\"\n      responses:\n        \"200\":\n          description: disconnected client\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /w/{workspace}/oauth/disconnect_slack:\n    post:\n      summary: disconnect slack\n      operationId: disconnectSlack\n      tags:\n        - oauth\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n      responses:\n        \"200\":\n          description: disconnected slack\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /oauth/list_logins:\n    get:\n      summary: list oauth logins\n      operationId: listOAuthLogins\n      tags:\n        - oauth\n      responses:\n        \"200\":\n          description: list of oauth login clients\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n\n  /oauth/list_connects:\n    get:\n      summary: list oauth connects\n      operationId: listOAuthConnects\n      tags:\n        - oauth\n      responses:\n        \"200\":\n          description: list of oauth connects clients\n          content:\n            application/json:\n              schema:\n                additionalProperties:\n                  type: object\n                  properties:\n                    extra_params:\n                      additionalProperties:\n                        type: string\n                    scopes:\n                      type: array\n                      items:\n                        type: string\n\n  /w/{workspace}/resources/create:\n    post:\n      summary: create resource\n      operationId: createResource\n      tags:\n        - resource\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n      requestBody:\n        description: new resource\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateResource\"\n      responses:\n        \"201\":\n          description: resource created\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /w/{workspace}/resources/delete/{path}:\n    delete:\n      summary: delete resource\n      operationId: deleteResource\n      tags:\n        - resource\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/Path\"\n      responses:\n        \"200\":\n          description: resource deleted\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /w/{workspace}/resources/update/{path}:\n    post:\n      summary: update resource\n      operationId: updateResource\n      tags:\n        - resource\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/Path\"\n      requestBody:\n        description: updated resource\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/EditResource\"\n      responses:\n        \"200\":\n          description: resource updated\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /w/{workspace}/resources/get/{path}:\n    get:\n      summary: get resource\n      operationId: getResource\n      tags:\n        - resource\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/Path\"\n      responses:\n        \"200\":\n          description: resource\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Resource\"\n\n  /w/{workspace}/resources/get_value/{path}:\n    get:\n      summary: get resource value\n      operationId: getResourceValue\n      tags:\n        - resource\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/Path\"\n      responses:\n        \"200\":\n          description: resource value\n          content:\n            application/json:\n              schema: {}\n\n  /w/{workspace}/resources/exists/{path}:\n    get:\n      summary: does resource exists\n      operationId: existsResource\n      tags:\n        - resource\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/Path\"\n      responses:\n        \"200\":\n          description: does resource exists\n          content:\n            application/json:\n              schema:\n                type: boolean\n\n  /w/{workspace}/resources/list:\n    get:\n      summary: list resources\n      operationId: listResource\n      tags:\n        - resource\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/Page\"\n        - $ref: \"#/components/parameters/PerPage\"\n        - name: resource_type\n          description: resource_types to list from, separated by ',',\n          in: query\n          schema:\n            type: string\n        - name: resource_type_exclude\n          description: resource_types to not list from, separated by ',',\n          in: query\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: resource list\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/ListableResource\"\n\n  /w/{workspace}/resources/type/create:\n    post:\n      summary: create resource_type\n      operationId: createResourceType\n      tags:\n        - resource\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n      requestBody:\n        description: new resource_type\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ResourceType\"\n      responses:\n        \"201\":\n          description: resource_type created\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /w/{workspace}/resources/type/delete/{path}:\n    delete:\n      summary: delete resource_type\n      operationId: deleteResourceType\n      tags:\n        - resource\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/Path\"\n      responses:\n        \"200\":\n          description: resource_type deleted\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /w/{workspace}/resources/type/update/{path}:\n    post:\n      summary: update resource_type\n      operationId: updateResourceType\n      tags:\n        - resource\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/Path\"\n      requestBody:\n        description: updated resource_type\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/EditResourceType\"\n      responses:\n        \"200\":\n          description: resource_type updated\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /w/{workspace}/resources/type/get/{path}:\n    get:\n      summary: get resource_type\n      operationId: getResourceType\n      tags:\n        - resource\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/Path\"\n      responses:\n        \"200\":\n          description: resource_type deleted\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceType\"\n\n  /w/{workspace}/resources/type/exists/{path}:\n    get:\n      summary: does resource_type exists\n      operationId: existsResourceType\n      tags:\n        - resource\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/Path\"\n      responses:\n        \"200\":\n          description: does resource_type exist\n          content:\n            application/json:\n              schema:\n                type: boolean\n\n  /w/{workspace}/resources/type/list:\n    get:\n      summary: list resource_types\n      operationId: listResourceType\n      tags:\n        - resource\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n      responses:\n        \"200\":\n          description: resource_type list\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/ResourceType\"\n\n  /w/{workspace}/resources/type/listnames:\n    get:\n      summary: list resource_types names\n      operationId: listResourceTypeNames\n      tags:\n        - resource\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n      responses:\n        \"200\":\n          description: resource_type list\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n\n  /scripts/hub/list:\n    get:\n      summary: list all available hub scripts\n      operationId: listHubScripts\n      tags:\n        - script\n      responses:\n        \"200\":\n          description: hub scripts list\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  asks:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        id:\n                          type: number\n                        ask_id:\n                          type: number\n                        summary:\n                          type: string\n                        app:\n                          type: string\n                        approved:\n                          type: boolean\n                        kind:\n                          type: string\n                          enum: [script, failure, trigger, command, approval]\n                        votes:\n                          type: number\n                        views:\n                          type: number\n                      required:\n                        - id\n                        - ask_id\n                        - summary\n                        - app\n                        - approved\n                        - kind\n                        - views\n                        - votes\n\n  /flows/hub/list:\n    get:\n      summary: list all available hub flows\n      operationId: listHubFlows\n      tags:\n        - flow\n      responses:\n        \"200\":\n          description: hub flows list\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  flows:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        id:\n                          type: number\n                        flow_id:\n                          type: number\n                        summary:\n                          type: string\n                        apps:\n                          type: array\n                          items:\n                            type: string\n                        approved:\n                          type: boolean\n                        votes:\n                          type: number\n\n                      required:\n                        - id\n                        - flow_id\n                        - summary\n                        - apps\n                        - approved\n                        - votes\n\n  /flows/hub/get/{id}:\n    get:\n      summary: get hub flow by id\n      operationId: getHubFlowById\n      tags:\n        - flow\n      parameters:\n        - $ref: \"#/components/parameters/PathId\"\n      responses:\n        \"200\":\n          description: flow\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  flow:\n                    $ref: \"../../openflow.openapi.yaml#/components/schemas/OpenFlow\"\n\n  /scripts/hub/get/{path}:\n    get:\n      summary: get hub script content by path\n      operationId: getHubScriptContentByPath\n      tags:\n        - script\n      parameters:\n        - $ref: \"#/components/parameters/ScriptPath\"\n      responses:\n        \"200\":\n          description: script details\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /scripts/hub/get_full/{path}:\n    get:\n      summary: get full hub script by path\n      operationId: getHubScriptByPath\n      tags:\n        - script\n      parameters:\n        - $ref: \"#/components/parameters/ScriptPath\"\n      responses:\n        \"200\":\n          description: script details\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    type: string\n                  lockfile:\n                    type: string\n                  schema: {}\n                  language:\n                    type: string\n                    enum: [deno, python3, go, bash]\n                  summary:\n                    type: string\n                required:\n                  - content\n                  - language\n\n  /w/{workspace}/scripts/list:\n    get:\n      summary: list all available scripts\n      operationId: listScripts\n      tags:\n        - script\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/Page\"\n        - $ref: \"#/components/parameters/PerPage\"\n        - $ref: \"#/components/parameters/OrderDesc\"\n        - $ref: \"#/components/parameters/CreatedBy\"\n        - name: path_start\n          description: mask to filter matching starting path\n          in: query\n          schema:\n            type: string\n        - name: path_exact\n          description: mask to filter exact matching path\n          in: query\n          schema:\n            type: string\n        - name: first_parent_hash\n          description: mask to filter scripts whom first direct parent has exact hash\n          in: query\n          schema:\n            type: string\n        - name: last_parent_hash\n          description: |\n            mask to filter scripts whom last parent in the chain has exact hash. \n            Beware that each script stores only a limited number of parents. Hence\n            the last parent hash for a script is not necessarily its top-most parent.\n            To find the top-most parent you will have to jump from last to last hash\n             until finding the parent\n          in: query\n          schema:\n            type: string\n        - name: parent_hash\n          description: |\n            is the hash present in the array of stored parent hashes for this script.\n            The same warning applies than for last_parent_hash. A script only store a\n            limited number of direct parent\n          in: query\n          schema:\n            type: string\n        - name: show_archived\n          description: |\n            (default false)\n            show also the archived files.\n            when multiple archived hash share the same path, only the ones with the latest create_at\n            are \n            ed.\n          in: query\n          schema:\n            type: boolean\n        - name: is_template\n          description: |\n            (default regardless)\n            if true show only the templates\n            if false show only the non templates\n            if not defined, show all regardless of if the script is a template\n          in: query\n          schema:\n            type: boolean\n        - name: kind\n          description: |\n            (default regardless)\n            script kind\n          in: query\n          schema:\n            type: string\n        - name: starred_only\n          description: |\n            (default false)\n            show only the starred items\n          in: query\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: All available scripts\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Script\"\n\n  /w/{workspace}/scripts/create:\n    post:\n      summary: create script\n      operationId: createScript\n      tags:\n        - script\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n      requestBody:\n        description: Partially filled script\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                path:\n                  type: string\n                parent_hash:\n                  type: string\n                summary:\n                  type: string\n                description:\n                  type: string\n                content:\n                  type: string\n                schema:\n                  type: object\n                is_template:\n                  type: boolean\n                lock:\n                  type: array\n                  items:\n                    type: string\n                language:\n                  type: string\n                  enum: [python3, deno, go, bash]\n                kind:\n                  type: string\n                  enum: [script, failure, trigger, command, approval]\n              required:\n                - path\n                - summary\n                - description\n                - content\n                - language\n      responses:\n        \"201\":\n          description: script created\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /scripts/python/tojsonschema:\n    post:\n      summary: inspect python code to infer jsonschema of arguments\n      operationId: pythonToJsonschema\n      tags:\n        - script\n      requestBody:\n        description: python code with the main function\n        required: true\n        content:\n          application/json:\n            schema:\n              type: string\n      responses:\n        \"200\":\n          description: parsed args\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MainArgSignature\"\n\n  /scripts/deno/tojsonschema:\n    post:\n      summary: inspect deno code to infer jsonschema of arguments\n      operationId: denoToJsonschema\n      tags:\n        - script\n      requestBody:\n        description: deno code with the main function\n        required: true\n        content:\n          application/json:\n            schema:\n              type: string\n      responses:\n        \"200\":\n          description: parsed args\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MainArgSignature\"\n\n  /scripts/bash/tojsonschema:\n    post:\n      summary: inspect bash code to infer jsonschema of arguments\n      operationId: bashToJsonschema\n      tags:\n        - script\n      requestBody:\n        description: bash code with the main function\n        required: true\n        content:\n          application/json:\n            schema:\n              type: string\n      responses:\n        \"200\":\n          description: parsed args\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MainArgSignature\"\n\n  /scripts/go/tojsonschema:\n    post:\n      summary: inspect go code to infer jsonschema of arguments\n      operationId: goToJsonschema\n      tags:\n        - script\n      requestBody:\n        description: go code with the main function\n        required: true\n        content:\n          application/json:\n            schema:\n              type: string\n      responses:\n        \"200\":\n          description: parsed args\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MainArgSignature\"\n\n  /w/{workspace}/scripts/archive/p/{path}:\n    post:\n      summary: archive script by path\n      operationId: archiveScriptByPath\n      tags:\n        - script\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/ScriptPath\"\n      responses:\n        \"200\":\n          description: script archived\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /w/{workspace}/scripts/archive/h/{hash}:\n    post:\n      summary: archive script by hash\n      operationId: archiveScriptByHash\n      tags:\n        - script\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/ScriptHash\"\n      responses:\n        \"200\":\n          description: script details\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Script\"\n\n  /w/{workspace}/scripts/delete/h/{hash}:\n    post:\n      summary: delete script by hash (erase content but keep hash)\n      operationId: deleteScriptByHash\n      tags:\n        - script\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/ScriptHash\"\n      responses:\n        \"200\":\n          description: script details\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Script\"\n\n  /w/{workspace}/scripts/get/p/{path}:\n    get:\n      summary: get script by path\n      operationId: getScriptByPath\n      tags:\n        - script\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/ScriptPath\"\n      responses:\n        \"200\":\n          description: script details\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Script\"\n\n  /w/{workspace}/scripts/raw/p/{path}:\n    get:\n      summary: raw script by path\n      operationId: rawScriptByPath\n      tags:\n        - script\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/ScriptPath\"\n      responses:\n        \"200\":\n          description: script content\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /w/{workspace}/scripts/exists/p/{path}:\n    get:\n      summary: exists script by path\n      operationId: existsScriptByPath\n      tags:\n        - script\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/ScriptPath\"\n      responses:\n        \"200\":\n          description: does it exists\n          content:\n            application/json:\n              schema:\n                type: boolean\n\n  /w/{workspace}/scripts/get/h/{hash}:\n    get:\n      summary: get script by hash\n      operationId: getScriptByHash\n      tags:\n        - script\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/ScriptHash\"\n      responses:\n        \"200\":\n          description: script details\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Script\"\n\n  /w/{workspace}/scripts/raw/h/{path}:\n    get:\n      summary: raw script by hash\n      operationId: rawScriptByHash\n      tags:\n        - script\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/ScriptPath\"\n      responses:\n        \"200\":\n          description: script content\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /w/{workspace}/scripts/deployment_status/h/{hash}:\n    get:\n      summary: get script deployment status\n      operationId: getScriptDeploymentStatus\n      tags:\n        - script\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/ScriptHash\"\n      responses:\n        \"200\":\n          description: script details\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  lock:\n                    type: string\n                  lock_error_logs:\n                    type: string\n\n  /w/{workspace}/jobs/run/p/{path}:\n    post:\n      summary: run script by path\n      operationId: runScriptByPath\n      tags:\n        - job\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/ScriptPath\"\n        - name: scheduled_for\n          description: when to schedule this job (leave empty for immediate run)\n          in: query\n          schema:\n            type: string\n            format: date-time\n        - name: scheduled_in_secs\n          description: schedule the script to execute in the number of seconds starting now\n          in: query\n          schema:\n            type: integer\n        - $ref: \"#/components/parameters/ParentJob\"\n        - name: invisible_to_owner\n          description: make the run invisible to the the script owner (default false)\n          in: query\n          schema:\n            type: boolean\n      requestBody:\n        description: script args\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ScriptArgs\"\n\n      responses:\n        \"201\":\n          description: job created\n          content:\n            text/plain:\n              schema:\n                type: string\n                format: uuid\n\n  /w/{workspace}/jobs/run_wait_result/p/{path}:\n    post:\n      summary: run script by path\n      operationId: runWaitResultScriptByPath\n      tags:\n        - job\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/ScriptPath\"\n        - name: scheduled_for\n          description: when to schedule this job (leave empty for immediate run)\n          in: query\n          schema:\n            type: string\n            format: date-time\n        - name: scheduled_in_secs\n          description: schedule the script to execute in the number of seconds starting now\n          in: query\n          schema:\n            type: integer\n        - $ref: \"#/components/parameters/ParentJob\"\n        - $ref: \"#/components/parameters/IncludeHeader\"\n\n      requestBody:\n        description: script args\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ScriptArgs\"\n\n      responses:\n        \"200\":\n          description: job result\n          content:\n            application/json:\n              schema: {}\n\n  /w/{workspace}/jobs/result_by_id/{flow_job_id}/{node_id}:\n    get:\n      summary: get job result by id\n      operationId: resultById\n      tags:\n        - job\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - name: flow_job_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: node_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: skip_direct\n          description: Skip checking that the node is part of the given flow.\n          in: query\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: job result\n          content:\n            application/json:\n              schema: {}\n\n  /w/{workspace}/flows/list:\n    get:\n      summary: list all available flows\n      operationId: listFlows\n      tags:\n        - flow\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/Page\"\n        - $ref: \"#/components/parameters/PerPage\"\n        - $ref: \"#/components/parameters/OrderDesc\"\n        - $ref: \"#/components/parameters/CreatedBy\"\n        - name: path_start\n          description: mask to filter matching starting path\n          in: query\n          schema:\n            type: string\n        - name: path_exact\n          description: mask to filter exact matching path\n          in: query\n          schema:\n            type: string\n        - name: show_archived\n          description: |\n            (default false)\n            show also the archived files.\n            when multiple archived hash share the same path, only the ones with the latest create_at\n            are displayed.\n          in: query\n          schema:\n            type: boolean\n        - name: starred_only\n          description: |\n            (default false)\n            show only the starred items\n          in: query\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: All available flow\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Flow\"\n\n  /w/{workspace}/flows/get/{path}:\n    get:\n      summary: get flow by path\n      operationId: getFlowByPath\n      tags:\n        - flow\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/ScriptPath\"\n      responses:\n        \"200\":\n          description: flow details\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Flow\"\n\n  /w/{workspace}/flows/exists/{path}:\n    get:\n      summary: exists flow by path\n      operationId: existsFlowByPath\n      tags:\n        - flow\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/ScriptPath\"\n      responses:\n        \"200\":\n          description: flow details\n          content:\n            application/json:\n              schema:\n                type: boolean\n\n  /w/{workspace}/flows/create:\n    post:\n      summary: create flow\n      operationId: createFlow\n      tags:\n        - flow\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n      requestBody:\n        description: Partially filled flow\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/OpenFlowWPath\"\n\n      responses:\n        \"201\":\n          description: flow created\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /w/{workspace}/flows/update/{path}:\n    post:\n      summary: update flow\n      operationId: updateFlow\n      tags:\n        - flow\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/ScriptPath\"\n      requestBody:\n        description: Partially filled flow\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/OpenFlowWPath\"\n\n      responses:\n        \"200\":\n          description: flow updated\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /w/{workspace}/flows/archive/{path}:\n    post:\n      summary: archive flow by path\n      operationId: archiveFlowByPath\n      tags:\n        - flow\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/ScriptPath\"\n      responses:\n        \"200\":\n          description: flow archived\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /w/{workspace}/apps/list:\n    get:\n      summary: list all available apps\n      operationId: listApps\n      tags:\n        - app\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/Page\"\n        - $ref: \"#/components/parameters/PerPage\"\n        - $ref: \"#/components/parameters/OrderDesc\"\n        - $ref: \"#/components/parameters/CreatedBy\"\n        - name: path_start\n          description: mask to filter matching starting path\n          in: query\n          schema:\n            type: string\n        - name: path_exact\n          description: mask to filter exact matching path\n          in: query\n          schema:\n            type: string\n        - name: starred_only\n          description: |\n            (default false)\n            show only the starred items\n          in: query\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: All available apps\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/ListableApp\"\n\n  /w/{workspace}/apps/exists/{path}:\n    get:\n      summary: does an app exisst at path\n      operationId: existsApp\n      tags:\n        - app\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/Path\"\n      responses:\n        \"200\":\n          description: app exists\n          content:\n            application/json:\n              schema:\n                type: boolean\n\n  /w/{workspace}/apps/get/p/{path}:\n    get:\n      summary: get app by path\n      operationId: getAppByPath\n      tags:\n        - app\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/ScriptPath\"\n      responses:\n        \"200\":\n          description: app details\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AppWithLastVersion\"\n\n  /w/{workspace}/apps/get/v/{id}:\n    get:\n      summary: get app by version\n      operationId: getAppByVersion\n      tags:\n        - app\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/PathId\"\n      responses:\n        \"200\":\n          description: app details\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AppWithLastVersion\"\n\n  /w/{workspace}/apps/create:\n    post:\n      summary: create app\n      operationId: createApp\n      tags:\n        - app\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n      requestBody:\n        description: new app\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                path:\n                  type: string\n                value: {}\n                summary:\n                  type: string\n                policy:\n                  $ref: \"#/components/schemas/Policy\"\n              required:\n                - path\n                - value\n                - summary\n                - policy\n      responses:\n        \"201\":\n          description: app created\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /w/{workspace}/apps/delete/{path}:\n    delete:\n      summary: delete app\n      operationId: deleteApp\n      tags:\n        - app\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/Path\"\n      responses:\n        \"200\":\n          description: app deleted\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /w/{workspace}/apps/update/{path}:\n    post:\n      summary: update app\n      operationId: updateApp\n      tags:\n        - app\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/ScriptPath\"\n      requestBody:\n        description: update app\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                path:\n                  type: string\n                summary:\n                  type: string\n                value: {}\n                policy:\n                  $ref: \"#/components/schemas/Policy\"\n      responses:\n        \"200\":\n          description: app updated\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /w/{workspace}/apps/execute_component/{path}:\n    post:\n      summary: executeComponent\n      operationId: executeComponent\n      tags:\n        - app\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/ScriptPath\"\n      requestBody:\n        description: update app\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                #script: script/\u003cpath\u003e\n                #flow: flow/\u003cpath\u003e\n                path:\n                  type: string\n                args: {}\n                raw_code:\n                  type: object\n                  properties:\n                    content:\n                      type: string\n                    language:\n                      type: string\n                    path:\n                      type: string\n                  required:\n                    - content\n                    - language\n                force_viewer_static_fields:\n                  type: object\n              required:\n                - args\n\n      responses:\n        \"200\":\n          description: job uuid\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /w/{workspace}/jobs/run/f/{path}:\n    post:\n      summary: run flow by path\n      operationId: runFlowByPath\n      tags:\n        - job\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/ScriptPath\"\n        - name: scheduled_for\n          description: when to schedule this job (leave empty for immediate run)\n          in: query\n          schema:\n            type: string\n            format: date-time\n        - name: scheduled_in_secs\n          description: schedule the script to execute in the number of seconds starting now\n          in: query\n          schema:\n            type: integer\n        - $ref: \"#/components/parameters/ParentJob\"\n        - $ref: \"#/components/parameters/IncludeHeader\"\n        - name: invisible_to_owner\n          description: make the run invisible to the the flow owner (default false)\n          in: query\n          schema:\n            type: boolean\n\n      requestBody:\n        description: flow args\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ScriptArgs\"\n\n      responses:\n        \"201\":\n          description: job created\n          content:\n            text/plain:\n              schema:\n                type: string\n                format: uuid\n\n  /w/{workspace}/jobs/run/h/{hash}:\n    post:\n      summary: run script by hash\n      operationId: runScriptByHash\n      tags:\n        - job\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/ScriptHash\"\n        - name: scheduled_for\n          description: when to schedule this job (leave empty for immediate run)\n          in: query\n          schema:\n            type: string\n            format: date-time\n        - name: scheduled_in_secs\n          description: schedule the script to execute in the number of seconds starting now\n          in: query\n          schema:\n            type: integer\n        - $ref: \"#/components/parameters/ParentJob\"\n        - $ref: \"#/components/parameters/IncludeHeader\"\n        - name: invisible_to_owner\n          description: make the run invisible to the the script owner (default false)\n          in: query\n          schema:\n            type: boolean\n      requestBody:\n        description: Partially filled args\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n\n      responses:\n        \"201\":\n          description: job created\n          content:\n            text/plain:\n              schema:\n                type: string\n                format: uuid\n\n  /w/{workspace}/jobs/run/preview:\n    post:\n      summary: run script preview\n      operationId: runScriptPreview\n      tags:\n        - job\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/IncludeHeader\"\n        - name: invisible_to_owner\n          description: make the run invisible to the the script owner (default false)\n          in: query\n          schema:\n            type: boolean\n      requestBody:\n        description: preview\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Preview\"\n\n      responses:\n        \"201\":\n          description: job created\n          content:\n            text/plain:\n              schema:\n                type: string\n                format: uuid\n\n  /w/{workspace}/jobs/run/preview_flow:\n    post:\n      summary: run flow preview\n      operationId: runFlowPreview\n      tags:\n        - job\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/IncludeHeader\"\n        - name: invisible_to_owner\n          description: make the run invisible to the the script owner (default false)\n          in: query\n          schema:\n            type: boolean\n\n      requestBody:\n        description: preview\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/FlowPreview\"\n\n      responses:\n        \"201\":\n          description: job created\n          content:\n            text/plain:\n              schema:\n                type: string\n                format: uuid\n\n  /w/{workspace}/jobs/queue/list:\n    get:\n      summary: list all available queued jobs\n      operationId: listQueue\n      tags:\n        - job\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/OrderDesc\"\n        - $ref: \"#/components/parameters/CreatedBy\"\n        - $ref: \"#/components/parameters/ParentJob\"\n        - $ref: \"#/components/parameters/ScriptExactPath\"\n        - $ref: \"#/components/parameters/ScriptStartPath\"\n        - $ref: \"#/components/parameters/ScriptExactHash\"\n        - $ref: \"#/components/parameters/CreatedBefore\"\n        - $ref: \"#/components/parameters/CreatedAfter\"\n        - $ref: \"#/components/parameters/Success\"\n        - $ref: \"#/components/parameters/JobKinds\"\n\n      responses:\n        \"200\":\n          description: All available queued jobs\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/QueuedJob\"\n\n  /w/{workspace}/jobs/completed/list:\n    get:\n      summary: list all available completed jobs\n      operationId: listCompletedJobs\n      tags:\n        - job\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/OrderDesc\"\n        - $ref: \"#/components/parameters/CreatedBy\"\n        - $ref: \"#/components/parameters/ParentJob\"\n        - $ref: \"#/components/parameters/ScriptExactPath\"\n        - $ref: \"#/components/parameters/ScriptStartPath\"\n        - $ref: \"#/components/parameters/ScriptExactHash\"\n        - $ref: \"#/components/parameters/CreatedBefore\"\n        - $ref: \"#/components/parameters/CreatedAfter\"\n        - $ref: \"#/components/parameters/Success\"\n        - $ref: \"#/components/parameters/JobKinds\"\n        - name: is_skipped\n          description: is the job skipped\n          in: query\n          schema:\n            type: boolean\n        - name: is_flow_step\n          description: is the job a flow step\n          in: query\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: All available completed jobs\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/CompletedJob\"\n\n  /w/{workspace}/jobs/list:\n    get:\n      summary: list all available jobs\n      operationId: listJobs\n      tags:\n        - job\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/CreatedBy\"\n        - $ref: \"#/components/parameters/ParentJob\"\n        - $ref: \"#/components/parameters/ScriptExactPath\"\n        - $ref: \"#/components/parameters/ScriptStartPath\"\n        - $ref: \"#/components/parameters/ScriptExactHash\"\n        - $ref: \"#/components/parameters/CreatedBefore\"\n        - $ref: \"#/components/parameters/CreatedAfter\"\n        - $ref: \"#/components/parameters/JobKinds\"\n        - name: is_skipped\n          description: is the job skipped\n          in: query\n          schema:\n            type: boolean\n        - name: is_flow_step\n          description: is the job a flow step\n          in: query\n          schema:\n            type: boolean\n        - name: success\n          description: filter on successful jobs\n          in: query\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: All jobs\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Job\"\n\n  /w/{workspace}/jobs/get/{id}:\n    get:\n      summary: get job\n      operationId: getJob\n      tags:\n        - job\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/JobId\"\n      responses:\n        \"200\":\n          description: job details\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Job\"\n\n  # /w/{workspace}/jobs/flow/current_state/{id}:\n  #   get:\n  #     summary: get flow current step state\n  #     operationId: getJob\n  #     tags:\n  #       - job\n  #     parameters:\n  #       - $ref: \"#/components/parameters/WorkspaceId\"\n  #       - $ref: \"#/components/parameters/JobId\"\n  #     responses:\n  #       \"200\":\n  #         description: state details\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: string\n\n  /w/{workspace}/jobs/getupdate/{id}:\n    get:\n      summary: get job updates\n      operationId: getJobUpdates\n      tags:\n        - job\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/JobId\"\n        - name: running\n          in: query\n          schema:\n            type: boolean\n        - name: log_offset\n          in: query\n          schema:\n            type: integer\n\n      responses:\n        \"200\":\n          description: job details\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  running:\n                    type: boolean\n                  completed:\n                    type: boolean\n                  new_logs:\n                    type: string\n\n  /w/{workspace}/jobs/completed/get/{id}:\n    get:\n      summary: get completed job\n      operationId: getCompletedJob\n      tags:\n        - job\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/JobId\"\n      responses:\n        \"200\":\n          description: job details\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CompletedJob\"\n\n  /w/{workspace}/jobs/completed/delete/{id}:\n    post:\n      summary: delete completed job (erase content but keep run id)\n      operationId: deleteCompletedJob\n      tags:\n        - job\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/JobId\"\n      responses:\n        \"200\":\n          description: job details\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CompletedJob\"\n\n  /w/{workspace}/jobs/queue/cancel/{id}:\n    post:\n      summary: cancel queued job\n      operationId: cancelQueuedJob\n      tags:\n        - job\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/JobId\"\n      requestBody:\n        description: reason\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                reason:\n                  type: string\n\n      responses:\n        \"200\":\n          description: job canceled\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /w/{workspace}/jobs/job_signature/{id}/{resume_id}:\n    get:\n      summary: create an HMac signature given a job id and a resume id\n      operationId: createJobSignature\n      tags:\n        - job\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/JobId\"\n        - name: resume_id\n          in: path\n          required: true\n          schema:\n            type: integer\n        - name: approver\n          in: query\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: job signature\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /w/{workspace}/jobs/resume_urls/{id}/{resume_id}:\n    get:\n      summary:  get resume urls given a job_id, resume_id and a nonce to resume a flow\n      operationId: getResumeUrls\n      tags:\n        - job\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/JobId\"\n        - name: resume_id\n          in: path\n          required: true\n          schema:\n            type: integer\n        - name: approver\n          in: query\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: url endpoints\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  approvalPage:\n                    type: string\n                  resume: \n                    type: string\n                  cancel:\n                    type: string\n                required:\n                  - approvalPage\n                  - resume\n                  - cancel\n\n  /w/{workspace}/jobs/resume/{id}/{resume_id}/{signature}:\n    get:\n      summary: resume a job for a suspended flow\n      operationId: resumeSuspendedJobGet\n      tags:\n        - job\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/JobId\"\n        - name: resume_id\n          in: path\n          required: true\n          schema:\n            type: integer\n        - name: signature\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: approver\n          in: query\n          schema:\n            type: string\n      responses:\n        \"201\":\n          description: job resumed\n          content:\n            text/plain:\n              schema:\n                type: string\n\n    post:\n      summary: resume a job for a suspended flow\n      operationId: resumeSuspendedJobPost\n      tags:\n        - job\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/JobId\"\n        - name: resume_id\n          in: path\n          required: true\n          schema:\n            type: integer\n        - name: signature\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: approver\n          in: query\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n      responses:\n        \"201\":\n          description: job resumed\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /w/{workspace}/jobs/flow/resume/{id}:\n    post:\n      summary: resume a job for a suspended flow as an owner\n      operationId: resumeSuspendedFlowAsOwner\n      tags:\n        - job\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/JobId\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n      responses:\n        \"201\":\n          description: job resumed\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /w/{workspace}/jobs/cancel/{id}/{resume_id}/{signature}:\n    get:\n      summary: cancel a job for a suspended flow\n      operationId: cancelSuspendedJobGet\n      tags:\n        - job\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/JobId\"\n        - name: resume_id\n          in: path\n          required: true\n          schema:\n            type: integer\n        - name: signature\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: approver\n          in: query\n          schema:\n            type: string\n      responses:\n        \"201\":\n          description: job resumed\n          content:\n            text/plain:\n              schema:\n                type: string\n\n    post:\n      summary: cancel a job for a suspended flow\n      operationId: cancelSuspendedJobPost\n      tags:\n        - job\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/JobId\"\n        - name: resume_id\n          in: path\n          required: true\n          schema:\n            type: integer\n        - name: signature\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: approver\n          in: query\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n      responses:\n        \"201\":\n          description: job resumed\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /w/{workspace}/jobs/get_flow/{id}/{resume_id}/{signature}:\n    get:\n      summary: get parent flow job of suspended job\n      operationId: getSuspendedJobFlow\n      tags:\n        - job\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/JobId\"\n        - name: resume_id\n          in: path\n          required: true\n          schema:\n            type: integer\n        - name: signature\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: approver\n          in: query\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: parent flow details\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  job:\n                    $ref: \"#/components/schemas/Job\"\n                  approvers:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        resume_id:\n                          type: integer\n                        approver:\n                          type: string\n                      required:\n                        - resume_id\n                        - approver\n                required:\n                  - job\n                  - approvers\n\n  /schedules/preview:\n    post:\n      summary: preview schedule\n      operationId: previewSchedule\n      tags:\n        - schedule\n      requestBody:\n        description: schedule\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                schedule:\n                  type: string\n                offset:\n                  type: integer\n              required:\n                - schedule\n      responses:\n        \"200\":\n          description: the preview of the next 10 time this schedule would apply to\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n                  format: date-time\n\n  /w/{workspace}/schedules/create:\n    post:\n      summary: create schedule\n      operationId: createSchedule\n      tags:\n        - schedule\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n      requestBody:\n        description: new schedule\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/NewSchedule\"\n      responses:\n        \"201\":\n          description: schedule created\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /w/{workspace}/schedules/update/{path}:\n    post:\n      summary: update schedule\n      operationId: updateSchedule\n      tags:\n        - schedule\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/Path\"\n      requestBody:\n        description: updated schedule\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/EditSchedule\"\n      responses:\n        \"200\":\n          description: schedule updated\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /w/{workspace}/schedules/setenabled/{path}:\n    post:\n      summary: set enabled schedule\n      operationId: setScheduleEnabled\n      tags:\n        - schedule\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/Path\"\n      requestBody:\n        description: updated schedule enable\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                enabled:\n                  type: boolean\n              required:\n                - enabled\n\n      responses:\n        \"200\":\n          description: schedule enabled set\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /w/{workspace}/schedules/delete/{path}:\n    delete:\n      summary: delete schedule\n      operationId: deleteSchedule\n      tags:\n        - schedule\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/Path\"\n      responses:\n        \"200\":\n          description: schedule deleted\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /w/{workspace}/schedules/get/{path}:\n    get:\n      summary: get schedule\n      operationId: getSchedule\n      tags:\n        - schedule\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/Path\"\n      responses:\n        \"200\":\n          description: schedule deleted\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Schedule\"\n\n  /w/{workspace}/schedules/exists/{path}:\n    get:\n      summary: does schedule exists\n      operationId: existsSchedule\n      tags:\n        - schedule\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/Path\"\n      responses:\n        \"200\":\n          description: schedule exists\n          content:\n            application/json:\n              schema:\n                type: boolean\n\n  /w/{workspace}/schedules/list:\n    get:\n      summary: list schedules\n      operationId: listSchedules\n      tags:\n        - schedule\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/Page\"\n        - $ref: \"#/components/parameters/PerPage\"\n      responses:\n        \"200\":\n          description: schedule list\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Schedule\"\n\n  /w/{workspace}/groups/list:\n    get:\n      summary: list groups\n      operationId: listGroups\n      tags:\n        - group\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/Page\"\n        - $ref: \"#/components/parameters/PerPage\"\n      responses:\n        \"200\":\n          description: group list\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Group\"\n\n  /w/{workspace}/groups/listnames:\n    get:\n      summary: list group names\n      operationId: listGroupNames\n      tags:\n        - group\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - name: only_member_of\n          in: query\n          description: only list the groups the user is member of (default false)\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: group list\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n\n  /w/{workspace}/groups/create:\n    post:\n      summary: create group\n      operationId: createGroup\n      tags:\n        - group\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n      requestBody:\n        description: create group\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                summary:\n                  type: string\n              required:\n                - name\n      responses:\n        \"200\":\n          description: group created\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /w/{workspace}/groups/update/{name}:\n    post:\n      summary: update group\n      operationId: updateGroup\n      tags:\n        - group\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/Name\"\n      requestBody:\n        description: updated group\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                summary:\n                  type: string\n      responses:\n        \"200\":\n          description: group updated\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /w/{workspace}/groups/delete/{name}:\n    delete:\n      summary: delete group\n      operationId: deleteGroup\n      tags:\n        - group\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/Name\"\n      responses:\n        \"200\":\n          description: group deleted\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /w/{workspace}/groups/get/{name}:\n    get:\n      summary: get group\n      operationId: getGroup\n      tags:\n        - group\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/Name\"\n      responses:\n        \"200\":\n          description: group\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Group\"\n\n  /w/{workspace}/groups/adduser/{name}:\n    post:\n      summary: add user to group\n      operationId: addUserToGroup\n      tags:\n        - group\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/Name\"\n      requestBody:\n        description: added user to group\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                username:\n                  type: string\n      responses:\n        \"200\":\n          description: user added to group\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /w/{workspace}/groups/removeuser/{name}:\n    post:\n      summary: remove user to group\n      operationId: removeUserToGroup\n      tags:\n        - group\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/Name\"\n      requestBody:\n        description: added user to group\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                username:\n                  type: string\n      responses:\n        \"200\":\n          description: user removed from group\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /w/{workspace}/folders/list:\n    get:\n      summary: list folders\n      operationId: listFolders\n      tags:\n        - folder\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/Page\"\n        - $ref: \"#/components/parameters/PerPage\"\n      responses:\n        \"200\":\n          description: folder list\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Folder\"\n\n  /w/{workspace}/folders/listnames:\n    get:\n      summary: list folder names\n      operationId: listFolderNames\n      tags:\n        - folder\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - name: only_member_of\n          in: query\n          description: only list the folders the user is member of (default false)\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: folder list\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n\n  /w/{workspace}/folders/create:\n    post:\n      summary: create folder\n      operationId: createFolder\n      tags:\n        - folder\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n      requestBody:\n        description: create folder\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                owners:\n                  type: array\n                  items: \n                    type: string\n                extra_perms:\n                  additionalProperties:\n                    type: boolean\n              required:\n                - name\n      responses:\n        \"200\":\n          description: folder created\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /w/{workspace}/folders/update/{name}:\n    post:\n      summary: update folder\n      operationId: updateFolder\n      tags:\n        - folder\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/Name\"\n      requestBody:\n        description: update folder\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                owners:\n                  type: array\n                  items: \n                    type: string\n                extra_perms:\n                  additionalProperties:\n                    type: boolean\n      responses:\n        \"200\":\n          description: folder updated\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /w/{workspace}/folders/delete/{name}:\n    delete:\n      summary: delete folder\n      operationId: deleteFolder\n      tags:\n        - folder\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/Name\"\n      responses:\n        \"200\":\n          description: folder deleted\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /w/{workspace}/folders/get/{name}:\n    get:\n      summary: get folder\n      operationId: getFolder\n      tags:\n        - folder\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/Name\"\n      responses:\n        \"200\":\n          description: folder\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Folder\"\n\n  /w/{workspace}/folders/getusage/{name}:\n    get:\n      summary: get folder usage\n      operationId: getFolderUsage\n      tags:\n        - folder\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/Name\"\n      responses:\n        \"200\":\n          description: folder\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  scripts:\n                    type: number\n                  flows:\n                    type: number\n                  apps:\n                    type: number\n                  resources:\n                    type: number\n                  variables:\n                    type: number\n                  schedules:\n                    type: number\n                required:\n                  - scripts\n                  - flows\n                  - apps\n                  - resources\n                  - variables\n                  - schedules\n\n  /w/{workspace}/folders/addowner/{name}:\n    post:\n      summary: add owner to folder\n      operationId: addOwnerToFolder\n      tags:\n        - folder\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/Name\"\n      requestBody:\n        description: owner user to folder\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                owner:\n                  type: string\n      responses:\n        \"200\":\n          description: owner added to folder\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /w/{workspace}/folders/removeowner/{name}:\n    post:\n      summary: remove owner to folder\n      operationId: removeOwnerToFolder\n      tags:\n        - folder\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/Name\"\n      requestBody:\n        description: added owner to folder\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                owner:\n                  type: string\n      responses:\n        \"200\":\n          description: owner removed from folder\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /workers/list:\n    get:\n      summary: list workers\n      operationId: listWorkers\n      tags:\n        - worker\n      parameters:\n        - $ref: \"#/components/parameters/Page\"\n        - $ref: \"#/components/parameters/PerPage\"\n      responses:\n        \"200\":\n          description: a list of workers\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/WorkerPing\"\n\n  /w/{workspace}/acls/get/{kind}/{path}:\n    get:\n      summary: get granular acls\n      operationId: getGranularAcls\n      tags:\n        - granular_acl\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/Path\"\n        - name: kind\n          in: path\n          required: true\n          schema:\n            type: string\n            enum: [script, group_, resource, schedule, variable, flow, folder]\n      responses:\n        \"200\":\n          description: acls\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties:\n                  type: boolean\n\n  /w/{workspace}/acls/add/{kind}/{path}:\n    post:\n      summary: add granular acls\n      operationId: addGranularAcls\n      tags:\n        - granular_acl\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/Path\"\n        - name: kind\n          in: path\n          required: true\n          schema:\n            type: string\n            enum: [script, group_, resource, schedule, variable, flow, folder]\n      requestBody:\n        description: acl to add\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                owner:\n                  type: string\n                write:\n                  type: boolean\n              required: [owner]\n      responses:\n        \"200\":\n          description: granular acl added\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /w/{workspace}/acls/remove/{kind}/{path}:\n    post:\n      summary: remove granular acls\n      operationId: removeGranularAcls\n      tags:\n        - granular_acl\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/Path\"\n        - name: kind\n          in: path\n          required: true\n          schema:\n            type: string\n            enum: [script, group_, resource, schedule, variable, flow, folder]\n      requestBody:\n        description: acl to add\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                owner:\n                  type: string\n              required: [owner]\n      responses:\n        \"200\":\n          description: granular acl removed\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /w/{workspace}/capture/{path}:\n    put:\n      summary: create flow preview capture\n      operationId: createCapture\n      tags:\n        - capture\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/Path\"\n      responses:\n        \"201\":\n          description: flow preview capture created\n    post:\n      summary: update flow preview capture\n      operationId: updateCapture\n      tags:\n        - capture\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/Path\"\n      responses:\n        \"204\":\n          description: flow preview captured\n    get:\n      summary: get flow preview capture\n      operationId: getCapture\n      tags:\n        - capture\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n        - $ref: \"#/components/parameters/Path\"\n      responses:\n        \"200\":\n          description: captured flow preview\n          content:\n            application/json:\n              schema: {}\n        \"404\":\n          description: capture does not exist for this flow\n\n  /w/{workspace}/favorites/star:\n    post:\n      summary: star item\n      operationId: star\n      tags:\n        - favorite\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                path:\n                  type: string\n                favorite_kind:\n                  type: string\n                  enum: [flow, app, script]\n      responses:\n        \"200\":\n          description: star item\n\n  /w/{workspace}/favorites/unstar:\n    post:\n      summary: unstar item\n      operationId: unstar\n      tags:\n        - favorite\n      parameters:\n        - $ref: \"#/components/parameters/WorkspaceId\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                path:\n                  type: string\n                favorite_kind:\n                  type: string\n                  enum: [flow, app, script]\n      responses:\n        \"200\":\n          description: unstar item\n\ncomponents:\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n    cookieAuth:\n      type: apiKey\n      in: cookie\n      name: token\n  parameters:\n    WorkspaceId:\n      name: workspace\n      in: path\n      required: true\n      schema:\n        type: string\n    AccountId:\n      name: id\n      in: path\n      required: true\n      schema:\n        type: integer\n    ClientName:\n      name: client_name\n      in: path\n      required: true\n      schema:\n        type: string\n    ScriptPath:\n      name: path\n      in: path\n      required: true\n      schema:\n        type: string\n    ScriptHash:\n      name: hash\n      in: path\n      required: true\n      schema:\n        type: string\n    JobId:\n      name: id\n      in: path\n      required: true\n      schema:\n        type: string\n        format: uuid\n    Path:\n      name: path\n      in: path\n      required: true\n      schema:\n        type: string\n    PathId:\n      name: id\n      in: path\n      required: true\n      schema:\n        type: integer\n    Name:\n      name: name\n      in: path\n      required: true\n      schema:\n        type: string\n    Page:\n      name: page\n      description: which page to return (start at 1, default 1)\n      in: query\n      schema:\n        type: integer\n    PerPage:\n      name: per_page\n      description: number of items to return for a given page (default 30, max 100)\n      in: query\n      schema:\n        type: integer\n    OrderDesc:\n      name: order_desc\n      description: order by desc order (default true)\n      in: query\n      schema:\n        type: boolean\n    CreatedBy:\n      name: created_by\n      description: mask to filter exact matching user creator\n      in: query\n      schema:\n        type: string\n    ParentJob:\n      name: parent_job\n      description: The parent job that is at the origin and responsible for the execution of this script if any\n      in: query\n      schema:\n        type: string\n        format: uuid\n    IncludeHeader:\n      name: include_header\n      description: |\n        List of headers's keys (separated with ',') whove value are added to the args\n        Header's key lowercased and '-'' replaced to '_' such that 'Content-Type' becomes the 'content_type' arg key\n      in: query\n      schema:\n        type: string\n\n    ScriptStartPath:\n      name: script_path_start\n      description: mask to filter matching starting path\n      in: query\n      schema:\n        type: string\n    ScriptExactPath:\n      name: script_path_exact\n      description: mask to filter exact matching path\n      in: query\n      schema:\n        type: string\n    ScriptExactHash:\n      name: script_hash\n      description: mask to filter exact matching path\n      in: query\n      schema:\n        type: string\n    CreatedBefore:\n      name: created_before\n      description: filter on created before (inclusive) timestamp\n      in: query\n      schema:\n        type: string\n        format: date-time\n    CreatedAfter:\n      name: created_after\n      description: filter on created after (exclusive) timestamp\n      in: query\n      schema:\n        type: string\n        format: date-time\n    Success:\n      name: success\n      description: filter on successful jobs\n      in: query\n      schema:\n        type: boolean\n    After:\n      name: after\n      description: filter on created after (exclusive) timestamp\n      in: query\n      schema:\n        type: string\n        format: date-time\n    Before:\n      name: before\n      description: filter on created before (exclusive) timestamp\n      in: query\n      schema:\n        type: string\n        format: date-time\n    Username:\n      name: username\n      description: filter on exact username of user\n      in: query\n      schema:\n        type: string\n    Operation:\n      name: operation\n      description: filter on exact or prefix name of operation\n      in: query\n      schema:\n        type: string\n    ResourceName:\n      name: resource\n      description: filter on exact or prefix name of resource\n      in: query\n      schema:\n        type: string\n    ActionKind:\n      name: action_kind\n      description: filter on type of operation\n      in: query\n      schema:\n        type: string\n        enum: [Create, Update, Delete, Execute]\n    JobKinds:\n      name: job_kinds\n      description: filter on job kind (values 'preview', 'script', 'dependencies', 'flow') separated by,\n      in: query\n      schema:\n        type: string\n      # correct type is below but explode not supported by our codegen\n      #   type: array\n      #   items:\n      #     type: string\n      #     enum: [\"preview\", \"script\", \"dependencies\"]\n      # explode: false\n\n  schemas:\n    $ref: \"../../openflow.openapi.yaml#/components/schemas\"\n    Script:\n      type: object\n      properties:\n        workspace_id:\n          type: string\n        hash:\n          type: string\n        path:\n          type: string\n        parent_hashes:\n          type: array\n          description: |\n            The first element is the direct parent of the script, the second is the parent of the first, etc\n          items:\n            type: string\n        summary:\n          type: string\n        description:\n          type: string\n        content:\n          type: string\n        created_by:\n          type: string\n        created_at:\n          type: string\n          format: date-time\n        archived:\n          type: boolean\n        schema:\n          type: object\n        deleted:\n          type: boolean\n        is_template:\n          type: boolean\n        extra_perms:\n          type: object\n          additionalProperties:\n            type: boolean\n        lock:\n          type: string\n        lock_error_logs:\n          type: string\n        language:\n          type: string\n          enum: [python3, deno, go, bash]\n        kind:\n          type: string\n          enum: [script, failure, trigger, command, approval]\n        starred:\n          type: boolean\n      required:\n        - hash\n        - path\n        - summary\n        - description\n        - content\n        - created_by\n        - created_at\n        - archived\n        - deleted\n        - is_template\n        - extra_perms\n        - language\n        - kind\n        - starred\n\n    ScriptArgs:\n      type: object\n      additionalProperties: {}\n\n    QueuedJob:\n      type: object\n      properties:\n        workspace_id:\n          type: string\n        id:\n          type: string\n          format: uuid\n        parent_job:\n          type: string\n          format: uuid\n        created_by:\n          type: string\n        created_at:\n          type: string\n          format: date-time\n        started_at:\n          type: string\n          format: date-time\n        scheduled_for:\n          type: string\n          format: date-time\n        running:\n          type: boolean\n        script_path:\n          type: string\n        script_hash:\n          type: string\n        args:\n          $ref: \"#/components/schemas/ScriptArgs\"\n        logs:\n          type: string\n        raw_code:\n          type: string\n        canceled:\n          type: boolean\n        canceled_by:\n          type: string\n        canceled_reason:\n          type: string\n        last_ping:\n          type: string\n          format: date-time\n        job_kind:\n          type: string\n          enum:\n            [\n              \"script\",\n              \"preview\",\n              \"dependencies\",\n              \"flow\",\n              \"flowpreview\",\n              \"script_hub\",\n              \"identity\",\n            ]\n        schedule_path:\n          type: string\n        permissioned_as:\n          type: string\n          description: |\n            The user (u/userfoo) or group (g/groupfoo) whom \n            the execution of this script will be permissioned_as and by extension its DT_TOKEN.\n        flow_status:\n          $ref: \"../../openflow.openapi.yaml#/components/schemas/FlowStatus\"\n        raw_flow:\n          $ref: \"../../openflow.openapi.yaml#/components/schemas/FlowValue\"\n        is_flow_step:\n          type: boolean\n        language:\n          type: string\n          enum: [python3, deno, go, bash]\n        email:\n          type: string\n        visible_to_owner:\n          type: boolean\n      required:\n        - id\n        - running\n        - canceled\n        - job_kind\n        - permissioned_as\n        - is_flow_step\n        - email\n        - visible_to_owner\n\n    CompletedJob:\n      type: object\n      properties:\n        workspace_id:\n          type: string\n        id:\n          type: string\n          format: uuid\n        parent_job:\n          type: string\n          format: uuid\n        created_by:\n          type: string\n        created_at:\n          type: string\n          format: date-time\n        started_at:\n          type: string\n          format: date-time\n        duration_ms:\n          type: integer\n        success:\n          type: boolean\n        script_path:\n          type: string\n        script_hash:\n          type: string\n        args:\n          $ref: \"#/components/schemas/ScriptArgs\"\n        result: {}\n        logs:\n          type: string\n        deleted:\n          type: boolean\n        raw_code:\n          type: string\n        canceled:\n          type: boolean\n        canceled_by:\n          type: string\n        canceled_reason:\n          type: string\n        job_kind:\n          type: string\n          enum:\n            [\n              \"script\",\n              \"preview\",\n              \"dependencies\",\n              \"flow\",\n              \"flowpreview\",\n              \"script_hub\",\n              \"identity\",\n            ]\n        schedule_path:\n          type: string\n        permissioned_as:\n          type: string\n          description: |\n            The user (u/userfoo) or group (g/groupfoo) whom \n            the execution of this script will be permissioned_as and by extension its DT_TOKEN.\n        flow_status:\n          $ref: \"../../openflow.openapi.yaml#/components/schemas/FlowStatus\"\n        raw_flow:\n          $ref: \"../../openflow.openapi.yaml#/components/schemas/FlowValue\"\n        is_flow_step:\n          type: boolean\n        language:\n          type: string\n          enum: [python3, deno, go, bash]\n        is_skipped:\n          type: boolean\n        email:\n          type: string\n        visible_to_owner:\n          type: boolean\n      required:\n        - id\n        - created_by\n        - duration_ms\n        - created_at\n        - started_at\n        - success\n        - canceled\n        - job_kind\n        - permissioned_as\n        - is_flow_step\n        - is_skipped\n        - email\n        - visible_to_owner\n\n    Job:\n      allOf:\n        - oneOf:\n            - $ref: \"#/components/schemas/CompletedJob\"\n            - $ref: \"#/components/schemas/QueuedJob\"\n        - type: object\n          properties:\n            type:\n              type: string\n              enum: [CompletedJob, QueuedJob]\n      discriminator:\n        propertyName: type\n\n    User:\n      type: object\n      properties:\n        email:\n          type: string\n        username:\n          type: string\n        is_admin:\n          type: boolean\n        is_super_admin:\n          type: boolean\n        created_at:\n          type: string\n          format: date-time\n        operator:\n          type: boolean\n        disabled:\n          type: boolean\n        groups:\n          type: array\n          items:\n            type: string\n        folders:\n          type: array\n          items:\n            type: string\n        usage:\n          $ref: \"#/components/schemas/Usage\"\n      required:\n        - email\n        - username\n        - is_admin\n        - is_super_admin\n        - created_at\n        - operator\n        - disabled\n        - folders\n\n    Usage:\n      type: object\n      properties:\n        executions:\n          type: number\n\n    Login:\n      type: object\n      properties:\n        email:\n          type: string\n        password:\n          type: string\n      required:\n        - email\n        - password\n\n    NewUser:\n      type: object\n      properties:\n        email:\n          type: string\n        username:\n          type: string\n        is_admin:\n          type: boolean\n      required:\n        - email\n        - username\n        - is_admin\n\n    EditWorkspaceUser:\n      type: object\n      properties:\n        is_admin:\n          type: boolean\n        operator:\n          type: boolean\n        disabled:\n          type: boolean\n\n    TruncatedToken:\n      type: object\n      properties:\n        label:\n          type: string\n        expiration:\n          type: string\n          format: date-time\n        token_prefix:\n          type: string\n        created_at:\n          type: string\n          format: date-time\n        last_used_at:\n          type: string\n          format: date-time\n      required:\n        - token_prefix\n        - created_at\n        - last_used_at\n\n    NewToken:\n      type: object\n      properties:\n        label:\n          type: string\n        expiration:\n          type: string\n          format: date-time\n\n    ListableVariable:\n      type: object\n      properties:\n        workspace_id:\n          type: string\n        path:\n          type: string\n        value:\n          type: string\n        is_secret:\n          type: boolean\n        description:\n          type: string\n        account:\n          type: integer\n        is_oauth:\n          type: boolean\n        extra_perms:\n          type: object\n          additionalProperties:\n            type: boolean\n        is_expired:\n          type: boolean\n        refresh_error:\n          type: string\n        is_linked:\n          type: boolean\n        is_refreshed:\n          type: boolean\n      required:\n        - workspace_id\n        - path\n        - is_secret\n        - extra_perms\n\n    ContextualVariable:\n      type: object\n      properties:\n        name:\n          type: string\n        value:\n          type: string\n        description:\n          type: string\n      required:\n        - name\n        - value\n        - description\n\n    CreateVariable:\n      type: object\n      properties:\n        path:\n          type: string\n        value:\n          type: string\n        is_secret:\n          type: boolean\n        description:\n          type: string\n        account:\n          type: integer\n        is_oauth:\n          type: boolean\n      required:\n        - path\n        - value\n        - is_secret\n        - description\n\n    EditVariable:\n      type: object\n      properties:\n        path:\n          type: string\n        value:\n          type: string\n        is_secret:\n          type: boolean\n        description:\n          type: string\n\n    AuditLog:\n      type: object\n      properties:\n        id:\n          type: integer\n        timestamp:\n          type: string\n          format: date-time\n        username:\n          type: string\n        operation:\n          type: string\n          enum:\n            - \"jobs.run\"\n            - \"scripts.create\"\n            - \"scripts.update\"\n            - \"users.create\"\n            - \"users.delete\"\n            - \"users.setpassword\"\n            - \"users.update\"\n            - \"users.login\"\n            - \"users.token.create\"\n            - \"users.token.delete\"\n            - \"variables.create\"\n            - \"variables.delete\"\n            - \"variables.update\"\n        action_kind:\n          type: string\n          enum: [\"Created\", \"Updated\", \"Delete\", \"Execute\"]\n        resource:\n          type: string\n        parameters:\n          type: object\n      required:\n        - id\n        - timestamp\n        - username\n        - operation\n        - action_kind\n\n    MainArgSignature:\n      type: object\n      properties:\n        star_args:\n          type: boolean\n        star_kwargs:\n          type: boolean\n        args:\n          type: array\n          items:\n            type: object\n            properties:\n              name:\n                type: string\n              typ:\n                oneOf:\n                  - type: string\n                    enum:\n                      [\n                        \"float\",\n                        \"int\",\n                        \"bool\",\n                        \"email\",\n                        \"unknown\",\n                        \"bytes\",\n                        \"dict\",\n                        \"datetime\",\n                        \"sql\",\n                      ]\n                  - type: object\n                    properties:\n                      resource:\n                        type: string\n                        nullable: true\n                    required:\n                      - resource\n                  - type: object\n                    properties:\n                      str:\n                        type: array\n                        items:\n                          type: string\n                        nullable: true\n                    required:\n                      - str\n                  - type: object\n                    properties:\n                      object:\n                        type: array\n                        items:\n                          type: object\n                          properties:\n                            key:\n                              type: string\n                            typ:\n                              oneOf:\n                                - type: string\n                                  enum:\n                                    [\n                                      \"float\",\n                                      \"int\",\n                                      \"bool\",\n                                      \"email\",\n                                      \"unknown\",\n                                      \"bytes\",\n                                      \"dict\",\n                                      \"datetime\",\n                                      \"sql\",\n                                    ]\n                                - type: object\n                                  properties:\n                                    str: {}\n                                  required: [str]\n                          required:\n                            - key\n                            - typ\n                    required:\n                      - object\n                  - type: object\n                    properties:\n                      list:\n                        oneOf:\n                          - type: string\n                            enum:\n                              [\n                                \"float\",\n                                \"int\",\n                                \"bool\",\n                                \"email\",\n                                \"unknown\",\n                                \"bytes\",\n                                \"dict\",\n                                \"datetime\",\n                                \"sql\",\n                              ]\n                          - type: object\n                            properties:\n                              str: {}\n                            required: [str]\n                        nullable: true\n                    required:\n                      - list\n              has_default:\n                type: boolean\n              default: {}\n            required:\n              - name\n              - typ\n      required:\n        - star_args\n        - start_kwargs\n        - args\n\n    Preview:\n      type: object\n      properties:\n        content:\n          type: string\n        path:\n          type: string\n        args:\n          $ref: \"#/components/schemas/ScriptArgs\"\n        language:\n          type: string\n          enum: [python3, deno, go, bash]\n\n      required:\n        - content\n        - args\n        - language\n\n    CreateResource:\n      type: object\n      properties:\n        path:\n          type: string\n        value: {}\n        description:\n          type: string\n        resource_type:\n          type: string\n      required:\n        - path\n        - value\n        - resource_type\n\n    EditResource:\n      type: object\n      properties:\n        path:\n          type: string\n        description:\n          type: string\n        value: {}\n\n    Resource:\n      type: object\n      properties:\n        workspace_id:\n          type: string\n        path:\n          type: string\n        description:\n          type: string\n        resource_type:\n          type: string\n        value: {}\n        is_oauth:\n          type: boolean\n        extra_perms:\n          type: object\n          additionalProperties:\n            type: boolean\n      required:\n        - path\n        - resource_type\n        - is_oauth\n\n    ListableResource:\n      type: object\n      properties:\n        workspace_id:\n          type: string\n        path:\n          type: string\n        description:\n          type: string\n        resource_type:\n          type: string\n        value: {}\n        is_oauth:\n          type: boolean\n        extra_perms:\n          type: object\n          additionalProperties:\n            type: boolean\n        is_expired:\n          type: boolean\n        refresh_error:\n          type: string\n        is_linked:\n          type: boolean\n        is_refreshed:\n          type: boolean\n        account:\n          type: number\n      required:\n        - path\n        - resource_type\n        - is_oauth\n        - is_linked\n        - is_refreshed\n\n    ResourceType:\n      type: object\n      properties:\n        workspace_id:\n          type: string\n        name:\n          type: string\n        schema: {}\n        description:\n          type: string\n      required:\n        - name\n\n    EditResourceType:\n      type: object\n      properties:\n        schema:\n          type: string\n        description:\n          type: string\n\n    Schedule:\n      type: object\n      properties:\n        path:\n          type: string\n        edited_by:\n          type: string\n        edited_at:\n          type: string\n          format: date-time\n        schedule:\n          type: string\n        offset_:\n          type: integer\n        enabled:\n          type: boolean\n        script_path:\n          type: string\n        is_flow:\n          type: boolean\n        args:\n          $ref: \"#/components/schemas/ScriptArgs\"\n        extra_perms:\n          type: object\n          additionalProperties:\n            type: boolean\n        email:\n          type: string\n        error:\n          type: string\n      required:\n        - path\n        - edited_by\n        - edited_at\n        - schedule\n        - script_path\n        - offset_\n        - extra_perms\n        - is_flow\n        - enabled\n        - email\n\n    NewSchedule:\n      type: object\n      properties:\n        path:\n          type: string\n        schedule:\n          type: string\n        offset:\n          type: integer\n        script_path:\n          type: string\n        is_flow:\n          type: boolean\n        args:\n          $ref: \"#/components/schemas/ScriptArgs\"\n        enabled:\n          type: boolean\n      required:\n        - path\n        - schedule\n        - script_path\n        - is_flow\n        - args\n\n    EditSchedule:\n      type: object\n      properties:\n        schedule:\n          type: string\n        args:\n          $ref: \"#/components/schemas/ScriptArgs\"\n      required:\n        - schedule\n        - script_path\n        - is_flow\n        - args\n\n    Group:\n      type: object\n      properties:\n        name:\n          type: string\n        summary:\n          type: string\n        members:\n          type: array\n          items:\n            type: string\n        extra_perms:\n          type: object\n          additionalProperties:\n            type: boolean\n      required:\n        - name\n\n    Folder:\n      type: object\n      properties:\n        name:\n          type: string\n        owners:\n          type: array\n          items:\n            type: string\n        extra_perms:\n          type: object\n          additionalProperties:\n            type: boolean\n      required:\n        - name\n        - owners\n        - extra_perms\n\n    WorkerPing:\n      type: object\n      properties:\n        worker:\n          type: string\n        worker_instance:\n          type: string\n        ping_at:\n          type: string\n          format: date-time\n        started_at:\n          type: string\n          format: date-time\n        ip:\n          type: string\n        jobs_executed:\n          type: integer\n      required:\n        - worker\n        - worker_instance\n        - ping_at\n        - started_at\n        - ip\n        - jobs_executed\n\n    UserWorkspaceList:\n      type: object\n      properties:\n        email:\n          type: string\n        workspaces:\n          type: array\n          items:\n            type: object\n            properties:\n              id:\n                type: string\n              name:\n                type: string\n              username:\n                type: string\n            required:\n              - id\n              - name\n              - username\n      required:\n        - email\n        - workspaces\n\n    CreateWorkspace:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        username:\n          type: string\n      required:\n        - id\n        - name\n        - username\n\n    Workspace:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        owner:\n          type: string\n        domain:\n          type: string\n      required:\n        - id\n        - name\n        - owner\n\n    WorkspaceInvite:\n      type: object\n      properties:\n        workspace_id:\n          type: string\n        email:\n          type: string\n        is_admin:\n          type: boolean\n        operator:\n          type: boolean\n      required:\n        - workspace_id\n        - email\n        - is_admin\n        - operator\n\n    GlobalUserInfo:\n      type: object\n      properties:\n        email:\n          type: string\n        login_type:\n          type: string\n          enum: [\"password\", \"github\"]\n        super_admin:\n          type: boolean\n        verified:\n          type: boolean\n        name:\n          type: string\n        company:\n          type: string\n\n      required:\n        - email\n        - login_type\n        - super_admin\n        - verified\n\n    Flow:\n      allOf:\n        - $ref: \"../../openflow.openapi.yaml#/components/schemas/OpenFlow\"\n        - $ref: \"#/components/schemas/FlowMetadata\"\n\n    FlowMetadata:\n      type: object\n      properties:\n        workspace_id:\n          type: string\n        path:\n          type: string\n        edited_by:\n          type: string\n        edited_at:\n          type: string\n          format: date-time\n        archived:\n          type: boolean\n        extra_perms:\n          type: object\n        additionalProperties:\n          type: boolean\n        starred:\n          type: boolean\n      required:\n        - path\n        - edited_by\n        - edited_at\n        - archived\n        - extra_perms\n\n    OpenFlowWPath:\n      allOf:\n        - $ref: \"../../openflow.openapi.yaml#/components/schemas/OpenFlow\"\n        - type: object\n          properties:\n            path:\n              type: string\n          required:\n            - path\n\n    FlowPreview:\n      type: object\n      properties:\n        value:\n          $ref: \"../../openflow.openapi.yaml#/components/schemas/FlowValue\"\n        path:\n          type: string\n        args:\n          $ref: \"#/components/schemas/ScriptArgs\"\n\n      required:\n        - value\n        - content\n        - args\n\n    Policy:\n      type: object\n      properties:\n        triggerables:\n          type: object\n          additionalProperties:\n            type: object\n        execution_mode:\n          type: string\n          enum: [viewer, publisher, anonymous]\n        on_behalf_of:\n          type: string\n\n    ListableApp:\n      type: object\n      properties:\n        id:\n          type: integer\n        workspace_id:\n          type: string\n        path:\n          type: string\n        summary:\n          type: string\n        version:\n          type: integer\n        extra_perms:\n          type: object\n          additionalProperties:\n            type: boolean\n        starred:\n          type: boolean\n        edited_at:\n          type: string\n          format: date-time\n        execution_mode:\n          type: string\n          enum: [viewer, publisher, anonymous]\n      required:\n        - id\n        - workspace_id\n        - path\n        - summary\n        - version\n        - extra_perms\n        - edited_at\n        - execution_mode\n    AppWithLastVersion:\n      type: object\n      properties:\n        id:\n          type: integer\n        workspace_id:\n          type: string\n        path:\n          type: string\n        summary:\n          type: string\n        versions:\n          type: array\n          items:\n            type: integer\n        created_by:\n          type: string\n        created_at:\n          type: string\n          format: date-time\n        value: {}\n        policy:\n          $ref: \"#/components/schemas/Policy\"\n        execution_mode:\n          type: string\n          enum: [viewer, publisher, anonymous]\n        extra_perms:\n          type: object\n          additionalProperties:\n            type: boolean\n      required:\n        - id\n        - workspace_id\n        - path\n        - summary\n        - versions\n        - created_by\n        - created_at\n        - value\n        - policy\n        - execution_mode\n        - extra_perms\n\n    SlackToken:\n      type: object\n      properties:\n        access_token:\n          type: string\n        team_id:\n          type: string\n        team_name:\n          type: string\n        bot:\n          type: object\n          properties:\n            bot_access_token:\n              type: string\n      required:\n        - access_token\n        - team_id\n        - team_name\n        - bot\n\n    TokenResponse:\n      type: object\n      properties:\n        access_token:\n          type: string\n        expires_in:\n          type: integer\n        refresh_token:\n          type: string\n        scope:\n          type: array\n          items:\n            type: string\n\n      required:\n        - access_token\n",
			"canonicalURL": "/github.com/windmill-labs/windmill@a82ed3f7440ef1dfd43304b8af2c627f28774013/-/blob/backend/windmill-api/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/windmill-labs/windmill/blob/a82ed3f7440ef1dfd43304b8af2c627f28774013/backend/windmill-api/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 4313: cannot unmarshal !!str `../../o...` into ogen.Schema"
}