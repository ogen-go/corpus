{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/gbrueckl/Databricks.API.PowerShell"
		},
		"file": {
			"name": "jobs-2.1-aws.yaml",
			"size": 0,
			"path": "Docs/OpenAPISpecs/jobs-2.1-aws.yaml",
			"byteSize": 160559,
			"content": "openapi: 3.0.0\ninfo:\n  title: Jobs API 2.1\n  description: The Jobs API allows you to create, edit, and delete jobs.\n  version: '2.1'\nservers:\n  - url: https://\u003cdatabricks-instance\u003e/api/\n    description: \u003e-\n      In the URL, substitute `\u003cdatabricks-instance\u003e` with the domain name of\n      your deployment. Use the form `\u003caccount\u003e.cloud.databricks.com`.\npaths:\n  /2.1/jobs/create:\n    post:\n      security:\n        - bearerAuth: []\n      summary: Create a new job\n      description: Create a new job.\n      operationId: JobsCreate\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/JobSettings'\n                - $ref: '#/components/schemas/AccessControlList'\n      responses:\n        '200':\n          description: Job was created successfully\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  job_id:\n                    type: integer\n                    example: 11223344\n                    description: The canonical identifier for the newly created job.\n                    format: int64\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/InternalError'\n  /2.1/jobs/list:\n    get:\n      security:\n        - bearerAuth: []\n      summary: List all jobs\n      description: Retrieves a list of jobs.\n      operationId: JobsList\n      parameters:\n        - name: limit\n          description: \u003e-\n            The number of jobs to return. This value must be greater than 0 and\n            less or equal to 25. The default value is 25. If a request specifies\n            a limit of 0, the service instead uses the maximum limit.\n          in: query\n          required: false\n          schema:\n            type: integer\n            maximum: 25\n            minimum: 1\n            default: 25\n            example: 25\n        - name: offset\n          description: \u003e-\n            The offset of the first job to return, relative to the most recently\n            created job.\n          in: query\n          required: false\n          schema:\n            type: integer\n            minimum: 0\n            default: 0\n            example: 0\n        - name: expand_tasks\n          description: Whether to include task and cluster details in the response.\n          in: query\n          required: false\n          schema:\n            default: false\n            type: boolean\n            example: false\n      responses:\n        '200':\n          description: List of jobs was retrieved successfully.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  jobs:\n                    type: array\n                    description: The list of jobs.\n                    items:\n                      $ref: '#/components/schemas/Job'\n                  has_more:\n                    type: boolean\n                    example: false\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/InternalError'\n  /2.1/jobs/get:\n    get:\n      security:\n        - bearerAuth: []\n      operationId: JobsGet\n      summary: Get a single job\n      description: Retrieves the details for a single job.\n      parameters:\n        - name: job_id\n          description: \u003e-\n            The canonical identifier of the job to retrieve information about.\n            This field is required.\n          in: query\n          required: true\n          schema:\n            example: 11223344\n            type: integer\n            format: int64\n      responses:\n        '200':\n          description: Job was retrieved successfully.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  job_id:\n                    type: integer\n                    description: The canonical identifier for this job.\n                    example: 11223344\n                    format: int64\n                  creator_user_name:\n                    type: string\n                    example: user.name@databricks.com\n                    description: \u003e-\n                      The creator user name. This field won’t be included in the\n                      response if the user has been deleted.\n                  run_as_user_name:\n                    type: string\n                    example: user.name@databricks.com\n                    description: \u003e-\n                      The user name that the job runs as. `run_as_user_name` is\n                      based on the current job settings, and is set to the\n                      creator of the job if job access control is disabled, or\n                      the `is_owner` permission if job access control is\n                      enabled.\n                  settings:\n                    description: \u003e-\n                      Settings for this job and all of its runs. These settings\n                      can be updated using the\n                      [Reset](https://docs.databricks.com/dev-tools/api/latest/jobs.html#operation/JobsReset)\n                      or\n                      [Update](https://docs.databricks.com/dev-tools/api/latest/jobs.html#operation/JobsUpdate)\n                      endpoints.\n                    $ref: '#/components/schemas/JobSettings'\n                  created_time:\n                    type: integer\n                    example: 1601370337343\n                    description: \u003e-\n                      The time at which this job was created in epoch\n                      milliseconds (milliseconds since 1/1/1970 UTC).\n                    format: int64\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/InternalError'\n  /2.1/jobs/reset:\n    post:\n      security:\n        - bearerAuth: []\n      operationId: JobsReset\n      summary: Overwrites all settings for a job\n      description: \u003e-\n        Overwrites all the settings for a specific job. Use the Update endpoint\n        to update job settings partially.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                job_id:\n                  type: integer\n                  required: true\n                  example: 11223344\n                  description: \u003e-\n                    The canonical identifier of the job to reset. This field is\n                    required.\n                  format: int64\n                new_settings:\n                  description: \u003e-\n                    The new settings of the job. These settings completely\n                    replace the old settings.\n\n\n                    Changes to the field `JobSettings.timeout_seconds` are\n                    applied to active runs. Changes to other fields are applied\n                    to future runs only.\n                  $ref: '#/components/schemas/JobSettings'\n      responses:\n        '200':\n          description: Job was overwritten successfully.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties: {}\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/InternalError'\n  /2.1/jobs/update:\n    post:\n      security:\n        - bearerAuth: []\n      operationId: JobsUpdate\n      summary: Partially updates a job\n      description: \u003e-\n        Add, update, or remove specific settings of an existing job. Use the\n        Reset endpoint to overwrite all job settings.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                job_id:\n                  type: integer\n                  required: true\n                  example: 11223344\n                  description: \u003e-\n                    The canonical identifier of the job to update. This field is\n                    required.\n                  format: int64\n                new_settings:\n                  description: \u003e-\n                    The new settings for the job. Any top-level fields specified\n                    in `new_settings` are completely replaced. Partially\n                    updating nested fields is not supported.\n\n\n                    Changes to the field `JobSettings.timeout_seconds` are\n                    applied to active runs. Changes to other fields are applied\n                    to future runs only.\n                  $ref: '#/components/schemas/JobSettings'\n                fields_to_remove:\n                  type: array\n                  description: \u003e-\n                    Remove top-level fields in the job settings. Removing nested\n                    fields is not supported. This field is optional.\n                  example:\n                    - libraries\n                    - schedule\n                  items:\n                    type: string\n      responses:\n        '200':\n          description: Job was updated successfully.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties: {}\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/InternalError'\n  /2.1/jobs/delete:\n    post:\n      security:\n        - bearerAuth: []\n      summary: Delete a job\n      description: Deletes a job.\n      operationId: JobsDelete\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                job_id:\n                  type: integer\n                  required: true\n                  example: 11223344\n                  description: \u003e-\n                    The canonical identifier of the job to delete. This field is\n                    required.\n                  format: int64\n      responses:\n        '200':\n          description: Job was deleted successfully.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties: {}\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/InternalError'\n  /2.1/jobs/run-now:\n    post:\n      security:\n        - bearerAuth: []\n      operationId: JobsRunNow\n      summary: Trigger a new job run\n      description: Run a job and return the `run_id` of the triggered run.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                job_id:\n                  type: integer\n                  description: The ID of the job to be executed\n                  example: 11223344\n                  format: int64\n                jar_params:\n                  type: array\n                  example:\n                    - john\n                    - doe\n                    - '35'\n                  description: \u003e-\n                    A list of parameters for jobs with JAR tasks, for example\n                    `\"jar_params\": [\"john doe\", \"35\"]`. The parameters are used\n                    to invoke the main function of the main class specified in\n                    the Spark JAR task. If not specified upon `run-now`, it\n                    defaults to an empty list. jar_params cannot be specified in\n                    conjunction with notebook_params. The JSON representation of\n                    this field (for example `{\"jar_params\":[\"john doe\",\"35\"]}`)\n                    cannot exceed 10,000 bytes.\n                  items:\n                    type: string\n                notebook_params:\n                  type: object\n                  example:\n                    name: john doe\n                    age: '35'\n                  description: \u003e-\n                    A map from keys to values for jobs with notebook task, for\n                    example `\"notebook_params\": {\"name\": \"john doe\", \"age\":\n                    \"35\"}`. The map is passed to the notebook and is accessible\n                    through the\n                    [dbutils.widgets.get](https://docs.databricks.com/dev-tools/databricks-utils.html#dbutils-widgets)\n                    function.\n\n\n                    If not specified upon `run-now`, the triggered run uses the\n                    job’s base parameters.\n\n\n                    You cannot specify notebook_params in conjunction with\n                    jar_params.\n\n\n                    The JSON representation of this field (for example\n                    `{\"notebook_params\":{\"name\":\"john doe\",\"age\":\"35\"}}`) cannot\n                    exceed 10,000 bytes.\n                  additionalProperties: true\n                python_params:\n                  type: array\n                  example:\n                    - john doe\n                    - '35'\n                  description: \u003e-\n                    A list of parameters for jobs with Python tasks, for example\n                    `\"python_params\": [\"john doe\", \"35\"]`. The parameters are\n                    passed to Python file as command-line parameters. If\n                    specified upon `run-now`, it would overwrite the parameters\n                    specified in job setting. The JSON representation of this\n                    field (for example `{\"python_params\":[\"john doe\",\"35\"]}`)\n                    cannot exceed 10,000 bytes.\n                  items:\n                    type: string\n                spark_submit_params:\n                  type: array\n                  example:\n                    - '--class'\n                    - org.apache.spark.examples.SparkPi\n                  description: \u003e-\n                    A list of parameters for jobs with spark submit task, for\n                    example `\"spark_submit_params\": [\"--class\",\n                    \"org.apache.spark.examples.SparkPi\"]`. The parameters are\n                    passed to spark-submit script as command-line parameters. If\n                    specified upon `run-now`, it would overwrite the parameters\n                    specified in job setting. The JSON representation of this\n                    field cannot exceed 10,000 bytes.\n                  items:\n                    type: string\n      responses:\n        '200':\n          description: Run was started successfully.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  run_id:\n                    type: integer\n                    example: 455644833\n                    description: The globally unique ID of the newly triggered run.\n                    format: int64\n                  number_in_job:\n                    deprecated: true\n                    example: 455644833\n                    type: integer\n                    description: \u003e-\n                      A unique identifier for this job run. This is set to the\n                      same value as `run_id`.\n                    format: int64\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/InternalError'\n  /2.1/jobs/runs/submit:\n    post:\n      security:\n        - bearerAuth: []\n      operationId: JobsRunsSubmit\n      summary: Create and trigger a one-time run\n      description: \u003e-\n        Submit a one-time run. This endpoint allows you to submit a workload\n        directly without creating a job. Runs submitted using this endpoint\n        don’t display in the UI. Use the `jobs/runs/get` API to check the run\n        state after the job is submitted.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/RunSubmitSettings'\n                - $ref: '#/components/schemas/AccessControlList'\n      responses:\n        '200':\n          description: Run was created and started successfully.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  run_id:\n                    type: integer\n                    description: The canonical identifier for the newly submitted run.\n                    example: 455644833\n                    format: int64\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/InternalError'\n  /2.1/jobs/runs/list:\n    get:\n      security:\n        - bearerAuth: []\n      operationId: JobsRunsList\n      summary: List runs for a job\n      description: List runs in descending order by start time.\n      parameters:\n        - name: active_only\n          description: \u003e-\n            If active_only is `true`, only active runs are included in the\n            results; otherwise, lists both active and completed runs. An active\n            run is a run in the `PENDING`, `RUNNING`, or `TERMINATING`. This\n            field cannot be `true` when completed_only is `true`.\n          in: query\n          schema:\n            default: false\n            example: false\n            type: boolean\n        - name: completed_only\n          description: \u003e-\n            If completed_only is `true`, only completed runs are included in the\n            results; otherwise, lists both active and completed runs. This field\n            cannot be `true` when active_only is `true`.\n          in: query\n          schema:\n            default: false\n            example: false\n            type: boolean\n        - name: job_id\n          description: \u003e-\n            The job for which to list runs. If omitted, the Jobs service lists\n            runs from all jobs.\n          in: query\n          schema:\n            example: 11223344\n            type: integer\n            format: int64\n        - name: offset\n          description: \u003e-\n            The offset of the first run to return, relative to the most recent\n            run.\n          in: query\n          schema:\n            default: 0\n            example: 0\n            type: integer\n            format: int32\n        - name: limit\n          description: \u003e-\n            The number of runs to return. This value must be greater than 0 and\n            less than 25\\. The default value is 25\\. If a request specifies a\n            limit of 0, the service instead uses the maximum limit.\n          in: query\n          schema:\n            type: integer\n            format: int32\n            default: 25\n            example: 25\n            minimum: 1\n            maximum: 25\n        - name: run_type\n          description: \u003e-\n            The type of runs to return. For a description of run types, see\n            [Run](https://docs.databricks.com/dev-tools/api/latest/jobs.html#operation/JobsRunsGet).\n          in: query\n          schema:\n            type: string\n            example: JOB_RUN\n            enum:\n              - JOB_RUN\n              - WORKFLOW_RUN\n              - SUBMIT_RUN\n        - name: expand_tasks\n          description: Whether to include task and cluster details in the response.\n          in: query\n          required: false\n          schema:\n            default: false\n            example: false\n            type: boolean\n      responses:\n        '200':\n          description: List of runs was retrieved successfully.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  runs:\n                    type: array\n                    description: A list of runs, from most recently started to least.\n                    items:\n                      $ref: '#/components/schemas/Run'\n                  has_more:\n                    type: boolean\n                    description: \u003e-\n                      If true, additional runs matching the provided filter are\n                      available for listing.\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/InternalError'\n  /2.1/jobs/runs/get:\n    get:\n      security:\n        - bearerAuth: []\n      summary: Get a single job run\n      operationId: JobsRunsGet\n      description: Retrieve the metadata of a run.\n      parameters:\n        - name: run_id\n          required: true\n          description: \u003e-\n            The canonical identifier of the run for which to retrieve the\n            metadata. This field is required.\n          in: query\n          schema:\n            type: integer\n            example: 455644833\n            format: int64\n      responses:\n        '200':\n          description: Run was retrieved successfully\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Run'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/InternalError'\n  /2.0/jobs/runs/export:\n    get:\n      security:\n        - bearerAuth: []\n      operationId: JobsRunsExport\n      summary: Export and retrieve a job run\n      description: Export and retrieve the job run task.\n      parameters:\n        - name: run_id\n          required: true\n          description: The canonical identifier for the run. This field is required.\n          in: query\n          schema:\n            type: integer\n            example: 455644833\n            format: int64\n        - name: views_to_export\n          description: Which views to export (CODE, DASHBOARDS, or ALL). Defaults to CODE.\n          in: query\n          schema:\n            $ref: '#/components/schemas/ViewsToExport'\n      responses:\n        '200':\n          description: Run was exported successfully.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  views:\n                    type: array\n                    description: \u003e-\n                      The exported content in HTML format (one for every view\n                      item).\n                    items:\n                      $ref: '#/components/schemas/ViewItem'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/InternalError'\n  /2.1/jobs/runs/cancel:\n    post:\n      security:\n        - bearerAuth: []\n      operationId: JobsRunsCancel\n      summary: Cancel a job run\n      description: \u003e-\n        Cancels a run. The run is canceled asynchronously, so when this request\n        completes, the run may still be running. The run are terminated shortly.\n        If the run is already in a terminal `life_cycle_state`, this method is a\n        no-op.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                run_id:\n                  type: integer\n                  required: true\n                  description: This field is required.\n                  example: 455644833\n                  format: int64\n      responses:\n        '200':\n          description: Run was cancelled successfully.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties: {}\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/InternalError'\n  /2.1/jobs/runs/get-output:\n    get:\n      security:\n        - bearerAuth: []\n      operationId: JobsRunsGetOutput\n      summary: Get the output for a single run\n      description: \u003e-\n        Retrieve the output and metadata of a run. When a notebook task returns\n        a value through the dbutils.notebook.exit() call, you can use this\n        endpoint to retrieve that value. Databricks restricts this API to return\n        the first 5 MB of the output. To return a larger result, you can store\n        job results in a cloud storage service.\n\n        This endpoint validates that the run_id parameter is valid and returns\n        an HTTP status code 400 if the run_id parameter is invalid.\n\n        Runs are automatically removed after 60 days. If you to want to\n        reference them beyond 60 days, you must save old run results before they\n        expire. To export using the UI, see Export job run results. To export\n        using the Jobs API, see Runs export.\n      parameters:\n        - name: run_id\n          required: true\n          description: The canonical identifier for the run. This field is required.\n          in: query\n          schema:\n            type: integer\n            example: 455644833\n            format: int64\n      responses:\n        '200':\n          description: Run output was retrieved successfully.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  notebook_output:\n                    description: \u003e-\n                      The output of a notebook task, if available. A notebook\n                      task that terminates (either successfully or with a\n                      failure) without calling `dbutils.notebook.exit()` is\n                      considered to have an empty output. This field is set but\n                      its result value is empty. Databricks restricts this API\n                      to return the first 5 MB of the output. To return a larger\n                      result, use the\n                      [ClusterLogConf](https://docs.databricks.com/dev-tools/api/latest/clusters.html#clusterlogconf)\n                      field to configure log storage for the job cluster.\n                    example: ''\n                    $ref: '#/components/schemas/NotebookOutput'\n                  logs:\n                    type: string\n                    example: Hello World!\n                    description: \u003e-\n                      The output from tasks that write to cluster logs such as\n                      [SparkJarTask](https://docs.databricks.com/dev-tools/api/latest/jobs.html#/components/schemas/SparkJarTask)\n                      or\n                      [SparkPythonTask](https://docs.databricks.com/dev-tools/api/latest/jobs.html#/components/schemas/SparkPythonTask.\n                      Databricks restricts this API to return the last 5 MB of\n                      these logs. To return a larger result, use the\n                      [ClusterLogConf](https://docs.databricks.com/dev-tools/api/latest/clusters.html#clusterlogconf)\n                      field to configure log storage for the job cluster.\n                  logs_truncated:\n                    type: boolean\n                    example: true\n                    description: Whether the logs are truncated.\n                  error:\n                    type: string\n                    example: 'ZeroDivisionError: integer division or modulo by zero'\n                    description: \u003e-\n                      An error message indicating why a task failed or why\n                      output is not available. The message is unstructured, and\n                      its exact format is subject to change.\n                  error_trace:\n                    type: string\n                    example: \u003e-\n                      ---------------------------------------------------------------------------\n\n                      Exception                                 Traceback (most\n                      recent call last)\n                            1 numerator = 42\n                            2 denominator = 0\n                      ----\u003e 3 return numerator / denominator\n\n\n                      ZeroDivisionError: integer division or modulo by zero\n                    description: \u003e-\n                      If there was an error executing the run, this field\n                      contains any available stack traces.\n                  metadata:\n                    description: All details of the run except for its output.\n                    $ref: '#/components/schemas/Run'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/InternalError'\n  /2.1/jobs/runs/delete:\n    post:\n      security:\n        - bearerAuth: []\n      operationId: JobsRunsDelete\n      summary: Delete a job run\n      description: Deletes a non-active run. Returns an error if the run is active.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                run_id:\n                  type: integer\n                  example: 455644833\n                  description: \u003e-\n                    The canonical identifier of the run for which to retrieve\n                    the metadata.\n                  format: int64\n      responses:\n        '200':\n          description: Run was deleted successfully.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties: {}\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/InternalError'\ncomponents:\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: api_token\n  schemas:\n    ClusterInstance:\n      properties:\n        cluster_id:\n          type: string\n          example: 0923-164208-meows279\n          description: \u003e-\n            The canonical identifier for the cluster used by a run. This field\n            is always available for runs on existing clusters. For runs on new\n            clusters, it becomes available once the cluster is created. This\n            value can be used to view logs by browsing to\n            `/#setting/sparkui/$cluster_id/driver-logs`. The logs continue to be\n            available after the run completes.\n\n\n            The response won’t include this field if the identifier is not\n            available yet.\n        spark_context_id:\n          type: string\n          description: \u003e-\n            The canonical identifier for the Spark context used by a run. This\n            field is filled in once the run begins execution. This value can be\n            used to view the Spark UI by browsing to\n            `/#setting/sparkui/$cluster_id/$spark_context_id`. The Spark UI\n            continues to be available after the run has completed.\n\n\n            The response won’t include this field if the identifier is not\n            available yet.\n    ClusterSpec:\n      properties:\n        existing_cluster_id:\n          type: string\n          example: 0923-164208-meows279\n          description: \u003e-\n            If existing_cluster_id, the ID of an existing cluster that is used\n            for all runs of this job. When running jobs on an existing cluster,\n            you may need to manually restart the cluster if it stops responding.\n            We suggest running jobs on new clusters for greater reliability.\n        new_cluster:\n          example: null\n          description: \u003e-\n            If new_cluster, a description of a cluster that is created for each\n            run.\n          $ref: '#/components/schemas/NewCluster'\n        libraries:\n          type: array\n          description: \u003e-\n            An optional list of libraries to be installed on the cluster that\n            executes the job. The default value is an empty list.\n          items:\n            $ref: '#/components/schemas/Library'\n    CronSchedule:\n      properties:\n        quartz_cron_expression:\n          type: string\n          example: 20 30 * * * ?\n          required: true\n          description: \u003e-\n            A Cron expression using Quartz syntax that describes the schedule\n            for a job. See [Cron\n            Trigger](http://www.quartz-scheduler.org/documentation/quartz-2.3.0/tutorials/crontrigger.html)\n            for details. This field is required.\n        timezone_id:\n          type: string\n          example: Europe/London\n          required: true\n          description: \u003e-\n            A Java timezone ID. The schedule for a job is resolved with respect\n            to this timezone. See [Java\n            TimeZone](https://docs.oracle.com/javase/7/docs/api/java/util/TimeZone.html)\n            for details. This field is required.\n        pause_status:\n          type: string\n          enum:\n            - PAUSED\n            - UNPAUSED\n          example: PAUSED\n          description: Indicate whether this schedule is paused or not.\n    Job:\n      properties:\n        job_id:\n          type: integer\n          description: The canonical identifier for this job.\n          example: 11223344\n          format: int64\n        creator_user_name:\n          type: string\n          example: user.name@databricks.com\n          description: \u003e-\n            The creator user name. This field won’t be included in the response\n            if the user has already been deleted.\n        run_as_user_name:\n          type: string\n          example: user.name@databricks.com\n          description: \u003e-\n            The user name that the job runs as. `run_as_user_name` is based on\n            the current job settings, and is set to the creator of the job if\n            job access control is disabled, or the `is_owner` permission if job\n            access control is enabled.\n        settings:\n          description: \u003e-\n            Settings for this job and all of its runs. These settings can be\n            updated using the `resetJob` method.\n          $ref: '#/components/schemas/JobSettings'\n        created_time:\n          type: integer\n          example: 1601370337343\n          description: \u003e-\n            The time at which this job was created in epoch milliseconds\n            (milliseconds since 1/1/1970 UTC).\n          format: int64\n    JobEmailNotifications:\n      properties:\n        on_start:\n          type: array\n          description: \u003e-\n            A list of email addresses to be notified when a run begins. If not\n            specified on job creation, reset, or update, the list is empty, and\n            notifications are not sent.\n          example:\n            - user.name@databricks.com\n          items:\n            type: string\n        on_success:\n          type: array\n          description: \u003e-\n            A list of email addresses to be notified when a run successfully\n            completes. A run is considered to have completed successfully if it\n            ends with a `TERMINATED` `life_cycle_state` and a `SUCCESSFUL`\n            result_state. If not specified on job creation, reset, or update,\n            the list is empty, and notifications are not sent.\n          example:\n            - user.name@databricks.com\n          items:\n            type: string\n        on_failure:\n          type: array\n          description: \u003e-\n            A list of email addresses to be notified when a run unsuccessfully\n            completes. A run is considered to have completed unsuccessfully if\n            it ends with an `INTERNAL_ERROR` `life_cycle_state` or a `SKIPPED`,\n            `FAILED`, or `TIMED_OUT` result_state. If this is not specified on\n            job creation, reset, or update the list is empty, and notifications\n            are not sent.\n          example:\n            - user.name@databricks.com\n          items:\n            type: string\n        no_alert_for_skipped_runs:\n          type: boolean\n          example: false\n          description: \u003e-\n            If true, do not send email to recipients specified in `on_failure`\n            if the run is skipped.\n    JobSettings:\n      properties:\n        name:\n          type: string\n          example: A multitask job\n          default: Untitled\n          description: An optional name for the job.\n        tasks:\n          type: array\n          maxItems: 100\n          description: A list of task specifications to be executed by this job.\n          items:\n            $ref: '#/components/schemas/JobTaskSettings'\n          example:\n            - task_key: Sessionize\n              description: Extracts session data from events\n              depends_on: []\n              existing_cluster_id: 0923-164208-meows279\n              spark_jar_task:\n                main_class_name: com.databricks.Sessionize\n                parameters:\n                  - '--data'\n                  - dbfs:/path/to/data.json\n              libraries:\n                - jar: dbfs:/mnt/databricks/Sessionize.jar\n              timeout_seconds: 86400\n              max_retries: 3\n              min_retry_interval_millis: 2000\n              retry_on_timeout: false\n            - task_key: Orders_Ingest\n              description: Ingests order data\n              depends_on: []\n              existing_cluster_id: 0923-164208-meows279\n              spark_jar_task:\n                main_class_name: com.databricks.OrdersIngest\n                parameters:\n                  - '--data'\n                  - dbfs:/path/to/order-data.json\n              libraries:\n                - jar: dbfs:/mnt/databricks/OrderIngest.jar\n              timeout_seconds: 86400\n              max_retries: 3\n              min_retry_interval_millis: 2000\n              retry_on_timeout: false\n            - task_key: Match\n              description: Matches orders with user sessions\n              depends_on:\n                - task_key: Orders_Ingest\n                - task_key: Sessionize\n              new_cluster:\n                spark_version: 7.3.x-scala2.12\n                node_type_id: i3.xlarge\n                spark_conf:\n                  spark.speculation: true\n                aws_attributes:\n                  availability: SPOT\n                  zone_id: us-west-2a\n                autoscale:\n                  min_workers: 2\n                  max_workers: 16\n              notebook_task:\n                notebook_path: /Users/user.name@databricks.com/Match\n                base_parameters:\n                  name: John Doe\n                  age: '35'\n              timeout_seconds: 86400\n              max_retries: 3\n              min_retry_interval_millis: 2000\n              retry_on_timeout: false\n        job_clusters:\n          type: array\n          description: \u003e-\n            _Reserved for future use_. See [Jobs API\n            updates](https://docs.databricks.com/data-engineering/jobs/jobs-api-updates.html).\n          items:\n            $ref: '#/components/schemas/JobCluster'\n          example: null\n        email_notifications:\n          description: \u003e-\n            An optional set of email addresses that is notified when runs of\n            this job begin or complete as well as when this job is deleted. The\n            default behavior is to not send any emails.\n          $ref: '#/components/schemas/JobEmailNotifications'\n        timeout_seconds:\n          type: integer\n          example: 86400\n          description: \u003e-\n            An optional timeout applied to each run of this job. The default\n            behavior is to have no timeout.\n          format: int32\n        schedule:\n          description: \u003e-\n            An optional periodic schedule for this job. The default behavior is\n            that the job only runs when triggered by clicking “Run Now” in the\n            Jobs UI or sending an API request to `runNow`.\n          $ref: '#/components/schemas/CronSchedule'\n        max_concurrent_runs:\n          type: integer\n          example: 10\n          description: \u003e-\n            An optional maximum allowed number of concurrent runs of the job.\n\n\n            Set this value if you want to be able to execute multiple runs of\n            the same job concurrently. This is useful for example if you trigger\n            your job on a frequent schedule and want to allow consecutive runs\n            to overlap with each other, or if you want to trigger multiple runs\n            which differ by their input parameters.\n\n\n            This setting affects only new runs. For example, suppose the job’s\n            concurrency is 4 and there are 4 concurrent active runs. Then\n            setting the concurrency to 3 won’t kill any of the active runs.\n            However, from then on, new runs are skipped unless there are fewer\n            than 3 active runs.\n\n\n            This value cannot exceed 1000\\. Setting this value to 0 causes all\n            new runs to be skipped. The default behavior is to allow only 1\n            concurrent run.\n          format: int32\n        format:\n          type: string\n          enum:\n            - SINGLE_TASK\n            - MULTI_TASK\n          example: MULTI_TASK\n          description: \u003e-\n            Used to tell what is the format of the job. This field is ignored in\n            Create/Update/Reset calls. When using the Jobs API 2.1 this value is\n            always set to `\"MULTI_TASK\"`.\n    JobTask:\n      properties:\n        notebook_task:\n          description: \u003e-\n            If notebook_task, indicates that this job must run a notebook. This\n            field may not be specified in conjunction with spark_jar_task.\n          $ref: '#/components/schemas/NotebookTask'\n        spark_jar_task:\n          description: If spark_jar_task, indicates that this job must run a JAR.\n          example: ''\n          $ref: '#/components/schemas/SparkJarTask'\n        spark_python_task:\n          description: \u003e-\n            If spark_python_task, indicates that this job must run a Python\n            file.\n          $ref: '#/components/schemas/SparkPythonTask'\n        spark_submit_task:\n          description: \u003e-\n            If spark_submit_task, indicates that this job must be launched by\n            the spark submit script.\n          $ref: '#/components/schemas/SparkSubmitTask'\n        pipeline_task:\n          description: If pipeline_task, indicates that this job must execute a Pipeline.\n          $ref: '#/components/schemas/PipelineTask'\n        python_wheel_task:\n          description: \u003e-\n            If python_wheel_task, indicates that this job must execute a\n            PythonWheel.\n          $ref: '#/components/schemas/PythonWheelTask'\n    TaskKey:\n      type: string\n      minLength: 1\n      maxLength: 100\n      pattern: ^[\\w\\-]+$\n      required: true\n      example: Task_Key\n      description: \u003e-\n        A unique name for the task. This field is used to refer to this task\n        from other tasks.\n\n        This field is required and must be unique within its parent job.\n\n        On Update or Reset, this field is used to reference the tasks to be\n        updated or reset.\n\n        The maximum length is 100 characters.\n    TaskDependencies:\n      type: array\n      example:\n        - task_key: Previous_Task_Key\n        - task_key: Other_Task_Key\n      description: \u003e-\n        An optional array of objects specifying the dependency graph of the\n        task. All tasks specified in this field must complete successfully\n        before executing this task.\n\n        The key is `task_key`, and the value is the name assigned to the\n        dependent task.\n\n        This field is required when a job consists of more than one task.\n      items:\n        type: object\n        properties:\n          task_key:\n            type: string\n    TaskDescription:\n      type: string\n      maxLength: 4096\n      example: This is the description for this task.\n      description: |-\n        An optional description for this task.\n        The maximum length is 4096 bytes.\n    JobTaskSettings:\n      properties:\n        task_key:\n          $ref: '#/components/schemas/TaskKey'\n        description:\n          $ref: '#/components/schemas/TaskDescription'\n        depends_on:\n          $ref: '#/components/schemas/TaskDependencies'\n        existing_cluster_id:\n          type: string\n          example: 0923-164208-meows279\n          description: \u003e-\n            If existing_cluster_id, the ID of an existing cluster that is used\n            for all runs of this task. When running tasks on an existing\n            cluster, you may need to manually restart the cluster if it stops\n            responding. We suggest running jobs on new clusters for greater\n            reliability.\n        new_cluster:\n          description: \u003e-\n            If new_cluster, a description of a cluster that is created for each\n            run.\n          example: null\n          $ref: '#/components/schemas/NewCluster'\n        job_cluster_key:\n          type: string\n          description: \u003e-\n            _Reserved for future use_. See [Jobs API\n            updates](https://docs.databricks.com/data-engineering/jobs/jobs-api-updates.html).\n        notebook_task:\n          description: \u003e-\n            If notebook_task, indicates that this task must run a notebook. This\n            field may not be specified in conjunction with spark_jar_task.\n          $ref: '#/components/schemas/NotebookTask'\n        spark_jar_task:\n          description: If spark_jar_task, indicates that this task must run a JAR.\n          $ref: '#/components/schemas/SparkJarTask'\n        spark_python_task:\n          description: \u003e-\n            If spark_python_task, indicates that this task must run a Python\n            file.\n          $ref: '#/components/schemas/SparkPythonTask'\n        spark_submit_task:\n          description: \u003e-\n            If spark_submit_task, indicates that this task must be launched by\n            the spark submit script.\n          $ref: '#/components/schemas/SparkSubmitTask'\n        pipeline_task:\n          description: If pipeline_task, indicates that this task must execute a Pipeline.\n          $ref: '#/components/schemas/PipelineTask'\n        python_wheel_task:\n          description: \u003e-\n            If python_wheel_task, indicates that this job must execute a\n            PythonWheel.\n          $ref: '#/components/schemas/PythonWheelTask'\n        libraries:\n          type: array\n          description: \u003e-\n            An optional list of libraries to be installed on the cluster that\n            executes the task. The default value is an empty list.\n          items:\n            $ref: '#/components/schemas/Library'\n        email_notifications:\n          description: \u003e-\n            An optional set of email addresses that is notified when runs of\n            this task begin or complete as well as when this task is deleted.\n            The default behavior is to not send any emails.\n          $ref: '#/components/schemas/JobEmailNotifications'\n        timeout_seconds:\n          type: integer\n          example: 86400\n          description: \u003e-\n            An optional timeout applied to each run of this job task. The\n            default behavior is to have no timeout.\n          format: int32\n        max_retries:\n          type: integer\n          example: 10\n          description: \u003e-\n            An optional maximum number of times to retry an unsuccessful run. A\n            run is considered to be unsuccessful if it completes with the\n            `FAILED` result_state or `INTERNAL_ERROR` `life_cycle_state`. The\n            value -1 means to retry indefinitely and the value 0 means to never\n            retry. The default behavior is to never retry.\n          format: int32\n        min_retry_interval_millis:\n          type: integer\n          example: 2000\n          description: \u003e-\n            An optional minimal interval in milliseconds between the start of\n            the failed run and the subsequent retry run. The default behavior is\n            that unsuccessful runs are immediately retried.\n          format: int32\n        retry_on_timeout:\n          type: boolean\n          example: true\n          description: \u003e-\n            An optional policy to specify whether to retry a task when it times\n            out. The default behavior is to not retry on timeout.\n    JobCluster:\n      properties:\n        job_cluster_key:\n          type: string\n          minLength: 1\n          maxLength: 100\n          pattern: ^[\\w\\-]+$\n          required: true\n          example: auto_scaling_cluster\n          description: \u003e-\n            A unique name for the job cluster. This field is required and must\n            be unique within the job.\n\n            `JobTaskSettings` may refer to this field to determine which cluster\n            to launch for the task execution.\n        new_cluster:\n          $ref: '#/components/schemas/NewCluster'\n    NewCluster:\n      properties:\n        num_workers:\n          type: integer\n          description: \u003e-\n            If num_workers, number of worker nodes that this cluster must have.\n            A cluster has one Spark driver and num_workers executors for a total\n            of num_workers + 1 Spark nodes. When reading the properties of a\n            cluster, this field reflects the desired number of workers rather\n            than the actual current number of workers. For example, if a cluster\n            is resized from 5 to 10 workers, this field immediately updates to\n            reflect the target size of 10 workers, whereas the workers listed in\n            `spark_info` gradually increase from 5 to 10 as the new nodes are\n            provisioned.\n          format: int32\n        autoscale:\n          description: \u003e-\n            If autoscale, the required parameters to automatically scale\n            clusters up and down based on load.\n          $ref: '#/components/schemas/AutoScale'\n        spark_version:\n          type: string\n          required: true\n          description: \u003e-\n            The Spark version of the cluster. A list of available Spark versions\n            can be retrieved by using the [Runtime\n            versions](https://docs.databricks.com/dev-tools/api/latest/clusters.html#runtime-versions)\n            API call. This field is required.\n        spark_conf:\n          description: \u003e-\n            An object containing a set of optional, user-specified Spark\n            configuration key-value pairs. You can also pass in a string of\n            extra JVM options to the driver and the executors via\n            `spark.driver.extraJavaOptions` and\n            `spark.executor.extraJavaOptions` respectively.\n\n\n            Example Spark confs: `{\"spark.speculation\": true,\n            \"spark.streaming.ui.retainedBatches\": 5}` or\n            `{\"spark.driver.extraJavaOptions\": \"-verbose:gc\n            -XX:+PrintGCDetails\"}`\n          $ref: '#/components/schemas/SparkConfPair'\n        aws_attributes:\n          description: \u003e-\n            Attributes related to clusters running on Amazon Web Services. If\n            not specified at cluster creation, a set of default values is used.\n          $ref: '#/components/schemas/AwsAttributes'\n        node_type_id:\n          type: string\n          required: true\n          description: \u003e-\n            This field encodes, through a single value, the resources available\n            to each of the Spark nodes in this cluster. For example, the Spark\n            nodes can be provisioned and optimized for memory or compute\n            intensive workloads A list of available node types can be retrieved\n            by using the [List node\n            types](https://docs.databricks.com/dev-tools/api/latest/clusters.html#list-node-types)\n            API call. This field is required.\n        driver_node_type_id:\n          type: string\n          description: \u003e-\n            The node type of the Spark driver. This field is optional; if unset,\n            the driver node type is set as the same value as `node_type_id`\n            defined above.\n        ssh_public_keys:\n          type: array\n          description: \u003e-\n            SSH public key contents that are added to each Spark node in this\n            cluster. The corresponding private keys can be used to login with\n            the user name `ubuntu` on port `2200`. Up to 10 keys can be\n            specified.\n          items:\n            type: string\n        custom_tags:\n          description: \u003e-\n            An object containing a set of tags for cluster resources. Databricks\n            tags all cluster resources (such as AWS instances and EBS volumes)\n            with these tags in addition to default_tags.\n\n\n            **Note**:\n\n\n            * Tags are not supported on legacy node types such as\n            compute-optimized and memory-optimized\n\n            * Databricks allows at most 45 custom tags\n          $ref: '#/components/schemas/ClusterTag'\n        cluster_log_conf:\n          description: \u003e-\n            The configuration for delivering Spark logs to a long-term storage\n            destination. Only one destination can be specified for one cluster.\n            If the conf is given, the logs are delivered to the destination\n            every `5 mins`. The destination of driver logs is\n            `\u003cdestination\u003e/\u003ccluster-id\u003e/driver`, while the destination of\n            executor logs is `\u003cdestination\u003e/\u003ccluster-id\u003e/executor`.\n          $ref: '#/components/schemas/ClusterLogConf'\n        init_scripts:\n          type: array\n          description: \u003e-\n            The configuration for storing init scripts. Any number of scripts\n            can be specified. The scripts are executed sequentially in the order\n            provided. If `cluster_log_conf` is specified, init script logs are\n            sent to `\u003cdestination\u003e/\u003ccluster-id\u003e/init_scripts`.\n          items:\n            $ref: '#/components/schemas/InitScriptInfo'\n        spark_env_vars:\n          description: \u003e-\n            An object containing a set of optional, user-specified environment\n            variable key-value pairs. Key-value pair of the form (X,Y) are\n            exported as is (for example, `export X='Y'`) while launching the\n            driver and workers.\n\n\n            To specify an additional set of `SPARK_DAEMON_JAVA_OPTS`, we\n            recommend appending them to `$SPARK_DAEMON_JAVA_OPTS` as shown in\n            the following example. This ensures that all default databricks\n            managed environmental variables are included as well.\n\n\n            Example Spark environment variables: `{\"SPARK_WORKER_MEMORY\":\n            \"28000m\", \"SPARK_LOCAL_DIRS\": \"/local_disk0\"}` or\n            `{\"SPARK_DAEMON_JAVA_OPTS\": \"$SPARK_DAEMON_JAVA_OPTS\n            -Dspark.shuffle.service.enabled=true\"}`\n          $ref: '#/components/schemas/SparkEnvPair'\n        enable_elastic_disk:\n          type: boolean\n          description: \u003e-\n            Autoscaling Local Storage: when enabled, this cluster dynamically\n            acquires additional disk space when its Spark workers are running\n            low on disk space. This feature requires specific AWS permissions to\n            function correctly - refer to [Autoscaling local\n            storage](https://docs.databricks.com/clusters/configure.html#autoscaling-local-storage)\n            for details.\n        driver_instance_pool_id:\n          type: string\n          description: \u003e-\n            The optional ID of the instance pool to use for the driver node. You\n            must also specify `instance_pool_id`. Refer to [Instance Pools\n            API](https://docs.databricks.com/dev-tools/api/latest/instance-pools.html)\n            for details.\n        instance_pool_id:\n          type: string\n          description: \u003e-\n            The optional ID of the instance pool to use for cluster nodes. If\n            `driver_instance_pool_id` is present, `instance_pool_id` is used for\n            worker nodes only. Otherwise, it is used for both the driver node\n            and worker nodes. Refer to [Instance Pools\n            API](https://docs.databricks.com/dev-tools/api/latest/instance-pools.html)\n            for details.\n    NotebookOutput:\n      properties:\n        result:\n          type: string\n          example: An arbitrary string passed by calling dbutils.notebook.exit(...)\n          description: \u003e-\n            The value passed to\n            [dbutils.notebook.exit()](https://docs.databricks.com/notebooks/notebook-workflows.html#notebook-workflows-exit).\n            Databricks restricts this API to return the first 5 MB of the value.\n            For a larger result, your job can store the results in a cloud\n            storage service. This field is absent if `dbutils.notebook.exit()`\n            was never called.\n        truncated:\n          type: boolean\n          example: false\n          description: Whether or not the result was truncated.\n    NotebookTask:\n      properties:\n        notebook_path:\n          type: string\n          example: /Users/user.name@databricks.com/notebook_to_run\n          required: true\n          description: \u003e-\n            The absolute path of the notebook to be run in the Databricks\n            workspace. This path must begin with a slash. This field is\n            required.\n        base_parameters:\n          type: object\n          example:\n            name: John Doe\n            age: 35\n          description: \u003e-\n            Base parameters to be used for each run of this job. If the run is\n            initiated by a call to\n            [`run-now`](https://docs.databricks.com/dev-tools/api/latest/jobs.html#operation/JobsRunNow)\n            with parameters specified, the two parameters maps are merged. If\n            the same key is specified in `base_parameters` and in `run-now`, the\n            value from `run-now` is used.\n\n\n            Use [Task parameter\n            variables](https://docs.databricks.com/jobs.html#parameter-variables)\n            to set parameters containing information about job runs.\n\n\n            If the notebook takes a parameter that is not specified in the job’s\n            `base_parameters` or the `run-now` override parameters, the default\n            value from the notebook is used.\n\n\n            Retrieve these parameters in a notebook using\n            [dbutils.widgets.get](https://docs.databricks.com/dev-tools/databricks-utils.html#dbutils-widgets).\n          additionalProperties: true\n    RunTask:\n      properties:\n        run_id:\n          type: integer\n          description: The ID of the task run.\n          format: int64\n          example: 99887766\n        task_key:\n          $ref: '#/components/schemas/TaskKey'\n        description:\n          $ref: '#/components/schemas/TaskDescription'\n        state:\n          description: The result and lifecycle states of the run.\n          $ref: '#/components/schemas/RunState'\n        depends_on:\n          $ref: '#/components/schemas/TaskDependencies'\n        existing_cluster_id:\n          type: string\n          description: \u003e-\n            If existing_cluster_id, the ID of an existing cluster that is used\n            for all runs of this job. When running jobs on an existing cluster,\n            you may need to manually restart the cluster if it stops responding.\n            We suggest running jobs on new clusters for greater reliability.\n        new_cluster:\n          example: null\n          description: \u003e-\n            If new_cluster, a description of a cluster that is created for each\n            run.\n          $ref: '#/components/schemas/NewCluster'\n        libraries:\n          type: array\n          description: \u003e-\n            An optional list of libraries to be installed on the cluster that\n            executes the job. The default value is an empty list.\n          items:\n            $ref: '#/components/schemas/Library'\n        notebook_task:\n          description: \u003e-\n            If notebook_task, indicates that this job must run a notebook. This\n            field may not be specified in conjunction with spark_jar_task.\n          $ref: '#/components/schemas/NotebookTask'\n        spark_jar_task:\n          description: If spark_jar_task, indicates that this job must run a JAR.\n          $ref: '#/components/schemas/SparkJarTask'\n        spark_python_task:\n          description: \u003e-\n            If spark_python_task, indicates that this job must run a Python\n            file.\n          $ref: '#/components/schemas/SparkPythonTask'\n        spark_submit_task:\n          description: \u003e-\n            If spark_submit_task, indicates that this job must be launched by\n            the spark submit script.\n          $ref: '#/components/schemas/SparkSubmitTask'\n        pipeline_task:\n          description: If pipeline_task, indicates that this job must execute a Pipeline.\n          $ref: '#/components/schemas/PipelineTask'\n        python_wheel_task:\n          description: \u003e-\n            If python_wheel_task, indicates that this job must execute a\n            PythonWheel.\n          $ref: '#/components/schemas/PythonWheelTask'\n        start_time:\n          type: integer\n          example: 1625060460483\n          description: \u003e-\n            The time at which this run was started in epoch milliseconds\n            (milliseconds since 1/1/1970 UTC). This may not be the time when the\n            job task starts executing, for example, if the job is scheduled to\n            run on a new cluster, this is the time the cluster creation call is\n            issued.\n          format: int64\n        setup_duration:\n          type: integer\n          example: 0\n          description: \u003e-\n            The time it took to set up the cluster in milliseconds. For runs\n            that run on new clusters this is the cluster creation time, for runs\n            that run on existing clusters this time should be very short.\n          format: int64\n        execution_duration:\n          type: integer\n          example: 0\n          description: \u003e-\n            The time in milliseconds it took to execute the commands in the JAR\n            or notebook until they completed, failed, timed out, were cancelled,\n            or encountered an unexpected error.\n          format: int64\n        cleanup_duration:\n          type: integer\n          example: 0\n          description: \u003e-\n            The time in milliseconds it took to terminate the cluster and clean\n            up any associated artifacts. The total duration of the run is the\n            sum of the setup_duration, the execution_duration, and the\n            cleanup_duration.\n          format: int64\n        end_time:\n          type: integer\n          example: 1625060863413\n          description: \u003e-\n            The time at which this run ended in epoch milliseconds (milliseconds\n            since 1/1/1970 UTC). This field is set to 0 if the job is still\n            running.\n          format: int64\n        attempt_number:\n          type: integer\n          number: 0\n          description: \u003e-\n            The sequence number of this run attempt for a triggered job run. The\n            initial attempt of a run has an attempt_number of 0\\. If the initial\n            run attempt fails, and the job has a retry policy (`max_retries` \\\u003e\n            0), subsequent runs are created with an `original_attempt_run_id` of\n            the original attempt’s ID and an incrementing `attempt_number`. Runs\n            are retried only until they succeed, and the maximum\n            `attempt_number` is the same as the `max_retries` value for the job.\n          format: int32\n        cluster_instance:\n          description: \u003e-\n            The cluster used for this run. If the run is specified to use a new\n            cluster, this field is set once the Jobs service has requested a\n            cluster for the run.\n          $ref: '#/components/schemas/ClusterInstance'\n    Run:\n      properties:\n        job_id:\n          type: integer\n          example: 11223344\n          description: The canonical identifier of the job that contains this run.\n          format: int64\n        run_id:\n          type: integer\n          example: 455644833\n          description: \u003e-\n            The canonical identifier of the run. This ID is unique across all\n            runs of all jobs.\n          format: int64\n        number_in_job:\n          type: integer\n          example: 455644833\n          deprecated: true\n          description: \u003e-\n            A unique identifier for this job run. This is set to the same value\n            as `run_id`.\n          format: int64\n        creator_user_name:\n          type: string\n          example: user.name@databricks.com\n          description: \u003e-\n            The creator user name. This field won’t be included in the response\n            if the user has already been deleted.\n        original_attempt_run_id:\n          type: integer\n          example: 455644833\n          description: \u003e-\n            If this run is a retry of a prior run attempt, this field contains\n            the run_id of the original attempt; otherwise, it is the same as the\n            run_id.\n          format: int64\n        state:\n          description: The result and lifecycle states of the run.\n          $ref: '#/components/schemas/RunState'\n        schedule:\n          description: \u003e-\n            The cron schedule that triggered this run if it was triggered by the\n            periodic scheduler.\n          $ref: '#/components/schemas/CronSchedule'\n        tasks:\n          description: \u003e-\n            The list of tasks performed by the run. Each task has its own\n            `run_id` which you can use to call `JobsGetOutput` to retrieve the\n            run resutls.\n          type: array\n          maxItems: 100\n          items:\n            $ref: '#/components/schemas/RunTask'\n          example:\n            - run_id: 2112892\n              task_key: Orders_Ingest\n              description: Ingests order data\n              existing_cluster_id: 0923-164208-meows279\n              spark_jar_task:\n                main_class_name: com.databricks.OrdersIngest\n                run_as_repl: true\n              libraries:\n                - jar: dbfs:/mnt/databricks/OrderIngest.jar\n              state:\n                life_cycle_state: INTERNAL_ERROR\n                result_state: FAILED\n                state_message: \u003e-\n                  Library installation failed for library due to user error.\n                  Error messages:\n\n                  'Manage' permissions are required to install libraries on a\n                  cluster\n                user_cancelled_or_timedout: false\n              run_page_url: https://my-workspace.cloud.databricks.com/#job/39832/run/20\n              start_time: 1629989929660\n              setup_duration: 0\n              execution_duration: 0\n              cleanup_duration: 0\n              end_time: 1629989930171\n              cluster_instance:\n                cluster_id: 0923-164208-meows279\n                spark_context_id: '4348585301701786933'\n              attempt_number: 0\n            - run_id: 2112897\n              task_key: Match\n              description: Matches orders with user sessions\n              depends_on:\n                - task_key: Orders_Ingest\n                - task_key: Sessionize\n              new_cluster:\n                spark_version: 7.3.x-scala2.12\n                node_type_id: i3.xlarge\n                spark_conf:\n                  spark.speculation: true\n                aws_attributes:\n                  availability: SPOT\n                  zone_id: us-west-2a\n                autoscale:\n                  min_workers: 2\n                  max_workers: 16\n              notebook_task:\n                notebook_path: /Users/user.name@databricks.com/Match\n              state:\n                life_cycle_state: SKIPPED\n                state_message: An upstream task failed.\n                user_cancelled_or_timedout: false\n              run_page_url: https://my-workspace.cloud.databricks.com/#job/39832/run/21\n              start_time: 0\n              setup_duration: 0\n              execution_duration: 0\n              cleanup_duration: 0\n              end_time: 1629989930238\n              cluster_instance:\n                cluster_id: 0923-164208-meows279\n              attempt_number: 0\n            - run_id: 2112902\n              task_key: Sessionize\n              description: Extracts session data from events\n              existing_cluster_id: 0923-164208-meows279\n              spark_jar_task:\n                main_class_name: com.databricks.Sessionize\n                run_as_repl: true\n              libraries:\n                - jar: dbfs:/mnt/databricks/Sessionize.jar\n              state:\n                life_cycle_state: INTERNAL_ERROR\n                result_state: FAILED\n                state_message: \u003e-\n                  Library installation failed for library due to user error.\n                  Error messages:\n\n                  'Manage' permissions are required to install libraries on a\n                  cluster\n                user_cancelled_or_timedout: false\n              run_page_url: https://my-workspace.cloud.databricks.com/#job/39832/run/22\n              start_time: 1629989929668\n              setup_duration: 0\n              execution_duration: 0\n              cleanup_duration: 0\n              end_time: 1629989930144\n              cluster_instance:\n                cluster_id: 0923-164208-meows279\n                spark_context_id: '4348585301701786933'\n              attempt_number: 0\n        job_clusters:\n          type: array\n          description: \u003e-\n            _Reserved for future use_. See [Jobs API\n            updates](https://docs.databricks.com/data-engineering/jobs/jobs-api-updates.html).\n          items:\n            $ref: '#/components/schemas/JobCluster'\n          example: null\n        cluster_spec:\n          description: \u003e-\n            A snapshot of the job’s cluster specification when this run was\n            created.\n          $ref: '#/components/schemas/ClusterSpec'\n        cluster_instance:\n          description: \u003e-\n            The cluster used for this run. If the run is specified to use a new\n            cluster, this field is set once the Jobs service has requested a\n            cluster for the run.\n          $ref: '#/components/schemas/ClusterInstance'\n        overriding_parameters:\n          description: The parameters used for this run.\n          $ref: '#/components/schemas/RunParameters'\n        start_time:\n          type: integer\n          example: 1625060460483\n          description: \u003e-\n            The time at which this run was started in epoch milliseconds\n            (milliseconds since 1/1/1970 UTC). This may not be the time when the\n            job task starts executing, for example, if the job is scheduled to\n            run on a new cluster, this is the time the cluster creation call is\n            issued.\n          format: int64\n        setup_duration:\n          type: integer\n          example: 0\n          description: \u003e-\n            The time it took to set up the cluster in milliseconds. For runs\n            that run on new clusters this is the cluster creation time, for runs\n            that run on existing clusters this time should be very short.\n          format: int64\n        execution_duration:\n          type: integer\n          example: 0\n          description: \u003e-\n            The time in milliseconds it took to execute the commands in the JAR\n            or notebook until they completed, failed, timed out, were cancelled,\n            or encountered an unexpected error.\n          format: int64\n        cleanup_duration:\n          type: integer\n          example: 0\n          description: \u003e-\n            The time in milliseconds it took to terminate the cluster and clean\n            up any associated artifacts. The total duration of the run is the\n            sum of the setup_duration, the execution_duration, and the\n            cleanup_duration.\n          format: int64\n        end_time:\n          type: integer\n          example: 1625060863413\n          description: \u003e-\n            The time at which this run ended in epoch milliseconds (milliseconds\n            since 1/1/1970 UTC). This field is set to 0 if the job is still\n            running.\n          format: int64\n        trigger:\n          description: The type of trigger that fired this run.\n          $ref: '#/components/schemas/TriggerType'\n        run_name:\n          type: string\n          example: A multitask job run\n          default: Untitled\n          description: \u003e-\n            An optional name for the run. The maximum allowed length is 4096\n            bytes in UTF-8 encoding.\n        run_page_url:\n          type: string\n          description: The URL to the detail page of the run.\n          example: https://my-workspace.cloud.databricks.com/#job/11223344/run/123\n        run_type:\n          $ref: '#/components/schemas/RunType'\n        attempt_number:\n          type: integer\n          number: 0\n          description: \u003e-\n            The sequence number of this run attempt for a triggered job run. The\n            initial attempt of a run has an attempt_number of 0\\. If the initial\n            run attempt fails, and the job has a retry policy (`max_retries` \\\u003e\n            0), subsequent runs are created with an `original_attempt_run_id` of\n            the original attempt’s ID and an incrementing `attempt_number`. Runs\n            are retried only until they succeed, and the maximum\n            `attempt_number` is the same as the `max_retries` value for the job.\n          format: int32\n    RunType:\n      type: string\n      example: JOB_RUN\n      enum:\n        - JOB_RUN\n        - WORKFLOW_RUN\n        - SUBMIT_RUN\n      description: \u003e-\n        The type of the run.\n\n        * `JOB_RUN` \\- Normal job run. A run created with [Run\n        now](https://docs.databricks.com/dev-tools/api/latest/jobs.html#operation/JobsRunNow).  \n\n        * `WORKFLOW_RUN` \\- Workflow run. A run created with\n        [dbutils.notebook.run](https://docs.databricks.com/dev-tools/databricks-utils.html#dbutils-workflow).\n\n        * `SUBMIT_RUN` \\- Submit run. A run created with [Run\n        now](https://docs.databricks.com/dev-tools/api/latest/jobs.html#operation/JobsRunNow).\n    RunParameters:\n      properties:\n        jar_params:\n          type: array\n          description: \u003e-\n            A list of parameters for jobs with Spark JAR tasks, for example\n            `\"jar_params\": [\"john doe\", \"35\"]`. The parameters are used to\n            invoke the main function of the main class specified in the Spark\n            JAR task. If not specified upon `run-now`, it defaults to an empty\n            list. jar_params cannot be specified in conjunction with\n            notebook_params. The JSON representation of this field (for example\n            `{\"jar_params\":[\"john doe\",\"35\"]}`) cannot exceed 10,000 bytes.\n\n\n            Use [Task parameter\n            variables](https://docs.databricks.com/jobs.html#parameter-variables)\n            to set parameters containing information about job runs.\n          items:\n            type: string\n          example:\n            - john\n            - '35'\n        notebook_params:\n          type: object\n          description: \u003e-\n            A map from keys to values for jobs with notebook task, for example\n            `\"notebook_params\": {\"name\": \"john doe\", \"age\": \"35\"}`. The map is\n            passed to the notebook and is accessible through the\n            [dbutils.widgets.get](https://docs.databricks.com/dev-tools/databricks-utils.html#dbutils-widgets)\n            function.\n\n\n            If not specified upon `run-now`, the triggered run uses the job’s\n            base parameters.\n\n\n            notebook_params cannot be specified in conjunction with jar_params.\n\n\n            Use [Task parameter\n            variables](https://docs.databricks.com/jobs.html#parameter-variables)\n            to set parameters containing information about job runs.\n\n\n            The JSON representation of this field (for example\n            `{\"notebook_params\":{\"name\":\"john doe\",\"age\":\"35\"}}`) cannot exceed\n            10,000 bytes.\n          additionalProperties: true\n          example:\n            name: john\n            age: '35'\n        python_params:\n          type: array\n          description: \u003e-\n            A list of parameters for jobs with Python tasks, for example\n            `\"python_params\": [\"john doe\", \"35\"]`. The parameters are passed to\n            Python file as command-line parameters. If specified upon `run-now`,\n            it would overwrite the parameters specified in job setting. The JSON\n            representation of this field (for example `{\"python_params\":[\"john\n            doe\",\"35\"]}`) cannot exceed 10,000 bytes.\n\n\n            Use [Task parameter\n            variables](https://docs.databricks.com/jobs.html#parameter-variables)\n            to set parameters containing information about job runs.\n\n\n            Important\n\n\n            These parameters accept only Latin characters (ASCII character set).\n            Using non-ASCII characters returns an error. Examples of invalid,\n            non-ASCII characters are Chinese, Japanese kanjis, and emojis.\n          items:\n            type: string\n          example:\n            - john\n            - '35'\n        spark_submit_params:\n          type: array\n          description: \u003e-\n            A list of parameters for jobs with spark submit task, for example\n            `\"spark_submit_params\": [\"--class\",\n            \"org.apache.spark.examples.SparkPi\"]`. The parameters are passed to\n            spark-submit script as command-line parameters. If specified upon\n            `run-now`, it would overwrite the parameters specified in job\n            setting. The JSON representation of this field (for example\n            `{\"python_params\":[\"john doe\",\"35\"]}`) cannot exceed 10,000 bytes.\n\n\n            Use [Task parameter\n            variables](https://docs.databricks.com/jobs.html#parameter-variables)\n            to set parameters containing information about job runs.\n\n\n            Important\n\n\n            These parameters accept only Latin characters (ASCII character set).\n            Using non-ASCII characters returns an error. Examples of invalid,\n            non-ASCII characters are Chinese, Japanese kanjis, and emojis.\n          items:\n            type: string\n          example:\n            - '--class'\n            - org.apache.spark.examples.SparkPi\n    RunState:\n      properties:\n        life_cycle_state:\n          description: \u003e-\n            A description of a run’s current location in the run lifecycle. This\n            field is always available in the response.\n          $ref: '#/components/schemas/RunLifeCycleState'\n        result_state:\n          $ref: '#/components/schemas/RunResultState'\n        user_cancelled_or_timedout:\n          type: boolean\n          example: false\n          description: \u003e-\n            Whether a run was canceled manually by a user or by the scheduler\n            because the run timed out.\n        state_message:\n          type: string\n          example: ''\n          description: \u003e-\n            A descriptive message for the current state. This field is\n            unstructured, and its exact format is subject to change.\n    SparkJarTask:\n      properties:\n        main_class_name:\n          type: string\n          example: com.databricks.ComputeModels\n          description: \u003e-\n            The full name of the class containing the main method to be\n            executed. This class must be contained in a JAR provided as a\n            library.\n\n\n            The code must use `SparkContext.getOrCreate` to obtain a Spark\n            context; otherwise, runs of the job fail.\n        parameters:\n          type: array\n          example:\n            - '--data'\n            - dbfs:/path/to/data.json\n          description: \u003e-\n            Parameters passed to the main method.\n\n\n            Use [Task parameter\n            variables](https://docs.databricks.com/jobs.html#parameter-variables)\n            to set parameters containing information about job runs.\n          items:\n            type: string\n        jar_uri:\n          type: string\n          deprecated: true\n          description: \u003e-\n            Deprecated since 04/2016\\. Provide a `jar` through the `libraries`\n            field instead. For an example, see\n            [Create](https://docs.databricks.com/dev-tools/api/latest/jobs.html#operation/JobsCreate).\n    SparkPythonTask:\n      properties:\n        python_file:\n          type: string\n          example: dbfs:/path/to/file.py\n          required: true\n          description: \u003e-\n            The URI of the Python file to be executed. DBFS and S3 paths are\n            supported. This field is required.\n        parameters:\n          type: array\n          example:\n            - '--data'\n            - dbfs:/path/to/data.json\n          description: \u003e-\n            Command line parameters passed to the Python file.\n\n\n            Use [Task parameter\n            variables](https://docs.databricks.com/jobs.html#parameter-variables)\n            to set parameters containing information about job runs.\n          items:\n            type: string\n    SparkSubmitTask:\n      properties:\n        parameters:\n          type: array\n          example:\n            - '--class'\n            - org.apache.spark.examples.SparkPi\n            - dbfs:/path/to/examples.jar\n            - '10'\n          description: \u003e-\n            Command-line parameters passed to spark submit.\n\n\n            Use [Task parameter\n            variables](https://docs.databricks.com/jobs.html#parameter-variables)\n            to set parameters containing information about job runs.\n          items:\n            type: string\n    PipelineTask:\n      properties:\n        pipeline_id:\n          type: string\n          example: a12cd3e4-0ab1-1abc-1a2b-1a2bcd3e4fg5\n          description: The full name of the pipeline task to execute.\n    PythonWheelTask:\n      properties:\n        package_name:\n          type: string\n          description: Name of the package to execute\n        entry_point:\n          type: string\n          description: \u003e-\n            Named entry point to use, if it does not exist in the metadata of\n            the package it executes the function from the package directly using\n            $packageName.$entryPoint()\n        parameters:\n          type: array\n          example:\n            - '--name=task'\n            - one\n            - two\n          description: Command-line parameters passed to python wheel task.\n          items:\n            type: string\n    ViewItem:\n      properties:\n        content:\n          type: string\n          description: Content of the view.\n        name:\n          type: string\n          description: \u003e-\n            Name of the view item. In the case of code view, it would be the\n            notebook’s name. In the case of dashboard view, it would be the\n            dashboard’s name.\n        type:\n          description: Type of the view item.\n          $ref: '#/components/schemas/ViewType'\n    RunLifeCycleState:\n      type: string\n      enum:\n        - PENDING\n        - RUNNING\n        - TERMINATING\n        - TERMINATED\n        - SKIPPED\n        - INTERNAL_ERROR\n      description: \u003e-\n        * `PENDING`: The run has been triggered. If there is not already an\n        active run of the same job, the cluster and execution context are being\n        prepared. If there is already an active run of the same job, the run\n        immediately transitions into the `SKIPPED` state without preparing any\n        resources.\n\n        * `RUNNING`: The task of this run is being executed.\n\n        * `TERMINATING`: The task of this run has completed, and the cluster and\n        execution context are being cleaned up.\n\n        * `TERMINATED`: The task of this run has completed, and the cluster and\n        execution context have been cleaned up. This state is terminal.\n\n        * `SKIPPED`: This run was aborted because a previous run of the same job\n        was already active. This state is terminal.\n\n        * `INTERNAL_ERROR`: An exceptional state that indicates a failure in the\n        Jobs service, such as network failure over a long period. If a run on a\n        new cluster ends in the `INTERNAL_ERROR` state, the Jobs service\n        terminates the cluster as soon as possible. This state is terminal.\n    RunResultState:\n      type: string\n      enum:\n        - SUCCESS\n        - FAILED\n        - TIMEDOUT\n        - CANCELED\n      description: |-\n        * `SUCCESS`: The task completed successfully.\n        * `FAILED`: The task completed with an error.\n        * `TIMEDOUT`: The run was stopped after reaching the timeout.\n        * `CANCELED`: The run was canceled at user request.\n    TriggerType:\n      type: string\n      enum:\n        - PERIODIC\n        - ONE_TIME\n        - RETRY\n      description: \u003e-\n        * `PERIODIC`: Schedules that periodically trigger runs, such as a cron\n        scheduler.\n\n        * `ONE_TIME`: One time triggers that fire a single run. This occurs you\n        triggered a single run on demand through the UI or the API.\n\n        * `RETRY`: Indicates a run that is triggered as a retry of a previously\n        failed run. This occurs when you request to re-run the job in case of\n        failures.\n    ViewType:\n      type: string\n      enum:\n        - NOTEBOOK\n        - DASHBOARD\n      description: |-\n        * `NOTEBOOK`: Notebook view item.\n        * `DASHBOARD`: Dashboard view item.\n    ViewsToExport:\n      type: string\n      default: CODE\n      enum:\n        - CODE\n        - DASHBOARDS\n        - ALL\n      description: |-\n        * `CODE`: Code view of the notebook.\n        * `DASHBOARDS`: All dashboard views of the notebook.\n        * `ALL`: All views of the notebook.\n    AutoScale:\n      properties:\n        min_workers:\n          type: integer\n          description: \u003e-\n            The minimum number of workers to which the cluster can scale down\n            when underutilized. It is also the initial number of workers the\n            cluster has after creation.\n          format: int32\n        max_workers:\n          type: integer\n          description: \u003e-\n            The maximum number of workers to which the cluster can scale up when\n            overloaded. max_workers must be strictly greater than min_workers.\n          format: int32\n    ClusterInfo:\n      properties:\n        num_workers:\n          type: integer\n          description: \u003e-\n            If num_workers, number of worker nodes that this cluster must have.\n            A cluster has one Spark driver and num_workers executors for a total\n            of num_workers + 1 Spark nodes. **Note:** When reading the\n            properties of a cluster, this field reflects the desired number of\n            workers rather than the actual number of workers. For instance, if a\n            cluster is resized from 5 to 10 workers, this field is immediately\n            updated to reflect the target size of 10 workers, whereas the\n            workers listed in `executors` gradually increase from 5 to 10 as the\n            new nodes are provisioned.\n          format: int32\n        autoscale:\n          description: \u003e-\n            If autoscale, parameters needed in order to automatically scale\n            clusters up and down based on load.\n          $ref: '#/components/schemas/AutoScale'\n        cluster_id:\n          type: string\n          description: \u003e-\n            Canonical identifier for the cluster. This ID is retained during\n            cluster restarts and resizes, while each new cluster has a globally\n            unique ID.\n        creator_user_name:\n          type: string\n          description: \u003e-\n            Creator user name. The field won’t be included in the response if\n            the user has already been deleted.\n        driver:\n          description: \u003e-\n            Node on which the Spark driver resides. The driver node contains the\n            Spark master and the Databricks application that manages the\n            per-notebook Spark REPLs.\n          $ref: '#/components/schemas/SparkNode'\n        executors:\n          type: array\n          description: Nodes on which the Spark executors reside.\n          items:\n            $ref: '#/components/schemas/SparkNode'\n        spark_context_id:\n          type: integer\n          description: \u003e-\n            A canonical SparkContext identifier. This value _does_ change when\n            the Spark driver restarts. The pair `(cluster_id, spark_context_id)`\n            is a globally unique identifier over all Spark contexts.\n          format: int64\n        jdbc_port:\n          type: integer\n          description: \u003e-\n            Port on which Spark JDBC server is listening in the driver node. No\n            service listens on this port in executor nodes.\n          format: int32\n        cluster_name:\n          type: string\n          description: \u003e-\n            Cluster name requested by the user. This doesn’t have to be unique.\n            If not specified at creation, the cluster name is an empty string.\n        spark_version:\n          type: string\n          description: \u003e-\n            The runtime version of the cluster. You can retrieve a list of\n            available runtime versions by using the [Runtime\n            versions](https://docs.databricks.com/dev-tools/api/latest/clusters.html#runtime-versions)\n            API call.\n        spark_conf:\n          description: \u003e-\n            An object containing a set of optional, user-specified Spark\n            configuration key-value pairs. You can also pass in a string of\n            extra JVM options to the driver and the executors via\n            `spark.driver.extraJavaOptions` and\n            `spark.executor.extraJavaOptions` respectively.\n\n\n            Example Spark confs: `{\"spark.speculation\": true,\n            \"spark.streaming.ui.retainedBatches\": 5}` or\n            `{\"spark.driver.extraJavaOptions\": \"-verbose:gc\n            -XX:+PrintGCDetails\"}`\n          $ref: '#/components/schemas/SparkConfPair'\n        aws_attributes:\n          description: \u003e-\n            Attributes related to clusters running on Amazon Web Services. If\n            not specified at cluster creation, a set of default values is used.\n          $ref: '#/components/schemas/AwsAttributes'\n        node_type_id:\n          type: string\n          description: \u003e-\n            This field encodes, through a single value, the resources available\n            to each of the Spark nodes in this cluster. For example, the Spark\n            nodes can be provisioned and optimized for memory or compute\n            intensive workloads. A list of available node types can be retrieved\n            by using the [List node\n            types](https://docs.databricks.com/dev-tools/api/latest/clusters.html#list-node-types)\n            API call.\n        driver_node_type_id:\n          type: string\n          description: \u003e-\n            The node type of the Spark driver. This field is optional; if unset,\n            the driver node type is set as the same value as `node_type_id`\n            defined above.\n        ssh_public_keys:\n          type: array\n          description: \u003e-\n            SSH public key contents that are added to each Spark node in this\n            cluster. The corresponding private keys can be used to login with\n            the user name `ubuntu` on port `2200`. Up to 10 keys can be\n            specified.\n          items:\n            type: string\n        custom_tags:\n          type: array\n          description: \u003e-\n            An object containing a set of tags for cluster resources. Databricks\n            tags all cluster resources (such as AWS instances and EBS volumes)\n            with these tags in addition to default_tags.\n\n\n            **Note**:\n\n\n            * Tags are not supported on legacy node types such as\n            compute-optimized and memory-optimized\n\n            * Databricks allows at most 45 custom tags\n          items:\n            $ref: '#/components/schemas/ClusterTag'\n        cluster_log_conf:\n          description: \u003e-\n            The configuration for delivering Spark logs to a long-term storage\n            destination. Only one destination can be specified for one cluster.\n            If the conf is given, the logs are delivered to the destination\n            every `5 mins`. The destination of driver logs is\n            `\u003cdestination\u003e/\u003ccluster-ID\u003e/driver`, while the destination of\n            executor logs is `\u003cdestination\u003e/\u003ccluster-ID\u003e/executor`.\n          $ref: '#/components/schemas/ClusterLogConf'\n        init_scripts:\n          type: array\n          description: \u003e-\n            The configuration for storing init scripts. Any number of\n            destinations can be specified. The scripts are executed sequentially\n            in the order provided. If `cluster_log_conf` is specified, init\n            script logs are sent to `\u003cdestination\u003e/\u003ccluster-ID\u003e/init_scripts`.\n          items:\n            $ref: '#/components/schemas/InitScriptInfo'\n        docker_image:\n          description: \u003e-\n            Docker image for a [custom\n            container](https://docs.databricks.com/clusters/custom-containers.html).\n          $ref: '#/components/schemas/DockerImage'\n        spark_env_vars:\n          description: \u003e-\n            An object containing a set of optional, user-specified environment\n            variable key-value pairs. Key-value pairs of the form (X,Y) are\n            exported as is (that is, `export X='Y'`) while launching the driver\n            and workers.\n\n\n            To specify an additional set of `SPARK_DAEMON_JAVA_OPTS`, we\n            recommend appending them to `$SPARK_DAEMON_JAVA_OPTS` as shown in\n            the following example. This ensures that all default databricks\n            managed environmental variables are included as well.\n\n\n            Example Spark environment variables: `{\"SPARK_WORKER_MEMORY\":\n            \"28000m\", \"SPARK_LOCAL_DIRS\": \"/local_disk0\"}` or\n            `{\"SPARK_DAEMON_JAVA_OPTS\": \"$SPARK_DAEMON_JAVA_OPTS\n            -Dspark.shuffle.service.enabled=true\"}`\n          $ref: '#/components/schemas/SparkEnvPair'\n        autotermination_minutes:\n          type: integer\n          description: \u003e-\n            Automatically terminates the cluster after it is inactive for this\n            time in minutes. If not set, this cluster is not be automatically\n            terminated. If specified, the threshold must be between 10 and 10000\n            minutes. You can also set this value to 0 to explicitly disable\n            automatic termination.\n          format: int32\n        enable_elastic_disk:\n          type: boolean\n          description: \u003e-\n            Autoscaling Local Storage: when enabled, this cluster dynamically\n            acquires additional disk space when its Spark workers are running\n            low on disk space. This feature requires specific AWS permissions to\n            function correctly - refer to [Autoscaling local\n            storage](https://docs.databricks.com/clusters/configure.html#autoscaling-local-storage)\n            for details.\n        instance_pool_id:\n          type: string\n          description: \u003e-\n            The optional ID of the instance pool to which the cluster belongs.\n            Refer to\n            [Pools](https://docs.databricks.com/clusters/instance-pools/index.html)\n            for details.\n        cluster_source:\n          description: \u003e-\n            Determines whether the cluster was created by a user through the UI,\n            by the Databricks Jobs scheduler, or through an API request.\n          $ref: '#/components/schemas/ClusterSource'\n        state:\n          description: State of the cluster.\n          $ref: '#/components/schemas/ClusterState'\n        state_message:\n          type: string\n          description: \u003e-\n            A message associated with the most recent state transition (for\n            example, the reason why the cluster entered a `TERMINATED` state).\n            This field is unstructured, and its exact format is subject to\n            change.\n        start_time:\n          type: integer\n          description: \u003e-\n            Time (in epoch milliseconds) when the cluster creation request was\n            received (when the cluster entered a `PENDING` state).\n          format: int64\n        terminated_time:\n          type: integer\n          description: \u003e-\n            Time (in epoch milliseconds) when the cluster was terminated, if\n            applicable.\n          format: int64\n        last_state_loss_time:\n          type: integer\n          description: \u003e-\n            Time when the cluster driver last lost its state (due to a restart\n            or driver failure).\n          format: int64\n        last_activity_time:\n          type: integer\n          description: \u003e-\n            Time (in epoch milliseconds) when the cluster was last active. A\n            cluster is active if there is at least one command that has not\n            finished on the cluster. This field is available after the cluster\n            has reached a `RUNNING` state. Updates to this field are made as\n            best-effort attempts. Certain versions of Spark do not support\n            reporting of cluster activity. Refer to [Automatic\n            termination](https://docs.databricks.com/clusters/clusters-manage.html#automatic-termination)\n            for details.\n          format: int64\n        cluster_memory_mb:\n          type: integer\n          description: Total amount of cluster memory, in megabytes.\n          format: int64\n        cluster_cores:\n          type: number\n          description: \u003e-\n            Number of CPU cores available for this cluster. This can be\n            fractional since certain node types are configured to share cores\n            between Spark nodes on the same instance.\n          format: float\n        default_tags:\n          description: \u003e-\n            An object containing a set of tags that are added by Databricks\n            regardless of any custom_tags, including:\n\n\n            * Vendor: Databricks\n\n            * Creator: \u003cusername-of-creator\u003e\n\n            * ClusterName: \u003cname-of-cluster\u003e\n\n            * ClusterId: \u003cid-of-cluster\u003e\n\n            * Name: \u003cDatabricks internal use\u003e  \n\n            On job clusters:\n\n            * RunName: \u003cname-of-job\u003e\n\n            * JobId: \u003cid-of-job\u003e  \n\n            On resources used by Databricks SQL:\n\n            * SqlEndpointId: \u003cid-of-endpoint\u003e\n          $ref: '#/components/schemas/ClusterTag'\n        cluster_log_status:\n          description: Cluster log delivery status.\n          $ref: '#/components/schemas/LogSyncStatus'\n        termination_reason:\n          description: \u003e-\n            Information about why the cluster was terminated. This field only\n            appears when the cluster is in a `TERMINATING` or `TERMINATED`\n            state.\n          $ref: '#/components/schemas/TerminationReason'\n    ClusterEvent:\n      properties:\n        cluster_id:\n          type: string\n          required: true\n          description: Canonical identifier for the cluster. This field is required.\n        timestamp:\n          type: integer\n          description: \u003e-\n            The timestamp when the event occurred, stored as the number of\n            milliseconds since the unix epoch. Assigned by the Timeline service.\n          format: int64\n        type:\n          required: true\n          description: The event type. This field is required.\n          $ref: '#/components/schemas/ClusterEventType'\n        details:\n          required: true\n          description: The event details. This field is required.\n          $ref: '#/components/schemas/EventDetails'\n    ClusterEventType:\n      type: string\n      enum:\n        - CREATING\n        - DID_NOT_EXPAND_DISK\n        - EXPANDED_DISK\n        - FAILED_TO_EXPAND_DISK\n        - INIT_SCRIPTS_STARTING\n        - INIT_SCRIPTS_FINISHED\n        - STARTING\n        - RESTARTING\n        - TERMINATING\n        - EDITED\n        - RUNNING\n        - RESIZING\n        - UPSIZE_COMPLETED\n        - NODES_LOST\n        - DRIVER_HEALTHY\n        - DRIVER_UNAVAILABLE\n        - SPARK_EXCEPTION\n        - DRIVER_NOT_RESPONDING\n        - DBFS_DOWN\n        - METASTORE_DOWN\n        - NODE_BLACKLISTED\n        - PINNED\n        - UNPINNED\n      description: \u003e-\n        * `CREATING`: Indicates that the cluster is being created.\n\n        * `DID_NOT_EXPAND_DISK`: Indicates that a disk is low on space, but\n        adding disks would put it over the max capacity.\n\n        * `EXPANDED_DISK`: Indicates that a disk was low on space and the disks\n        were expanded.\n\n        * `FAILED_TO_EXPAND_DISK`: Indicates that a disk was low on space and\n        disk space could not be expanded.\n\n        * `INIT_SCRIPTS_STARTING`: Indicates that the cluster scoped init script\n        has started.\n\n        * `INIT_SCRIPTS_FINISHED`: Indicates that the cluster scoped init script\n        has finished.\n\n        * `STARTING`: Indicates that the cluster is being started.\n\n        * `RESTARTING`: Indicates that the cluster is being started.\n\n        * `TERMINATING`: Indicates that the cluster is being terminated.\n\n        * `EDITED`: Indicates that the cluster has been edited.\n\n        * `RUNNING`: Indicates the cluster has finished being created. Includes\n        the number of nodes in the cluster and a failure reason if some nodes\n        could not be acquired.\n\n        * `RESIZING`: Indicates a change in the target size of the cluster\n        (upsize or downsize).\n\n        * `UPSIZE_COMPLETED`: Indicates that nodes finished being added to the\n        cluster. Includes the number of nodes in the cluster and a failure\n        reason if some nodes could not be acquired.\n\n        * `NODES_LOST`: Indicates that some nodes were lost from the cluster.\n\n        * `DRIVER_HEALTHY`: Indicates that the driver is healthy and the cluster\n        is ready for use.\n\n        * `DRIVER_UNAVAILABLE`: Indicates that the driver is unavailable.\n\n        * `SPARK_EXCEPTION`: Indicates that a Spark exception was thrown from\n        the driver.\n\n        * `DRIVER_NOT_RESPONDING`: Indicates that the driver is up but is not\n        responsive, likely due to GC.\n\n        * `DBFS_DOWN`: Indicates that the driver is up but DBFS is down.\n\n        * `METASTORE_DOWN`: Indicates that the driver is up but the metastore is\n        down.\n\n        * `NODE_BLACKLISTED`: Indicates that a node is not allowed by Spark.\n\n        * `PINNED`: Indicates that the cluster was pinned.\n\n        * `UNPINNED`: Indicates that the cluster was unpinned.\n    EventDetails:\n      properties:\n        current_num_workers:\n          type: integer\n          description: The number of nodes in the cluster.\n          format: int32\n        target_num_workers:\n          type: integer\n          description: The targeted number of nodes in the cluster.\n          format: int32\n        previous_attributes:\n          description: The cluster attributes before a cluster was edited.\n          $ref: '#/components/schemas/AwsAttributes'\n        attributes:\n          description: |-\n            * For created clusters, the attributes of the cluster.\n            * For edited clusters, the new attributes of the cluster.\n          $ref: '#/components/schemas/AwsAttributes'\n        previous_cluster_size:\n          description: The size of the cluster before an edit or resize.\n          $ref: '#/components/schemas/ClusterSize'\n        cluster_size:\n          description: The cluster size that was set in the cluster creation or edit.\n          $ref: '#/components/schemas/ClusterSize'\n        cause:\n          description: The cause of a change in target size.\n          $ref: '#/components/schemas/ResizeCause'\n        reason:\n          description: \u003e-\n            A termination reason:\n\n\n            * On a `TERMINATED` event, the reason for the termination.\n\n            * On a `RESIZE_COMPLETE` event, indicates the reason that we failed\n            to acquire some nodes.\n          $ref: '#/components/schemas/TerminationReason'\n        user:\n          type: string\n          description: \u003e-\n            The user that caused the event to occur. (Empty if it was done by\n            Databricks.)\n    AwsAttributes:\n      properties:\n        first_on_demand:\n          type: integer\n          description: \u003e-\n            The first first_on_demand nodes of the cluster are placed on\n            on-demand instances. If this value is greater than 0, the cluster\n            driver node is placed on an on-demand instance. If this value is\n            greater than or equal to the current cluster size, all nodes are\n            placed on on-demand instances. If this value is less than the\n            current cluster size, first_on_demand nodes are placed on on-demand\n            instances and the remainder are placed on `availability` instances.\n            This value does not affect cluster size and cannot be mutated over\n            the lifetime of a cluster.\n          format: int32\n        availability:\n          description: \u003e-\n            Availability type used for all subsequent nodes past the\n            first_on_demand ones. **Note:** If first_on_demand is zero, this\n            availability type is used for the entire cluster.\n          $ref: '#/components/schemas/AwsAvailability'\n        zone_id:\n          type: string\n          description: \u003e-\n            Identifier for the availability zone/datacenter in which the cluster\n            resides. You have three options:\n\n\n            **Specify an availability zone as a string**, for example:\n            “us-west-2a”. The provided availability zone must be in the same\n            region as the Databricks deployment. For example, “us-west-2a” is\n            not a valid zone ID if the Databricks deployment resides in the\n            “us-east-1” region.\n\n\n            **Enable automatic availability zone selection (“Auto-AZ”)**, by\n            setting the value “auto”. Databricks selects the AZ based on\n            available IPs in the workspace subnets and retries in other\n            availability zones if AWS returns insufficient capacity errors.\n\n\n            **Do not specify a value**. If not specified, a default zone is\n            used.\n\n\n            The list of available zones as well as the default value can be\n            found by using the [List\n            zones](https://docs.databricks.com/dev-tools/api/latest/clusters.html#list-zones)\n            API.\n        instance_profile_arn:\n          type: string\n          description: \u003e-\n            Nodes for this cluster are only be placed on AWS instances with this\n            instance profile. If omitted, nodes are placed on instances without\n            an instance profile. The instance profile must have previously been\n            added to the Databricks environment by an account administrator.\n\n\n            This feature may only be available to certain customer plans.\n        spot_bid_price_percent:\n          type: integer\n          description: \u003e-\n            The max price for AWS spot instances, as a percentage of the\n            corresponding instance type’s on-demand price. For example, if this\n            field is set to 50, and the cluster needs a new `i3.xlarge` spot\n            instance, then the max price is half of the price of on-demand\n            `i3.xlarge` instances. Similarly, if this field is set to 200, the\n            max price is twice the price of on-demand `i3.xlarge` instances. If\n            not specified, the default value is 100\\. When spot instances are\n            requested for this cluster, only spot instances whose max price\n            percentage matches this field is considered. For safety, we enforce\n            this field to be no more than 10000.\n          format: int32\n        ebs_volume_type:\n          description: The type of EBS volume that is launched with this cluster.\n          $ref: '#/components/schemas/EbsVolumeType'\n        ebs_volume_count:\n          type: integer\n          description: \u003e-\n            The number of volumes launched for each instance. You can choose up\n            to 10 volumes. This feature is only enabled for supported node\n            types. Legacy node types cannot specify custom EBS volumes. For node\n            types with no instance store, at least one EBS volume needs to be\n            specified; otherwise, cluster creation fails.\n\n\n            These EBS volumes are mounted at `/ebs0`, `/ebs1`, and etc. Instance\n            store volumes are mounted at `/local_disk0`, `/local_disk1`, and\n            etc.\n\n\n            If EBS volumes are attached, Databricks configures Spark to use only\n            the EBS volumes for scratch storage because heterogeneously sized\n            scratch devices can lead to inefficient disk utilization. If no EBS\n            volumes are attached, Databricks configures Spark to use instance\n            store volumes.\n\n\n            If EBS volumes are specified, then the Spark configuration\n            `spark.local.dir` is overridden.\n          format: int32\n        ebs_volume_size:\n          type: integer\n          description: \u003e-\n            The size of each EBS volume (in GiB) launched for each instance. For\n            general purpose SSD, this value must be within the range 100 -\n            4096\\. For throughput optimized HDD, this value must be within the\n            range 500 - 4096\\. Custom EBS volumes cannot be specified for the\n            legacy node types (_memory-optimized_ and _compute-optimized_).\n          format: int32\n        ebs_volume_iops:\n          type: integer\n          description: \u003e-\n            The number of IOPS per EBS gp3 volume.\n\n\n            This value must be between 3000 and 16000.\n\n\n            The value of IOPS and throughput is calculated based on AWS\n            documentation to match the maximum performance of a gp2 volume with\n            the same volume size.\n\n\n            For more information, see the [EBS volume limit\n            calculator](https://github.com/awslabs/aws-support-tools/tree/master/EBS/VolumeLimitCalculator).\n          format: int32\n        ebs_volume_throughput:\n          type: integer\n          description: |-\n            The throughput per EBS gp3 volume, in MiB per second.\n\n            This value must be between 125 and 1000.\n          format: int32\n    ClusterAttributes:\n      properties:\n        cluster_name:\n          type: string\n          description: \u003e-\n            Cluster name requested by the user. This doesn’t have to be unique.\n            If not specified at creation, the cluster name is an empty string.\n        spark_version:\n          type: string\n          description: \u003e-\n            The runtime version of the cluster, for example “5.0.x-scala2.11”.\n            You can retrieve a list of available runtime versions by using the\n            [Runtime\n            versions](https://docs.databricks.com/dev-tools/api/latest/clusters.html#runtime-versions)\n            API call.\n        spark_conf:\n          description: \u003e-\n            An object containing a set of optional, user-specified Spark\n            configuration key-value pairs. You can also pass in a string of\n            extra JVM options to the driver and the executors via\n            `spark.driver.extraJavaOptions` and\n            `spark.executor.extraJavaOptions` respectively.\n\n\n            Example Spark confs: `{\"spark.speculation\": true,\n            \"spark.streaming.ui.retainedBatches\": 5}` or\n            `{\"spark.driver.extraJavaOptions\": \"-verbose:gc\n            -XX:+PrintGCDetails\"}`\n          $ref: '#/components/schemas/SparkConfPair'\n        aws_attributes:\n          description: \u003e-\n            Attributes related to clusters running on Amazon Web Services. If\n            not specified at cluster creation, a set of default values are used.\n          $ref: '#/components/schemas/AwsAttributes'\n        node_type_id:\n          type: string\n          description: \u003e-\n            This field encodes, through a single value, the resources available\n            to each of the Spark nodes in this cluster. For example, the Spark\n            nodes can be provisioned and optimized for memory or compute\n            intensive workloads A list of available node types can be retrieved\n            by using the [List node\n            types](https://docs.databricks.com/dev-tools/api/latest/clusters.html#list-node-types)\n            API call.\n        driver_node_type_id:\n          type: string\n          description: \u003e-\n            The node type of the Spark driver. This field is optional; if unset,\n            the driver node type is set as the same value as `node_type_id`\n            defined above.\n        ssh_public_keys:\n          type: array\n          description: \u003e-\n            SSH public key contents that is added to each Spark node in this\n            cluster. The corresponding private keys can be used to login with\n            the user name `ubuntu` on port `2200`. Up to 10 keys can be\n            specified.\n          items:\n            type: string\n        custom_tags:\n          description: \u003e-\n            An object containing a set of tags for cluster resources. Databricks\n            tags all cluster resources (such as AWS instances and EBS volumes)\n            with these tags in addition to default_tags.\n\n\n            **Note**:\n\n\n            * Tags are not supported on legacy node types such as\n            compute-optimized and memory-optimized\n\n            * Databricks allows at most 45 custom tags\n          $ref: '#/components/schemas/ClusterTag'\n        cluster_log_conf:\n          description: \u003e-\n            The configuration for delivering Spark logs to a long-term storage\n            destination. Only one destination can be specified for one cluster.\n            If the conf is given, the logs is delivered to the destination every\n            `5 mins`. The destination of driver logs is\n            `\u003cdestination\u003e/\u003ccluster-ID\u003e/driver`, while the destination of\n            executor logs is `\u003cdestination\u003e/\u003ccluster-ID\u003e/executor`.\n          $ref: '#/components/schemas/ClusterLogConf'\n        init_scripts:\n          type: array\n          description: \u003e-\n            The configuration for storing init scripts. Any number of\n            destinations can be specified. The scripts are executed sequentially\n            in the order provided. If `cluster_log_conf` is specified, init\n            script logs are sent to `\u003cdestination\u003e/\u003ccluster-ID\u003e/init_scripts`.\n          items:\n            $ref: '#/components/schemas/InitScriptInfo'\n        docker_image:\n          description: \u003e-\n            Docker image for a [custom\n            container](https://docs.databricks.com/clusters/custom-containers.html).\n          $ref: '#/components/schemas/DockerImage'\n        spark_env_vars:\n          description: \u003e-\n            An object containing a set of optional, user-specified environment\n            variable key-value pairs. Key-value pairs of the form (X,Y) are\n            exported as is (that is, `export X='Y'`) while launching the driver\n            and workers.\n\n\n            In order to specify an additional set of `SPARK_DAEMON_JAVA_OPTS`,\n            we recommend appending them to `$SPARK_DAEMON_JAVA_OPTS` as shown in\n            the following example. This ensures that all default databricks\n            managed environmental variables are included as well.\n\n\n            Example Spark environment variables: `{\"SPARK_WORKER_MEMORY\":\n            \"28000m\", \"SPARK_LOCAL_DIRS\": \"/local_disk0\"}` or\n            `{\"SPARK_DAEMON_JAVA_OPTS\": \"$SPARK_DAEMON_JAVA_OPTS\n            -Dspark.shuffle.service.enabled=true\"}`\n          $ref: '#/components/schemas/SparkEnvPair'\n        autotermination_minutes:\n          type: integer\n          description: \u003e-\n            Automatically terminates the cluster after it is inactive for this\n            time in minutes. If not set, this cluster is not be automatically\n            terminated. If specified, the threshold must be between 10 and 10000\n            minutes. You can also set this value to 0 to explicitly disable\n            automatic termination.\n          format: int32\n        enable_elastic_disk:\n          type: boolean\n          description: \u003e-\n            Autoscaling Local Storage: when enabled, this cluster dynamically\n            acquires additional disk space when its Spark workers are running\n            low on disk space. This feature requires specific AWS permissions to\n            function correctly. Refer to [Autoscaling local\n            storage](https://docs.databricks.com/clusters/configure.html#autoscaling-local-storage)\n            for details.\n        instance_pool_id:\n          type: string\n          description: \u003e-\n            The optional ID of the instance pool to which the cluster belongs.\n            Refer to\n            [Pools](https://docs.databricks.com/clusters/instance-pools/index.html)\n            for details.\n        cluster_source:\n          description: \u003e-\n            Determines whether the cluster was created by a user through the UI,\n            created by the Databricks Jobs scheduler, or through an API request.\n          $ref: '#/components/schemas/ClusterSource'\n        policy_id:\n          type: string\n          description: \u003e-\n            A [cluster\n            policy](https://docs.databricks.com/dev-tools/api/latest/policies.html)\n            ID.\n    ClusterSize:\n      properties:\n        num_workers:\n          type: integer\n          description: \u003e-\n            If num_workers, number of worker nodes that this cluster must have.\n            A cluster has one Spark driver and num_workers executors for a total\n            of num_workers + 1 Spark nodes. When reading the properties of a\n            cluster, this field reflects the desired number of workers rather\n            than the actual number of workers. For instance, if a cluster is\n            resized from 5 to 10 workers, this field is updated to reflect the\n            target size of 10 workers, whereas the workers listed in executors\n            gradually increase from 5 to 10 as the new nodes are provisioned.\n          format: int32\n        autoscale:\n          description: \u003e-\n            If autoscale, parameters needed in order to automatically scale\n            clusters up and down based on load.\n          $ref: '#/components/schemas/AutoScale'\n    ListOrder:\n      type: string\n      enum:\n        - DESC\n        - ASC\n      description: |-\n        * `DESC`: Descending order.\n        * `ASC`: Ascending order.\n    ResizeCause:\n      type: string\n      enum:\n        - AUTOSCALE\n        - USER_REQUEST\n        - AUTORECOVERY\n      properties: \u003e-\n        * `AUTOSCALE`: Automatically resized based on load.\n\n        * `USER_REQUEST`: User requested a new size.\n\n        * `AUTORECOVERY`: Autorecovery monitor resized the cluster after it lost\n        a node.\n    ClusterLogConf:\n      properties:\n        dbfs:\n          description: \u003e-\n            DBFS location of cluster log. Destination must be provided. For\n            example, `{ \"dbfs\" : { \"destination\" : \"dbfs:/home/cluster_log\" } }`\n          $ref: '#/components/schemas/DbfsStorageInfo'\n        s3:\n          description: \u003e-\n            S3 location of cluster log. `destination` and either `region` or\n            `endpoint` must be provided. For example, `{ \"s3\": { \"destination\" :\n            \"s3://cluster_log_bucket/prefix\", \"region\" : \"us-west-2\" } }`\n          $ref: '#/components/schemas/S3StorageInfo'\n    InitScriptInfo:\n      properties:\n        dbfs:\n          description: \u003e-\n            DBFS location of init script. Destination must be provided. For\n            example, `{ \"dbfs\" : { \"destination\" : \"dbfs:/home/init_script\" } }`\n          $ref: '#/components/schemas/DbfsStorageInfo'\n        file:\n          description: \u003e-\n            File location of init script. Destination must be provided. For\n            example, `{ \"file\" : { \"destination\" : \"file:/my/local/file.sh\" } }`\n          $ref: '#/components/schemas/FileStorageInfo'\n        S3:\n          description: \u003e-\n            S3 location of init script. Destination and either region or\n            endpoint must be provided. For example, `{ \"s3\": { \"destination\" :\n            \"s3://init_script_bucket/prefix\", \"region\" : \"us-west-2\" } }`\n          $ref: '#/components/schemas/S3StorageInfo'\n    ClusterTag:\n      properties:\n        type: string\n        description: \u003e-\n          The value of the tag. The value length must be less than or equal to\n          255 UTF-8 characters. For a list of all restrictions, see AWS Tag\n          Restrictions:\n          \u003chttps://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html#tag-restrictions\u003e\n    DbfsStorageInfo:\n      properties:\n        destination:\n          type: string\n          description: 'DBFS destination. Example: `dbfs:/my/path`'\n    FileStorageInfo:\n      properties:\n        destination:\n          type: string\n          description: 'File destination. Example: `file:/my/file.sh`'\n    DockerImage:\n      properties:\n        url:\n          type: string\n          description: URL for the Docker image.\n        basic_auth:\n          description: Basic authentication information for Docker repository.\n          $ref: '#/components/schemas/DockerBasicAuth'\n    DockerBasicAuth:\n      properties:\n        username:\n          type: string\n          description: User name for the Docker repository.\n        password:\n          type: string\n          description: Password for the Docker repository.\n    LogSyncStatus:\n      properties:\n        last_attempted:\n          type: integer\n          description: \u003e-\n            The timestamp of last attempt. If the last attempt fails,\n            last_exception contains the exception in the last attempt.\n          format: int64\n        last_exception:\n          type: string\n          description: \u003e-\n            The exception thrown in the last attempt, it would be null (omitted\n            in the response) if there is no exception in last attempted.\n    NodeType:\n      properties:\n        node_type_id:\n          type: string\n          required: true\n          description: Unique identifier for this node type. This field is required.\n        memory_mb:\n          type: integer\n          required: true\n          description: Memory (in MB) available for this node type. This field is required.\n          format: int32\n        num_cores:\n          type: number\n          description: \u003e-\n            Number of CPU cores available for this node type. This can be\n            fractional if the number of cores on a machine instance is not\n            divisible by the number of Spark nodes on that machine. This field\n            is required.\n          format: float\n        description:\n          type: string\n          required: true\n          description: \u003e-\n            A string description associated with this node type. This field is\n            required.\n        instance_type_id:\n          type: string\n          required: true\n          description: \u003e-\n            An identifier for the type of hardware that this node runs on. This\n            field is required.\n        is_deprecated:\n          type: boolean\n          description: \u003e-\n            Whether the node type is deprecated. Non-deprecated node types offer\n            greater performance.\n        node_info:\n          description: Node type info reported by the cloud provider.\n          $ref: '#/components/schemas/ClusterCloudProviderNodeInfo'\n    ClusterCloudProviderNodeInfo:\n      properties:\n        status:\n          description: Status as reported by the cloud provider.\n          $ref: '#/components/schemas/ClusterCloudProviderNodeStatus'\n        available_core_quota:\n          type: integer\n          description: Available CPU core quota.\n          format: int32\n        total_core_quota:\n          type: integer\n          description: Total CPU core quota.\n          format: int32\n    ClusterCloudProviderNodeStatus:\n      properties:\n        NotEnabledOnSubscription:\n          type: ''\n          description: Node type not available for subscription.\n        NotAvailableInRegion:\n          type: ''\n          description: Node type not available in region.\n    ParameterPair:\n      type: object\n      additionalProperties: true\n      description: \u003e-\n        An object with additional information about why a cluster was\n        terminated. The object keys are one of `TerminationParameter` and the\n        value is the termination information.\n    SparkConfPair:\n      type: object\n      additionalProperties: true\n      description: \u003e-\n        An arbitrary object where the object key is a configuration propery name\n        and the value is a configuration property value.\n    SparkEnvPair:\n      type: object\n      additionalProperties: true\n      description: \u003e-\n        An arbitrary object where the object key is an environment variable name\n        and the value is an environment variable value.\n    SparkNode:\n      properties:\n        private_ip:\n          type: string\n          description: \u003e-\n            Private IP address (typically a 10.x.x.x address) of the Spark node.\n            This is different from the private IP address of the host instance.\n        public_dns:\n          type: string\n          description: \u003e-\n            Public DNS address of this node. This address can be used to access\n            the Spark JDBC server on the driver node. To communicate with the\n            JDBC server, traffic must be manually authorized by adding security\n            group rules to the “worker-unmanaged” security group via the AWS\n            console.\n        node_id:\n          type: string\n          description: Globally unique identifier for this node.\n        instance_id:\n          type: string\n          description: \u003e-\n            Globally unique identifier for the host instance from the cloud\n            provider.\n        start_timestamp:\n          type: integer\n          description: The timestamp (in millisecond) when the Spark node is launched.\n          format: int64\n        node_aws_attributes:\n          description: Attributes specific to AWS for a Spark node.\n          $ref: '#/components/schemas/SparkNodeAwsAttributes'\n        host_private_ip:\n          type: string\n          description: The private IP address of the host instance.\n    SparkVersion:\n      properties:\n        key:\n          type: string\n          description: \u003e-\n            [Databricks Runtime\n            version](https://docs.databricks.com/dev-tools/api/latest/index.html#programmatic-version)\n            key, for example `7.3.x-scala2.12`. The value that must be provided\n            as the `spark_version` when creating a new cluster. The exact\n            runtime version may change over time for a “wildcard” version (that\n            is, `7.3.x-scala2.12` is a “wildcard” version) with minor bug fixes.\n        name:\n          type: string\n          description: \u003e-\n            A descriptive name for the runtime version, for example “Databricks\n            Runtime 7.3 LTS”.\n    TerminationReason:\n      properties:\n        code:\n          description: Status code indicating why a cluster was terminated.\n          $ref: '#/components/schemas/TerminationCode'\n        type:\n          description: Reason indicating why a cluster was terminated.\n          $ref: '#/components/schemas/TerminationType'\n        parameters:\n          description: \u003e-\n            Object containing a set of parameters that provide information about\n            why a cluster was terminated.\n          $ref: '#/components/schemas/ParameterPair'\n    PoolClusterTerminationCode:\n      properties:\n        INSTANCE_POOL_MAX_CAPACITY_FAILURE:\n          type: ''\n          description: The pool max capacity has been reached.\n        INSTANCE_POOL_NOT_FOUND_FAILURE:\n          type: ''\n          description: \u003e-\n            The pool specified by the cluster is no longer active or doesn’t\n            exist.\n    ClusterSource:\n      properties:\n        UI:\n          type: ''\n          description: Cluster created through the UI.\n        JOB:\n          type: ''\n          description: Cluster created by the Databricks job scheduler.\n        API:\n          type: ''\n          description: Cluster created through an API call.\n    ClusterState:\n      properties:\n        PENDING:\n          type: ''\n          description: Indicates that a cluster is in the process of being created.\n        RUNNING:\n          type: ''\n          description: Indicates that a cluster has been started and is ready for use.\n        RESTARTING:\n          type: ''\n          description: Indicates that a cluster is in the process of restarting.\n        RESIZING:\n          type: ''\n          description: \u003e-\n            Indicates that a cluster is in the process of adding or removing\n            nodes.\n        TERMINATING:\n          type: ''\n          description: Indicates that a cluster is in the process of being destroyed.\n        TERMINATED:\n          type: ''\n          description: Indicates that a cluster has been successfully destroyed.\n        ERROR:\n          type: ''\n          description: \u003e-\n            This state is no longer used. It was used to indicate a cluster that\n            failed to be created. `TERMINATING` and `TERMINATED` are used\n            instead.\n        UNKNOWN:\n          type: ''\n          description: \u003e-\n            Indicates that a cluster is in an unknown state. A cluster should\n            never be in this state.\n    TerminationCode:\n      properties:\n        USER_REQUEST:\n          type: ''\n          description: \u003e-\n            A user terminated the cluster directly. Parameters should include a\n            `username` field that indicates the specific user who terminated the\n            cluster.\n        JOB_FINISHED:\n          type: ''\n          description: \u003e-\n            The cluster was launched by a job, and terminated when the job\n            completed.\n        INACTIVITY:\n          type: ''\n          description: The cluster was terminated since it was idle.\n        CLOUD_PROVIDER_SHUTDOWN:\n          type: ''\n          description: \u003e-\n            The instance that hosted the Spark driver was terminated by the\n            cloud provider. In AWS, for example, AWS may retire instances and\n            directly shut them down. Parameters should include an\n            `aws_instance_state_reason` field indicating the AWS-provided reason\n            why the instance was terminated.\n        COMMUNICATION_LOST:\n          type: ''\n          description: \u003e-\n            Databricks lost connection to services on the driver instance. For\n            example, this can happen when problems arise in cloud networking\n            infrastructure, or when the instance itself becomes unhealthy.\n        CLOUD_PROVIDER_LAUNCH_FAILURE:\n          type: ''\n          description: \u003e-\n            Databricks experienced a cloud provider failure when requesting\n            instances to launch clusters. For example, AWS limits the number of\n            running instances and EBS volumes. If you ask Databricks to launch a\n            cluster that requires instances or EBS volumes that exceed your AWS\n            limit, the cluster fails with this status code. Parameters should\n            include one of `aws_api_error_code`, `aws_instance_state_reason`, or\n            `aws_spot_request_status` to indicate the AWS-provided reason why\n            Databricks could not request the required instances for the cluster.\n        SPARK_STARTUP_FAILURE:\n          type: ''\n          description: \u003e-\n            The cluster failed to initialize. Possible reasons may include\n            failure to create the environment for Spark or issues launching the\n            Spark master and worker processes.\n        INVALID_ARGUMENT:\n          type: ''\n          description: \u003e-\n            Cannot launch the cluster because the user specified an invalid\n            argument. For example, the user might specify an invalid runtime\n            version for the cluster.\n        UNEXPECTED_LAUNCH_FAILURE:\n          type: ''\n          description: \u003e-\n            While launching this cluster, Databricks failed to complete critical\n            setup steps, terminating the cluster.\n        INTERNAL_ERROR:\n          type: ''\n          description: \u003e-\n            Databricks encountered an unexpected error that forced the running\n            cluster to be terminated. Contact Databricks support for additional\n            details.\n        SPARK_ERROR:\n          type: ''\n          description: \u003e-\n            The Spark driver failed to start. Possible reasons may include\n            incompatible libraries and initialization scripts that corrupted the\n            Spark container.\n        METASTORE_COMPONENT_UNHEALTHY:\n          type: ''\n          description: \u003e-\n            The cluster failed to start because the external metastore could not\n            be reached. Refer to\n            [Troubleshooting](https://docs.databricks.com/data/metastores/external-hive-metastore.html#troubleshooting).\n        DBFS_COMPONENT_UNHEALTHY:\n          type: ''\n          description: \u003e-\n            The cluster failed to start because Databricks File System (DBFS)\n            could not be reached.\n        DRIVER_UNREACHABLE:\n          type: ''\n          description: \u003e-\n            Databricks was not able to access the Spark driver, because it was\n            not reachable.\n        DRIVER_UNRESPONSIVE:\n          type: ''\n          description: \u003e-\n            Databricks was not able to access the Spark driver, because it was\n            unresponsive.\n        INSTANCE_UNREACHABLE:\n          type: ''\n          description: \u003e-\n            Databricks was not able to access instances in order to start the\n            cluster. This can be a transient networking issue. If the problem\n            persists, this usually indicates a networking environment\n            misconfiguration.\n        CONTAINER_LAUNCH_FAILURE:\n          type: ''\n          description: \u003e-\n            Databricks was unable to launch containers on worker nodes for the\n            cluster. Have your admin check your network configuration.\n        INSTANCE_POOL_CLUSTER_FAILURE:\n          type: ''\n          description: \u003e-\n            Pool backed cluster specific failure. Refer to\n            [Pools](https://docs.databricks.com/clusters/instance-pools/index.html)\n            for details.\n        REQUEST_REJECTED:\n          type: ''\n          description: \u003e-\n            Databricks cannot handle the request at this moment. Try again later\n            and contact Databricks if the problem persists.\n        INIT_SCRIPT_FAILURE:\n          type: ''\n          description: \u003e-\n            Databricks cannot load and run a cluster-scoped init script on one\n            of the cluster’s nodes, or the init script terminates with a\n            non-zero exit code. Refer to [Init script\n            logs](https://docs.databricks.com/clusters/init-scripts.html#init-script-log).\n        TRIAL_EXPIRED:\n          type: ''\n          description: The Databricks trial subscription expired.\n    TerminationType:\n      properties:\n        SUCCESS:\n          type: ''\n          description: Termination succeeded.\n        CLIENT_ERROR:\n          type: ''\n          description: \u003e-\n            Non-retriable. Client must fix parameters before reattempting the\n            cluster creation.\n        SERVICE_FAULT:\n          type: ''\n          description: Databricks service issue. Client can retry.\n        CLOUD_FAILURE:\n          type: ''\n          description: \u003e-\n            Cloud provider infrastructure issue. Client can retry after the\n            underlying issue is resolved.\n    TerminationParameter:\n      properties:\n        username:\n          type: ''\n          description: The username of the user who terminated the cluster.\n        aws_api_error_code:\n          type: ''\n          description: \u003e-\n            The AWS provided error code describing why cluster nodes could not\n            be provisioned. For example, `InstanceLimitExceeded` indicates that\n            the limit of EC2 instances for a specific instance type has been\n            exceeded. For reference, see:\n            \u003chttps://docs.aws.amazon.com/AWSEC2/latest/APIReference/query-api-troubleshooting.html\u003e.\n        aws_instance_state_reason:\n          type: ''\n          description: \u003e-\n            The AWS provided state reason describing why the driver node was\n            terminated. For example, `Client.VolumeLimitExceeded` indicates that\n            the limit of EBS volumes or total EBS volume storage has been\n            exceeded. For reference, see\n            \u003chttps://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_StateReason.html\u003e.\n        aws_spot_request_status:\n          type: ''\n          description: \u003e-\n            Describes why a spot request could not be fulfilled. For example,\n            `price-too-low` indicates that the max price was lower than the\n            current spot price. For reference, see:\n            \u003chttps://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-bid-status.html#spot-instance-bid-status-understand\u003e.\n        aws_spot_request_fault_code:\n          type: ''\n          description: \u003e-\n            Provides additional details when a spot request fails. For example\n            `InsufficientFreeAddressesInSubnet` indicates the subnet does not\n            have free IP addresses to accommodate the new instance. For\n            reference, see\n            \u003chttps://docs.aws.amazon.com/cli/latest/reference/ec2/describe-spot-instance-requests.html\u003e.\n        aws_impaired_status_details:\n          type: ''\n          description: \u003e-\n            The AWS provided status check which failed and induced a node loss.\n            This status may correspond to a failed instance or system check. For\n            reference, see\n            \u003chttps://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-system-instance-status-check.html\u003e.\n        aws_instance_status_event:\n          type: ''\n          description: \u003e-\n            The AWS provided scheduled event (for example reboot) which induced\n            a node loss. For reference, see\n            \u003chttps://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-instances-status-check_sched.html\u003e.\n        aws_error_message:\n          type: ''\n          description: \u003e-\n            Human-readable context of various failures from AWS. This field is\n            unstructured, and its exact format is subject to change.\n        databricks_error_message:\n          type: ''\n          description: \u003e-\n            Additional context that may explain the reason for cluster\n            termination. This field is unstructured, and its exact format is\n            subject to change.\n        inactivity_duration_min:\n          type: ''\n          description: \u003e-\n            An idle cluster was shut down after being inactive for this\n            duration.\n        instance_id:\n          type: ''\n          description: The ID of the instance that was hosting the Spark driver.\n        instance_pool_id:\n          type: ''\n          description: The ID of the instance pool the cluster is using.\n        instance_pool_error_code:\n          type: ''\n          description: \u003e-\n            The [error\n            code](https://docs.databricks.com/dev-tools/api/latest/clusters.html#clusterterminationreasonpoolclusterterminationcode)\n            for cluster failures specific to a pool.\n    S3StorageInfo:\n      properties:\n        destination:\n          type: string\n          description: \u003e-\n            S3 destination. For example: `s3://my-bucket/some-prefix` You must\n            configure the cluster with an instance profile and the instance\n            profile must have write access to the destination. You _cannot_ use\n            AWS keys.\n        region:\n          type: string\n          description: \u003e-\n            S3 region. For example: `us-west-2`. Either region or endpoint must\n            be set. If both are set, endpoint is used.\n        endpoint:\n          type: string\n          description: \u003e-\n            S3 endpoint. For example: `https://s3-us-west-2.amazonaws.com`.\n            Either region or endpoint must be set. If both are set, endpoint is\n            used.\n        enable_encryption:\n          type: boolean\n          description: (Optional)Enable server side encryption, `false` by default.\n        encryption_type:\n          type: string\n          description: \u003e-\n            (Optional) The encryption type, it could be `sse-s3` or `sse-kms`.\n            It is used only when encryption is enabled and the default type is\n            `sse-s3`.\n        kms_key:\n          type: string\n          description: \u003e-\n            (Optional) KMS key used if encryption is enabled and encryption type\n            is set to `sse-kms`.\n        canned_acl:\n          type: string\n          description: \u003e-\n            (Optional) Set canned access control list. For example:\n            `bucket-owner-full-control`. If canned_acl is set, the cluster\n            instance profile must have `s3:PutObjectAcl` permission on the\n            destination bucket and prefix. The full list of possible canned ACLs\n            can be found at\n            \u003chttps://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl\u003e.\n            By default only the object owner gets full control. If you are using\n            cross account role for writing data, you may want to set\n            `bucket-owner-full-control` to make bucket owner able to read the\n            logs.\n    SparkNodeAwsAttributes:\n      properties:\n        is_spot:\n          type: boolean\n          description: Whether this node is on an Amazon spot instance.\n    AwsAvailability:\n      properties:\n        SPOT:\n          type: ''\n          description: Use spot instances.\n        ON_DEMAND:\n          type: ''\n          description: Use on-demand instances.\n        SPOT_WITH_FALLBACK:\n          type: ''\n          description: \u003e-\n            Preferably use spot instances, but fall back to on-demand instances\n            if spot instances cannot be acquired (for example, if AWS spot\n            prices are too high).\n    EbsVolumeType:\n      properties:\n        GENERAL_PURPOSE_SSD:\n          type: ''\n          description: Provision extra storage using AWS gp2 EBS volumes.\n        THROUGHPUT_OPTIMIZED_HDD:\n          type: ''\n          description: Provision extra storage using AWS st1 volumes.\n    ClusterLibraryStatuses:\n      properties:\n        cluster_id:\n          type: string\n          description: Unique identifier for the cluster.\n        library_statuses:\n          type: array\n          description: Status of all libraries on the cluster.\n          items:\n            $ref: '#/components/schemas/LibraryFullStatus'\n    Library:\n      properties:\n        jar:\n          type: string\n          example: dbfs:/my-jar.jar\n          description: \u003e-\n            If jar, URI of the JAR to be installed. DBFS and S3 URIs are\n            supported. For example: `{ \"jar\": \"dbfs:/mnt/databricks/library.jar\"\n            }` or `{ \"jar\": \"s3://my-bucket/library.jar\" }`. If S3 is used, make\n            sure the cluster has read access on the library. You may need to\n            launch the cluster with an instance profile to access the S3 URI.\n        egg:\n          type: string\n          example: dbfs:/my/egg\n          description: \u003e-\n            If egg, URI of the egg to be installed. DBFS and S3 URIs are\n            supported. For example: `{ \"egg\": \"dbfs:/my/egg\" }` or `{ \"egg\":\n            \"s3://my-bucket/egg\" }`. If S3 is used, make sure the cluster has\n            read access on the library. You may need to launch the cluster with\n            an instance profile to access the S3 URI.\n        whl:\n          type: string\n          example: dbfs:/my/whl\n          description: \u003e-\n            If whl, URI of the wheel or zipped wheels to be installed. DBFS and\n            S3 URIs are supported. For example: `{ \"whl\": \"dbfs:/my/whl\" }` or\n            `{ \"whl\": \"s3://my-bucket/whl\" }`. If S3 is used, make sure the\n            cluster has read access on the library. You may need to launch the\n            cluster with an instance profile to access the S3 URI. Also the\n            wheel file name needs to use the [correct\n            convention](https://www.python.org/dev/peps/pep-0427/#file-format).\n            If zipped wheels are to be installed, the file name suffix should be\n            `.wheelhouse.zip`.\n        pypi:\n          description: \u003e-\n            If pypi, specification of a PyPI library to be installed. Specifying\n            the `repo` field is optional and if not specified, the default pip\n            index is used. For example: `{ \"package\": \"simplejson\", \"repo\":\n            \"https://my-repo.com\" }`\n          $ref: '#/components/schemas/PythonPyPiLibrary'\n        maven:\n          description: \u003e-\n            If maven, specification of a Maven library to be installed. For\n            example: `{ \"coordinates\": \"org.jsoup:jsoup:1.7.2\" }`\n          $ref: '#/components/schemas/MavenLibrary'\n        cran:\n          description: If cran, specification of a CRAN library to be installed.\n          $ref: '#/components/schemas/RCranLibrary'\n    LibraryFullStatus:\n      properties:\n        library:\n          description: Unique identifier for the library.\n          $ref: '#/components/schemas/Library'\n        status:\n          description: Status of installing the library on the cluster.\n          $ref: '#/components/schemas/LibraryInstallStatus'\n        messages:\n          type: array\n          description: \u003e-\n            All the info and warning messages that have occurred so far for this\n            library.\n          items:\n            type: string\n        is_library_for_all_clusters:\n          type: boolean\n          description: \u003e-\n            Whether the library was set to be installed on all clusters via the\n            libraries UI.\n    MavenLibrary:\n      properties:\n        coordinates:\n          type: string\n          example: org.jsoup:jsoup:1.7.2\n          required: true\n          description: \u003e-\n            Gradle-style Maven coordinates. For example:\n            `org.jsoup:jsoup:1.7.2`. This field is required.\n        repo:\n          type: string\n          example: https://my-repo.com\n          description: \u003e-\n            Maven repo to install the Maven package from. If omitted, both Maven\n            Central Repository and Spark Packages are searched.\n        exclusions:\n          type: array\n          example:\n            - slf4j:slf4j\n            - '*:hadoop-client'\n          description: \u003e-\n            List of dependences to exclude. For example: `[\"slf4j:slf4j\",\n            \"*:hadoop-client\"]`.\n\n\n            Maven dependency exclusions:\n            \u003chttps://maven.apache.org/guides/introduction/introduction-to-optional-and-excludes-dependencies.html\u003e.\n          items:\n            type: string\n    PythonPyPiLibrary:\n      properties:\n        package:\n          type: string\n          example: simplejson==3.8.0\n          required: true\n          description: \u003e-\n            The name of the PyPI package to install. An optional exact version\n            specification is also supported. Examples: `simplejson` and\n            `simplejson==3.8.0`. This field is required.\n        repo:\n          type: string\n          example: https://my-repo.com\n          description: \u003e-\n            The repository where the package can be found. If not specified, the\n            default pip index is used.\n    RCranLibrary:\n      properties:\n        package:\n          type: string\n          example: geojson\n          required: true\n          description: The name of the CRAN package to install. This field is required.\n        repo:\n          type: string\n          example: https://my-repo.com\n          description: \u003e-\n            The repository where the package can be found. If not specified, the\n            default CRAN repo is used.\n    LibraryInstallStatus:\n      type: string\n      enum:\n        - PENDING\n        - RESOLVING\n        - INSTALLING\n        - INSTALLED\n        - SKIPPED\n        - FAILED\n        - UNINSTALL_ON_RESTART\n      description: \u003e-\n        * `PENDING`: No action has yet been taken to install the library. This\n        state should be very short lived.\n\n        * `RESOLVING`: Metadata necessary to install the library is being\n        retrieved from the provided repository. For Jar, Egg, and Whl libraries,\n        this step is a no-op.\n\n        * `INSTALLING`: The library is actively being installed, either by\n        adding resources to Spark or executing system commands inside the Spark\n        nodes.\n\n        * `INSTALLED`: The library has been successfully instally.\n\n        * `SKIPPED`: Installation on a Databricks Runtime 7.0 or above cluster\n        was skipped due to Scala version incompatibility.\n\n        * `FAILED`: Some step in installation failed. More information can be\n        found in the messages field.\n\n        * `UNINSTALL_ON_RESTART`: The library has been marked for removal.\n        Libraries can be removed only when clusters are restarted, so libraries\n        that enter this state remains until the cluster is restarted.\n    Error:\n      type: object\n      properties:\n        error_code:\n          type: string\n          description: Error code\n          example: INTERNAL_ERROR\n        message:\n          type: string\n          description: Human-readable error message that describes the cause of the error.\n          example: Unexpected error.\n    AccessControlList:\n      type: object\n      properties:\n        access_control_list:\n          type: array\n          description: List of permissions to set on the job.\n          items:\n            $ref: '#/components/schemas/AccessControlRequest'\n    AccessControlRequest:\n      oneOf:\n        - $ref: '#/components/schemas/AccessControlRequestForUser'\n        - $ref: '#/components/schemas/AccessControlRequestForGroup'\n    AccessControlRequestForUser:\n      type: object\n      properties:\n        user_name:\n          $ref: '#/components/schemas/UserName'\n        permission_level:\n          $ref: '#/components/schemas/PermissionLevel'\n    AccessControlRequestForGroup:\n      type: object\n      properties:\n        group_name:\n          $ref: '#/components/schemas/GroupName'\n        permission_level:\n          $ref: '#/components/schemas/PermissionLevelForGroup'\n    AccessControlRequestForServicePrincipal:\n      type: object\n      properties:\n        service_principal_name:\n          $ref: '#/components/schemas/ServicePrincipalName'\n        permission_level:\n          $ref: '#/components/schemas/PermissionLevel'\n    UserName:\n      description: Email address for the user.\n      type: string\n      example: jsmith@example.com\n    GroupName:\n      description: \u003e-\n        Group name. There are two built-in groups: `users` for all users, and\n        `admins` for administrators.\n      type: string\n      example: users\n    ServicePrincipalName:\n      description: Name of an Azure service principal.\n      type: string\n      example: 9f0621ee-b52b-11ea-b3de-0242ac130004\n    PermissionLevel:\n      description: Permission level to grant.\n      oneOf:\n        - $ref: '#/components/schemas/CanManage'\n        - $ref: '#/components/schemas/CanManageRun'\n        - $ref: '#/components/schemas/CanView'\n        - $ref: '#/components/schemas/IsOwner'\n    PermissionLevelForGroup:\n      description: Permission level to grant.\n      oneOf:\n        - $ref: '#/components/schemas/CanManage'\n        - $ref: '#/components/schemas/CanManageRun'\n        - $ref: '#/components/schemas/CanView'\n    CanManage:\n      type: string\n      description: Permission to manage the job.\n      enum:\n        - CAN_MANAGE\n    CanManageRun:\n      type: string\n      description: Permission to run and/or manage runs for the job.\n      enum:\n        - CAN_MANAGE_RUN\n    CanView:\n      type: string\n      description: Permission to view the settings of the job.\n      enum:\n        - CAN_VIEW\n    IsOwner:\n      type: string\n      description: Perimssion that represents ownership of the job.\n      enum:\n        - IS_OWNER\n    RunSubmitTaskSettings:\n      properties:\n        task_key:\n          $ref: '#/components/schemas/TaskKey'\n        depends_on:\n          $ref: '#/components/schemas/TaskDependencies'\n        existing_cluster_id:\n          type: string\n          example: 0923-164208-meows279\n          description: \u003e-\n            If existing_cluster_id, the ID of an existing cluster that is used\n            for all runs of this task. When running tasks on an existing\n            cluster, you may need to manually restart the cluster if it stops\n            responding. We suggest running jobs on new clusters for greater\n            reliability.\n        new_cluster:\n          description: \u003e-\n            If new_cluster, a description of a cluster that is created for each\n            run.\n          example: null\n          $ref: '#/components/schemas/NewCluster'\n        job_cluster_key:\n          type: string\n          description: \u003e-\n            _Reserved for future use_. See [Jobs API\n            updates](https://docs.databricks.com/data-engineering/jobs/jobs-api-updates.html).\n        notebook_task:\n          description: \u003e-\n            If notebook_task, indicates that this task must run a notebook. This\n            field may not be specified in conjunction with spark_jar_task.\n          $ref: '#/components/schemas/NotebookTask'\n        spark_jar_task:\n          description: If spark_jar_task, indicates that this task must run a JAR.\n          $ref: '#/components/schemas/SparkJarTask'\n        spark_python_task:\n          description: \u003e-\n            If spark_python_task, indicates that this task must run a Python\n            file.\n          $ref: '#/components/schemas/SparkPythonTask'\n        spark_submit_task:\n          description: \u003e-\n            If spark_submit_task, indicates that this task must be launched by\n            the spark submit script.\n          $ref: '#/components/schemas/SparkSubmitTask'\n        pipeline_task:\n          description: If pipeline_task, indicates that this task must execute a Pipeline.\n          $ref: '#/components/schemas/PipelineTask'\n        python_wheel_task:\n          description: \u003e-\n            If python_wheel_task, indicates that this job must execute a\n            PythonWheel.\n          $ref: '#/components/schemas/PythonWheelTask'\n        libraries:\n          type: array\n          description: \u003e-\n            An optional list of libraries to be installed on the cluster that\n            executes the task. The default value is an empty list.\n          items:\n            $ref: '#/components/schemas/Library'\n        timeout_seconds:\n          type: integer\n          example: 86400\n          description: \u003e-\n            An optional timeout applied to each run of this job task. The\n            default behavior is to have no timeout.\n          format: int32\n    RunSubmitSettings:\n      type: object\n      properties:\n        tasks:\n          type: array\n          maxItems: 100\n          items:\n            $ref: '#/components/schemas/RunSubmitTaskSettings'\n          example:\n            - task_key: Sessionize\n              description: Extracts session data from events\n              depends_on: []\n              existing_cluster_id: 0923-164208-meows279\n              spark_jar_task:\n                main_class_name: com.databricks.Sessionize\n                parameters:\n                  - '--data'\n                  - dbfs:/path/to/data.json\n              libraries:\n                - jar: dbfs:/mnt/databricks/Sessionize.jar\n              timeout_seconds: 86400\n            - task_key: Orders_Ingest\n              description: Ingests order data\n              depends_on: []\n              existing_cluster_id: 0923-164208-meows279\n              spark_jar_task:\n                main_class_name: com.databricks.OrdersIngest\n                parameters:\n                  - '--data'\n                  - dbfs:/path/to/order-data.json\n              libraries:\n                - jar: dbfs:/mnt/databricks/OrderIngest.jar\n              timeout_seconds: 86400\n            - task_key: Match\n              description: Matches orders with user sessions\n              depends_on:\n                - task_key: Orders_Ingest\n                - task_key: Sessionize\n              new_cluster:\n                spark_version: 7.3.x-scala2.12\n                node_type_id: i3.xlarge\n                spark_conf:\n                  spark.speculation: true\n                aws_attributes:\n                  availability: SPOT\n                  zone_id: us-west-2a\n                autoscale:\n                  min_workers: 2\n                  max_workers: 16\n              notebook_task:\n                notebook_path: /Users/user.name@databricks.com/Match\n                base_parameters:\n                  name: John Doe\n                  age: '35'\n              timeout_seconds: 86400\n        job_clusters:\n          type: array\n          description: \u003e-\n            _Reserved for future use_. See [Jobs API\n            updates](https://docs.databricks.com/data-engineering/jobs/jobs-api-updates.html).\n          items:\n            $ref: '#/components/schemas/JobCluster'\n          example: null\n        run_name:\n          type: string\n          example: A multitask job run\n          description: An optional name for the run. The default value is `Untitled`.\n        timeout_seconds:\n          type: integer\n          example: 86400\n          description: \u003e-\n            An optional timeout applied to each run of this job. The default\n            behavior is to have no timeout.\n          format: int32\n        idempotency_token:\n          type: string\n          example: 8f018174-4792-40d5-bcbc-3e6a527352c8\n          description: \u003e-\n            An optional token that can be used to guarantee the idempotency of\n            job run requests. If an active run with the provided token already\n            exists, the request does not create a new run, but returns the ID of\n            the existing run instead.\n\n\n            If you specify the idempotency token, upon failure you can retry\n            until the request succeeds. Databricks guarantees that exactly one\n            run is launched with that idempotency token.\n\n\n            This token must have at most 64 characters.\n\n\n            For more information, see [How to ensure idempotency for\n            jobs](https://kb.databricks.com/jobs/jobs-idempotency.html).\n  responses:\n    Unauthorized:\n      description: The request was unauthorized.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          example:\n            error_code: PERMISSION_DENIED\n            message: Unauthorized access.\n    BadRequest:\n      summary: The request was malformed.\n      description: The request was malformed. See JSON response for error details.\n      content:\n        application/json:\n          example:\n            error_code: INVALID_PARAMETER_VALUE\n            message: Invalid value for parameter job_id\n          schema:\n            $ref: '#/components/schemas/Error'\n    NotFound:\n      description: The requested resource does not exist.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          examples:\n            resource_does_not_exist:\n              value:\n                error_code: ENDPOINT_NOT_FOUND\n                message: No API endpoint found\n    InternalError:\n      description: The request was not handled correctly due to a server error.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n",
			"canonicalURL": "/github.com/gbrueckl/Databricks.API.PowerShell@d1d54858d69d4f5c82f2ce110e01070a11ea05bd/-/blob/Docs/OpenAPISpecs/jobs-2.1-aws.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/gbrueckl/Databricks.API.PowerShell/blob/d1d54858d69d4f5c82f2ce110e01070a11ea05bd/Docs/OpenAPISpecs/jobs-2.1-aws.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: line 1: cannot unmarshal !!str into *ogen.Properties"
}