{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "npm/openapi-to-graphql"
		},
		"file": {
			"name": "example_oas7.json",
			"size": 0,
			"path": "test/fixtures/example_oas7.json",
			"byteSize": 7519,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"title\": \"Example API 7\",\n    \"description\": \"An API to test converting Open API Specs 3.0 to GraphQL\",\n    \"version\": \"1.0.0\",\n    \"termsOfService\": \"http://example.com/terms/\",\n    \"license\": {\n      \"name\": \"Apache 2.0\",\n      \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n    }\n  },\n  \"externalDocs\": {\n    \"url\": \"http://example.com/docs\",\n    \"description\": \"Some more natural language description.\"\n  },\n  \"tags\": [\n    {\n      \"name\": \"test\",\n      \"description\": \"Indicates this API is for testing\"\n    }\n  ],\n  \"servers\": [\n    {\n      \"url\": \"http://localhost:{port}/{basePath}\",\n      \"description\": \"The location of the local test server.\",\n      \"variables\": {\n        \"port\": {\n          \"default\": \"3007\"\n        },\n        \"basePath\": {\n          \"default\": \"api\"\n        }\n      }\n    },\n    {\n      \"url\": \"mqtt://localhost:{port}/{basePath}\",\n      \"description\": \"The location of the local MQTT test broker.\",\n      \"variables\": {\n        \"port\": {\n          \"default\": \"1885\"\n        },\n        \"basePath\": {\n          \"default\": \"api\"\n        }\n      }\n    }\n  ],\n  \"paths\": {\n    \"/user\": {\n      \"get\": {\n        \"description\": \"Return a user.\",\n        \"responses\": {\n          \"202\": {\n            \"description\": \"A user.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/devices\": {\n      \"get\": {\n        \"operationId\": \"findDevices\",\n        \"description\": \"Return a device collection.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A device collection\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"description\": \"The device collection\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Device\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"operationId\": \"createDevice\",\n        \"description\": \"Create and return a device.\",\n        \"requestBody\": {\n          \"$ref\": \"#/components/requestBodies/DeviceBody\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/DeviceInstance\"\n          },\n          \"default\": {\n            \"$ref\": \"#/components/responses/GeneralError\"\n          }\n        },\n        \"callbacks\": {\n          \"deviceCreated\": {\n            \"$ref\": \"#/components/callbacks/DevicesEvent\"\n          }\n        }\n      }\n    },\n    \"/devices/{deviceName}\": {\n      \"get\": {\n        \"operationId\": \"findDeviceByName\",\n        \"description\": \"Find a device by name.\",\n        \"parameters\": [\n          {\n            \"name\": \"deviceName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/DeviceInstance\"\n          },\n          \"default\": {\n            \"$ref\": \"#/components/responses/GeneralError\"\n          }\n        }\n      },\n      \"put\": {\n        \"operationId\": \"replaceDeviceByName\",\n        \"description\": \"Replace a device by name.\",\n        \"parameters\": [\n          {\n            \"name\": \"deviceName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"$ref\": \"#/components/requestBodies/DeviceBody\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/DeviceInstance\"\n          },\n          \"default\": {\n            \"$ref\": \"#/components/responses/GeneralError\"\n          }\n        },\n        \"callbacks\": {\n          \"deviceUpdated\": {\n            \"$ref\": \"#/components/callbacks/DevicesEvent\"\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"User\": {\n        \"type\": \"object\",\n        \"description\": \"A user represents a natural person\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"The legal name of a user\"\n          }\n        }\n      },\n      \"Device\": {\n        \"type\": \"object\",\n        \"description\": \"A device is an object connected to the network\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"The device name in the network\"\n          },\n          \"userName\": {\n            \"type\": \"string\",\n            \"description\": \"The device owner Name\"\n          },\n          \"status\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"required\": [\"name\", \"userName\"]\n      },\n      \"Topic\": {\n        \"type\": \"object\",\n        \"description\": \"A topic is used to listen events\",\n        \"properties\": {\n          \"userName\": {\n            \"type\": \"string\",\n            \"description\": \"The device owner\"\n          },\n          \"deviceName\": {\n            \"type\": \"string\",\n            \"description\": \"The device name\"\n          },\n          \"method\": {\n            \"type\": \"string\",\n            \"description\": \"The device method to watch\",\n            \"example\": \"Equivalent to HTTP methods\"\n          }\n        },\n        \"required\": [\"userName\", \"method\"]\n      },\n      \"Error\": {\n        \"type\": \"object\",\n        \"description\": \"A topic is used to listen an event\",\n        \"properties\": {\n          \"code\": {\n            \"type\": \"string\",\n            \"description\": \"Error code\"\n          },\n          \"message\": {\n            \"type\": \"string\",\n            \"description\": \"Error message\"\n          }\n        },\n        \"required\": [\"code\", \"message\"]\n      }\n    },\n    \"requestBodies\": {\n      \"EventsBody\": {\n        \"description\": \"Properties to generate the event path\",\n        \"required\": true,\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Topic\"\n            }\n          }\n        }\n      },\n      \"DeviceBody\": {\n        \"description\": \"Device instance to update / create\",\n        \"required\": true,\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Device\"\n            }\n          }\n        }\n      }\n    },\n    \"responses\": {\n      \"DeviceInstance\": {\n        \"description\": \"Device instance\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Device\"\n            }\n          }\n        }\n      },\n      \"GeneralError\": {\n        \"description\": \"Error reponse\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Error\"\n            }\n          }\n        }\n      }\n    },\n    \"callbacks\": {\n      \"DevicesEvent\": {\n        \"/api/{$request.body#/userName}/devices/{$request.body#/method}/+\": {\n          \"post\": {\n            \"operationId\": \"devicesEventListener\",\n            \"description\": \"Listen all devices events owned by userName\",\n            \"requestBody\": {\n              \"$ref\": \"#/components/requestBodies/EventsBody\"\n            },\n            \"responses\": {\n              \"200\": {\n                \"$ref\": \"#/components/responses/DeviceInstance\"\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
			"canonicalURL": "/npm/openapi-to-graphql@48a4010a81790e58c861298e6c6de052497234ce/-/blob/test/fixtures/example_oas7.json",
			"externalURLs": []
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 104: cannot unmarshal !!str `#/compo...` into ogen.PathItem; yaml: line 158: cannot unmarshal !!str `#/compo...` into ogen.PathItem"
}