{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/DGEXSolutions/osrd"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "chartos/openapi.yaml",
			"byteSize": 5715,
			"content": "openapi: 3.0.2\ninfo:\n  title: Chartos\n  version: 0.2.0\npaths:\n  /info/:\n    get:\n      summary: Info\n      operationId: info_info_get\n      responses:\n        200:\n          description: Successful Response\n          content:\n            application/json:\n              schema: {}\n  /layer/{layer_slug}/mvt/{view_slug}/:\n    get:\n      summary: Mvt View Metadata\n      operationId: mvt_view_metadata_layer__layer_slug__mvt__view_slug___get\n      parameters:\n        - required: true\n          schema:\n            title: Layer Slug\n            type: string\n          name: layer_slug\n          in: path\n        - required: true\n          schema:\n            title: View Slug\n            type: string\n          name: view_slug\n          in: path\n        - required: true\n          schema:\n            title: Infra id\n            type: integer\n          name: infra\n          in: query\n      responses:\n        200:\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  type:\n                    type: string\n                    example: vector\n                  name:\n                    type: string\n                    example: track_sections\n                  promotedId:\n                    type: object\n                    example: { track_sections: \"id\" }\n                  scheme:\n                    type: string\n                    example: \"xyz\"\n                  tiles:\n                    type: array\n                    items:\n                      type: string\n                      example: http://localhost:7000/tile/track_sections/geo/{z}/{x}/{y}/?infra=1\n                  attribution:\n                    type: string\n                  minzoom:\n                    type: integer\n                  maxzoom:\n                    type: integer\n                    example: 18\n        422:\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HTTPValidationError\"\n  /layer/{layer_slug}/invalidate/:\n    post:\n      summary: Invalidate cache for a whole layer\n      parameters:\n        - required: true\n          schema:\n            title: Layer Slug\n            type: string\n          name: layer_slug\n          in: path\n        - required: true\n          schema:\n            title: Infra id\n            type: integer\n          name: infra\n          in: query\n      responses:\n        204:\n          description: No content\n  /layer/{layer_slug}/invalidate_bbox/:\n    post:\n      summary: Invalidate cache for a whole layer\n      parameters:\n        - required: true\n          schema:\n            title: Layer Slug\n            type: string\n          name: layer_slug\n          in: path\n        - required: true\n          schema:\n            title: Infra id\n            type: integer\n          name: infra\n          in: query\n      requestBody:\n        description: Bounding box by view\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: object\n                properties:\n                  view:\n                    type: string\n                    example: geo\n                  bbox:\n                    type: array\n                    items:\n                      type: array\n                      items:\n                        type: number\n                      minItems: 2\n                      maxItems: 2\n                    minItems: 2\n                    maxItems: 2\n                    example: [[2.1, 48.5], [2.5, 48.8]]\n      responses:\n        204:\n          description: No content\n  /tile/{layer_slug}/{view_slug}/{z}/{x}/{y}/:\n    get:\n      summary: Mvt View Tile\n      operationId: mvt_view_tile_tile__layer_slug___view_slug___z___x___y___get\n      parameters:\n        - required: true\n          schema:\n            title: Layer Slug\n            type: string\n          name: layer_slug\n          in: path\n        - required: true\n          schema:\n            title: View Slug\n            type: string\n          name: view_slug\n          in: path\n        - required: true\n          schema:\n            title: Z\n            type: integer\n          name: z\n          in: path\n        - required: true\n          schema:\n            title: X\n            type: integer\n          name: x\n          in: path\n        - required: true\n          schema:\n            title: Y\n            type: integer\n          name: y\n          in: path\n        - required: true\n          schema:\n            title: Infra id\n            type: integer\n          name: infra\n          in: query\n      responses:\n        200:\n          description: Successful Response\n          content:\n            application/x-protobuf:\n              schema:\n                type: string\n        422:\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HTTPValidationError\"\ncomponents:\n  schemas:\n    HTTPValidationError:\n      title: HTTPValidationError\n      type: object\n      properties:\n        detail:\n          title: Detail\n          type: array\n          items:\n            $ref: \"#/components/schemas/ValidationError\"\n    ValidationError:\n      title: ValidationError\n      required:\n        - loc\n        - msg\n        - type\n      type: object\n      properties:\n        loc:\n          title: Location\n          type: array\n          items:\n            type: string\n        msg:\n          title: Message\n          type: string\n        type:\n          title: Error Type\n          type: string\n"
		}
	},
	"Error": "unmarshal: json: cannot unmarshal bool into Go struct field Parameter.paths.get.parameters.name of type string"
}