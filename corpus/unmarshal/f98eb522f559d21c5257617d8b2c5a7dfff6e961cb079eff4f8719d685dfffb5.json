{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/vrchatapi/specification"
		},
		"file": {
			"name": "avatars.yaml",
			"size": 0,
			"path": "openapi/components/paths/avatars.yaml",
			"byteSize": 6304,
			"content": "openapi: 3.0.3\ninfo:\n  title: avatars\n  version: '1.0'\n  description: Avatars Docs Here\npaths:\n  /avatars/favorites:\n    get:\n      summary: List Favorited Avatars\n      tags:\n        - avatars\n      responses:\n        '200':\n          $ref: ../responses/avatars/AvatarListResponse.yaml\n        '401':\n          $ref: ../responses/MissingCredentialsError.yaml\n        '403':\n          $ref: ../responses/avatars/AvatarSeeOtherUserFavoritesError.yaml\n      operationId: getFavoritedAvatars\n      security:\n        - apiKeyCookie: []\n          authCookie: []\n      parameters:\n        - $ref: ../parameters.yaml#/featured\n        - $ref: ../parameters.yaml#/sortOptions\n        - $ref: ../parameters.yaml#/number\n        - $ref: ../parameters.yaml#/orderOptions\n        - $ref: ../parameters.yaml#/offset\n        - $ref: ../parameters.yaml#/search\n        - $ref: ../parameters.yaml#/tag\n        - $ref: ../parameters.yaml#/notag\n        - $ref: ../parameters.yaml#/releaseStatus\n        - $ref: ../parameters.yaml#/maxUnityVersion\n        - $ref: ../parameters.yaml#/minUnityVersion\n        - $ref: ../parameters.yaml#/platform\n        - $ref: ../parameters.yaml#/userIdAdmin\n      description: Search and list favorited avatars by query filters.\n  /avatars:\n    get:\n      summary: Search Avatars\n      tags:\n        - avatars\n      responses:\n        '200':\n          $ref: ../responses/avatars/AvatarListResponse.yaml\n        '401':\n          $ref: ../responses/MissingCredentialsError.yaml\n      operationId: searchAvatars\n      security:\n        - apiKeyCookie: []\n          authCookie: []\n      parameters:\n        - $ref: ../parameters.yaml#/featured\n        - $ref: ../parameters.yaml#/sortOptions\n        - schema:\n            type: string\n            enum:\n              - me\n          in: query\n          required: false\n          name: user\n          description: Set to `me` for searching own avatars.\n        - $ref: ../parameters.yaml#/userIdQuery\n        - $ref: ../parameters.yaml#/number\n        - $ref: ../parameters.yaml#/orderOptions\n        - $ref: ../parameters.yaml#/offset\n        - $ref: ../parameters.yaml#/tag\n        - $ref: ../parameters.yaml#/notag\n        - $ref: ../parameters.yaml#/releaseStatus\n        - $ref: ../parameters.yaml#/maxUnityVersion\n        - $ref: ../parameters.yaml#/minUnityVersion\n        - $ref: ../parameters.yaml#/platform\n      description: Search and list avatars by query filters. You can only search your own or featured avatars. It is not possible as a normal user to search other peoples avatars.\n    post:\n      summary: Create Avatar\n      operationId: createAvatar\n      security:\n        - apiKeyCookie: []\n          authCookie: []\n      responses:\n        '200':\n          $ref: ../responses/avatars/AvatarResponse.yaml\n        '401':\n          $ref: ../responses/FeaturedSetNotAdminError.yaml\n      tags:\n        - avatars\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ../requests/CreateAvatarRequest.yaml\n      description: Create an avatar. It's possible to optionally specify a ID if you want a custom one. Attempting to create an Avatar with an already claimed ID will result in a DB error.\n  '/avatars/{avatarId}':\n    parameters:\n      - $ref: ../parameters.yaml#/avatarId\n    get:\n      summary: Get Avatar\n      tags:\n        - avatars\n      responses:\n        '200':\n          $ref: ../responses/avatars/AvatarResponse.yaml\n        '401':\n          $ref: ../responses/MissingCredentialsError.yaml\n        '404':\n          $ref: ../responses/avatars/AvatarNotFoundError.yaml\n      operationId: getAvatar\n      security:\n        - apiKeyCookie: []\n          authCookie: []\n      description: Get information about a specific Avatar.\n    put:\n      summary: Update Avatar\n      operationId: updateAvatar\n      security:\n        - apiKeyCookie: []\n          authCookie: []\n      responses:\n        '200':\n          $ref: ../responses/avatars/AvatarResponse.yaml\n        '401':\n          $ref: ../responses/MissingCredentialsError.yaml\n        '404':\n          $ref: ../responses/avatars/AvatarNotFoundError.yaml\n      description: Update information about a specific avatar.\n      tags:\n        - avatars\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ../requests/UpdateAvatarRequest.yaml\n    delete:\n      summary: Delete Avatar\n      operationId: deleteAvatar\n      security:\n        - apiKeyCookie: []\n          authCookie: []\n      responses:\n        '200':\n          $ref: ../responses/avatars/AvatarResponse.yaml\n        '401':\n          $ref: ../responses/MissingCredentialsError.yaml\n        '404':\n          $ref: ../responses/avatars/AvatarNotFoundError.yaml\n      tags:\n        - avatars\n      description: 'Delete an avatar. Notice an avatar is never fully \"deleted\", only its ReleaseStatus is set to \"hidden\" and the linked Files are deleted. The AvatarID is permanently reserved.'\n  '/avatars/{avatarId}/select':\n    parameters:\n      - $ref: ../parameters.yaml#/avatarId\n    put:\n      summary: Select Avatar\n      tags:\n        - avatars\n      responses:\n        '200':\n          $ref: ../responses/users/CurrentUserResponse.yaml\n        '401':\n          $ref: ../responses/MissingCredentialsError.yaml\n        '404':\n          $ref: ../responses/avatars/AvatarNotFoundError.yaml\n      operationId: selectAvatar\n      security:\n        - apiKeyCookie: []\n          authCookie: []\n      description: Switches into that avatar.\n  '/avatars/{avatarId}/selectFallback':\n    parameters:\n      - $ref: ../parameters.yaml#/avatarId\n    put:\n      summary: Select Fallback Avatar\n      tags:\n        - avatars\n      responses:\n        '200':\n          $ref: ../responses/users/CurrentUserResponse.yaml\n        '401':\n          $ref: ../responses/MissingCredentialsError.yaml\n        '403':\n          $ref: ../responses/avatars/AvatarNotTaggedAsFallbackError.yaml\n        '404':\n          $ref: ../responses/avatars/AvatarNotFoundError.yaml\n      operationId: selectFallbackAvatar\n      security:\n        - apiKeyCookie: []\n          authCookie: []\n      description: Switches into that avatar as your fallback avatar.\ntags:\n  $ref: ../tags.yaml\ncomponents:\n  securitySchemes:\n    $ref: ../securitySchemes.yaml"
		}
	},
	"Error": "unmarshal: json: cannot unmarshal object into Go struct field Spec.tags of type []ogen.Tag"
}