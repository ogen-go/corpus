{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/cloudmesh/cloudmesh-openapi"
		},
		"file": {
			"name": "LinearRegression.yaml",
			"size": 0,
			"path": "tests/generator/LinearRegression.yaml",
			"byteSize": 4090,
			"content": "openapi: 3.0.0\ninfo:\n  title: LinearRegression_upload-enabled\n  description: \"No description provided\"\n  version: \"1.0\"\nservers:\n  - url: http://localhost:8080/cloudmesh\n    description: \"No description provided\"\npaths:\n  /LinearRegression_upload-enabled/fit:\n     get:\n      summary: \"Fit linear model.\"\n      description: \"None (Optional extended description in CommonMark or HTML)\"\n      operationId: LinearRegression_upload-enabled.fit\n      parameters:\n        - in: query\n          name: X\n          description: \"Training data\"\n          schema:\n            type: string\n        - in: query\n          name: y\n          description: \"Target values. Will be cast to X's dtype if necessary\"\n          schema:\n            type: string\n      responses:\n        '204':\n          description: \"This operation returns no response.\"\n\n  /LinearRegression_upload-enabled/get_params:\n     get:\n      summary: \"Get parameters for this estimator.\"\n      description: \"None (Optional extended description in CommonMark or HTML)\"\n      operationId: LinearRegression_upload-enabled.get_params\n      parameters:\n        - in: query\n          name: deep\n          description: \"If True, will return the parameters for this estimator and\n                       contained subobjects that are estimators.\"\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: \"OK\"\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /LinearRegression_upload-enabled/predict:\n     get:\n      summary: \"Predict using the linear model.\"\n      description: \"None (Optional extended description in CommonMark or HTML)\"\n      operationId: LinearRegression_upload-enabled.predict\n      parameters:\n        - in: query\n          name: X\n          description: \"Samples.\"\n          schema:\n            type: string\n      responses:\n        '200':\n          description: \"OK\"\n          content:\n            text/plain:\n              schema:\n                type: array\n                items: {}\n\n  /LinearRegression_upload-enabled/score:\n     get:\n      summary: \"Return the coefficient of determination R^2 of the prediction.\"\n      description: \"None (Optional extended description in CommonMark or HTML)\"\n      operationId: LinearRegression_upload-enabled.score\n      parameters:\n        - in: query\n          name: X\n          description: \"Test samples. For some estimators this may be a\n                       precomputed kernel matrix or a list of generic objects instead,\n                       shape = (n_samples, n_samples_fitted),\n                       where n_samples_fitted is the number of\n                       samples used in the fitting for the estimator.\"\n          schema:\n            type: string\n        - in: query\n          name: y\n          description: \"True values for X.\"\n          schema:\n            type: string\n      responses:\n        '200':\n          description: \"OK\"\n          content:\n            text/plain:\n              schema:\n                type: number\n\n  /LinearRegression_upload-enabled/set_params:\n     get:\n      summary: \"Set the parameters of this estimator.\"\n      description: \"None (Optional extended description in CommonMark or HTML)\"\n      operationId: LinearRegression_upload-enabled.set_params\n      parameters:\n        - in: query\n          name: params\n          description: \"no description provided in docstring\"\n          schema:\n            type: object\n            additionalProperties: true\n      responses:\n        '204':\n          description: \"This operation returns no response.\"\n\n  /upload:\n    post:\n      summary: upload a file\n      operationId: LinearRegression_upload-enabled.upload\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                upload:\n                  type: string\n                  format: binary\n      responses:\n        '200':\n          description: \"OK\"\n          content:\n            text/plain:\n              schema:\n                type: string",
			"canonicalURL": "/github.com/cloudmesh/cloudmesh-openapi@c866c4cbdad3adfdf3fe31591906ced8d71352ef/-/blob/tests/generator/LinearRegression.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/cloudmesh/cloudmesh-openapi/blob/c866c4cbdad3adfdf3fe31591906ced8d71352ef/tests/generator/LinearRegression.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: json: line 1:498: json: cannot unmarshal Go value of type ogen.Spec: spec: json: cannot unmarshal JSON boolean into Go value of type string"
}