{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Szer/GiraffeGenerator"
		},
		"file": {
			"name": "specWithArguments.yaml",
			"size": 0,
			"path": "tests/GiraffeGenerator.IntegrationTests/specs/specWithArguments.yaml",
			"byteSize": 7992,
			"content": "openapi: \"3.0.0\"\ninfo:\n  title: Spec with arguments API\n  version: 1\npaths:\n  /{dataset}/{version}/fields:\n    get:\n      summary: \u003e-\n        Provides the general information about the API and the list of fields\n        that can be used to query the dataset.\n      description: \u003e-\n        This GET API returns the list of all the searchable field names that are\n        in the oa_citations. Please see the 'fields' attribute which returns an\n        array of field names. Each field or a combination of fields can be\n        searched using the syntax options shown below.\n      operationId: list-searchable-fields\n      parameters:\n        - name: dataset\n          in: path\n          description: 'Name of the dataset.'\n          required: true\n          example: \"oa_citations\"\n          schema:\n            type: string\n        - name: version\n          in: path\n          description: Version of the dataset.\n          required: true\n          example: \"v1\"\n          schema:\n            type: string\n      responses:\n        '200':\n          description: \u003e-\n            The dataset API for the given version is found and it is accessible\n            to consume.\n          content:\n            application/json:\n              schema:\n                type: string\n        '404':\n          description: \u003e-\n            The combination of dataset name and version is not found in the\n            system or it is not published yet to be consumed by public.\n          content:\n            application/json:\n              schema:\n                type: string\n  /{dataset}/{version}/only-path-parameters:\n    parameters:\n      - name: dataset\n        in: path\n        required: true\n        schema:\n          type: string\n    post:\n      tags:\n        - search\n      summary: \u003e-\n        Used to test path-only parameters case\n      operationId: only-path-parameters\n      parameters:\n        - name: version\n          in: path\n          description: Version of the dataset.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n  /only-query-parameters:\n    post:\n      tags:\n        - search\n      summary: \u003e-\n        Used to test path-only parameters case\n      operationId: only-query-parameters\n      parameters:\n        - name: dataset\n          schema:\n            type: string\n          in: query\n          required: true\n        - name: version\n          in: query\n          description: Version of the dataset.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n  /only-form-parameters:\n    post:\n      tags:\n        - search\n      summary: \u003e-\n        Used to test path-only parameters case\n      operationId: only-form-parameters\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                dataset:\n                  type: string\n                version:\n                  description: Version of the dataset.\n                  type: string\n              required:\n                - dataset\n                - version\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n  /only-json-parameters:\n    post:\n      tags:\n        - search\n      summary: \u003e-\n        Used to test json-only parameters case\n      operationId: only-json-parameters\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                dataset:\n                  type: string\n                version:\n                  description: Version of the dataset.\n                  type: string\n              required:\n                - dataset\n                - version\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n  /{dataset}/{version}/records:\n    post:\n      tags:\n        - search\n      summary: \u003e-\n        Provides search capability for the data set with the given search\n        criteria.\n      description: \u003e-\n        This API is based on Solr/Lucense Search. The data is indexed using\n        SOLR. This GET API returns the list of all the searchable field names\n        that are in the Solr Index. Please see the 'fields' attribute which\n        returns an array of field names. Each field or a combination of fields\n        can be searched using the Solr/Lucene Syntax. Please refer\n        https://lucene.apache.org/core/3_6_2/queryparsersyntax.html#Overview for\n        the query syntax. List of field names that are searchable can be\n        determined using above GET api.\n      operationId: perform-search\n      parameters:\n        - name: start\n          description: Starting record number. Default value is 0.\n          in: query\n          schema:\n            type: integer\n            default: 0\n        - name: rows\n          description: \u003e-\n            Specify number of rows to be returned. If you run the search\n            with default values, in the response you will see 'numFound'\n            attribute which will tell the number of records available in\n            the dataset.\n          in: query\n          schema:\n            type: integer\n            default: 100\n        - name: version\n          in: path\n          description: Version of the dataset.\n          required: true\n          schema:\n            type: string\n            default: v1\n        - name: dataset\n          in: path\n          description: 'Name of the dataset. In this case, the default value is oa_citations'\n          required: true\n          schema:\n            type: string\n            default: oa_citations\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  additionalProperties:\n                    type: object\n        '404':\n          description: No matching record found for the given criteria.\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                criteria:\n                  description: \u003e-\n                    Uses Lucene Query Syntax in the format of\n                    propertyName:value, propertyName:[num1 TO num2] and date\n                    range format: propertyName:[yyyyMMdd TO yyyyMMdd]. In the\n                    response please see the 'docs' element which has the list of\n                    record objects. Each record structure would consist of all\n                    the fields and their corresponding values.\n                  type: string\n                  default: '*:*'\n                start:\n                  description: Starting record number. Default value is 0.\n                  type: integer\n                  default: 0\n                rows:\n                  description: \u003e-\n                    Specify number of rows to be returned. If you run the search\n                    with default values, in the response you will see 'numFound'\n                    attribute which will tell the number of records available in\n                    the dataset.\n                  type: integer\n                  default: 100\n",
			"canonicalURL": "/github.com/Szer/GiraffeGenerator@f488a4a0c693cc954557960da19015169e7f8f76/-/blob/tests/GiraffeGenerator.IntegrationTests/specs/specWithArguments.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Szer/GiraffeGenerator/blob/f488a4a0c693cc954557960da19015169e7f8f76/tests/GiraffeGenerator.IntegrationTests/specs/specWithArguments.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: json: line 1:55: json: cannot unmarshal number into Go struct field Info.info.version of type string"
}