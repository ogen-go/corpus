{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ktorio/ktor-init-tools"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "ktor-generator/src/jvmTest/resources/openapi.yaml",
			"byteSize": 30842,
			"content": "openapi: 3.0.0\n\ninfo:\n  title: CulebraTester\n  description: \u003e\n    ## Snaky Android Test\n\n    ---\n\n    If you want to be able to try out the API using the **Execute** or **TRY** button from this page\n\n    - an android device should be connected using `adb`\n\n    - the server should have been started using `./culebratester2 start-server`\n\n\n    then you will be able to invoke the API and see the responses.\n\n  version: 2.0.12\n\nservers:\n  - url: \"http://localhost:9987/v2\"\n\npaths:\n  /culebra/help/{api}:\n    get:\n      summary: Gets help\n      description: Gets help info about the *API* specified as parameter.\n        For example you can obtain information about\n\n        * /uiDevice/click\n\n        * /device/displayRealSize\n\n        * /uiDevice/screenshot\n\n        * etc.\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Help\"\n        default:\n          $ref: '#/components/responses/error'\n    parameters:\n      - name: api\n        in: path\n        description: Specify the API help is about\n        required: true\n        schema:\n          type: string\n\n\n  /culebra/info:\n    get:\n      summary: Gets information about this app\n      description: Gets information about this app\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CulebraInfo'\n        default:\n          $ref: '#/components/responses/error'\n\n\n  /device/displayRealSize:\n    get:\n      summary: Gets display real size\n      description: Gets the display real size\n      responses:\n        200:\n          description: Display real size\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DisplayRealSize\"\n        default:\n          $ref: '#/components/responses/error'\n\n\n  /targetContext/startActivity:\n    get:\n      summary: Starts an Activity\n      description: Starts an Activity\n      parameters:\n        - name: \"pkg\"\n          in: query\n          required: true\n          description: the package name\n          schema:\n            type: string\n        - name: \"cls\"\n          in: query\n          required: true\n          description: the class name\n          schema:\n            type: string\n      responses:\n        200:\n          $ref: '#/components/responses/ok'\n        default:\n          $ref: '#/components/responses/error'\n\n\n  /objectStore/list:\n    get:\n      summary: Lists the objects in store\n      description: Lists the objects in store\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    oid:\n                      type: integer\n                    object:\n                      type: object\n        default:\n          $ref: '#/components/responses/error'\n\n  /uiDevice/dumpWindowHierarchy:\n    get:\n      summary: Dumps the window hierarchy\n      description: Dumps the window hierarchy\n      parameters:\n        - name: format\n          in: query\n          required: false\n          description: the output format\n          schema:\n            type: string\n      responses:\n        200:\n          description: Window hierarchy\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/WindowHierarchy\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/WindowHierarchy\"\n        default:\n          $ref: '#/components/responses/error'\n\n\n  /uiDevice/click:\n    get:\n      summary: Clicks at the specified location\n      description: Clicks at the specified location\n      parameters:\n        - name: \"x\"\n          in: query\n          required: true\n          description: x coordinate\n          schema:\n            type: integer\n            minimum: 0\n        - name: \"y\"\n          in: query\n          required: true\n          description: y coordinate\n          schema:\n            type: integer\n            minimum: 0\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StatusResponse\"\n\n            text/plain:\n              schema:\n                type: string\n              example: OK\n        default:\n          $ref: '#/components/responses/error'\n\n\n  /uiDevice/findObject:\n    get:\n      summary: Finds an object\n      description: Finds an object. The object found, if any, can be later used in other call like API.click.\n      parameters:\n        - name: resourceId\n          in: query\n          description: the resource id\n          example: 'com.android.calendar:id/d0_label'\n          schema:\n            type: string\n        - name: uiSelector\n          in: query\n          description: the selector sets the resource name criteria for matching. A UI element will be considered a match if its resource name exactly matches the selector parameter and all other criteria for this selector are met.\n            The format of the selector string is\n\n              `sel@[$]value,...`\n\n            Where `sel` can be one of\n             - clazz or className\n             - clickable\n             - depth\n             - desc\n             - index\n             - instance\n             - package\n             - parentIndex\n             - res\n             - scrollable\n             - text\n\n            `@` replaces the `=` sign that is used to separate parameters and values in the URL. If the first character of value is `$` then a `Pattern` is created.\n          example: 'res@com.android.calendar:id/d0_label,instance@1'\n          schema:\n            type: string\n        - name: bySelector\n          in: query\n          description: the selector sets the resource name criteria for matching. A UI element will be considered a match if its resource name exactly matches the selector parameter and all other criteria for this selector are met.\n            The format of the selector string is\n\n              `sel@[$]value,...`\n\n            Where `sel` can be one of\n             - checkable\n             - clazz\n             - clickable\n             - depth\n             - desc\n             - package\n             - res\n             - scrollable\n             - text\n\n            `@` replaces the `=` sign that is used to separate parameters and values in the URL. If the first character of value is `$` then a `Pattern` is created.\n          example: 'res@com.android.calendar:id/d0_label,depth@2'\n          schema:\n            type: string\n\n      responses:\n        200:\n          description: Object found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ObjectRef'\n              example:\n                oid: 1\n                className: 'android.widget.TextView'\n        404:\n          description: Object not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StatusResponse'\n              example:\n                status: ERROR\n                errorStatusResponse: 1001\n                errorMessage: Object not found\n        default:\n          $ref: '#/components/responses/error'\n\n    post:\n      summary: Finds an object\n      description: Finds an object. The object found, if any, can be later used in other call like API.click.\n      requestBody:\n        description: Selector\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Selector'\n      responses:\n        200:\n          description: Object found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ObjectRef'\n              example:\n                oid: 1\n                className: 'android.widget.Button'\n        404:\n          description: Object not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StatusResponse'\n              example:\n                status: ERROR\n                errorStatusResponse: 1001\n                errorMessage: Object not found\n        default:\n          $ref: '#/components/responses/error'\n\n  /uiDevice/findObjects:\n    get:\n      summary: Finds *all* objects that match the selector criteria.\n      description: Finds an object. The object found, if any, can be later used in other call like API.click.\n      parameters:\n        - name: bySelector\n          in: query\n          description: the selector sets the resource name criteria for matching. A UI element will be considered a match if its resource name exactly matches the selector parameter and all other criteria for this selector are met.\n            The format of the selector string is\n\n              `sel@[$]value,...`\n\n            Where `sel` can be one of\n             - checkable\n             - clazz\n             - clickable\n             - depth\n             - desc\n             - package\n             - res\n             - scrollable\n             - text\n\n            `@` replaces the `=` sign that is used to separate parameters and values in the URL. If the first character of value is `$` then a `Pattern` is created.\n          example: 'res@com.android.calendar:id/d0_label,depth@2'\n          schema:\n            type: string\n      responses:\n        200:\n          description: Objects found\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ObjectRef'\n              example: [{'oid': 1, 'className': 'android.widget.Button'}, {'oid': 2, 'className': 'android.widget.TextView'}]\n        404:\n          description: Object not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StatusResponse'\n              example:\n                status: ERROR\n                errorStatusResponse: 1001\n                errorMessage: Object not found\n        default:\n          $ref: '#/components/responses/error'\n\n  /uiDevice/currentPackageName:\n    get:\n      summary: Gets the current package name\n      description: Gets the current package name\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CurrentPackageName'\n        default:\n          $ref: '#/components/responses/error'\n\n\n  /uiDevice/displayHeight:\n    get:\n      summary: Gets the display height\n      description: Gets the display height\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DisplayHeight'\n        default:\n          $ref: '#/components/responses/error'\n\n\n  /uiDevice/displayRotation:\n    get:\n      summary: Gets the display rotation\n      description: Gets the display rotation\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DisplayRotation'\n        default:\n          $ref: '#/components/responses/error'\n\n\n  /uiDevice/displaySizeDp:\n    get:\n      summary: Gets the display size in DP\n      description: Gets the display size in DP\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DisplaySizeDp'\n        default:\n          $ref: '#/components/responses/error'\n\n\n  /uiDevice/displayWidth:\n    get:\n      summary: Gets the display width\n      description: Gets the display width\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DisplayWidth'\n        default:\n          $ref: '#/components/responses/error'\n\n\n  /uiDevice/lastTraversedText:\n    get:\n      summary: Retrieves the text from the last UI traversal event received.\n      description: Retrieves the text from the last UI traversal event received.\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LastTraversedText'\n        default:\n          $ref: '#/components/responses/error'\n\n\n  /uiDevice/productName:\n    get:\n      summary: Retrieves the product name of the device.\n      description: Retrieves the product name of the device.\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProductName'\n        default:\n          $ref: '#/components/responses/error'\n\n\n  /uiDevice/pressBack:\n    get:\n      summary: Simulates a short press on the BACK button.\n      description: Simulates a short press on the BACK button.\n      responses:\n        200:\n          $ref: '#/components/responses/ok'\n        default:\n          $ref: '#/components/responses/error'\n\n\n  /uiDevice/pressDelete:\n    get:\n      summary: Simulates a short press on the DELETE key.\n      description: Simulates a short press on the DELETE key.\n      responses:\n        200:\n          $ref: '#/components/responses/ok'\n        default:\n          $ref: '#/components/responses/error'\n\n\n  /uiDevice/pressEnter:\n    get:\n      summary: Simulates a short press on the ENTER key.\n      description: Simulates a short press on the ENTER key.\n      responses:\n        200:\n          $ref: '#/components/responses/ok'\n        default:\n          $ref: '#/components/responses/error'\n\n\n  /uiDevice/pressHome:\n    get:\n      summary: Simulates a short press on the HOME button.\n      description: Simulates a short press on the HOME button.\n      responses:\n        200:\n          $ref: '#/components/responses/ok'\n        default:\n          $ref: '#/components/responses/error'\n\n\n  /uiDevice/pressRecentApps:\n    get:\n      summary: Simulates a short press on the Recent Apps button.\n      description: Simulates a short press on the Recent Apps button.\n      responses:\n        200:\n          $ref: '#/components/responses/ok'\n        default:\n          $ref: '#/components/responses/error'\n\n\n  /uiDevice/swipe:\n    get:\n      summary: Performs a swipe.\n      description: Performs a swipe from one coordinate to another using the number of steps to determine smoothness and speed. Each step execution is throttled to 5ms per step. So for a 100 steps, the swipe will take about 1/2 second to complete.\n      parameters:\n        - name: startX\n          description: from x\n          in: query\n          required: true\n          schema:\n            type: integer\n            minimum: 0\n        - name: startY\n          description: from y\n          in: query\n          required: true\n          schema:\n            type: integer\n            minimum: 0\n        - name: endX\n          description: to x\n          in: query\n          required: true\n          schema:\n            type: integer\n            minimum: 0\n        - name: endY\n          description: end y\n          in: query\n          required: true\n          schema:\n            type: integer\n            minimum: 0\n        - name: steps\n          description: is the number of move steps sent to the system\n          in: query\n          required: true\n          schema:\n            type: integer\n            minimum: 0\n      responses:\n        200:\n          $ref: '#/components/responses/ok'\n        default:\n          $ref: '#/components/responses/error'\n    post:\n      summary: Performs a swipe between points in the Point array.\n      description: Each step execution is throttled to 5ms per step. So for a 100 steps, the swipe will take about 1/2 second to complete\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SwipeBody'\n      responses:\n        200:\n          $ref: '#/components/responses/ok'\n        default:\n          $ref: '#/components/responses/error'\n\n  /uiDevice/waitForIdle:\n    get:\n      summary: Waits for the current application to idle.\n      description: Waits for the current application to idle.\n      parameters:\n        - name: timeout\n          description: in milliseconds\n          in: query\n          schema:\n            type: integer\n            format: int64\n            default: 10000\n      responses:\n        200:\n          $ref: '#/components/responses/ok'\n        default:\n          $ref: '#/components/responses/error'\n\n\n  /uiDevice/waitForWindowUpdate:\n    get:\n      summary: Waits for a window content update event to occur.\n      description:  If a package name for the window is specified, but the current window does not have the same package name, the function returns immediately.\n      parameters:\n        - name: packageName\n          description: the specified window package name (can be null or not present). If null, a window update from any front-end window will end the wait\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: timeout\n          description: in milliseconds\n          in: query\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        200:\n          $ref: '#/components/responses/ok'\n        default:\n          $ref: '#/components/responses/error'\n\n\n  /uiDevice/pressKeyCode:\n    get:\n      summary: Simulates a short press using a key code.\n      description: Simulates a short press using a key code.\n      parameters:\n        - name: keyCode\n          description: the key code of the event.\n          in: query\n          required: true\n          schema:\n            type: integer\n        - name: metaState\n          description: an integer in which each bit set to 1 represents a pressed meta key\n          in: query\n          required: false\n          schema:\n            type: integer\n      responses:\n        200:\n          $ref: '#/components/responses/ok'\n        default:\n          $ref: '#/components/responses/error'\n\n\n  /uiDevice/screenshot:\n    get:\n      summary: Gets the device screenshot\n      description: \u003e\n        Gets the device screenshot and can be influenced by the parameters.\n        For example the `scale` of the screenshot or its `quality` can be specified.\n        **NOTE**: [`UiDevice.takeScreenshot()`](https://developer.android.com/reference/android/support/test/uiautomator/UiDevice.html#takeScreenshot(java.io.File,%20float,%20int)) usually ignores these parameters so expect no change.\n      responses:\n        200:\n          description: OK\n          content:\n            image/png:\n              schema:\n                type: string\n                format: binary\n              examples:\n                exernal-image-example:\n                  summary: External example image\n                  externalValue: \"https://raw.githubusercontent.com/wiki/dtmilano/AndroidViewClient/images/emulator-launcher-shortcuts.png\"\n        400:\n          description: Cannot obtain screenshot\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StatusResponse\"\n      parameters:\n        - name: \"scale\"\n          in: query\n          required: false\n          description: The scale of the screenshot (i.e. 0.5)\n          schema:\n            type: number\n            format: float\n            minimum: 0\n            exclusiveMinimum: true\n            maximum: 1.0\n          example: 0.5\n        - name: \"quality\"\n          in: query\n          required: false\n          description: The quality of the screenshot (i.e. 100)\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n          example: 90\n\n  /uiObject2/{oid}/click:\n    get:\n      summary: Clicks on the specified object.\n      description: The target object should have been found using `findObject` with a `selector`.\n      parameters:\n        - name: oid\n          in: path\n          required: true\n          description: The object ID\n          schema:\n            type: integer\n      responses:\n        200:\n          $ref: '#/components/responses/ok'\n        default:\n          $ref: '#/components/responses/error'\n\n\n  /uiObject2/{oid}/dump:\n    get:\n      summary: Dumps the specified object.\n      description: The target object should have been found using `findObject` with a `selector`.\n      parameters:\n        - name: oid\n          in: path\n          required: true\n          description: The object ID\n          schema:\n            type: integer\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Selector'\n        default:\n          $ref: '#/components/responses/error'\n\n\n  /uiObject2/{oid}/getText:\n    get:\n      summary: Gets the text content.\n      description: The target object should have been found using `findObject` with a `selector`.\n      parameters:\n        - name: oid\n          in: path\n          required: true\n          description: The object ID\n          schema:\n            type: integer\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Text'\n        default:\n          $ref: '#/components/responses/error'\n\n  /uiObject2/{oid}/longClick:\n    get:\n      summary: Long-clicks on the specified object.\n      description: The target object should have been found using `findObject` with a `selector`.\n      parameters:\n        - name: oid\n          in: path\n          required: true\n          description: The object ID\n          schema:\n            type: integer\n      responses:\n        200:\n          $ref: '#/components/responses/ok'\n        default:\n          $ref: '#/components/responses/error'\n\n  /uiObject2/{oid}/setText:\n    post:\n      summary: Sets the text content if this object is an editable field.\n      description: The target object should have been found using `findObject` with a `selector`.\n      parameters:\n        - name: oid\n          in: path\n          required: true\n          description: The object ID\n          schema:\n            type: integer\n      requestBody:\n        description: Text to enter in the field\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                text:\n                  type: string\n      responses:\n        200:\n          $ref: '#/components/responses/ok'\n        default:\n          $ref: '#/components/responses/error'\ncomponents:\n  schemas:\n    StatusResponse:\n      type: object\n      required:\n        - status\n      properties:\n        status:\n          type: string\n          enum:\n            - OK\n            - ERROR\n            - UNKNOWKN\n        statusCode:\n          type: integer\n        errorMessage:\n          type: string\n      example:\n        status: ERROR\n        statusCode: 100\n        errorMessage: Operation could not be completed\n\n    CulebraInfo:\n      type: object\n      properties:\n        versionName:\n          type: string\n        versionCode:\n          type: integer\n      required:\n        - versionName\n        - versionCode\n\n    CurrentPackageName:\n      type: object\n      properties:\n        currentPackageName:\n          type: string\n          description: the current package name\n      example:\n        currentPackageName: 'com.android.calendar'\n\n    DisplayHeight:\n      type: object\n      properties:\n        displayHeight:\n          type: integer\n          description: the current display height\n      example:\n        displayHeight: 1776\n\n    DisplayRotationEnum:\n      type: integer\n      description: the current display rotation\n      # the generation of this enum is incorrect: i.e.: 0(\"0\")\n      enum:\n        - 0\n        - 180\n        - 270\n        - 90\n\n    DisplayRotation:\n      type: object\n      properties:\n        displayRotation:\n          type: integer\n          description: the current display rotation\n          enum:\n            - 0\n            - 180\n            - 270\n            - 90\n        # there no way of doing this\n        #  schema:\n        #    $ref: '#/components/schemas/DisplayRotation'\n        # and even though, the generated enum is wrong\n      example:\n        displayRotation: 0\n\n    DisplaySizeDp:\n      type: object\n      properties:\n        displaySizeDpX:\n          type: integer\n          description: the display x in DP\n        displaySizeDpY:\n          type: integer\n          description: the display y in DP\n      example:\n        displaySizeDpX: 2400\n        displaySizeDpY: 1080\n\n    DisplayWidth:\n      type: object\n      properties:\n        displayWidth:\n          type: integer\n          description: the current display width\n      example:\n        displayHeight: 1080\n\n    Help:\n      type: object\n      required:\n        - text\n      properties:\n        text:\n          type: string\n      example:\n        text: CulebraTester Help\n\n    DisplayRealSize:\n      type: object\n      required:\n        - device\n        - x\n        - y\n      properties:\n        device:\n          type: string\n        x:\n          type: integer\n        y:\n          type: integer\n        artWidth:\n          type: integer\n        artHeight:\n          type: integer\n        screenshotWidth:\n          type: integer\n        screenshotX:\n          type: integer\n        screenshotY:\n          type: integer\n      example:\n          device: emulator\n          x: 960\n          y: 1080\n          screenshotWidth: 960\n\n    LastTraversedText:\n      type: object\n      properties:\n        lastTraversedText:\n          type: string\n          description: text of the last traversal event, else return an empty string\n      example:\n        lastTraversedText: \"\"\n\n    WindowHierarchyChild:\n      type: object\n      properties:\n        id:\n          type: integer\n        parent:\n          type: integer\n        text:\n          type: string\n        package:\n          type: string\n        checkable:\n          type: boolean\n        clickable:\n          type: boolean\n        index:\n          type: integer\n        contentDescription:\n          type: string\n        focusable:\n          type: boolean\n        resourceId:\n          type: string\n        enabled:\n          type: boolean\n        password:\n          type: boolean\n        longClickable:\n          type: boolean\n        longText:\n          type: string\n        clazz:\n          type: string\n        scrollable:\n          type: boolean\n        selected:\n          type: boolean\n        checked:\n          type: boolean\n        focused:\n          type: boolean\n        bounds:\n          type: array\n          items:\n            type: integer\n        children:\n          type: array\n          items:\n            $ref: '#/components/schemas/WindowHierarchyChild'\n      example:\n        $ref: '#/components/examples/windowHierarchyChild'\n\n    WindowHierarchy:\n      type: object\n      properties:\n        id:\n          type: string\n        text:\n          type: string\n        timestamp:\n          type: string\n        children:\n          type: array\n          items:\n            $ref: '#/components/schemas/WindowHierarchyChild'\n      example:\n        id: \"hierarchy\"\n        text: \"Window Hierarchy\"\n        timestamp: \"2020-01-15T06:11:10Z\"\n        children:\n          - $ref: '#/components/examples/windowHierarchyChild'\n\n    Selector:\n      type: object\n      properties:\n        checkable:\n          type: boolean\n        clazz:\n          type: string\n        clickable:\n          type: boolean\n        depth:\n          type: integer\n        desc:\n          type: string\n        pkg:\n          type: string\n        res:\n          type: string\n        scrollable:\n          type: boolean\n        text:\n          type: string\n        index:\n          type: integer\n        instance:\n          type: integer\n      example:\n        $ref: '#/components/examples/selector'\n\n    ObjectRef:\n      type: object\n      properties:\n        oid:\n          type: integer\n        className:\n          type: string\n      required:\n        - oid\n\n    Point:\n      type: object\n      properties:\n        x:\n          type: integer\n        y:\n          type: integer\n\n    ProductName:\n      type: object\n      properties:\n        productName:\n          type: string\n          description: product name of the device\n      example:\n        productName: \"sailfish\"\n\n    Text:\n      type: object\n      properties:\n        text:\n          type: string\n          description: the text in the object\n      example:\n        text: \"lorem ipsum\"\n\n    SwipeBody:\n      type: object\n      properties:\n        segments:\n          type: array\n          items:\n            $ref: '#/components/schemas/Point'\n        segmentSteps:\n          type: integer\n          minimum: 0\n\n  examples:\n    windowHierarchyChild:\n      summary: A sample window hierarchy child\n      value:\n        id: 1\n        parent: 0\n        text: \"android.widget.FrameLayout__ id=1 parent=0\"\n        package: \"com.android.systemui\"\n        checkable: false\n        clickable: false\n        __index: 0\n        contentDescription: \"Some description\"\n        focusable: false\n        resourceId: \"id1\"\n        enabled: true\n        password: false\n        longClickable: false\n        __text: \"Some text\"\n        clazz: \"android.widget.FrameLayout\"\n        scrollable: false\n        selected: false\n        bounds: [ 0, 1794, 1080, 1920 ]\n        children: []\n\n    errorStatusResponse:\n      summary: Error status\n      value:\n        status: ERROR\n        statusCode: 1001\n        errorMessage: There was a problem\n\n    selector:\n      summary: Selector\n      value:\n        desc: \"Equal\"\n        clazz: \"android.widget.Button\"\n        depth: 1\n\n\n  responses:\n    ok:\n      description: OK\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/StatusResponse'\n          example:\n            ststus: OK\n\n    error:\n      description: Operation was not successful\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/StatusResponse\"\n          example:\n            status: ERROR\n            statusCode: 1001\n            errorMessage: There was a problem\n  # does not work:\n  #       example:\n  #           $ref: '#/components/examples/errorStatusResponse'\n\n",
			"canonicalURL": "/github.com/ktorio/ktor-init-tools@790e8b389ae9aed630eea72a73181a3a5b725977/-/blob/ktor-generator/src/jvmTest/resources/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ktorio/ktor-init-tools/blob/790e8b389ae9aed630eea72a73181a3a5b725977/ktor-generator/src/jvmTest/resources/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: json: line 1:2032: json: cannot unmarshal bool into Go struct field Schema.components.schemas.required of type string"
}