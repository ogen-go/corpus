{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/kaiheila/api-docs"
		},
		"file": {
			"name": "kaiheila-openapi.yaml",
			"size": 0,
			"path": "oas/kaiheila-openapi.yaml",
			"byteSize": 64423,
			"content": "openapi: 3.1.0\n\nservers:\n  - url: https://www.kaiheila.cn/api/v3\n    description: 机器人接口\n\ninfo:\n  title: 开黑啦机器人API v3 开发者版\n  version: 3.0.0\n  termsOfService: https://developer.kaiheila.cn/doc/privacy\n  contact:\n    email: service@kaiheila.cn\n  license:\n    name: MIT\n    url: https://github.com/kaiheila/api-docs/blob/main/LICENSE\n  description:\n    $ref: \"./descriptions/_index.yaml#/intro\"\n\n# 如需合并，请执行：npx @redocly/openapi-cli bundle ./api-docs/oas/kaiheila-openapi.yaml -o ./api-docs/oas/kaiheila-openapi-bundled.yaml\ntags:\n  - name: 将Bot连接到开黑啦服务器\n    description: 使用Websocket或Webhook将Bot连接至服务器\n  - name: KMarkdown与卡片消息\n    description:\n      $ref: \"./descriptions/_index.yaml#/kmarkdown-card\"\n  - name: 服务器相关接口\n    description: 服务器相关接口\n  - name: 服务器频道相关接口\n    description: 服务器频道相关接口\n  - name: 频道消息相关接口\n    description: 频道消息相关接口\n  - name: 私聊会话\n    description: 私聊会话相关接口\n  - name: 私聊消息相关接口\n    description: 私聊消息相关接口\n  - name: 用户相关接口\n    description: 用户相关接口\n  - name: 服务器角色权限相关接口\n    description:\n      $ref: \"./descriptions/_index.yaml#/permissions\"\n  - name: 服务器表情相关接口\n    description: 服务器表情相关接口\n  - name: 邀请相关接口\n    description: 邀请相关接口\n  - name: Gateway接口\n    description: Gateway接口\n  - name: 亲密度相关接口\n    description: 亲密度相关接口\n  - name: 附件相关接口\n    description: 附件相关接口\n  - name: 事件通知介绍\n    description:\n      $ref: \"./descriptions/_index.yaml#/event\"\n  - name: 消息相关事件\n    description:\n      $ref: \"./descriptions/events/message.md\"\n  - name: 频道相关事件\n    description: 频道相关事件\n  - name: 服务器相关事件\n    description: 服务器相关事件\n  - name: 用户相关事件\n    description: 用户相关事件\n  - name: 私聊相关事件\n    description: 私聊相关事件\n  - name: 服务器成员相关事件\n    description: 服务器成员相关事件\npaths:\n  /kmarkdown:\n    post:\n      tags:\n        - KMarkdown与卡片消息\n      summary: 事件中的kmarkdown消息格式\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"./components/schemas/message/rich-text.yaml#/kmarkdown\"\n  /cardMessage:\n    post:\n      tags:\n        - KMarkdown与卡片消息\n      summary: 事件中的卡片消息格式\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"./components/schemas/message/rich-text.yaml#/card\"\n  /event:\n    post:\n      tags:\n        - 事件通知介绍\n      summary: 事件结构示例\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"./components/schemas/events/basic.yaml\"\n  /message-object:\n    post:\n      tags:\n        - 标准对象格式\n      summary: 消息对象\n      requestBody:\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - $ref: \"./components/schemas/message/rich-text.yaml#/kmarkdown\"\n                - $ref: \"./components/schemas/message/rich-text.yaml#/card\"\n                - $ref: \"./components/schemas/message/multimedia.yaml#/image\"\n                - $ref: \"./components/schemas/message/multimedia.yaml#/video\"\n                - $ref: \"./components/schemas/message/multimedia.yaml#/file\"\n  /connect-websocket:\n    get:\n      tags:\n        - 将Bot连接到开黑啦服务器\n      summary: 使用Websocket进行连接\n      description:\n        $ref: \"./descriptions/websocket.md\"\n      responses:\n        \"200\":\n          description: 连接成功\n  /connect-webhook:\n    get:\n      tags:\n        - 将Bot连接到开黑啦服务器\n      summary: 使用Webhook进行连接\n      description:\n        $ref: \"./descriptions/webhook.md\"\n      responses:\n        \"200\":\n          description: 连接成功\n  /guild/list:\n    get:\n      tags:\n        - 服务器相关接口\n      summary: 获取当前用户加入的服务器列表\n      description: \"\"\n      operationId: getJoinedGuilds\n      parameters:\n        - $ref: \"#/components/parameters/PageNumberParam\"\n        - $ref: \"#/components/parameters/PageSizeParam\"\n        - name: sort\n          in: query\n          description: 代表排序的字段, 比如-id代表id按DESC排序，id代表id按ASC排序。不一定有, 如果有，接口中会声明支持的排序字段。\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/BasicResponse\"\n                  - type: object\n                    properties:\n                      data:\n                        allOf:\n                          - $ref: \"#/components/schemas/PaginationInfo\"\n                          - type: object\n                            properties:\n                              items:\n                                type: array\n                                items:\n                                  $ref: \"./components/schemas/_index.yaml#/Guild\"\n  /guild/index:\n    get:\n      deprecated: true\n      tags:\n        - 服务器相关接口\n      summary: 获取当前用户加入的服务器列表\n      description: \"\"\n      parameters: []\n      operationId: getJoinedGuildsOld\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Guild\"\n  /guild/view:\n    $ref: \"./paths/guild.yaml#/view\"\n  /guild/user-list:\n    $ref: \"./paths/guild.yaml#/user-list\"\n  /guild/nickname:\n    post:\n      tags:\n        - 服务器相关接口\n      summary: 修改服务器中的用户昵称\n      operationId: changeUserNickname\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - guild_id\n              properties:\n                guild_id:\n                  $ref: \"#/components/schemas/GuildId\"\n                nickname:\n                  type: string\n                  description: 昵称，2 - 64 长度，不传则清空昵称\n                user_id:\n                  allOf:\n                    - $ref: \"#/components/schemas/UserId\"\n                    - description: 要修改昵称的目标用户 ID，不传则修改当前登陆用户的昵称\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BasicResponse\"\n  /guild/leave:\n    post:\n      tags:\n        - 服务器相关接口\n      summary: 离开服务器\n      operationId: leaveGuild\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - guild_id\n              properties:\n                guild_id:\n                  $ref: \"#/components/schemas/GuildId\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BasicResponse\"\n  /guild/kickout:\n    post:\n      tags:\n        - 服务器相关接口\n      summary: 踢出服务器\n      operationId: kickUserById\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - guild_id\n                - target_id\n              properties:\n                guild_id:\n                  $ref: \"#/components/schemas/GuildId\"\n                target_id:\n                  allOf:\n                    - $ref: \"#/components/schemas/UserId\"\n                    - description: 目标用户ID\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BasicResponse\"\n  /guild-mute/list:\n    get:\n      tags:\n        - 服务器相关接口\n      summary: 服务器静音闭麦列表\n      operationId: getGuildMuteUsers\n      parameters:\n        - $ref: \"#/components/parameters/GuildIdParam\"\n        - name: return_type\n          in: query\n          description: 返回格式，建议为\"detail\", 其他情况仅作为兼容\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/BasicResponse\"\n                  - type: object\n                    properties:\n                      data:\n                        type: object\n                        properties:\n                          mic:\n                            description: return_type为detail时返回\n                            type: object\n                            properties:\n                              type:\n                                type: integer\n                                description: 闭麦类型，1为麦克风闭麦\n                                enum:\n                                  - 1\n                              user_ids:\n                                type: array\n                                items:\n                                  $ref: \"#/components/schemas/UserId\"\n                          headset:\n                            description: return_type为detail时返回\n                            type: object\n                            properties:\n                              type:\n                                type: integer\n                                description: 闭麦类型，2为耳机静音\n                                enum:\n                                  - 2\n                              user_ids:\n                                type: array\n                                items:\n                                  $ref: \"#/components/schemas/UserId\"\n  /guild-mute/create:\n    post:\n      tags:\n        - 服务器相关接口\n      summary: 添加服务器闭麦或静音\n      operationId: muteUserById\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - guild_id\n                - target_id\n                - type\n              properties:\n                guild_id:\n                  $ref: \"#/components/schemas/GuildId\"\n                target_id:\n                  allOf:\n                    - $ref: \"#/components/schemas/UserId\"\n                    - description: 目标用户ID\n                type:\n                  type: integer\n                  description: 静音类型，`1`代表麦克风闭麦，`2`代表耳机静音\n                  enum:\n                    - 1\n                    - 2\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BasicResponse\"\n  /guild-mute/delete:\n    post:\n      tags:\n        - 服务器相关接口\n      summary: 删除服务器闭麦或静音\n      operationId: unmuteUserById\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - guild_id\n                - target_id\n                - type\n              properties:\n                guild_id:\n                  $ref: \"#/components/schemas/GuildId\"\n                target_id:\n                  allOf:\n                    - $ref: \"#/components/schemas/UserId\"\n                    - description: 目标用户ID\n                type:\n                  type: integer\n                  description: 静音类型，`1`代表麦克风闭麦，`2`代表耳机静音\n                  enum:\n                    - 1\n                    - 2\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BasicResponse\"\n  /channel/list:\n    $ref: \"./paths/channel.yaml#/list\"\n  /channel/view:\n    $ref: \"./paths/channel.yaml#/view\"\n  /channel/create:\n    $ref: \"./paths/channel.yaml#/create\"\n  /channel/delete:\n    $ref: \"./paths/channel.yaml#/delete\"\n  /channel/user-list:\n    $ref: \"./paths/channel.yaml#/user-list\"\n  /channel/move-user:\n    $ref: \"./paths/channel.yaml#/move-user\"\n  /channel-role/index:\n    $ref: \"./paths/channel-role.yaml#/index\"\n  /channel-role/create:\n    $ref: \"./paths/channel-role.yaml#/create\"\n  /channel-role/update:\n    $ref: \"./paths/channel-role.yaml#/update\"\n  /channel-role/delete:\n    $ref: \"./paths/channel-role.yaml#/delete\"\n  /message/list:\n    $ref: \"./paths/message.yaml#/list\"\n  /message/view:\n    $ref: \"./paths/message.yaml#/view\"\n  /message/create:\n    post:\n      tags:\n        - 频道消息相关接口\n      summary: 发送频道聊天消息\n      operationId: sendChannelMessage\n      requestBody:\n        content:\n          application/json:\n            schema:\n              allOf:\n                - $ref: \"#/components/schemas/SendMessageRequest\"\n                - type: object\n                  required:\n                    - target_id\n                  properties:\n                    target_id:\n                      allOf:\n                        - $ref: \"#/components/schemas/GuildChannelId\"\n                      description: 目标频道 id\n                    temp_target_id:\n                      type: string\n                      description: 用户id,如果传了，代表该消息是临时消息，该消息不会存数据库，但是会在频道内只给该用户推送临时消息。用于在频道内针对用户的操作进行单独的回应通知等。\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                allOf:\n                  - $ref: \"#/components/schemas/BasicResponse\"\n                properties:\n                  data:\n                    properties:\n                      msg_id:\n                        allOf:\n                          - $ref: \"./components/schemas/message/_index.yaml#/basic/properties/id\"\n                        description: 服务端生成的消息 id\n                      msg_timestamp:\n                        type: integer\n                        description: 消息发送时间(ms, 服务器时间戳)\n                        example: 1607072537177\n                      nonce:\n                        type: string\n                        description: 原样返回的字符串\n                        example: xxxx\n  /message/update:\n    post:\n      tags:\n        - 频道消息相关接口\n      summary: 更新频道聊天消息\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - target_id\n                - content\n              properties:\n                msg_id:\n                  $ref: \"./components/schemas/message/_index.yaml#/basic/properties/id\"\n                content:\n                  type: string\n                  description: 消息内容\n                quote:\n                  allOf:\n                    - $ref: \"./components/schemas/message/_index.yaml#/basic/properties/id\"\n                  description: 回复某条消息的`msgId`。如果为空，则代表删除回复，不传则无影响。\n                temp_target_id:\n                  type: string\n                  description: 用户id，针对特定用户临时更新消息，必须是正常消息才能更新。与发送临时消息概念不同，但同样不保存数据库。\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BasicResponse\"\n  /message/delete:\n    post:\n      tags:\n        - 频道消息相关接口\n      summary: 删除频道聊天消息\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - target_id\n                - content\n              properties:\n                msg_id:\n                  $ref: \"./components/schemas/message/_index.yaml#/basic/properties/id\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BasicResponse\"\n  /message/reaction-list:\n    get:\n      tags:\n        - 频道消息相关接口\n      summary: 获取频道消息某个回应的用户列表\n      operationId: getMessageReactionUsers\n      parameters:\n        - name: msg_id\n          in: query\n          description: 频道消息的id\n          required: true\n          schema:\n            $ref: \"./components/schemas/message/_index.yaml#/basic/properties/id\"\n        - name: emoji\n          in: query\n          description: emoji的id, 可以为GuildEmoji或者Emoji, 注意：在get中，应该进行urlencode\n          schema:\n            $ref: \"#/components/schemas/GuildEmojiId\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                allOf:\n                  - $ref: \"#/components/schemas/BasicResponse\"\n                  - type: object\n                    properties:\n                      data:\n                        type: array\n                        items:\n                          allOf:\n                            - $ref: \"#/components/schemas/User\"\n                            - type: object\n                              properties:\n                                reaction_time:\n                                  type: integer\n                                  description: 用户点击reaction的毫秒时间戳\n                                  example: 1612323994414\n  /message/add-reaction:\n    post:\n      tags:\n        - 频道消息相关接口\n      summary: 为消息添加回应\n      operationId: addMessageReaction\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - msg_id\n                - emoji\n              properties:\n                msg_id:\n                  $ref: \"./components/schemas/message/_index.yaml#/basic/properties/id\"\n                emoji:\n                  $ref: \"./components/schemas/_index.yaml#/GuildEmojiId\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BasicResponse\"\n  /message/delete-reaction:\n    post:\n      tags:\n        - 频道消息相关接口\n      summary: 为消息删除回应\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - msg_id\n                - emoji\n              properties:\n                msg_id:\n                  $ref: \"./components/schemas/message/_index.yaml#/basic/properties/id\"\n                emoji:\n                  $ref: \"#/components/schemas/GuildEmojiId\"\n                user_id:\n                  allOf:\n                    - $ref: \"#/components/schemas/UserId\"\n                    - description: 用户的id, 如果不填则为自己的id。删除别人的reaction需要有管理频道消息的权限\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BasicResponse\"\n  /user-chat/list:\n    get:\n      tags:\n        - 私聊会话\n      summary: 获取私信频道列表\n      parameters:\n        - $ref: \"#/components/parameters/PageNumberParam\"\n        - $ref: \"#/components/parameters/PageSizeParam\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/BasicResponse\"\n                  - type: object\n                    properties:\n                      data:\n                        allOf:\n                          - $ref: \"#/components/schemas/PaginationInfo\"\n                          - type: object\n                            properties:\n                              items:\n                                type: array\n                                items:\n                                  $ref: \"#/components/schemas/UserChat\"\n  /user-chat/view:\n    get:\n      tags:\n        - 私聊会话\n      summary: 获取私信频道详情\n      parameters:\n        - name: chat_code\n          in: query\n          description: 私聊会话 Code\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/BasicResponse\"\n                  - type: object\n                    properties:\n                      items:\n                        type: array\n                        items:\n                          $ref: \"./components/schemas/_index.yaml#/UserChatDetail\"\n  /user-chat/create:\n    post:\n      tags:\n        - 私聊会话\n      summary: 创建私信频道\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                target_id:\n                  allOf:\n                    - $ref: \"#/components/schemas/UserId\"\n                  description: 目标用户id\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/BasicResponse\"\n                  - type: object\n                    properties:\n                      items:\n                        type: array\n                        items:\n                          $ref: \"#/components/schemas/UserChatDetail\"\n  /user-chat/delete:\n    post:\n      tags:\n        - 私聊会话\n      summary: 删除私信频道\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                target_id:\n                  allOf:\n                    - $ref: \"#/components/schemas/ChatCode\"\n                  description: 私信会话Code\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BasicResponse\"\n  /direct-message/list:\n    get:\n      tags:\n        - 私聊消息相关接口\n      summary: 获取私信消息列表\n      parameters:\n        - name: chat_code\n          in: query\n          description: 私信会话 Code。`chat_code`与`target_id`必须传一个\n          schema:\n            type: string\n        - name: target_id\n          description: 目标用户 id，后端会自动创建会话。有此参数之后可不传`chat_code`参数\n          in: query\n          schema:\n            $ref: \"#/components/schemas/UserId\"\n        - name: msg_id\n          description: 参考消息 id，不传则查询最新消息\n          in: query\n          schema:\n            $ref: \"./components/schemas/message/_index.yaml#/basic/properties/id\"\n        - $ref: \"#/components/parameters/MessageListFlagParam\"\n        - $ref: \"#/components/parameters/PageNumberParam\"\n        - name: page_size\n          in: query\n          description: 当前分页消息数量, 默认50\n          schema:\n            type: integer\n            default: 50\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/BasicResponse\"\n                  - type: object\n                    properties:\n                      data:\n                        type: object\n                        properties:\n                          items:\n                            type: array\n                            items:\n                              $ref: \"#/components/schemas/DirectMessage\"\n  /direct-message/create:\n    post:\n      tags:\n        - 私聊消息相关接口\n      summary: 发送私信聊天消息\n      requestBody:\n        content:\n          application/json:\n            schema:\n              allOf:\n                - $ref: \"#/components/schemas/SendMessageRequest\"\n              type: object\n              properties:\n                target_id:\n                  allOf:\n                    - $ref: \"#/components/schemas/UserId\"\n                  description: 目标用户 id，后端会自动创建会话。有此参数之后可不传`chat_code`参数\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                allOf:\n                  - $ref: \"#/components/schemas/BasicResponse\"\n                properties:\n                  data:\n                    properties:\n                      msg_id:\n                        type: string\n                        description: 服务端生成的消息 id\n                        example: 50974c-364c983fa6cb\n                      msg_timestamp:\n                        type: integer\n                        description: 消息发送时间(ms, 服务器时间戳)\n                        example: 1607072537177\n                      nonce:\n                        type: string\n                        description: 原样返回的字符串\n                        example: xxxx\n  /direct-message/update:\n    post:\n      tags:\n        - 私聊消息相关接口\n      summary: 更新私信聊天消息\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - target_id\n                - content\n              properties:\n                msg_id:\n                  $ref: \"./components/schemas/message/_index.yaml#/basic/properties/id\"\n                content:\n                  type: string\n                  description: 消息内容\n                quote:\n                  allOf:\n                    - $ref: \"./components/schemas/message/_index.yaml#/basic/properties/id\"\n                  description: 回复某条消息的`msgId`。如果为空，则代表删除回复，不传则无影响。\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BasicResponse\"\n  /direct-message/delete:\n    post:\n      tags:\n        - 私聊消息相关接口\n      summary: 删除私信聊天消息\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - target_id\n                - content\n              properties:\n                msg_id:\n                  $ref: \"./components/schemas/message/_index.yaml#/basic/properties/id\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BasicResponse\"\n  /direct-message/reaction-list:\n    get:\n      tags:\n        - 私聊消息相关接口\n      summary: 获取消息某个回应的用户列表\n      parameters:\n        - name: msg_id\n          in: query\n          description: 消息的id\n          required: true\n          schema:\n            $ref: \"./components/schemas/message/_index.yaml#/basic/properties/id\"\n        - name: emoji\n          in: query\n          description: emoji的id, 可以为GuildEmoji或者Emoji, 注意：在get中，应该进行urlencode\n          schema:\n            $ref: \"#/components/schemas/GuildEmojiId\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                allOf:\n                  - $ref: \"#/components/schemas/BasicResponse\"\n                  - type: object\n                    properties:\n                      data:\n                        type: array\n                        items:\n                          allOf:\n                            - $ref: \"#/components/schemas/User\"\n                            - type: object\n                              properties:\n                                reaction_time:\n                                  type: integer\n                                  description: 用户点击reaction的毫秒时间戳\n  /direct-message/add-reaction:\n    post:\n      tags:\n        - 私聊消息相关接口\n      summary: 为消息添加回应\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - msg_id\n                - emoji\n              properties:\n                msg_id:\n                  $ref: \"./components/schemas/message/_index.yaml#/basic/properties/id\"\n                emoji:\n                  $ref: \"#/components/schemas/GuildEmojiId\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BasicResponse\"\n  /direct-message/delete-reaction:\n    post:\n      tags:\n        - 私聊消息相关接口\n      summary: 为消息删除回应\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - msg_id\n                - emoji\n              properties:\n                msg_id:\n                  $ref: \"./components/schemas/message/_index.yaml#/basic/properties/id\"\n                emoji:\n                  $ref: \"#/components/schemas/GuildEmojiId\"\n                user_id:\n                  allOf:\n                    - $ref: \"#/components/schemas/UserId\"\n                    - description: 用户的id, 如果不填则为自己的id。删除别人的reaction需要有管理频道消息的权限\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BasicResponse\"\n  /gateway/index:\n    get:\n      tags:\n        - Gateway接口\n      summary: 获取网关连接地址\n      operationId: getIndex\n      parameters:\n        - name: compress\n          in: query\n          description: 下发数据是否压缩，默认为`1`,代表压缩\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/BasicResponse\"\n                properties:\n                  data:\n                    type: object\n                    properties:\n                      url:\n                        type: string\n                        description: 网关的连接地址\n                        example: wss://xxxx\n  /user/me:\n    get:\n      tags:\n        - 用户相关接口\n      summary: 获取当前用户信息\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/BasicResponse\"\n                  - type: object\n                    properties:\n                      data:\n                        allOf:\n                          - $ref: \"#/components/schemas/User\"\n                          - type: object\n                            properties:\n                              mobile_verified:\n                                type: boolean\n                                description: 手机号是否已验证\n                                example: true\n                              mobile_prefix:\n                                type: string\n                                description: 手机区号,如中国为86\n                                example: \"86\"\n                              mobile:\n                                type: string\n                                description: 用户手机号，带掩码\n                                example: \"110****2333\"\n                              invited_count:\n                                type: integer\n                                description: 当前邀请注册的人数\n                                example: 3\n  /user/view:\n    get:\n      tags:\n        - 用户相关接口\n      summary: 获取目标用户信息\n      parameters:\n        - $ref: \"#/components/parameters/UserIdParam\"\n        - name: guild_id\n          in: query\n          description: 服务器id\n          schema:\n            $ref: \"#/components/schemas/GuildId\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/BasicResponse\"\n                  - type: object\n                    properties:\n                      data:\n                        allOf:\n                          - $ref: \"#/components/schemas/User\"\n                          - type: object\n                            properties:\n                              mobile_verified:\n                                type: boolean\n                                description: 手机号是否已验证\n                                example: true\n                              roles:\n                                type: array\n                                description: 用户在当前服务器中的角色 id 组成的列表\n                                items:\n                                  $ref: \"#/components/schemas/GuildRoleId\"\n                              joined_at:\n                                type: integer\n                                description: 加入服务器时间\n                                example: 1621338425000\n                              active_time:\n                                type: integer\n                                description: 活跃时间\n                                example: 1628688607719\n  /user/offline:\n    post:\n      tags:\n        - 用户相关接口\n      summary: 机器人下线\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/BasicResponse\"\n  /asset/create:\n    post:\n      tags:\n        - 附件相关接口\n      summary: 上传多媒体文件\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                file:\n                  type: string\n                  format: binary\n                  description: 目前支持 **图片**, **视频(.mp4 .mov)**, **文件**\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/BasicResponse\"\n                  - type: object\n                    properties:\n                      data:\n                        type: object\n                        properties:\n                          url:\n                            type: string\n                            description: 资源url\n                            example: https://img.kaiheila.cn/attachments/2021-01/18/xxxxxxxxx.txt\n  /guild-role/list:\n    get:\n      tags:\n        - 服务器角色权限相关接口\n      summary: 获取服务器角色列表\n      parameters:\n        - $ref: \"#/components/parameters/GuildIdParam\"\n        - $ref: \"#/components/parameters/PageNumberParam\"\n        - $ref: \"#/components/parameters/PageSizeParam\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/BasicResponse\"\n                  - type: object\n                    properties:\n                      data:\n                        allOf:\n                          - $ref: \"#/components/schemas/PaginationInfo\"\n                          - type: object\n                            properties:\n                              items:\n                                type: array\n                                items:\n                                  type: object\n                                  $ref: \"./components/schemas/_index.yaml#/GuildRole\"\n  /guild-role/create:\n    post:\n      tags:\n        - 服务器角色权限相关接口\n      summary: 创建服务器角色\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - guild_id\n              properties:\n                guild_id:\n                  $ref: \"#/components/schemas/GuildId\"\n                name:\n                  type: string\n                  description: 如果不写，则为\"新角色\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/BasicResponse\"\n                  - type: object\n                    properties:\n                      data:\n                        $ref: \"#/components/schemas/GuildRole\"\n  /guild-role/update:\n    post:\n      tags:\n        - 服务器角色权限相关接口\n      summary: 更新服务器角色\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - guild_id\n                - role_id\n              properties:\n                guild_id:\n                  $ref: \"#/components/schemas/GuildId\"\n                role_id:\n                  type: integer\n                  format: unsigned integer\n                  description: 角色id\n                  example: 702\n                name:\n                  type: string\n                  description: 角色名称\n                  example: 管理员\n                color:\n                  type: integer\n                  format: unsigned integer\n                  minimum: 0\n                  maximum: 16777215\n                  description: 颜色\n                  example: 0\n                hoist:\n                  type: integer\n                  format: unsigned integer\n                  description: 只能为0或者1，是否把该角色的用户在用户列表排到前面\n                  enum:\n                    - 0\n                    - 1\n                mentionable:\n                  type: integer\n                  format: unsigned integer\n                  description: 只能为0或者1，该角色是否可以被提及\n                  enum:\n                    - 0\n                    - 1\n                permissions:\n                  type: integer\n                  format: unsigned integer\n                  description: 权限,参见[权限说明](https://developer.kaiheila.cn/doc/http/guild-role#权限说明)\n                  example: 2048\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/BasicResponse\"\n                  - type: object\n                    properties:\n                      data:\n                        $ref: \"#/components/schemas/GuildRole\"\n  /guild-role/delete:\n    post:\n      tags:\n        - 服务器角色权限相关接口\n      summary: 删除服务器角色\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - guild_id\n                - role_id\n              properties:\n                guild_id:\n                  $ref: \"#/components/schemas/GuildId\"\n                role_id:\n                  type: integer\n                  format: unsigned integer\n                  description: 角色id\n                  example: 702\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/BasicResponse\"\n  /guild-role/grant:\n    post:\n      tags:\n        - 服务器角色权限相关接口\n      summary: 赋予用户角色\n      operationId: grantGuildRole\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - guild_id\n                - user_id\n                - role_id\n              properties:\n                guild_id:\n                  $ref: \"#/components/schemas/GuildId\"\n                user_id:\n                  $ref: \"#/components/schemas/UserId\"\n                role_id:\n                  $ref: \"#/components/schemas/GuildRoleId\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/BasicResponse\"\n                  - type: object\n                    properties:\n                      data:\n                        type: object\n                        properties:\n                          user_id:\n                            $ref: \"#/components/schemas/UserId\"\n                          guild_id:\n                            $ref: \"#/components/schemas/GuildId\"\n                          roles:\n                            type: array\n                            description: 角色id的列表\n                            items:\n                              $ref: \"./components/schemas/_index.yaml#/GuildRoleId\"\n  /guild-role/revoke:\n    post:\n      tags:\n        - 服务器角色权限相关接口\n      summary: 删除用户角色\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - guild_id\n                - user_id\n                - role_id\n              properties:\n                guild_id:\n                  $ref: \"#/components/schemas/GuildId\"\n                user_id:\n                  $ref: \"#/components/schemas/UserId\"\n                role_id:\n                  $ref: \"#/components/schemas/GuildRoleId\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/BasicResponse\"\n                  - type: object\n                    properties:\n                      data:\n                        type: object\n                        properties:\n                          user_id:\n                            $ref: \"#/components/schemas/UserId\"\n                          guild_id:\n                            $ref: \"#/components/schemas/GuildId\"\n                          roles:\n                            type: array\n                            description: 角色id的列表\n                            items:\n                              $ref: \"#/components/schemas/GuildRoleId\"\n  /intimacy/index:\n    get:\n      tags:\n        - 亲密度相关接口\n      summary: 获取用户的亲密度\n      operationId: getIntimacy\n      description: 机器人可以在后台配置默认的初始亲密度和形象，当用户触发某些事件时，机器人可以根据一些逻辑来更新与该用户的亲密度以及形象展示。\n      parameters:\n        - $ref: \"./components/parameters/_index.yaml#/UserIdParam\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/BasicResponse\"\n                  - type: object\n                    properties:\n                      data:\n                        type: object\n                        properties:\n                          img_url:\n                            type: string\n                            description: 机器人给用户显示的形象图片地址\n                          social_info:\n                            type: string\n                            description: 机器人显示给用户的社交信息\n                            example: test\n                          last_read:\n                            type: integer\n                            description: 用户上次查看的时间戳\n                            example: 0\n                          img_list:\n                            type: array\n                            description: 形象图片的总列表\n                            items:\n                              type: object\n                              properties:\n                                id:\n                                  type: string\n                                  description: 形象图片的 id\n                                  example: \"11\"\n                                url:\n                                  type: string\n                                  description: 形象图片的地址\n                                  example: \"\"\n  /intimacy/update:\n    post:\n      tags:\n        - 亲密度相关接口\n      summary: 更新用户亲密度\n      operationId: updateIntimacy\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - user_id\n              properties:\n                user_id:\n                  allOf:\n                    - $ref: \"#/components/schemas/UserId\"\n                  description: 用户的id\n                score:\n                  type: integer\n                  description: 亲密度，0-2200\n                  example: 123\n                social_info:\n                  type: string\n                  description: 机器人与用户的社交信息，500 字以内\n                  example: test\n                img_id:\n                  type: string\n                  description: 表情 ID\n                  example: \"1\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/BasicResponse\"\n  /guild-emoji/list:\n    get:\n      tags:\n        - 服务器表情相关接口\n      summary: 获取服务器表情列表\n      operationId: getGuildEmojis\n      parameters:\n        - $ref: \"#/components/parameters/PageNumberParam\"\n        - $ref: \"#/components/parameters/PageSizeParam\"\n        - $ref: \"#/components/parameters/GuildIdParam\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/BasicResponse\"\n                  - type: object\n                    properties:\n                      data:\n                        allOf:\n                          - $ref: \"#/components/schemas/PaginationInfo\"\n                          - type: object\n                            properties:\n                              items:\n                                type: array\n                                items:\n                                  type: object\n                                  $ref: \"#/components/schemas/GuildEmoji\"\n  /guild-emoji/create:\n    post:\n      tags:\n        - 服务器表情相关接口\n      summary: 创建服务器表情\n      operationId: createGuildEmoji\n      description: Header 中 Content-Type 必须为 multipart/form-data\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              required:\n                - guild_id\n                - emoji\n              properties:\n                name:\n                  type: string\n                  description: 表情名。长度限制 2 - 32 字符，如果不写，则为随机字符串\n                guild_id:\n                  $ref: \"#/components/schemas/GuildId\"\n                emoji:\n                  type: string\n                  format: binary\n                  description: 表情文件。必须为 PNG 类型，大小不能超过 256 KB\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/BasicResponse\"\n                  - type: object\n                    properties:\n                      data:\n                        $ref: \"#/components/schemas/GuildEmoji\"\n  /guild-emoji/update:\n    post:\n      tags:\n        - 服务器表情相关接口\n      summary: 更新服务器表情\n      operationId: updateGuildEmoji\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - name\n                - id\n              properties:\n                name:\n                  type: string\n                  description: 表情名。长度限制 2 - 32 字符，如果不写，则为随机字符串\n                id:\n                  type: string\n                  description: 表情 ID\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/BasicResponse\"\n  /guild-emoji/delete:\n    post:\n      tags:\n        - 服务器表情相关接口\n      operationId: deleteGuildEmoji\n      summary: 删除服务器表情\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              required:\n                - id\n              properties:\n                id:\n                  type: string\n                  description: 表情 ID\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/BasicResponse\"\n  /invite/list:\n    get:\n      tags:\n        - 邀请相关接口\n      summary: 获取邀请列表\n      operationId: listInvites\n      description: 服务器id或者频道id必须填一个\n      parameters:\n        - name: guild_id\n          in: query\n          description: 服务器id\n          required: false\n          schema:\n            $ref: \"#/components/schemas/GuildId\"\n        - $ref: \"#/components/parameters/GuildChannelIdParam\"\n        - $ref: \"#/components/parameters/PageNumberParam\"\n        - $ref: \"#/components/parameters/PageSizeParam\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/BasicResponse\"\n                  - type: object\n                    properties:\n                      data:\n                        allOf:\n                          - $ref: \"#/components/schemas/PaginationInfo\"\n                          - type: object\n                            properties:\n                              items:\n                                type: array\n                                items:\n                                  type: object\n                                  properties:\n                                    channel_id:\n                                      $ref: \"#/components/schemas/GuildChannelId\"\n                                    guild_id:\n                                      $ref: \"#/components/schemas/GuildId\"\n                                    url_code:\n                                      type: string\n                                      description: 邀请码\n                                      example: XXX\n                                    url:\n                                      type: string\n                                      description: 邀请链接\n                                      example: https://kaihei.co/XXX\n                                    user:\n                                      $ref: \"#/components/schemas/User\"\n  /invite/create:\n    post:\n      tags:\n        - 邀请相关接口\n      operationId: createInvite\n      summary: 创建邀请链接\n      description: 服务器id或者频道id必须填一个\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                guild_id:\n                  $ref: \"#/components/schemas/GuildId\"\n                channel_id:\n                  $ref: \"#/components/schemas/GuildChannelId\"\n                duration:\n                  type: integer\n                  description: 邀请链接有效时长（秒）（ 0 => 永不； 1800 => 0.5小时； 3600 => 1个小时； 21600 => 6个小时； 43200 => 12个小时； 86400 => 1天； 604800 => 7天）\n                  default: 604800\n                  example: 604800\n                  enum:\n                    - 0\n                    - 1800\n                    - 3600\n                    - 32600\n                    - 43200\n                    - 86400\n                    - 604800\n                setting_times:\n                  type: integer\n                  description: 设置的次数 （ -1 => 无限制； 1 => 1次使用； 5 => 5次使用； 10 => 10次使用 ；25 => 25次使用； 50 => 50次使用； 100 => 100次使用）\n                  default: -1\n                  example: -1\n                  enum:\n                    - -1\n                    - 1\n                    - 5\n                    - 10\n                    - 25\n                    - 50\n                    - 100\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/BasicResponse\"\n                  - type: object\n                    properties:\n                      data:\n                        type: object\n                        properties:\n                          url:\n                            type: string\n                            description: 邀请链接\n                            example: https://kaihei.co/xxxx\n  /invite/delete:\n    post:\n      tags:\n        - 邀请相关接口\n      summary: 删除邀请链接\n      operationId: deleteInvite\n      description: 服务器id或者频道id必须填一个\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - url_code\n              properties:\n                url_code:\n                  type: string\n                  example: XXX\n                guild_id:\n                  $ref: \"#/components/schemas/GuildId\"\n                channel_id:\n                  $ref: \"#/components/schemas/GuildChannelId\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BasicResponse\"\n\nwebhooks:\n  textMessage:\n    post:\n      tags:\n        - 消息相关事件\n      summary: 文字消息\n      requestBody:\n        $ref: \"./components/requestBodies/event-message/rich-text.yaml#/text\"\n  imageMessage:\n    post:\n      tags:\n        - 消息相关事件\n      summary: 图片消息\n      requestBody:\n        $ref: \"./components/requestBodies/event-message/multimedia.yaml#/image\"\n  videoMessage:\n    post:\n      tags:\n        - 消息相关事件\n      summary: 视频消息\n      requestBody:\n        $ref: \"./components/requestBodies/event-message/multimedia.yaml#/video\"\n  fileMessage:\n    post:\n      tags:\n        - 消息相关事件\n      summary: 文件消息\n      requestBody:\n        $ref: \"./components/requestBodies/event-message/multimedia.yaml#/file\"\n  kmarkdownMessage:\n    post:\n      tags:\n        - 消息相关事件\n      summary: KMarkDown消息\n      requestBody:\n        $ref: \"./components/requestBodies/event-message/rich-text.yaml#/kmarkdown\"\n  cardMessage:\n    post:\n      tags:\n        - 消息相关事件\n      summary: 卡片消息\n      requestBody:\n        $ref: \"./components/requestBodies/event-message/rich-text.yaml#/card\"\n  userAddReaction:\n    post:\n      tags:\n        - 频道相关事件\n      summary: 用户添加reaction\n      requestBody:\n        $ref: \"./components/requestBodies/event-channel/reaction.yaml#/add\"\n  userDeleteReaction:\n    post:\n      tags:\n        - 频道相关事件\n      summary: 频道内用户取消reaction\n      requestBody:\n        $ref: \"./components/requestBodies/event-channel/reaction.yaml#/delete\"\n  updateMessge:\n    post:\n      tags:\n        - 频道相关事件\n        - 消息相关事件\n      summary: 频道消息更新\n      requestBody:\n        $ref: \"./components/requestBodies/event-channel/message.yaml#/update\"\n  deleteMessage:\n    post:\n      tags:\n        - 频道相关事件\n        - 消息相关事件\n      summary: 频道消息被删除\n      requestBody:\n        $ref: \"./components/requestBodies/event-channel/message.yaml#/delete\"\n  createChannel:\n    post:\n      tags:\n        - 频道相关事件\n      summary: 新增频道\n      requestBody:\n        $ref: \"./components/requestBodies/event-channel/channel.yaml#/create\"\n  updateChannel:\n    post:\n      tags:\n        - 频道相关事件\n      summary: 频道信息更新\n      requestBody:\n        $ref: \"./components/requestBodies/event-channel/channel.yaml#/update\"\n  deleteChannel:\n    post:\n      tags:\n        - 频道相关事件\n      summary: 删除频道\n      requestBody:\n        $ref: \"./components/requestBodies/event-channel/channel.yaml#/delete\"\n\n  pinMessage:\n    post:\n      tags:\n        - 频道相关事件\n      summary: 新的频道置顶消息\n      requestBody:\n        $ref: \"./components/requestBodies/event-channel/pin.yaml#/add\"\n  unpinMessage:\n    post:\n      tags:\n        - 频道相关事件\n      summary: 取消频道置顶消息\n      requestBody:\n        $ref: \"./components/requestBodies/event-channel/pin.yaml#/cancel\"\n  updatePrivateMessage:\n    post:\n      tags:\n        - 私聊相关事件\n      summary: 私聊消息更新\n      requestBody:\n        $ref: \"./components/requestBodies/event-direct-message/message.yaml#/update\"\n  deletePrivateMessage:\n    post:\n      tags:\n        - 私聊相关事件\n      summary: 私聊消息被删除\n      requestBody:\n        $ref: \"./components/requestBodies/event-direct-message/message.yaml#/delete\"\n  privateAddReaction:\n    post:\n      tags:\n        - 私聊相关事件\n      summary: 私聊内用户添加reaction\n      requestBody:\n        $ref: \"./components/requestBodies/event-direct-message/reaction.yaml#/add\"\n  privateDeleteReaction:\n    post:\n      tags:\n        - 私聊相关事件\n      summary: 私聊内用户删除reaction\n      requestBody:\n        $ref: \"./components/requestBodies/event-direct-message/reaction.yaml#/delete\"\n  memberJoin:\n    post:\n      tags:\n        - 服务器成员相关事件\n      summary: 新成员加入服务器\n      requestBody:\n        $ref: \"./components/requestBodies/event-member/member.yaml#/join\"\n  memberExit:\n    post:\n      tags:\n        - 服务器成员相关事件\n      summary: 服务器成员退出\n      requestBody:\n        $ref: \"./components/requestBodies/event-member/member.yaml#/exit\"\n  memberUpdate:\n    post:\n      tags:\n        - 服务器成员相关事件\n      summary: 服务器成员信息更新\n      requestBody:\n        $ref: \"./components/requestBodies/event-member/member.yaml#/update\"\n  memberOnline:\n    post:\n      tags:\n        - 服务器成员相关事件\n      summary: 服务器成员信息上线\n      requestBody:\n        $ref: \"./components/requestBodies/event-member/member.yaml#/online\"\n  memberOffline:\n    post:\n      tags:\n        - 服务器成员相关事件\n      summary: 服务器成员信息下线\n      requestBody:\n        $ref: \"./components/requestBodies/event-member/member.yaml#/offline\"\n  roleAdd:\n    post:\n      tags:\n        - 服务器角色相关事件\n      summary: 服务器角色增加\n      requestBody:\n        $ref: \"./components/requestBodies/event-role/role.yaml#/add\"\n  roleUpdate:\n    post:\n      tags:\n        - 服务器角色相关事件\n      summary: 服务器角色更新\n      requestBody:\n        $ref: \"./components/requestBodies/event-role/role.yaml#/update\"\n  roleDelete:\n    post:\n      tags:\n        - 服务器角色相关事件\n      summary: 服务器角色删除\n      requestBody:\n        $ref: \"./components/requestBodies/event-role/role.yaml#/delete\"\n  guildUpdate:\n    post:\n      tags:\n        - 服务器相关事件\n      summary: 服务器信息更新\n      requestBody:\n        $ref: \"./components/requestBodies/event-guild/guild.yaml#/update\"\n  guildDelete:\n    post:\n      tags:\n        - 服务器相关事件\n      summary: 服务器删除\n      requestBody:\n        $ref: \"./components/requestBodies/event-guild/guild.yaml#/delete\"\n  guildBanUser:\n    post:\n      tags:\n        - 服务器相关事件\n      summary: 服务器封禁用户\n      requestBody:\n        $ref: \"./components/requestBodies/event-guild/user.yaml#/ban\"\n  guildUnbanUser:\n    post:\n      tags:\n        - 服务器相关事件\n      summary: 服务器解除封禁用户\n      requestBody:\n        $ref: \"./components/requestBodies/event-guild/user.yaml#/unban\"\n  userJoinChannel:\n    post:\n      tags:\n        - 用户相关事件\n        - 频道相关事件\n      summary: 用户加入语音频道\n      requestBody:\n        $ref: \"./components/requestBodies/event-user/channel.yaml#/join\"\n  userExitChannel:\n    post:\n      tags:\n        - 用户相关事件\n        - 频道相关事件\n      summary: 用户退出语音频道\n      requestBody:\n        $ref: \"./components/requestBodies/event-user/channel.yaml#/exit\"\n  userJoinGuild:\n    post:\n      tags:\n        - 用户相关事件\n        - 频道相关事件\n      summary: 自己加入服务器\n      description: |\n        当自己被邀请或主动加入新的服务器时, 产生该事件（对于机器人来说，就是机器人被邀请进入新服务器）\n      requestBody:\n        $ref: \"./components/requestBodies/event-user/guild.yaml#/join\"\n  userExitGuild:\n    post:\n      tags:\n        - 用户相关事件\n        - 频道相关事件\n      summary: 自己退出服务器\n      description: |\n        当自己被踢出服务器或被拉黑或主动退出服务器时, 产生该事件（对于机器人来说，就是机器人被踢出/拉黑/主动退出新服务器）\n      requestBody:\n        $ref: \"./components/requestBodies/event-user/guild.yaml#/exit\"\n  userUpdateInfo:\n    post:\n      tags:\n        - 用户相关事件\n        - 频道相关事件\n      summary: 用户信息更新\n      description: |\n        **该事件与服务器无关, 遵循以下条件**\n        - 仅当用户的 **用户名** 或 **头像** 变更时;\n        - 仅通知与该用户存在关联的用户或Bot: a. 存在聊天会话 b. 双方好友关系\n      requestBody:\n        $ref: \"./components/requestBodies/event-user/info.yaml#/update\"\n  userClickButton:\n    post:\n      tags:\n        - 用户相关事件\n        - 消息相关事件\n      summary: 用户点击按钮（Card Message）\n      requestBody:\n        $ref: \"./components/requestBodies/event-user/message.yaml#/click-button\"\ncomponents:\n  parameters:\n    $ref: \"./components/parameters/_index.yaml\"\n  schemas:\n    $ref: \"./components/schemas/_index.yaml\"\nsecurity: []\n",
			"canonicalURL": "/github.com/kaiheila/api-docs@59c4788e1e6ee659cab29e4f967d672348f4737e/-/blob/oas/kaiheila-openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/kaiheila/api-docs/blob/59c4788e1e6ee659cab29e4f967d672348f4737e/oas/kaiheila-openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: json: line 1:37: json: unable to unmarshal Go value of type ogen.Spec: spec: json: cannot unmarshal JSON string into Go value of type ogen.Parameter"
}