{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/meedan/pender"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "swagger/v1/swagger.yaml",
			"byteSize": 24491,
			"content": "---\nopenapi: 3.0.1\ninfo:\n  title: Pender\n  version: v1\n  description: A parsing and rendering service\ncomponents:\n  securitySchemes:\n    api_key:\n      type: apiKey\n      name: X-Pender-Token\n      in: header\npaths:\n  \"/api/about\":\n    get:\n      summary: Information about this application\n      tags:\n      - base_api\n      description: Use this method to get the archivers enabled on this application\n      security:\n      - api_key: {}\n      responses:\n        '200':\n          description: Information about the application\n          content:\n            application/json:\n              example:\n                type: about\n                data:\n                  name: Keep\n                  version: v0.76.0\n                  archivers:\n                  - key: archive_is\n                    label: Archive.is\n                  - key: archive_org\n                    label: Archive.org\n                  - key: perma_cc\n                    label: Perma.cc\n                  - key: video\n                    label: Video\n              schema:\n                type: object\n                properties:\n                  type:\n                    type: string\n                  data:\n                    type: object\n                    properties:\n                      name:\n                        type: string\n                      version:\n                        type: string\n                      archivers:\n                        type: array\n                        items:\n                          type: object\n                          properties:\n                            key:\n                              type: string\n                            label:\n                              type: string\n                          required:\n                          - key\n                          - label\n                    required:\n                    - name\n                    - version\n                    - archivers\n                required:\n                - type\n                - data\n        '401':\n          description: Access denied\n          content:\n            application/json:\n              example:\n                type: error\n                data:\n                  message: Unauthorized\n                  code: 1\n              schema:\n                type: object\n                properties:\n                  type:\n                    type: string\n                  data:\n                    type: object\n                    properties:\n                      message:\n                        type: string\n                      code:\n                        type: integer\n                    required:\n                    - message\n                    - code\n                required:\n                - type\n                - data\n  \"/api/medias\":\n    get:\n      summary: Get the metadata for a given URL\n      tags:\n      - medias\n      description: Get parseable data for a given URL, that can be a post or a profile,\n        from different providers\n      parameters:\n      - name: url\n        in: query\n        required: true\n        description: URL to be parsed/rendered\n        schema:\n          type: string\n      - name: refresh\n        in: query\n        required: false\n        description: Force a refresh from the URL instead of the cache\n        schema:\n          type: integer\n      - name: archivers\n        in: query\n        required: false\n        description: List of archivers to target. Can be empty, `none` or a list of\n          archives separated by commas\n        schema:\n          type: string\n      security:\n      - api_key: {}\n      responses:\n        '200':\n          description: Parsed data\n          content:\n            application/json:\n              example:\n                type: media\n                data:\n                  published_at: ''\n                  username: ''\n                  title: ''\n                  description: ''\n                  picture: ''\n                  author_url: ''\n                  author_picture: ''\n                  author_name: ''\n                  screenshot: ''\n                  external_id: ''\n                  html: ''\n                  metrics: {}\n                  archives: {}\n                  raw:\n                    metatags:\n                    - http-equiv: X-UA-Compatible\n                      content: IE=edge\n                    - http-equiv: origin-trial\n                      data-feature: Web Components V0\n                      data-expires: '2020-10-23'\n                      content: AhbmRDASY7NuOZD9cFMgQihZ+mQpCwa8WTGdTx82vSar9ddBQbziBfZXZg+ScofvEZDdHQNCEwz4yM7HjBS9RgkAAABneyJvcmlnaW4iOiJodHRwczovL3lvdXR1YmUuY29tOjQ0MyIsImZlYXR1cmUiOiJXZWJDb21wb25lbnRzVjAiLCJleHBpcnkiOjE2MDM0ODY4NTYsImlzU3ViZG9tYWluIjp0cnVlfQ==\n                    - http-equiv: origin-trial\n                      data-feature: Web Components V0\n                      data-expires: '2020-10-27'\n                      content: Av2+1qfUp3MwEfAFcCccykS1qFmvLiCrMZ//pHQKnRZWG9dldVo8HYuJmGj2wZ7nDg+xE4RQMQ+Ku1zKM3PvYAIAAABmeyJvcmlnaW4iOiJodHRwczovL2dvb2dsZS5jb206NDQzIiwiZmVhdHVyZSI6IldlYkNvbXBvbmVudHNWMCIsImV4cGlyeSI6MTYwMzgzNjc3MiwiaXNTdWJkb21haW4iOnRydWV9\n                    - http-equiv: origin-trial\n                      data-feature: Web Components V0\n                      data-expires: '2021-01-08'\n                      content: AixUK+8UEShlt6+JX1wy9eg+XL+eV5PYSEDPH3C90JNVbIkE1Rg1FyVUfu2bZ/y6Pm1xbPLzuwHYHjv4uKPNnA4AAABqeyJvcmlnaW4iOiJodHRwczovL2dvb2dsZXByb2QuY29tOjQ0MyIsImZlYXR1cmUiOiJXZWJDb21wb25lbnRzVjAiLCJleHBpcnkiOjE2MTAwNjQ0MjMsImlzU3ViZG9tYWluIjp0cnVlfQ==\n                    - http-equiv: origin-trial\n                      data-feature: Web Components V0\n                      data-expires: '2021-03-09'\n                      content: AhHpq2nUT6fqP0Kmkq49EWIcl2P1LK1ceU05BoiVnWi8ZIWDdmX/kMwL+ZtuC3oIf0tns8XnO5fm946JEzPVEwgAAABqeyJvcmlnaW4iOiJodHRwczovL2MuZ29vZ2xlcnMuY29tOjQ0MyIsImZlYXR1cmUiOiJXZWJDb21wb25lbnRzVjAiLCJleHBpcnkiOjE2MTIyMjM5OTksImlzU3ViZG9tYWluIjp0cnVlfQ==\n                    - name: theme-color\n                      content: rgba(255, 255, 255, 0.98)\n                    - name: title\n                      content: MeedanTube\n                    - name: description\n                      content: Enjoy the videos and music you love, upload original\n                        content, and share it all with friends, family, and the world\n                        on YouTube.\n                    - name: keywords\n                      content: Meedan Arabic English language translation social media\n                        news currentaffairs nonprofit dialogue\n                    - property: og:site_name\n                      content: YouTube\n                    - property: og:url\n                      content: https://www.youtube.com/channel/UCL6xkW90kBI76OuApogUbFQ\n                    - property: og:title\n                      content: MeedanTube\n                    - property: og:image\n                      content: https://yt3.ggpht.com/a/AATXAJzLW496voft4Qc6JoR1mBy5N1X1v56uEGaY_msX8A=s900-c-k-c0x00ffffff-no-rj\n                    - property: og:image:width\n                      content: '900'\n                    - property: og:image:height\n                      content: '900'\n                    - property: og:description\n                    - property: al:ios:app_store_id\n                      content: '544007664'\n                    - property: al:ios:app_name\n                      content: YouTube\n                    - property: al:ios:url\n                      content: vnd.youtube://www.youtube.com/channel/UCL6xkW90kBI76OuApogUbFQ\n                    - property: al:android:url\n                      content: https://www.youtube.com/channel/UCL6xkW90kBI76OuApogUbFQ?feature=applinks\n                    - property: al:android:app_name\n                      content: YouTube\n                    - property: al:android:package\n                      content: com.google.android.youtube\n                    - property: al:web:url\n                      content: https://www.youtube.com/channel/UCL6xkW90kBI76OuApogUbFQ?feature=applinks\n                    - property: og:type\n                      content: profile\n                    - property: og:video:tag\n                      content: Meedan\n                    - property: og:video:tag\n                      content: Arabic\n                    - property: og:video:tag\n                      content: English\n                    - property: og:video:tag\n                      content: language\n                    - property: og:video:tag\n                      content: translation\n                    - property: og:video:tag\n                      content: social\n                    - property: og:video:tag\n                      content: media\n                    - property: og:video:tag\n                      content: news\n                    - property: og:video:tag\n                      content: currentaffairs\n                    - property: og:video:tag\n                      content: nonprofit\n                    - property: og:video:tag\n                      content: dialogue\n                    - property: fb:app_id\n                      content: '87741124305'\n                    - name: twitter:card\n                      content: summary\n                    - name: twitter:site\n                      content: \"@youtube\"\n                    - name: twitter:url\n                      content: https://www.youtube.com/channel/UCL6xkW90kBI76OuApogUbFQ\n                    - name: twitter:title\n                      content: MeedanTube\n                    - name: twitter:description\n                    - name: twitter:image\n                      content: https://yt3.ggpht.com/a/AATXAJzLW496voft4Qc6JoR1mBy5N1X1v56uEGaY_msX8A=s900-c-k-c0x00ffffff-no-rj\n                    - name: twitter:app:name:iphone\n                      content: YouTube\n                    - name: twitter:app:id:iphone\n                      content: '544007664'\n                    - name: twitter:app:name:ipad\n                      content: YouTube\n                    - name: twitter:app:id:ipad\n                      content: '544007664'\n                    - name: twitter:app:url:iphone\n                      content: vnd.youtube://www.youtube.com/channel/UCL6xkW90kBI76OuApogUbFQ\n                    - name: twitter:app:url:ipad\n                      content: vnd.youtube://www.youtube.com/channel/UCL6xkW90kBI76OuApogUbFQ\n                    - name: twitter:app:name:googleplay\n                      content: YouTube\n                    - name: twitter:app:id:googleplay\n                      content: com.google.android.youtube\n                    - name: twitter:app:url:googleplay\n                      content: https://www.youtube.com/channel/UCL6xkW90kBI76OuApogUbFQ\n                    - itemprop: name\n                      content: MeedanTube\n                    - itemprop: description\n                    - itemprop: paid\n                      content: 'False'\n                    - itemprop: channelId\n                      content: UCL6xkW90kBI76OuApogUbFQ\n                    - itemprop: width\n                      content: '900'\n                    - itemprop: height\n                      content: '900'\n                    - itemprop: isFamilyFriendly\n                      content: 'True'\n                    - itemprop: regionsAllowed\n                      content: AD,AE,AF,AG,AI,AL,AM,AO,AQ,AR,AS,AT,AU,AW,AX,AZ,BA,BB,BD,BE,BF,BG,BH,BI,BJ,BL,BM,BN,BO,BQ,BR,BS,BT,BV,BW,BY,BZ,CA,CC,CD,CF,CG,CH,CI,CK,CL,CM,CN,CO,CR,CU,CV,CW,CX,CY,CZ,DE,DJ,DK,DM,DO,DZ,EC,EE,EG,EH,ER,ES,ET,FI,FJ,FK,FM,FO,FR,GA,GB,GD,GE,GF,GG,GH,GI,GL,GM,GN,GP,GQ,GR,GS,GT,GU,GW,GY,HK,HM,HN,HR,HT,HU,ID,IE,IL,IM,IN,IO,IQ,IR,IS,IT,JE,JM,JO,JP,KE,KG,KH,KI,KM,KN,KP,KR,KW,KY,KZ,LA,LB,LC,LI,LK,LR,LS,LT,LU,LV,LY,MA,MC,MD,ME,MF,MG,MH,MK,ML,MM,MN,MO,MP,MQ,MR,MS,MT,MU,MV,MW,MX,MY,MZ,NA,NC,NE,NF,NG,NI,NL,NO,NP,NR,NU,NZ,OM,PA,PE,PF,PG,PH,PK,PL,PM,PN,PR,PS,PT,PW,PY,QA,RE,RO,RS,RU,RW,SA,SB,SC,SD,SE,SG,SH,SI,SJ,SK,SL,SM,SN,SO,SR,SS,ST,SV,SX,SY,SZ,TC,TD,TF,TG,TH,TJ,TK,TL,TM,TN,TO,TR,TT,TV,TW,TZ,UA,UG,UM,US,UY,UZ,VA,VC,VE,VG,VI,VN,VU,WF,WS,YE,YT,ZA,ZM,ZW\n                  url: https://www.youtube.com/channel/UCL6xkW90kBI76OuApogUbFQ\n                  provider: page\n                  type: item\n                  parsed_at: '2020-10-16 10:56:51 +0800'\n                  favicon: https://www.google.com/s2/favicons?domain_url=www.youtube.com/channel/UCL6xkW90kBI76OuApogUbFQ\n                  schema:\n                    BreadcrumbList:\n                    - \"@context\": http://schema.org\n                      \"@type\": BreadcrumbList\n                      itemListElement:\n                      - \"@type\": ListItem\n                        position: 1\n                        item:\n                          \"@id\": http://www.youtube.com/user/MeedanTube\n                          name: MeedanTube\n                  error:\n                    message: |+\n                      Yt::Errors::Forbidden: A request to YouTube API was considered forbidden by the server:\n                      {\"error\"=\u003e{\"code\"=\u003e403, \"message\"=\u003e\"The request is missing a valid API key.\", \"errors\"=\u003e[{\"message\"=\u003e\"The request is missing a valid API key.\", \"domain\"=\u003e\"global\", \"reason\"=\u003e\"forbidden\"}], \"status\"=\u003e\"PERMISSION_DENIED\"}}\n\n                      You can retry the same request manually by running:\n                      curl -X GET -H \"content-length: 0\" -H \"user-agent: Yt::Request (gzip)\" -H \"host: www.googleapis.com\" \"https://www.googleapis.com/youtube/v3/channels?id=UCL6xkW90kBI76OuApogUbFQ\u0026part=snippet\"\n\n\n                    code: 5\n                  embed_tag: \u003cscript src=\"http://www.example.com/api/medias.js?url=https://www.youtube.com/user/MeedanTube\"\n                    type=\"text/javascript\"\u003e\u003c/script\u003e\n              schema:\n                type: object\n                properties:\n                  type:\n                    type: string\n                  data:\n                    type: object\n                    properties:\n                      parsed_at:\n                        type: string\n                      error:\n                        type: object\n                        properties:\n                          message:\n                            type: string\n                          code:\n                            type: integer\n                        required:\n                        - message\n                        - code\n                      provider:\n                        type: string\n                      type:\n                        type: string\n                      embed_tag:\n                        type: string\n                      title:\n                        type: string\n                    required:\n                    - provider\n                    - type\n                    - embed_tag\n                required:\n                - type\n                - data\n            text/html:\n              schema:\n                type: object\n                properties:\n                  type:\n                    type: string\n                  data:\n                    type: object\n                    properties:\n                      parsed_at:\n                        type: string\n                      error:\n                        type: object\n                        properties:\n                          message:\n                            type: string\n                          code:\n                            type: integer\n                        required:\n                        - message\n                        - code\n                      provider:\n                        type: string\n                      type:\n                        type: string\n                      embed_tag:\n                        type: string\n                      title:\n                        type: string\n                    required:\n                    - provider\n                    - type\n                    - embed_tag\n                required:\n                - type\n                - data\n        '400':\n          description: URL not provided\n          content:\n            application/json:\n              example:\n                type: error\n                data:\n                  message: Parameters missing\n                  code: 2\n              schema:\n                type: object\n                properties:\n                  type:\n                    type: string\n                  data:\n                    type: object\n                    properties:\n                      message:\n                        type: string\n                      code:\n                        type: integer\n                    required:\n                    - message\n                    - code\n                required:\n                - type\n                - data\n            text/html:\n              schema:\n                type: object\n                properties:\n                  type:\n                    type: string\n                  data:\n                    type: object\n                    properties:\n                      message:\n                        type: string\n                      code:\n                        type: integer\n                    required:\n                    - message\n                    - code\n                required:\n                - type\n                - data\n        '401':\n          description: Access denied\n          content:\n            application/json:\n              example:\n                type: error\n                data:\n                  message: Unauthorized\n                  code: 1\n              schema:\n                type: object\n                properties:\n                  type:\n                    type: string\n                  data:\n                    type: object\n                    properties:\n                      message:\n                        type: string\n                      code:\n                        type: integer\n                    required:\n                    - message\n                    - code\n                required:\n                - type\n                - data\n            text/html:\n              schema:\n                type: object\n                properties:\n                  type:\n                    type: string\n                  data:\n                    type: object\n                    properties:\n                      message:\n                        type: string\n                      code:\n                        type: integer\n                    required:\n                    - message\n                    - code\n                required:\n                - type\n                - data\n        '408':\n          description: Timeout\n          content: {}\n        '429':\n          description: API limit reached\n          content:\n            application/json:\n              example:\n                type: error\n                data:\n                  message: 123\n                  code: 11\n              schema:\n                type: object\n                properties:\n                  type:\n                    type: string\n                  data:\n                    type: object\n                    properties:\n                      message:\n                        type: integer\n                      code:\n                        type: integer\n                    required:\n                    - message\n                    - code\n                required:\n                - type\n                - data\n            text/html:\n              schema:\n                type: object\n                properties:\n                  type:\n                    type: string\n                  data:\n                    type: object\n                    properties:\n                      message:\n                        type: integer\n                      code:\n                        type: integer\n                    required:\n                    - message\n                    - code\n                required:\n                - type\n                - data\n        '409':\n          description: URL already being processed\n          content: {}\n    delete:\n      summary: Delete cache for given URL(s)\n      tags:\n      - medias\n      description: Delete cache for the URL(s) passed as parameter, you can use the\n        HTTP verbs DELETE or PURGE\n      parameters:\n      - name: url\n        in: query\n        required: true\n        description: URL(s) whose cache should be delete... can be an array of URLs,\n          a single URL or a list of URLs separated by a space\n        schema:\n          type: string\n      security:\n      - api_key: {}\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              example:\n                type: success\n              schema:\n                type: object\n                properties:\n                  type:\n                    type: string\n                required:\n                - type\n        '401':\n          description: Access denied\n          content:\n            application/json:\n              example:\n                type: error\n                data:\n                  message: Unauthorized\n                  code: 1\n              schema:\n                type: object\n                properties:\n                  type:\n                    type: string\n                  data:\n                    type: object\n                    properties:\n                      message:\n                        type: string\n                      code:\n                        type: integer\n                    required:\n                    - message\n                    - code\n                required:\n                - type\n                - data\n    post:\n      summary: Get the metadata of a list of URLs and archive it\n      tags:\n      - medias\n      description: Create background jobs to parse each URL and notify the caller\n        with the result\n      parameters:\n      - name: url\n        in: query\n        required: true\n        description: URL(s) to be parsed. Can be an array of URLs, a single URL or\n          a list of URLs separated by commas\n        schema:\n          type: array\n          items:\n            type: string\n      - name: refresh\n        in: query\n        required: false\n        description: Force a refresh from the URL instead of the cache. Will be applied\n          to all URLs\n        schema:\n          type: integer\n      - name: archivers\n        in: query\n        required: false\n        description: List of archivers to target. Can be empty, `none` or a list of\n          archives separated by commas. Will be applied to all URLs\n        schema:\n          type: string\n      security:\n      - api_key: {}\n      responses:\n        '200':\n          description: Enqueued URLs\n          content:\n            application/json:\n              example:\n                type: success\n                data:\n                  enqueued:\n                  - https://www.youtube.com/user/MeedanTube\n                  - https://twitter.com/meedan\n                  failed: []\n              schema:\n                type: object\n                properties:\n                  type:\n                    type: string\n                  data:\n                    type: object\n                    properties:\n                      enqueued:\n                        type: array\n                        items:\n                          type: string\n                      failed:\n                        type: array\n                        items:\n                          type: string\n                    required:\n                    - enqueued\n                    - failed\n                required:\n                - type\n                - data\n        '401':\n          description: Access denied\n          content:\n            application/json:\n              example:\n                type: error\n                data:\n                  message: Unauthorized\n                  code: 1\n              schema:\n                type: object\n                properties:\n                  type:\n                    type: string\n                  data:\n                    type: object\n                    properties:\n                      message:\n                        type: string\n                      code:\n                        type: integer\n                    required:\n                    - message\n                    - code\n                required:\n                - type\n                - data\n",
			"canonicalURL": "/github.com/meedan/pender@af7186e314cbbd29ac8f6ffec52d39bac386c2d2/-/blob/swagger/v1/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/meedan/pender/blob/af7186e314cbbd29ac8f6ffec52d39bac386c2d2/swagger/v1/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 1: cannot unmarshal !!map into []string; yaml: line 1: cannot unmarshal !!map into []string; yaml: line 1: cannot unmarshal !!map into []string; yaml: line 1: cannot unmarshal !!map into []string"
}