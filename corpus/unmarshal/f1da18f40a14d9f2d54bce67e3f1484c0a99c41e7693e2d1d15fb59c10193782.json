{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/kawasima/bouncr"
		},
		"file": {
			"name": "bouncr-spec.yaml",
			"size": 0,
			"path": "bouncr-api-server/src/main/resources/bouncr-spec.yaml",
			"byteSize": 40232,
			"content": "openapi: 3.0.0\ninfo:\n  version: 0.2.0\n  title: Bouncr API Specification\n  description: |\n    Bouncr is a reverse proxy with authenticate and authorization.\n  license:\n    name: EPL 2.0\nservers:\n- url: http://localhost:3000/bouncr/api\npaths:\n  /sign_in:\n    description: |-\n      Sign in by an account and an password.\n    post:\n      tags:\n        - Sign In\n      summary: Sign in\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PasswordSignInRequest'\n      responses:\n        201:\n          description: Sign in successfully\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserSession'\n  /pre_sign_in:\n    description: |-\n      Creates parameters of nonce and state for OpenID Connect\n    post:\n      tags:\n        - Sign In\n      summary: Creates nonce and state\n      responses:\n        201:\n          description: Create a session of OpenID Conenct successfully\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OidcSession'\n  /users:\n    description: |-\n      Find users and create a user.\n    parameters:\n      - $ref: '#/components/parameters/BouncrCredential'\n      - $ref: '#/components/parameters/Query'\n      - $ref: '#/components/parameters/Limit'\n      - $ref: '#/components/parameters/Offset'\n      - $ref: '#/components/parameters/Embed'\n    get:\n      tags:\n        - User\n        - Administration\n      summary: Fetch users\n      parameters:\n      - in: query\n        name: limit\n        schema:\n          type: integer\n      - in: query\n        name: offset\n        schema:\n          type: integer\n      responses:\n        200:\n          description: Fetch successfully\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Users'\n    post:\n      summary: Create a user\n      operationId: craeteUser\n      tags:\n        - User\n        - Administration\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserCreateRequest'\n      responses:\n        201:\n          description: Create successfully\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n  /user/{account}:\n    parameters:\n    - $ref: '#/components/parameters/BouncrCredential'\n    - name: account\n      in: path\n      required: true\n      schema:\n        type: string\n      example: user1\n    get:\n      summary: Fetch a user by a given account\n      operationId: fetchUser\n      parameters:\n        - $ref: '#/components/parameters/Embed'\n      tags:\n        - User\n        - Administration\n      responses:\n        200:\n          description: Fetch a user\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n    put:\n      summary: Update a user\n      operationId: updateUser\n      tags:\n        - User\n        - Administration\n      responses:\n        204:\n          description: Updated a user\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserUpdateRequest'\n        400:\n          description: invalid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConstraintsProblem'\n    delete:\n      summary: Delete a user\n      operationId: deleteUser\n      tags:\n        - User\n        - Administration\n      responses:\n        204:\n          description: Delete a user\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n  /groups:\n    parameters:\n      - $ref: '#/components/parameters/BouncrCredential'\n      - $ref: '#/components/parameters/Query'\n      - $ref: '#/components/parameters/Limit'\n      - $ref: '#/components/parameters/Offset'\n      - $ref: '#/components/parameters/Embed'\n    get:\n      summary: Find groups\n      operationId: listGroups\n      tags:\n        - Group\n        - Administration\n      responses:\n        200:\n          description: ???\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Groups'\n    post:\n      summary: Create a group\n      operationId: createGroup\n      tags:\n        - Group\n        - Administration\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GroupCreateRequest'\n      responses:\n        201:\n          description: Created successful.\n  /group/{name}:\n    parameters:\n    - $ref: '#/components/parameters/BouncrCredential'\n    - name: name\n      in: path\n      description: The name of the group\n      required: true\n      schema:\n        type: string\n      example: group1\n    get:\n      summary: Find a group\n      operationId: findGroup\n      tags:\n        - Group\n        - Administration\n      responses:\n        200:\n          description: Find a group\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Group'\n        404:\n          description: The name of the group is not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n    put:\n      summary: Update a group\n      operationId: updateGroup\n      tags:\n        - Group\n        - Administration\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GroupUpdateRequest'\n      responses:\n        204:\n          description: Updating a group is successful\n    delete:\n      summary: Delete a group\n      operationId: deleteGroup\n      tags:\n        - Group\n        - Administration\n      responses:\n        204:\n          description: Deleting a group is successful\n\n  /group/{name}/users:\n    parameters:\n      - $ref: '#/components/parameters/BouncrCredential'\n      - name: name\n        in: path\n        description: The name of the group\n        required: true\n        schema:\n          type: string\n        example: group1\n    get:\n      summary: Find users who belong to the given group\n      operationId: findUsersInGroup\n      tags:\n        - Group\n        - Administration\n      responses:\n        200:\n          description: Users who belong to the given group\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Users'\n        404:\n          description: The name of the group is not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n    post:\n      summary: Add users to the given group\n      operationId: addUsersToGroup\n      tags:\n        - Group\n        - Administration\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GroupUsersRequest'\n      responses:\n        204:\n          description: Adding users is successful\n    delete:\n      summary: Remove users from the given group\n      operationId: removeUsersToGroup\n      tags:\n        - Group\n        - Administration\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GroupUsersRequest'\n      responses:\n        204:\n          description: Removing users is successful\n\n  /applications:\n    parameters:\n      - $ref: '#/components/parameters/BouncrCredential'\n      - $ref: '#/components/parameters/Query'\n      - $ref: '#/components/parameters/Limit'\n      - $ref: '#/components/parameters/Offset'\n      - $ref: '#/components/parameters/Embed'\n    get:\n      summary: Find groups\n      operationId: findApplications\n      tags:\n        - Application\n        - Administration\n      responses:\n        200:\n          description: Finding groups is successful\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Applications'\n    post:\n      summary: Create an application\n      operationId: createApplication\n      tags:\n        - Application\n        - Administration\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ApplicationCreateRequest'\n      responses:\n        201:\n          description: Creating an application is successful\n        400:\n          description: The request for creating an application is malformed\n          content:\n            application/json:\n              schema:\n                $ref:\n                  '#/components/schemas/ConstraintsProblem'\n  /application/{name}:\n    parameters:\n    - $ref: '#/components/parameters/BouncrCredential'\n    - name: name\n      required: true\n      in: path\n      schema:\n        type: string\n    get:\n      summary: Find an application\n      operationId: findApplication\n      tags:\n        - Application\n        - Administration\n      responses:\n        200:\n          description: Finding an appllication is successful\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Application'\n        404:\n          description: Application is not found by the given name\n    put:\n      summary: Update an Application\n      operationId: updateApplication\n      tags:\n        - Application\n        - Administration\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ApplicationUpdateRequest'\n        required: true\n      responses:\n        204:\n          description: Updating the application is successful\n    delete:\n      summary: Delete an application\n      operationId: deleteApplication\n      tags:\n        - Application\n        - Administration\n      responses:\n        204:\n          description: Deleting the application is successful\n  /application/{name}/realms:\n    parameters:\n    - $ref: '#/components/parameters/BouncrCredential'\n    - $ref: '#/components/parameters/Query'\n    - $ref: '#/components/parameters/Limit'\n    - $ref: '#/components/parameters/Offset'\n    - $ref: '#/components/parameters/Embed'\n    - name: name\n      required: true\n      in: path\n      schema:\n        type: string\n    get:\n      summary: Find realms\n      operationId: findRealms\n      tags:\n        - Realm\n        - Administration\n      responses:\n        200:\n          description: Find realms is successful\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Realms'\n    post:\n      summary: Create a realm\n      operationId: createRealm\n      tags:\n        - Realm\n        - Administration\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RealmCreateRequest'\n      responses:\n        201:\n          description: Creating a realm is successful\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Realm'\n  /application/{name}/realm/{realm_name}:\n    parameters:\n    - $ref: '#/components/parameters/BouncrCredential'\n    - name: name\n      required: true\n      in: path\n      schema:\n        type: string\n    - name: realm_name\n      required: true\n      in: path\n      schema:\n        type: string\n    get:\n      summary: Find an realm\n      operationId: findRealm\n      tags:\n        - Realm\n        - Administration\n      responses:\n        200:\n          description: Find an realm is successful\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Realm'\n        404:\n          description: The realm is not found by the given name\n    put:\n      summary: Update a realm\n      operationId: updateRealm\n      tags:\n        - Realm\n        - Administration\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RealmUpdateRequest'\n      responses:\n        204:\n          description: Updating the realm is successful\n    delete:\n      summary: Delete an realm\n      operationId: deleteRealm\n      tags:\n        - Realm\n        - Administration\n      responses:\n        204:\n          description: Deleting the realm is successful\n  /roles:\n    parameters:\n    - $ref: '#/components/parameters/BouncrCredential'\n    - $ref: '#/components/parameters/Query'\n    - $ref: '#/components/parameters/Limit'\n    - $ref: '#/components/parameters/Offset'\n    - $ref: '#/components/parameters/Embed'\n    get:\n      summary: Find roles\n      operationId: findRoles\n      tags:\n        - Role\n        - Administration\n      responses:\n        200:\n          description: Finding roles is successful\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Roles'\n    post:\n      summary: Create a role\n      operationId: createRole\n      tags:\n        - Role\n        - Administration\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RoleCreateRequest'\n      responses:\n        201:\n          description: Role is created successfully\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Role'\n  /role/{name}:\n    parameters:\n    - $ref: '#/components/parameters/BouncrCredential'\n    - name: name\n      required: true\n      in: path\n      schema:\n        type: string\n    get:\n      summary: Find a role\n      operationId: findRole\n      tags:\n        - Role\n        - Administration\n      responses:\n        200:\n          description: Finding a role is successful\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Role'\n    put:\n      summary: Update a role\n      operationId: updateRole\n      tags:\n      - Role\n      - Administration\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RoleUpdateRequest'\n      responses:\n        204:\n          description: Updating a role is successful\n    delete:\n      summary: Delete a role\n      operationId: deleteRole\n      tags:\n      - Role\n      - Administration\n      responses:\n        204:\n          description: Deleting a role is successful\n  /permissions:\n    parameters:\n    - $ref: '#/components/parameters/BouncrCredential'\n    - $ref: '#/components/parameters/Query'\n    - $ref: '#/components/parameters/Limit'\n    - $ref: '#/components/parameters/Offset'\n    - $ref: '#/components/parameters/Embed'\n    get:\n      summary: Find permissions\n      operationId: findPermissions\n      tags:\n        - Permission\n        - Administration\n      responses:\n        200:\n          description: Finding permissions is successful\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Permissions'\n    post:\n      summary: Create a permission\n      operationId: createPermission\n      tags:\n        - Permission\n        - Administration\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PermissionCreateRequest'\n      responses:\n        201:\n          description: Creating a permission is successful\n  /permission/{name}:\n    parameters:\n    - $ref: '#/components/parameters/BouncrCredential'\n    - name: name\n      required: true\n      in: path\n      schema:\n        type: string\n    get:\n      summary: Find a permission\n      operationId: findPermission\n      tags:\n        - Permission\n        - Administration\n      responses:\n        200:\n          description: Fetching a permission is successful\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Permission'\n    put:\n      summary: Update a permission\n      operationId: updatePermission\n      tags:\n        - Permission\n        - Administration\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PermissionUpdateRequest'\n      responses:\n        204:\n          description: Updating a permission is successful\n    delete:\n      summary: Delete a permission\n      operationId: deletePermission\n      tags:\n        - Permission\n        - Administration\n      responses:\n        204:\n          description: Deleteing a permission is successful\n  /assignments:\n    parameters:\n    - $ref: '#/components/parameters/BouncrCredential'\n    post:\n      summary: Assignments\n      operationId: assignments\n      tags:\n        - Assignment\n        - Administration\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AssignmentsRequest'\n      responses:\n        201:\n          description: Creating assignments is successful\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Assignments'\n    delete:\n      summary: Unassignments\n      operationId: unassignments\n      tags:\n        - Asignment\n        - Administration\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AssignmentsRequest'\n      responses:\n        204:\n          description: Deleting assignments is successful\n  /assignment:\n    parameters:\n      - $ref: '#/components/parameters/BouncrCredential'\n    get:\n      summary: Fetch an assignment\n      operationId: fetchAssignment\n      tags:\n        - Assignment\n      parameters:\n        - name: group\n          description: The name of the group\n          in: query\n          schema:\n            type: string\n        - name: realm\n          description: The name of the realm\n          in: query\n          schema:\n            type: string\n        - name: role\n          description: The name of the role\n          in: query\n          schema:\n            type: string\n      responses:\n        200:\n          description: Fetch an assignment\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Assignment'\n  /invitations:\n    parameters:\n    - $ref: '#/components/parameters/BouncrCredential'\n    post:\n      summary: Create a invitation\n      operationId: createInvitation\n      tags:\n        - Invitation\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/InvitationCreateRequest'\n      responses:\n        201:\n          description: Creating a invitation is successful\n  /invitation/{code}:\n    parameters:\n      - $ref: '#/components/parameters/BouncrCredential'\n      - name: code\n        required: true\n        in: path\n        schema:\n          type: string\n    get:\n      summary: Create a invitation\n      operationId: createInvitation\n      tags:\n        - Invitation\n      responses:\n        200:\n          description: Fetch the content of the invitation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  oidc_invitations:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        oidoc_provider:\n                          type: string\n                        claim:\n                          type: object\n                          additionalProperties: true\n                  group_invitations:\n                    type: array\n                    items:\n                      type: string\n                      description: The group's name\n  /oidc_applications:\n    parameters:\n    - $ref: '#/components/parameters/BouncrCredential'\n    get:\n      summary: Find OIDC applications\n      operationId: findOidcApplications\n      responses:\n        200:\n          description: Finding OIDC application is successful\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OidcApplications'\n  /sign_up:\n    description: Sign up\n    post:\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SignUpCreateRequest'\n      responses:\n        201:\n          description: Signing up is successful\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SignUpResponse'\n  /user_profile_verification:\n    description: Verify an item of user profiles\n    delete:\n      parameters:\n        - name: code\n          in: query\n          schema:\n            type: string\n      responses:\n        204:\n          description: Verificaiton of the user profile value is successful\n  /password_credential:\n    post:\n      parameters:\n        - $ref: '#/components/parameters/BouncrCredential'\n      summary: Create a password credential\n      operationId: createPasswordCredential\n      tags:\n        - Password Credential\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PasswordCredentialCreateRequest'\n      responses:\n        201:\n          description: Creating a password credential is successful.\n    put:\n      summary: Update a password\n      operationId: updatePasswordCredential\n      tags:\n        - Password Credential\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PasswordCredentialUpdateRequest'\n      responses:\n        201:\n          description: Updating a password is successful\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InitialPassword'\n    delete:\n      summary: Delete a password credential\n      operationId: deletePasswordCredential\n      tags:\n        - Password Credential\n      responses:\n        204:\n          description: Deleting a password credential is successful\n  /password_credential/reset_code:\n    post:\n      summary: Create a code for reset password\n      operationId: createPassowrdResetCode\n      tags:\n        - Password Reset\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PasswordResetChallengeRequest'\n      responses:\n        201:\n          description: Creating a code for reset password is successful\n\n  /password_credential/reset:\n    put:\n      summary: Reset a password\n      operationId: resetPassowrd\n      tags:\n        - Password Reset\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PasswordResetRequest'\n      responses:\n        204:\n          description: Reset a password is successful\n  /otp_key:\n    description: |-\n      Find and publish a OTP (One time password) key.\n    parameters:\n    - $ref: '#/components/parameters/BouncrCredential'\n    put:\n      summary: Update a OTP key\n      operationId: updateOtpKey\n      tags:\n        - OTP Key\n      responses:\n        201:\n          description: Updating a OTP key is successful\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OtpKey'\n    delete:\n      summary: Delete a OTP key\n      operationId: deleteOtpKey\n      tags:\n        - OTP Key\n      responses:\n        204:\n          description: Deleting a OTP key is successful\n  /actions:\n    parameters:\n    - $ref: '#/components/parameters/BouncrCredential'\n    get:\n      summary: Find user action histories\n      operationId: findActions\n      tags:\n        - Action History\n      responses:\n        200:\n          description: Finding user action histories is successful\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserActions'\n  /sessions:\n    parameters:\n    - $ref: '#/components/parameters/BouncrCredential'\n    get:\n      summary: Find user sessions\n      operationId: findUserSessions\n      tags:\n        - User Session\n      responses:\n        200:\n          description: Finging user sessions is successful\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserSessions'\n  /session/{token}:\n    parameters:\n    - $ref: '#/components/parameters/BouncrCredential'\n    delete:\n      summary: Delete a user session\n      description: Deleting a user session means signing out.\n      operationId: deleteUserSession\n      tags:\n        - User session\n      responses:\n        204:\n          description: Deleting a user session is successful\ncomponents:\n  schemas:\n    PasswordSignInRequest:\n      type: object\n      x-json-spec: 'PasswordSignInRequest'\n      properties:\n        account:\n          type: string\n        password:\n          type: string\n      required:\n        - account\n        - password\n      example:\n        account: user1\n        password: user1\n    Users:\n      type: array\n      x-json-spec: 'Users'\n      items:\n        $ref: '#/components/schemas/User'\n    User:\n      type: object\n      x-json-spec: 'User'\n      properties:\n        id:\n          type: number\n          format: int64\n        account:\n          type: string\n        groups:\n          type: array\n          items:\n            $ref: '#/components/schemas/Group'\n      required:\n        - id\n        - account\n      additionalProperties: true\n      example:\n        id: 1\n        account: user1\n        name: Test User1\n        email: user1@exapmle.com\n        groups:\n        - id: 1\n          name: group1\n          description: This is a group1\n        - id: 2\n          name: group2\n          description: This is a group2\n    Groups:\n      type: array\n      items:\n        $ref: '#/components/schemas/Group'\n    Group:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n        description:\n          type: string\n      required:\n        - id\n        - name\n        - description\n    Roles:\n      type: array\n      items:\n        $ref: '#/components/schemas/Role'\n    Role:\n      type: object\n      properties:\n        id:\n          type: number\n          format: int64\n        name:\n          type: string\n        description:\n          type: string\n      required:\n        - id\n        - name\n        - description\n    Permissions:\n      type: array\n      items:\n        $ref: '#/components/schemas/Permission'\n    Permission:\n      type: object\n      properties:\n        id:\n          type: number\n          format: int64\n        name:\n          type: string\n        description:\n          type: string\n      required:\n        - id\n        - name\n        - description\n    Applications:\n      type: array\n      items:\n        $ref: '#/components/schemas/Application'\n    Application:\n      type: object\n      properties:\n        id:\n          type: number\n          format: int64\n        name:\n          type: string\n        description:\n          type: string\n        pass_to:\n          type: string\n        virtual_path:\n          type: string\n      required:\n        - id\n        - name\n        - description\n        - pass_to\n        - virtual_path\n    Realms:\n      type: array\n      items:\n        $ref: '#/components/schemas/Realm'\n    Realm:\n      type: object\n      properties:\n        id:\n          type: number\n          format: int64\n        name:\n          type: string\n        description:\n          type: string\n        url:\n          type: string\n      required:\n        - id\n        - name\n        - description\n        - url\n    Assignments:\n      type: array\n      items:\n        $ref: '#/components/schemas/Assignment'\n    Assignment:\n      type: object\n      properties:\n        group:\n          $ref: '#/components/schemas/Group'\n        role:\n          $ref: '#/components/schemas/Role'\n        realm:\n          $ref: '#/components/schemas/Realm'\n      required:\n        - group\n        - role\n        - realm\n    AssignmentsRequest:\n      type: array\n      items:\n        type: object\n        properties:\n          group:\n            type: object\n            properties:\n              id:\n                type: integer\n          role:\n            type: object\n            properties:\n              id:\n                type: integer\n          realm:\n            type: object\n            properties:\n              id:\n                type: integer\n        required:\n          - group\n          - role\n          - realm\n    UserActions:\n      type: array\n      items:\n        $ref: '#/components/schemas/UserAction'\n    UserAction:\n      type: object\n      properties:\n        id:\n          type: integer\n        action_type:\n          type: string\n        actor:\n          type: string\n        actor_ip:\n          type: string\n        options:\n          type: string\n        created_at:\n          type: string\n          format: 'date-time'\n      required:\n        - id\n        - action_type\n        - actor\n        - actor_ip\n        - options\n        - created_at\n    UserSessions:\n      type: array\n      items:\n        $ref: '#/components/schemas/UserSession'\n    UserSession:\n      type: object\n      properties:\n        id:\n          type: integer\n        token:\n          type: string\n        user_agent:\n          type: string\n        remote_address:\n          type: string\n        created_at:\n          type: string\n          format: 'date-time'\n      required:\n        - id\n        - token\n        - user_agent\n        - remote_address\n        - created_at\n    OidcSession:\n      type: object\n      properties:\n        state:\n          type: string\n        nonce:\n          type: string\n      required:\n        - state\n        - nonce\n    OidcApplications:\n      type: array\n      items:\n        $ref: '#/components/schemas/OidcApplication'\n    OidcApplication:\n      type: object\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n        home_url:\n          type: string\n        callback_url:\n          type: string\n        description:\n          type: string\n        permissions:\n          type: array\n          items:\n            type: string\n      required:\n        - id\n        - name\n        - home_url\n        - callback_url\n        - description\n        - permissions\n    OidcProviders:\n      type: array\n      items:\n        $ref: '#/components/schemas/OidcProvider'\n    OidcProvider:\n      type: object\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n        api_key:\n          type: string\n        api_secret:\n          type: string\n        scope:\n          type: string\n        response_type:\n          type: string\n        authorization_endpoint:\n          type: string\n        token_endpoint:\n          type: string\n      required:\n        - id\n        - name\n        - api_key\n        - api_secret\n        - scope\n        - response_type\n        - authorization_endpoint\n        - token_endpoint\n    OtpKey:\n      type: object\n      properties:\n        key:\n          type: string\n      required:\n        - key\n    UserCreateRequest:\n      type: object\n      properties:\n        account:\n          type: string\n      additionalProperties: true\n      required:\n        - account\n    UserUpdateRequest:\n      type: object\n      additionalProperties: true\n    GroupCreateRequest:\n      type: object\n      properties:\n        name:\n          type: string\n        description:\n          type: string\n      required:\n        - name\n        - description\n    GroupUpdateRequest:\n      type: object\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n        description:\n          type: string\n      required:\n        - id\n        - name\n        - description\n    GroupUsersRequest:\n      type: array\n      items:\n        type: string\n    RoleCreateRequest:\n      type: object\n      properties:\n        name:\n          type: string\n        description:\n          type: string\n      required:\n        - name\n        - description\n    RoleUpdateRequest:\n      type: object\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n        description:\n          type: string\n      required:\n        - id\n        - name\n        - description\n    PermissionCreateRequest:\n      type: object\n      properties:\n        name:\n          type: string\n        description:\n          type: string\n      required:\n        - name\n        - description\n    PermissionUpdateRequest:\n      type: object\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n        description:\n          type: string\n      required:\n        - id\n        - name\n        - description\n    ApplicationCreateRequest:\n      type: object\n      properties:\n        name:\n          type: string\n        description:\n          type: string\n        pass_to:\n          type: string\n        virtual_path:\n          type: string\n        top_page:\n          type: string\n      required:\n        - name\n        - description\n        - pass_to\n        - virtual_path\n        - top_page\n    ApplicationUpdateRequest:\n      type: object\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n        description:\n          type: string\n        pass_to:\n          type: string\n        virtual_path:\n          type: string\n        top_page:\n          type: string\n      required:\n        - id\n        - name\n        - description\n        - pass_to\n        - virtual_path\n        - top_page\n    RealmCreateRequest:\n      type: object\n      properties:\n        name:\n          type: string\n        description:\n          type: string\n      required:\n        - name\n        - description\n    RealmUpdateRequest:\n      type: object\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n        description:\n          type: string\n      required:\n        - id\n        - name\n        - description\n    OidcApplicationCreateRequest:\n      type: object\n      properties:\n        name:\n          type: string\n        home_url:\n          type: string\n        callback_url:\n          type: string\n        description:\n          type: string\n        permissions:\n          type: array\n          items:\n            type: string\n      required:\n        - name\n        - home_url\n        - callback_url\n        - description\n        - permissions\n    OidcApplicationUpdateRequest:\n      type: object\n      properties:\n        name:\n          type: string\n        home_url:\n          type: string\n        callback_url:\n          type: string\n        description:\n          type: string\n        permissions:\n          type: array\n          items:\n            type: string\n      required:\n        - id\n        - name\n        - home_url\n        - callback_url\n        - description\n        - permissions\n    OidcProviderCreateRequest:\n      type: object\n      properties:\n        name:\n          type: string\n        api_key:\n          type: string\n        api_secret:\n          type: string\n        scope:\n          type: string\n        response_type:\n          type: string\n        authorization_endpoint:\n          type: string\n        token_endpoint:\n          type: string\n      required:\n        - name\n        - api_key\n        - api_secret\n        - scope\n        - response_type\n        - authorization_endpoint\n        - token_endpoint\n    OidcProviderUpdateRequest:\n      type: object\n      properties:\n        name:\n          type: string\n        api_key:\n          type: string\n        api_secret:\n          type: string\n        scope:\n          type: string\n        response_type:\n          type: string\n        authorization_endpoint:\n          type: string\n        token_endpoint:\n          type: string\n      required:\n        - name\n        - api_key\n        - api_secret\n        - scope\n        - response_type\n        - authorization_endpoint\n        - token_endpoint\n    InvitationCreateRequest:\n      type: object\n      properties:\n        email:\n          type: string\n          format: email\n        groups:\n          type: array\n          items:\n            type: object\n            properties:\n              id:\n                type: integer\n      required:\n        - email\n    SignUpCreateRequest:\n      type: object\n      properties:\n        account:\n          type: string\n        code:\n          type: string\n      additionalProperties: true\n      required:\n        - account\n    SignUpResponse:\n      type: object\n      properties:\n        id:\n          type: integer\n        account:\n          type: string\n        password:\n          type: string\n          format: password\n      additionalProperties: true\n      required:\n        - id\n        - account\n        - password\n    PasswordCredentialCreateRequest:\n      type: object\n      properties:\n        account:\n          type: string\n        password:\n          type: string\n          format: password\n        initial:\n          type: boolean\n      required:\n        - account\n        - password\n    PasswordCredentialUpdateRequest:\n      type: object\n      properties:\n        account:\n          type: string\n        old_password:\n          type: string\n          format: password\n        new_password:\n          type: string\n          format: password\n      required:\n        - account\n        - old_password\n        - new_password\n    PasswordResetChallengeRequest:\n      type: object\n      properties:\n        account:\n          type: string\n          description: An account for reset a password\n      required:\n        - account\n    PasswordResetRequest:\n      type: object\n      properties:\n        code:\n          type: string\n          description: An given code for reset a password\n        password:\n          type: string\n          format: password\n          required: false\n      required:\n        - code\n        - password\n    InitialPassword:\n      type: object\n      properties:\n        password:\n          type: string\n          format: password\n      required:\n        - password\n    ConstraintsProblem:\n      type: object\n      properties:\n        violations:\n          type: array\n          items:\n            $ref: '#/components/schemas/ConstraintsViolation'\n    ConstraintsViolation:\n      type: object\n      properties:\n        name:\n          type: string\n        value:\n          type: string\n      required:\n        - name\n        - value\n    Problem:\n      type: object\n      properties:\n        type:\n          type: string\n        title:\n          type: string\n        status:\n          type: integer\n        detail:\n          type: string\n        instance:\n          type: string\n      required:\n        - type\n        - status\n  parameters:\n    Query:\n      name: q\n      description: Keywords for searching\n      in: query\n      schema:\n        type: string\n    Limit:\n      name: limit\n      description: The limit to restrict the number of entries on a page\n      in: query\n      schema:\n        type: integer\n        format: int64\n    Offset:\n      name: offset\n      description: The numeric offset of the first element on a page\n      in: query\n      schema:\n        type: integer\n        format: int64\n    Embed:\n      name: embed\n      description: To expand or embedded sub-entities\n      in: query\n      schema:\n        type: string\n    BouncrCredential:\n      name: X-Bouncr-Credential\n      description: Bouncr credential\n      in: header\n      schema:\n        type: string\n        x-json-spec: BouncrCredential\n\n\n",
			"canonicalURL": "/github.com/kawasima/bouncr@d32fea91cb46e577e94fff7dcf7d5733fb36b54d/-/blob/bouncr-api-server/src/main/resources/bouncr-spec.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/kawasima/bouncr/blob/d32fea91cb46e577e94fff7dcf7d5733fb36b54d/bouncr-api-server/src/main/resources/bouncr-spec.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: json: line 1:6843: json: cannot unmarshal Go value of type ogen.Spec: spec: json: cannot unmarshal Go value of type ogen.Properties: json: cannot unmarshal JSON boolean into Go value of type []string"
}