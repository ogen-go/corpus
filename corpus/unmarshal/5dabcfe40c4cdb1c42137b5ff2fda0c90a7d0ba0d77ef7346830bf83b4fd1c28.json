{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/raphaelalmeidamartins/store-manager"
		},
		"file": {
			"name": "swagger-en.json",
			"size": 0,
			"path": "swagger-en.json",
			"byteSize": 15706,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"title\": \"Store Manager\",\n    \"description\": \"This API is a management system for products and sales\",\n    \"contact\": {\n      \"email\": \"raphael.almeida.martins@gmail.com\"\n    },\n    \"version\": \"1.0.0\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"http://localhost:3000\",\n      \"description\": \"test API\"\n    }\n  ],\n  \"paths\": {\n    \"/products\": {\n      \"get\": {\n        \"summary\": \"List products\",\n        \"description\": \"This route lists all registered products\",\n        \"tags\": [\"Products\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Ok\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Product\"\n                  }\n                },\n                \"examples\": {\n                  \"products\": {\n                    \"value\": [\n                      {\n                        \"id\": 1,\n                        \"name\": \"Martelo de Thor\"\n                      },\n                      {\n                        \"id\": 2,\n                        \"name\": \"Traje de encolhimento\"\n                      }\n                    ]\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"summary\": \"Register product\",\n        \"description\": \"Register a new product\",\n        \"tags\": [\"Products\"],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RegisterProduct\"\n              },\n              \"examples\": {\n                \"product\": {\n                  \"value\": {\n                    \"name\": \"Esmeralda do Chaos\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Created\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Product\"\n                },\n                \"examples\": {\n                  \"product\": {\n                    \"value\": {\n                      \"id\": 4,\n                      \"name\": \"Esmeralda do Chaos\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"\\\"name\\\" is required\"\n          },\n          \"422\": {\n            \"description\": \"\\\"name\\\" is invalid\"\n          }\n        }\n      }\n    },\n    \"/products/search\": {\n      \"get\": {\n        \"summary\": \"Search product\",\n        \"description\": \"Search product with the search term provided in the query. It returns all the registered products if the query is empty\",\n        \"tags\": [\"Products\"],\n        \"parameters\": [\n          {\n            \"name\": \"q\",\n            \"in\": \"query\",\n            \"description\": \"Name of the product to be found\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Ok\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Product\"\n                  }\n                },\n                \"examples\": {\n                  \"products\": {\n                    \"value\": [\n                      {\n                        \"id\": 1,\n                        \"name\": \"Martelo de Thor\"\n                      },\n                      {\n                        \"id\": 3,\n                        \"name\": \"Martelo gigante\"\n                      }\n                    ]\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/products/{id}\": {\n      \"get\": {\n        \"summary\": \"Get product by id\",\n        \"description\": \"It returns the product according to the provided id\",\n        \"tags\": [\"Products\"],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"id of the product to be returned\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Ok\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Product\"\n                },\n                \"examples\": {\n                  \"product\": {\n                    \"Value\": {\n                      \"id\": 7,\n                      \"name\": \"Figurino de Toxic\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Some fields are invalid or missing\"\n          },\n          \"404\": {\n            \"description\": \"Product not found\"\n          }\n        }\n      },\n      \"put\": {\n        \"summary\": \"Update product\",\n        \"description\": \"Update product according to the provided id\",\n        \"tags\": [\"Products\"],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"id of the product to be updated\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RegisterProduct\"\n              },\n              \"examples\": {\n                \"product\": {\n                  \"value\": {\n                    \"name\": \"Capa do Batman\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Ok\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Product\"\n                },\n                \"examples\": {\n                  \"product\": {\n                    \"value\": {\n                      \"id\": 1,\n                      \"name\": \"Capa do Batman\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Some fields are invalid or missing\"\n          },\n          \"404\": {\n            \"description\": \"Product not found\"\n          }\n        }\n      },\n      \"delete\": {\n        \"summary\": \"Delete product\",\n        \"description\": \"It deletes product according to the provided id\",\n        \"tags\": [\"Products\"],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": \"true\",\n            \"description\": \"id of the product to be deleted\"\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"No content\"\n          },\n          \"400\": \"Invalid id\",\n          \"404\": {\n            \"description\": \"Product not found\"\n          }\n        }\n      }\n    },\n    \"/sales\": {\n      \"get\": {\n        \"summary\": \"List sales\",\n        \"description\": \"It lists all the registered sales\",\n        \"tags\": [\"Sales\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Ok\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ListSales\"\n                },\n                \"examples\": {\n                  \"sales\": {\n                    \"value\": [\n                      {\n                        \"saleId\": 1,\n                        \"date\": \"2021-09-09T04:54:29.000Z\",\n                        \"productId\": 1,\n                        \"quantity\": 2\n                      },\n                      {\n                        \"saleId\": 1,\n                        \"date\": \"2021-09-09T04:54:54.000Z\",\n                        \"productId\": 2,\n                        \"quantity\": 2\n                      }\n                    ]\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"summary\": \"Register sale\",\n        \"description\": \"This route register a new sale according to the data provided through the request body\",\n        \"tags\": [\"Sales\"],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RegisterSale\"\n              },\n              \"examples\": {\n                \"category\": {\n                  \"value\": [\n                    {\n                      \"productId\": 1,\n                      \"quantity\": 1\n                    },\n                    {\n                      \"productId\": 2,\n                      \"quantity\": 5\n                    }\n                  ]\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Created\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Sale\"\n                },\n                \"examples\": {\n                  \"sale\": {\n                    \"value\": {\n                      \"id\": 3,\n                      \"itemsSold\": [\n                        {\n                          \"productId\": 1,\n                          \"quantity\": 1\n                        },\n                        {\n                          \"productId\": 2,\n                          \"quantity\": 5\n                        }\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Some fields are invalid or missing\"\n          },\n          \"422\": {\n            \"description\": \"\\\"quantity\\\" must be greater than or equal to 1\"\n          },\n          \"404\": {\n            \"description\": \"Product not found\"\n          }\n        }\n      }\n    },\n    \"/sales/{id}\": {\n      \"get\": {\n        \"summary\": \"Get sale by id\",\n        \"description\": \"It returns a sale corresponding to the provided id\",\n        \"tags\": [\"Sales\"],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"id of the sale to be returned\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Ok\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GetSaleById\"\n                },\n                \"examples\": {\n                  \"listSales\": {\n                    \"value\": [\n                      {\n                        \"date\": \"2021-09-09T04:54:29.000Z\",\n                        \"productId\": 1,\n                        \"quantity\": 2\n                      },\n                      {\n                        \"date\": \"2021-09-09T04:54:54.000Z\",\n                        \"productId\": 2,\n                        \"quantity\": 2\n                      }\n                    ]\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid id\"\n          },\n          \"404\": {\n            \"description\": \"Sale not found\"\n          }\n        }\n      },\n      \"put\": {\n        \"summary\": \"Update sale\",\n        \"description\": \"Update the sale corresponding to the provided id\",\n        \"tags\": [\"Sales\"],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"id of the sale to be updated\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RegisterSale\"\n              },\n              \"examples\": {\n                \"product\": {\n                  \"value\": [\n                    {\n                      \"productId\": 1,\n                      \"quantity\": 1\n                    },\n                    {\n                      \"productId\": 2,\n                      \"quantity\": 5\n                    }\n                  ]\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Created\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/EditSale\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Sale or product not found\"\n          },\n          \"422\": {\n            \"description\": \"\\\"quantity\\\" must be greater than or equal to 1\"\n          }\n        }\n      },\n      \"delete\": {\n        \"summary\": \"Delete sale\",\n        \"description\": \"It deletes the sale corresponding to the provided id\",\n        \"tags\": [\"Sales\"],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": \"true\",\n            \"description\": \"id of the sale to be deleted\"\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"No content\"\n          },\n          \"400\": {\n            \"description\": \"Invalid id\"\n          },\n          \"404\": {\n            \"description\": \"Sale not found\"\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"Product\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"number\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"RegisterProduct\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ListSales\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"saleId\": {\n              \"type\": \"number\"\n            },\n            \"date\": {\n              \"type\": \"string\"\n            },\n            \"productId\": {\n              \"type\": \"number\"\n            },\n            \"quantity\": {\n              \"type\": \"number\"\n            }\n          }\n        }\n      },\n      \"GetSaleById\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"date\": {\n              \"type\": \"string\"\n            },\n            \"productId\": {\n              \"type\": \"number\"\n            },\n            \"quantity\": {\n              \"type\": \"number\"\n            }\n          }\n        }\n      },\n      \"RegisterSale\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"productId\": {\n              \"type\": \"number\"\n            },\n            \"quantity\": {\n              \"type\": \"number\"\n            }\n          }\n        }\n      },\n      \"Sale\": {\n        \"properties\": {\n          \"id\": {\n            \"type\": \"number\"\n          },\n          \"itemsSold\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"productId\": {\n                  \"type\": \"number\"\n                },\n                \"quantity\": {\n                  \"type\": \"number\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"EditSale\": {\n        \"properties\": {\n          \"saleId\": {\n            \"type\": \"number\"\n          },\n          \"itemsUpdated\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"productId\": {\n                  \"type\": \"number\"\n                },\n                \"quantity\": {\n                  \"type\": \"number\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
			"canonicalURL": "/github.com/raphaelalmeidamartins/store-manager@631142e49dc8f931be2896a34c5e35017fbb0485/-/blob/swagger-en.json",
			"externalURLs": [
				{
					"url": "https://github.com/raphaelalmeidamartins/store-manager/blob/631142e49dc8f931be2896a34c5e35017fbb0485/swagger-en.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 245: cannot unmarshal !!str `true` into bool; yaml: line 253: cannot unmarshal !!str `Invalid id` into ogen.Response; yaml: line 471: cannot unmarshal !!str `true` into bool"
}