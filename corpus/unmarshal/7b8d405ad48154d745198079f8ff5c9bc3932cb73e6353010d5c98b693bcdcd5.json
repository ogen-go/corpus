{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/OpenAPITools/openapi-generator"
		},
		"file": {
			"name": "null-types-with-type-array.yaml",
			"size": 0,
			"path": "modules/openapi-generator/src/test/resources/3_1/null-types-with-type-array.yaml",
			"byteSize": 5326,
			"content": "# OAS document that uses 3.1 features:\n# 'null' type\n# type array\nopenapi: 3.1.0\ninfo:\n  version: 1.0.0\n  title: Example\n  license:\n    name: MIT\nservers:\n  - url: http://api.example.xyz/v1\npaths:\n  /person/display/{personId}:\n    get:\n      parameters:\n        - name: personId\n          in: path\n          required: true\n          description: The id of the person to retrieve\n          schema:\n            type: string\n      operationId: list\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Person\"\ncomponents:\n  schemas:\n    # The purpose of this OAS document is to test the OpenAPITool validator and generator against\n    # valid OAS syntax. It is not written to achieve good model design.\n    Person:\n      type: object\n      discriminator:\n        propertyName: $_type\n        mapping:\n          a: '#/components/schemas/Adult'\n          c: Child\n      properties:\n        $_type:\n          type: string\n        lastName:\n          type: string\n        firstName:\n          type: string\n        maidenName:\n          # A property which can be the 'null' value or a string value.\n          # This allows for a concise expression of use cases such as a function that might\n          # return either a string of a certain length or a null value:\n          # The 'maxLength' assertion only constrain values within a certain primitive\n          # type. When the type of the instance is not of the type targeted by\n          # the keyword, the instance is considered to conform to the assertion.\n          # See https://tools.ietf.org/html/draft-handrews-json-schema-02#section-7.6.1\n          type: [ string, 'null']\n          maxLength: 255\n        address:\n          # An object defined inline instead of by reference. codegen and language generators\n          # behave differently when a property is defined inline versus by reference.\n          type: object\n          properties:\n            street:\n              type: string\n            city:\n              type: string\n        secondHomeAddress:\n          # The value of this property may be the null value because the 'Nullable.Address'\n          # schema has set the 'nullable' attribute to true.\n          $ref: \"#/components/schemas/Nullable.Address\"\n        skills:\n          # An array defined inline instead of by reference. codegen and language generators\n          # behave differently when a property is defined inline versus by reference.\n          type: array\n          items:\n            type: object\n            properties:\n              name:\n                type: string\n        nullableSkills:\n          # An array defined inline instead of by reference. codegen and language generators\n          # behave differently when a property is defined inline versus by reference.\n          # The value can be 'null'.\n          type: [array, 'null']\n          items:\n            type: object\n            properties:\n              name:\n                type: string\n        nullableSkillsVariant2:\n          # An array defined inline instead of by reference. codegen and language generators\n          # behave differently when a property is defined inline versus by reference.\n          # The value can be 'null'.\n          oneOf:\n            - type: 'null'\n            - type: array\n              items:\n                type: object\n                properties:\n                  name:\n                    type: string\n    Adult:\n      description: A representation of an adult\n      allOf:\n      - $ref: '#/components/schemas/Person'\n      - type: object\n        properties:\n          children:\n            # The value of this property may not be null.\n            # Some language generators are lenient by default (either intentionally or by accident)\n            # and would allow the 'null' value, but from a compliance perspective, the null value\n            # is not allowed.\n            type: array\n            items:\n              $ref: \"#/components/schemas/Child\"\n          nullableChildren:\n            # Use 'type array' syntax to indicate the value of the property may be the 'null' value or an array.\n            # Type arrays are supported in OAS 3.1 and above.\n            type: [array, 'null']\n            items:\n              $ref: \"#/components/schemas/Child\"\n          nullableChildrenVariant2:\n            # Use 'oneOf' syntax to indicate the value of the property may be the 'null' value or an array.\n            # The 'null' type is supported in OAS 3.1 and above.\n            oneOf:\n              - type: 'null'\n              - type: array\n                items:\n                  $ref: \"#/components/schemas/Child\"\n    Child:\n      description: A representation of a child\n      allOf:\n      - type: object\n        properties:\n          age:\n            type: integer\n            format: int32\n      - $ref: '#/components/schemas/Person'\n    Nullable.Address:\n      description: A representation of an address whose value can be null.\n      type: object\n      # Note the 'nullable' attribute has been deprecated in OAS 3.1, hence it should be\n      # avoided in favor of using the 'null' type.\n      nullable: true\n      properties:\n        street:\n          type: string\n        city:\n          type: string\n",
			"canonicalURL": "/github.com/OpenAPITools/openapi-generator@4cf58f5886afd3af15f95e247b0183356b7c9773/-/blob/modules/openapi-generator/src/test/resources/3_1/null-types-with-type-array.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/OpenAPITools/openapi-generator/blob/4cf58f5886afd3af15f95e247b0183356b7c9773/modules/openapi-generator/src/test/resources/3_1/null-types-with-type-array.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: json: line 1:56: callback: json: cannot unmarshal array into Go struct field Schema.type of type string"
}