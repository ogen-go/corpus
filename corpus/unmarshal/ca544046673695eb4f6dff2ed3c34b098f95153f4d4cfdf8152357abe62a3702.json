{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/mindsphere/devops-demo"
		},
		"file": {
			"name": "api.yaml",
			"size": 0,
			"path": "server/specs/api.yaml",
			"byteSize": 3226,
			"content": "openapi: \"3.0.0\"\ninfo:\n  title: Todo API\n  version: 0.2.0\n  license:\n    name: MIT\nservers:\n  - url: /\npaths:\n  /v1/todo:\n    get:\n      summary: List todo tasks\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TaskFull\"\n        '400':\n          content:\n            text/plain:\n              type: string\n              enum: [\"Bad Request\"]\n    post:\n      summary: Create todo task\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Task\"\n      responses:\n        '201':\n          description: Successful create\n          content:\n            text/plain:\n              type: string\n              enum: [\"Created\"]\n        '400':\n          description: Invalid request\n          content:\n            text/plain:\n              type: string\n              enum: [\"Bad Request\"]\n  /v1/todo/{id}:\n    delete:\n      summary: Remove single todo task\n      parameters:\n        - name: id\n          in: path\n          description: Task identifier\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful delete\n          content:\n            text/plain:\n              type: string\n              enum: [\"OK\"]\n        '400':\n          content:\n            text/plain:\n              type: string\n              enum: [\"Bad Request\"]\n  /v1/me:\n    get:\n      summary: Query personal information of the user perfoming the request\n      responses:\n        '200':\n          description: User data\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserInfo\"\n        '400':\n          description: Invalid request\n          content:\n            text/plain:\n              type: string\n              enum: [\"Bad Request\"]\n  /health_check:\n    get:\n      summary: Reports whether the app is healthy or not. Checks availability of required services (e.g. db)\n      responses:\n        '200':\n          description: Healthy\n          content:\n            text/plain:\n              type: string\n              enum: [\"OK\"]\n        '503':\n          description: Unhealthy\n          content:\n            text/plain:\n              type: string\n              enum: [\"Service Unavailable\"]\ncomponents:\n  schemas:\n    Task:\n      type: object\n      properties:\n        title:\n          type: string\n          description: Task name, cannot be empty\n      required:\n        - title\n    TaskFull:\n      type: object\n      properties:\n        _id:\n          type: string\n          description: Task identifier. Auto-assigned on object creation\n        title:\n          $ref: \"#/components/schemas/Task/properties/title\"\n      required:\n        - _id\n        - title\n    UserInfo:\n      type: object\n      properties:\n        id:\n          type: string\n          description: User identifier assigned by MindSphere\n        name:\n          type: string\n          description: User name\n        email:\n          type: string\n          description: User email\n        required:\n          - id\n          - name\n          - email\n"
		}
	},
	"Error": "unmarshal: callback: json: cannot unmarshal array into Go value of type ogen.Schema"
}