{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/input-output-hk/vit-servicing-station"
		},
		"file": {
			"name": "v0.yaml",
			"size": 0,
			"path": "doc/api/v0.yaml",
			"byteSize": 18144,
			"content": "openapi: 3.0.3\n\ninfo:\n  title: VIT as a Service Rest API\n  description: Voting Implementation Testnet Rest API v0\n  version: 0.2.2\n  contact:\n    url: \"http://github.com/input-output-hk/vit-servicing-station\"\n\ntags:\n  - name: fund\n    description: Information on treasury fund campaigns.\n  - name: challenge\n    description: Information on challenges, structuring proposals within a fund.\n  - name: proposal\n    description: Information on funding proposals.\n\nservers:\n  - url: \"http://localhost\"\n\npaths:\n  /api/v0/fund:\n    get:\n      operationId: getCurrentFund\n      summary: Get available fund\n      tags: [fund]\n      description: |\n        Retrieves information on the current treasury fund campaign.\n      responses:\n        \"200\":\n          description: Valid response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Fund\"\n\n  /api/v0/fund/{id}:\n    get:\n      operationId: getFund\n      summary: Get fund by id\n      tags: [fund]\n      description: |\n        Retrieves information on the identified treasury fund campaign.\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: integer\n          required: true\n      responses:\n        \"200\":\n          description: Valid response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Fund\"\n        \"404\":\n          description: The requested fund was not found\n\n  /api/v0/proposals:\n    post:\n      summary: Get proposal by id\n      tags: [ proposal ]\n      description: |\n        Retrieves queried proposals.\n      requestBody:\n        description: List of voteplan id and indexes query\n        required: true\n        content:\n          application/json:\n            schema:\n                $ref: '#/components/schemas/ProposalsByVoteplanIdAndIndexQuery'\n      responses:\n        \"200\":\n          description: Valid response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProposalWithChallengeInfo\"\n\n    get:\n      operationId: getAllProposals\n      summary: Get all available proposals\n      tags: [proposal]\n      description: |\n        Lists all available proposals.\n      responses:\n        \"200\":\n          description: Valid response\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ProposalWithChallengeInfo\"\n\n  /api/v0/proposals/{id}:\n    get:\n      operationId: getProposal\n      summary: Get proposal by id\n      tags: [proposal]\n      description: |\n        Retrieves information on the identified proposal.\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: integer\n          required: true\n      responses:\n        \"200\":\n          description: Valid response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProposalWithChallengeInfo\"\n        \"404\":\n          description: The requested proposal was not found\n\n  /api/v0/challenges:\n    get:\n      operationId: getAllChallenges\n      summary: Get all available challenges\n      tags: [challenge]\n      description: |\n        Lists all available challenges.\n      responses:\n        \"200\":\n          description: Valid response\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Challenge\"\n        \"404\":\n          description: The requested challenge was not found\n\n  /api/v0/challenges/{id}:\n    get:\n      operationId: getChallenge\n      summary: Get challenge by id\n      tags: [challenge]\n      description: |\n        Retrieves information on the identified challenge,\n        including the proposals submitted for it.\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: integer\n          required: true\n      responses:\n        \"200\":\n          description: Valid response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ChallengeWithProposals\"\n        \"404\":\n          description: The requested challenge was not found\n\n  /api/v0/reviews/{proposal_id}:\n    get:\n      operationId: getProposalReviews\n      summary: Get reviews related to a proposal\n      tags: [reviews]\n      description: |\n        Retrieves advisor reviews information for the provided proposal id.\n      parameters:\n        - in: path\n          name: proposal_id\n          schema:\n            type: integer\n          required: true\n      responses:\n        \"200\":\n          description: Valid response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AdvisorReviews\"\n\ncomponents:\n  schemas:\n    Fund:\n      properties:\n        id:\n          type: integer\n          format: int32\n          description: Identifier of the fund campaign.\n        fund_name:\n          type: string\n          description: Human-readable name of the fund campaign.\n        fund_goal:\n          type: string\n          description: Description of the campaign's goals.\n        voting_power_info:\n          type: string\n          deprecated: true\n          description: Deprecated, same as registration_snapshot_time.\n        voting_power_threshold:\n          type: integer\n          format: int64\n          description: |\n            Minimal amount of funds required for a valid voter registration.\n            This amount is in lovelace.\n        rewards_info:\n          type: string\n        fund_start_time:\n          type: string\n          format: date-time\n          description: Date and time for the start of the current voting period.\n        fund_end_time:\n          type: string\n          format: date-time\n          description: Date and time for the end of the current voting period.\n        next_fund_start_time:\n          type: string\n          format: date-time\n          description: Date and time for the start of the next voting period.\n        registration_snapshot_time:\n          type: string\n          format: date-time\n          description: Date and time for blockchain state snapshot capturing voter registrations.\n        next_registration_snapshot_time:\n          type: string\n          format: date-time\n          description: Date and time for next blockchain state snapshot capturing voter registrations.\n        chain_vote_plans:\n          type: array\n          items:\n            $ref: \"#/components/schemas/VotePlan\"\n          description: Vote plans registered for voting in this fund campaign.\n        challenges:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Challenge\"\n          description: A list of campaign challenges structuring the proposals.\n\n    VotePlan:\n      properties:\n        id:\n          type: integer\n          format: int32\n          description: API identifier of the vote plan.\n        chain_voteplan_id:\n          type: string\n          format: hash\n          description: Blockchain ID of the vote plan transaction.\n        chain_vote_start_time:\n          type: string\n          format: date-time\n          description: Date and time for the start of voting on this vote plan.\n        chain_vote_end_time:\n          type: string\n          format: date-time\n          description: Date and time for the end of voting on this vote plan.\n        chain_committee_end_time:\n          type: string\n          format: date-time\n          description: Date and time for the end of tallying on this vote plan.\n        chain_voteplan_payload:\n          type: string\n          description: |\n            Whether the voting is done using the public or the privacy-preserving protocol.\n        fund_id:\n          type: integer\n          format: int32\n          description: The fund ID this vote plan belongs to.\n\n    Proposal:\n      properties:\n        internal_id:\n          type: integer\n          format: int32\n          description: The API identifier for this proposal.\n        proposal_id:\n          type: string\n          description: Unique identifier for this proposal.\n        proposal_category:\n          type: object\n          properties:\n            category_id:\n              type: string\n            category_name:\n              type: string\n            category_description:\n              type: string\n        proposal_title:\n          type: string\n          description: Short title of the proposal.\n        proposal_summary:\n          type: string\n          description: Brief description of the proposal.\n        proposal_public_key:\n          type: string\n          format: binary\n        proposal_funds:\n          type: integer\n          format: int64\n          description: The amount of funds requested by this proposal.\n        proposal_url:\n          type: string\n          description: URL to a web page with details on this proposal.\n        proposal_files:\n          type: string\n        proposer:\n          type: object\n          properties:\n            proposer_name:\n              type: string\n              description: Name of the author of the proposal.\n            proposer_email:\n              type: string\n              description: Email address of the author of the proposal.\n            proposer_url:\n              type: string\n              description: URL to a web resource with details about the author of the proposal.\n        chain_proposal_id:\n          type: string\n          description: Identifier of the proposal on the blockchain.\n        chain_proposal_index:\n          type: integer\n          format: int64\n          description: Index of the proposal in the vote plan.\n        chain_vote_options:\n          description: Map of named vote options to choice indices.\n          type: object\n        chain_voteplan_id:\n          type: string\n          description: Identifier of the vote plan this proposal belongs to.\n        chain_vote_start_time:\n          type: string\n          format: date-time\n          description: Date and time for the start of voting on this proposal's vote plan.\n        chain_vote_end_time:\n          type: string\n          format: date-time\n          description: Date and time for the start of voting on this proposal's vote plan.\n        chain_committee_end_time:\n          type: string\n          format: date-time\n          description: Date and time for the end of tallying on this proposal's vote plan.\n        chain_voteplan_payload:\n          type: string\n          description: |\n            Whether the voting is done using the public or the privacy-preserving protocol.\n\n    ChallengeType:\n      type: string\n      enum:\n        - simple\n        - community-choice\n\n    ProposalWithChallengeInfo:\n      discriminator:\n        propertyName: challenge_type\n        mapping:\n          simple: \"#/components/schemas/SimpleProposal\"\n          community-choice: \"#/components/schemas/CommunityChoiceProposal\"\n      allOf:\n        - $ref: \"#/components/schemas/Proposal\"\n        - type: object\n          properties:\n            fund_id:\n              type: integer\n              format: int32\n            challenge_id:\n              type: integer\n              format: int32\n            reviews_count:\n              type: integer\n              format: int32\n              description: Total amount of individual reviews per assessor\n            challenge_type:\n              $ref: \"#/components/schemas/ChallengeType\"\n\n    SimpleProposal:\n      allOf:\n        - $ref: \"#/components/schemas/ProposalWithChallengeInfo\"\n        - type: object\n          properties:\n            proposal_solution:\n              type: string\n      example:\n        {\n          \"internal_id\": 22,\n          \"proposal_id\": \"4af0e6b3452cd4ee822b2ec1859fd57b5512f85c14875f408081aa9b796dfc6e\",\n          \"proposal_title\": \"Authentication for DeepFake Defense\",\n          \"proposal_summary\": \"Deepfake videos are dangerous.\",\n          \"proposal_solution\": \"We will create a cryptographic proof on Cardano that verifies videos are real by connecting their blockchain ID.\",\n          \"proposal_public_key\": \"Fvd8zI3DH85qnaChQE6Aymt1diMJP32LB0AdpheZh/Q=\",\n          \"proposal_funds\": 12000,\n          \"proposal_url\": \"http://ideascale.com/t/UM5UZBd2t\",\n          \"proposal_files_url\": \"\",\n          \"proposal_impact_score\": 0,\n          \"proposer\":\n            {\n              \"proposer_name\": \"Community Member\",\n              \"proposer_email\": \"example@vit.iohk.io\",\n              \"proposer_url\": \"\",\n              \"proposer_relevant_experience\": \"Cryptography student, website development, blockchain technologist.\",\n            },\n          \"chain_proposal_id\": \"4af0e6b3452cd4ee822b2ec1859fd57b5512f85c14875f408081aa9b796dfc6e\",\n          \"chain_proposal_index\": 0,\n          \"chain_vote_options\": { \"blank\": 0, \"yes\": 1, \"no\": 2 },\n          \"chain_voteplan_id\": \"b1eeb620baf1445672f6c9422481aff0f6babaf775760d187a7703027e098166\",\n          \"chain_vote_start_time\": \"2021-02-10T14:40:27+00:00\",\n          \"chain_vote_end_time\": \"2021-02-11T10:10:27+00:00\",\n          \"chain_committee_end_time\": \"2021-02-11T11:40:27+00:00\",\n          \"chain_voteplan_payload\": \"public\",\n          \"chain_vote_encryption_key\": \"\",\n          \"fund_id\": 20,\n          \"challenge_id\": 2,\n          \"challenge_type\": \"simple\",\n        }\n\n    CommunityChoiceProposal:\n      allOf:\n        - $ref: \"#/components/schemas/ProposalWithChallengeInfo\"\n        - type: object\n          properties:\n            proposal_brief:\n              type: string\n            proposal_importance:\n              type: string\n            proposal_goal:\n              type: string\n            proposal_metrics:\n              type: string\n      example:\n        {\n          \"internal_id\": 31,\n          \"proposal_id\": \"494d8d685e3b195eb5610494f1721db7747df0517cb1b6a705bb3cebfef3c998\",\n          \"proposal_title\": \"A for ADA Cryptoalphabet 4 children\",\n          \"proposal_summary\": \"How to increase general awareness about Cardano and cryptocurrencies?\\nHow to make fun community-building incentives?\",\n          \"proposal_brief\": \"A for ADA\",\n          \"proposal_importance\": \"We need to get them while they're young.\",\n          \"proposal_goal\": \"Nebulous.\",\n          \"proposal_metrics\": \"\\\\- Number of people engaged into the creation of Cryptoalphabet\",\n          \"proposal_public_key\": \"zqUCWwguCt6+NHYjkpvasvccuA7l2SuabE+1C0bzf3Y=\",\n          \"proposal_funds\": 4800,\n          \"proposal_url\": \"http://ideascale.com/t/UM5UZBd1p\",\n          \"proposal_files_url\": \"\",\n          \"proposal_impact_score\": 133,\n          \"proposer\":\n            {\n              \"proposer_name\": \"Community Member\",\n              \"proposer_email\": \"example@vit.iohk.io\",\n              \"proposer_url\": \"\",\n              \"proposer_relevant_experience\": \"\",\n            },\n          \"chain_proposal_id\": \"494d8d685e3b195eb5610494f1721db7747df0517cb1b6a705bb3cebfef3c998\",\n          \"chain_proposal_index\": 9,\n          \"chain_vote_options\": { \"no\": 2, \"yes\": 1, \"blank\": 0 },\n          \"chain_voteplan_id\": \"b1eeb620baf1445672f6c9422481aff0f6babaf775760d187a7703027e098166\",\n          \"chain_vote_start_time\": \"2021-02-10T14:40:27+00:00\",\n          \"chain_vote_end_time\": \"2021-02-11T10:10:27+00:00\",\n          \"chain_committee_end_time\": \"2021-02-11T11:40:27+00:00\",\n          \"chain_voteplan_payload\": \"public\",\n          \"chain_vote_encryption_key\": \"\",\n          \"fund_id\": 20,\n          \"challenge_id\": 1,\n          \"challenge_type\": \"community-choice\",\n        }\n\n    Challenge:\n      properties:\n        id:\n          type: integer\n          format: int32\n        challenge_type:\n          $ref: \"#/components/schemas/ChallengeType\"\n        title:\n          type: string\n        description:\n          type: string\n        rewards_total:\n          type: integer\n          format: int64\n        fund_id:\n          type: integer\n          format: int32\n        challenge_url:\n          type: string\n        highlights:\n          $ref: \"#/components/schemas/ChallengeHighlights\"\n\n    ChallengeWithProposals:\n      allOf:\n        - $ref: \"#/components/schemas/Challenge\"\n        - type: object\n          properties:\n            proposals:\n              type: array\n              items:\n                $ref: \"#/components/schemas/Proposal\"\n\n    AdvisorReview:\n      properties:\n        id:\n          type: integer\n          format: i32\n        proposal_id:\n          type: integer\n          format: i32\n        assessor:\n          type: string\n        impact_alignment_rating_given:\n          $ref: \"#/components/schemas/Rating\"\n        impact_alignment_note:\n          type: string\n        feasibility_rating_given:\n          $ref: \"#/components/schemas/Rating\"\n        feasibility_note:\n          type: string\n        auditability_rating_given:\n          $ref: \"#/components/schemas/Rating\"\n        auditability_note:\n          type: string\n        ranking:\n          description: Measure of quality of this review according to veteran community advisors\n          type: string\n          enum:\n            - Excellent\n            - Good\n            - FilteredOut\n            - NA\n\n    Rating:\n      type: integer\n      format: i32\n      minimum: 0\n      maximum: 500\n      description: Rating in range [0, 500] (0 stars to 5 stars)\n\n    AdvisorReviews:\n      type: array\n      items:\n        $ref: \"#/components/schemas/AdvisorReview\"\n      example:\n        [\n          {\n            \"id\": 1,\n            \"proposal_id\": 1234,\n            \"rating_given\": 0,\n            \"assessor\": \"za_assessor_432\",\n            \"note\": \"foo bar\",\n            \"tag\": \"Alignment\",\n          },\n        ]\n\n    ChallengeHighlights:\n      properties:\n        sponsor:\n          type: string\n\n    ProposalsByVoteplanIdAndIndexQuery:\n      type: array\n      items:\n        $ref: \"#/components/schemas/ProposalVoteplanIdAndIndex\"\n\n    ProposalVoteplanIdAndIndex:\n      properties:\n        voteplan_id: String\n        indexes:\n          type: array\n          items:\n              type: integer\n              format: i64\n"
		}
	},
	"Error": "unmarshal: callback: json: cannot unmarshal string into Go value of type ogen.Schema"
}