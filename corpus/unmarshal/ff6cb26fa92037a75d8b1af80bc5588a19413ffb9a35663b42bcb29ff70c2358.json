{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/windingtree/glider-ota"
		},
		"file": {
			"name": "wt-aggregator.yaml",
			"size": 0,
			"path": "api/_lib/schemas/wt-aggregator.yaml",
			"byteSize": 52788,
			"content": "openapi: 3.0.1\n\ninfo:\n  title: Winding Tree aggregator\n  description: \"This is the interface documentation for the REST api interface with the Winding Tree Aggregator\"\n  contact:\n    email: mathieu@windingtree.com\n  license:\n    name: Apache License\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n  version: 1.0.0\n\nservers:\n  - url: /api/v1\n    description: Current server\n\ntags:\n  - name: offers\n    description: Operations with Offers\n  - name: orders\n    description: Operations with Orders\n\npaths:\n  # ** Offers **\n  /offers/search:\n    post:\n      tags:\n        - offers\n      summary: Search for offers matching search criterias\n      operationId: offersWithSearchCriteria\n      requestBody:\n        description: Search for offers matching input criteria\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SearchCriteria\"\n            examples:\n              flightSearch:\n                summary: A search for flights\n                value:\n                  {\n                    \"itinerary\":\n                      {\n                        \"segments\":\n                          [\n                            {\n                              \"origin\":\n                                {\n                                  \"locationType\": \"airport\",\n                                  \"iataCode\": \"CDG\",\n                                },\n                              \"destination\":\n                                {\n                                  \"locationType\": \"airport\",\n                                  \"iataCode\": \"PRG\",\n                                },\n                              \"departureTime\": \"2020-04-14T00:00:00Z\",\n                            },\n                          ],\n                      },\n                    \"passengers\":\n                      [{ \"type\": \"ADT\", \"count\": 2 }, { \"type\": \"CHD\" }],\n                  }\n              hotelSearchByRectangle:\n                summary: A search for hotels by rectangle coordinates\n                value:\n                  {\n                    \"accommodation\":\n                      {\n                        \"location\":\n                          {\n                            \"rectangle\":\n                              {\n                                \"south\": \"50.0929802\",\n                                \"west\": \"14.4012451\",\n                                \"north\": \"50.0812615\",\n                                \"east\": \"14.4394467\",\n                              }\n                          },\n                        \"arrival\": \"2020-07-02T00:00:00Z\",\n                        \"departure\": \"2020-07-03T00:00:00Z\",\n                      },\n                    \"passengers\":\n                      [\n                        { \"type\": \"ADT\", \"count\": 2 },\n                        { \"type\": \"CHD\", \"count\": 1 },\n                      ],\n                  }\n              hotelSearchByCircle:\n                summary: A search for hotels by circle\n                value:\n                  {\n                    \"accommodation\":\n                      {\n                        \"location\":\n                          {\n                            \"circle\":\n                              {\n                                \"longitude\": 18.05437602,\n                                \"latitude\": 59.33309777,\n                                \"radius\": 50\n                              }\n                          },\n                        \"arrival\": \"2020-07-02T00:00:00Z\",\n                        \"departure\": \"2020-07-03T00:00:00Z\",\n                      },\n                    \"passengers\":\n                      [\n                        { \"type\": \"ADT\", \"count\": 2 },\n                        { \"type\": \"CHD\", \"count\": 1 },\n                      ],\n                  }\n              hotelSearchByPolygon:\n                summary: A search for hotels by polygon\n                description: \u003e\n                  For getting of polygon coordinates for testing purposes\n                  can be used online visual tool\n                  [https://www.keene.edu/campus/maps/tool/](https://www.keene.edu/campus/maps/tool/)\n                value:\n                  {\n                    \"accommodation\":\n                      {\n                        \"location\":\n                          {\n                            \"polygon\": [\n                              [\n                                24.8963928,\n                                60.1749466\n                              ],\n                              [\n                                24.9700356,\n                                60.1763126\n                              ],\n                              [\n                                24.9720097,\n                                60.1475721\n                              ],\n                              [\n                                24.8987961,\n                                60.1442394\n                              ],\n                              [\n                                24.896307,\n                                60.1748612\n                              ]\n                            ]\n                          },\n                        \"arrival\": \"2020-07-02T00:00:00Z\",\n                        \"departure\": \"2020-07-03T00:00:00Z\",\n                      },\n                    \"passengers\":\n                      [\n                        { \"type\": \"ADT\", \"count\": 2 },\n                        { \"type\": \"CHD\", \"count\": 1 },\n                      ],\n                  }\n        required: true\n      responses:\n        200:\n          description: Offers Retrieved\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SearchResults\"\n        401:\n          description: Authorization required\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        403:\n          description: Not authorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        405:\n          description: Validation exception\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        415:\n          description: Content should be application/json\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        429:\n          description: Too many requests\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        500:\n          description: Internal Server error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      security:\n        - orgid_auth:\n            - read:orders\n        - orgid_token: []\n      x-codegen-request-body-name: body\n\n  /offers/{offerIds}/price:\n    post:\n      tags:\n        - offers\n      summary: Get the final price for a list of offers\n      description: Providing an offer information with confirmed price\n      operationId: priceOffer\n      parameters:\n        - name: offerIds\n          in: path\n          description: IDs of offers separated by a comma\n          required: true\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/UUID\"\n      requestBody:\n        description: Optionally provide the selected options\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/OptionSelectionList\"\n      responses:\n        200:\n          description: Offer with confirmed price\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PricedOffer\"\n        400:\n          description: Invalid ID supplied\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        401:\n          description: Authorization required\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        403:\n          description: Not authorized to retrieve this order\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        404:\n          description: Order not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        415:\n          description: Content should be application/json\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        429:\n          description: Too many requests, rate limit has been reached\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      security:\n        - orgid_auth:\n            - read:offers\n        - orgid_token: []\n\n  /offers/{offerIds}/seatmap:\n    get:\n      tags:\n        - offers\n      summary: Retrieve the seats available to select\n      description: Use this operation to retrieve the seatmap in a flight offer. The service provides information on the layout of the cabin and the seats available\n      operationId: getSeatmap\n      parameters:\n        - name: offerIds\n          in: path\n          description: ID of the offers\n          required: true\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/UUID\"\n      responses:\n        200:\n          description: List of seatmap indexed by offerId\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  seatmaps:\n                    description: Contains the list of seatmaps indexed by segment\n                    additionalProperties:\n                      $ref: \"#/components/schemas/SeatMap\"\n                  prices:\n                    description: Contains the list of seat prices indexed by option code\n                    additionalProperties:\n                      $ref: \"#/components/schemas/Price\"\n        400:\n          description: Invalid Offer Ids supplied\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        401:\n          description: Authorization required\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        403:\n          description: Not authorized to access this offer\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        404:\n          description: Offer(s) not found or no service to offer\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        415:\n          description: Content should be application/json\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        429:\n          description: Too many requests, rate limit has been reached\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      security:\n        - orgid_auth:\n            - read:offers\n        - orgid_token: []\n\n  # ** Orders **\n  /orders/createWithOffer:\n    post:\n      tags:\n        - orders\n      summary: Place an order using a given offer\n      operationId: orderCreateWithOffer\n      requestBody:\n        description: Reference of the offers and details of the passengers\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateOfferBody\"\n            example:\n                {\n                  \"offerId\": \"11111111-2222-3333-4444-000000000001\",\n                  \"guaranteeId\": \"02a1a7c0-3ff8-4e12-a3ba-65d57e1e9276\",\n                  \"passengers\":\n                    {\n                      \"PAX1\":\n                        {\n                          \"type\": \"ADT\",\n                          \"civility\": \"MR\",\n                          \"lastnames\": [\"Marley\"],\n                          \"firstnames\": [\"Bob\"],\n                          \"gender\": \"Male\",\n                          \"birthdate\": \"1980-03-21T00:00:00Z\",\n                          \"contactInformation\":\n                            [\"+32123456789\", \"contact@org.co.uk\"],\n                        },\n                    },\n                }\n        required: true\n      responses:\n        200:\n          description: Order Created\n          content:\n            application/json:\n              schema:\n                properties:\n                  orderId:\n                    description: The ID of the order Created\n                    $ref: \"#/components/schemas/UUID\"\n                  order:\n                    description: The created order\n                    $ref: \"#/components/schemas/Order\"\n        401:\n          description: Authorization required\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        403:\n          description: Not authorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        405:\n          description: Validation exception\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        415:\n          description: Content should be application/json\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        429:\n          description: Too many requests\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        500:\n          description: Internal Server error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      security:\n        - orgid_auth:\n            - write:orders\n        - orgid_token: []\n      x-codegen-request-body-name: body\n\n  # Fulfill an Order\n  /orders/{orderId}/fulfill:\n    post:\n      tags:\n        - orders\n      summary: Fulfills an order in Aggregator\n      description: Confirms an order, providing travel documents if relevant\n      operationId: fulfillOrder\n      parameters:\n        - name: orderId\n          in: path\n          description: ID of the order to sign\n          required: true\n          schema:\n            oneOf:\n              - $ref: \"#/components/schemas/UUID\"\n              - $ref: \"#/components/schemas/ShortOrderId\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                orderItems:\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/UUID\"\n                passengerReferences:\n                  type: array\n                  items:\n                    description: The identifier of a passenger\n                    type: string\n                    example: PAX1\n                guaranteeId:\n                  $ref: \"#/components/schemas/UUID\"\n      responses:\n        200:\n          description: Order sucessfully signed\n          content:\n            application/json:\n              schema:\n                properties:\n                  orderId:\n                    $ref: \"#/components/schemas/UUID\"\n                  order:\n                    $ref: \"#/components/schemas/Order\"\n                  travelDocuments:\n                    description: The travel documents provided by the supplier\n                    type: object\n                    properties:\n                      bookings:\n                        description: The booking references\n                        type: array\n                        items:\n                          type: string\n                          pattern: \"^[A-Z0-9]{6}$\"\n                          example: \"LCHTB4\"\n                      etickets:\n                        description: The electronic ticket references\n                        type: array\n                        items:\n                          type: string\n                          pattern: \"^[0-9]{3}-[0-9]{10}$\"\n                          example: \"057-1438027611\"\n        400:\n          description: Invalid ID supplied\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        401:\n          description: Authorization required\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        403:\n          description: Not authorized to retrieve this order\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        404:\n          description: Order not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        415:\n          description: Content should be application/json\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        429:\n          description: Too many requests, rate limit has been reached\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      security:\n        - orgid_auth:\n            - write:orders\n        - orgid_token: []\n\ncomponents:\n  schemas:\n    Error:\n      description: Objet describing an error\n      type: object\n      properties:\n        message:\n          description: Error message\n          type: string\n          example: \"Something went wrong\"\n        code:\n          description: Error code\n          type: string\n          pattern: \"^[0-9A-Z]+$\"\n          example: \"E01\"\n\n    UUID:\n      description: Unique identifier for Offers and Orders\n      type: string\n      format: uuid\n      minLength: 36\n      maxLength: 36\n      pattern: \"^[0-9a-f]{8}-([0-9a-f]{4}-){3}[0-9a-f]{12}$\"\n      example: \"11111111-2222-3333-4444-000000000001\"\n\n    ShortOrderId:\n      description: Unique short order Id\n      type: string\n      minLength: 6\n      maxLength: 6\n      pattern: \"^[0-9a-zA-Z]{6}$\"\n      example: \"PUVYL9\"\n\n    OrgId:\n      description: ORG.ID identifier\n      type: string\n      pattern: \"^0x[a-fA-F0-9]{64}$\"\n      minLength: 64\n      maxLength: 64\n      example: \"0xc0fbc1348b43d50c948edf1818b0abfdd7466b9e\"\n\n    Amount:\n      description: An amount\n      type: string\n      pattern: '^[0-9]+(\\.[0-9]+){0,1}$'\n      minLength: 1\n      maxLength: 99\n      example: \"40.00\"\n\n    Currency:\n      description: The ISO4217 currency code\n      type: string\n      pattern: \"^[A-Z]{3}$\"\n      minLength: 3\n      maxLength: 3\n      example: \"EUR\"\n\n    Price:\n      description: Price of the service\n      type: object\n      properties:\n        currency:\n          $ref: \"#/components/schemas/Currency\"\n\n        private:\n          # The private price in currency decimals for this service that the distributor owes to the supplier.\n          $ref: \"#/components/schemas/Amount\"\n\n        public:\n          # The public price for this service. The distributor should sell the product at this price.\n          $ref: \"#/components/schemas/Amount\"\n\n        commission:\n          # The distributor commission for selling this service\n          $ref: \"#/components/schemas/Amount\"\n\n        taxes:\n          # The taxes to be collected when selling this service.\n          $ref: \"#/components/schemas/Amount\"\n\n    ServiceRestrictions:\n      description: Service restrictions\n      type: object\n      properties:\n        refundable:\n          description: Is the service refundable?\n          type: boolean\n          example: false\n\n        exchangeable:\n          description: Is the service exchangeable?\n          type: boolean\n          example: false\n\n        refundFee:\n          # The fee charged in case a refund is requested\n          $ref: \"#/components/schemas/Amount\"\n\n        exchangeFee:\n          # The fee charged in case an exchange is requested\n          $ref: \"#/components/schemas/Amount\"\n\n    Email:\n      description: An email\n      type: string\n      pattern: '^.+?@.+\\..+?$'\n      example: contact@org.co.uk\n\n    PhoneNumber:\n      description: A phone number\n      type: string\n      pattern: '^\\+[0-9]+$'\n      example: \"+32123456789\"\n\n    Name:\n      description: First, middle or last name\n      type: string\n      minLength: 1\n      maxLength: 42\n      example: \"Bob\"\n\n    Passenger:\n      description: A representation of a passenger\n      type: object\n      required: [\"type\"]\n      properties:\n        type:\n          description: The passenger type code as per IATA definitions\n          type: string\n          minLength: 3\n          maxLength: 3\n          enum:\n            - ADT # Adult (12+y)\n            - CHD # Child (2-11y)\n            - INF # Infant without a seat (\u003c2y)\n          example: ADT\n        count:\n          description: Number of associated passengers of the same type\n          type: integer\n          example: 2\n          default: 1\n        civility:\n          description: The civility of the passenger\n          type: string\n          enum:\n            - MR\n            - MRS\n          example: \"MR\"\n        lastnames:\n          description: The list of last names of this passenger\n          type: array\n          minItems: 1\n          maxItems: 5\n          items:\n            $ref: \"#/components/schemas/Name\"\n        firstnames:\n          description: The list of first names of this passenger\n          type: array\n          minItems: 1\n          maxItems: 5\n          items:\n            $ref: \"#/components/schemas/Name\"\n        middlenames:\n          description: The list of middle names of this passenger\n          type: array\n          minItems: 1\n          maxItems: 5\n          items:\n            $ref: \"#/components/schemas/Name\"\n        gender:\n          description: The gender of the passenger\n          type: string\n          enum:\n            - Male\n            - Female\n          example: Male\n        birthdate:\n          description: The birthdate of the passenger\n          type: string\n          format: date\n          example: \"1980-03-21\"\n        contactInformation:\n          description: The contact informations of the passenger\n          type: array\n          minItems: 1\n          items:\n            oneOf:\n              - $ref: \"#/components/schemas/PhoneNumber\"\n              - $ref: \"#/components/schemas/Email\"\n      example:\n        {\n          \"type\": \"ADT\",\n          \"lastnames\": [\"Marley\"],\n          \"firstnames\": [\"Bob\"],\n          \"gender\": \"Male\",\n          \"birthdate\" : \"1980-03-21\",\n          \"contactInformation\": [\"+32123456789\", \"contact@org.co.uk\"]\n        }\n\n    LocationAirport:\n      description: \"Object that specifies a location as an airport/railstation/city\"\n      type: object\n      required: [\"locationType\",\"iataCode\"]\n      properties:\n        locationType:\n          description: \"The type of location, for explicit filtering\"\n          type: string\n          enum:\n            - airport\n            - railstation\n            - city\n          example: \"airport\"\n        iataCode:\n          description: \"The IATA code of the location\"\n          type: string\n          pattern: \"^[A-Z]{3}$\"\n          minLength: 3\n          maxLength: 3\n          example: \"LHR\"\n\n    Location:\n      description: \"The location of a specific place\"\n      type: object\n      properties:\n        rectangle:\n          $ref: \"#/components/schemas/LocationRectangle\"\n        circle:\n          $ref: \"#/components/schemas/LocationCircle\"\n        polygon:\n          $ref: \"#/components/schemas/LocationPolygon\"\n\n    LocationRectangle:\n      description: \"The coordinates of a rectangle area\"\n      type: object\n      properties:\n        south:\n          type: number\n        west:\n          type: number\n        north:\n          type: number\n        east:\n          type: number\n      example:\n        {\n          \"south\": 50.0929802,\n          \"west\": 14.4012451,\n          \"north\": 50.0812615,\n          \"east\": 14.4394467,\n        }\n\n    LocationCircle:\n      description: \"The coordinates of a circle\"\n      type: object\n      properties:\n        lat:\n          type: number\n        long:\n          type: number\n        radius:\n          type: number\n      example:\n        {\n          \"latitude\": 50.0929802,\n          \"longitude\": 14.4012451,\n          \"radius\": 100\n        }\n\n    LocationPolygon:\n      description: \"The coordinates of a polygon area\"\n      type: array\n      items:\n        type: array\n        items: number\n\n      example:\n        [\n          [\n            24.8963928,\n            60.1749466\n          ],\n          [\n            24.9700356,\n            60.1763126\n          ],\n          [\n            24.9720097,\n            60.1475721\n          ],\n          [\n            24.8987961,\n            60.1442394\n          ],\n          [\n            24.896307,\n            60.1748612\n          ]\n        ]\n\n    Media:\n      type: array\n      items:\n        type: object\n        properties:\n          type:\n            type: string\n            enum:\n              - photo\n              - video\n          width:\n            type: integer\n          height:\n            type: integer\n          url:\n            type: string\n            format: url\n        example:\n          {\n            \"type\": \"photo\",\n            \"width\": 1024,\n            \"height\": 683,\n            \"url\": \"https://media.hosting.com/1234.jpg\",\n          }\n\n    TravelOperator:\n      description: \"A specific travel operator\"\n      type: object\n      properties:\n        operatorType:\n          description: The type of travel operator\n          type: string\n          enum:\n            - airline\n            - railway\n          example: \"airline\"\n        iataCode:\n          description: For airlines, the two letter IATA code\n          type: string\n          pattern: \"^[A-Z0-9]{2}$\"\n          minLength: 2\n          maxLength: 2\n          example: \"AF\"\n        flightNumber:\n          description: The flight number\n          type: string\n          pattern: \"^[A-Z]{2}[0-9]{4}$\"\n          example: \"AC0668\"\n\n    Segment:\n      description: A section of a travel itinerary\n      type: object\n      required: [\"origin\",\"destination\",\"departureTime\"]\n      properties:\n        operator:\n          $ref: \"#/components/schemas/TravelOperator\"\n        origin:\n          required: true\n          $ref: \"#/components/schemas/LocationAirport\"\n        destination:\n          required: true\n          $ref: \"#/components/schemas/LocationAirport\"\n        departureTime:\n          description: The departure time of the segment\n          type: string\n          format: date-time\n          required: true\n          example: \"2021-04-12T23:20:50.52Z\"\n        arrivalTime:\n          description: The arrival time of the segment\n          type: string\n          format: date-time\n          example: \"2021-04-14T23:20:50.52Z\"\n\n    PricePlan:\n      description: Describes the attributes of the price plan\n      type: object\n      properties:\n        name:\n          description: The marketing name of this price plan\n          type: string\n          maxLength: 24\n          example: \"Premium Economy\"\n        amenities:\n          description: The amenities for this price plan\n          type: array\n          maxItems: 99\n          items:\n            type: string\n            enum:\n              - meal\n              - wifi\n              - lounge\n              - fasttrack\n              - priorityBoarding\n              - seatSelection\n            example: meal\n        checkedBaggages:\n          description: the list of checked checkedBaggages\n          type: object\n          properties:\n            quantity:\n              type: integer\n              example: 2\n\n    # Defines the list of transportation types\n    TransportationType:\n      description: Type of transportation service\n      type: string\n      maxLength: 24\n      enum:\n        - flight\n        - train\n      example: \"flight\"\n\n    # Defines the list of accommodation types\n    AccommodationType:\n      description: Type of accommodation service\n      type: string\n      maxLength: 24\n      enum:\n        - hotel\n      example: \"hotel\"\n\n    Accommodation:\n      description: An accommodation object\n      type: object\n      properties:\n        name:\n          description: The name of the property or accommodation\n          type: string\n          example: Comfort Hotel Xpress Stockholm Central\n        type:\n          $ref: \"#/components/schemas/AccommodationType\"\n        description:\n          description: The description of the property\n          type: string\n        location:\n          $ref: \"#/components/schemas/Location\"\n        rating:\n          description: The award rating as per country rules\n          type: integer\n          example: 3\n        contactInformation:\n          type: object\n          properties:\n            phoneNumbers:\n              type: array\n              items:\n                $ref: \"#/components/schemas/PhoneNumber\"\n            emails:\n              type: array\n              items:\n                $ref: \"#/components/schemas/Email\"\n            address:\n              type: object\n              properties:\n                streetAddress:\n                  description: address line\n                  type: string\n                  example: Maskingatan 11\n                premise:\n                  type: string\n                  example: Gota Alv River\n                locality:\n                  description: city name\n                  type: string\n                  example: Gothenburg\n                postalCode:\n                  description: postal code\n                  type: string\n                  example: 417 64\n                country:\n                  description: country code\n                  type: string\n                  example: SE\n        checkinoutPolicy:\n          description: The check-in and check-out time policy, format HH:MM\n          type: object\n          properties:\n            checkinTime:\n              type: string\n              pattern: \"^[0-9]{2}:[0-9]{2}$\"\n              example: \"15:00\"\n            checkoutTime:\n              type: string\n              pattern: \"^[0-9]{2}:[0-9]{2}$\"\n              example: \"11:00\"\n        otherPolicies:\n          type: object\n          additionalProperties:\n            type: string\n        media:\n          $ref: \"#/components/schemas/Media\"\n        roomTypes:\n          description: Type of rooms available for this accommodation\n          type: object\n          additionalProperties:\n            description: A room type object\n            type: object\n            properties:\n              name:\n                description: The name of this room type\n                type: string\n                example: Twin beds\n              description:\n                description: A description of the room type\n                type: string\n                example: Standard twin rooms with two single beds\n              amenities:\n                description: The list of amenities available with this room type\n                type: object\n                properties:\n                  otaCode:\n                    description: The OTA code for this amenity\n                    type: string\n                  name:\n                    description: The name of this amenity\n                    type: string\n              size:\n                description: the size of the room\n                type: object\n                properties:\n                  value:\n                    description: The size value of this room\n                    type: number\n                    example: 15\n                  unit:\n                    description: The unit for this room size\n                    type: string\n                    enum:\n                      - metric\n                      - imperial\n                    example: metric\n                    default: metric\n              maximumOccupancy:\n                description: Maximum occupancy for this room type\n                type: object\n                properties:\n                  adults:\n                    type: integer\n                  childs:\n                    type: integer\n              media:\n                $ref: \"#/components/schemas/Media\"\n\n              policies:\n                type: object\n                additionalProperties:\n                  type: string\n\n    # Defines an itinerary\n    Itinerary:\n      description: The itinerary of transportation\n      type: object\n      required: [\"segments\"]\n      properties:\n        segments:\n          description: An ordered list of segments\n          type: array\n          minItems: 1\n          maxItems: 12\n          items:\n            $ref: \"#/components/schemas/Segment\"\n\n    TaxItem:\n      description: A tax item\n      type: object\n      properties:\n        amount:\n          $ref: \"#/components/schemas/Amount\"\n        code:\n          type: string\n          pattern: \"^[A-Z0-9]{2}$\"\n          example: CA\n        description:\n          type: string\n          example: Air Travellers Security Charge (ATSC)\n\n    PricedOfferServices:\n      description: Indexed object of services offered with the offer\n      type: object\n      properties:\n        code:\n          description: The service code\n          type: string\n          example: \"LGAC\"\n        name:\n          description: The service name\n          type: string\n          example: \"Lounge Access\"\n        description:\n          description: Description of the service\n          type: string\n          example: \"Lounge Access\"\n        segments:\n          description: List of segments in which this service is provided\n          type: array\n          items:\n            type: string\n          example:\n            [\n              \"HW9EJ7XAC7-SEG1\"\n            ]\n\n    PricedOffer:\n      description: An offer with confirmed price\n      type: object\n      properties:\n        offerId:\n          $ref: \"#/components/schemas/UUID\"\n        offer:\n          type: object\n          properties:\n            expiration:\n              description: The offer expiration time.\n              type: string\n              format: date-time\n              example: \"2021-04-12T23:20:50.52Z\"\n            price:\n              $ref: \"#/components/schemas/Price\"\n            pricedItems:\n              description: Breakdown of items priced\n              type: array\n              items:\n                description: Detail of a priced item\n                type: object\n                properties:\n                  taxes:\n                    description: Taxes included in the price\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/TaxItem\"\n                  fare:\n                    description: Breakdown of the fare\n                    type: array\n                    items:\n                      description: A fare item\n                      type: object\n                      properties:\n                        amount:\n                          $ref: \"#/components/schemas/Amount\"\n\n                        description:\n                          type: string\n                          example: Navigation Surcharge\n\n                        usage:\n                          description: The usage of the fare item\n                          type: string\n                          enum:\n                            - base      # Base Fare\n                            - surcharge # Surcharge\n                          default: base\n\n                        code:\n                          description: The optional code of the fare item\n                          type: string\n                          pattern: \"^[A-Z0-9]{2}$\"\n                          example: S1\n\n                        components:\n                          description: A fare component\n                          type: array\n                          items:\n                            type: object\n                            properties:\n                              name:\n                                description: The name of the fare component\n                                type: string\n                                example: Basic\n                              basisCode:\n                                description: The Fare Basis code of the fare component\n                                type: string\n                                pattern: \"^[A-Z0-9]+$\"\n                                example: A30ZABA\n                              designator:\n                                description: The Reservation Booking Designator (RBD)\n                                type: string\n                                pattern: \"^[A-Z]{1}$\"\n                                example: A\n                              conditions:\n                                description: The fare conditions associated with the fare component\n                                type: string\n                                example: \"No flight changes are permitted.\"\n            terms:\n              description: General terms and conditions\n              type: string\n              example: \"Air Passenger Protection Regulations Notice:..\"\n\n            disclosures:\n              description: List of disclosures\n              type: array\n              items:\n                type: string\n                example: \"The seat charge is applicable to each one-way flight...\"\n\n            passengers:\n              description: Indexed dictionnary of the passengers\n              type: object\n              additionalProperties:\n                $ref: \"#/components/schemas/Passenger\"\n\n            itinerary:\n              $ref: \"#/components/schemas/Itinerary\"\n\n            options:\n              description: Options included in the offer\n              type: array\n              items:\n                $ref: \"#/components/schemas/OptionSelection\"\n      example:\n        {\n          \"offerId\": \"3d00fa3e-1bd6-4559-8905-431e3325e12e\",\n          \"offer\": {\n            \"expiration\": \"2020-04-27T00:00:00Z\",\n            \"price\": {\n              \"currency\": \"CAD\",\n              \"public\": \"5284.15\",\n              \"taxes\": \"139.36\"\n            },\n            \"passengers\": {\n              \"PAX1\": {\n                \"type\": \"ADT\"\n              },\n              \"PAX2\": {\n                \"type\": \"ADT\"\n              },\n              \"PAX3\": {\n                \"type\": \"CHD\"\n              }\n            },\n            \"itinerary\": {\n              \"segments\": {\n                \"SEG1\": {\n                  \"operator\": {\n                    \"operatorType\": \"airline\",\n                    \"iataCode\": \"AC\"\n                  },\n                  \"airlineIataCode\": \"AC\",\n                  \"origin\": {\n                    \"locationType\": \"airport\",\n                    \"iataCode\": \"DXB\"\n                  },\n                  \"destination\": {\n                    \"locationType\": \"airport\",\n                    \"iataCode\": \"ZRH\"\n                  },\n                  \"departureTime\": \"2020-09-13T21:35:00.000Z\",\n                  \"arrivalTime\": \"2020-09-14T04:25:00.000Z\"\n                },\n                \"SEG2\": {\n                  \"operator\": {\n                    \"operatorType\": \"airline\",\n                    \"iataCode\": \"AC\"\n                  },\n                  \"airlineIataCode\": \"AC\",\n                  \"origin\": {\n                    \"locationType\": \"airport\",\n                    \"iataCode\": \"ZRH\"\n                  },\n                  \"destination\": {\n                    \"locationType\": \"airport\",\n                    \"iataCode\": \"YYZ\"\n                  },\n                  \"departureTime\": \"2020-09-14T07:55:00.000Z\",\n                  \"arrivalTime\": \"2020-09-14T16:25:00.000Z\"\n                }\n              },\n              \"options\":\n                [\n                  \"code\": \"LGAC\",\n                  \"name\": \"Lounge Access\",\n                  \"description\": \"Lounge Access\",\n                  \"application\": \"surcharge\",\n                  \"segment\": \"SEG1\",\n                  \"passenger\": \"PAX1\",\n                  \"price\": {\n                    \"currency\": \"CAD\",\n                    \"public\": \"30.00\",\n                    \"taxes\": \"5.08\"\n                  },\n                  \"taxes\" : [\n                    {\n                      \"code\": \"XG\",\n                      \"amount\": \"5.08\",\n                      \"description\": \"Goods and Services Tax\"\n                    }\n                  ],\n                  \"conditions\": \"Non transferable.\\nNon refundable\"\n                ]\n            }\n          }\n        }\n\n    # Define an Offer object\n    Offer:\n      description: An offer object\n      type: object\n      properties:\n        # An offer expiration time\n        expiration:\n          description: The offer expiration time. Once this time is reached, the booking of the offer is not possible anymore.\n          type: string\n          format: date-time\n          example: \"2021-04-12T23:20:50.52Z\"\n\n        # The price of the offer\n        price:\n          $ref: \"#/components/schemas/Price\"\n\n        pricePlansReferences:\n          description: Maps a price plan with the associated elements\n          type: object\n          additionalProperties:\n            type: object\n            properties:\n              accommodation:\n                description: reference of the accomodation\n                type: string\n                example: \"prov.1234\"\n              roomType:\n                description: reference of the room type in the accomodation\n                type: string\n                example: \"ND\"\n              flights:\n                description: reference of the flights\n                type: array\n                items:\n                  type: string\n                  example: \"FL1\"\n          example:\n            {\n              \"BAR\": { \"accommodation\": \"prov.1234\", \"roomType\": \"ND\" },\n              \"PC1\": { \"flights\": [\"FL1\", \"FL2\"] },\n            }\n\n    SeatMap:\n      description: Provides information of a Seat Map for transportation services\n      type: object\n      properties:\n        cabins:\n          description: Provide a list of cabin configurations\n          type: array\n          items:\n            description: A cabin configuration\n            type: object\n            properties:\n              name:\n                description: Name of the cabin\n                type: string\n                example: Economy\n              layout:\n                description: Layout of the cabin\n                type: string\n                example: \"ABC DEF\"\n              firstRow:\n                description: Number of the first row\n                type: number\n                example: 12\n              lastRow:\n                description: Number of the last row\n                type: number\n                example: 37\n              wingFirst:\n                description: First row over the wing\n                type: number\n                example: 16\n              wingLast:\n                description: Last row over the wing\n                type: number\n                example: 16\n              exitRows:\n                description: Position of the rows with an emergency exit\n                type: array\n                items:\n                  type: number\n                example: [13, 28]\n              seats:\n                description: Provide a list of existing seats, both free and occupied\n                type: array\n                items:\n                  description: Description of a seat\n                  type: object\n                  properties:\n                    number:\n                      description: The seat number\n                      type: string\n                      example: \"12A\"\n                    row:\n                      description: Row of the seat\n                      type: number\n                      example: 12\n                    column:\n                      description: Column of the seat\n                      type: string\n                      example: A\n                    available:\n                      description: The seat availability status (Status is F in PADIS 9685)\n                      type: boolean\n                    characteristics:\n                      description: The seat characteristics (as per PADIS 9825)\n                      type: array\n                      items:\n                        type: string\n                        example: W\n                      example: [A, H]\n                    optionCode:\n                      description: An option code to reference the seat selection\n                      type: string\n                      example: ASPW_01\n        prices:\n          description: Contains the list of seat prices indexed by option code\n          additionalProperties:\n            $ref: \"#/components/schemas/Price\"\n\n    OptionSelectionList:\n      description: A list of selected options\n      type: array\n      items:\n        $ref: \"#/components/schemas/OptionSelection\"\n\n    OptionSelection:\n      description: A selected option\n      type: object\n      required: [\"code\"]\n      properties:\n        code:\n          description: The option code\n          type: string\n          minLength: 1\n          example: divNonAir11.LGAC1\n        name:\n          description: The option name\n          type: string\n          minLength: 1\n          example: \"Lounge Access\"\n        description:\n          description: Description of the option\n          type: string\n          minLength: 1\n          example: \"An access to the Exclusive Lounge Access at the departure\"\n        segment:\n          description: Segment for which this option is available\n          type: string\n          minLength: 1\n          example: \"HW9EJ7XAC7-SEG1\"\n        passenger:\n          description: Passenger for which this option is selected\n          type: string\n          minLength: 1\n          example: \"PAX1\"\n        seatNumber:\n          description: For seats options, the seat number selected with this option\n          type: string\n          minLength: 1\n          example: 12C\n        price:\n          $ref: \"#/components/schemas/Price\"\n        taxes:\n          description: Taxes included in the price\n          type: array\n          items:\n            $ref: \"#/components/schemas/TaxItem\"\n\n    # Define an Order object\n    Order:\n      description: An Order object\n      required:\n        - version\n        - supplier\n        - distributor\n      type: object\n      properties:\n        # A version\n        version:\n          description: A major/minor version pattern for forward compatibility\n          type: string\n          pattern: '^[0-9]+(\\.[0-9]+)+$'\n          minLength: 3\n          maxLength: 12\n          example: \"1.0.0\"\n\n        # The ORG.ID of the supplier\n        supplier:\n          $ref: \"#/components/schemas/OrgId\"\n\n        # The ORG.ID of the distributor\n        distributor:\n          $ref: \"#/components/schemas/OrgId\"\n\n        # The type of travel service in the order\n        type:\n          description: Type of travel service\n          type: string\n          enum:\n            - transportation\n            - accommodation\n            - lounge\n            - fasttrack\n            - parking\n          example: \"transportation\"\n\n        # The sub-type of service\n        subtype:\n          description: The sub-type of service\n          oneOf:\n            - $ref: \"#/components/schemas/TransportationType\"\n            - $ref: \"#/components/schemas/AccommodationType\"\n          example: \"flight\"\n\n        # The price of the service\n        price:\n          $ref: \"#/components/schemas/Price\"\n\n        # The service restrictions\n        restrictions:\n          $ref: \"#/components/schemas/ServiceRestrictions\"\n\n        # The passengers involved\n        passengers:\n          description: The passengers involved in the order\n          type: array\n          minItems: 1\n          maxItems: 99\n          items:\n            $ref: \"#/components/schemas/Passenger\"\n\n        # For Transportation services\n        itinerary:\n          $ref: \"#/components/schemas/Itinerary\"\n\n        options:\n          description: Options included in the order\n          type: array\n          items:\n            $ref: \"#/components/schemas/OptionSelection\"\n\n    CreateOfferBody:\n      description: An object to provide order details\n      type: object\n      required: [\"offerId\",\"passengers\"]\n      properties:\n          offerId:\n            $ref: \"#/components/schemas/UUID\"\n          passengers:\n            description: Indexed dictionary of the passengers\n            type: object\n            required: true\n            additionalProperties:\n              $ref: \"#/components/schemas/Passenger\"\n          guaranteeId:\n            $ref: \"#/components/schemas/UUID\"\n\n\n    # Contains the parameters for a search\n    SearchCriteria:\n      description: An object to provide search criteria\n      type: object\n      required: [\"passengers\"]\n      properties:\n        # The option of the itinerary being searched\n        itinerary:\n          $ref: \"#/components/schemas/Itinerary\"\n\n        # The option of the accommodation being searched\n        accommodation:\n          description: Criteria for the accommodation search\n          type: object\n          properties:\n            location:\n              $ref: \"#/components/schemas/Location\"\n            arrival:\n              type: string\n              description: arrival day in the accommodation\n              format: date-time\n            departure:\n              type: string\n              description: departure day from the accommodation\n              format: date-time\n\n        # The passengers involved in the search\n        passengers:\n          description: The passengers involved in the search. Allows personalization and custom offers.\n          type: array\n          required: true\n          minItems: 1\n          maxItems: 99\n          items:\n            $ref: \"#/components/schemas/Passenger\"\n\n    SearchResults:\n      description: An object to return search results\n      type: object\n      properties:\n        # The proposed offers\n        offers:\n          description: The indexed list of offers\n          type: object\n          additionalProperties:\n            $ref: \"#/components/schemas/Offer\"\n\n        # The itineraries involved in the offers\n        itineraries:\n          description: The possible itineraries for an offer\n          type: object\n          properties:\n            # The possible combinations\n            combinations:\n              description: The indexed list of possible combinations\n              type: object\n              additionalProperties:\n                description: A possible combination\n                type: array\n                items:\n                  description: An ordered list of segment references\n                  type: string\n                  example: \"SEG1\"\n              example:\n                FL1: [\"SEG1\", \"SEG2\", \"SEG5\"]\n\n            # The segments involved in the combinations\n            segments:\n              description: The indexed list of segments\n              type: object\n              additionalProperties:\n                $ref: \"#/components/schemas/Segment\"\n\n        accommodations:\n          description: The acomodations matching an search request\n          type: object\n          additionalProperties:\n            $ref: \"#/components/schemas/Accommodation\"\n\n        # The price plans involved in the offer\n        pricePlans:\n          description: The indexed list of price plans\n          type: object\n          additionalProperties:\n            $ref: \"#/components/schemas/PricePlan\"\n\n        # The mapping of the passenger references\n        passengers:\n          type: object\n          additionalProperties:\n            $ref: \"#/components/schemas/Passenger\"\n          example:\n            PAX1: { \"type\": \"ADT\" }\n\n  # Defines the security schemes\n  securitySchemes:\n    orgid_auth:\n      type: oauth2\n      flows:\n        implicit:\n          authorizationUrl: https://staging.api.simard.io/oauth/authorize\n          scopes:\n            write:orders: modify orders in your account\n            read:orders: read your orders\n            write:offers: modify offers in your account\n            read:offers: read your offers\n\n    orgid_token:\n      type: apiKey\n      name: orgid_token\n      in: header\n"
		}
	},
	"Error": "unmarshal: callback: json: cannot unmarshal bool into Go struct field Schema.required of type []string"
}