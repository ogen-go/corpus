{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/strohne/Facepager"
		},
		"file": {
			"name": "Twitter.v2.oa3.json",
			"size": 0,
			"path": "apis/Twitter.v2.oa3.json",
			"byteSize": 54016,
			"content": "{\n\t\"openapi\": \"3.0.0\",\n\t\"x-facepager-module\": \"Twitter\",\n\n\t\"x-facepager-extract\": \"data,includes.users,includes.tweets,includes.media,includes.polls,includes.places\",\n\t\"x-facepager-objectid\": \"id\",\n\t\"x-facepager-pagination\": {\n\t\t\"method\": \"key\",\n\t\t\"param\": \"pagination_token\",\n\t\t\"key\": \"meta.next_token\",\n\t\t\"stop\": \"meta.next_token\"\n\t},\n    \"x-facepager-authorization\" : {         \n         \"auth_type\":\"OAuth2 Client Credentials\",\n         \"auth_uri\":\"https://api.twitter.com/oauth2/token/\",\n\t\t \"auth_method\": \"header\",\n\t\t \"token_name\": \"Authorization\"\n\t},\n\n\t\"info\": {\n\t\t\"title\": \"Twitter API v2\",\n\t\t\"description\": \"The first endpoints of the Twitter v2 API are available within Early Access. According to Twitter, additional endpoints, features, and access levels will be released soon. They intend for this new v2 Twitter API to replace the standard v1.1, premium v1.1, and enterprise APIs in the future.\",\n\t\t\"termsOfService\": \"https://developer.twitter.com/en/developer-terms\",\n\t\t\"version\": \"2\"\n\t},\n\t\"externalDocs\": {\n\t\t\"url\": \"https://developer.twitter.com/en/docs/twitter-api/early-access\"\n\t},\n\t\"servers\": [{\n\t\t\"url\": \"https://api.twitter.com/2\"\n\t}],\n\t\"paths\": {\n\t\t\"/tweets\": {\n\t\t\t\"get\": {\n\t\t\t\t\"summary\": \"Retrieve multiple Tweets with a list of IDs. Returns a variety of information about the Tweet specified by the requested ID or list of IDs.\",\n\t\t\t\t\"externalDocs\": {\n\t\t\t\t\t\"url\": \"https://developer.twitter.com/en/docs/twitter-api/tweets/lookup/api-reference/get-tweets\"\n\t\t\t\t},\n\t\t\t\t\"parameters\": [{\n\t\t\t\t\t\t\"name\": \"id\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\"description\": \"A comma separated list of Tweet IDs. Up to 100 are allowed in a single request. Make sure to not include a space between commas and fields.\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t}\n\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"expansions\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"Comma-separated list of expansions. Expansions enable requests to expand an ID into a full object in the includes response object. Make sure to not include a space between commas and fields.\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"enum\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"media.fields\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"Comma-separated list of additional fields to return in the media object. The response will contain the selected fields only if a Tweet contains media attachments. Make sure to not include a space between commas and fields.\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"enum\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"place.fields\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"Comma-separated list of additional fields to return in the place object. The response will contain the selected fields only if location data is present in any of the response objects. Make sure to not include a space between commas and fields.\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"enum\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"poll.fields\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"Comma-separated list of additional fields to return in the poll object. The response will contain the selected fields only if a Tweet contains a poll. Make sure to not include a space between commas and fields.\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"enum\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\n\t\t\t\t\t\t\"name\": \"tweet.fields\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"Comma-separated list of additional fields to return in the Tweet object. By default, the endpoint only returns id and text. Make sure to not include a space between commas and fields.\",\n                        \"example\": \"entities,lang\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"enum\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\n\t\t\t\t\t\t\"name\": \"user.fields\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"Comma-separated list of additional fields to return in the user object. By default, the endpoint does not return any user field. To use this parameter, you must include the author_id expansion parameter in the request. Make sure to not include a space between commas and fields.\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"enum\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"responses\": {\n\t\t\t\t\t\"200\": {\n\t\t\t\t\t\t\"description\": \"A collection of relevant Tweets matching a specified query.\",\n\t\t\t\t\t\t\"content\": {\n\t\t\t\t\t\t\t\"application/json\": {\n                               \"schema\" : {\n                                    \"type\" : \"object\",\n\t\t\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\t\t\t\"data\" : {\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\":\"object\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\" : \"#components/schema/tweet/properties\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t    }\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"/tweets/{id}\": {\n\t\t\t\"get\": {\n\t\t\t\t\"summary\": \"Retrieve a single Tweet with an ID. Returns a variety of information about a single Tweet specified by the requested ID.\",\n\t\t\t\t\"externalDocs\": {\n\t\t\t\t\t\"url\": \"https://developer.twitter.com/en/docs/twitter-api/tweets/lookup/api-reference/get-tweets-id\"\n\t\t\t\t},\n\t\t\t\t\"parameters\": [{\n\t\t\t\t\t\t\"name\": \"id\",\n\t\t\t\t\t\t\"in\": \"path\",\n\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\"description\": \"The identifier of the Collection for which to return results.\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"expansions\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"Comma-separated list of expansions. Expansions enable requests to expand an ID into a full object in the includes response object. Make sure to not include a space between commas and fields.\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"enum\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"media.fields\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"Comma-separated list of additional fields to return in the media object. The response will contain the selected fields only if a Tweet contains media attachments. Make sure to not include a space between commas and fields.\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"enum\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"place.fields\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"Comma-separated list of additional fields to return in the place object. The response will contain the selected fields only if location data is present in any of the response objects. Make sure to not include a space between commas and fields.\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"enum\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"poll.fields\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"Comma-separated list of additional fields to return in the poll object. The response will contain the selected fields only if a Tweet contains a poll. Make sure to not include a space between commas and fields.\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"enum\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\n\t\t\t\t\t\t\"name\": \"tweet.fields\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"Comma-separated list of additional fields to return in the Tweet object. By default, the endpoint only returns id and text. Make sure to not include a space between commas and fields.\",\n\t\t\t\t\t\t\"example\": \"entities,lang\",\n                        \"schema\": {\n\t\t\t\t\t\t\t\"type\": \"enum\"                            \n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\n\t\t\t\t\t\t\"name\": \"user.fields\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"Comma-separated list of additional fields to return in the user object. By default, the endpoint does not return any user field. To use this parameter, you must include the author_id expansion parameter in the request. Make sure to not include a space between commas and fields.\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"enum\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t],\n\t\t\t\t\"responses\": {\n\t\t\t\t\t\"200\": {\n\t\t\t\t\t\t\"description\": \"A collection of detailed data of the specific post.\",\n\t\t\t\t\t\t\"content\": {\n\t\t\t\t\t\t\t\"application/json\": {\n\t\t\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"#components/schema/tweet/properties\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"/tweets/search/recent\": {\n\t\t\t\"get\": {\n\t\t\t\t\"summary\": \"The recent search endpoint returns Tweets from the last 7 days that match a search query.\",\n\t\t\t\t\"externalDocs\": {\n\t\t\t\t\t\"url\": \"https://developer.twitter.com/en/docs/twitter-api/tweets/search/api-reference/get-tweets-search-recent\"\n\t\t\t\t},\n\t\t\t\t\"parameters\": [{\n\t\t\t\t\t\t\"name\": \"end_time\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"YYYY-MM-DDTHH:mm:ssZ (ISO 8601/RFC 3339). The newest, most recent UTC timestamp to which the Tweets will be provided. Timestamp is in second granularity and is exclusive (for example, 12:00:01 excludes the first second of the minute). By default, a request will return Tweets from as recent as 30 seconds ago if you do not include this parameter.\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"date\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"query\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\"description\": \"One rule for matching Tweets. Up to 512 characters.\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"expansions\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"Comma-separated list of expansions. Expansions enable requests to expand an ID into a full object in the includes response object. Make sure to not include a space between commas and fields.\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"enum\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"max_results\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The maximum number of search results to be returned by a request. A number between 10 and the system limit (currently 100). By default, a request response will return 10 results.\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"integer\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"next_token\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"This parameter is used to get the next 'page' of results. The value used with the parameter is pulled directly from the response provided by the API, and should not be modified.\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"place.fields\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"Comma-separated list of additional fields to return in the place object. The response will contain the selected fields only if location data is present in any of the response objects. Make sure to not include a space between commas and fields.\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"enum\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"poll.fields\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"Comma-separated list of additional fields to return in the poll object. The response will contain the selected fields only if a Tweet contains a poll. Make sure to not include a space between commas and fields.\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"enum\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"since_id\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"Returns results with a Tweet ID greater than (that is, more recent than) the specified ID. The ID specified is exclusive and responses will not include it. If included with the same request as a start_time parameter, only since_id will be used.\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"start_time\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"YYYY-MM-DDTHH:mm:ssZ (ISO 8601/RFC 3339). The oldest UTC timestamp (from most recent seven days) from which the Tweets will be provided. Timestamp is in second granularity and is inclusive (for example, 12:00:01 includes the first second of the minute). If included with the same request as a since_id parameter, only since_id will be used. By default, a request will return Tweets from up to seven days ago if you do not include this parameter.\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"date\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"tweet.fields\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"Comma-separated list of additional fields to return in the Tweet object. By default, the endpoint only returns id and text. Make sure to not include a space between commas and fields.\",\n                        \"example\": \"entities,lang\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"enum\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"until_id\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"Returns results with a Tweet ID less than (that is, older than) the specified ID. The ID specified is exclusive and responses will not include it.\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"user.fields\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"Comma-separated list of additional fields to return in the user object. By default, the endpoint does not return any user field. To use this parameter, you must include the author_id expansion parameter in the request. Make sure to not include a space between commas and fields.\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"enum\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"responses\": {\n\t\t\t\t\t\"200\": {\n\t\t\t\t\t\t\"description\": \"The recent search endpoint returns Tweets from the last 7 days that match a search query.\",\n\t\t\t\t\t\t\"content\": {\n\t\t\t\t\t\t\t\"application/json\": {\n                               \"schema\" : {\n                                    \"type\" : \"object\",\n\t\t\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\t\t\t\"data\" : {\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\":\"object\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\" : \"#components/schema/tweet/properties\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t    }\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"/users/{id}/tweets\": {\n\t\t\t\"get\": {\n\t\t\t\t\"summary\": \"Returns Tweets composed by a single user, specified by the requested user ID. By default, the most recent 10 Tweets are returned per request with the default Tweet id and text. Using pagination, the most recent 3,200 Tweets can be retrieved.\",\n\t\t\t\t\"externalDocs\": {\n\t\t\t\t\t\"url\": \"https://developer.twitter.com/en/docs/twitter-api/tweets/timelines/api-reference/get-users-id-tweets\"\n\t\t\t\t},\n\t\t\t\t\"parameters\": [{\n\t\t\t\t\t\t\"name\": \"id\",\n\t\t\t\t\t\t\"in\": \"path\",\n\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\"description\": \"Unique identifier of the Twitter account (user ID) for whom to return results. User ID can be referenced using the user/lookup endpoint. More information on Twitter IDs is here.\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"end_time\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"YYYY-MM-DDTHH:mm:ssZ (ISO 8601/RFC 3339). The newest, most recent UTC timestamp to which the Tweets will be provided. Timestamp is in second granularity and is exclusive (for example, 12:00:01 excludes the first second of the minute). By default, a request will return Tweets from as recent as 30 seconds ago if you do not include this parameter.\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"date\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"expansions\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"Comma-separated list of expansions. Expansions enable requests to expand an ID into a full object in the includes response object. Make sure to not include a space between commas and fields.\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"enum\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"exclude\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"Comma-separated list of the types of Tweets to exclude from the response. When exclude=retweets is used, the maximum historical Tweets returned is still 3200. When the exclude=replies parameter is used for any value, only the most recent 800 Tweets are available.\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"enum\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"max_results\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The maximum number of search results to be returned by a request. A number between 10 and the system limit (currently 100). By default, a request response will return 10 results.\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"integer\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"media.fields\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"Comma-separated list of additional fields to return in the media object. The response will contain the selected fields only if a Tweet contains media attachments. Make sure to not include a space between commas and fields.\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"enum\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"pagination_token\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"This parameter is used to move forwards or backwards through 'pages' of results, based on the value of the next_token or previous_token in the response. The value used with the parameter is pulled directly from the response provided by the API, and should not be modified.\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"place.fields\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"Comma-separated list of additional fields to return in the place object. The response will contain the selected fields only if location data is present in any of the response objects. Make sure to not include a space between commas and fields.\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"enum\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"poll.fields\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"Comma-separated list of additional fields to return in the poll object. The response will contain the selected fields only if a Tweet contains a poll. Make sure to not include a space between commas and fields.\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"enum\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"since_id\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"Returns results with a Tweet ID greater than (that is, more recent than) the specified ID. The ID specified is exclusive and responses will not include it. If included with the same request as a start_time parameter, only since_id will be used.\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"start_time\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"YYYY-MM-DDTHH:mm:ssZ (ISO 8601/RFC 3339). The oldest UTC timestamp (from most recent seven days) from which the Tweets will be provided. Timestamp is in second granularity and is inclusive (for example, 12:00:01 includes the first second of the minute). If included with the same request as a since_id parameter, only since_id will be used. By default, a request will return Tweets from up to seven days ago if you do not include this parameter.\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"date\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"tweet.fields\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"Comma-separated list of additional fields to return in the Tweet object. By default, the endpoint only returns id and text. Make sure to not include a space between commas and fields.\",\n\t\t\t\t\t\t\"example\": \"entities,lang\",\n                        \"schema\": {\n\t\t\t\t\t\t\t\"type\": \"enum\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"until_id\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"Returns results with a Tweet ID less than (that is, older than) the specified ID. The ID specified is exclusive and responses will not include it.\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"user.fields\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"Comma-separated list of additional fields to return in the user object. By default, the endpoint does not return any user field. To use this parameter, you must include the author_id expansion parameter in the request. Make sure to not include a space between commas and fields.\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"enum\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"responses\": {\n\t\t\t\t\t\"200\": {\n\t\t\t\t\t\t\"description\": \"Returns Tweets composed by a single user, specified by the requested user ID.\",\n\t\t\t\t\t\t\"content\": {\n\t\t\t\t\t\t\t\"application/json\": {\n                               \"schema\" : {\n                                    \"type\" : \"object\",\n\t\t\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\t\t\t\"data\" : {\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\":\"object\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\" : \"#components/schema/tweet/properties\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t    }\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"/users/{id}/mentions\": {\n\t\t\t\"get\": {\n\t\t\t\t\"summary\": \"Returns Tweets mentioning a single user specified by the requested user ID. By default, the most recent 10 Tweets are returned per request with the default Tweet id and text. Using pagination, up to the most recent 800 Tweets can be retrieved.\",\n\t\t\t\t\"externalDocs\": {\n\t\t\t\t\t\"url\": \"https://developer.twitter.com/en/docs/twitter-api/tweets/timelines/api-reference/get-users-id-mentions\"\n\t\t\t\t},\n\t\t\t\t\"parameters\": [{\n\t\t\t\t\t\t\"name\": \"id\",\n\t\t\t\t\t\t\"in\": \"path\",\n\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\"description\": \"Unique identifier of the user for whom to return Tweets mentioning the user. User ID can be referenced using the user/lookup endpoint. More information on Twitter IDs is here.\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"end_time\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"YYYY-MM-DDTHH:mm:ssZ (ISO 8601/RFC 3339). The newest, most recent UTC timestamp to which the Tweets will be provided. Timestamp is in second granularity and is exclusive (for example, 12:00:01 excludes the first second of the minute). By default, a request will return Tweets from as recent as 30 seconds ago if you do not include this parameter.\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"date\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"expansions\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"Comma-separated list of expansions. Expansions enable requests to expand an ID into a full object in the includes response object. Make sure to not include a space between commas and fields.\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"enum\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"max_results\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The maximum number of search results to be returned by a request. A number between 10 and the system limit (currently 100). By default, a request response will return 10 results.\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"integer\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"media.fields\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"Comma-separated list of additional fields to return in the media object. The response will contain the selected fields only if a Tweet contains media attachments. Make sure to not include a space between commas and fields.\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"enum\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"pagination_token\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"This parameter is used to move forwards or backwards through 'pages' of results, based on the value of the next_token or previous_token in the response. The value used with the parameter is pulled directly from the response provided by the API, and should not be modified.\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"place.fields\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"Comma-separated list of additional fields to return in the place object. The response will contain the selected fields only if location data is present in any of the response objects. Make sure to not include a space between commas and fields.\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"enum\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"poll.fields\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"Comma-separated list of additional fields to return in the poll object. The response will contain the selected fields only if a Tweet contains a poll. Make sure to not include a space between commas and fields.\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"enum\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"since_id\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"Returns results with a Tweet ID greater than (that is, more recent than) the specified ID. The ID specified is exclusive and responses will not include it. If included with the same request as a start_time parameter, only since_id will be used.\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"start_time\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"YYYY-MM-DDTHH:mm:ssZ (ISO 8601/RFC 3339). The oldest UTC timestamp (from most recent seven days) from which the Tweets will be provided. Timestamp is in second granularity and is inclusive (for example, 12:00:01 includes the first second of the minute). If included with the same request as a since_id parameter, only since_id will be used. By default, a request will return Tweets from up to seven days ago if you do not include this parameter.\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"date\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"tweet.fields\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"Comma-separated list of additional fields to return in the Tweet object. By default, the endpoint only returns id and text. Make sure to not include a space between commas and fields.\",\n                        \"example\": \"entities,lang\",\n                        \"schema\": {\n\t\t\t\t\t\t\t\"type\": \"enum\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"until_id\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"Returns results with a Tweet ID less than (that is, older than) the specified ID. The ID specified is exclusive and responses will not include it.\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"user.fields\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"Comma-separated list of additional fields to return in the user object. By default, the endpoint does not return any user field. To use this parameter, you must include the author_id expansion parameter in the request. Make sure to not include a space between commas and fields.\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"enum\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"responses\": {\n\t\t\t\t\t\"200\": {\n\t\t\t\t\t\t\"description\": \"Returns Tweets mentioning a single user specified by the requested user ID.\",\n\t\t\t\t\t\t\"content\": {\n\t\t\t\t\t\t\t\"application/json\": {\n\t\t\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"#components/schema/tweet/properties\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"/tweets/search/stream/rules\": {\n\t\t\t\"get\": {\n\t\t\t\t\"summary\": \"Return a list of rules currently active on the streaming endpoint, either as a list or individually.\",\n\t\t\t\t\"externalDocs\": {\n\t\t\t\t\t\"url\": \"https://developer.twitter.com/en/docs/twitter-api/tweets/filtered-stream/api-reference/get-tweets-search-stream-rules\"\n\t\t\t\t},\n\t\t\t\t\"parameters\": [{\n\t\t\t\t\t\"name\": \"ids\",\n\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\"description\": \"Comma-separated list of rule IDs. If omitted, all rules are returned.\",\n\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t}\n\t\t\t\t}],\n\t\t\t\t\"responses\": {\n\t\t\t\t\t\"200\": {\n\t\t\t\t\t\t\"id\": {\n\t\t\t\t\t\t\t\"description\": \"A cursored collection of user IDs for every user following the specified user.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"value\": {\n\t\t\t\t\t\t\t\"description\": \"The rule text as submitted when creating the rule.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"tag\": {\n\t\t\t\t\t\t\t\"description\": \"The tag label as defined when creating the rule.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"meta.sent\": {\n\t\t\t\t\t\t\t\"description\": \"The time when the request body was returned.\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"/tweets/search/stream\": {\n\t\t\t\"get\": {\n\t\t\t\t\"summary\": \"Streams Tweets in real-time based on a specific set of filter rules.\",\n\t\t\t\t\"externalDocs\": {\n\t\t\t\t\t\"url\": \"https://developer.twitter.com/en/docs/twitter-api/tweets/filtered-stream/api-reference/get-tweets-search-stream\"\n\t\t\t\t},\n\t\t\t\t\"parameters\": [{\n\t\t\t\t\t\t\"name\": \"expansions\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"Comma-separated list of expansions. Expansions enable requests to expand an ID into a full object in the includes response object. Make sure to not include a space between commas and fields.\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"enum\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"media.fields\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"Comma-separated list of additional fields to return in the media object. The response will contain the selected fields only if a Tweet contains media attachments. Make sure to not include a space between commas and fields.\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"enum\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"place.fields\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"Comma-separated list of additional fields to return in the place object. The response will contain the selected fields only if location data is present in any of the response objects. Make sure to not include a space between commas and fields.\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"enum\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"poll.fields\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"Comma-separated list of additional fields to return in the poll object. The response will contain the selected fields only if a Tweet contains a poll. Make sure to not include a space between commas and fields.\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"enum\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"tweet.fields\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"Comma-separated list of additional fields to return in the Tweet object. By default, the endpoint only returns id and text. Make sure to not include a space between commas and fields.\",\n                        \"example\": \"entities,lang\",\n                        \"schema\": {\n\t\t\t\t\t\t\t\"type\": \"enum\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"user.fields\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"Comma-separated list of additional fields to return in the user object. By default, the endpoint does not return any user field. To use this parameter, you must include the author_id expansion parameter in the request. Make sure to not include a space between commas and fields.\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"enum\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"responses\": {\n\t\t\t\t\t\"200\": {\n\t\t\t\t\t\t\"description\": \"Returns Tweets mentioning a single user specified by the requested user ID.\",\n\t\t\t\t\t\t\"content\": {\n\t\t\t\t\t\t\t\"application/json\": {\n\t\t\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"#components/schema/tweet/properties\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"/tweets/sample/stream\": {\n\t\t\t\"get\": {\n\t\t\t\t\"summary\": \"Streams about 1% of all Tweets in real-time.\",\n\t\t\t\t\"externalDocs\": {\n\t\t\t\t\t\"url\": \"https://developer.twitter.com/en/docs/twitter-api/tweets/sampled-stream/api-reference/get-tweets-sample-stream\"\n\t\t\t\t},\n\t\t\t\t\"parameters\": [{\n\t\t\t\t\t\t\"name\": \"expansions\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"Comma-separated list of expansions. Expansions enable requests to expand an ID into a full object in the includes response object. Make sure to not include a space between commas and fields.\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"enum\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"media.fields\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"Comma-separated list of additional fields to return in the media object. The response will contain the selected fields only if a Tweet contains media attachments. Make sure to not include a space between commas and fields.\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"enum\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"place.fields\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"Comma-separated list of additional fields to return in the place object. The response will contain the selected fields only if location data is present in any of the response objects. Make sure to not include a space between commas and fields.\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"enum\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"poll.fields\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"Comma-separated list of additional fields to return in the poll object. The response will contain the selected fields only if a Tweet contains a poll. Make sure to not include a space between commas and fields.\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"enum\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"tweet.fields\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"Comma-separated list of additional fields to return in the Tweet object. By default, the endpoint only returns id and text. Make sure to not include a space between commas and fields.\",\n                        \"example\": \"entities,lang\",\n                        \"schema\": {\n\t\t\t\t\t\t\t\"type\": \"enum\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"user.fields\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"Comma-separated list of additional fields to return in the user object. By default, the endpoint does not return any user field. To use this parameter, you must include the author_id expansion parameter in the request. Make sure to not include a space between commas and fields.\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"enum\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"responses\": {\n\t\t\t\t\t\"200\": {\n\t\t\t\t\t\t\"description\": \"Returns about 1% of all Tweets in real-time.\",\n\t\t\t\t\t\t\"content\": {\n\t\t\t\t\t\t\t\"application/json\": {\n\t\t\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"#components/schema/tweet/properties\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t\"components\": {\n\t\t\"schema\": {\n\t\t\t\"tweet\": {\n\t\t\t\t\"properties\": {\n\t\t\t\t\t\"created_at\": {\n\t\t\t\t\t\t\"description\": \"UTC time when this Tweet was created.\"\n\t\t\t\t\t},\n\t\t\t\t\t\"id\": {\n\t\t\t\t\t\t\"description\": \"Unique identifier of this Tweet. This is returned as a string in order to avoid complications with languages and tools that cannot handle large integers.\"\n\t\t\t\t\t},\n\t\t\t\t\t\"author_id\": {\n\t\t\t\t\t\t\"description\": \"The string representation of the unique identifier for this Tweet. Implementations should use this rather than the large integer in id.\"\n\t\t\t\t\t},\n\t\t\t\t\t\"text\": {\n\t\t\t\t\t\t\"description\": \"The content of the Tweet. To return this field, add tweet.fields=text in the request's query parameter.\"\n\t\t\t\t\t},\n\t\t\t\t\t\"conversation_id\": {\n\t\t\t\t\t\t\"description\": \"The Tweet ID of the original Tweet of the conversation (which includes direct replies, replies of replies). To return this field, add tweet.fields=conversation_id in the request's query parameter.\"\n\t\t\t\t\t},\n\t\t\t\t\t\"in_reply_to_user_id\": {\n\t\t\t\t\t\t\"description\": \"If this Tweet is a Reply, indicates the user ID of the parent Tweet's author. This is returned as a string in order to avoid complications with languages and tools that cannot handle large integers. You can obtain the expanded object in includes.users by adding expansions=in_reply_to_user_id in the request's query parameter.\"\n\t\t\t\t\t},\n\t\t\t\t\t\"referenced_tweets\": {\n\t\t\t\t\t\t\"description\": \"A list of Tweets this Tweet refers to. For example, if the parent Tweet is a Retweet, a Retweet with comment (also known as Quoted Tweet) or a Reply, it will include the related Tweet referenced to by its parent. To return this field, add tweet.fields=referenced_tweets in the request's query parameter.\"\n\t\t\t\t\t},\n\t\t\t\t\t\"referenced_tweets.type\": {\n\t\t\t\t\t\t\"description\": \"Indicates the type of relationship between this Tweet and the Tweet returned in the response: retweeted (this Tweet is a Retweet), quoted (a Retweet with comment, also known as Quoted Tweet), or replied_to (this Tweet is a reply).\"\n\t\t\t\t\t},\n\t\t\t\t\t\"referenced_tweets.id\": {\n\t\t\t\t\t\t\"description\": \"The unique identifier of the referenced Tweet. You can obtain the expanded object in includes.tweets by adding expansions=referenced_tweets.id in the request's query parameter.\"\n\t\t\t\t\t},\n\t\t\t\t\t\"lang\": {\n\t\t\t\t\t\t\"description\": \"Language of the Tweet, if detected by Twitter. Returned as a BCP47 language tag. To return this field, add tweet.fields=lang in the request's query parameter.\"\n\t\t\t\t\t},\n\t\t\t\t\t\"possibly_sensitive\": {\n\t\t\t\t\t\t\"description\": \"Indicates if this Tweet contains URLs marked as sensitive, for example content suitable for mature audiences. To return this field, add tweet.fields=possibly_sensitive in the request's query parameter.\"\n\t\t\t\t\t},\n\t\t\t\t\t\"source\": {\n\t\t\t\t\t\t\"description\": \"The name of the app the user Tweeted from. To return this field, add tweet.fields=source in the request's query parameter.\"\n\t\t\t\t\t},\n\t\t\t\t\t\"attachments\": {\n\t\t\t\t\t\t\"description\": \"Specifies the type of attachments (if any) present in this Tweet. To return this field, add tweet.fields=attachments in the request's query parameter.\",\n\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"$ref\": \"#components/schema/attachments\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"coordinates\": {\n\t\t\t\t\t\t\"description\": \"Nullable. Represents the geographic location of this Tweet as reported by the user or client application. The inner coordinates array is formatted as geoJSON (longitude first, then latitude).\",\n\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"$ref\": \"#components/schema/coordinates/properties\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"place\": {\n\t\t\t\t\t\t\"description\": \"Nullable When present, indicates that the tweet is associated (but not necessarily originating from) a Place.\",\n\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"$ref\": \" #components/schema/place/properties\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"entities\": {\n\t\t\t\t\t\t\"description\": \"Contains details about text that has a special meaning in a Tweet. To return this field, add tweet.fields=entities in the request's query parameter.\",\n\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"$ref\": \"#components/schema/entities/properties\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"withheld\": {\n\t\t\t\t\t\t\"description\": \"Contains withholding details for withheld content. To return this field, add tweet.fields=withheld in the request's query parameter.\",\n\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"$ref\": \"#components/schema/withheld/properties\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"public_metrics\": {\n\t\t\t\t\t\t\"description\": \"Engagement metrics for the Tweet at the time of the request. To return this field, add tweet.fields=public_metrics in the request's query parameter.\",\n\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"$ref\": \"#components/schema/public_metrics/properties\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"non_public_metrics\": {\n\t\t\t\t\t\t\"description\": \"Non-public engagement metrics for the Tweet at the time of the request. This is a private metric, and requires the use of OAuth 1.0a User Context authentication. To return this field, add tweet.fields=non_public_metrics in the request's query parameter.\",\n\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"$ref\": \"#components/schema/non_public_metrics/properties\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"organic_metrics\": {\n\t\t\t\t\t\t\"description\": \"Organic engagement metrics for the Tweet at the time of the request. Requires user context authentication.\",\n\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"$ref\": \"#components/schema/organic_metrics/properties\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"promoted_metrics\": {\n\t\t\t\t\t\t\"description\": \"Engagement metrics for the Tweet at the time of the request in a promoted context. Requires user context authentication.\",\n\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"$ref\": \"#components/schema/promoted_metrics/properties\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"includes\": {\n\t\t\t\t\t\t\"description\": \"If you include an expansion parameter, the referenced objects will be returned if available.\",\n\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"$ref\": \"#components/schema/includes/properties\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"context_annotations\": {\n\t\t\t\t\t\t\"description\": \"Contains context annotations for the Tweet. To return this field, add tweet.fields=context_annotations in the request's query parameter.\",\n\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"$ref\": \"#components/schema/context_annotations/properties\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"geo\": {\n\t\t\t\t\t\t\"description\": \"Contains details about the location tagged by the user in this Tweet, if they specified one. To return this field, add tweet.fields=geo in the request's query parameter.\",\n\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"$ref\": \"#components/schema/geo/properties\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"attachments\": {\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"attachments.media_key\": {\n\t\t\t\t\t\t\t\"description\": \"List of unique identifiers of media attached to this Tweet. These identifiers use the same media key format as those returned by the Media Library. You can obtain the expanded object in includes.media by adding expansions=attachments.media_keys in the request's query parameter.\",\n\t\t\t\t\t\t\t\"type\": \"array\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"attachments.poll_ids\": {\n\t\t\t\t\t\t\t\"description\": \"List of unique identifiers of polls present in the Tweets returned. These are returned as a string in order to avoid complications with languages and tools that cannot handle large integers. You can obtain the expanded object in includes.polls by adding expansions=attachments.polls_ids in the request's query parameter.\",\n\t\t\t\t\t\t\t\"type\": \"array\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"entities\": {\n\t\t\t\t\t\"description\": \"Contains details about text that has a special meaning in a Tweet. To return this field, add tweet.fields=entities in the request's query parameter.\",\n\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"entities.annotations\": {\n\t\t\t\t\t\t\t\"description\": \"Contains details about annotations relative to the text within a Tweet.\",\n\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\t\"entities.annotations.start\": {\n\t\t\t\t\t\t\t\t\t\"description\": \"The start position (zero-based) of the text used to annotate the Tweet.\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"entities.annotations.end\": {\n\t\t\t\t\t\t\t\t\t\"description\": \"The end position (zero based) of the text used to annotate the Tweet.\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"entities.annotations.propability\": {\n\t\t\t\t\t\t\t\t\t\"description\": \"The confidence score for the annotation as it correlates to the Tweet text.\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"entities.annotations.type\": {\n\t\t\t\t\t\t\t\t\t\"description\": \"The description of the type of entity identified when the Tweet text was interpreted.\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"entities.annotations.normalized_text\": {\n\t\t\t\t\t\t\t\t\t\"description\": \"The text used to determine the annotation type.\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t\"entities.urls\": {\n\t\t\t\t\t\t\t\t\"description\": \"Contains details about text recognized as a URL.\",\n\t\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\t\t\"entities.urls.start\": {\n\t\t\t\t\t\t\t\t\t\t\"description\": \"The start position (zero-based) of the recognized URL within the Tweet.\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"entities.urls.end\": {\n\t\t\t\t\t\t\t\t\t\t\"description\": \"The end position (zero-based) of the recognized URL within the Tweet.\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"entities.urls.url\": {\n\t\t\t\t\t\t\t\t\t\t\"description\": \"The URL in the format tweeted by the user.\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"entities.urls.expanded_url\": {\n\t\t\t\t\t\t\t\t\t\t\"description\": \"The fully resolved URL.\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"entities.urls.display_url\": {\n\t\t\t\t\t\t\t\t\t\t\"description\": \"The URL as displayed in the Twitter client.\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"entities.urls.unwound_url\": {\n\t\t\t\t\t\t\t\t\t\t\"description\": \"The full destination URL.\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"entities.hashtags\": {\n\t\t\t\t\t\t\t\t\"description\": \"Contains details about text recognized as a Hashtag.\",\n\t\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\t\t\"entities.hashtags.start\": {\n\t\t\t\t\t\t\t\t\t\t\"description\": \"The start position (zero-based) of the recognized Hashtag within the Tweet.\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"entities.hashtags.end\": {\n\t\t\t\t\t\t\t\t\t\t\"description\": \"The end position (zero-based) of the recognized Hashtag within the Tweet.\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"entities.hashtags.tags\": {\n\t\t\t\t\t\t\t\t\t\t\"description\": \"The text of the Hashtag.\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"entities.mentions\": {\n\t\t\t\t\t\t\t\t\"description\": \"Contains details about text recognized as a user mention.\",\n\t\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\t\t\"entities.mentions.start\": {\n\t\t\t\t\t\t\t\t\t\t\"description\": \"The start position (zero-based) of the recognized user mention within the Tweet.\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"entities.mentions.end\": {\n\t\t\t\t\t\t\t\t\t\t\"description\": \"The end position (zero-based) of the recognized user mention within the Tweet.\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"entities.mentions.username\": {\n\t\t\t\t\t\t\t\t\t\t\"description\": \"The part of text recognized as a user mention. You can obtain the expanded object in includes.users by adding expansions=entities.mentions.username in the request's query parameter.\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"entities.cashhtags\": {\n\t\t\t\t\t\t\t\t\"description\": \"Contains details about text recognized as a Cashtag.\",\n\t\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\t\t\"entities.cashhtags.start\": {\n\t\t\t\t\t\t\t\t\t\t\"description\": \"The start position (zero-based) of the recognized Cashtag within the Tweet.\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"entities.cashhtags.end\": {\n\t\t\t\t\t\t\t\t\t\t\"description\": \"The end position (zero-based) of the recognized Cashtag within the Tweet.\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"entities.cashhtags.tag\": {\n\t\t\t\t\t\t\t\t\t\t\"description\": \"The text of the Cashtag.\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"withheld\": {\n\t\t\t\t\t\t\"description\": \"Contains withholding details for withheld content. To return this field, add tweet.fields=withheld in the request's query parameter.\",\n\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"withheld.copyright\": {\n\t\t\t\t\t\t\t\t\"description\": \"Indicates if the content is being withheld for on the basis of copyright infringement.\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"withheld.country_code\": {\n\t\t\t\t\t\t\t\t\"description\": \"Provides a list of countries where this content is not available.\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"withheld.scope\": {\n\t\t\t\t\t\t\t\t\"description\": \"Indicates whether the content being withheld is a Tweet or a user.\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"public_metrics\": {\n\t\t\t\t\t\t\"description\": \"Engagement metrics for the Tweet at the time of the request. To return this field, add tweet.fields=public_metrics in the request's query parameter.\",\n\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"public_metrics.retweet_count\": {\n\t\t\t\t\t\t\t\t\"description\": \"Number of times this Tweet has been Retweeted.\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"public_metrics.reply_count\": {\n\t\t\t\t\t\t\t\t\"description\": \"Number of Replies of this Tweet.\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"public_metrics.like_count\": {\n\t\t\t\t\t\t\t\t\"description\": \"Number of Likes of this Tweet.\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"public_metrics.quote_count\": {\n\t\t\t\t\t\t\t\t\"description\": \"Number of times this Tweet has been Retweeted with a comment (also known as Quote).\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"non_public_metrics\": {\n\t\t\t\t\t\t\"description\": \"Non-public engagement metrics for the Tweet at the time of the request. This is a private metric, and requires the use of OAuth 1.0a User Context authentication. To return this field, add tweet.fields=non_public_metrics in the request's query parameter.\",\n\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"non_public_metrics.impression_count\": {\n\t\t\t\t\t\t\t\t\"description\": \"Number of times the Tweet has been viewed. This is a private metric, and requires the use of OAuth 1.0a User Context authentication.\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"non_public_metrics.url_link_clicks\": {\n\t\t\t\t\t\t\t\t\"description\": \"Number of times a user clicks on a URL link or URL preview card in a Tweet. This is a private metric, and requires the use of OAuth 1.0a User Context authentication.\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"non_public_metrics.user_profile_clicks\": {\n\t\t\t\t\t\t\t\t\"description\": \"Number of times a user clicks the following portions of a Tweet - display name, user name, profile picture. This is a private metric, and requires the use of OAuth 1.0a User Context authentication.\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"organic_metrics\": {\n\t\t\t\t\t\t\"description\": \"Organic engagement metrics for the Tweet at the time of the request. Requires user context authentication.\",\n\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"organic_metrics.impression_count\": {\n\t\t\t\t\t\t\t\t\"description\": \"Number of times the Tweet has been viewed organically. This is a private metric, and requires the use of OAuth 1.0a User Context authentication.\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"organic_metrics.url_link_clicks\": {\n\t\t\t\t\t\t\t\t\"description\": \"Number of times a user clicks on a URL link or URL preview card in a Tweet organically. This is a private metric, and requires the use of OAuth 1.0a User Context authentication.\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"organic_metrics.user_profile_clicks\": {\n\t\t\t\t\t\t\t\t\"description\": \"Number of times a user clicks the following portions of a Tweet organically - display name, user name, profile picture. This is a private metric, and requires the use of OAuth 1.0a User Context authentication.\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"organic_metrics.retweet_count\": {\n\t\t\t\t\t\t\t\t\"description\": \"Number of times the Tweet has been Retweeted organically.\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"organic_metrics.reply_count\": {\n\t\t\t\t\t\t\t\t\"description\": \"Number of replies the Tweet has received organically.\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"organic_metrics.like_count\": {\n\t\t\t\t\t\t\t\t\"description\": \"Number of likes the Tweet has received organically.\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"promoted_metrics\": {\n\t\t\t\t\t\t\"description\": \"Engagement metrics for the Tweet at the time of the request in a promoted context. Requires user context authentication.\",\n\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"promoted_metrics.impression_count\": {\n\t\t\t\t\t\t\t\t\"description\": \"Number of times the Tweet has been viewed when that Tweet is being promoted. This is a private metric, and requires the use of OAuth 1.0a User Context authentication.\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"promoted_metrics.url_link_clicks\": {\n\t\t\t\t\t\t\t\t\"description\": \"Number of times a user clicks on a URL link or URL preview card in a Tweet when it is being promoted. This is a private metric, and requires the use of OAuth 1.0a User Context authentication.\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"promoted_metrics.user_profile_clicks\": {\n\t\t\t\t\t\t\t\t\"description\": \"Number of times a user clicks the following portions of a Tweet when it is being promoted - display name, user name, profile picture. This is a private metric, and requires the use of OAuth 1.0a User Context authentication.\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"promoted_metrics.retweet_count\": {\n\t\t\t\t\t\t\t\t\"description\": \"Number of times this Tweet has been Retweeted when that Tweet is being promoted.\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"promoted_metrics.reply_count\": {\n\t\t\t\t\t\t\t\t\"description\": \"Number of Replies to this Tweet when that Tweet is being promoted.\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"promoted_metrics.like_count\": {\n\t\t\t\t\t\t\t\t\"description\": \"Number of Likes of this Tweet when that Tweet is being promoted.\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"includes\": {\n\t\t\t\t\t\t\"description\": \"If you include an expansion parameter, the referenced objects will be returned if available.\",\n\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"includes.tweets\": {\n\t\t\t\t\t\t\t\t\"description\": \"When including the expansions=referenced_tweets.id parameter, this includes a list of referenced Retweets, Quoted Tweets, or replies in the form of Tweet objects with their default fields and any additional fields requested using the tweet.fields parameter, assuming there is a referenced Tweet present in the returned Tweet(s).\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"includes.user\": {\n\t\t\t\t\t\t\t\t\"description\": \"When including the expansions=author_id parameter, this includes a list of referenced Tweet authors in the form of user objects with their default fields and any additional fields requested using the user.fields parameter.\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"includes.places\": {\n\t\t\t\t\t\t\t\t\"description\": \"When including the expansions=geo.place_id parameter, this includes a list of referenced places in Tweets in the form of place objects with their default fields and any additional fields requested using the place.fields parameter, assuming there is a place present in the returned Tweet(s).\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"includes.media\": {\n\t\t\t\t\t\t\t\t\"description\": \"When including the expansions=attachments.media_keys parameter, this includes a list of images, videos, and GIFs included in Tweets in the form of media objects with their default fields and any additional fields requested using the media.fields parameter, assuming there is a media attachment present in the returned Tweet(s).\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"includes.polls\": {\n\t\t\t\t\t\t\t\t\"description\": \"When including the expansions=attachments.poll_ids parameter, this includes a list of polls that are attached to Tweets in the form of poll objects with their default fields and any additional fields requested using the poll.fields parameter, assuming there is a poll present in the returned Tweet(s).\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"context_annotations\": {\n\t\t\t\t\t\t\"description\": \"Contains context annotations for the Tweet. To return this field, add tweet.fields=context_annotations in the request's query parameter.\",\n\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"context_annotations.domain\": {\n\t\t\t\t\t\t\t\t\"description\": \"Contains elements which identify detailed information regarding the domain classification based on Tweet text.\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\t\"context_annotations.domain.id\": {\n\t\t\t\t\t\t\t\t\t\"description\": \"Contains the numeric value of the domain.\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"context_annotations.domain.name\": {\n\t\t\t\t\t\t\t\t\t\"description\": \"Domain name based on the Tweet text.\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"context_annotations.domain.description\": {\n\t\t\t\t\t\t\t\t\t\"description\": \"Long form description of domain classification.\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"context_annotations.entity\": {\n\t\t\t\t\t\t\t\t\"description\": \"Contains elements which identify detailed information regarding the domain classification bases on Tweet text.\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\t\"context_annotations.entity.id\": {\n\t\t\t\t\t\t\t\t\t\"description\": \"Unique value which correlates to an explicitly mentioned Person, Place, Product or Organization\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"context_annotations.entity.name\": {\n\t\t\t\t\t\t\t\t\t\"description\": \"Name or reference of entity referenced in the Tweet.\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"context_annotations.entity.description\": {\n\t\t\t\t\t\t\t\t\t\"description\": \"Additional information regarding referenced entity.\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"geo\": {\n\t\t\t\t\t\t\"description\": \"Contains details about the location tagged by the user in this Tweet, if they specified one. To return this field, add tweet.fields=geo in the request's query parameter.\",\n\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"geo.coordinates\": {\n\t\t\t\t\t\t\t\t\"description\": \"Contains details about the coordinates of the location tagged by the user in this Tweet, if they specified one. To return this field, add tweet.fields=geo.coordinates in the request's query parameter.\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"geo.coordinates.type\": {\n\t\t\t\t\t\t\t\"description\": \"Describes the type of coordinate. The only value supported at present is Point.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"geo.coordinates.cordinates\": {\n\t\t\t\t\t\t\t\"description\": \"A pair of decimal values representing the precise location of the user (latitude, longitude). This value be null unless the user explicitly shared their precise location.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"geo.place_id\": {\n\t\t\t\t\t\t\t\"description\": \"The unique identifier of the place, if this is a point of interest tagged in the Tweet. You can obtain the expanded object in includes.places by adding expansions=geo.place_id in the request's query parameter.\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}",
			"canonicalURL": "/github.com/strohne/Facepager@960582a37b0eed870d40faf89d1c1545a0e9f097/-/blob/apis/Twitter.v2.oa3.json",
			"externalURLs": [
				{
					"url": "https://github.com/strohne/Facepager/blob/960582a37b0eed870d40faf89d1c1545a0e9f097/apis/Twitter.v2.oa3.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 114: cannot unmarshal !!str `#compon...` into ogen.Schema; yaml: line 204: cannot unmarshal !!str `#compon...` into ogen.Schema; yaml: line 332: cannot unmarshal !!str `#compon...` into ogen.Schema; yaml: line 478: cannot unmarshal !!str `#compon...` into ogen.Schema; yaml: line 613: cannot unmarshal !!str `#compon...` into ogen.Schema; yaml: line 721: cannot unmarshal !!str `#compon...` into ogen.Schema; yaml: line 797: cannot unmarshal !!str `#compon...` into ogen.Schema"
}