{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/QutEcoacoustics/baw-server"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "swagger/v2/swagger.yaml",
			"byteSize": 228405,
			"content": "---\nopenapi: 3.0.1\ninfo:\n  title: Acoustic Workbench API\n  version: v2\nproduces:\n- application/json\nconsumes:\n- application/json\npaths:\n  \"/cms/{child_path}\":\n    get:\n      summary: Retrieves the a child blob (rendered HTML)\n      tags:\n      - CMS\n      parameters:\n      - name: child_path\n        in: path\n        required: true\n        schema:\n          type: string\n      security: \n      responses:\n        '200':\n          description: blob retrieved\n          content:\n            application/json:\n              example:\n                id: 2\n                site_id: 1\n                layout_id: 1\n                parent_id: 1\n                target_page_id: \n                label: Credits\n                slug: credits\n                full_path: \"/credits\"\n                position: 0\n                children_count: 0\n                is_published: true\n                created_at: '2020-01-02T03:04:05.677Z'\n                updated_at: '2020-01-02T03:04:05.677Z'\n                content: |-\n                  \u003clink href='/cms/cms-css/1/default/1577934245.css' media='screen' rel='stylesheet' type='text/css' /\u003e\n\n                  \u003ch1\u003eCredits\u003c/h1\u003e\n                  \u003cp\u003eThe development of this web application was an initiative of the\n                  \u003ca href=\"https://www.qut.edu.au/\"\u003eQueensland University of Technologyâ€™s\u003c/a\u003e\n                  \u003ca href=\"http://research.ecosounds.org/\"\u003eEcoacoustics Research Group\u003c/a\u003e.\n                  This website makes use of a range of other technologies and libraries.\u003c/p\u003e\n\n                  \u003cp\u003eMore information can be found on the\n                  \u003ca href=\"https://github.com/QutEcoacoustics\"\u003eQutEcoacoustics\u003c/a\u003e Github project page.\u003c/p\u003e\n\n                  \u003ch2 id=\"programs-and-libraries\"\u003ePrograms and libraries\u003c/h2\u003e\n\n                  \u003cul\u003e\n                    \u003cli\u003e\u003ca href=\"http://rubyonrails.org/\"\u003eRuby on Rails\u003c/a\u003e (with a number of additional gems)\u003c/li\u003e\n                    \u003cli\u003e\u003ca href=\"https://github.com/resque/resque\"\u003eResque\u003c/a\u003e\u003c/li\u003e\n                    \u003cli\u003e\u003ca href=\"http://redis.io\"\u003eRedis\u003c/a\u003e\u003c/li\u003e\n                    \u003cli\u003eCommand line audio tools:\u003c/li\u003e\n                    \u003cli\u003e\u003ca href=\"http://www.ffmpeg.org/\"\u003effmpeg\u003c/a\u003e (for audio conversion and gathering audio file information)\u003c/li\u003e\n                    \u003cli\u003e\u003ca href=\"http://sox.sourceforge.net/\"\u003eSoX\u003c/a\u003e (to create spectrograms and resample audio)\u003c/li\u003e\n                    \u003cli\u003e\u003ca href=\"http://www.wavpack.com/\"\u003eWavPack\u003c/a\u003e (to expand compressed .wv files)\u003c/li\u003e\n                    \u003cli\u003e\u003ca href=\"http://mp3splt.sourceforge.net/mp3splt_page/home.php\"\u003emp3split\u003c/a\u003e (for quickly segmenting large .mp3 files)\u003c/li\u003e\n                    \u003cli\u003e\u003ca href=\"https://angularjs.org/\"\u003eAngularJS\u003c/a\u003e\u003c/li\u003e\n                    \u003cli\u003e\u003ca href=\"https://d3js.org/\"\u003eD3.js\u003c/a\u003e\u003c/li\u003e\n                  \u003c/ul\u003e\n\n                  \u003ch2 id=\"platforms-and-services\"\u003ePlatforms and services\u003c/h2\u003e\n\n                  \u003cul\u003e\n                    \u003cli\u003e\u003ca href=\"https://github.com\"\u003eGithub\u003c/a\u003e\u003c/li\u003e\n                    \u003cli\u003e\u003ca href=\"https://www.qriscloud.org.au/\"\u003eQRISCloud\u003c/a\u003e\u003c/li\u003e\n                    \u003cli\u003e\u003ca href=\"https://https://nectar.org.au/\"\u003enectar\u003c/a\u003e\u003c/li\u003e\n                  \u003c/ul\u003e\n\n\n                  \u003cscript src='/cms/cms-js/1/default/1577934245.js' type='text/javascript'\u003e\u003c/script\u003e\n                children: []\n              schema:\n                \"$ref\": \"#/components/schemas/cms_blob\"\n  \"/cms\":\n    get:\n      summary: Retrieves the index blob (rendered HTML)\n      tags:\n      - cms\n      security: \n      parameters: []\n      responses:\n        '200':\n          description: blob retrieved\n          content:\n            application/json:\n              example:\n                id: 11\n                site_id: 3\n                layout_id: 3\n                parent_id: \n                target_page_id: \n                label: Home\n                slug: index\n                full_path: \"/\"\n                position: 0\n                children_count: 4\n                is_published: true\n                created_at: '2020-01-02T03:04:05.677Z'\n                updated_at: '2020-01-02T03:04:05.677Z'\n                content: |-\n                  \u003clink href='/cms/cms-css/3/default/1577934245.css' media='screen' rel='stylesheet' type='text/css' /\u003e\n\n                  \u003ch1\u003e\u003c/h1\u003e\n                  \u003cp\u003eWelcome! This is an Acoustic Workbench website. It is a repository of\n                  environmental audio recordings.\u003c/p\u003e\n\n\n                  \u003cscript src='/cms/cms-js/3/default/1577934245.js' type='text/javascript'\u003e\u003c/script\u003e\n                children:\n                - label: Credits\n                  full_path: \"/credits\"\n                - label: Data Upload\n                  full_path: \"/data_upload\"\n                - label: Ethics\n                  full_path: \"/ethics\"\n                - label: Privacy\n                  full_path: \"/privacy\"\n              schema:\n                \"$ref\": \"#/components/schemas/cms_blob\"\n  \"/projects/{id}\":\n    patch:\n      summary: update project\n      security:\n      - auth_token_header: []\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n      tags:\n      - projects\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                data:\n                  id: 1\n                  name: gen_project2\n                  description: project description 2\n                  creator_id: 3\n                  created_at: '2020-01-02T03:04:05.677Z'\n                  updater_id: 1\n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  deleter_id: \n                  deleted_at: \n                  notes: note number 2\n                  allow_original_download: \n                  site_ids:\n                  - 1\n                  region_ids:\n                  - 1\n                  owner_ids:\n                  - 3\n                  image_urls:\n                  - size: extralarge\n                    url: \"/images/project/project_span4.png\"\n                    width: 300\n                    height: 300\n                  - size: large\n                    url: \"/images/project/project_span3.png\"\n                    width: 220\n                    height: 220\n                  - size: medium\n                    url: \"/images/project/project_span2.png\"\n                    width: 140\n                    height: 140\n                  - size: small\n                    url: \"/images/project/project_span1.png\"\n                    width: 60\n                    height: 60\n                  - size: tiny\n                    url: \"/images/project/project_spanhalf.png\"\n                    width: 30\n                    height: 30\n                  description_html: \"\u003cp\u003eproject description 2\u003c/p\u003e\\n\"\n                  description_html_tagline: project description 2\n                  access_level: owner\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      \"$ref\": \"#/components/schemas/project\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/project\"\n    get:\n      summary: show project\n      security:\n      - auth_token_header: []\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n      tags:\n      - projects\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                data:\n                  id: 2\n                  name: gen_project3\n                  description: project description 3\n                  creator_id: 8\n                  created_at: '2020-01-02T03:04:05.677Z'\n                  updater_id: \n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  deleter_id: \n                  deleted_at: \n                  notes: note number 3\n                  allow_original_download: \n                  site_ids:\n                  - 2\n                  region_ids:\n                  - 2\n                  owner_ids:\n                  - 8\n                  image_urls:\n                  - size: extralarge\n                    url: \"/images/project/project_span4.png\"\n                    width: 300\n                    height: 300\n                  - size: large\n                    url: \"/images/project/project_span3.png\"\n                    width: 220\n                    height: 220\n                  - size: medium\n                    url: \"/images/project/project_span2.png\"\n                    width: 140\n                    height: 140\n                  - size: small\n                    url: \"/images/project/project_span1.png\"\n                    width: 60\n                    height: 60\n                  - size: tiny\n                    url: \"/images/project/project_spanhalf.png\"\n                    width: 30\n                    height: 30\n                  description_html: \"\u003cp\u003eproject description 3\u003c/p\u003e\\n\"\n                  description_html_tagline: project description 3\n                  access_level: owner\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      \"$ref\": \"#/components/schemas/project\"\n    delete:\n      summary: delete project\n      security:\n      - auth_token_header: []\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n      tags:\n      - projects\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '204':\n          description: successful\n    put:\n      summary: update project\n      security:\n      - auth_token_header: []\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n      tags:\n      - projects\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                data:\n                  id: 4\n                  name: gen_project6\n                  description: project description 6\n                  creator_id: 16\n                  created_at: '2020-01-02T03:04:05.677Z'\n                  updater_id: 1\n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  deleter_id: \n                  deleted_at: \n                  notes: note number 6\n                  allow_original_download: \n                  site_ids:\n                  - 4\n                  region_ids:\n                  - 4\n                  owner_ids:\n                  - 16\n                  image_urls:\n                  - size: extralarge\n                    url: \"/images/project/project_span4.png\"\n                    width: 300\n                    height: 300\n                  - size: large\n                    url: \"/images/project/project_span3.png\"\n                    width: 220\n                    height: 220\n                  - size: medium\n                    url: \"/images/project/project_span2.png\"\n                    width: 140\n                    height: 140\n                  - size: small\n                    url: \"/images/project/project_span1.png\"\n                    width: 60\n                    height: 60\n                  - size: tiny\n                    url: \"/images/project/project_spanhalf.png\"\n                    width: 30\n                    height: 30\n                  description_html: \"\u003cp\u003eproject description 6\u003c/p\u003e\\n\"\n                  description_html_tagline: project description 6\n                  access_level: owner\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      \"$ref\": \"#/components/schemas/project\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/project\"\n  \"/projects/filter\":\n    post:\n      summary: filter project\n      security:\n      - auth_token_header: []\n      parameters: []\n      tags:\n      - projects\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                  sorting:\n                    order_by: name\n                    direction: asc\n                  paging:\n                    page: 1\n                    items: 25\n                    total: 1\n                    max_page: 1\n                    current: http://localhost:3000/projects/filter?direction=asc\u0026items=25\u0026order_by=name\u0026page=1\n                    previous: \n                    next: \n                data:\n                - id: 5\n                  name: gen_project7\n                  description: project description 7\n                  creator_id: 21\n                  created_at: '2020-01-02T03:04:05.677Z'\n                  updater_id: \n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  deleter_id: \n                  deleted_at: \n                  notes: note number 7\n                  allow_original_download: \n                  site_ids:\n                  - 5\n                  region_ids:\n                  - 5\n                  owner_ids:\n                  - 21\n                  image_urls:\n                  - size: extralarge\n                    url: \"/images/project/project_span4.png\"\n                    width: 300\n                    height: 300\n                  - size: large\n                    url: \"/images/project/project_span3.png\"\n                    width: 220\n                    height: 220\n                  - size: medium\n                    url: \"/images/project/project_span2.png\"\n                    width: 140\n                    height: 140\n                  - size: small\n                    url: \"/images/project/project_span1.png\"\n                    width: 60\n                    height: 60\n                  - size: tiny\n                    url: \"/images/project/project_spanhalf.png\"\n                    width: 30\n                    height: 30\n                  description_html: \"\u003cp\u003eproject description 7\u003c/p\u003e\\n\"\n                  description_html_tagline: project description 7\n                  access_level: owner\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      type: array\n                      items:\n                        \"$ref\": \"#/components/schemas/project\"\n  \"/projects\":\n    get:\n      summary: list projects\n      security:\n      - auth_token_header: []\n      parameters: []\n      tags:\n      - projects\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                  sorting:\n                    order_by: name\n                    direction: asc\n                  paging:\n                    page: 1\n                    items: 25\n                    total: 1\n                    max_page: 1\n                    current: http://localhost:3000/projects?direction=asc\u0026items=25\u0026order_by=name\u0026page=1\n                    previous: \n                    next: \n                data:\n                - id: 6\n                  name: gen_project8\n                  description: project description 8\n                  creator_id: 25\n                  created_at: '2020-01-02T03:04:05.677Z'\n                  updater_id: \n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  deleter_id: \n                  deleted_at: \n                  notes: note number 8\n                  allow_original_download: \n                  site_ids:\n                  - 6\n                  region_ids:\n                  - 6\n                  owner_ids:\n                  - 25\n                  image_urls:\n                  - size: extralarge\n                    url: \"/images/project/project_span4.png\"\n                    width: 300\n                    height: 300\n                  - size: large\n                    url: \"/images/project/project_span3.png\"\n                    width: 220\n                    height: 220\n                  - size: medium\n                    url: \"/images/project/project_span2.png\"\n                    width: 140\n                    height: 140\n                  - size: small\n                    url: \"/images/project/project_span1.png\"\n                    width: 60\n                    height: 60\n                  - size: tiny\n                    url: \"/images/project/project_spanhalf.png\"\n                    width: 30\n                    height: 30\n                  description_html: \"\u003cp\u003eproject description 8\u003c/p\u003e\\n\"\n                  description_html_tagline: project description 8\n                  access_level: owner\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      type: array\n                      items:\n                        \"$ref\": \"#/components/schemas/project\"\n    post:\n      summary: create project\n      security:\n      - auth_token_header: []\n      parameters: []\n      tags:\n      - projects\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`.\u003cbr /\u003e\n        Users that can't: `Harvester`, `anyone`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '201':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 201\n                  message: Created\n                data:\n                  id: 8\n                  name: gen_project10\n                  description: project description 10\n                  creator_id: 1\n                  created_at: '2020-01-02T03:04:05.677Z'\n                  updater_id: \n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  deleter_id: \n                  deleted_at: \n                  notes: note number 10\n                  allow_original_download: \n                  site_ids: []\n                  region_ids: []\n                  owner_ids:\n                  - 1\n                  image_urls:\n                  - size: extralarge\n                    url: \"/images/project/project_span4.png\"\n                    width: 300\n                    height: 300\n                  - size: large\n                    url: \"/images/project/project_span3.png\"\n                    width: 220\n                    height: 220\n                  - size: medium\n                    url: \"/images/project/project_span2.png\"\n                    width: 140\n                    height: 140\n                  - size: small\n                    url: \"/images/project/project_span1.png\"\n                    width: 60\n                    height: 60\n                  - size: tiny\n                    url: \"/images/project/project_spanhalf.png\"\n                    width: 30\n                    height: 30\n                  description_html: \"\u003cp\u003eproject description 10\u003c/p\u003e\\n\"\n                  description_html_tagline: project description 10\n                  access_level: owner\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      \"$ref\": \"#/components/schemas/project\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/project\"\n  \"/projects/new\":\n    get:\n      summary: new project\n      security:\n      - auth_token_header: []\n      parameters: []\n      tags:\n      - projects\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                data:\n                  name: \n                  description: \n                  allow_original_download: \n                  notes: \n  \"/projects/{project_id}/permissions\":\n    get:\n      summary: list permissions\n      security:\n      - auth_token_header: []\n      parameters:\n      - name: project_id\n        in: path\n        description: project_id\n        required: true\n        schema:\n          type: integer\n      tags:\n      - permissions\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                  sorting:\n                    order_by: created_at\n                    direction: desc\n                  paging:\n                    page: 1\n                    items: 25\n                    total: 3\n                    max_page: 1\n                    current: http://localhost:3000/projects/10/permissions?direction=desc\u0026items=25\u0026order_by=created_at\u0026page=1\n                    previous: \n                    next: \n                data:\n                - id: 26\n                  project_id: 10\n                  user_id: 38\n                  level: owner\n                  allow_anonymous: false\n                  allow_logged_in: false\n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  updater_id: \n                  created_at: '2020-01-02T03:04:05.677Z'\n                  creator_id: 1\n                - id: 27\n                  project_id: 10\n                  user_id: 39\n                  level: writer\n                  allow_anonymous: false\n                  allow_logged_in: false\n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  updater_id: \n                  created_at: '2020-01-02T03:04:05.677Z'\n                  creator_id: 38\n                - id: 28\n                  project_id: 10\n                  user_id: 40\n                  level: reader\n                  allow_anonymous: false\n                  allow_logged_in: false\n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  updater_id: \n                  created_at: '2020-01-02T03:04:05.677Z'\n                  creator_id: 38\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      type: array\n                      items:\n                        \"$ref\": \"#/components/schemas/permission\"\n    post:\n      summary: create permission\n      security:\n      - auth_token_header: []\n      parameters:\n      - name: project_id\n        in: path\n        description: project_id\n        required: true\n        schema:\n          type: integer\n      tags:\n      - permissions\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '201':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 201\n                  message: Created\n                data:\n                  id: 33\n                  project_id: 11\n                  user_id: 46\n                  level: reader\n                  allow_anonymous: false\n                  allow_logged_in: false\n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  updater_id: \n                  created_at: '2020-01-02T03:04:05.677Z'\n                  creator_id: 1\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      \"$ref\": \"#/components/schemas/permission\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/permission\"\n  \"/projects/{project_id}/permissions/new\":\n    get:\n      summary: new permission\n      security:\n      - auth_token_header: []\n      parameters:\n      - name: project_id\n        in: path\n        description: project_id\n        required: true\n        schema:\n          type: integer\n      tags:\n      - permissions\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                data:\n                  project_id: \n                  user_id: \n                  level: \n                  allow_anonymous: false\n                  allow_logged_in: false\n  \"/projects/{project_id}/permissions/{id}\":\n    get:\n      summary: show permission\n      security:\n      - auth_token_header: []\n      parameters:\n      - name: project_id\n        in: path\n        description: project_id\n        required: true\n        schema:\n          type: integer\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n      tags:\n      - permissions\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                data:\n                  id: 39\n                  project_id: 14\n                  user_id: 55\n                  level: reader\n                  allow_anonymous: false\n                  allow_logged_in: false\n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  updater_id: \n                  created_at: '2020-01-02T03:04:05.677Z'\n                  creator_id: 53\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      \"$ref\": \"#/components/schemas/permission\"\n    put:\n      summary: update permission\n      security:\n      - auth_token_header: []\n      parameters:\n      - name: project_id\n        in: path\n        description: project_id\n        required: true\n        schema:\n          type: integer\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n      tags:\n      - permissions\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                data:\n                  id: 42\n                  project_id: 16\n                  user_id: 61\n                  level: reader\n                  allow_anonymous: false\n                  allow_logged_in: false\n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  updater_id: 1\n                  created_at: '2020-01-02T03:04:05.677Z'\n                  creator_id: 57\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      \"$ref\": \"#/components/schemas/permission\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/permission\"\n    patch:\n      summary: update permission\n      security:\n      - auth_token_header: []\n      parameters:\n      - name: project_id\n        in: path\n        description: project_id\n        required: true\n        schema:\n          type: integer\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n      tags:\n      - permissions\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                data:\n                  id: 46\n                  project_id: 18\n                  user_id: 68\n                  level: reader\n                  allow_anonymous: false\n                  allow_logged_in: false\n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  updater_id: 1\n                  created_at: '2020-01-02T03:04:05.677Z'\n                  creator_id: 64\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      \"$ref\": \"#/components/schemas/permission\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/permission\"\n    delete:\n      summary: delete permission\n      security:\n      - auth_token_header: []\n      parameters:\n      - name: project_id\n        in: path\n        description: project_id\n        required: true\n        schema:\n          type: integer\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n      tags:\n      - permissions\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '204':\n          description: successful\n  \"/projects/{project_id}/permissions/filter\":\n    post:\n      summary: filter permission\n      security:\n      - auth_token_header: []\n      parameters:\n      - name: project_id\n        in: path\n        description: project_id\n        required: true\n        schema:\n          type: integer\n      tags:\n      - permissions\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                  sorting:\n                    order_by: created_at\n                    direction: desc\n                  paging:\n                    page: 1\n                    items: 25\n                    total: 3\n                    max_page: 1\n                    current: http://localhost:3000/projects/20/permissions/filter?direction=desc\u0026items=25\u0026order_by=created_at\u0026page=1\n                    previous: \n                    next: \n                data:\n                - id: 51\n                  project_id: 20\n                  user_id: 75\n                  level: owner\n                  allow_anonymous: false\n                  allow_logged_in: false\n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  updater_id: \n                  created_at: '2020-01-02T03:04:05.677Z'\n                  creator_id: 1\n                - id: 52\n                  project_id: 20\n                  user_id: 76\n                  level: writer\n                  allow_anonymous: false\n                  allow_logged_in: false\n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  updater_id: \n                  created_at: '2020-01-02T03:04:05.677Z'\n                  creator_id: 75\n                - id: 53\n                  project_id: 20\n                  user_id: 77\n                  level: reader\n                  allow_anonymous: false\n                  allow_logged_in: false\n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  updater_id: \n                  created_at: '2020-01-02T03:04:05.677Z'\n                  creator_id: 75\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      type: array\n                      items:\n                        \"$ref\": \"#/components/schemas/permission\"\n  \"/scripts\":\n    get:\n      summary: list scripts\n      security:\n      - auth_token_header: []\n      parameters: []\n      tags:\n      - scripts\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                  sorting:\n                    order_by: name\n                    direction: asc\n                  paging:\n                    page: 1\n                    items: 25\n                    total: 1\n                    max_page: 1\n                    current: http://localhost:3000/scripts?direction=asc\u0026items=25\u0026order_by=name\u0026page=1\n                    previous: \n                    next: \n                data:\n                - id: 17\n                  group_id: 17\n                  name: script name 17\n                  description: script description 17\n                  analysis_identifier: script machine identifier 17\n                  executable_settings: executable settings 17\n                  executable_settings_media_type: text/plain\n                  version: 0.17\n                  created_at: '2020-01-02T03:04:05.677Z'\n                  creator_id: 1\n                  analysis_action_params:\n                    file_executable: \"./AnalysisPrograms/AnalysisPrograms.exe\"\n                    copy_paths:\n                    - \"./programs/AnalysisPrograms/Logs/log.txt\"\n                    sub_folders: []\n                    custom_setting: 17\n                  is_last_version: true\n                  is_first_version: true\n                  description_html: \"\u003cp\u003escript description 17\u003c/p\u003e\\n\"\n                  description_html_tagline: script description 17\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      type: array\n                      items:\n                        \"$ref\": \"#/components/schemas/script\"\n  \"/scripts/{id}\":\n    get:\n      summary: show script\n      security:\n      - auth_token_header: []\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n      tags:\n      - scripts\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`.\u003cbr /\u003e\n        Users that can't: `Harvester`, `anyone`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                data:\n                  id: 18\n                  group_id: 18\n                  name: script name 18\n                  description: script description 18\n                  analysis_identifier: script machine identifier 18\n                  executable_settings: executable settings 18\n                  executable_settings_media_type: text/plain\n                  version: 0.18\n                  created_at: '2020-01-02T03:04:05.677Z'\n                  creator_id: 1\n                  analysis_action_params:\n                    file_executable: \"./AnalysisPrograms/AnalysisPrograms.exe\"\n                    copy_paths:\n                    - \"./programs/AnalysisPrograms/Logs/log.txt\"\n                    sub_folders: []\n                    custom_setting: 18\n                  is_last_version: true\n                  is_first_version: true\n                  description_html: \"\u003cp\u003escript description 18\u003c/p\u003e\\n\"\n                  description_html_tagline: script description 18\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      \"$ref\": \"#/components/schemas/script\"\n  \"/scripts/filter\":\n    post:\n      summary: filter script\n      security:\n      - auth_token_header: []\n      parameters: []\n      tags:\n      - scripts\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                  sorting:\n                    order_by: name\n                    direction: asc\n                  paging:\n                    page: 1\n                    items: 25\n                    total: 1\n                    max_page: 1\n                    current: http://localhost:3000/scripts/filter?direction=asc\u0026items=25\u0026order_by=name\u0026page=1\n                    previous: \n                    next: \n                data:\n                - id: 19\n                  group_id: 19\n                  name: script name 19\n                  description: script description 19\n                  analysis_identifier: script machine identifier 19\n                  executable_settings: executable settings 19\n                  executable_settings_media_type: text/plain\n                  version: 0.19\n                  created_at: '2020-01-02T03:04:05.677Z'\n                  creator_id: 1\n                  analysis_action_params:\n                    file_executable: \"./AnalysisPrograms/AnalysisPrograms.exe\"\n                    copy_paths:\n                    - \"./programs/AnalysisPrograms/Logs/log.txt\"\n                    sub_folders: []\n                    custom_setting: 19\n                  is_last_version: true\n                  is_first_version: true\n                  description_html: \"\u003cp\u003escript description 19\u003c/p\u003e\\n\"\n                  description_html_tagline: script description 19\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      type: array\n                      items:\n                        \"$ref\": \"#/components/schemas/script\"\n  \"/audio_recordings/{id}/original\":\n    get:\n      summary: Downloads an original audio file\n      tags:\n      - media\n      - audio_recordings\n      - audio_recordings\n      - audio_recordings\n      parameters:\n      - name: id\n        in: path\n        description: ID of the audio recording\n        required: true\n        schema:\n          type: string\n      security:\n      - auth_token_header: []\n      description: |2\n\n        Users that can invoke this route: `Admin`, `Harvester`, `owner user`, `writer`, `reader`, `no_access`.\u003cbr /\u003e\n        Users that can't: `anyone`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n\n        Users that can invoke this route: `Admin`, `Harvester`, `owner user`, `writer`, `reader`, `no_access`.\u003cbr /\u003e\n        Users that can't: `anyone`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n\n        Users that can invoke this route: `Admin`, `Harvester`, `owner user`, `writer`, `reader`, `no_access`.\u003cbr /\u003e\n        Users that can't: `anyone`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '404':\n          description: not found\n        '401':\n          description: unauthorized\n        '200':\n          description: original audio file\n    head:\n      summary: Gets HTTP headers for an original audio file\n      tags:\n      - media\n      - audio_recordings\n      - audio_recordings\n      - audio_recordings\n      parameters:\n      - name: id\n        in: path\n        description: ID of the audio recording\n        required: true\n        schema:\n          type: string\n      security:\n      - auth_token_header: []\n      description: |2\n\n        Users that can invoke this route: `Admin`, `Harvester`, `owner user`, `writer`, `reader`, `no_access`.\u003cbr /\u003e\n        Users that can't: `anyone`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n\n        Users that can invoke this route: `Admin`, `Harvester`, `owner user`, `writer`, `reader`, `no_access`.\u003cbr /\u003e\n        Users that can't: `anyone`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n\n        Users that can invoke this route: `Admin`, `Harvester`, `owner user`, `writer`, `reader`, `no_access`.\u003cbr /\u003e\n        Users that can't: `anyone`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: original audio file\n        '404':\n          description: not found\n        '401':\n          description: unauthorized\n  \"/audio_recordings/downloader\":\n    post:\n      summary: Gets a templated script which can download original audio files. Accepts\n        an audio recordings filter object\n      tags:\n      - downloader\n      - audio_recordings\n      consumes: \n      security:\n      - auth_token_header: []\n      parameters: []\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: templated script\n          content:\n            text/plain:\n              example: |\n                #!/usr/bin/env pwsh\n\n                # Requires -Version 7\n                \u003c#\n\n                .DESCRIPTION\n\n                  Downloads a set of recordings from an acoustic workbench.\n                  Will work on Windows, Linux, or MacOSX with PowerShell Core.\n                  See https://docs.microsoft.com/en-us/powershell/scripting/install/installing-powershell?view=powershell-7.1\n                  for installation instructions.\n\n                  Version 7.0.1 from http://localhost:3000.\n\n                .EXAMPLE\n\n                On Windows:\n\n                PS\u003e ./download_audio_files.ps1\n\n                .EXAMPLE\n\n                On Linux/MacOSX:\n\n                $ chmod +x download_audio_files.ps1\n                $ ./download_audio_files.ps1\n\n                #\u003e\n\n                param(\n                  # Where to download the recordings. Defaults to the present working directory if not specified.\n                  $target = $null,\n                  # The username to use to login to the workbench. This value's default value is templated when the script is generated.\n                  $user_name = $null,\n                  # The auth token to use to login to the workbench. You only need to supply an auth token if you want to log in without a password.\n                  $auth_token = $null,\n                  # The filter to use to select audio recordings to download. This value's default value is templated when the script is generated.\n                  # See https://github.com/QutEcoacoustics/baw-server/wiki/API:-Filtering for details on valid filters. This argument\n                  # should be a valid JSON encoded string.\n                  $filter = $null,\n                  # The acoustic workbench instance to use. This value's default value is templated when the script is generated.\n                  $workbench_url = $null\n                )\n\n                $InformationPreference = 'Continue'\n                $ErrorActionPreference = 'Stop'\n                # https://github.com/PowerShell/PowerShell/issues/14348\n                $ProgressPreference = 'SilentlyContinue'\n\n                Write-Information \"Acoustic Workbench downloader script version 7.0.1\"\n\n                if ($null -eq $target) {\n                  $target = $pwd\n                }\n\n                # templated values from script generation\n                if ($null -eq $auth_token) {\n                  if ($null -eq $user_name) {\n                    $user_name = \"Admin\"\n                    if (-not $user_name) {\n                      Write-Error \"user_name is required\"\n                      exit 1\n                    }\n                  }\n                  Write-Information \"User name: $user_name\"\n                }\n                else {\n                  Write-Information \"Using supplied auth token $auth_token\"\n                }\n\n                if ($null -eq $filter) {\n                  $filter = @'\n                {\"sorting\":{\"order_by\":\"recorded_date\",\"direction\":\"desc\"},\"paging\":{\"items\":25},\"projection\":{\"include\":[\"id\",\"recorded_date\",\"sites.name\",\"site_id\",\"canonical_file_name\"]}}\n                '@\n                }\n                Write-Information \"Filter: $filter\"\n\n                if ($null -eq $workbench_url) {\n                  $workbench_url = \"http://localhost:3000\"\n                }\n                Write-Information \"Workbench URL: $workbench_url\"\n\n                # end templated values\n\n\n                # log in\n                $headers = @{}\n\n                if ($null -eq $auth_token) {\n                  $credentials = Get-Credential -Message \"Provide credentials for logging into $workbench_url\" -UserName $user_name\n                  $json_credentials = $credentials.GetNetworkCredential() | ForEach-Object{ @{\"email\"=$_.UserName;\"password\"=$_.Password}} | ConvertTo-Json\n\n                  Write-Information \"Logging in to workbench $workbench\"\n\n\n                    $auth_reponse = Invoke-WebRequest -Uri \"$workbench_url/security\" -Method POST -Body $json_credentials -Headers $headers -SkipHttpErrorCheck\n                    if ($auth_reponse.BaseResponse.IsSuccessStatusCode) {\n                      $auth_token = ($auth_reponse.Content | ConvertFrom-Json).data.auth_token\n                    }\n                    else {\n                      Write-Error (\"Login attempt failed ($($auth_reponse.StatusCode)) \" + $auth_reponse.Content)\n                      exit 1\n                    }\n\n                }\n                else {\n                  # we have auth token, nothing else to do?\n                }\n                $headers[\"Authorization\"] = \"Token token=`\"$auth_token`\"\"\n\n                $json_headers = $headers.Clone()\n                $json_headers[\"Content-Type\"] = \"application/json\"\n                $json_headers[\"Accept\"] = \"application/json\"\n\n                Write-Information \"Downloading recordings\"\n\n                # start paging through results!\n                $script:current_page = 0\n                $script:max_page = $null\n                function Get-NextPage() {\n                  $script:current_page += 1\n                  if (($null -ne $script:max_page) -and ($script:current_page -gt $script:max_page)) {\n                    Write-Information \"Reached end of pages\"\n                    return $null\n                  }\n\n                  Write-Information \"Getting page $script:current_page\"\n\n                  $response = Invoke-RestMethod -Uri \"$workbench_url/audio_recordings/filter?page=$script:current_page\" `\n                    -Method POST -Body $filter -Headers $json_headers -SkipHttpErrorCheck -StatusCodeVariable \"status_code\"\n\n                  if ($status_code -ne 200) {\n                    Write-Error (\"Failed to get recordings ($status_code): \")\n                    $response | Format-List | out-string | Write-Error\n                    exit 1\n                  }\n\n                  $script:max_page = $response.meta.paging.max_page\n\n                  Write-Information \"Got page $script:current_page of $script:max_page, $($response.data.Count) recordings in this page.\"\n\n                  return $response.data\n                }\n\n                $sites = @{}\n                function Get-SiteName($raw_name) {\n                  if ($sites.ContainsKey($raw_name)) {\n                    return $sites[$raw_name]\n                  }\n\n                  # Safe folder names\n                  $name = $raw_name -replace '[^-_A-Za-z0-9]',''\n                  $sites[$raw_name] = $name\n                  return $name\n                }\n\n                # make output directory\n                New-Item -ItemType Directory -Path $target -Force | Out-Null\n\n                while ($null -ne ($recordings = Get-NextPage )) {\n                  foreach($recording in $recordings) {\n                    Write-Information \"Downloading recording $($recording.id)\"\n                    $recording | write-output\n\n                    $audio_recording_id = $recording.id\n                    $site_id = $recording.site_id\n                    $name = $recording.canonical_file_name\n\n                    $safe_site_name = Get-SiteName $recording.'sites.name'\n\n                    $sub_folder = Join-Path $target \"${site_id}_$safe_site_name\"\n                    New-Item -ItemType Directory -Path $sub_folder -Force | Out-Null\n\n                    $path = Join-Path $sub_folder $name\n\n                    Invoke-RestMethod -Uri \"$workbench_url/audio_recordings/$audio_recording_id/original\" `\n                      -Method GET -Headers $headers -StatusCodeVariable \"download_status_code\" -OutFile $path\n\n                    Write-Information \"Downloaded recording $audio_recording_id to $path\"\n                  }\n                }\n\n                Write-Information \"Done!\"\n    get:\n      summary: Gets a templated script which can download original audio files\n      tags:\n      - downloader\n      - audio_recordings\n      security:\n      - auth_token_header: []\n      parameters: []\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: templated script\n          content:\n            text/plain:\n              example: |\n                #!/usr/bin/env pwsh\n\n                # Requires -Version 7\n                \u003c#\n\n                .DESCRIPTION\n\n                  Downloads a set of recordings from an acoustic workbench.\n                  Will work on Windows, Linux, or MacOSX with PowerShell Core.\n                  See https://docs.microsoft.com/en-us/powershell/scripting/install/installing-powershell?view=powershell-7.1\n                  for installation instructions.\n\n                  Version 7.0.1 from http://localhost:3000.\n\n                .EXAMPLE\n\n                On Windows:\n\n                PS\u003e ./download_audio_files.ps1\n\n                .EXAMPLE\n\n                On Linux/MacOSX:\n\n                $ chmod +x download_audio_files.ps1\n                $ ./download_audio_files.ps1\n\n                #\u003e\n\n                param(\n                  # Where to download the recordings. Defaults to the present working directory if not specified.\n                  $target = $null,\n                  # The username to use to login to the workbench. This value's default value is templated when the script is generated.\n                  $user_name = $null,\n                  # The auth token to use to login to the workbench. You only need to supply an auth token if you want to log in without a password.\n                  $auth_token = $null,\n                  # The filter to use to select audio recordings to download. This value's default value is templated when the script is generated.\n                  # See https://github.com/QutEcoacoustics/baw-server/wiki/API:-Filtering for details on valid filters. This argument\n                  # should be a valid JSON encoded string.\n                  $filter = $null,\n                  # The acoustic workbench instance to use. This value's default value is templated when the script is generated.\n                  $workbench_url = $null\n                )\n\n                $InformationPreference = 'Continue'\n                $ErrorActionPreference = 'Stop'\n                # https://github.com/PowerShell/PowerShell/issues/14348\n                $ProgressPreference = 'SilentlyContinue'\n\n                Write-Information \"Acoustic Workbench downloader script version 7.0.1\"\n\n                if ($null -eq $target) {\n                  $target = $pwd\n                }\n\n                # templated values from script generation\n                if ($null -eq $auth_token) {\n                  if ($null -eq $user_name) {\n                    $user_name = \"Admin\"\n                    if (-not $user_name) {\n                      Write-Error \"user_name is required\"\n                      exit 1\n                    }\n                  }\n                  Write-Information \"User name: $user_name\"\n                }\n                else {\n                  Write-Information \"Using supplied auth token $auth_token\"\n                }\n\n                if ($null -eq $filter) {\n                  $filter = @'\n                {\"sorting\":{\"order_by\":\"recorded_date\",\"direction\":\"desc\"},\"paging\":{\"items\":25},\"projection\":{\"include\":[\"id\",\"recorded_date\",\"sites.name\",\"site_id\",\"canonical_file_name\"]}}\n                '@\n                }\n                Write-Information \"Filter: $filter\"\n\n                if ($null -eq $workbench_url) {\n                  $workbench_url = \"http://localhost:3000\"\n                }\n                Write-Information \"Workbench URL: $workbench_url\"\n\n                # end templated values\n\n\n                # log in\n                $headers = @{}\n\n                if ($null -eq $auth_token) {\n                  $credentials = Get-Credential -Message \"Provide credentials for logging into $workbench_url\" -UserName $user_name\n                  $json_credentials = $credentials.GetNetworkCredential() | ForEach-Object{ @{\"email\"=$_.UserName;\"password\"=$_.Password}} | ConvertTo-Json\n\n                  Write-Information \"Logging in to workbench $workbench\"\n\n\n                    $auth_reponse = Invoke-WebRequest -Uri \"$workbench_url/security\" -Method POST -Body $json_credentials -Headers $headers -SkipHttpErrorCheck\n                    if ($auth_reponse.BaseResponse.IsSuccessStatusCode) {\n                      $auth_token = ($auth_reponse.Content | ConvertFrom-Json).data.auth_token\n                    }\n                    else {\n                      Write-Error (\"Login attempt failed ($($auth_reponse.StatusCode)) \" + $auth_reponse.Content)\n                      exit 1\n                    }\n\n                }\n                else {\n                  # we have auth token, nothing else to do?\n                }\n                $headers[\"Authorization\"] = \"Token token=`\"$auth_token`\"\"\n\n                $json_headers = $headers.Clone()\n                $json_headers[\"Content-Type\"] = \"application/json\"\n                $json_headers[\"Accept\"] = \"application/json\"\n\n                Write-Information \"Downloading recordings\"\n\n                # start paging through results!\n                $script:current_page = 0\n                $script:max_page = $null\n                function Get-NextPage() {\n                  $script:current_page += 1\n                  if (($null -ne $script:max_page) -and ($script:current_page -gt $script:max_page)) {\n                    Write-Information \"Reached end of pages\"\n                    return $null\n                  }\n\n                  Write-Information \"Getting page $script:current_page\"\n\n                  $response = Invoke-RestMethod -Uri \"$workbench_url/audio_recordings/filter?page=$script:current_page\" `\n                    -Method POST -Body $filter -Headers $json_headers -SkipHttpErrorCheck -StatusCodeVariable \"status_code\"\n\n                  if ($status_code -ne 200) {\n                    Write-Error (\"Failed to get recordings ($status_code): \")\n                    $response | Format-List | out-string | Write-Error\n                    exit 1\n                  }\n\n                  $script:max_page = $response.meta.paging.max_page\n\n                  Write-Information \"Got page $script:current_page of $script:max_page, $($response.data.Count) recordings in this page.\"\n\n                  return $response.data\n                }\n\n                $sites = @{}\n                function Get-SiteName($raw_name) {\n                  if ($sites.ContainsKey($raw_name)) {\n                    return $sites[$raw_name]\n                  }\n\n                  # Safe folder names\n                  $name = $raw_name -replace '[^-_A-Za-z0-9]',''\n                  $sites[$raw_name] = $name\n                  return $name\n                }\n\n                # make output directory\n                New-Item -ItemType Directory -Path $target -Force | Out-Null\n\n                while ($null -ne ($recordings = Get-NextPage )) {\n                  foreach($recording in $recordings) {\n                    Write-Information \"Downloading recording $($recording.id)\"\n                    $recording | write-output\n\n                    $audio_recording_id = $recording.id\n                    $site_id = $recording.site_id\n                    $name = $recording.canonical_file_name\n\n                    $safe_site_name = Get-SiteName $recording.'sites.name'\n\n                    $sub_folder = Join-Path $target \"${site_id}_$safe_site_name\"\n                    New-Item -ItemType Directory -Path $sub_folder -Force | Out-Null\n\n                    $path = Join-Path $sub_folder $name\n\n                    Invoke-RestMethod -Uri \"$workbench_url/audio_recordings/$audio_recording_id/original\" `\n                      -Method GET -Headers $headers -StatusCodeVariable \"download_status_code\" -OutFile $path\n\n                    Write-Information \"Downloaded recording $audio_recording_id to $path\"\n                  }\n                }\n\n                Write-Information \"Done!\"\n  \"/audio_recordings\":\n    get:\n      summary: list audio recordings\n      security:\n      - auth_token_header: []\n      parameters: []\n      tags:\n      - audio_recordings\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                  sorting:\n                    order_by: recorded_date\n                    direction: desc\n                  paging:\n                    page: 1\n                    items: 25\n                    total: 1\n                    max_page: 1\n                    current: http://localhost:3000/audio_recordings?direction=desc\u0026items=25\u0026order_by=recorded_date\u0026page=1\n                    previous: \n                    next: \n                  capabilities:\n                    original_download:\n                      can: \n                      details: You do not have permission to download the original\n                        audio recording. Check your access level or the original download\n                        settings for this project\n                data:\n                - id: 28\n                  uuid: e209e7fa-47b1-402f-9ba2-298cb971cdb9\n                  recorded_date: '2012-04-23T07:06:59.000Z'\n                  site_id: 28\n                  duration_seconds: 60000.0\n                  sample_rate_hertz: 44100\n                  channels: 2\n                  bit_rate_bps: 64000\n                  media_type: audio/mpeg\n                  data_length_bytes: 3800\n                  status: ready\n                  created_at: '2020-01-02T03:04:05.677Z'\n                  creator_id: 124\n                  deleted_at: \n                  deleter_id: \n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  updater_id: \n                  notes:\n                    test: note number 28\n                  file_hash: SHA256::28tu3zlcasjnofvtli4p0czpopdnomgtgx6sxgx5cbm767y12azcp39kzadhvb1u\n                  uploader_id: 124\n                  original_file_name: original name 28.mp3\n                  canonical_file_name: 20120423T070659Z_site-name-28_28.mp3\n                  recorded_date_timezone: \n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      type: array\n                      items:\n                        \"$ref\": \"#/components/schemas/audio_recording\"\n  \"/audio_recordings/{id}\":\n    patch:\n      summary: update audio recordings\n      security:\n      - auth_token_header: []\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n      tags:\n      - audio_recordings\n      description: |2\n\n        Users that can invoke this route: `Admin`, `Harvester`.\u003cbr /\u003e\n        Users that can't: `owner user`, `writer`, `reader`, `no_access`, `anyone`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                  capabilities:\n                    original_download:\n                      can: true\n                      details: \n                data:\n                  id: 29\n                  uuid: 84af83ac-0fe5-4165-81ac-6c032ebb9c93\n                  recorded_date: '2012-04-24T07:06:59.000Z'\n                  site_id: 29\n                  duration_seconds: 66.0\n                  sample_rate_hertz: 44100\n                  channels: 2\n                  bit_rate_bps: 64000\n                  media_type: audio/mpeg\n                  data_length_bytes: 3800\n                  status: ready\n                  created_at: '2020-01-02T03:04:05.677Z'\n                  creator_id: 128\n                  deleted_at: \n                  deleter_id: \n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  updater_id: 1\n                  notes:\n                    test: note number 29\n                  file_hash: SHA256::29fbdw2kbuxzu6b5i7jgtn6xb8m27skx1ipi19lhbrlqmr633rskzfzfy2cn4zms\n                  uploader_id: 128\n                  original_file_name: original name 29.mp3\n                  canonical_file_name: 20120424T070659Z_site-name-29_29.mp3\n                  recorded_date_timezone: \n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      \"$ref\": \"#/components/schemas/audio_recording\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/audio_recording\"\n    get:\n      summary: show audio recordings\n      security:\n      - auth_token_header: []\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n      tags:\n      - audio_recordings\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                  capabilities:\n                    original_download:\n                      can: true\n                      details: \n                data:\n                  id: 30\n                  uuid: 82f2ae29-fb9c-4110-b131-38804ac6e4c3\n                  recorded_date: '2012-04-25T07:06:59.000Z'\n                  site_id: 30\n                  duration_seconds: 60000.0\n                  sample_rate_hertz: 44100\n                  channels: 2\n                  bit_rate_bps: 64000\n                  media_type: audio/mpeg\n                  data_length_bytes: 3800\n                  status: ready\n                  created_at: '2020-01-02T03:04:05.677Z'\n                  creator_id: 132\n                  deleted_at: \n                  deleter_id: \n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  updater_id: \n                  notes:\n                    test: note number 30\n                  file_hash: SHA256::30c5x4c02hy3yui3iptsk1pjhqxu1b81m2c8uuq07shlpanph5m3wmcovyezpqpg\n                  uploader_id: 132\n                  original_file_name: original name 30.mp3\n                  canonical_file_name: 20120425T070659Z_site-name-30_30.mp3\n                  recorded_date_timezone: \n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      \"$ref\": \"#/components/schemas/audio_recording\"\n    put:\n      summary: update audio recordings\n      security:\n      - auth_token_header: []\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n      tags:\n      - audio_recordings\n      description: |2\n\n        Users that can invoke this route: `Admin`, `Harvester`.\u003cbr /\u003e\n        Users that can't: `owner user`, `writer`, `reader`, `no_access`, `anyone`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                  capabilities:\n                    original_download:\n                      can: true\n                      details: \n                data:\n                  id: 31\n                  uuid: 5ea5a8dd-cfb2-4bc6-b595-a68dcfc5a6fd\n                  recorded_date: '2012-04-26T07:06:59.000Z'\n                  site_id: 31\n                  duration_seconds: 66.0\n                  sample_rate_hertz: 44100\n                  channels: 2\n                  bit_rate_bps: 64000\n                  media_type: audio/mpeg\n                  data_length_bytes: 3800\n                  status: ready\n                  created_at: '2020-01-02T03:04:05.677Z'\n                  creator_id: 136\n                  deleted_at: \n                  deleter_id: \n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  updater_id: 1\n                  notes:\n                    test: note number 31\n                  file_hash: SHA256::3113zacwbn39j1wwm7mioyylciu2e1ve2uhrmbn7k0w3nu2oir3x6y8eyhmug9bp\n                  uploader_id: 136\n                  original_file_name: original name 31.mp3\n                  canonical_file_name: 20120426T070659Z_site-name-31_31.mp3\n                  recorded_date_timezone: \n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      \"$ref\": \"#/components/schemas/audio_recording\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/audio_recording\"\n  \"/audio_recordings/new\":\n    get:\n      summary: new audio recordings\n      security:\n      - auth_token_header: []\n      parameters: []\n      tags:\n      - audio_recordings\n      description: |2\n\n        Users that can invoke this route: `Admin`, `Harvester`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: .\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                data:\n                  site_id: \n                  uploader_id: \n                  sample_rate_hertz: \n                  media_type: \n                  recorded_date: \n                  bit_rate_bps: \n                  data_length_bytes: \n                  channels: \n                  duration_seconds: \n                  file_hash: \n                  original_file_name: \n  \"/audio_recordings/filter\":\n    post:\n      summary: filter audio recording\n      security:\n      - auth_token_header: []\n      parameters: []\n      tags:\n      - audio_recordings\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                  sorting:\n                    order_by: recorded_date\n                    direction: desc\n                  paging:\n                    page: 1\n                    items: 25\n                    total: 1\n                    max_page: 1\n                    current: http://localhost:3000/audio_recordings/filter?direction=desc\u0026items=25\u0026order_by=recorded_date\u0026page=1\n                    previous: \n                    next: \n                  capabilities:\n                    original_download:\n                      can: \n                      details: You do not have permission to download the original\n                        audio recording. Check your access level or the original download\n                        settings for this project\n                data:\n                - id: 33\n                  uuid: '038d6519-1dee-40ae-b80f-f50984cb920d'\n                  recorded_date: '2012-04-28T07:06:59.000Z'\n                  site_id: 33\n                  duration_seconds: 60000.0\n                  sample_rate_hertz: 44100\n                  channels: 2\n                  bit_rate_bps: 64000\n                  media_type: audio/mpeg\n                  data_length_bytes: 3800\n                  status: ready\n                  created_at: '2020-01-02T03:04:05.677Z'\n                  creator_id: 144\n                  deleted_at: \n                  deleter_id: \n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  updater_id: \n                  notes:\n                    test: note number 33\n                  file_hash: SHA256::337rg8v0o44mgu9okmxnw273ifvtapv9yl3e7sjjskjy2yai2twpzruhufceganv\n                  uploader_id: 144\n                  original_file_name: original name 33.mp3\n                  canonical_file_name: 20120428T070659Z_site-name-33_33.mp3\n                  recorded_date_timezone: \n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      type: array\n                      items:\n                        \"$ref\": \"#/components/schemas/audio_recording\"\n  \"/projects/{project_id}/regions/new\":\n    get:\n      summary: new region\n      security:\n      - auth_token_header: []\n      parameters:\n      - name: project_id\n        in: path\n        description: project_id\n        required: true\n        schema:\n          type: integer\n      tags:\n      - regions\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                data:\n                  name: \n                  description: \n                  notes: \n                  project_id: \n  \"/projects/{project_id}/regions\":\n    post:\n      summary: create region\n      security:\n      - auth_token_header: []\n      parameters:\n      - name: project_id\n        in: path\n        description: project_id\n        required: true\n        schema:\n          type: integer\n      tags:\n      - regions\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '201':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 201\n                  message: Created\n                data:\n                  id: 36\n                  name: region name 36\n                  description: site **description** 36\n                  notes:\n                    region_note_36: 36\n                  creator_id: 1\n                  created_at: '2020-01-02T03:04:05.677Z'\n                  updater_id: \n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  deleter_id: \n                  deleted_at: \n                  project_id: 39\n                  site_ids: []\n                  description_html: \"\u003cp\u003esite \u003cstrong\u003edescription\u003c/strong\u003e 36\u003c/p\u003e\\n\"\n                  description_html_tagline: site \u003cstrong\u003edescription\u003c/strong\u003e 36\n                  image_urls: []\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      \"$ref\": \"#/components/schemas/region\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/region\"\n    get:\n      summary: list regions\n      security:\n      - auth_token_header: []\n      parameters:\n      - name: project_id\n        in: path\n        description: project_id\n        required: true\n        schema:\n          type: integer\n      tags:\n      - regions\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                  sorting:\n                    order_by: name\n                    direction: asc\n                  paging:\n                    page: 1\n                    items: 25\n                    total: 1\n                    max_page: 1\n                    current: http://localhost:3000/projects/41/regions?direction=asc\u0026items=25\u0026order_by=name\u0026page=1\n                    previous: \n                    next: \n                data:\n                - id: 37\n                  name: region name 37\n                  description: site **description** 37\n                  notes:\n                    region_note_37: 37\n                  creator_id: 157\n                  created_at: '2020-01-02T03:04:05.677Z'\n                  updater_id: \n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  deleter_id: \n                  deleted_at: \n                  project_id: 41\n                  site_ids:\n                  - 36\n                  description_html: \"\u003cp\u003esite \u003cstrong\u003edescription\u003c/strong\u003e 37\u003c/p\u003e\\n\"\n                  description_html_tagline: site \u003cstrong\u003edescription\u003c/strong\u003e 37\n                  image_urls: []\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      type: array\n                      items:\n                        \"$ref\": \"#/components/schemas/region\"\n  \"/projects/{project_id}/regions/{id}\":\n    delete:\n      summary: delete region\n      security:\n      - auth_token_header: []\n      parameters:\n      - name: project_id\n        in: path\n        description: project_id\n        required: true\n        schema:\n          type: integer\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n      tags:\n      - regions\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '204':\n          description: successful\n    get:\n      summary: show region\n      security:\n      - auth_token_header: []\n      parameters:\n      - name: project_id\n        in: path\n        description: project_id\n        required: true\n        schema:\n          type: integer\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n      tags:\n      - regions\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                data:\n                  id: 39\n                  name: region name 39\n                  description: site **description** 39\n                  notes:\n                    region_note_39: 39\n                  creator_id: 165\n                  created_at: '2020-01-02T03:04:05.677Z'\n                  updater_id: \n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  deleter_id: \n                  deleted_at: \n                  project_id: 43\n                  site_ids:\n                  - 38\n                  description_html: \"\u003cp\u003esite \u003cstrong\u003edescription\u003c/strong\u003e 39\u003c/p\u003e\\n\"\n                  description_html_tagline: site \u003cstrong\u003edescription\u003c/strong\u003e 39\n                  image_urls: []\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      \"$ref\": \"#/components/schemas/region\"\n    put:\n      summary: update region\n      security:\n      - auth_token_header: []\n      parameters:\n      - name: project_id\n        in: path\n        description: project_id\n        required: true\n        schema:\n          type: integer\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n      tags:\n      - regions\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                data:\n                  id: 40\n                  name: region name 41\n                  description: site **description** 41\n                  notes:\n                    region_note_41: 41\n                  creator_id: 169\n                  created_at: '2020-01-02T03:04:05.677Z'\n                  updater_id: 1\n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  deleter_id: \n                  deleted_at: \n                  project_id: 45\n                  site_ids:\n                  - 39\n                  description_html: \"\u003cp\u003esite \u003cstrong\u003edescription\u003c/strong\u003e 41\u003c/p\u003e\\n\"\n                  description_html_tagline: site \u003cstrong\u003edescription\u003c/strong\u003e 41\n                  image_urls: []\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      \"$ref\": \"#/components/schemas/region\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/region\"\n    patch:\n      summary: update region\n      security:\n      - auth_token_header: []\n      parameters:\n      - name: project_id\n        in: path\n        description: project_id\n        required: true\n        schema:\n          type: integer\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n      tags:\n      - regions\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                data:\n                  id: 41\n                  name: region name 43\n                  description: site **description** 43\n                  notes:\n                    region_note_43: 43\n                  creator_id: 175\n                  created_at: '2020-01-02T03:04:05.677Z'\n                  updater_id: 1\n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  deleter_id: \n                  deleted_at: \n                  project_id: 47\n                  site_ids:\n                  - 40\n                  description_html: \"\u003cp\u003esite \u003cstrong\u003edescription\u003c/strong\u003e 43\u003c/p\u003e\\n\"\n                  description_html_tagline: site \u003cstrong\u003edescription\u003c/strong\u003e 43\n                  image_urls: []\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      \"$ref\": \"#/components/schemas/region\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/region\"\n  \"/projects/{project_id}/regions/filter\":\n    post:\n      summary: filter region\n      security:\n      - auth_token_header: []\n      parameters:\n      - name: project_id\n        in: path\n        description: project_id\n        required: true\n        schema:\n          type: integer\n      tags:\n      - regions\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                  sorting:\n                    order_by: name\n                    direction: asc\n                  paging:\n                    page: 1\n                    items: 25\n                    total: 1\n                    max_page: 1\n                    current: http://localhost:3000/projects/48/regions/filter?direction=asc\u0026items=25\u0026order_by=name\u0026page=1\n                    previous: \n                    next: \n                data:\n                - id: 42\n                  name: region name 44\n                  description: site **description** 44\n                  notes:\n                    region_note_44: 44\n                  creator_id: 181\n                  created_at: '2020-01-02T03:04:05.677Z'\n                  updater_id: \n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  deleter_id: \n                  deleted_at: \n                  project_id: 48\n                  site_ids:\n                  - 41\n                  description_html: \"\u003cp\u003esite \u003cstrong\u003edescription\u003c/strong\u003e 44\u003c/p\u003e\\n\"\n                  description_html_tagline: site \u003cstrong\u003edescription\u003c/strong\u003e 44\n                  image_urls: []\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      type: array\n                      items:\n                        \"$ref\": \"#/components/schemas/region\"\n  \"/stats\":\n    get:\n      summary: Gets stats\n      tags:\n      - stats\n      security: \n      parameters: []\n      responses:\n        '200':\n          description: stats retrieved\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                data:\n                  summary:\n                    users_online: 0\n                    users_total: 2\n                    online_window_start: '2020-01-02T01:04:05.677Z'\n                    projects_total: 0\n                    regions_total: 0\n                    sites_total: 0\n                    annotations_total: 0\n                    annotations_total_duration: 0\n                    annotations_recent: 0\n                    audio_recordings_total: 0\n                    audio_recordings_recent: 0\n                    audio_recordings_total_duration: 0\n                    audio_recordings_total_size: 0\n                    tags_total: 0\n                    tags_applied_total: 0\n                    tags_applied_unique_total: 0\n                  recent:\n                    audio_recording_ids: []\n                    audio_event_ids: []\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      \"$ref\": \"#/components/schemas/stats\"\n  \"/sites/{id}\":\n    put:\n      summary: update site\n      security:\n      - auth_token_header: []\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n      tags:\n      - sites\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                data:\n                  id: 42\n                  name: site name 43\n                  description: site description 43\n                  notes: note number 43\n                  creator_id: 185\n                  created_at: '2020-01-02T03:04:05.677Z'\n                  updater_id: 1\n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  deleter_id: \n                  deleted_at: \n                  region_id: \n                  custom_latitude: -33.037898\n                  custom_longitude: -128.989612\n                  location_obfuscated: false\n                  project_ids:\n                  - 49\n                  timezone_information: \n                  image_urls:\n                  - size: extralarge\n                    url: \"/images/site/site_span4.png\"\n                    width: 300\n                    height: 300\n                  - size: large\n                    url: \"/images/site/site_span3.png\"\n                    width: 220\n                    height: 220\n                  - size: medium\n                    url: \"/images/site/site_span2.png\"\n                    width: 140\n                    height: 140\n                  - size: small\n                    url: \"/images/site/site_span1.png\"\n                    width: 60\n                    height: 60\n                  - size: tiny\n                    url: \"/images/site/site_spanhalf.png\"\n                    width: 30\n                    height: 30\n                  description_html: \"\u003cp\u003esite description 43\u003c/p\u003e\\n\"\n                  description_html_tagline: site description 43\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      \"$ref\": \"#/components/schemas/site\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/site\"\n    delete:\n      summary: delete site\n      security:\n      - auth_token_header: []\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n      tags:\n      - sites\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '204':\n          description: successful\n    get:\n      summary: show site\n      security:\n      - auth_token_header: []\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n      tags:\n      - sites\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                data:\n                  id: 44\n                  name: site name 45\n                  description: site description 45\n                  notes: note number 45\n                  creator_id: 194\n                  created_at: '2020-01-02T03:04:05.677Z'\n                  updater_id: \n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  deleter_id: \n                  deleted_at: \n                  region_id: 45\n                  custom_latitude: 23.384337\n                  custom_longitude: 11.449158\n                  location_obfuscated: false\n                  project_ids:\n                  - 51\n                  timezone_information: \n                  image_urls:\n                  - size: extralarge\n                    url: \"/images/site/site_span4.png\"\n                    width: 300\n                    height: 300\n                  - size: large\n                    url: \"/images/site/site_span3.png\"\n                    width: 220\n                    height: 220\n                  - size: medium\n                    url: \"/images/site/site_span2.png\"\n                    width: 140\n                    height: 140\n                  - size: small\n                    url: \"/images/site/site_span1.png\"\n                    width: 60\n                    height: 60\n                  - size: tiny\n                    url: \"/images/site/site_spanhalf.png\"\n                    width: 30\n                    height: 30\n                  description_html: \"\u003cp\u003esite description 45\u003c/p\u003e\\n\"\n                  description_html_tagline: site description 45\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      \"$ref\": \"#/components/schemas/site\"\n    patch:\n      summary: update site\n      security:\n      - auth_token_header: []\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n      tags:\n      - sites\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                data:\n                  id: 45\n                  name: site name 47\n                  description: site description 47\n                  notes: note number 47\n                  creator_id: 198\n                  created_at: '2020-01-02T03:04:05.677Z'\n                  updater_id: 1\n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  deleter_id: \n                  deleted_at: \n                  region_id: \n                  custom_latitude: -31.884991\n                  custom_longitude: 51.542919\n                  location_obfuscated: false\n                  project_ids:\n                  - 52\n                  timezone_information: \n                  image_urls:\n                  - size: extralarge\n                    url: \"/images/site/site_span4.png\"\n                    width: 300\n                    height: 300\n                  - size: large\n                    url: \"/images/site/site_span3.png\"\n                    width: 220\n                    height: 220\n                  - size: medium\n                    url: \"/images/site/site_span2.png\"\n                    width: 140\n                    height: 140\n                  - size: small\n                    url: \"/images/site/site_span1.png\"\n                    width: 60\n                    height: 60\n                  - size: tiny\n                    url: \"/images/site/site_spanhalf.png\"\n                    width: 30\n                    height: 30\n                  description_html: \"\u003cp\u003esite description 47\u003c/p\u003e\\n\"\n                  description_html_tagline: site description 47\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      \"$ref\": \"#/components/schemas/site\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/site\"\n  \"/sites/new\":\n    get:\n      summary: new site\n      security:\n      - auth_token_header: []\n      parameters: []\n      tags:\n      - sites\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                data:\n                  longitude: \n                  latitude: \n                  notes: \n                  image: \n                  tzinfo_tz: \n                  rails_tz: \n  \"/sites\":\n    post:\n      summary: create site\n      security:\n      - auth_token_header: []\n      parameters: []\n      tags:\n      - sites\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '201':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 201\n                  message: Created\n                data:\n                  id: 48\n                  name: site name 50\n                  description: site description 50\n                  notes: note number 50\n                  creator_id: 1\n                  created_at: '2020-01-02T03:04:05.677Z'\n                  updater_id: \n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  deleter_id: \n                  deleted_at: \n                  region_id: \n                  custom_latitude: \n                  custom_longitude: \n                  location_obfuscated: true\n                  project_ids: []\n                  timezone_information: \n                  image_urls:\n                  - size: extralarge\n                    url: \"/images/site/site_span4.png\"\n                    width: 300\n                    height: 300\n                  - size: large\n                    url: \"/images/site/site_span3.png\"\n                    width: 220\n                    height: 220\n                  - size: medium\n                    url: \"/images/site/site_span2.png\"\n                    width: 140\n                    height: 140\n                  - size: small\n                    url: \"/images/site/site_span1.png\"\n                    width: 60\n                    height: 60\n                  - size: tiny\n                    url: \"/images/site/site_spanhalf.png\"\n                    width: 30\n                    height: 30\n                  description_html: \"\u003cp\u003esite description 50\u003c/p\u003e\\n\"\n                  description_html_tagline: site description 50\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      \"$ref\": \"#/components/schemas/site\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/site\"\n    get:\n      summary: list sites\n      security:\n      - auth_token_header: []\n      parameters: []\n      tags:\n      - sites\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                  sorting:\n                    order_by: name\n                    direction: asc\n                  paging:\n                    page: 1\n                    items: 25\n                    total: 1\n                    max_page: 1\n                    current: http://localhost:3000/sites?direction=asc\u0026items=25\u0026order_by=name\u0026page=1\n                    previous: \n                    next: \n                data:\n                - id: 49\n                  name: site name 51\n                  description: site description 51\n                  notes: note number 51\n                  creator_id: 212\n                  created_at: '2020-01-02T03:04:05.677Z'\n                  updater_id: \n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  deleter_id: \n                  deleted_at: \n                  region_id: 49\n                  custom_latitude: -81.848818\n                  custom_longitude: -149.904771\n                  location_obfuscated: false\n                  project_ids:\n                  - 55\n                  timezone_information: \n                  image_urls:\n                  - size: extralarge\n                    url: \"/images/site/site_span4.png\"\n                    width: 300\n                    height: 300\n                  - size: large\n                    url: \"/images/site/site_span3.png\"\n                    width: 220\n                    height: 220\n                  - size: medium\n                    url: \"/images/site/site_span2.png\"\n                    width: 140\n                    height: 140\n                  - size: small\n                    url: \"/images/site/site_span1.png\"\n                    width: 60\n                    height: 60\n                  - size: tiny\n                    url: \"/images/site/site_spanhalf.png\"\n                    width: 30\n                    height: 30\n                  description_html: \"\u003cp\u003esite description 51\u003c/p\u003e\\n\"\n                  description_html_tagline: site description 51\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      type: array\n                      items:\n                        \"$ref\": \"#/components/schemas/site\"\n  \"/sites/filter\":\n    post:\n      summary: filter site\n      security:\n      - auth_token_header: []\n      parameters: []\n      tags:\n      - sites\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                  sorting:\n                    order_by: name\n                    direction: asc\n                  paging:\n                    page: 1\n                    items: 25\n                    total: 1\n                    max_page: 1\n                    current: http://localhost:3000/sites/filter?direction=asc\u0026items=25\u0026order_by=name\u0026page=1\n                    previous: \n                    next: \n                data:\n                - id: 50\n                  name: site name 52\n                  description: site description 52\n                  notes: note number 52\n                  creator_id: 216\n                  created_at: '2020-01-02T03:04:05.677Z'\n                  updater_id: \n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  deleter_id: \n                  deleted_at: \n                  region_id: 50\n                  custom_latitude: -62.227967\n                  custom_longitude: -138.485918\n                  location_obfuscated: false\n                  project_ids:\n                  - 56\n                  timezone_information: \n                  image_urls:\n                  - size: extralarge\n                    url: \"/images/site/site_span4.png\"\n                    width: 300\n                    height: 300\n                  - size: large\n                    url: \"/images/site/site_span3.png\"\n                    width: 220\n                    height: 220\n                  - size: medium\n                    url: \"/images/site/site_span2.png\"\n                    width: 140\n                    height: 140\n                  - size: small\n                    url: \"/images/site/site_span1.png\"\n                    width: 60\n                    height: 60\n                  - size: tiny\n                    url: \"/images/site/site_spanhalf.png\"\n                    width: 30\n                    height: 30\n                  description_html: \"\u003cp\u003esite description 52\u003c/p\u003e\\n\"\n                  description_html_tagline: site description 52\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      type: array\n                      items:\n                        \"$ref\": \"#/components/schemas/site\"\n  \"/projects/{project_id}/sites/{site_id}/audio_recordings/new\":\n    get:\n      summary: new audio recordings\n      security:\n      - auth_token_header: []\n      parameters:\n      - name: project_id\n        in: path\n        description: project_id\n        required: true\n        schema:\n          type: integer\n      - name: site_id\n        in: path\n        description: site_id\n        required: true\n        schema:\n          type: integer\n      tags:\n      - audio_recordings\n      description: |2\n\n        Users that can invoke this route: `Admin`, `Harvester`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: .\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                data:\n                  site_id: \n                  uploader_id: \n                  sample_rate_hertz: \n                  media_type: \n                  recorded_date: \n                  bit_rate_bps: \n                  data_length_bytes: \n                  channels: \n                  duration_seconds: \n                  file_hash: \n                  original_file_name: \n  \"/projects/{project_id}/sites/{site_id}/audio_recordings\":\n    post:\n      summary: create audio recordings\n      security:\n      - auth_token_header: []\n      parameters:\n      - name: project_id\n        in: path\n        description: project_id\n        required: true\n        schema:\n          type: integer\n      - name: site_id\n        in: path\n        description: site_id\n        required: true\n        schema:\n          type: integer\n      tags:\n      - audio_recordings\n      description: |2\n\n        Users that can invoke this route: `Admin`, `Harvester`.\u003cbr /\u003e\n        Users that can't: `owner user`, `writer`, `reader`, `no_access`, `anyone`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '201':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 201\n                  message: Created\n                  capabilities:\n                    original_download:\n                      can: true\n                      details: \n                data:\n                  id: 52\n                  uuid: f0fb4386-cabb-45f8-96d1-ccfe7c0147bc\n                  recorded_date: '2012-05-17T07:06:59.000Z'\n                  site_id: 52\n                  duration_seconds: 60000.0\n                  sample_rate_hertz: 22050\n                  channels: 2\n                  bit_rate_bps: 64000\n                  media_type: audio/mpeg\n                  data_length_bytes: 3800\n                  status: new\n                  created_at: '2020-01-02T03:04:05.677Z'\n                  creator_id: 1\n                  deleted_at: \n                  deleter_id: \n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  updater_id: \n                  notes:\n                    test: note number 52\n                  file_hash: SHA256::52y9nfybl9binp4uqeqp3rafmjbq8z2q0bpbhbn42n6lu90bmu4w621lfn3yz5vq\n                  uploader_id: 1\n                  original_file_name: original name 52.mp3\n                  canonical_file_name: 20120517T070659Z_site-name-54_52.mp3\n                  recorded_date_timezone: \n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      \"$ref\": \"#/components/schemas/audio_recording\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/audio_recording\"\n  \"/status\":\n    get:\n      summary: Gets status\n      tags:\n      - stats\n      security: \n      parameters: []\n      responses:\n        '200':\n          description: stats retrieved\n          content:\n            application/json:\n              example:\n                status: good\n                timed_out: false\n                database: true\n                redis: PONG\n                storage: 1 audio recording storage directory available.\n                upload: Alive\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                    enum:\n                    - good\n                    - bad\n                  timed_out:\n                    type: boolean\n                  database:\n                    type: boolean\n                  redis:\n                    type: string\n                  storage:\n                    type: string\n                  upload:\n                    type: string\n  \"/bookmarks\":\n    post:\n      summary: create bookmark\n      security:\n      - auth_token_header: []\n      parameters: []\n      tags:\n      - bookmarks\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`.\u003cbr /\u003e\n        Users that can't: `Harvester`, `anyone`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '201':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 201\n                  message: Created\n                data:\n                  id: 45\n                  audio_recording_id: 54\n                  name: name 45\n                  category: category 45\n                  description: description 45\n                  offset_seconds: 4.0\n                  created_at: '2020-01-02T03:04:05.677Z'\n                  creator_id: 1\n                  updater_id: \n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  description_html: \"\u003cp\u003edescription 45\u003c/p\u003e\\n\"\n                  description_html_tagline: description 45\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      \"$ref\": \"#/components/schemas/bookmark\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/bookmark\"\n    get:\n      summary: list bookmarks\n      security:\n      - auth_token_header: []\n      parameters: []\n      tags:\n      - bookmarks\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`.\u003cbr /\u003e\n        Users that can't: `Harvester`, `anyone`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                  sorting:\n                    order_by: created_at\n                    direction: desc\n                  paging:\n                    page: 1\n                    items: 25\n                    total: 1\n                    max_page: 1\n                    current: http://localhost:3000/bookmarks?direction=desc\u0026items=25\u0026order_by=created_at\u0026page=1\n                    previous: \n                    next: \n                data:\n                - id: 46\n                  audio_recording_id: 55\n                  name: name 46\n                  category: category 46\n                  description: description 46\n                  offset_seconds: 4.0\n                  created_at: '2020-01-02T03:04:05.677Z'\n                  creator_id: 1\n                  updater_id: \n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  description_html: \"\u003cp\u003edescription 46\u003c/p\u003e\\n\"\n                  description_html_tagline: description 46\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      type: array\n                      items:\n                        \"$ref\": \"#/components/schemas/bookmark\"\n  \"/bookmarks/new\":\n    get:\n      summary: new bookmark\n      security:\n      - auth_token_header: []\n      parameters: []\n      tags:\n      - bookmarks\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`.\u003cbr /\u003e\n        Users that can't: `Harvester`, `anyone`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                data:\n                  name: \n                  category: \n                  description: \n                  offset_seconds: \n  \"/bookmarks/filter\":\n    post:\n      summary: filter bookmark\n      security:\n      - auth_token_header: []\n      parameters: []\n      tags:\n      - bookmarks\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`.\u003cbr /\u003e\n        Users that can't: `Harvester`, `anyone`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                  sorting:\n                    order_by: created_at\n                    direction: desc\n                  paging:\n                    page: 1\n                    items: 25\n                    total: 1\n                    max_page: 1\n                    current: http://localhost:3000/bookmarks/filter?direction=desc\u0026items=25\u0026order_by=created_at\u0026page=1\n                    previous: \n                    next: \n                data:\n                - id: 48\n                  audio_recording_id: 57\n                  name: name 48\n                  category: category 48\n                  description: description 48\n                  offset_seconds: 4.0\n                  created_at: '2020-01-02T03:04:05.677Z'\n                  creator_id: 1\n                  updater_id: \n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  description_html: \"\u003cp\u003edescription 48\u003c/p\u003e\\n\"\n                  description_html_tagline: description 48\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      type: array\n                      items:\n                        \"$ref\": \"#/components/schemas/bookmark\"\n  \"/bookmarks/{id}\":\n    put:\n      summary: update bookmark\n      security:\n      - auth_token_header: []\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n      tags:\n      - bookmarks\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`.\u003cbr /\u003e\n        Users that can't: `Harvester`, `anyone`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                data:\n                  id: 49\n                  audio_recording_id: 59\n                  name: name 50\n                  category: category 50\n                  description: description 50\n                  offset_seconds: 4.0\n                  created_at: '2020-01-02T03:04:05.677Z'\n                  creator_id: 1\n                  updater_id: 1\n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  description_html: \"\u003cp\u003edescription 50\u003c/p\u003e\\n\"\n                  description_html_tagline: description 50\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      \"$ref\": \"#/components/schemas/bookmark\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/bookmark\"\n    patch:\n      summary: update bookmark\n      security:\n      - auth_token_header: []\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n      tags:\n      - bookmarks\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`.\u003cbr /\u003e\n        Users that can't: `Harvester`, `anyone`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                data:\n                  id: 50\n                  audio_recording_id: 61\n                  name: name 52\n                  category: category 52\n                  description: description 52\n                  offset_seconds: 4.0\n                  created_at: '2020-01-02T03:04:05.677Z'\n                  creator_id: 1\n                  updater_id: 1\n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  description_html: \"\u003cp\u003edescription 52\u003c/p\u003e\\n\"\n                  description_html_tagline: description 52\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      \"$ref\": \"#/components/schemas/bookmark\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/bookmark\"\n    delete:\n      summary: delete bookmark\n      security:\n      - auth_token_header: []\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n      tags:\n      - bookmarks\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`.\u003cbr /\u003e\n        Users that can't: `Harvester`, `anyone`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '204':\n          description: successful\n    get:\n      summary: show bookmark\n      security:\n      - auth_token_header: []\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n      tags:\n      - bookmarks\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`.\u003cbr /\u003e\n        Users that can't: `Harvester`, `anyone`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                data:\n                  id: 52\n                  audio_recording_id: 63\n                  name: name 54\n                  category: category 54\n                  description: description 54\n                  offset_seconds: 4.0\n                  created_at: '2020-01-02T03:04:05.677Z'\n                  creator_id: 1\n                  updater_id: \n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  description_html: \"\u003cp\u003edescription 54\u003c/p\u003e\\n\"\n                  description_html_tagline: description 54\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      \"$ref\": \"#/components/schemas/bookmark\"\n  \"/sites/orphans/filter\":\n    post:\n      summary: filter site\n      security:\n      - auth_token_header: []\n      parameters: []\n      tags:\n      - sites\n      description: |2\n\n        Users that can invoke this route: `Admin`.\u003cbr /\u003e\n        Users that can't: `Harvester`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                  sorting:\n                    order_by: name\n                    direction: asc\n                  paging:\n                    page: 1\n                    items: 25\n                    total: 1\n                    max_page: 1\n                    current: http://localhost:3000/sites/orphans?direction=asc\u0026items=25\u0026order_by=name\u0026page=1\n                    previous: \n                    next: \n                data:\n                - id: 66\n                  name: site name 68\n                  description: site description 68\n                  notes: note number 68\n                  creator_id: 275\n                  created_at: '2020-01-02T03:04:05.677Z'\n                  updater_id: \n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  deleter_id: \n                  deleted_at: \n                  region_id: \n                  custom_latitude: \n                  custom_longitude: \n                  location_obfuscated: true\n                  project_ids: []\n                  timezone_information: \n                  image_urls:\n                  - size: extralarge\n                    url: \"/images/site/site_span4.png\"\n                    width: 300\n                    height: 300\n                  - size: large\n                    url: \"/images/site/site_span3.png\"\n                    width: 220\n                    height: 220\n                  - size: medium\n                    url: \"/images/site/site_span2.png\"\n                    width: 140\n                    height: 140\n                  - size: small\n                    url: \"/images/site/site_span1.png\"\n                    width: 60\n                    height: 60\n                  - size: tiny\n                    url: \"/images/site/site_spanhalf.png\"\n                    width: 30\n                    height: 30\n                  description_html: \"\u003cp\u003esite description 68\u003c/p\u003e\\n\"\n                  description_html_tagline: site description 68\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      type: array\n                      items:\n                        \"$ref\": \"#/components/schemas/site\"\n  \"/sites/orphans\":\n    get:\n      summary: list sites\n      security:\n      - auth_token_header: []\n      parameters: []\n      tags:\n      - sites\n      description: |2\n\n        Users that can invoke this route: `Admin`.\u003cbr /\u003e\n        Users that can't: `Harvester`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                  sorting:\n                    order_by: name\n                    direction: asc\n                  paging:\n                    page: 1\n                    items: 25\n                    total: 1\n                    max_page: 1\n                    current: http://localhost:3000/sites/orphans?direction=asc\u0026items=25\u0026order_by=name\u0026page=1\n                    previous: \n                    next: \n                data:\n                - id: 68\n                  name: site name 70\n                  description: site description 70\n                  notes: note number 70\n                  creator_id: 280\n                  created_at: '2020-01-02T03:04:05.677Z'\n                  updater_id: \n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  deleter_id: \n                  deleted_at: \n                  region_id: \n                  custom_latitude: \n                  custom_longitude: \n                  location_obfuscated: true\n                  project_ids: []\n                  timezone_information: \n                  image_urls:\n                  - size: extralarge\n                    url: \"/images/site/site_span4.png\"\n                    width: 300\n                    height: 300\n                  - size: large\n                    url: \"/images/site/site_span3.png\"\n                    width: 220\n                    height: 220\n                  - size: medium\n                    url: \"/images/site/site_span2.png\"\n                    width: 140\n                    height: 140\n                  - size: small\n                    url: \"/images/site/site_span1.png\"\n                    width: 60\n                    height: 60\n                  - size: tiny\n                    url: \"/images/site/site_spanhalf.png\"\n                    width: 30\n                    height: 30\n                  description_html: \"\u003cp\u003esite description 70\u003c/p\u003e\\n\"\n                  description_html_tagline: site description 70\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      type: array\n                      items:\n                        \"$ref\": \"#/components/schemas/site\"\n  \"/saved_searches/new\":\n    get:\n      summary: new saved_search\n      security:\n      - auth_token_header: []\n      parameters: []\n      tags:\n      - saved_searches\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`.\u003cbr /\u003e\n        Users that can't: `Harvester`, `anyone`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                data: {}\n  \"/saved_searches/filter\":\n    post:\n      summary: filter saved_search\n      security:\n      - auth_token_header: []\n      parameters: []\n      tags:\n      - saved_searches\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                  sorting:\n                    order_by: created_at\n                    direction: desc\n                  paging:\n                    page: 1\n                    items: 25\n                    total: 1\n                    max_page: 1\n                    current: http://localhost:3000/saved_searches/filter?direction=desc\u0026items=25\u0026order_by=created_at\u0026page=1\n                    previous: \n                    next: \n                data:\n                - id: 55\n                  name: saved search name 55\n                  description: saved search description 55\n                  stored_query:\n                    uuid:\n                      eq: blah blah\n                  created_at: '2020-01-02T03:04:05.677Z'\n                  creator_id: 286\n                  deleter_id: \n                  deleted_at: \n                  project_ids:\n                  - 70\n                  analysis_job_ids:\n                  - 55\n                  description_html: \"\u003cp\u003esaved search description 55\u003c/p\u003e\\n\"\n                  description_html_tagline: saved search description 55\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      type: array\n                      items:\n                        \"$ref\": \"#/components/schemas/saved_search\"\n  \"/saved_searches/{id}\":\n    put:\n      summary: can't update saved_search\n      security:\n      - auth_token_header: []\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n      tags:\n      - saved_searches\n      description: |2\n\n        Users that can invoke this route: `Admin`.\u003cbr /\u003e\n        Users that can't: `Harvester`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '404':\n          description: not found\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 404\n                  message: Not Found\n                  error:\n                    details: Could not find the requested page.\n                    info:\n                      original_route: saved_searches/56\n                      original_http_method: PUT\n                data: \n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/saved_search\"\n    delete:\n      summary: delete saved_search\n      security:\n      - auth_token_header: []\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n      tags:\n      - saved_searches\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '204':\n          description: successful\n    patch:\n      summary: can't update saved_search\n      security:\n      - auth_token_header: []\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n      tags:\n      - saved_searches\n      description: |2\n\n        Users that can invoke this route: `Admin`.\u003cbr /\u003e\n        Users that can't: `Harvester`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '404':\n          description: not found\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 404\n                  message: Not Found\n                  error:\n                    details: Could not find the requested page.\n                    info:\n                      original_route: saved_searches/58\n                      original_http_method: PATCH\n                data: \n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/saved_search\"\n    get:\n      summary: show saved_search\n      security:\n      - auth_token_header: []\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n      tags:\n      - saved_searches\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                data:\n                  id: 59\n                  name: saved search name 61\n                  description: saved search description 61\n                  stored_query:\n                    uuid:\n                      eq: blah blah\n                  created_at: '2020-01-02T03:04:05.677Z'\n                  creator_id: 304\n                  deleter_id: \n                  deleted_at: \n                  project_ids:\n                  - 74\n                  analysis_job_ids:\n                  - 59\n                  description_html: \"\u003cp\u003esaved search description 61\u003c/p\u003e\\n\"\n                  description_html_tagline: saved search description 61\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      \"$ref\": \"#/components/schemas/saved_search\"\n  \"/saved_searches\":\n    get:\n      summary: list saved_searches\n      security:\n      - auth_token_header: []\n      parameters: []\n      tags:\n      - saved_searches\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                  sorting:\n                    order_by: created_at\n                    direction: desc\n                  paging:\n                    page: 1\n                    items: 25\n                    total: 1\n                    max_page: 1\n                    current: http://localhost:3000/saved_searches?direction=desc\u0026items=25\u0026order_by=created_at\u0026page=1\n                    previous: \n                    next: \n                data:\n                - id: 60\n                  name: saved search name 62\n                  description: saved search description 62\n                  stored_query:\n                    uuid:\n                      eq: blah blah\n                  created_at: '2020-01-02T03:04:05.677Z'\n                  creator_id: 308\n                  deleter_id: \n                  deleted_at: \n                  project_ids:\n                  - 75\n                  analysis_job_ids:\n                  - 60\n                  description_html: \"\u003cp\u003esaved search description 62\u003c/p\u003e\\n\"\n                  description_html_tagline: saved search description 62\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      type: array\n                      items:\n                        \"$ref\": \"#/components/schemas/saved_search\"\n    post:\n      summary: create saved_search\n      security:\n      - auth_token_header: []\n      parameters: []\n      tags:\n      - saved_searches\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '201':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 201\n                  message: Created\n                data:\n                  id: 62\n                  name: saved search name 64\n                  description: saved search description 64\n                  stored_query:\n                    uuid:\n                      eq: blah blah\n                  created_at: '2020-01-02T03:04:05.677Z'\n                  creator_id: 1\n                  deleter_id: \n                  deleted_at: \n                  project_ids: []\n                  analysis_job_ids: []\n                  description_html: \"\u003cp\u003esaved search description 64\u003c/p\u003e\\n\"\n                  description_html_tagline: saved search description 64\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      \"$ref\": \"#/components/schemas/saved_search\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/saved_search\"\n  \"/regions\":\n    post:\n      summary: create region\n      security:\n      - auth_token_header: []\n      parameters: []\n      tags:\n      - regions\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '201':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 201\n                  message: Created\n                data:\n                  id: 72\n                  name: region name 74\n                  description: site **description** 74\n                  notes:\n                    region_note_74: 74\n                  creator_id: 1\n                  created_at: '2020-01-02T03:04:05.677Z'\n                  updater_id: \n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  deleter_id: \n                  deleted_at: \n                  project_id: 78\n                  site_ids: []\n                  description_html: \"\u003cp\u003esite \u003cstrong\u003edescription\u003c/strong\u003e 74\u003c/p\u003e\\n\"\n                  description_html_tagline: site \u003cstrong\u003edescription\u003c/strong\u003e 74\n                  image_urls: []\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      \"$ref\": \"#/components/schemas/region\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/region\"\n    get:\n      summary: list regions\n      security:\n      - auth_token_header: []\n      parameters: []\n      tags:\n      - regions\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                  sorting:\n                    order_by: name\n                    direction: asc\n                  paging:\n                    page: 1\n                    items: 25\n                    total: 1\n                    max_page: 1\n                    current: http://localhost:3000/regions?direction=asc\u0026items=25\u0026order_by=name\u0026page=1\n                    previous: \n                    next: \n                data:\n                - id: 73\n                  name: region name 75\n                  description: site **description** 75\n                  notes:\n                    region_note_75: 75\n                  creator_id: 322\n                  created_at: '2020-01-02T03:04:05.677Z'\n                  updater_id: \n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  deleter_id: \n                  deleted_at: \n                  project_id: 79\n                  site_ids:\n                  - 78\n                  description_html: \"\u003cp\u003esite \u003cstrong\u003edescription\u003c/strong\u003e 75\u003c/p\u003e\\n\"\n                  description_html_tagline: site \u003cstrong\u003edescription\u003c/strong\u003e 75\n                  image_urls: []\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      type: array\n                      items:\n                        \"$ref\": \"#/components/schemas/region\"\n  \"/regions/filter\":\n    post:\n      summary: filter region\n      security:\n      - auth_token_header: []\n      parameters: []\n      tags:\n      - regions\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                  sorting:\n                    order_by: name\n                    direction: asc\n                  paging:\n                    page: 1\n                    items: 25\n                    total: 1\n                    max_page: 1\n                    current: http://localhost:3000/regions/filter?direction=asc\u0026items=25\u0026order_by=name\u0026page=1\n                    previous: \n                    next: \n                data:\n                - id: 74\n                  name: region name 76\n                  description: site **description** 76\n                  notes:\n                    region_note_76: 76\n                  creator_id: 326\n                  created_at: '2020-01-02T03:04:05.677Z'\n                  updater_id: \n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  deleter_id: \n                  deleted_at: \n                  project_id: 80\n                  site_ids:\n                  - 79\n                  description_html: \"\u003cp\u003esite \u003cstrong\u003edescription\u003c/strong\u003e 76\u003c/p\u003e\\n\"\n                  description_html_tagline: site \u003cstrong\u003edescription\u003c/strong\u003e 76\n                  image_urls: []\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      type: array\n                      items:\n                        \"$ref\": \"#/components/schemas/region\"\n  \"/regions/{id}\":\n    put:\n      summary: update region\n      security:\n      - auth_token_header: []\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n      tags:\n      - regions\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                data:\n                  id: 75\n                  name: region name 78\n                  description: site **description** 78\n                  notes:\n                    region_note_78: 78\n                  creator_id: 330\n                  created_at: '2020-01-02T03:04:05.677Z'\n                  updater_id: 1\n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  deleter_id: \n                  deleted_at: \n                  project_id: 82\n                  site_ids:\n                  - 80\n                  description_html: \"\u003cp\u003esite \u003cstrong\u003edescription\u003c/strong\u003e 78\u003c/p\u003e\\n\"\n                  description_html_tagline: site \u003cstrong\u003edescription\u003c/strong\u003e 78\n                  image_urls: []\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      \"$ref\": \"#/components/schemas/region\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/region\"\n    get:\n      summary: show region\n      security:\n      - auth_token_header: []\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n      tags:\n      - regions\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                data:\n                  id: 76\n                  name: region name 79\n                  description: site **description** 79\n                  notes:\n                    region_note_79: 79\n                  creator_id: 336\n                  created_at: '2020-01-02T03:04:05.677Z'\n                  updater_id: \n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  deleter_id: \n                  deleted_at: \n                  project_id: 83\n                  site_ids:\n                  - 81\n                  description_html: \"\u003cp\u003esite \u003cstrong\u003edescription\u003c/strong\u003e 79\u003c/p\u003e\\n\"\n                  description_html_tagline: site \u003cstrong\u003edescription\u003c/strong\u003e 79\n                  image_urls: []\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      \"$ref\": \"#/components/schemas/region\"\n    patch:\n      summary: update region\n      security:\n      - auth_token_header: []\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n      tags:\n      - regions\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                data:\n                  id: 77\n                  name: region name 81\n                  description: site **description** 81\n                  notes:\n                    region_note_81: 81\n                  creator_id: 340\n                  created_at: '2020-01-02T03:04:05.677Z'\n                  updater_id: 1\n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  deleter_id: \n                  deleted_at: \n                  project_id: 85\n                  site_ids:\n                  - 82\n                  description_html: \"\u003cp\u003esite \u003cstrong\u003edescription\u003c/strong\u003e 81\u003c/p\u003e\\n\"\n                  description_html_tagline: site \u003cstrong\u003edescription\u003c/strong\u003e 81\n                  image_urls: []\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      \"$ref\": \"#/components/schemas/region\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/region\"\n    delete:\n      summary: delete region\n      security:\n      - auth_token_header: []\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n      tags:\n      - regions\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '204':\n          description: successful\n  \"/regions/new\":\n    get:\n      summary: new region\n      security:\n      - auth_token_header: []\n      parameters: []\n      tags:\n      - regions\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                data:\n                  name: \n                  description: \n                  notes: \n                  project_id: \n  \"/analysis_jobs\":\n    get:\n      summary: list analysis_jobs\n      security:\n      - auth_token_header: []\n      parameters: []\n      tags:\n      - analysis_jobs\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                  sorting:\n                    order_by: updated_at\n                    direction: desc\n                  paging:\n                    page: 1\n                    items: 25\n                    total: 1\n                    max_page: 1\n                    current: http://localhost:3000/analysis_jobs?direction=desc\u0026items=25\u0026order_by=updated_at\u0026page=1\n                    previous: \n                    next: \n                data:\n                - id: 70\n                  name: job name 70\n                  description: job description 70\n                  annotation_name: \n                  custom_settings: custom settings 70\n                  creator_id: 355\n                  updater_id: \n                  deleter_id: \n                  created_at: '2020-01-02T03:04:05.677Z'\n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  deleted_at: \n                  script_id: 70\n                  saved_search_id: 71\n                  started_at: '2020-01-02T03:04:05.677Z'\n                  overall_status: new\n                  overall_status_modified_at: '2020-01-02T03:04:05.677Z'\n                  overall_progress:\n                    new: 0\n                    queued: 0\n                    working: 0\n                    successful: 0\n                    failed: 0\n                    timed_out: 0\n                    cancelling: 0\n                    cancelled: 0\n                    total: 0\n                  overall_progress_modified_at: '2020-01-02T03:04:05.677Z'\n                  overall_count: 0\n                  overall_duration_seconds: 0.0\n                  overall_data_length_bytes: 0\n                  description_html: \"\u003cp\u003ejob description 70\u003c/p\u003e\\n\"\n                  description_html_tagline: job description 70\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      type: array\n                      items:\n                        \"$ref\": \"#/components/schemas/analysis_job\"\n    post:\n      summary: create analysis_job\n      security:\n      - auth_token_header: []\n      parameters: []\n      tags:\n      - analysis_jobs\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '201':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 201\n                  message: Created\n                data:\n                  id: 72\n                  name: job name 72\n                  description: job description 72\n                  annotation_name: \n                  custom_settings: custom settings 72\n                  creator_id: 1\n                  updater_id: 1\n                  deleter_id: \n                  created_at: '2020-01-02T03:04:05.677Z'\n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  deleted_at: \n                  script_id: 72\n                  saved_search_id: 73\n                  started_at: '2020-01-02T03:04:05.677Z'\n                  overall_status: completed\n                  overall_status_modified_at: '2020-01-02T03:04:05.677Z'\n                  overall_progress:\n                    new: 0\n                    queued: 0\n                    working: 0\n                    successful: 0\n                    failed: 0\n                    timed_out: 0\n                    cancelling: 0\n                    cancelled: 0\n                    total: 0\n                  overall_progress_modified_at: '2020-01-02T03:04:05.677Z'\n                  overall_count: 0\n                  overall_duration_seconds: 0.0\n                  overall_data_length_bytes: 0\n                  description_html: \"\u003cp\u003ejob description 72\u003c/p\u003e\\n\"\n                  description_html_tagline: job description 72\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      \"$ref\": \"#/components/schemas/analysis_job\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/analysis_job\"\n  \"/analysis_jobs/{id}\":\n    delete:\n      summary: delete analysis_job\n      security:\n      - auth_token_header: []\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n      tags:\n      - analysis_jobs\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '204':\n          description: successful\n    get:\n      summary: show analysis_job\n      security:\n      - auth_token_header: []\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n      tags:\n      - analysis_jobs\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                data:\n                  id: 74\n                  name: job name 74\n                  description: job description 74\n                  annotation_name: \n                  custom_settings: custom settings 74\n                  creator_id: 370\n                  updater_id: \n                  deleter_id: \n                  created_at: '2020-01-02T03:04:05.677Z'\n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  deleted_at: \n                  script_id: 74\n                  saved_search_id: 75\n                  started_at: '2020-01-02T03:04:05.677Z'\n                  overall_status: completed\n                  overall_status_modified_at: '2020-01-02T03:04:05.677Z'\n                  overall_progress:\n                    new: 0\n                    queued: 0\n                    working: 0\n                    successful: 0\n                    failed: 0\n                    timed_out: 0\n                    cancelling: 0\n                    cancelled: 0\n                    total: 0\n                  overall_progress_modified_at: '2020-01-02T03:04:05.677Z'\n                  overall_count: 0\n                  overall_duration_seconds: 0.0\n                  overall_data_length_bytes: 0\n                  description_html: \"\u003cp\u003ejob description 74\u003c/p\u003e\\n\"\n                  description_html_tagline: job description 74\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      \"$ref\": \"#/components/schemas/analysis_job\"\n    patch:\n      summary: update analysis_job\n      security:\n      - auth_token_header: []\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n      tags:\n      - analysis_jobs\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                data:\n                  id: 75\n                  name: job name 76\n                  description: job description 76\n                  annotation_name: \n                  custom_settings: custom settings 75\n                  creator_id: 374\n                  updater_id: 1\n                  deleter_id: \n                  created_at: '2020-01-02T03:04:05.677Z'\n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  deleted_at: \n                  script_id: 75\n                  saved_search_id: 76\n                  started_at: '2020-01-02T03:04:05.677Z'\n                  overall_status: completed\n                  overall_status_modified_at: '2020-01-02T03:04:05.677Z'\n                  overall_progress:\n                    new: 0\n                    queued: 0\n                    working: 0\n                    successful: 0\n                    failed: 0\n                    timed_out: 0\n                    cancelling: 0\n                    cancelled: 0\n                    total: 0\n                  overall_progress_modified_at: '2020-01-02T03:04:05.677Z'\n                  overall_count: 0\n                  overall_duration_seconds: 0.0\n                  overall_data_length_bytes: 0\n                  description_html: \"\u003cp\u003ejob description 76\u003c/p\u003e\\n\"\n                  description_html_tagline: job description 76\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      \"$ref\": \"#/components/schemas/analysis_job\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/analysis_job\"\n    put:\n      summary: update analysis_job\n      security:\n      - auth_token_header: []\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n      tags:\n      - analysis_jobs\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                data:\n                  id: 76\n                  name: job name 78\n                  description: job description 78\n                  annotation_name: \n                  custom_settings: custom settings 77\n                  creator_id: 381\n                  updater_id: 1\n                  deleter_id: \n                  created_at: '2020-01-02T03:04:05.677Z'\n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  deleted_at: \n                  script_id: 77\n                  saved_search_id: 78\n                  started_at: '2020-01-02T03:04:05.677Z'\n                  overall_status: completed\n                  overall_status_modified_at: '2020-01-02T03:04:05.677Z'\n                  overall_progress:\n                    new: 0\n                    queued: 0\n                    working: 0\n                    successful: 0\n                    failed: 0\n                    timed_out: 0\n                    cancelling: 0\n                    cancelled: 0\n                    total: 0\n                  overall_progress_modified_at: '2020-01-02T03:04:05.677Z'\n                  overall_count: 0\n                  overall_duration_seconds: 0.0\n                  overall_data_length_bytes: 0\n                  description_html: \"\u003cp\u003ejob description 78\u003c/p\u003e\\n\"\n                  description_html_tagline: job description 78\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      \"$ref\": \"#/components/schemas/analysis_job\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/analysis_job\"\n  \"/analysis_jobs/new\":\n    get:\n      summary: new analysis_job\n      security:\n      - auth_token_header: []\n      parameters: []\n      tags:\n      - analysis_jobs\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                data:\n                  annotation_name: \n                  custom_settings: \n  \"/analysis_jobs/filter\":\n    post:\n      summary: filter analysis_job\n      security:\n      - auth_token_header: []\n      parameters: []\n      tags:\n      - analysis_jobs\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                  sorting:\n                    order_by: updated_at\n                    direction: desc\n                  paging:\n                    page: 1\n                    items: 25\n                    total: 1\n                    max_page: 1\n                    current: http://localhost:3000/analysis_jobs/filter?direction=desc\u0026items=25\u0026order_by=updated_at\u0026page=1\n                    previous: \n                    next: \n                data:\n                - id: 78\n                  name: job name 80\n                  description: job description 80\n                  annotation_name: \n                  custom_settings: custom settings 80\n                  creator_id: 392\n                  updater_id: \n                  deleter_id: \n                  created_at: '2020-01-02T03:04:05.677Z'\n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  deleted_at: \n                  script_id: 80\n                  saved_search_id: 81\n                  started_at: '2020-01-02T03:04:05.677Z'\n                  overall_status: new\n                  overall_status_modified_at: '2020-01-02T03:04:05.677Z'\n                  overall_progress:\n                    new: 0\n                    queued: 0\n                    working: 0\n                    successful: 0\n                    failed: 0\n                    timed_out: 0\n                    cancelling: 0\n                    cancelled: 0\n                    total: 0\n                  overall_progress_modified_at: '2020-01-02T03:04:05.677Z'\n                  overall_count: 0\n                  overall_duration_seconds: 0.0\n                  overall_data_length_bytes: 0\n                  description_html: \"\u003cp\u003ejob description 80\u003c/p\u003e\\n\"\n                  description_html_tagline: job description 80\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      type: array\n                      items:\n                        \"$ref\": \"#/components/schemas/analysis_job\"\n  \"/datasets\":\n    get:\n      summary: list datasets\n      security:\n      - auth_token_header: []\n      parameters: []\n      tags:\n      - datasets\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                  sorting:\n                    order_by: name\n                    direction: asc\n                  paging:\n                    page: 1\n                    items: 25\n                    total: 1\n                    max_page: 1\n                    current: http://localhost:3000/datasets?direction=asc\u0026items=25\u0026order_by=name\u0026page=1\n                    previous: \n                    next: \n                data:\n                - id: 79\n                  name: gen_dataset_name78\n                  description: dataset description 78\n                  created_at: '2020-01-02T03:04:05.677Z'\n                  creator_id: 395\n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  updater_id: \n                  description_html: \"\u003cp\u003edataset description 78\u003c/p\u003e\\n\"\n                  description_html_tagline: dataset description 78\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      type: array\n                      items:\n                        \"$ref\": \"#/components/schemas/dataset\"\n    post:\n      summary: create dataset\n      security:\n      - auth_token_header: []\n      parameters: []\n      tags:\n      - datasets\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`.\u003cbr /\u003e\n        Users that can't: `Harvester`, `anyone`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '201':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 201\n                  message: Created\n                data:\n                  id: 81\n                  name: gen_dataset_name80\n                  description: dataset description 80\n                  created_at: '2020-01-02T03:04:05.677Z'\n                  creator_id: 1\n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  updater_id: \n                  description_html: \"\u003cp\u003edataset description 80\u003c/p\u003e\\n\"\n                  description_html_tagline: dataset description 80\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      \"$ref\": \"#/components/schemas/dataset\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/dataset\"\n  \"/datasets/{id}\":\n    get:\n      summary: show dataset\n      security:\n      - auth_token_header: []\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n      tags:\n      - datasets\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                data:\n                  id: 82\n                  name: gen_dataset_name81\n                  description: dataset description 81\n                  created_at: '2020-01-02T03:04:05.677Z'\n                  creator_id: 404\n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  updater_id: \n                  description_html: \"\u003cp\u003edataset description 81\u003c/p\u003e\\n\"\n                  description_html_tagline: dataset description 81\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      \"$ref\": \"#/components/schemas/dataset\"\n    patch:\n      summary: update dataset\n      security:\n      - auth_token_header: []\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n      tags:\n      - datasets\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                data:\n                  id: 83\n                  name: gen_dataset_name83\n                  description: dataset description 83\n                  created_at: '2020-01-02T03:04:05.677Z'\n                  creator_id: 408\n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  updater_id: 1\n                  description_html: \"\u003cp\u003edataset description 83\u003c/p\u003e\\n\"\n                  description_html_tagline: dataset description 83\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      \"$ref\": \"#/components/schemas/dataset\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/dataset\"\n    put:\n      summary: update dataset\n      security:\n      - auth_token_header: []\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n      tags:\n      - datasets\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                data:\n                  id: 84\n                  name: gen_dataset_name85\n                  description: dataset description 85\n                  created_at: '2020-01-02T03:04:05.677Z'\n                  creator_id: 413\n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  updater_id: 1\n                  description_html: \"\u003cp\u003edataset description 85\u003c/p\u003e\\n\"\n                  description_html_tagline: dataset description 85\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      \"$ref\": \"#/components/schemas/dataset\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/dataset\"\n    delete:\n      summary: can't delete a dataset\n      security:\n      - auth_token_header: []\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n      tags:\n      - datasets\n      description: |2\n\n        Users that can invoke this route: `Admin`.\u003cbr /\u003e\n        Users that can't: `Harvester`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '404':\n          description: not found\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 404\n                  message: Not Found\n                  error:\n                    details: Could not find the requested page.\n                    info:\n                      original_route: datasets/85\n                      original_http_method: DELETE\n                data: \n  \"/datasets/new\":\n    get:\n      summary: new dataset\n      security:\n      - auth_token_header: []\n      parameters: []\n      tags:\n      - datasets\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                data:\n                  name: \n                  description: \n  \"/datasets/filter\":\n    post:\n      summary: filter dataset\n      security:\n      - auth_token_header: []\n      parameters: []\n      tags:\n      - datasets\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                  sorting:\n                    order_by: name\n                    direction: asc\n                  paging:\n                    page: 1\n                    items: 25\n                    total: 1\n                    max_page: 1\n                    current: http://localhost:3000/datasets/filter?direction=asc\u0026items=25\u0026order_by=name\u0026page=1\n                    previous: \n                    next: \n                data:\n                - id: 87\n                  name: gen_dataset_name88\n                  description: dataset description 88\n                  created_at: '2020-01-02T03:04:05.677Z'\n                  creator_id: 426\n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  updater_id: \n                  description_html: \"\u003cp\u003edataset description 88\u003c/p\u003e\\n\"\n                  description_html_tagline: dataset description 88\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      type: array\n                      items:\n                        \"$ref\": \"#/components/schemas/dataset\"\n  \"/projects/{project_id}/sites/filter\":\n    post:\n      summary: filter site\n      security:\n      - auth_token_header: []\n      parameters:\n      - name: project_id\n        in: path\n        description: project_id\n        required: true\n        schema:\n          type: integer\n      tags:\n      - sites\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                  sorting:\n                    order_by: name\n                    direction: asc\n                  paging:\n                    page: 1\n                    items: 25\n                    total: 1\n                    max_page: 1\n                    current: http://localhost:3000/projects/104/sites/filter?direction=asc\u0026items=25\u0026order_by=name\u0026page=1\n                    previous: \n                    next: \n                data:\n                - id: 101\n                  name: site name 103\n                  description: site description 103\n                  notes: note number 103\n                  creator_id: 430\n                  created_at: '2020-01-02T03:04:05.677Z'\n                  updater_id: \n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  deleter_id: \n                  deleted_at: \n                  region_id: 96\n                  custom_latitude: -27.541535\n                  custom_longitude: 135.226695\n                  location_obfuscated: false\n                  project_ids:\n                  - 104\n                  timezone_information: \n                  image_urls:\n                  - size: extralarge\n                    url: \"/images/site/site_span4.png\"\n                    width: 300\n                    height: 300\n                  - size: large\n                    url: \"/images/site/site_span3.png\"\n                    width: 220\n                    height: 220\n                  - size: medium\n                    url: \"/images/site/site_span2.png\"\n                    width: 140\n                    height: 140\n                  - size: small\n                    url: \"/images/site/site_span1.png\"\n                    width: 60\n                    height: 60\n                  - size: tiny\n                    url: \"/images/site/site_spanhalf.png\"\n                    width: 30\n                    height: 30\n                  description_html: \"\u003cp\u003esite description 103\u003c/p\u003e\\n\"\n                  description_html_tagline: site description 103\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      type: array\n                      items:\n                        \"$ref\": \"#/components/schemas/site\"\n  \"/projects/{project_id}/sites/new\":\n    get:\n      summary: new site\n      security:\n      - auth_token_header: []\n      parameters:\n      - name: project_id\n        in: path\n        description: project_id\n        required: true\n        schema:\n          type: integer\n      tags:\n      - sites\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                data:\n                  longitude: \n                  latitude: \n                  notes: \n                  image: \n                  tzinfo_tz: \n                  rails_tz: \n  \"/projects/{project_id}/sites/{id}\":\n    put:\n      summary: update site\n      security:\n      - auth_token_header: []\n      parameters:\n      - name: project_id\n        in: path\n        description: project_id\n        required: true\n        schema:\n          type: integer\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n      tags:\n      - sites\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                data:\n                  id: 103\n                  name: site name 106\n                  description: site description 106\n                  notes: note number 106\n                  creator_id: 438\n                  created_at: '2020-01-02T03:04:05.677Z'\n                  updater_id: 1\n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  deleter_id: \n                  deleted_at: \n                  region_id: \n                  custom_latitude: 70.410525\n                  custom_longitude: -39.462093\n                  location_obfuscated: false\n                  project_ids:\n                  - 106\n                  timezone_information: \n                  image_urls:\n                  - size: extralarge\n                    url: \"/images/site/site_span4.png\"\n                    width: 300\n                    height: 300\n                  - size: large\n                    url: \"/images/site/site_span3.png\"\n                    width: 220\n                    height: 220\n                  - size: medium\n                    url: \"/images/site/site_span2.png\"\n                    width: 140\n                    height: 140\n                  - size: small\n                    url: \"/images/site/site_span1.png\"\n                    width: 60\n                    height: 60\n                  - size: tiny\n                    url: \"/images/site/site_spanhalf.png\"\n                    width: 30\n                    height: 30\n                  description_html: \"\u003cp\u003esite description 106\u003c/p\u003e\\n\"\n                  description_html_tagline: site description 106\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      \"$ref\": \"#/components/schemas/site\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/site\"\n    get:\n      summary: show site\n      security:\n      - auth_token_header: []\n      parameters:\n      - name: project_id\n        in: path\n        description: project_id\n        required: true\n        schema:\n          type: integer\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n      tags:\n      - sites\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                data:\n                  id: 104\n                  name: site name 107\n                  description: site description 107\n                  notes: note number 107\n                  creator_id: 443\n                  created_at: '2020-01-02T03:04:05.677Z'\n                  updater_id: \n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  deleter_id: \n                  deleted_at: \n                  region_id: 99\n                  custom_latitude: 11.054124\n                  custom_longitude: -64.915227\n                  location_obfuscated: false\n                  project_ids:\n                  - 107\n                  timezone_information: \n                  image_urls:\n                  - size: extralarge\n                    url: \"/images/site/site_span4.png\"\n                    width: 300\n                    height: 300\n                  - size: large\n                    url: \"/images/site/site_span3.png\"\n                    width: 220\n                    height: 220\n                  - size: medium\n                    url: \"/images/site/site_span2.png\"\n                    width: 140\n                    height: 140\n                  - size: small\n                    url: \"/images/site/site_span1.png\"\n                    width: 60\n                    height: 60\n                  - size: tiny\n                    url: \"/images/site/site_spanhalf.png\"\n                    width: 30\n                    height: 30\n                  description_html: \"\u003cp\u003esite description 107\u003c/p\u003e\\n\"\n                  description_html_tagline: site description 107\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      \"$ref\": \"#/components/schemas/site\"\n    patch:\n      summary: update site\n      security:\n      - auth_token_header: []\n      parameters:\n      - name: project_id\n        in: path\n        description: project_id\n        required: true\n        schema:\n          type: integer\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n      tags:\n      - sites\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                data:\n                  id: 105\n                  name: site name 109\n                  description: site description 109\n                  notes: note number 109\n                  creator_id: 447\n                  created_at: '2020-01-02T03:04:05.677Z'\n                  updater_id: 1\n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  deleter_id: \n                  deleted_at: \n                  region_id: \n                  custom_latitude: 79.295398\n                  custom_longitude: 178.091513\n                  location_obfuscated: false\n                  project_ids:\n                  - 108\n                  timezone_information: \n                  image_urls:\n                  - size: extralarge\n                    url: \"/images/site/site_span4.png\"\n                    width: 300\n                    height: 300\n                  - size: large\n                    url: \"/images/site/site_span3.png\"\n                    width: 220\n                    height: 220\n                  - size: medium\n                    url: \"/images/site/site_span2.png\"\n                    width: 140\n                    height: 140\n                  - size: small\n                    url: \"/images/site/site_span1.png\"\n                    width: 60\n                    height: 60\n                  - size: tiny\n                    url: \"/images/site/site_spanhalf.png\"\n                    width: 30\n                    height: 30\n                  description_html: \"\u003cp\u003esite description 109\u003c/p\u003e\\n\"\n                  description_html_tagline: site description 109\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      \"$ref\": \"#/components/schemas/site\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/site\"\n    delete:\n      summary: delete site\n      security:\n      - auth_token_header: []\n      parameters:\n      - name: project_id\n        in: path\n        description: project_id\n        required: true\n        schema:\n          type: integer\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n      tags:\n      - sites\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '204':\n          description: successful\n  \"/projects/{project_id}/sites\":\n    post:\n      summary: create site\n      security:\n      - auth_token_header: []\n      parameters:\n      - name: project_id\n        in: path\n        description: project_id\n        required: true\n        schema:\n          type: integer\n      tags:\n      - sites\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '201':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 201\n                  message: Created\n                data:\n                  id: 108\n                  name: site name 112\n                  description: site description 112\n                  notes: note number 112\n                  creator_id: 1\n                  created_at: '2020-01-02T03:04:05.677Z'\n                  updater_id: \n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  deleter_id: \n                  deleted_at: \n                  region_id: \n                  custom_latitude: \n                  custom_longitude: \n                  location_obfuscated: false\n                  project_ids:\n                  - 110\n                  timezone_information: \n                  image_urls:\n                  - size: extralarge\n                    url: \"/images/site/site_span4.png\"\n                    width: 300\n                    height: 300\n                  - size: large\n                    url: \"/images/site/site_span3.png\"\n                    width: 220\n                    height: 220\n                  - size: medium\n                    url: \"/images/site/site_span2.png\"\n                    width: 140\n                    height: 140\n                  - size: small\n                    url: \"/images/site/site_span1.png\"\n                    width: 60\n                    height: 60\n                  - size: tiny\n                    url: \"/images/site/site_spanhalf.png\"\n                    width: 30\n                    height: 30\n                  description_html: \"\u003cp\u003esite description 112\u003c/p\u003e\\n\"\n                  description_html_tagline: site description 112\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      \"$ref\": \"#/components/schemas/site\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/site\"\n    get:\n      summary: list sites\n      security:\n      - auth_token_header: []\n      parameters:\n      - name: project_id\n        in: path\n        description: project_id\n        required: true\n        schema:\n          type: integer\n      tags:\n      - sites\n      description: |2\n\n        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.\u003cbr /\u003e\n        Users that can't: `Harvester`.\n\n        Note: accessing a list/index/filter endpoint may return no results due to project permissions\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              example:\n                meta:\n                  status: 200\n                  message: OK\n                  sorting:\n                    order_by: name\n                    direction: asc\n                  paging:\n                    page: 1\n                    items: 25\n                    total: 1\n                    max_page: 1\n                    current: http://localhost:3000/projects/111/sites?direction=asc\u0026items=25\u0026order_by=name\u0026page=1\n                    previous: \n                    next: \n                data:\n                - id: 109\n                  name: site name 113\n                  description: site description 113\n                  notes: note number 113\n                  creator_id: 461\n                  created_at: '2020-01-02T03:04:05.677Z'\n                  updater_id: \n                  updated_at: '2020-01-02T03:04:05.677Z'\n                  deleter_id: \n                  deleted_at: \n                  region_id: 103\n                  custom_latitude: 15.051496\n                  custom_longitude: 156.42637\n                  location_obfuscated: false\n                  project_ids:\n                  - 111\n                  timezone_information: \n                  image_urls:\n                  - size: extralarge\n                    url: \"/images/site/site_span4.png\"\n                    width: 300\n                    height: 300\n                  - size: large\n                    url: \"/images/site/site_span3.png\"\n                    width: 220\n                    height: 220\n                  - size: medium\n                    url: \"/images/site/site_span2.png\"\n                    width: 140\n                    height: 140\n                  - size: small\n                    url: \"/images/site/site_span1.png\"\n                    width: 60\n                    height: 60\n                  - size: tiny\n                    url: \"/images/site/site_spanhalf.png\"\n                    width: 30\n                    height: 30\n                  description_html: \"\u003cp\u003esite description 113\u003c/p\u003e\\n\"\n                  description_html_tagline: site description 113\n              schema:\n                allOf:\n                - \"$ref\": \"#/components/schemas/standard_response\"\n                - type: object\n                  properties:\n                    data:\n                      type: array\n                      items:\n                        \"$ref\": \"#/components/schemas/site\"\nservers:\n- url: \"{protocol}://{authority}\"\n  variables:\n    authority:\n      default: localhost:3000\n    protocol:\n      enum:\n      - http\n      - https\n      default: http\ncomponents:\n  securitySchemes:\n    auth_token_header:\n      type: apiKey\n      description: |\n        The api auth_token placed in the 'Authorization' header.\n        Example:\n\n        ```\n        Token token=\"xxxxxxxxxx\"\n        ```\n\n        Where the your auth_token is substituted into the placeholder.\n      in: header\n      name: Authorization\n      scheme: Token\n    auth_token_query_string:\n      type: apiKey\n      name: user_token\n      in: query_string\n  schemas:\n    id:\n      type: integer\n      minimum: 0\n      readOnly: true\n    nullableId:\n      type:\n      - integer\n      - 'null'\n      minimum: 0\n      readOnly: true\n    timezone_information:\n      anyOf:\n      - type: object\n        properties:\n          identifier_alt:\n            type:\n            - string\n            - 'null'\n          identifier:\n            type: string\n          friendly_identifier:\n            type: string\n          utc_offset:\n            type: string\n          utc_total_offset:\n            type: integer\n      - type: 'null'\n    image_urls:\n      type: array\n      items:\n        type: object\n        properties:\n          size:\n            type: string\n          url:\n            type: string\n            format: URI\n          width:\n            type: integer\n            nullable: true\n          height:\n            type: integer\n            nullable: true\n    permission_levels:\n      type: string\n      nullable: true\n      enum:\n      - owner\n      - writer\n      - reader\n      - \n    meta:\n      properties:\n        capabilities:\n          type: object\n          items:\n            type: object\n            properties:\n              can:\n                type:\n                - 'null'\n                - boolean\n              details:\n                type: string\n            required:\n            - can\n      type: object\n    meta_error:\n      type: object\n      properties:\n        error:\n          type: object\n        required:\n        - error\n    standard_response:\n      type: object\n      additionalProperties: false\n      properties:\n        meta:\n          \"$ref\": \"#/components/schemas/meta\"\n        data:\n          oneOf:\n          - type: array\n          - type: object\n      required:\n      - meta\n      - data\n    error_response:\n      type: object\n      additionalProperties: false\n      properties:\n        meta:\n          allOf:\n          - \"$ref\": \"#/components/schemas/meta\"\n          - \"$ref\": \"#/components/schemas/meta_error\"\n        data:\n          type: 'null'\n      required:\n      - meta\n      - data\n    cms_blob:\n      type: object\n      required:\n      - id\n      - site_id\n      - layout_id\n      - parent_id\n      - target_page_id\n      - label\n      - slug\n      - full_path\n      - content\n      - position\n      - children_count\n      - is_published\n      - created_at\n      - updated_at\n      - children\n      properties:\n        id:\n          \"$ref\": \"#/components/schemas/id\"\n        site_id:\n          \"$ref\": \"#/components/schemas/id\"\n        layout_id:\n          \"$ref\": \"#/components/schemas/id\"\n        parent_id:\n          \"$ref\": \"#/components/schemas/nullableId\"\n        target_page_id:\n          \"$ref\": \"#/components/schemas/nullableId\"\n        label:\n          type: string\n        slug:\n          type: string\n        full_path:\n          type: string\n          format: uri-reference\n        content:\n          type: string\n          format: html\n        position:\n          type: integer\n        children_count:\n          type: integer\n        is_published:\n          type: boolean\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        updated_at:\n          type:\n          - 'null'\n          - string\n          format: date-time\n          readOnly: true\n        children:\n          type: array\n          additionalItems: true\n          items:\n            type: object\n            properties:\n              label:\n                type: string\n              full_path:\n                type: string\n                format: uri-reference\n            additionalProperties: false\n      additionalProperties: false\n    stats:\n      type: object\n      required:\n      - summary\n      - recent\n      properties:\n        summary:\n          type: object\n          properties:\n            users_online:\n              type: integer\n            users_total:\n              type: integer\n            online_window_start:\n              type: string\n              format: date-time\n              readOnly: true\n            projects_total:\n              type: integer\n            regions_total:\n              type: integer\n            sites_total:\n              type: integer\n            annotations_total:\n              type: integer\n            annotations_total_duration:\n              type: number\n            annotations_recent:\n              type: integer\n            audio_recordings_total:\n              type: integer\n            audio_recordings_recent:\n              type: integer\n            audio_recordings_total_duration:\n              type: number\n            audio_recordings_total_size:\n              type: integer\n            tags_total:\n              type: integer\n            tags_applied_total:\n              type: integer\n            tags_applied_unique_total:\n              type: integer\n        recent:\n          type: object\n          properties:\n            audio_recording_ids:\n              type: array\n              items:\n                \"$ref\": \"#/components/schemas/id\"\n            audio_event_ids:\n              type: array\n              items:\n                \"$ref\": \"#/components/schemas/id\"\n      additionalProperties: false\n    project:\n      type: object\n      additionalProperties: false\n      properties:\n        id:\n          \"$ref\": \"#/components/schemas/id\"\n          readOnly: true\n        name:\n          type: string\n        description:\n          type:\n          - string\n          - 'null'\n        description_html:\n          type:\n          - string\n          - 'null'\n          readOnly: true\n        description_html_tagline:\n          type:\n          - string\n          - 'null'\n          readOnly: true\n        notes:\n          type: string\n        creator_id:\n          \"$ref\": \"#/components/schemas/id\"\n          readOnly: true\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        updater_id:\n          \"$ref\": \"#/components/schemas/nullableId\"\n          readOnly: true\n        updated_at:\n          type:\n          - 'null'\n          - string\n          format: date-time\n          readOnly: true\n        deleter_id:\n          \"$ref\": \"#/components/schemas/nullableId\"\n          readOnly: true\n        deleted_at:\n          type:\n          - 'null'\n          - string\n          format: date-time\n          readOnly: true\n        site_ids:\n          type: array\n          items:\n            \"$ref\": \"#/components/schemas/id\"\n            readOnly: true\n          readOnly: false\n        region_ids:\n          type: array\n          items:\n            \"$ref\": \"#/components/schemas/id\"\n            readOnly: true\n          readOnly: true\n        owner_ids:\n          type: array\n          items:\n            \"$ref\": \"#/components/schemas/id\"\n            readOnly: true\n          readOnly: true\n        image_urls:\n          \"$ref\": \"#/components/schemas/image_urls\"\n        access_level:\n          \"$ref\": \"#/components/schemas/permission_levels\"\n        allow_original_download:\n          \"$ref\": \"#/components/schemas/permission_levels\"\n      required:\n      - id\n      - name\n      - description\n      - description_html\n      - description_html_tagline\n      - notes\n      - creator_id\n      - created_at\n      - updater_id\n      - updated_at\n      - deleter_id\n      - deleted_at\n      - owner_ids\n      - site_ids\n      - region_ids\n      - image_urls\n      - allow_original_download\n    analysis_job:\n      type: object\n      additionalProperties: false\n      properties:\n        id:\n          \"$ref\": \"#/components/schemas/id\"\n          readOnly: true\n        name:\n          type: string\n        annotation_name:\n          type:\n          - string\n          - 'null'\n        description:\n          type:\n          - string\n          - 'null'\n        description_html:\n          type:\n          - string\n          - 'null'\n          readOnly: true\n        description_html_tagline:\n          type:\n          - string\n          - 'null'\n          readOnly: true\n        custom_settings:\n          type: string\n        script_id:\n          \"$ref\": \"#/components/schemas/id\"\n        saved_search_id:\n          \"$ref\": \"#/components/schemas/id\"\n        started_at:\n          type:\n          - 'null'\n          - date\n          readOnly: true\n        overall_status:\n          type: string\n          enum:\n          - before_save\n          - new\n          - preparing\n          - processing\n          - completed\n          - suspended\n          readOnly: true\n        overall_status_modified_at:\n          type:\n          - 'null'\n          - date\n          readOnly: true\n        overall_progress:\n          type: object\n          readOnly: true\n        overall_progress_modified_at:\n          type:\n          - 'null'\n          - date\n          readOnly: true\n        overall_count:\n          type: integer\n          readOnly: true\n        overall_duration_seconds:\n          type: number\n          readOnly: true\n        overall_data_length_bytes:\n          type: integer\n          readOnly: true\n        creator_id:\n          \"$ref\": \"#/components/schemas/id\"\n          readOnly: true\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        updater_id:\n          \"$ref\": \"#/components/schemas/nullableId\"\n          readOnly: true\n        updated_at:\n          type:\n          - 'null'\n          - string\n          format: date-time\n          readOnly: true\n        deleter_id:\n          \"$ref\": \"#/components/schemas/nullableId\"\n          readOnly: true\n        deleted_at:\n          type:\n          - 'null'\n          - string\n          format: date-time\n          readOnly: true\n      required:\n      - id\n      - name\n      - description\n      - description_html\n      - description_html_tagline\n      - custom_settings\n      - script_id\n      - saved_search_id\n      - started_at\n      - overall_status\n      - overall_status_modified_at\n      - overall_progress\n      - overall_progress_modified_at\n      - overall_count\n      - overall_duration_seconds\n      - overall_data_length_bytes\n    bookmark:\n      type: object\n      additionalProperties: false\n      properties:\n        id:\n          \"$ref\": \"#/components/schemas/id\"\n          readOnly: true\n        audio_recording_id:\n          \"$ref\": \"#/components/schemas/id\"\n        name:\n          type: string\n        category:\n          type: string\n        offset_seconds:\n          type: number\n        description:\n          type:\n          - string\n          - 'null'\n        description_html:\n          type:\n          - string\n          - 'null'\n          readOnly: true\n        description_html_tagline:\n          type:\n          - string\n          - 'null'\n          readOnly: true\n        creator_id:\n          \"$ref\": \"#/components/schemas/id\"\n          readOnly: true\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        updater_id:\n          \"$ref\": \"#/components/schemas/nullableId\"\n          readOnly: true\n        updated_at:\n          type:\n          - 'null'\n          - string\n          format: date-time\n          readOnly: true\n      required:\n      - id\n      - audio_recording_id\n      - name\n      - category\n      - offset_seconds\n      - description\n      - description_html\n      - description_html_tagline\n      - creator_id\n      - created_at\n      - updater_id\n      - updated_at\n    dataset:\n      type: object\n      additionalProperties: false\n      properties:\n        id:\n          \"$ref\": \"#/components/schemas/id\"\n          readOnly: true\n        name:\n          type: string\n        description:\n          type:\n          - string\n          - 'null'\n        description_html:\n          type:\n          - string\n          - 'null'\n          readOnly: true\n        description_html_tagline:\n          type:\n          - string\n          - 'null'\n          readOnly: true\n        creator_id:\n          \"$ref\": \"#/components/schemas/id\"\n          readOnly: true\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        updater_id:\n          \"$ref\": \"#/components/schemas/nullableId\"\n          readOnly: true\n        updated_at:\n          type:\n          - 'null'\n          - string\n          format: date-time\n          readOnly: true\n      required:\n      - id\n      - name\n      - description\n      - created_at\n      - creator_id\n      - updated_at\n      - updater_id\n    saved_search:\n      type: object\n      additionalProperties: false\n      properties:\n        id:\n          \"$ref\": \"#/components/schemas/id\"\n          readOnly: true\n        analysis_job_ids:\n          type: array\n          items:\n            \"$ref\": \"#/components/schemas/id\"\n        project_ids:\n          type: array\n          items:\n            \"$ref\": \"#/components/schemas/id\"\n        name:\n          type: string\n        description:\n          type:\n          - string\n          - 'null'\n        description_html:\n          type:\n          - string\n          - 'null'\n          readOnly: true\n        description_html_tagline:\n          type:\n          - string\n          - 'null'\n          readOnly: true\n        stored_query:\n          type: object\n        creator_id:\n          \"$ref\": \"#/components/schemas/id\"\n          readOnly: true\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        deleter_id:\n          \"$ref\": \"#/components/schemas/nullableId\"\n          readOnly: true\n        deleted_at:\n          type:\n          - 'null'\n          - string\n          format: date-time\n          readOnly: true\n      required:\n      - id\n      - name\n      - description\n      - description_html\n      - description_html_tagline\n      - stored_query\n      - creator_id\n      - created_at\n      - deleter_id\n      - deleted_at\n    script:\n      type: object\n      additionalProperties: false\n      properties:\n        id:\n          \"$ref\": \"#/components/schemas/id\"\n          readOnly: true\n        group_id:\n          \"$ref\": \"#/components/schemas/id\"\n          readOnly: true\n        name:\n          type: string\n        description:\n          type:\n          - string\n          - 'null'\n        description_html:\n          type:\n          - string\n          - 'null'\n          readOnly: true\n        description_html_tagline:\n          type:\n          - string\n          - 'null'\n          readOnly: true\n        analysis_identifier:\n          type: string\n        executable_settings:\n          type: string\n        executable_settings_media_type:\n          type: string\n        version:\n          type: number\n        creator_id:\n          \"$ref\": \"#/components/schemas/id\"\n          readOnly: true\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        is_last_version:\n          type: boolean\n          readOnly: true\n        is_first_version:\n          type: boolean\n          readOnly: true\n        analysis_action_params:\n          type: object\n      required:\n      - id\n      - group_id\n      - name\n      - description\n      - analysis_identifier\n      - executable_settings_media_type\n      - version\n      - created_at\n      - creator_id\n      - is_last_version\n      - is_first_version\n      - analysis_action_params\n    site:\n      type: object\n      additionalProperties: false\n      properties:\n        id:\n          \"$ref\": \"#/components/schemas/id\"\n          readOnly: true\n        name:\n          type: string\n        description:\n          type:\n          - string\n          - 'null'\n        description_html:\n          type:\n          - string\n          - 'null'\n          readOnly: true\n        description_html_tagline:\n          type:\n          - string\n          - 'null'\n          readOnly: true\n        creator_id:\n          \"$ref\": \"#/components/schemas/id\"\n          readOnly: true\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        updater_id:\n          \"$ref\": \"#/components/schemas/nullableId\"\n          readOnly: true\n        updated_at:\n          type:\n          - 'null'\n          - string\n          format: date-time\n          readOnly: true\n        deleter_id:\n          \"$ref\": \"#/components/schemas/nullableId\"\n          readOnly: true\n        deleted_at:\n          type:\n          - 'null'\n          - string\n          format: date-time\n          readOnly: true\n        notes:\n          type: string\n        project_ids:\n          type: array\n          items:\n            \"$ref\": \"#/components/schemas/id\"\n        location_obfuscated:\n          type: boolean\n        custom_latitude:\n          type:\n          - number\n          - 'null'\n          minimum: -90\n          maximum: 90\n        custom_longitude:\n          type:\n          - number\n          - 'null'\n          minimum: -180\n          maximum: 180\n        timezone_information:\n          \"$ref\": \"#/components/schemas/timezone_information\"\n          readOnly: false\n        image_urls:\n          \"$ref\": \"#/components/schemas/image_urls\"\n        region_id:\n          \"$ref\": \"#/components/schemas/nullableId\"\n      required:\n      - id\n      - name\n      - description\n      - description_html\n      - description_html_tagline\n      - creator_id\n      - created_at\n      - updater_id\n      - updated_at\n      - deleter_id\n      - deleted_at\n      - notes\n      - project_ids\n      - location_obfuscated\n      - custom_latitude\n      - custom_longitude\n      - timezone_information\n      - image_urls\n      - region_id\n    region:\n      type: object\n      additionalProperties: false\n      properties:\n        id:\n          \"$ref\": \"#/components/schemas/id\"\n          readOnly: true\n        name:\n          type: string\n        description:\n          type:\n          - string\n          - 'null'\n        description_html:\n          type:\n          - string\n          - 'null'\n          readOnly: true\n        description_html_tagline:\n          type:\n          - string\n          - 'null'\n          readOnly: true\n        creator_id:\n          \"$ref\": \"#/components/schemas/id\"\n          readOnly: true\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        updater_id:\n          \"$ref\": \"#/components/schemas/nullableId\"\n          readOnly: true\n        updated_at:\n          type:\n          - 'null'\n          - string\n          format: date-time\n          readOnly: true\n        deleter_id:\n          \"$ref\": \"#/components/schemas/nullableId\"\n          readOnly: true\n        deleted_at:\n          type:\n          - 'null'\n          - string\n          format: date-time\n          readOnly: true\n        notes:\n          type: object\n        project_id:\n          \"$ref\": \"#/components/schemas/id\"\n        site_ids:\n          type: array\n          items:\n            \"$ref\": \"#/components/schemas/id\"\n        image_urls:\n          \"$ref\": \"#/components/schemas/image_urls\"\n        image:\n          type: string\n          format: binary\n          writeOnly: true\n          nullable: true\n      required:\n      - id\n      - name\n      - notes\n      - project_id\n      - description\n      - description_html\n      - description_html_tagline\n      - creator_id\n      - created_at\n      - updater_id\n      - updated_at\n      - deleter_id\n      - deleted_at\n      - site_ids\n      - image_urls\n    audio_recording:\n      type: object\n      additionalProperties: false\n      properties:\n        id:\n          \"$ref\": \"#/components/schemas/id\"\n          readOnly: true\n        uuid:\n          type: string\n          format: uuid\n          readOnly: true\n        site_id:\n          \"$ref\": \"#/components/schemas/id\"\n          readOnly: true\n        duration_seconds:\n          type: number\n        sample_rate_hertz:\n          type: number\n        channels:\n          type: number\n        bit_rate_bps:\n          type: number\n        media_type:\n          type: string\n        data_length_bytes:\n          type: number\n        status:\n          type: string\n        creator_id:\n          \"$ref\": \"#/components/schemas/id\"\n          readOnly: true\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        updater_id:\n          \"$ref\": \"#/components/schemas/nullableId\"\n          readOnly: true\n        updated_at:\n          type:\n          - 'null'\n          - string\n          format: date-time\n          readOnly: true\n        deleter_id:\n          \"$ref\": \"#/components/schemas/nullableId\"\n          readOnly: true\n        deleted_at:\n          type:\n          - 'null'\n          - string\n          format: date-time\n          readOnly: true\n        recorded_date:\n          type: string\n          format: date-time\n          readOnly: false\n        file_hash:\n          type: string\n        notes:\n          type: object\n        recorded_date_timezone:\n          type:\n          - 'null'\n          - string\n        uploader_id:\n          \"$ref\": \"#/components/schemas/nullableId\"\n          readOnly: false\n        original_file_name:\n          type: string\n        canonical_file_name:\n          type: string\n          read_only: true\n      required:\n      - id\n      - uuid\n      - site_id\n      - duration_seconds\n      - sample_rate_hertz\n      - channels\n      - bit_rate_bps\n      - media_type\n      - data_length_bytes\n      - status\n      - creator_id\n      - created_at\n      - updater_id\n      - updated_at\n      - deleter_id\n      - deleted_at\n      - recorded_date\n      - file_hash\n      - notes\n      - uploader_id\n      - original_file_name\n      - canonical_file_name\n    permission:\n      type: object\n      additionalProperties: false\n      properties:\n        id:\n          \"$ref\": \"#/components/schemas/id\"\n          readOnly: true\n        creator_id:\n          \"$ref\": \"#/components/schemas/id\"\n          readOnly: true\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        updater_id:\n          \"$ref\": \"#/components/schemas/nullableId\"\n          readOnly: true\n        updated_at:\n          type:\n          - 'null'\n          - string\n          format: date-time\n          readOnly: true\n        project_id:\n          \"$ref\": \"#/components/schemas/id\"\n          readOnly: false\n        level:\n          \"$ref\": \"#/components/schemas/permission_levels\"\n        user_id:\n          \"$ref\": \"#/components/schemas/nullableId\"\n          readOnly: false\n        allow_logged_in:\n          type: boolean\n        allow_anonymous:\n          type: boolean\n      required:\n      - id\n      - project_id\n      - creator_id\n      - created_at\n      - updater_id\n      - updated_at\n      - level\n      - user_id\n      - allow_anonymous\n      - allow_logged_in\n"
		}
	},
	"Error": "unmarshal: callback: json: cannot unmarshal array into Go struct field Schema.type of type string"
}