{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/openskies-sh/aerobridge"
		},
		"file": {
			"name": "aerobridge-1.0.0.resolved.yaml",
			"size": 0,
			"path": "api/aerobridge-1.0.0.resolved.yaml",
			"byteSize": 68992,
			"content": "---\nopenapi: \"3.0.2\"\ninfo:\n  title: \"Aerobridge Server API specification\"\n  description: |-\n    All the interfaces for the Aerobridge server are defined here, using these APIs, you can interact with management server, store flight plans, issue flight permissions. We recommend using a authorised GCS e.g. Aerobridge Guardian with Aerobridge management server. \n\n    The API is a limited subset of all the functionality of the Management server and focuses on interactions with GCS / external software. Aerobridge server also provides a user interface as well and this API works in conjunction with that user interace. \n\n    Unless otherwise specified, fields specified in a message but not declared in the API shall be ignored.\n\n  version: \"1.6.0\"\nservers:\n  - url: \"https://virtserver.swaggerhub.com/cygnus2936/aerobridge/1.0.0\"\n    description: \"Aerobridge Server API\"\nsecurity:\n  - AuthFromPassport:\n      - \"aerobridge.write\"\n      - \"aerobridge.read\"\n      - \"aerobridge.privileged\"\n\npaths:\n  /ping:\n    get:\n      summary: \"Server heartbeat operation\"\n      description: \"This operation is a ping to check if the server is running\"\n      security: []\n      responses:\n        \"200\":\n          description: \"pong\"\n\n  /pki/credentials/:\n    get:\n      summary: \"List all stored credentials \"\n      security:\n        - AuthFromPassport: [aerobridge.read]\n      operationId: listCredentials\n      description: List all credentials stored in the server. Aerobridge stores credentials securely and this API decrypts them on the fly.\n      parameters: []\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/AerobridgeCredential\"\n          description: \"List of all credentials stored\"\n      tags:\n        - Credentials\n    post:\n      summary: \"Create a new credential\"\n      security:\n        - AuthFromPassport: [aerobridge.write]\n\n      operationId: createCredentials\n      description: Create a new credential object and store it securely on the management server.\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AerobridgeCredential\"\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/AerobridgeCredential\"\n          multipart/form-data:\n            schema:\n              $ref: \"#/components/schemas/AerobridgeCredential\"\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AerobridgeCredential\"\n          description: \"Credentials successfully retrieved\"\n      tags:\n        - Credentials\n\n  /pki/credentials/{id}:\n    get:\n      summary: \"Get details of a single credential\"\n      security:\n        - AuthFromPassport: [aerobridge.read]\n\n      operationId: retrieveCredentials\n      description: Retrieve or delete a credential instance.\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: A UUID string identifying this credential.\n          schema:\n            $ref: '#/components/schemas/UUIDv4Format'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AerobridgeCredential\"\n          description: \"\"\n      tags:\n        - Credentials\n    delete:\n      summary: \"Delete credential details\"\n      security:\n        - AuthFromPassport: [aerobridge.write]\n\n      operationId: deleteCredentials\n      description: Delete a Credentials instance.\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: A UUID string identifying this credential.          \n          schema:\n            $ref: '#/components/schemas/UUIDv4Format'\n\n      responses:\n        \"200\":\n          description: Deleted\n        \"404\":\n          description: Credential ID not found\n        \"401\":\n          description: Unauthorized\n\n      tags:\n        - Credentials\n\n  /gcs/firmware:\n    get:\n      summary: \"A list of all Firmware releases stored in the Aerobridge management server\"\n      operationId: listFirmwares\n      description: \"Get a list of all Firmware stored in Aerobridge\"\n      parameters: []\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Firmware\"\n          description: \"Successfully retrieved firmwares stored\"\n      tags:\n        - Firmware\n    put:\n      summary: \"Add a new firmware release\"\n      security:\n        - AuthFromPassport: [aerobridge.read]\n      operationId: createFirmware\n      description: \"Update the server with a new Firmware version and its details\"\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Firmware\"\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/Firmware\"\n          multipart/form-data:\n            schema:\n              $ref: \"#/components/schemas/Firmware\"\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Firmware\"\n          description: \"\"\n      tags:\n        - Firmware\n\n  /gcs/firmware/{firmware_id}:\n    get:\n      summary: \"Get a details of a single firmware release\"\n      security:\n        - AuthFromPassport: [aerobridge.read]\n      operationId: retrieveFirmware\n      description: \"Get a specific firmware by id\"\n      parameters:\n        - name: firmware_id\n          in: path\n          required: true\n          description: \"\"\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Firmware\"\n          description: \"Firmware details successfully retrieved\"\n      tags:\n        - Firmware\n\n  /gcs/flight-plans:\n    get:\n      operationId: listFlightPlans\n      summary: Get all Flight Plans\n      description: \"Get a list of all Flight Plans Aerobridge\"\n      security:\n        - AuthFromPassport: [aerobridge.read]\n      parameters: []\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/FlightPlanList\"\n          description: \"All flight plans retrieved\"\n      tags:\n        - Flight Plans\n    post:\n      operationId: createFlightPlan\n      summary: Create new Flight Plan\n      description: \"Upload a new flight plan from QGCS in Aerobridge, a GeoJSON is automatically created once a Plan File is uploaded\"\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/FlightPlanCreateUpdate\"\n\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FlightPlan\"\n          description: \"Flight Plan successfully created\"\n      tags:\n        - Flight Plans\n\n  /gcs/flight-plans/{flightplan_id}:\n    get:\n      operationId: retrieveFlightPlan\n      summary: Get Single Flight Plan\n      description: \"Get details of a single plan\"\n      security:\n        - AuthFromPassport: [aerobridge.read]\n      parameters:\n        - name: flightplan_id\n          in: path\n          required: true\n          description: \"ID of the Flight Plan in Aerobridge\"\n          schema:\n            type: string\n\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FlightPlan\"\n          description: \"Flight Plan retrieved successfullly\"\n      tags:\n        - Flight Plans\n\n    put:\n      operationId: updateFlightPlan\n      summary: Update details of a Flight Plan\n      description: \"Update existing flight plan with a new KML\"\n      security:\n        - AuthFromPassport: [aerobridge.write]\n      parameters:\n        - name: flightplan_id\n          in: path\n          required: true\n          description: \"ID of the Flight Plan in Aerobridge\"\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/FlightPlanCreateUpdate\"\n\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FlightPlan\"\n          description: \"Flight Plan updated\"\n      tags:\n        - Flight Plans\n\n  /gcs/flight-operations:\n    get:\n      operationId: listFlightOperations\n      summary: List all Flight Operations\n      description: \"Get all Flight Operations in Aerobridge\"\n      parameters: []\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FlightOperationList\"\n          description: \"Operations retrieved successfully\"\n      tags:\n        - Flight Operations\n    post:\n      operationId: updateFlightOperation\n      summary: Create a new operation via the GCS\n      description: \"Create a new Flight Operation\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/FlightOperation\"\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/FlightOperation\"\n          multipart/form-data:\n            schema:\n              $ref: \"#/components/schemas/FlightOperation\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FlightOperation\"\n          description: \"New Flight Operation created\"\n\n      tags:\n        - Flight Operations\n\n  /gcs/flight-operations/{flightoperation_id}:\n    get:\n      operationId: retrieveFlightOperation\n      summary: Get a single Flight Operation\n      description: \"Use this endpont to retrieve details of a signle flight operation\"\n      parameters:\n        - name: flightoperation_id\n          in: path\n          required: true\n          description: \"\"\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FlightOperation\"\n          description: \"Operation retrieved successfully\"\n      tags:\n        - Flight Operations\n\n  /gcs/flight-operations/{operation_id}/permission:\n    put:\n      summary: Get or Create a Permission for this Operation\n      operationId: getOrCreateOperationPermission\n      description: \"Generate a permission object for an operation, once a flight operation is created, a permission is automatically generated, you can use this endpoint to generate it manually\"\n      security:\n        - AuthFromPassport: [aerobridge.privileged]\n      parameters:\n        - name: operation_id\n          in: path\n          required: true\n          description: A UUID string identifying this flight operation.\n          schema:\n            $ref: '#/components/schemas/UUIDv4Format'\n            \n\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: '#/components/schemas/FlightPermissionGranted'\n                  - $ref: '#/components/schemas/FlightPermissionDenied'\n                  - $ref: '#/components/schemas/FlightPermissionPending'\n\n          description: \"Flight permission object status successfully created / retrieved\"\n\n        \"400\":\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n                    example: \"Error in processing your request\"\n\n          description: \"Error in processing your request\"\n      tags:\n        - Flight Operations\n\n  /gcs/flight-logs:\n    get:\n      summary: List all Flight Logs\n      operationId: listFlightLogs\n      description: \"List of all raw logs flight logs stored in Aerobridge\"\n      security:\n        - AuthFromPassport: [aerobridge.read]\n      parameters: []\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/FlightLog\"\n          description: \"Successfully retrieved all flight logs\"\n      tags:\n        - Flight Logs\n    post:\n      operationId: createFlightLog\n      summary: Create a new Flight Log\n      description: \"Upload a new flight log object, you can upload a flight log file using this endpoint\"\n      security:\n        - AuthFromPassport: [aerobridge.write]\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/FlightLog\"\n\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FlightLog\"\n          description: \"Successfully created a new flight log object\"\n      tags:\n        - Flight Logs\n\n  /gcs/flight-logs/{flightlog_id}:\n    get:\n      operationId: retrieveFlightLog\n      summary: Get a single Flight Log\n      description: \"\"\n      security:\n        - AuthFromPassport: [aerobridge.read]\n      parameters:\n        - name: flightlog_id\n          in: path\n          required: true\n          description: \"ID of the \"\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FlightLog\"\n          description: \"Successfully retrieved new flight log object\"\n      tags:\n        - Flight Logs\n    put:\n      operationId: updateFlightLog\n      summary: Update a Flight Log\n      description: \"\"\n      security:\n        - AuthFromPassport: [aerobridge.write]\n      parameters:\n        - name: flightlog_id\n          in: path\n          required: true\n          description: \"ID of the flight log to be updated\"\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/FlightLog\"\n\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FlightLog\"\n          description: \"Successfully updated flight log\"\n      tags:\n        - Flight Logs\n    delete:\n      operationId: destroyFlightLog\n      summary: Remove Flight Log\n      description: \"Remove flight log object from Aerobridge\"\n      security:\n        - AuthFromPassport: [aerobridge.write]\n      parameters:\n        - name: flightlog_id\n          in: path\n          required: true\n          description: \"\"\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: \"Flight log deleted successfully\"\n      tags:\n        - Flight Logs\n\n  /gcs/flight-logs/{id}/sign:\n    put:\n      operationId: Sign a Flight Log\n      description: \"Sign a Flight Log, a hash of the log is created and the hash signed and the log is updated\"\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: \"ID of the raw log object\"\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SignedFlightLog\"\n          description: \"Flight Log signed successfully\"\n        \"404\":\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - message\n                properties:\n                  message:\n                    type: string\n          description: \"A Flight Log object was not found\"\n        \"409\":\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - message\n                properties:\n                  message:\n                    type: string\n          description: \"The Flight Log has already been signed\"\n      tags:\n        - Flight Logs\n\n  /gcs/signed-flight-logs:\n    get:\n      operationId: List all Signed logs\n      description: \"A list of all signed logs on the server\"\n      parameters: []\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/SignedFlightLog\"\n          description: \"Signed flight log details successfully retrieved\"\n      tags:\n        - Signed Flight Logs\n  /gcs/signed-flight-logs/{id}:\n    get:\n      operationId: Get single flight log\n      description: \"Retrieve the details of a single flight log\"\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: A UUID string identifying this signed flight log.\n          schema:\n            $ref: '#/components/schemas/UUIDv4Format'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SignedFlightLog\"\n          description: \"Signed flight log details successfully retrieved\"\n      tags:\n        - Signed Flight Logs\n  /gcs/files:\n    get:\n      summary: \"A list of all uploaded files\"\n      operationId: listCloudFiles\n      description: \"Get a list of all Files stored in the cloud via Aerobridge, you can configure multiple S3 like cloud providers to host your files securely on the cloud.\"\n      parameters: []\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/CloudFile\"\n          description: \"Successfully retrieved all cloud files\"\n      tags:\n        - Files\n\n  /gcs/files/{file_id}:\n    get:\n      summary: \"Get a single file details\"\n      security:\n        - AuthFromPassport: [aerobridge.read]\n      operationId: retrieveCloudFile\n      description: \"Get a specific file details by id\"\n      parameters:\n        - name: file_id\n          in: path\n          required: true\n          description: \"A UUID of the uploaded file object\"\n          schema:\n            $ref: '#/components/schemas/UUIDv4Format'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CloudFile\"\n          description: \"Successfully retrieved a single cloud file\"\n      tags:\n        - Files\n\n  /gcs/files/documents/upload:\n    put:\n      summary: \"Upload a single document\"\n      security:\n        - AuthFromPassport: [aerobridge.write]\n      operationId: createCloudFileDocument\n      description: \"Upload a document to Aerobridge, use this endpoint to upload PDFs, certificates etc.\"\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                # 'file' will be the field name in this multipart request\n                file:\n                  type: string\n                  format: binary\n\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CloudFile\"\n          description: \"\"\n      tags:\n        - Files\n\n  /gcs/files/photos/upload:\n    put:\n      summary: \"Upload a single photo\"\n      security:\n        - AuthFromPassport: [aerobridge.write]\n      operationId: createCloudFileDocument\n      description: \"Upload a photo to Aerobridge, use this endpoint to upload jpgs, photos, scans etc.\"\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                # 'file' will be the field name in this multipart request\n                file:\n                  type: string\n                  format: binary\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CloudFile\"\n          description: \"Cloud file successfully created\"\n      tags:\n        - Files\n\n  /gcs/flight-permissions:\n    get:\n      summary: \"Get all flight permissions\"\n      description: \"Use this endpoint to retrieve all flight permission objects to be processed in the GCS\"\n      security:\n        - AuthFromPassport: [aerobridge.read]\n      operationId: listFlightPermissions\n      parameters: []\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/FlightPermissionGranted\"\n          description: \"Flight Permission successfully retrieved\"\n      tags:\n        - Flight Permissions\n  /gcs/flight-permissions/{id}:\n    get:\n      summary: \"Get a single permission\"\n      security:\n        - AuthFromPassport: [aerobridge.read]\n      description: \"Use this endpoint to retrieve permissionging details for a single flight\"\n\n      operationId: retrieveFlightPermission\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: A UUID string identifying this flight permission.\n          schema:\n            $ref: '#/components/schemas/UUIDv4Format'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: '#/components/schemas/FlightPermissionGranted'\n                  - $ref: '#/components/schemas/FlightPermissionDenied'\n                  - $ref: '#/components/schemas/FlightPermissionPending'\n          description: \"Flight Permission object successfully retrieved\"\n      tags:\n        - Flight Permissions\n\n  /registry/aircraft/:\n    get:\n      security:\n        - AuthFromPassport: [aerobridge.read]\n      operationId: Get all Aircrafts\n      description: List all aircrafts in the database\n      parameters: []\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Aircraft\"\n          description: \"Aircraft details successfully retrieved\"\n      tags:\n        - Aircrafts\n\n  /registry/aircraft/{id}:\n    get:\n      security:\n        - AuthFromPassport: [aerobridge.read]\n      operationId: Get Single Aircraft\n      description: Retrieve details of a Aircraft instance.\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: A UUID string identifying this aircraft.\n          schema:\n            $ref: '#/components/schemas/UUIDv4Format'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Aircraft\"\n          description: \"Single aircraft details successfully retrieved\"\n      tags:\n        - Aircrafts\n\n  /registry/aircraft/rfm/{flight_controller_id}:\n    get:\n      security:\n        - AuthFromPassport: [aerobridge.read]\n      operationId: Get Single Aircraft (RFM ID)\n      description: Retrieve details of a Aircraft instance using the RFM ID.\n      parameters:\n        - name: flight_controller_id\n          in: path\n          required: true\n          description: A flight controller id that is linked to this aircraft.\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Aircraft\"\n          description: \"Aircraft details successfully retireved\"\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Aircraft\"\n          description: \"Aircraft details could not be found\"\n      tags:\n        - Aircrafts\n        \n  /registry/aircraft/firmware/{flight_controller_id}:\n    get:\n      operationId: Get Aircraft firmware by RFM ID\n      description: Retrieve, update or delete a Aircraft Firmware instance.\n      parameters:\n      - name: flight_controller_id\n        in: path\n        required: true\n        description: This is the Drone ID from the RFM, if there are spaces in the\n          ID, remove them\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Firmware'\n          description: ''\n      tags:\n      - Aircrafts\n  /registry/operators/:\n    get:\n      security:\n        - AuthFromPassport: [aerobridge.read]\n      operationId: Get all Operators\n      description: List all operators in Aerobridge\n      parameters: []\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Operator\"\n          description: \"Successfully retrieved all operators\"\n      tags:\n        - Operator\n  /registry/operators/{id}:\n    get:\n      security:\n        - AuthFromPassport: [aerobridge.read]\n      operationId: Get single Operator\n      description: Get details of a single operator in Aerobridge\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: A UUID string identifying this operator.\n          schema:\n            $ref: '#/components/schemas/UUIDv4Format'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Operator\"\n          description: \"Successfully retrieved single operator details\"\n      tags:\n        - Operator\n  /registry/manufacturers/:\n    get:\n      security:\n        - AuthFromPassport: [aerobridge.read]\n      operationId: List all Manufacturers\n      description: List all manufacturers in Aerobridge.\n      parameters: []\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Manufacturer\"\n          description: \"Successfully retrieved all manufacturers\"\n      tags:\n        - Manufacturer\n  /registry/manufacturers/{id}:\n    get:\n      security:\n        - AuthFromPassport: [aerobridge.read]\n      operationId: Get Single Manufacturer\n      description: Retrieve details of a single Manufacturer\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: A UUID string identifying this manufacturer.\n          schema:\n            $ref: '#/components/schemas/UUIDv4Format'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Manufacturer\"\n          description: \"Successfully retrieved manufacturer details\"\n      tags:\n        - Manufacturer\n\n\n  /registry/aircraft-component/{aerobrige_id}:\n    get:\n      operationId: verifyAerobridgeID\n      summary: Verify authenticity of a component\n      description: \"Use this endpoint to verify if a Component ID is valid within the company \"\n      security:\n        - AuthFromPassport: [aerobridge.read]\n      \n      parameters:\n      - name: aerobridge_id\n        in: path\n        required: true\n        description: A UUID string identifying this pilot.\n        schema:\n          $ref: '#/components/schemas/AerobridgeID'\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ComponentVerificationStatus\"\n          description: \"Status of whether the Aerobridge ID provided is valid\"\n      tags:\n        - Aircraft Components\n\n\n\n  /registry/pilots/:\n    get:\n      security:\n        - AuthFromPassport: [aerobridge.read]\n      operationId: listPilots\n      description: List all pilots in the database, a pilot is \n      summary: List all Pilots\n      parameters: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Pilot'\n          description: 'All Pilots successfully retrieved'\n      tags:\n      - Pilot\n  /registry/pilots/{id}:\n    get:\n      security:\n        - AuthFromPassport: [aerobridge.read]\n      operationId: retrievePilot\n      description: Retrieve, update or delete a Pilot instance.\n      summary: Get details of a single pilot\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: A UUID string identifying this pilot.\n        schema:\n          $ref: '#/components/schemas/UUIDv4Format'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pilot'\n          description: 'Details of a single pilot retrieved successfully'\n      tags:\n      - Pilot\n\n  /registry/activities/:\n    get:\n      security:\n        - AuthFromPassport: [aerobridge.read]\n      operationId: listActivitys\n      summary: Get all activities in the registry\n      description: List all activities in the database\n      parameters: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Activity'\n          description: 'All activities retrieved successfully'\n      tags:\n      - Activitiy\n  /registry/activities/{id}:\n    get:\n      security:\n        - AuthFromPassport: [aerobridge.read]\n      operationId: retrieveActivity\n      summary: Get details of a single activity\n      description: Retrieve, update or delete a Activity instance.\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: A UUID string identifying this activity.\n        schema:\n          $ref: '#/components/schemas/UUIDv4Format'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Activity'\n          description: 'Activity Details successfully retrieved'\n      tags:\n      - Activitiy\n      \n\ntags:\n  - name: Files\n    description: \"Aerobridge provides functionality to upload files such as logs, id documents etc. to your favourite cloud provider, use these endpoints to manage thse files, you will have to configure the cloud provider during instalation / configuration of Aerobridge\"\n  - name: Manufacturer\n    description: \"Aerobridge stores details of aircraft manufacturers. Manufacturers are linked to aircraft and control release of firmware\"\n  - name: Operator\n    description: \"Operators have a very specific definition in the context of drone operations. Usually they are enties who fly and operate a drone, use these endpoints to identify and query operators stored in Aerobridge\"\n  - name: Aircrafts\n    description: \"All endpoints related to Aircraft objects stored in Aerobridge, we recommend that you use the frontend to create a new Aircraft and associate extended details with the aircraft\"\n  - name: Aircraft Components\n    description: \"All endpoints related to Aircraft component objects stored in Aerobridge\"\n  # - name: Digital Sky\n  #   description: \"Aerobridge can communicate with Digital Sky and all endpoints related to Digital Sky are here. As of September-2021 Digital Sky is changing and some commands and endpoints are not supported.\"\n  - name: Flight Permissions\n    description: \"Flight Permissions are issued by the Guardian system and you can use these endpoints to download permission objects.\"\n  - name: Signed Flight Logs\n    description: \"Flights logs can be signed on the management server use these enpoints to interact with the flight logs signed on the server\"\n  - name: Flight Logs\n    description: \"After the mission is complete use these endpoints to upload flight logs to the management server.\"\n  - name: Flight Operations\n    description: \"Flight Operations depend on flight plans and specify details about operation that will enable the drone to fly the plan. Use these endpoints to interact with operations stored in the management server. Permissions are issued against Flight Operation objects.\"\n  - name: Flight Plans\n    description: \"Flight plans are .plan files from GCS that can be stored in the server, usually flight plans are generated on the GCS and popular GCS like QGCS and MissionPlanner support them. An operation is created against the plan and permission artefacts retrieved for the operation. A plan can be reused for multiple operations.\"\n  - name: Firmware\n    description: \"Manufacturer can sign and release firmwares and these endpoints help in downloading the latest firmware to the GCS and / or check if the firmware is the latest one\"\n  - name: Credentials\n    description: \"Aerobridge server can store credentials securely on the server, use these endpoints to store public and private keys and retrieve the associated details with the credentials. Read [the documentation](https://aerobridgetestflight.herokuapp.com/launchpad/credentials-read-first) for more details.\"\n\ncomponents:\n  securitySchemes:\n    AuthFromPassport:\n      description: |-\n        Openskies provides a open-source OAUTH server: [https://id.openskies.sh](https://id.openskies.sh), it or any OAUTH 2.0 server that can issue JWT tokens can be used to conrol acceess. Access is controlled via access tokens that are JSON Web Tokens as defined in RFC 7519, using the `RS256` algorithm for the signature, publish to all providers the public key for verifying that signature, and implement standard OAuth server discovery mechanisms as described in RFC 8414.\n\n        The following fields shall be included in the JWT claim for access tokens issued by this authority:\n            * `iss`, with the URL at which the token generation request was received.\n            * `exp`, with a time no further than 1 hour in the future.\n            * `sub`, with unique ID of the client requesting the access token.\n            * `scope`, with a list of space-separated strings (per RFC 6749) indicating the scopes granted.\n            * `jti`, according to RFC 7519.\n\n        Clients shall provide these access tokens in an `Authorization` header in the form `Bearer \u003ctoken\u003e` in accordance with RFC 6750.\n\n      type: oauth2\n      flows:\n        clientCredentials:\n          tokenUrl: \"http://id.openskies.sh/oauth/token/\"\n          scopes:\n            aerobridge.write: \"Write data into Aerobridge\"\n            aerobridge.read: \"Read data from Aerobridge\"\n\n  schemas:    \n    Pilot:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n          readOnly: true\n        operator:\n          type: string\n          description: Assign this pilot to a operator\n        person:\n          type: object\n          properties:\n            id:\n              type: string\n              format: uuid\n              readOnly: true\n            first_name:\n              type: string\n              description: The first name of the person added to the database\n              maxLength: 30\n            middle_name:\n              type: string\n              nullable: true\n              maxLength: 30\n            last_name:\n              type: string\n              maxLength: 30\n            email:\n              type: string\n              format: email\n              description: Associate a email address with the person, this field is\n                required\n              maxLength: 254\n            created_at:\n              type: string\n              format: date-time\n              readOnly: true\n            updated_at:\n              type: string\n              format: date-time\n              readOnly: true\n          required:\n          - first_name\n          - last_name\n          - email\n          readOnly: true\n        photo:\n          type: string\n          format: uri\n          nullable: true\n          description: A URL to link to a photo of the pilot\n          maxLength: 200\n          pattern: \"^(?:[a-z0-9.+-]*)://(?:[^\\\\s:@/]+(?::[^\\\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\\\\\\n            d|1\\\\d?\\\\d?|[1-9]\\\\d?)(?:\\\\.(?:0|25[0-5]|2[0-4]\\\\d|1\\\\d?\\\\d?|[1-9]\\\\d?)){3}|\\\\\\\n            [[0-9a-f:.]+\\\\]|([a-z\\xA1-\\uFFFF0-9](?:[a-z\\xA1-\\uFFFF0-9-]{0,61}[a-z\\xA1\\\n            -\\uFFFF0-9])?(?:\\\\.(?!-)[a-z\\xA1-\\uFFFF0-9-]{1,63}(?\u003c!-))*\\\\.(?!-)(?:[a-z\\xA1\\\n            -\\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?\u003c!-)\\\\.?|localhost))(?::\\\\d{1,5})?(?:[/?#][^\\\\\\\n            s]*)?\\\\z\"\n        address:\n          type: object\n          properties:\n            id:\n              type: string\n              format: uuid\n              readOnly: true\n            address_line_1:\n              type: string\n              maxLength: 140\n            address_line_2:\n              type: string\n              nullable: true\n              maxLength: 140\n            address_line_3:\n              type: string\n              nullable: true\n              maxLength: 140\n            postcode:\n              type: string\n              maxLength: 10\n            city:\n              type: string\n              description: Set a city for this address\n              maxLength: 140\n            country:\n              enum:\n              - IN\n              type: string\n            created_at:\n              type: string\n              format: date-time\n              readOnly: true\n            updated_at:\n              type: string\n              format: date-time\n              readOnly: true\n          required:\n          - address_line_1\n          - postcode\n          - city\n          readOnly: true\n        is_active:\n          type: boolean\n          description: Is this pilot active? If he is not working for the company\n            or has moved on, set it as inactive        \n        tests:\n          type: string\n          readOnly: true\n      required:\n      - operator\n    Activity:\n      type: object\n      properties:\n        id:        \n          $ref: '#/components/schemas/UUIDv4Format'\n          readOnly: true\n        name:\n          type: string\n          description: Set a name for this activity\n          maxLength: 140\n          example: Videotaping\n        activity_type:\n          enum:\n          - 0\n          - 1\n          - 2\n          type: integer\n          description: \u003e\n            Set the activity type and the airspace\n             * `0` - NA\n             * `1` - Open\n             * `2` - Specific\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        updated_at:\n          type: string\n          format: date-time\n          readOnly: true\n      required:\n      - name\n\n\n    Operator:\n      type: object\n      properties:\n        id:        \n          $ref: '#/components/schemas/UUIDv4Format'\n          readOnly: true\n        company_name:\n          type: string\n          maxLength: 280\n        website:\n          type: string\n          format: uri\n          maxLength: 200\n          pattern:\n            \"^(?:[a-z0-9.+-]*)://(?:[^\\\\s:@/]+(?::[^\\\\s:@/]*)?@)?(?:(?:25[0-5]|2[0-4]\\\\\\\n            d|[0-1]?\\\\d?\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|[0-1]?\\\\d?\\\\d)){3}|\\\\[[0-9a-f:.]+\\\\\\\n            ]|([a-z\\xA1-\\uFFFF0-9](?:[a-z\\xA1-\\uFFFF0-9-]{0,61}[a-z\\xA1-\\uFFFF0-9])?(?:\\\\\\\n            .(?!-)[a-z\\xA1-\\uFFFF0-9-]{1,63}(?\u003c!-))*\\\\.(?!-)(?:[a-z\\xA1-\\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?\u003c!-)\\\\\\\n            .?|localhost))(?::\\\\d{2,5})?(?:[/?#][^\\\\s]*)?\\\\z\"\n          example: https://raw.githubusercontent.com/openskies-sh\n        email:\n          type: string\n          format: email\n          maxLength: 254\n        phone_number:\n          type: string\n          pattern: ^\\+?1?\\d{9,15}$\n          maxLength: 17\n        expiration:\n          type: string\n          format: date-time\n          example: \"2021-09-24T13:53:14\"\n        operator_type:\n          enum:\n            - 0\n            - 1\n            - 2\n            - 3\n            - 4\n          type: integer\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n          example: \"2021-09-24T13:53:14\"\n        updated_at:\n          type: string\n          format: date-time\n          readOnly: true\n          example: \"2021-09-24T13:53:14\"\n        vat_number:\n          type: string\n          nullable: true\n          maxLength: 25\n          example: \"CE1558433548\"\n        insurance_number:\n          type: string\n          nullable: true\n          maxLength: 25\n          example: \"CDDFEF23DW\"\n        company_number:\n          type: string\n          nullable: true\n          maxLength: 25\n          example: \"3934304933\"\n        country:\n          enum:\n            - IN\n          type: string\n        address:\n          type: object\n          properties:\n            id:\n              $ref: '#/components/schemas/UUIDv4Format'\n              readOnly: true\n            address_line_1:\n              type: string\n              maxLength: 140\n            address_line_2:\n              type: string\n              nullable: true\n              maxLength: 140\n            address_line_3:\n              type: string\n              nullable: true\n              maxLength: 140\n            postcode:\n              type: string\n              maxLength: 10\n            city:\n              type: string\n              maxLength: 140\n            country:\n              enum:\n                - IN\n              type: string\n            created_at:\n              type: string\n              format: date-time\n              readOnly: true\n            updated_at:\n              type: string\n              format: date-time\n              readOnly: true\n        operational_authorizations:\n          type: array\n          items:\n            type: string\n          example: [\"SORA\"]\n        authorized_activities:\n          type: array\n          items:\n            type: string\n          example: [\"Videotaping\"]\n      required:\n        - company_name\n        - website\n        - email\n        - address\n        - operational_authorizations\n        - authorized_activities\n\n    AerobridgeCredential:\n      type: object\n      properties:\n        token:\n          type: string\n          readOnly: true\n        name:\n          type: string\n          description:\n            Enter a friendly name / description for the type of credential\n            you are storing\n          pattern: ^[-, ,_\\w]*$\n          maxLength: 100\n        extension:\n          enum:\n            - 0\n            - 1\n            - 2\n            - 3\n            - 4\n            - 5\n          type: integer\n          description: \u003e\n            The type of data that can be stored is the following: \n             * `0` - Other\n             * `1` - .der\n             * `2` - .csr\n             * `3` - .key\n             * `4` - .cer\n             * `4` - .pem\n        token_type:\n          enum:\n            - 0\n            - 1\n            - 2\n            - 3\n            - 4\n          description: \u003e\n            Specify the type of data stored:\n             * `0` - Public Key\n             * `1` - Private Key\n             * `2` - Authentication Token\n             * `3` - Other\n             * `4` - x509 Digital Certificate\n        association:\n          enum:\n            - 0\n            - 1\n            - 2\n            - 3\n            - 4\n          description: \u003e\n            Set the entity this credential is associated with. The association will be used when calling other external servers:\n             * `0` - Operator\n             * `1` - Manufacturer\n             * `2` - Pilot\n             * `3` - RFM\n             * `4` - Company\n          type: integer\n        is_active:\n          type: boolean\n          description: Set whether the credential is still active\n        id:        \n          $ref: '#/components/schemas/UUIDv4Format'\n          readOnly: true\n          example: 5d84afc6-47e1-4b92-ad9e-541b8ebc54b1\n        aircraft:\n          $ref: '#/components/schemas/UUIDv4Format'\n          nullable: true\n          description: A UUID of the aircraft in the system that is associated with this token, optional\n          example: 846ddb6c-2fcf-4617-8f3b-b6dcf86ceeb0\n        manufacturer:\n          $ref: '#/components/schemas/UUIDv4Format'\n          nullable: true\n          description: A UUID of the manufacturer in the system that is associated with this token, optional\n          example: 94fa5ad6-e82e-4f65-be93-07b62fb89195\n        operator:\n          $ref: '#/components/schemas/UUIDv4Format'\n          nullable: true\n          description: A UUID of the operator in the system that is associated with this token, optional\n          example: edcbafed-edc7-47bb-96ee-5ed972bb977c\n      required:\n        - name\n    Firmware:\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/UUIDv4Format'\n          readOnly: true\n        binary_file_url:\n          type: string\n          format: uri\n          maxLength: 200\n          pattern:\n            \"^(?:[a-z0-9.+-]*)://(?:[^\\\\s:@/]+(?::[^\\\\s:@/]*)?@)?(?:(?:25[0-5]|2[0-4]\\\\\\\n            d|[0-1]?\\\\d?\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|[0-1]?\\\\d?\\\\d)){3}|\\\\[[0-9a-f:.]+\\\\\\\n            ]|([a-z\\xA1-\\uFFFF0-9](?:[a-z\\xA1-\\uFFFF0-9-]{0,61}[a-z\\xA1-\\uFFFF0-9])?(?:\\\\\\\n            .(?!-)[a-z\\xA1-\\uFFFF0-9-]{1,63}(?\u003c!-))*\\\\.(?!-)(?:[a-z\\xA1-\\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?\u003c!-)\\\\\\\n            .?|localhost))(?::\\\\d{2,5})?(?:[/?#][^\\\\s]*)?\\\\z\"\n          description: The Files API provides ways to generate a URL to upload your files\n        binary_file_hash:\n          type: string\n          description: The CRC or SHA-256 hash for the firmware\n        version:\n          type: string\n          maxLength: 25\n          description: It is recommended that you maintain major and minor version consistent with the Semver (https://semver.org/) spec\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        updated_at:\n          type: string\n          format: date-time\n          readOnly: true\n      required:\n        - binary_file_url\n        - binary_file_hash\n        - version\n    CloudFile:\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/UUIDv4Format'\n          readOnly: true\n        location:\n          type: string\n          format: uri\n          maxLength: 200\n          pattern:\n            \"^(?:[a-z0-9.+-]*)://(?:[^\\\\s:@/]+(?::[^\\\\s:@/]*)?@)?(?:(?:25[0-5]|2[0-4]\\\\\\\n            d|[0-1]?\\\\d?\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|[0-1]?\\\\d?\\\\d)){3}|\\\\[[0-9a-f:.]+\\\\\\\n            ]|([a-z\\xA1-\\uFFFF0-9](?:[a-z\\xA1-\\uFFFF0-9-]{0,61}[a-z\\xA1-\\uFFFF0-9])?(?:\\\\\\\n            .(?!-)[a-z\\xA1-\\uFFFF0-9-]{1,63}(?\u003c!-))*\\\\.(?!-)(?:[a-z\\xA1-\\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?\u003c!-)\\\\\\\n            .?|localhost))(?::\\\\d{2,5})?(?:[/?#][^\\\\s]*)?\\\\z\"\n        name:\n          type: string\n          example: \"uin_certificate.pdf\"\n        upload_type:\n          enum:\n            - logs\n            - documents\n            - other\n          type: string\n          example: documents\n          description: Specify the type of document that is being uploaded\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        updated_at:\n          type: string\n          format: date-time\n          readOnly: true\n      required:\n        - location\n        - name\n    FlightPlanCreateUpdate:\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/UUIDv4Format'\n          readOnly: true\n        name:\n          type: string\n          description: Give this flight plan a friendly name\n          maxLength: 140\n          example: North West Medical Delivery\n        plan_file_json:\n          type: object\n          description: 'Paste the QGCS flight plan JSON, for more information about\n            the Plan File Format see: https://dev.qgroundcontrol.com/master/en/file_formats/plan.html'          \n        is_editable:\n          type: boolean\n          description:\n            Set whether the flight plan can be edited. Once the flight log has been signed a flight plan cannot be edited.\n          readOnly: true\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        updated_at:\n          type: string\n          format: date-time\n          readOnly: true\n      required:\n        - plan_file_json\n        - name\n\n    FlightPlan:\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/UUIDv4Format'\n          readOnly: true\n        name:\n          type: string\n          maxLength: 30\n          example: North West Medical Delivery\n        plan_file_json:\n          type: object\n          description: 'Paste the QGCS flight plan JSON, for more information about\n            the Plan File Format see: https://dev.qgroundcontrol.com/master/en/file_formats/plan.html'      \n        geo_json: \n          type: object\n          $ref: '#/components/schemas/GeoJSON'\n          nullable: true\n          description: Flight plan geometry as GeoJSON, Aerobridge converts the plan file in to GeoJSON automatically so that it can be displayed on a map. \n        is_editable:\n          type: boolean\n          description:\n            Set whether the flight plan can be edited. Once the flight log has been signed a flight plan cannot be edited. \n          readOnly: true\n          \n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        updated_at:\n          type: string\n          format: date-time\n          readOnly: true\n      required:\n        - plan_file_json\n        - name\n\n    FlightPlanList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/FlightPlan\"\n\n    FlightOperationList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/FlightOperation\"\n\n    FlightOperation:\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/UUIDv4Format'\n          readOnly: true\n          example: 78bd066a-f8d4-4c4d-b45c-53f2aa53ee8c\n        name:\n          type: string\n          description: Give a friendly name for this operation e.g. Medical Deliery Operation\n          maxLength: 140\n        start_datetime:\n          type: string\n          format: date-time\n        end_datetime:\n          type: string\n          format: date-time\n        type_of_operation:\n          enum:\n            - 0\n            - 1\n          type: integer\n          description: Specify if the operation is VLOS or BVLOS.\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        drone:        \n          description: Pick the drone that will be used to fly this opreation, a drone has to be active and registered in Aerobridge.\n          $ref: '#/components/schemas/UUIDv4Format'\n          example: 01e27e8a-351c-4fa9-83b1-f243c6595e88\n        operator:\n          $ref: '#/components/schemas/UUIDv4Format'          \n          description: Assign a operator for this operation, you may use multiple companies in Aerobridge, assign the appropriate operator          \n          example: 0adaf595-9267-4ddc-8d77-58bbafae79d0\n        flight_plan:\n          $ref: '#/components/schemas/UUIDv4Format' \n          description: A operation must have a flight plan associated with it\n          example: 15e1e37d-abe1-42b7-a7d4-a05ae2eb21d4\n        purpose:\n          $ref: '#/components/schemas/UUIDv4Format'           \n          description: By default the purpose of the operation is related to authorized activities table          \n          example: 57f92cc6-f1fb-42d0-a19d-f777c31eb44e\n        pilot:\n          $ref: '#/components/schemas/UUIDv4Format' \n          example: 5178fd83-34bf-4721-bc53-291b0e6f05f8\n          description: Assign a pilot for this operation\n      required:\n        - drone\n        - flight_plan\n        - pilot\n        - operator\n        - purpose\n        - start_datetime\n        - end_datetime\n\n    ComponentVerificationStatus:\n      type: object\n      properties:\n        aerobridge_id:\n          $ref: '#/components/schemas/AerobridgeID' \n        status:\n          enum:\n          - 0\n          - 1          \n          type: integer\n          description: \u003e\n            Specify if the Aerobridge ID is verified\n             * `0` - Not verfied\n             * `1` - Verified\n             \n    AerobridgeID: \n      type: string\n      pattern: '^\\w{3-10}-\\w{3-10}-\\w{3-15}$'\n      example: 'coypu-bullwhack-headman'\n      description: Aerobridge ID is a unique global identifier for this component assigned at the time custody is acknowledged\n\n    AircraftComponent:\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/UUIDv4Format' \n          readOnly: true\n        raw_log:\n          type: object\n          description: A JSON file from the drone that has the raw log. Once the log has been uploaded, it is recommended that the file be deleted from the RFM / SD card on the drone.\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        updated_at:\n          type: string\n          format: date-time\n          readOnly: true\n        operation:\n          type: string\n          format: uuid\n          example: 29ec06cb-c6fb-4578-aea6-56fa438f4f82\n          description: Specify the operation object that this log deals with\n\n      required:\n        - raw_log\n        - operation\n\n\n    FlightLog:\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/UUIDv4Format' \n          readOnly: true\n        raw_log:\n          type: object\n          description: A JSON file from the drone that has the raw log. Once the log has been uploaded, it is recommended that the file be deleted from the RFM / SD card on the drone.\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        updated_at:\n          type: string\n          format: date-time\n          readOnly: true\n        operation:\n          type: string\n          format: uuid\n          example: 29ec06cb-c6fb-4578-aea6-56fa438f4f82\n          description: Specify the operation object that this log deals with\n\n      required:\n        - raw_log\n        - operation\n\n    FlightPermissionStatus: \n        type: string\n        enum:\n        - granted\n        - denied\n        - pending\n        \n        description: \u003e\n          All different statuses of a permission object:\n            * `granted` - Permission has been succesfully granted\n            * `denied` - Permission could not be granted for this operation\n            * `pending` - Permission could not be granted for this operation at this time, please check again at a later time\n    Latitude:\n      description: \u003e-\n        Degrees of latitude north of the equator, with reference to the WGS84\n        ellipsoid.\n      maximum: 90\n      exclusiveMaximum: false\n      minimum: -90\n      exclusiveMinimum: false\n      type: number\n      format: double\n      example: 34.123\n    Longitude:\n      description: \u003e-\n        Degrees of longitude east of the Prime Meridian, with reference to the\n        WGS84 ellipsoid.\n      minimum: -180\n      exclusiveMaximum: false\n      maximum: 180\n      exclusiveMinimum: false\n      type: number\n      format: double\n      example: -118.456\n    Polygon:\n      description: \u003e-\n        An enclosed area on the earth. The bounding edges of this polygon are\n        defined to be the shortest paths between connected vertices.  This\n        means, for instance, that the edge between two points both defined at a\n        particular latitude is not generally contained at that latitude. The\n        winding order must be interpreted as the order which produces the\n        smaller area. The path between two vertices is defined to be the\n        shortest possible path between those vertices. Edges may not cross.\n        Vertices may not be duplicated.  In particular, the final polygon vertex\n        must not be identical to the first vertex.\n      required:\n      - vertices\n      type: object\n      properties:\n        vertices:\n          minItems: 3\n          type: array\n          items:\n            $ref: '#/components/schemas/LatLngPoint'\n    LatLngPoint:\n      description: Point on the earth's surface.\n      required:\n      - lat\n      - lng\n      type: object\n      properties:\n        lng:\n          $ref: '#/components/schemas/Longitude'\n        lat:\n          $ref: '#/components/schemas/Latitude'\n\n\n    FlightPermissionGeoCage: \n        type: array\n        description: \u003e\n          A geocage polygon represented as a array of points of latitude longitude points. This will be loaded on to the vehicle by the Flight module.\n        items: \n          $ref: '#/components/schemas/LatLngPoint'\n\n    FlightPermissionGranted:\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/UUIDv4Format' \n          readOnly: true\n        operation:\n          type: object\n          properties:\n            id:\n              $ref: '#/components/schemas/UUIDv4Format' \n              readOnly: true\n            name:\n              type: string\n              description: Give a friendly name for this operation\n              maxLength: 140\n            type_of_operation:\n              enum:\n                - 0\n                - 1\n              type: integer\n              description:\n                At the moment, only VLOS and BVLOS operations are supported,\n                for other types of operations, please issue a pull-request\n            created_at:\n              type: string\n              format: date-time\n              readOnly: true\n            drone:\n              type: string\n              description: Pick the drone that will be used to fly this operation\n            flight_plan:\n              type: string\n              format: uuid\n            purpose:\n              type: string\n              description: To add additional categories, please add entries to the Activities table\n            pilot:\n              type: string\n              format: uuid\n          required:\n            - drone\n            - flight_plan\n            - pilot\n          readOnly: true\n        token:\n          type: object\n          description: JWT of a permission object\n          example: {\"access_token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjZWUE1sdkI0S2pldEpMWGs3Sm5qVG1CaS1ZVUd0NXFXN1M2eGRZNnYzMDgifQ.eyJpc3MiOiJodHRwczovL2lkLm9wZW5za2llcy5zaC8iLCJleHAiOjE2NDAwMDYwNDksImlhdCI6MTY0MDAwMjQ0OSwic3ViIjoiQXM5QUpseVd3d3lyZnFZV2lOQ0duVTUzcmFGUXBpRVV0RkFjUElzRkBjbGllbnRzIiwic2NvcGUiOiIiLCJ0eXAiOiJCZWFyZXIiLCJmbGlnaHRfcGxhbl9pZCI6IjEyODE4ZTg3LTRjOTYtNGU0Yy04YzYzLTgyYjhlMTJjM2I3MyIsImZsaWdodF9vcGVyYXRpb25faWQiOiIzNDA4YmNlOS1kYmFiLTQ2NjUtYWJmYy04ZWEwM2IwYWQ4NzEiLCJwbGFuX2ZpbGVfaGFzaCI6IjJlMjYyMTdkYTg2YjJiYzYwMTM3ODg0NDYyNTdjZmI1ZDU5MGM5ZGU2NDJhODE2YmJkNjhmMDNjOWQ2MDc0MGYifQ.q1Jv1TFvCC7Pto8k2FCuEI-iikI5asRLOMneTOdFng1_8xnjybEE0gLjEyxGmG0g-vmLgGYc5R5Lv3XecMyTXhpppD2wpZLXvI_jbTg0IkxzPMWBFLcSMW4ywxoWaa7JYbJK3nbYFpmzEKQi5kUiFV-BsT6pD0ABcBW34j104DPCduddWnVDGdRqZHSAU9za_sczfawM-UEjCADvOfm0JIbp9GJ5M0NN_87wtRO91pz6o8GFehlSX9Hqw1BQWVAj2fP8RZAAmcbx15qOS5LnwFWoH8MUUqRLin-1nlZNm5LWmb2BBqm7DMFEK3c8RUQnlHj9rSbw8adtpSKda-yvCb06GHxMg_ixUPHFI-vOWQaxrL0zwQP1RpMm0HYq06F0RWYRpqAhW3Hyz8qgv-55yHbVk8PBLtsvb146xP8orHVRMulWA_uWghtNIQew41cPDWqaukzycIwIe_WFjBvX01QRLWVDdJTGNQvmJ9qM4qK40jygJR40Z36nCrfyrp-iJYWk7Wf1szr9PGRQQ22-UYYXIBbk1qzu2jNMAxpCN8hvKVOnc_BsHj7Uy8y8YtA9CBAZAsUzltvNnRN88krsyvCeuJc40paFkok2Pr4J1NF4Fu680tzUzgdA8AW803A7p_LYXskkl4vVSR3WOe5zP44_FZMmD6bvQoEuq2iBrMo\",\"expires_in\": 3600,\"token_type\": \"Bearer\",\"scope\": \"\"}\n        geo_cage: \n          $ref: '#/components/schemas/FlightPermissionGeoCage' \n\n        status_code:\n          $ref: '#/components/schemas/FlightPermissionStatus' \n          example: granted\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        updated_at:\n          type: string\n          format: date-time\n          readOnly: true\n\n    FlightPermissionDenied:\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/UUIDv4Format' \n          readOnly: true\n        operation:\n          type: object\n          properties:\n            id:\n              $ref: '#/components/schemas/UUIDv4Format' \n              readOnly: true\n            name:\n              type: string\n              description: Give a friendly name for this operation\n              maxLength: 140\n            type_of_operation:\n              enum:\n                - 0\n                - 1\n              type: integer\n              description:\n                At the moment, only VLOS and BVLOS operations are supported,\n                for other types of operations, please issue a pull-request\n            created_at:\n              type: string\n              format: date-time\n              readOnly: true\n            drone:\n              type: string\n              description: Pick the drone that will be used to fly this operation\n            flight_plan:\n              type: string\n            purpose:\n              type: string\n              description: To add additional categories, please add entries to the Activities table\n            pilot:\n              type: string\n          required:\n            - drone\n            - flight_plan\n            - pilot\n          readOnly: true\n        geo_cage: \n          type: array\n          example: []\n        token:\n          type: object          \n          example: {}\n        status_code:\n          type: string\n          example: denied          \n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        updated_at:\n          type: string\n          format: date-time\n          readOnly: true          \n\n    FlightPermissionPending:\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/UUIDv4Format' \n          readOnly: true\n        operation:\n          type: object\n          properties:\n            id:\n              $ref: '#/components/schemas/UUIDv4Format' \n              readOnly: true\n            name:\n              type: string\n              description: Give a friendly name for this operation\n              maxLength: 140\n            type_of_operation:\n              enum:\n                - 0\n                - 1\n              type: integer\n              description:\n                At the moment, only VLOS and BVLOS operations are supported,\n                for other types of operations, please issue a pull-request\n            created_at:\n              type: string\n              format: date-time\n              readOnly: true\n            drone:\n              type: string\n              description: Pick the drone that will be used to fly this operation\n            flight_plan:\n              type: string\n            purpose:\n              type: string\n              description: To add additional categories, please add entries to the Activities table\n            pilot:\n              type: string\n          required:\n            - drone\n            - flight_plan\n            - pilot\n          readOnly: true\n        token:\n          type: object          \n          example: {}\n        geo_cage: \n          type: array\n          example: []        \n        status_code:\n          type: string\n          example: pending\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        updated_at:\n          type: string\n          format: date-time\n          readOnly: true          \n\n    Aircraft:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n          readOnly: true\n        operator:\n          type: string\n          description: Associate a operator to this Aircraft\n        manufacturer:\n          type: string\n          description: Associate a manufacturer in the database to this aircraft\n        name:\n          type: string\n          description: 'Set the internal name of the aircraft e.g. F1 #2'\n          maxLength: 280\n        status:\n          enum:\n          - 0\n          - 1\n          type: integer\n          description: Set the status of this drone, if it is set as inactive, the\n            GCS might fail and flight plans might not be able to load on the drone\n        final_assembly:\n          type: string\n          description: Assign a aircraft assembly to this aircraft\n        photo:\n          type: string\n          format: uri\n          description: A URL of a photo of the drone\n          maxLength: 200\n          pattern: \"^(?:[a-z0-9.+-]*)://(?:[^\\\\s:@/]+(?::[^\\\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\\\\\\n            d|1\\\\d?\\\\d?|[1-9]\\\\d?)(?:\\\\.(?:0|25[0-5]|2[0-4]\\\\d|1\\\\d?\\\\d?|[1-9]\\\\d?)){3}|\\\\\\\n            [[0-9a-f:.]+\\\\]|([a-z\\xA1-\\uFFFF0-9](?:[a-z\\xA1-\\uFFFF0-9-]{0,61}[a-z\\xA1\\\n            -\\uFFFF0-9])?(?:\\\\.(?!-)[a-z\\xA1-\\uFFFF0-9-]{1,63}(?\u003c!-))*\\\\.(?!-)(?:[a-z\\xA1\\\n            -\\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?\u003c!-)\\\\.?|localhost))(?::\\\\d{1,5})?(?:[/?#][^\\\\\\\n            s]*)?\\\\z\"\n        flight_controller_id:\n          type: string\n          description: This is the Drone ID from the RFM, if there are spaces in the\n            ID, remove them\n          maxLength: 140\n      required:\n      - operator\n      - manufacturer\n      - name\n      - final_assembly\n      - flight_controller_id\n    SignedFlightLog:\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/UUIDv4Format' \n          readOnly: true\n        signed_log:\n          type: string\n          description: A signed flight log per the RPAS manuals.\n\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        updated_at:\n          type: string\n          format: date-time\n          readOnly: true\n        raw_flight_log:\n          type: string\n      required:\n        - signed_log\n        - raw_flight_log\n\n    Manufacturer:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n          readOnly: true\n        full_name:\n          type: string\n          description: Full legal name of the manufacturing entity\n          maxLength: 140\n        common_name:\n          type: string\n          description: Common name for the manufacturer e.g. Skydio\n          maxLength: 140\n        address:\n          type: object\n          properties:\n            id:\n              type: string\n              format: uuid\n              readOnly: true\n            address_line_1:\n              type: string\n              maxLength: 140\n            address_line_2:\n              type: string\n              nullable: true\n              maxLength: 140\n            address_line_3:\n              type: string\n              nullable: true\n              maxLength: 140\n            postcode:\n              type: string\n              maxLength: 10\n            city:\n              type: string\n              description: Set a city for this address\n              maxLength: 140\n            country:\n              enum:\n              - IN\n              type: string\n            created_at:\n              type: string\n              format: date-time\n              readOnly: true\n            updated_at:\n              type: string\n              format: date-time\n              readOnly: true\n          required:\n          - address_line_1\n          - postcode\n          - city\n          readOnly: true\n        role:\n          type: string\n          description: e.g. Reseller, distributor, OEM etc.\n          maxLength: 140\n      required:\n      - full_name\n      - common_name\n      - role\n\n    GeoJSON:\n      type: object\n      required:\n        - type\n      properties:\n        type:\n          type: string\n          enum:\n            - Polygon\n            - MultiPolygon\n            - LineString\n\n        coordinates:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Point2D\"\n\n    Point2D:\n      type: array\n      maxItems: 2\n      minItems: 2\n      items:\n        type: number\n    \n    UUIDv4Format:\n      description: \u003e-\n        String whose format matches a version-4 UUID according to RFC 4122.\n      maxLength: 36\n      minLength: 36\n      type: string\n      format: uuid\n      pattern: \u003e-\n        ^[0-9a-fA-F]{8}\\\\-[0-9a-fA-F]{4}\\\\-4[0-9a-fA-F]{3}\\\\-[8-b][0-9a-fA-F]{3}\\\\-[0-9a-fA-F]{12}$\n      example: 03e5572a-f733-49af-bc14-8a18bd53ee39",
			"canonicalURL": "/github.com/openskies-sh/aerobridge@3942dcb759b369c8632b3c20555a36ec42f68ad4/-/blob/api/aerobridge-1.0.0.resolved.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/openskies-sh/aerobridge/blob/3942dcb759b369c8632b3c20555a36ec42f68ad4/api/aerobridge-1.0.0.resolved.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: offset 3544: control characters are not allowed"
}