{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Plume-org/docs"
		},
		"file": {
			"name": "api.yaml",
			"size": 0,
			"path": "source/api.yaml",
			"byteSize": 5149,
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: \"1.0.0\"\n  title: \"Plume REST API\"\n\nservers:\n  - url: http://localhost:7878/api/v1\n    description: Your local instance\n  - url: https://baptiste.gelez.xyz/api/v1\n    description: Demo instance\n\npaths:\n  /apps:\n    post:\n      description:\n        Registers an application.\n  /posts/{id}:\n    get:\n      description:\n        Retrieves a post by its ID.\n      responses:\n        '200':\n          The post was found\n        '403':\n          The post exists, but you don't have the rights to fetch it (it is probably a private draft)\n        '404':\n          The post was not found\n    delete:\n      Deletes the post corresponding to this ID.\n  /posts/:\n    get:\n      description:\n        List posts.\n      parameters:\n        - name: title\n          in: query\n          description: Only list article with this specific title\n          required: false\n          schema:\n            type: string\n        - name: subtitle\n          in: query\n          description: Only list article with this specific subtitle\n          required: false\n          schema:\n            type: string\n        - name: content\n          in: query\n          description: Only list article with this specific content (in HTML)\n          required: false\n          schema:\n            type: string\n    post:\n      description:\n        Creates a new post.\n      requestBody:\n        content:\n          'application/json':\n            schema:\n             properties:\n               title:\n                 description: The title of the new article.\n                 type: string\n               subtitle:\n                 description: The subtitle of the new article.\n                 type: string\n               source:\n                 description: The markdown source of the new article.\n                 type: string\n               blog_id:\n                 description: The ID of the blog in which to publish the new article.\n                 type: integer\n               published:\n                 description: false if this article is a draft, true if it is published.\n                 type: bool\n               creation_date:\n                 description: The publication of this article. Past dates will work, but not futures ones. Defaults to the current date. The expected format is %Y-%m-%d.\n                 type: string\n               license:\n                 description: The license of the article. Omit this field to use the default one for this instance. Leave it empty to reserve all rights.\n                 type: string\n               tags:\n                 description: The tags for the new article.\n                 type: array\n               cover_id:\n                 description: The ID of the cover image.\n                 type: integer\n             required:\n               - title\n               - description\n               - author\n\ndefinitions:\n  App:\n    type: object\n    properties:\n      name:\n        description: The name of the app.\n        type: string\n        example: \"My app\"\n      website:\n        description: The website of the app.\n        type: string\n        example: \"https://my.app\"\n      client_id:\n        description: A unique identifier for the app.\n        type: string\n        example: \"abcdef0123456789\"\n      client_secret:\n        description: The secret token associated to this app. It will be used to get individual authentication tokens for each user of the app.\n        type: string\n        example: \"abcdef0123456789\"\n  Post:\n    type: object\n    properties:\n      id:\n        description: The internal ID of the post.\n        type: integer\n        example: 3\n      title:\n        description: The title of the post.\n        type: string\n        example: \"Hello, world!\"\n      subtitle:\n        description: The subtitle of the post.\n        type: string\n        example: \"My first post.\"\n      content:\n        description: The content of the post, rendered as HTML.\n        type: string\n        format: \"<p>This is my first <b>post</b>. Thanks for reading.</p>\"\n      source:\n        description: The markdown source of the post.\n        type: string\n        example: \"This is my first **post**. Thanks for reading.\"\n      authors:\n        description: The FQNs of the authors of this post.\n        type: array\n        example:\n          - \"alice\"\n          - \"bob@plume01.localhost\"\n      blog_id:\n        description: The ID of the blog in which this article was published.\n        type: integer\n        example: 12\n      published:\n        description: true if the article is published, false if it is still a draft.\n        type: bool\n        example: true\n      creation_date:\n        description: The publication date.\n        type: string\n        example: \"2019-12-16\"\n      license:\n        description: The license of this post.\n        type: string\n        example: \"CC-BY-SA\"\n      tags:\n        description: The tags of this post.\n        type: array\n        example:\n          - Plume\n          - REST\n          - API\n          - JSON\n      cover_id:\n        description: The ID of the media used as cover for this article.\n        type: integer\n        example: 42\n",
			"canonicalURL": "/github.com/Plume-org/docs@b97cdf4a1033a9cdea7a758e717f12da9ad97b67/-/blob/source/api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Plume-org/docs/blob/b97cdf4a1033a9cdea7a758e717f12da9ad97b67/source/api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: json: line 1:3693: json: cannot unmarshal Go value of type ogen.Spec: spec: json: unable to unmarshal JSON string into Go value of type ogen.Operation"
}