{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/PharmaLedger-IMI/fgt-workspace"
		},
		"file": {
			"name": "PHA.yml",
			"size": 0,
			"path": "fgt-api/swagger/docs/PHA.yml",
			"byteSize": 45175,
			"content": "openapi: 3.0.0\ninfo:\n  title: PHA - Pharmaledger Finished Goods Traceability API\n  description: \u003e-\n    ## Pharmacy\n\n\n    *   [Repository](https://github.com/PharmaLedger-IMI/fgt-workspace)\n\n    *  \n    [License](https://github.com/PharmaLedger-IMI/fgt-workspace/blob/master/LICENSE.md)\n  version: 0.11.5\nservers:\n  - url: http://{{api-pha}}\ntags:\n  - name: stock\n  - name: sale\n  - name: receipt\n  - name: shipment\n  - name: traceability\npaths:\n  /stock/getAll:\n    get:\n      tags:\n        - stock\n      summary: 'return all products in FGT stock according to the filter'\n      parameters:\n        - name: keyword\n          in: query\n          schema:\n            type: string\n          description: \u003e-\n            Search for a keyword in all tables indexes. search by keyword\n            disable other queries.\n        - name: page\n          in: query\n          schema:\n            type: string\n        - name: itemPerPage\n          in: query\n          schema:\n            type: string\n          example: 10\n        - name: sort\n          in: query\n          schema:\n            type: string\n          description: dsc or asc\n          example: dsc\n        - name: name\n          in: query\n          schema:\n            type: string\n          description: productName\n        - name: gtin\n          in: query\n          schema:\n            type: string\n          description: valid GTIN-14\n        - name: manufName\n          in: query\n          schema:\n            type: string\n          description: Marketing Authorization Holder identifier\n      responses:\n        '200':\n          headers:\n            Content-Type:\n              schema:\n                type: application/json\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  meta:\n                    $ref: '#/components/schemas/Meta'\n                  results:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Stock'\n              example:\n                meta:\n                  page: 1\n                  itemsPerPage: 10\n                  totalPages: 1\n                  query: { }\n                results:\n                  - name: string\n                    gtin: string\n                    description: string\n                    manufName: string\n                    batches:\n                      - batchNumber: string\n                        expiry: \"2030-01-01\"\n                        serialNumbers:\n                          - \"0\"\n                        quantity: 1\n                        batchStatus:\n                          status: 'commissioned'\n                          log:\n                            - '$manufName $timestamp set status to commissioned'\n                    status: 'available'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HttpError'\n              example:\n                status: 400\n                error: Bad Request\n                message: The server could not understand your request\n  /stock/get/{gtin}:\n    get:\n      tags:\n        - stock\n      summary: 'find a product in FGT stock by GTIN'\n      parameters:\n        - name: gtin\n          in: path\n          schema:\n            type: string\n          required: true\n          description: valid GTIN-14\n      responses:\n        '200':\n          headers:\n            Content-Type:\n              schema:\n                type: application/json\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Stock'\n              example:\n                name: string\n                gtin: string\n                description: string\n                manufName: string\n                batches:\n                  - batchNumber: string\n                    expiry: \"2030-01-01\"\n                    serialNumbers:\n                      - \"0\"\n                    quantity: 1\n                    batchStatus:\n                      status: 'commissioned'\n                      log:\n                        - '$manufName $timestamp set status to commissioned'\n                status: 'available'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HttpError'\n              example:\n                status: 400\n                error: Bad Request\n                message: The server could not understand your request\n  /sale/create:\n    post:\n      tags:\n        - sale\n      summary: 'create a sale and notify MAH'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AddSale'\n              example:\n                id: string\n                productList:\n                  - gtin: string\n                    batchNumber: string\n                    serialNumber: 0\n      responses:\n        '200':\n          headers:\n            Content-Type:\n              schema:\n                type: string\n                example: application/json\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Sale'\n              example:\n                id: string\n                sellerId: string\n                productList:\n                  - name: string\n                    gtin: string\n                    batchNumber: string\n                    serialNumber: 0\n                    manufName: string\n                    expiry: string\n                    status: string\n                products: string\n                keySSIs:\n                  - string\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HttpError'\n              example:\n                status: 400\n                error: Bad Request\n                message: The server could not understand your request\n  /sale/createAll:\n    post:\n      tags:\n        - sale\n      summary: createAll\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/AddSale'\n            example:\n              - id: string\n                productList:\n                  - gtin: string\n                    batchNumber: string\n                    serialNumber: 0\n      responses:\n        '200':\n          headers:\n            Content-Type:\n              schema:\n                type: string\n                example: application/json\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Sale'\n              example:\n                meta:\n                  page: 0\n                  itemsPerPage: 0\n                  totalPages: 0\n                  query: { }\n                results:\n                  - id: string\n                    sellerId: string\n                    productList:\n                      - name: string\n                        gtin: string\n                        batchNumber: string\n                        serialNumber: 0\n                        manufName: string\n                        expiry: string\n                        status: string\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HttpError'\n              example:\n                status: 400\n                error: Bad Request\n                message: The server could not understand your request\n  /sale/getAll:\n    get:\n      tags:\n        - sale\n      summary: getAll\n      parameters:\n        - name: keyword\n          in: query\n          schema:\n            type: string\n          description: \u003e-\n            Search for a keyword in all tables indexes. search by keyword\n            disable other queries\n        - name: page\n          in: query\n          schema:\n            type: string\n        - name: itemPerPage\n          in: query\n          schema:\n            type: string\n          example: 10\n        - name: sort\n          in: query\n          schema:\n            type: string\n          description: dsc or asc\n          example: dsc\n        - name: id\n          in: query\n          schema:\n            type: string\n          description: saleId define by seller\n      responses:\n        '200':\n          headers:\n            Content-Type:\n              schema:\n                type: string\n                example: application/json\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  meta:\n                    $ref: '#/components/schemas/Meta'\n                  results:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Sale'\n              example:\n                meta:\n                  page: 0\n                  itemsPerPage: 0\n                  totalPages: 0\n                  query: { }\n                results:\n                  - id: string\n                    sellerId: string\n                    productList:\n                      - name: string\n                        gtin: string\n                        batchNumber: string\n                        serialNumber: 0\n                        manufName: string\n                        expiry: string\n                        status: string\n                    products: string\n                    keySSIs:\n                      - string\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HttpError'\n              example:\n                status: 400\n                error: Bad Request\n                message: The server could not understand your request\n  /sale/get/{saleId}:\n    get:\n      tags:\n        - sale\n      summary: getOne\n      parameters:\n        - name: saleId\n          in: path\n          schema:\n            type: string\n          required: true\n          description: saleId define by seller\n      responses:\n        '200':\n          headers:\n            Content-Type:\n              schema:\n                type: string\n                example: application/json\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Sale'\n              example:\n                id: string\n                sellerId: string\n                productList:\n                  - name: string\n                    gtin: string\n                    batchNumber: string\n                    serialNumber: 0\n                    manufName: string\n                    expiry: string\n                    status: string\n                products: string\n                keySSIs:\n                  - string\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HttpError'\n              example:\n                status: 400\n                error: Bad Request\n                message: The server could not understand your request\n  /shipment/create:\n    post:\n      tags:\n        - shipment\n      summary: 'add a new shipment'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AddShipment'\n            example:\n              requesterId: string\n              shipmentLines:\n                - gtin: string\n                  batch: string\n                  quantity: 1\n      responses:\n        '200':\n          headers:\n            Content-Type:\n              schema:\n                type: application/json\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Shipment'\n              example:\n                shipmentId: string\n                requesterId: string\n                senderId: string\n                status:\n                  status: \"created\"\n                  log:\n                    - '$manufName $timestamp set status to created'\n                shipmentLines:\n                  - gtin: string\n                    batch: string\n                    quantity: 1\n                    senderId: string\n                    requesterId: string\n                    status: \"created\"\n                    createdOn: 0\n                keySSI: string\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HttpError'\n              example:\n                status: 400\n                error: Bad Request\n                message: The server could not understand your request\n  /shipment/createAll:\n    post:\n      tags:\n        - shipment\n      summary: 'add one or more new shipments'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/AddShipment'\n            example:\n              - requesterId: string\n                shipmentLines:\n                  - gtin: string\n                    batch: string\n                    quantity: 1\n      responses:\n        '200':\n          headers:\n            Content-Type:\n              schema:\n                type: application/json\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Shipment'\n              example:\n                - shipmentId: string\n                  requesterId: string\n                  senderId: string\n                  status:\n                    status: 'created'\n                    log:\n                      - '$manufName $timestamp set status to created'\n                  shipmentLines:\n                    - gtin: string\n                      batch: string\n                      quantity: 1\n                      senderId: string\n                      requesterId: string\n                      status: 'created'\n                      createdOn: 0\n                  keySSI: string\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HttpError'\n              example:\n                status: 400\n                error: Bad Request\n                message: The server could not understand your request\n  /shipment/getAll:\n    get:\n      tags:\n        - shipment\n      summary: 'returns all shipments according to the filter'\n      parameters:\n        - name: keyword\n          in: query\n          schema:\n            type: string\n          description: \u003e-\n            Search for a keyword in all tables indexes. search by keyword\n            disable other queries.\n        - name: page\n          in: query\n          schema:\n            type: string\n        - name: itemPerPage\n          in: query\n          schema:\n            type: string\n          example: 10\n        - name: sort\n          in: query\n          schema:\n            type: string\n          description: dsc or asc\n          example: dsc\n        - name: shipmentId\n          in: query\n          schema:\n            type: string\n        - name: senderId\n          in: query\n          schema:\n            type: string\n          description: partner identifier that shipped the products\n        - name: requesterId\n          in: query\n          schema:\n            type: string\n          description: partner identifier that received the products\n      responses:\n        '200':\n          headers:\n            Content-Type:\n              schema:\n                type: application/json\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  meta:\n                    $ref: '#/components/schemas/Meta'\n                  results:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Shipment'\n              example:\n                meta:\n                  page: 1\n                  itemsPerPage: 10\n                  totalPages: 1\n                  query: { }\n                results:\n                  - shipmentId: string\n                    requesterId: string\n                    senderId: string\n                    status:\n                      status: 'created'\n                      log:\n                        - '$manufName $timestamp set status to created'\n                    shipmentLines:\n                      - gtin: string\n                        batch: string\n                        quantity: 1\n                        senderId: string\n                        requesterId: string\n                        status: 'created'\n                        createdOn: 0\n                    keySSI: string\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HttpError'\n              example:\n                status: 400\n                error: Bad Request\n                message: The server could not understand your request\n  /shipment/get/{shipmentId}:\n    get:\n      tags:\n        - shipment\n      summary: 'find a shipment by shipment id'\n      parameters:\n        - name: shipmentId\n          in: path\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          headers:\n            Content-Type:\n              schema:\n                type: application/json\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Shipment'\n              example:\n                shipmentId: string\n                requesterId: string\n                senderId: string\n                status:\n                  status: 'created'\n                  log:\n                    - '$manufName $timestamp set status to created'\n                shipmentLines:\n                  - gtin: string\n                    batch: string\n                    quantity: 1\n                    senderId: string\n                    requesterId: string\n                    status: 'created'\n                    createdOn: 0\n                keySSI: string\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HttpError'\n              example:\n                status: 400\n                error: Bad Request\n                message: The server could not understand your request\n  /shipment/update/{shipmentId}:\n    put:\n      tags:\n        - shipment\n      summary: 'update the shipment status'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateShipment'\n            example:\n              status: 'pickup'\n              extraInfo: 'waiting for courier'\n      parameters:\n        - name: shipmentId\n          in: path\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          headers:\n            Content-Type:\n              schema:\n                type: application/json\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Shipment'\n              example:\n                shipmentId: string\n                requesterId: string\n                senderId: string\n                status:\n                  status: 'pickup'\n                  log:\n                    - '$manufName $timestamp set status to created'\n                    - '$manufName $timestamp update status from created to pickup'\n                  extraInfo:\n                    pickup:\n                      - 'waiting for courier'\n                shipmentLines:\n                  - gtin: string\n                    batch: string\n                    quantity: 1\n                    senderId: string\n                    requesterId: string\n                    status: 'pickup'\n                    createdOn: 0\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HttpError'\n              example:\n                status: 400\n                error: Bad Request\n                message: The server could not understand your request\n  /shipment/updateAll:\n    put:\n      tags:\n        - shipment\n      summary: 'update the shipment status of one or more shipments'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/UpdateShipments'\n            example:\n              - shipmentId: string\n                status: string\n                extraInfo: string\n      responses:\n        '200':\n          headers:\n            Content-Type:\n              schema:\n                type: application/json\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Shipment'\n              example:\n                - shipmentId: string\n                  requesterId: string\n                  senderId: string\n                  status:\n                    status: 'pickup'\n                    log:\n                      - '$manufName $timestamp set status to created'\n                      - '$manufName $timestamp update status from created to pickup'\n                    extraInfo:\n                      pickup:\n                        - 'waiting for courier'\n                  shipmentLines:\n                    - gtin: string\n                      batch: string\n                      quantity: 1\n                      senderId: string\n                      requesterId: string\n                      status: 'pickup'\n                      createdOn: 0\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HttpError'\n              example:\n                status: 400\n                error: Bad Request\n                message: The server could not understand your request\n  /receipt/getAll:\n    get:\n      tags:\n        - receipt\n      summary: 'return all receipts according to the filter'\n      parameters:\n        - name: keyword\n          in: query\n          schema:\n            type: string\n          description: \u003e-\n            Search for a keyword in all tables indexes. search by keyword\n            disable other queries.\n        - name: page\n          in: query\n          schema:\n            type: string\n        - name: itemPerPage\n          in: query\n          schema:\n            type: string\n          example: 10\n        - name: sort\n          in: query\n          schema:\n            type: string\n          description: dsc or asc\n          example: dsc\n        - name: gtin\n          in: query\n          schema:\n            type: string\n          description: valid GTIN-14\n        - name: batchNumber\n          in: query\n          schema:\n            type: string\n          description: product batch number\n        - name: sellerId\n          in: query\n          schema:\n            type: string\n          description: partnerId that sold the product\n        - name: serialNumber\n          in: query\n          schema:\n            type: string\n          description: product serial number\n        - name: manufName\n          in: query\n          schema:\n            type: string\n          description: Marketing Authorization Holder identifier\n        - name: status\n          in: query\n          schema:\n            type: string\n          description: commissioned, recall, dispensed, administered ,destroyed\n      responses:\n        '200':\n          headers:\n            Content-Type:\n              schema:\n                type: application/json\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  meta:\n                    $ref: '#/components/schemas/Meta'\n                  results:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Receipt'\n              example:\n                meta:\n                  page: 1\n                  itemsPerPage: 10\n                  totalPages: 1\n                  query: { }\n                results:\n                  - name: string\n                    gtin: string\n                    batchNumber: string\n                    serialNumber: 0\n                    manufName: string\n                    expiry: \"2030-01-01\"\n                    status: 'commissioned'\n                    sellerId: string\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HttpError'\n              example:\n                status: 400\n                error: Bad Request\n                message: The server could not understand your request\n  /receipt/get/{gtin}/{batchNumber}/{serialNumber}:\n    get:\n      tags:\n        - receipt\n      summary: 'find a receipt by individual product'\n      parameters:\n        - name: gtin\n          in: path\n          schema:\n            type: string\n          required: true\n        - name: batchNumber\n          in: path\n          schema:\n            type: string\n          required: true\n        - name: serialNumber\n          in: path\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          headers:\n            Content-Type:\n              schema:\n                type: application/json\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Receipt'\n              example:\n                name: string\n                gtin: string\n                batchNumber: string\n                serialNumber: 0\n                manufName: string\n                expiry: \"2030-01-01\"\n                status: \"commissioned\"\n                sellerId: string\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HttpError'\n              example:\n                status: 400\n                error: Bad Request\n                message: The server could not understand your request\n  /traceability/create:\n    post:\n      tags:\n        - traceability\n      summary: 'request product traceability'\n      description: \u003e-\n        Traceability can be requested by gtin, batchNumber and serialNumber\n        (optional).\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RequestTraceability'\n            example:\n              gtin: string\n              batchNumber: string\n              serialNumber: string\n      responses:\n        '200':\n          headers:\n            Content-Type:\n              schema:\n                type: application/json\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Traceability'\n              example:\n                id: 0\n                title: string\n                parents: [ { } ]\n                children: [ { } ]\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HttpError'\n              example:\n                status: 400\n                error: Bad Request\n                message: The server could not understand your request\n  /traceability/createAll:\n    post:\n      tags:\n        - traceability\n      summary: 'request traceability of different products'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/RequestTraceability'\n            example:\n              - gtin: string\n                batchNumber: string\n                serialNumber: string\n      responses:\n        '200':\n          headers:\n            Content-Type:\n              schema:\n                type: application/json\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Traceability'\n              example:\n                - id: 0\n                  title: string\n                  parents: [ { } ]\n                  children: [ { } ]\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HttpError'\n              example:\n                status: 400\n                error: Bad Request\n                message: The server could not understand your request\n  /directory/create:\n    post:\n      tags:\n        - directory\n      summary: 'add a partner as an authorized partner or product'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DirectoryEntry'\n            example:\n              id: string\n              role: \"mah\"\n      responses:\n        '200':\n          headers:\n            Content-Type:\n              schema:\n                type: application/json\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DirectoryEntry'\n              example:\n                id: string\n                role: \"MAH\"\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HttpError'\n              example:\n                status: 400\n                error: Bad Request\n                message: The server could not understand your request\n  /directory/createAll:\n    post:\n      tags:\n        - directory\n      summary: 'add one or more authorized partners or products'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/DirectoryEntry'\n            example:\n              - id: string\n                role: 'mah'\n      responses:\n        '200':\n          headers:\n            Content-Type:\n              schema:\n                type: application/json\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DirectoryEntry'\n              example:\n                - id: 0\n                  title: string\n                  parents: [ { } ]\n                  children: [ { } ]\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HttpError'\n              example:\n                status: 400\n                error: Bad Request\n                message: The server could not understand your request\n  /directory/getAll:\n    get:\n      tags:\n        - directory\n      summary: 'return all authorized partners or products according to the filter'\n      parameters:\n        - name: keyword\n          in: query\n          schema:\n            type: string\n          description: \u003e-\n            Search for a keyword in all tables indexes. search by keyword\n            disable other queries.\n        - name: page\n          in: query\n          schema:\n            type: string\n        - name: itemPerPage\n          in: query\n          schema:\n            type: string\n          example: 10\n        - name: sort\n          in: query\n          schema:\n            type: string\n          description: dsc or asc\n          example: dsc\n        - name: role\n          in: query\n          schema:\n            type: string\n            enum:\n              - mah\n              - whs\n              - pha\n              - product\n      responses:\n        '200':\n          headers:\n            Content-Type:\n              schema:\n                type: application/json\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  meta:\n                    $ref: '#/components/schemas/Meta'\n                  results:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/DirectoryEntry'\n              example:\n                meta:\n                  page: 1\n                  itemsPerPage: 10\n                  totalPages: 1\n                  query: { }\n                results:\n                  - id: string\n                    role: 'mah'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HttpError'\n              example:\n                status: 400\n                error: Bad Request\n                message: The server could not understand your request\n  /directory/get/{key}:\n    get:\n      tags:\n        - directory\n      summary: 'find a authorized partner or product by key (id-role)'\n      parameters:\n        - name: key\n          in: path\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          headers:\n            Content-Type:\n              schema:\n                type: application/json\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DirectoryEntry'\n              example:\n                id: string\n                role: \"mah\"\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HttpError'\n              example:\n                status: 400\n                error: Bad Request\n                message: The server could not understand your request\ncomponents:\n  securitySchemes:\n    basicAuth:\n      type: http\n      scheme: basic\n  schemas:\n    DirectoryEntry:\n      type: object\n      description: \"Required fields to add an authorized partner or product\"\n      required:\n        - id\n        - role\n      properties:\n        id:\n          type: string\n        role:\n          type: string\n          enum:\n            - mah\n            - whs\n            - pha\n            - product\n\n    UpdateShipment:\n      type: object\n      description: \"Required fields to update a Shipment\"\n      required:\n        - status\n      properties:\n        status:\n          type: string\n          enum:\n            - pickup\n            - hold\n            - transit\n            - delivered\n            - received\n            - confirmed\n            - reject\n        extraInfo:\n          type: string\n\n    UpdateShipments:\n      type: object\n      description: \"Required fields to update a Shipment\"\n      required:\n        - shipmentId\n        - status\n      properties:\n        shipmentId:\n          type: string\n        status:\n          type: string\n          enum:\n            - pickup\n            - hold\n            - transit\n            - delivered\n            - received\n            - confirmed\n            - reject\n        extraInfo:\n          type: string\n\n    AddShipmentLine:\n      type: object\n      description: \"Required fields to create a ShipmentLine\"\n      required:\n        - gtin\n        - batch\n        - quantity\n      properties:\n        gtin:\n          type: string\n        batch:\n          type: string\n        quantity:\n          type: integer\n\n    AddShipment:\n      type: object\n      description: \"Required fields to add a new Shipment\"\n      required:\n        - requesterId\n        - shipmentLines\n      properties:\n        shipmentId:\n          type: string\n        requesterId:\n          type: string\n        shipmentLines:\n          type: array\n          items:\n            $ref: '#/components/schemas/AddShipmentLine'\n\n    AddSale:\n      type: object\n      required:\n        - productList\n      properties:\n        id:\n          type: string\n        productList:\n          type: array\n          items:\n            type: object\n            properties:\n              gtin:\n                type: string\n              batchNumber:\n                type: string\n              serialNumber:\n                type: string\n\n    Sale:\n      type: object\n      required:\n        - id\n        - sellerId\n        - productList\n      properties:\n        id:\n          type: string\n        sellerId:\n          type: string\n        productList:\n          type: array\n          items:\n            type: object\n            properties:\n              name:\n                type: string\n              gtin:\n                type: string\n              batchNumber:\n                type: string\n              serialNumber:\n                type: string\n              manufName:\n                type: string\n              expiry:\n                type: string\n              status:\n                type: string\n\n\n    RequestTraceability:\n      type: object\n      required:\n        - gtin\n        - batchNumber\n      properties:\n        gtin:\n          type: string\n        batchNumber:\n          type: string\n        serialNumber:\n          type: string\n\n    ShipmentStatus:\n      type: string\n      enum:\n        - created\n        - acknowledged\n        - hold\n        - pickup\n        - transit\n        - delivered\n        - received\n        - confirmed\n        - reject\n\n    BatchStatus:\n      type: object\n      required:\n        - status\n        - log\n      properties:\n        status:\n          type: string\n          description: \"Current status of batch\"\n          enum:\n            - commissioned\n            - quarantined\n            - recall\n        log:\n          type: array\n          description: \"Status change log\"\n          items:\n            type: string\n        extraInfo:\n          type: object\n          description: \"Additional info about each status update\"\n          properties:\n            commissioned:\n              type: array\n              items:\n                type: string\n            quarantined:\n              type: array\n              items:\n                type: string\n            recall:\n              type: array\n              items:\n                type: string\n\n    Product:\n      type: object\n      required:\n        - name\n        - gtin\n        - description\n        - manufName\n      properties:\n        name:\n          type: string\n          description: \"Product identifier name\"\n        gtin:\n          type: string\n          description: \"Product GTIN\"\n        description:\n          type: string\n          description: \"Product description\"\n        manufName:\n          type: string\n          description: \"Product manufacturer identifier\"\n        keySSI:\n          type: string\n          description: \"readSSI to DSU instance\"\n\n    Batch:\n      type: object\n      required:\n        - batchNumber\n        - expiry\n        - serialNumbers\n        - quantity\n        - batchStatus\n      properties:\n        batchNumber:\n          type: string\n          description: \"Product batch number identifier\"\n        expiry:\n          type: string\n          description: \"Product expiration date\"\n        serialNumbers:\n          type: array\n          description: \"Serial number for each individual product that belongs to batch\"\n          items:\n            type: string\n        quantity:\n          type: integer\n          description: \"Batch size\"\n        batchStatus:\n          $ref: '#/components/schemas/BatchStatus'\n        keySSI:\n          type: string\n          description: \"readSSI to DSU instance\"\n\n    ShipmentLine:\n      type: object\n      description: \"Details of the products that belong  to the current shipment\"\n      required:\n        - gtin\n        - batch\n        - quantity\n        - senderId\n        - requesterId\n        - status\n        - createdOn\n      properties:\n        gtin:\n          type: string\n          description: \"Product GTIN\"\n        batch:\n          type: string\n          description: \"Product batch number\"\n        quantity:\n          type: string\n          description: \"Quantity of the individual product being sent in the shipment\"\n        requesterId:\n          type: string\n          description: \"shipment requester identifier (ordering partner ID)\"\n        senderId:\n          type: string\n          description: \"shipment sender identifier (supplying partner ID)\"\n        status:\n          type: string\n          description: \"shipment status\"\n        createdOn:\n          type: string\n          description: \"shipment creation date in timestamp format\"\n\n    Shipment:\n      type: object\n      description: \"Products ordered by a partner that will be delivered by a supplier\"\n      required:\n        - shipmentId\n        - requesterId\n        - senderId\n        - status\n        - shipmentLines\n      properties:\n        shipmentId:\n          type: string\n          description: \"shipment identifier\"\n        requesterId:\n          type: string\n          description: \"shipment requester identifier (ordering partner ID)\"\n        senderId:\n          type: string\n          description: \"shipment sender identifier (supplying partner ID)\"\n        status:\n          $ref: '#/components/schemas/ShipmentStatus'\n        shipmentLines:\n          type: array\n          items:\n            $ref: '#/components/schemas/ShipmentLine'\n        keySSI:\n          type: string\n          description: \"readSSI to DSU instance\"\n\n    Stock:\n      type: object\n      description: \"Informative stock in the FGT system that allows shipment creation and validation\"\n      required:\n        - name\n        - gtin\n        - description\n        - batches\n        - status\n      properties:\n        name:\n          type: string\n          description: \"Product name\"\n        gtin:\n          type: string\n          description: \"Product GTIN\"\n        description:\n          type: string\n          description: \"Product description\"\n        batches:\n          $ref: '#/components/schemas/Batch'\n        status:\n          type: string\n          description: \"Products status in stock\"\n          enum:\n            - available\n            - reserved\n            - transit\n\n    Receipt:\n      type: object\n      description: \"Final step of product traceability, when it is sold to a final consumer\"\n      required:\n        - name\n        - gtin\n        - batchNumber\n        - serialNumber\n        - manufName\n        - expiry\n        - status\n        - sellerId\n      properties:\n        name:\n          type: string\n          description: \"Product name\"\n        gtin:\n          type: string\n          description: \"Product GTIN\"\n        batchNumber:\n          type: string\n          description: \"Product batch number\"\n        serialNumber:\n          type: string\n          description: \"Product serial number\"\n        manufName:\n          type: string\n          description: \"Marketing Authorization Holder identifier\"\n        expiry:\n          type: string\n          description: \"Product expiration date\"\n        status:\n          type: string\n          description: \"Product status\"\n          enum:\n            - commissioned\n            - recall\n            - dispensed\n            - administered\n            - destroyed\n        sellerId:\n          type: string\n          description: \"Product seller identifier\"\n\n    Traceability:\n      type: object\n      description: \"Informative traceability node tree that displays the product trace\"\n      properties:\n        id:\n          type: integer\n          description: \"Traceability identifier\"\n        title:\n          type: string\n          description: \"Traceability root node identifier\"\n        parents:\n          type: object\n          description: \"Traceability tree nodes\"\n        children:\n          type: object\n          description: \"Traceability tree nodes\"\n\n    HttpError:\n      type: object\n      required:\n        - status\n        - error\n        - message\n      properties:\n        status:\n          type:\n            - string\n        error:\n          type:\n            - string\n        message:\n          type:\n            - string\n\n    Order:\n      type: string\n      enum:\n        - dsc\n        - asc\n\n    Query:\n      type: object\n      properties:\n        keyword:\n          type: string\n        sort:\n          $ref: '#/components/schemas/Order'\n\n\n    Meta:\n      type: object\n      properties:\n        page:\n          type: integer\n        itemsPerPage:\n          type: integer\n        totalPages:\n          type: integer\n        query:\n          $ref: '#/components/schemas/Query'\nsecurity:\n  - basicAuth: [ ]",
			"canonicalURL": "/github.com/PharmaLedger-IMI/fgt-workspace@61d1bae7a2a8d28175c469f5b14a04dd51d6fafd/-/blob/fgt-api/swagger/docs/PHA.yml",
			"externalURLs": [
				{
					"url": "https://github.com/PharmaLedger-IMI/fgt-workspace/blob/61d1bae7a2a8d28175c469f5b14a04dd51d6fafd/fgt-api/swagger/docs/PHA.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 1606: cannot unmarshal !!seq into string"
}