{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/InterDigitalInc/AdvantEDGE"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "go-apps/meep-app-enablement/api/app-support/swagger.yaml",
			"byteSize": 43277,
			"content": "openapi: 3.0.2\nservers:\n  - url: 'https://localhost/sandboxname/mec_app_support/v1'\ninfo:\n  title: AdvantEDGE MEC Application Support API\n  version: 2.1.1\n  description: \"MEC Application Support Service is AdvantEDGE's implementation of\n  [ETSI MEC ISG MEC011 Application Enablement API](https://www.etsi.org/deliver/etsi_gs/MEC/001_099/011/02.01.01_60/gs_MEC011v020101p.pdf)\n  \u003cp\u003e[Copyright (c) ETSI 2017](https://forge.etsi.org/etsi-forge-copyright-notice.txt)\n  \u003cp\u003e**Micro-service**\u003cbr\u003e[meep-app-enablement](https://github.com/InterDigitalInc/AdvantEDGE/tree/master/go-apps/meep-app-enablement/server/app-support)\n  \u003cp\u003e**Type \u0026 Usage**\u003cbr\u003eEdge Service used by edge applications that want to get information about applications in the network\n  \u003cp\u003e**Note**\u003cbr\u003eAdvantEDGE supports a selected subset of Application Support API endpoints (see below).\"\n  license:\n    name: Apache 2.0\n    url: 'https://github.com/InterDigitalInc/AdvantEDGE/blob/master/LICENSE'\n  contact:\n    name: InterDigital AdvantEDGE Support\n    email: AdvantEDGE@InterDigital.com\nexternalDocs:\n  description: 'ETSI GS MEC011 Application Enablement API, V2.1.1'\n  url: \u003e-\n    https://www.etsi.org/deliver/etsi_gs/MEC/001_099/011/02.01.01_60/gs_MEC011v020101p.pdf\ntags:\n  - name: mec_app_support\n  - name: unsupported\npaths:\n  '/applications/{appInstanceId}/traffic_rules':\n    parameters:\n      - $ref: '#/components/parameters/Path.AppInstanceId'\n    get:\n      description: \u003e-\n        This method retrieves information about all the traffic rules associated\n        with a MEC application instance.\n      operationId: ApplicationsTrafficRules_GET\n      tags:\n        - unsupported\n      responses:\n        '200':\n          $ref: '#/components/responses/ApplicationsTrafficRules200'\n        '400':\n          $ref: '#/components/responses/400'\n        '403':\n          $ref: '#/components/responses/403'\n        '404':\n          $ref: '#/components/responses/404'\n  '/applications/{appInstanceId}/traffic_rules/{trafficRuleId}':\n    parameters:\n      - $ref: '#/components/parameters/Path.AppInstanceId'\n      - $ref: '#/components/parameters/Path.TrafficRuleId'\n    get:\n      description: \u003e-\n        This method retrieves information about all the traffic rules associated\n        with a MEC application instance.\n      operationId: ApplicationsTrafficRule_GET\n      tags:\n        - unsupported\n      responses:\n        '200':\n          $ref: '#/components/responses/ApplicationsTrafficRule200'\n        '400':\n          $ref: '#/components/responses/400'\n        '403':\n          $ref: '#/components/responses/403'\n        '404':\n          $ref: '#/components/responses/404'\n    put:\n      description: \u003e-\n        This method retrieves information about all the traffic rules associated\n        with a MEC application instance.\n      operationId: ApplicationsTrafficRule_PUT\n      tags:\n        - unsupported\n      responses:\n        '200':\n          $ref: '#/components/responses/ApplicationsTrafficRule200'\n        '400':\n          $ref: '#/components/responses/400'\n        '403':\n          $ref: '#/components/responses/403'\n        '404':\n          $ref: '#/components/responses/404'\n        '412':\n          $ref: '#/components/responses/412'\n      requestBody:\n        $ref: '#/components/requestBodies/ApplicationsTrafficRule'\n  '/applications/{appInstanceId}/dns_rules':\n    parameters:\n      - $ref: '#/components/parameters/Path.AppInstanceId'\n    get:\n      description: \u003e-\n        This method retrieves information about all the DNS rules associated\n        with a MEC application instance.\n      operationId: ApplicationsDnsRules_GET\n      tags:\n        - unsupported\n      responses:\n        '200':\n          $ref: '#/components/responses/ApplicationsDnsRules200'\n        '400':\n          $ref: '#/components/responses/400'\n        '403':\n          $ref: '#/components/responses/403'\n        '404':\n          $ref: '#/components/responses/404'\n  '/applications/{appInstanceId}/dns_rules/{dnsRuleId}':\n    parameters:\n      - $ref: '#/components/parameters/Path.AppInstanceId'\n      - $ref: '#/components/parameters/Path.DnsRuleId'\n    get:\n      description: \u003e-\n        This method retrieves information about a DNS rule associated with a\n        MEC application instance.\n      operationId: ApplicationsDnsRule_GET\n      tags:\n        - unsupported\n      responses:\n        '200':\n          $ref: '#/components/responses/ApplicationsDnsRule200'\n        '400':\n          $ref: '#/components/responses/400'\n        '403':\n          $ref: '#/components/responses/403'\n        '404':\n          $ref: '#/components/responses/404'\n    put:\n      description: 'This method activates, de-activates or updates a traffic rule.'\n      operationId: ApplicationsDnsRule_PUT\n      tags:\n        - unsupported\n      responses:\n        '200':\n          $ref: '#/components/responses/ApplicationsDnsRule200'\n        '400':\n          $ref: '#/components/responses/400'\n        '403':\n          $ref: '#/components/responses/403'\n        '404':\n          $ref: '#/components/responses/404'\n        '412':\n          $ref: '#/components/responses/412'\n      requestBody:\n          $ref: '#/components/requestBodies/ApplicationsDnsRule'\n  '/applications/{appInstanceId}/subscriptions':\n    parameters:\n      - $ref: '#/components/parameters/Path.AppInstanceId'\n    get:\n      description: \u003e-\n        The GET method may be used to request information about all\n        subscriptions for this requestor. Upon success, the response contains\n        entity body with all the subscriptions for the requestor.\n      operationId: ApplicationsSubscriptions_GET\n      tags:\n        - mec_app_support\n      responses:\n        '200':\n          $ref: '#/components/responses/ApplicationsSubscriptions200'\n        '400':\n          $ref: '#/components/responses/400'\n        '403':\n          $ref: '#/components/responses/403'\n        '404':\n          $ref: '#/components/responses/404'\n    post:\n      description: \u003e-\n        The POST method may be used to create a new subscription. One example\n        use case is to create a new subscription to the MEC service\n        availability notifications. Upon success, the response contains entity\n        body describing the created subscription.\n      operationId: ApplicationsSubscriptions_POST\n      tags:\n        - mec_app_support\n      responses:\n        '201':\n          $ref: '#/components/responses/ApplicationsSubscriptions201'\n        '400':\n          $ref: '#/components/responses/400'\n        '403':\n          $ref: '#/components/responses/403'\n        '404':\n          $ref: '#/components/responses/404'\n      requestBody:\n        $ref: '#/components/requestBodies/ApplicationsSubscriptions'\n      callbacks:\n        appTerminationNotification:\n          $ref: '#/components/callbacks/AppTerminationNotification'\n  '/applications/{appInstanceId}/subscriptions/{subscriptionId}':\n    parameters:\n      - $ref: '#/components/parameters/Path.AppInstanceId'\n      - $ref: '#/components/parameters/Path.SubscriptionId'\n    get:\n      description: \u003e-\n        The GET method requests information about a subscription for this\n        requestor. Upon success, the response contains entity body with the\n        subscription for the requestor.\n      operationId: ApplicationsSubscription_GET\n      tags:\n        - mec_app_support\n      responses:\n        '200':\n          $ref: '#/components/responses/ApplicationsSubscription200'\n        '400':\n          $ref: '#/components/responses/400'\n        '403':\n          $ref: '#/components/responses/403'\n        '404':\n          $ref: '#/components/responses/404'\n    delete:\n      description: \u003e-\n        This method deletes a mecAppSuptApiSubscription. This method is typically used\n        in \"Unsubscribing from service availability event notifications\"\n        procedure.\n      operationId: ApplicationsSubscription_DELETE\n      tags:\n        - mec_app_support\n      responses:\n        '204':\n          description: No Content\n        '403':\n          $ref: '#/components/responses/403'\n        '404':\n          $ref: '#/components/responses/404'\n  '/applications/{appInstanceId}/confirm_termination':\n    parameters:\n      - $ref: '#/components/parameters/Path.AppInstanceId'\n    post:\n      description: \u003e-\n        This method is used to confirm the application level termination \n        of an application instance.\n      operationId: ApplicationsConfirmTermination_POST\n      tags:\n        - mec_app_support\n      responses:\n        '204':\n          description: No Content\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '404':\n          $ref: '#/components/responses/404'\n        '409':\n          $ref: '#/components/responses/409'\n        '429':\n          $ref: '#/components/responses/429'\n      requestBody:\n        $ref: '#/components/requestBodies/ApplicationsConfirmTermination'\n  '/applications/{appInstanceId}/confirm_ready':\n    parameters:\n      - $ref: '#/components/parameters/Path.AppInstanceId'\n    post:\n      description: \u003e-\n       This method may be used by the MEC application instance to notify the MEC platform that it is up and running. \n      operationId: ApplicationsConfirmReady_POST\n      tags:\n        - mec_app_support\n      responses:\n        '204':\n          description: No Content\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '404':\n          $ref: '#/components/responses/404'\n        '409':\n          $ref: '#/components/responses/409'\n        '429':\n          $ref: '#/components/responses/429'\n      requestBody:\n        $ref: '#/components/requestBodies/ApplicationsConfirmReady'\n  '/timing/timing_caps':\n    get:\n      description: \u003e-\n        This method retrieves the information of the platform's timing\n        capabilities which corresponds to the timing capabilities query\n      operationId: TimingCaps_GET\n      tags:\n        - mec_app_support\n      responses:\n        '200':\n          $ref: '#/components/responses/TimingCaps200'\n        '400':\n          $ref: '#/components/responses/400'\n        '403':\n          $ref: '#/components/responses/403'\n        '404':\n          $ref: '#/components/responses/404'\n  '/timing/current_time':\n    get:\n      description: \u003e-\n        This method retrieves the information of the platform's current time\n        which corresponds to the get platform time procedure\n      operationId: TimingCurrentTime_GET\n      tags:\n        - mec_app_support\n      responses:\n        '200':\n          $ref: '#/components/responses/TimingCurrentTime200'\n        '400':\n          $ref: '#/components/responses/400'\n        '403':\n          $ref: '#/components/responses/403'\n        '404':\n          $ref: '#/components/responses/404'\ncomponents:\n  schemas:\n    AppReadyConfirmation:\n      description: \u003e-\n        This type represents the information that the MEC application instance indicates to the MEC platform that it is up and running.\n      type: object\n      required:\n        - indication\n      properties:\n        indication:\n          description: Indication about the MEC application instance.\n          type: string\n          enum:\n            - READY\n    AppTerminationConfirmation:\n      description: \u003e-\n        This type represents the information that the MEC application instance provides to the MEC platform when informing it that the application has completed its application level related terminate/stop actions, e.g. retention of application state in the case of stop.\n      type: object\n      required:\n        - operationAction\n      properties:\n        operationAction:\n          $ref: '#/components/schemas/OperationActionType'\n    AppTerminationNotification:\n      description: \u003e-\n        This type represents the information that the MEC platform\n        notifies the subscribed application instance about  the corresponding\n        application instance termination/stop.\n      type: object\n      required:\n        - notificationType\n        - operationAction\n        - maxGracefulTimeout\n        - _links\n      properties:\n        notificationType:\n          description: Shall be set to AppTerminationNotification.\n          type: string\n        operationAction:\n          $ref: '#/components/schemas/OperationActionType'\n        maxGracefulTimeout:\n          description: \u003e-\n            Maximum timeout value in seconds for graceful termination or graceful\n            stop of an application instance.\n          type: integer\n          format: uint32\n        _links:\n          description: \u003e-\n            Object containing hyperlinks related to the resource.\n          type: object\n          required:\n            - subscription\n          properties:\n            subscription:\n              $ref: '#/components/schemas/LinkType'\n            confirmTermination:\n              $ref: '#/components/schemas/LinkType'\n    AppTerminationNotificationSubscription:\n      description: \u003e-\n        This type represents the information that the MEC platform\n        notifies the subscribed application instance about  the corresponding\n        application instance termination/stop.\n      type: object\n      required:\n        - subscriptionType\n        - callbackReference\n        - _links\n        - appInstanceId\n      properties:\n        subscriptionType:\n          description: Shall be set to AppTerminationNotificationSubscription.\n          type: string\n        callbackReference:\n          description: \u003e-\n            URI selected by the MEC application instance to receive\n            notifications on the subscribed MEC application instance\n            management information. This shall be included in both the request and\n            the response.\n          type: string\n          format: uri\n        _links:\n          description: Self-referring URI.\n          type: object\n          required:\n            - self\n          properties:\n            self:\n              $ref: '#/components/schemas/LinkType'\n          readOnly: true\n        appInstanceId:\n          description: It is used as the filtering criterion for the subscribed events.\n          type: string\n    CurrentTime:\n      description: \u003e-\n        This type represents the information provided by the MEC\n        platform in response to the Get Platform Time Request message.\n      type: object\n      required:\n        - nanoSeconds\n        - seconds\n        - timeSourceStatus\n      properties:\n        seconds:\n          type: integer\n          format: uint32\n          description: \u003e-\n            The seconds part of the time. Time is defined as Unix-time since\n            January 1, 1970, 00:00:00 UTC\n        nanoSeconds:\n          type: integer\n          format: uint32\n          description: \u003e-\n            The nanoseconds part of the time. Time is defined as Unix-time since\n            January 1, 1970, 00:00:00 UTC\n        timeSourceStatus:\n          type: string\n          enum:\n            - TRACEABLE\n            - NONTRACEABLE\n          description: \u003e-\n            Platform Time Source status. 1 = TRACEABLE - time source is locked\n            to the UTC time source. 2 = NONTRACEABLE - time source is not locked\n            to the UTC time source\n    DestinationInterface:\n      description: This type represents the destination interface. If the action is FORWARD_DECAPSULATED, FORWARD_ENCAPSULATED or PASSTHROUGH one value shall be provided. If the action is DUPLICATE_DECAPSULATED or DUPLICATE_ENCAPSULATED, two values shall be provided. If the action is DROP, no value shall be provided.\n      type: object\n      required:\n        - interfaceType\n      properties:\n        interfaceType:\n          description: Type of the interface\n          type: string\n          enum:\n            - TUNNEL\n            - MAC\n            - IP\n        tunnelInfo:\n          $ref: '#/components/schemas/TunnelInfo'\n        srcMacAddress:\n          description: Source address identifies the MAC address of the interface\n          type: string\n        dstMacAddress:\n          description: Destination address identifies the MAC address of the interface\n          type: string\n        dstIpAddress:\n          description: IP address of the remote destination\n          type: string\n    DnsRule:\n      description: This type represents the general information of a DNS rule.\n      type: object\n      required:\n        - dnsRuleId\n        - domainName\n        - ipAddressType\n        - ipAddress\n        - state\n      properties:\n        dnsRuleId:\n          description: Identifies the DNS Rule\n          type: string\n        domainName:\n          description: FQDN resolved by the DNS rule\n          type: string\n        ipAddressType:\n          description: IP address type\n          type: string\n          enum:\n            - IP_V6\n            - IP_V4\n        ipAddress:\n          description: IP address associated with the FQDN resolved by the DNS rule\n          type: string\n        ttl:\n          description: Time to live value\n          type: integer\n          format: uint32\n        state:\n          description: DNS rule state. This attribute may be updated using HTTP PUT method\n          type: string\n          enum:\n            - ACTIVE\n            - INACTIVE\n          example: 'ACTIVE'\n    LinkType:\n      description: This type represents a type of link and may be referenced from data structures\n      type: object\n      properties:\n        href: \n          description: URI referring to a resource\n          type: string\n          format: uri\n    SubscriptionLinkList:\n      description: \u003e-\n        This type represents a list of links related to currently existing\n        subscriptions for a MEC application instance. This information\n        is returned when sending a request to receive current subscriptions.\n      type: object\n      required:\n        - _links\n      properties:\n        _links:\n          description: Self-referring URI.\n          type: object\n          required:\n            - self\n          properties:\n            self:\n              $ref: '#/components/schemas/LinkType'\n            subscriptions:\n              description: The MEC application instance's subscriptions\n              type: array\n              items:\n                description: A link to a subscription.\n                type: object\n                required:\n                  - href\n                  - subscriptionType\n                properties:\n                  href:\n                    description: URI referring to a resource\n                    type: string\n                    format: uri\n                  subscriptionType:\n                    description: \u003e-\n                      Type of the subscription. The values are as defined in\n                      the \"subscriptionType\" attribute for each different Mp1\n                      event subscription data type.\n                    type: string\n    OperationActionType:\n      description: Operation that is being performed on the MEC application instance.\n      type: string\n      enum:\n        - STOPPING\n        - TERMINATING\n    ProblemDetails:\n      type: object\n      properties:\n        type:\n          type: string\n          format: uri\n          description: \u003e-\n            A URI reference according to IETF RFC 3986 that identifies the problem\n            type\n        title:\n          type: string\n          description: 'A short, human-readable summary of the problem type'\n        status:\n          type: integer\n          format: uint32\n          description: The HTTP status code for this occurrence of the problem\n        detail:\n          type: string\n          description: A human-readable explanation specific to this occurrence of the problem\n        instance:\n          type: string\n          format: uri\n          description: A URI reference that identifies the specific occurrence of the problem\n    TimingCaps:\n      description: \u003e-\n        This type represents the information provided by the MEC\n        platform in response to the Timing capabilities Query message.\n      type: object\n      properties:\n        timeStamp:\n          description: time\n          type: object\n          required:\n            - nanoSeconds\n            - seconds\n          properties:\n            seconds:\n              type: integer\n              format: uint32\n              description: \u003e-\n                The seconds part of the time. Time is defined as Unix-time since\n                January 1, 1970, 00:00:00 UTC\n            nanoSeconds:\n              type: integer\n              format: uint32\n              description: \u003e-\n                The nanoseconds part of the time. Time is defined as Unix-time since\n                January 1, 1970, 00:00:00 UTC\n        ntpServers:\n          description: Available NTP servers\n          type: array\n          items:\n            description: NTP server detail.\n            type: object\n            required:\n              - ntpServerAddrType\n              - ntpServerAddr\n              - minPollingInterval\n              - maxPollingInterval\n              - localPriority\n              - authenticationOption\n              - authenticationKeyNum\n            properties:\n              ntpServerAddrType:\n                description: Address type of NTP server\n                type: string\n                enum:\n                  - IP_ADDRESS\n                  - DNS_NAME\n              ntpServerAddr:\n                description: NTP server address\n                type: string\n              minPollingInterval:\n                description: \u003e-\n                  Minimum poll interval for NTP messages, in seconds as a power of two.\n                  Range 3...17\n                type: integer\n                format: uint32\n              maxPollingInterval:\n                description: \u003e-\n                  Maximum poll interval for NTP messages, in seconds as a power of two.\n                  Range 3...17\n                type: integer\n                format: uint32\n              localPriority:\n                description: NTP server local priority\n                type: integer\n                format: uint32\n              authenticationOption:\n                description: NTP authentication option\n                type: string\n                enum:\n                  - NONE\n                  - SYMMETRIC_KEY\n                  - AUTO_KEY\n              authenticationKeyNum:\n                description: Authentication key number\n                type: integer\n                format: uint32\n        ptpMasters:\n          description: Available PTP Masters\n          type: array\n          items:\n            description: NTP server detail.\n            type: object\n            required:\n              - ptpMasterIpAddress\n              - ptpMasterLocalPriority\n              - delayReqMaxRate\n            properties:\n              ptpMasterIpAddress:\n                description: PTP Master IP Address\n                type: string\n              ptpMasterLocalPriority:\n                description: PTP Master local priority\n                type: integer\n                format: uint32\n              delayReqMaxRate:\n                description: Acceptable maximum rate of the Delay_Req messages in packets per second\n                type: integer\n                format: uint32\n    TrafficFilter:\n      description: This type represents the traffic filter.\n      type: object\n      properties:\n        srcAddress:\n          description: \u003e-\n            An IP address or a range of IP address. For IPv4, the IP address\n            could be an IP address plus mask, or an individual IP address, or a\n            range of IP addresses. For IPv6, the IP address could be an IP\n            prefix, or a range of IP prefixes.\n          type: array\n          items:\n            description: Identify the traffic ip address.\n            type: string\n        dstAddress:\n          description: \u003e-\n            An IP address or a range of IP address. For IPv4, the IP address\n            could be an IP address plus mask, or an individual IP address, or a\n            range of IP addresses. For IPv6, the IP address could be an IP\n            prefix, or a range of IP prefixes.\n          type: array\n          items:\n            description: Identify the traffic ip address.\n            type: string\n        srcPort:\n          description: A port or a range of ports\n          type: array\n          items:\n            description: A port\n            type: string\n        dstPort:\n          description: A port or a range of ports\n          type: array\n          items:\n            description: A port\n            type: string\n        protocol:\n          description: Specify the protocol of the traffic filter\n          type: array\n          items:\n            description: Protocol of the traffic filter\n            type: string\n        token:\n          description: Used for token based traffic rule\n          type: array\n          items:\n            description: Used for token based traffic rule\n            type: string\n        srcTunnelAddress:\n          description: Used for GTP tunnel based traffic rule\n          type: array\n          items:\n            description: Used for GTP tunnel based traffic rule\n            type: string\n        tgtTunnelAddress:\n          description: Used for GTP tunnel based traffic rule\n          type: array\n          items:\n            description: Used for GTP tunnel based traffic rule\n            type: string\n        srcTunnelPort:\n          description: Used for GTP tunnel based traffic rule\n          type: array\n          items:\n            description: Used for GTP tunnel based traffic rule\n            type: string\n        dstTunnelPort:\n          description: Used for GTP tunnel based traffic rule\n          type: array\n          items:\n            description: Used for GTP tunnel based traffic rule\n            type: string\n        qCI:\n          description: \u003e-\n            Used to match all packets that have the same Quality Class Indicator\n            (QCI).\n          type: integer\n          format: uint32\n        dSCP:\n          description: \u003e-\n            Used to match all IPv4 packets that have the same Differentiated\n            Services Code Point (DSCP)\n          type: integer\n          format: uint32\n        tC:\n          description: Used to match all IPv6 packets that have the same Traffic Class.\n          type: integer\n          format: uint32\n    TrafficRule:\n      description: This type represents the general information of a traffic rule.\n      type: object\n      required:\n        - trafficRuleId\n        - filterType\n        - priority\n        - trafficFilter\n        - action\n        - state\n      properties:\n        trafficRuleId:\n          description: Identify the traffic rule.\n          type: string\n        filterType:\n          description: \u003e-\n            Definition of filter per FLOW or PACKET. If flow the filter match\n            UE-\u003eEPC packet and the reverse packet is handled in the same context\n          type: string\n          enum:\n            - FLOW\n            - PACKET\n        priority:\n          description: \u003e-\n            Priority of this traffic rule. If traffic rule conflicts, the one with\n            higher priority take precedence\n          type: integer\n          format: uint32\n        trafficFilter:\n          type: array\n          items:\n            $ref: '#/components/schemas/TrafficFilter'\n        action:\n          description: \u003e-\n            The action of the MEC host data plane when a packet matches the trafficFilter\n          type: string\n          enum:\n            - DROP\n            - FORWARD_DECAPSULATED\n            - FORWARD_ENCAPSULATED\n            - PASSTHROUGH\n            - DUPLICATE_DECAPSULATED\n            - DUPLICATE_ENCAPSULATED\n        dstInterface:\n          $ref: '#/components/schemas/DestinationInterface'\n        state:\n          description: Contains the traffic rule state. This attribute may be updated using HTTP PUT   method\n          type: string\n          enum:\n            - ACTIVE\n            - INACTIVE\n    TunnelInfo:\n      description: This type represents the tunnel information.\n      type: object\n      required:\n        - tunnelType\n      properties:\n        tunnelType:\n          description: This type represents the tunnel information.\n          type: string\n          enum:\n            - GTP_U\n            - GRE\n        tunnelDstAddress:\n          description: Destination address of the tunnel\n          type: string\n        tunnelSrcAddress:\n          description: Source address of the tunnel\n          type: string\n  parameters:\n    Path.AppInstanceId:\n      name: appInstanceId\n      description: \u003e-\n        Represents a MEC application instance. Note that the\n        appInstanceId is allocated by the MEC platform manager.\n      in: path\n      required: true\n      schema:\n        type: string\n    Path.DnsRuleId:\n      name: dnsRuleId\n      description: Represents a DNS rule.\n      in: path\n      required: true\n      schema:\n        type: string\n    Path.SubscriptionId:\n      name: subscriptionId\n      description: \u003e-\n        Represents a subscription to the notifications from the MEC\n        platform.\n      in: path\n      required: true\n      schema:\n        type: string\n    Path.TrafficRuleId:\n      name: trafficRuleId\n      description: Represents a traffic rule.\n      in: path\n      required: true\n      schema:\n        type: string\n  responses:\n    ApplicationsDnsRules200:\n      description: \u003e-\n        It is used to indicate nonspecific success. The response body\n        contains a representation of the resource.\n      content:\n        application/json:\n          schema:\n            type: array\n            minItems: 0\n            items:\n              $ref: '#/components/schemas/DnsRule'\n          examples:\n            DnsRules:\n              $ref: '#/components/examples/DnsRules'\n      links:\n        getIndividualMeDNSRule:\n          $ref: '#/components/links/GetIndividualMeDNSRule'\n        putIndividualMeDNSRule:\n          $ref: '#/components/links/PutIndividualMeDNSRule'\n    ApplicationsDnsRule200:\n      description: \u003e-\n        It is used to indicate nonspecific success. The response body\n        contains a representation of the resource.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/DnsRule'\n          examples:\n            DnsRule:\n              $ref: '#/components/examples/DnsRule'\n    ApplicationsSubscriptions200:\n      description: \u003e-\n        Upon success, a response body containing the list of links to the\n        requested subscriptions is returned.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/SubscriptionLinkList'\n      links:\n        getIndividualmecAppSuptApiSubscriptionLinkList:\n          $ref: '#/components/links/GetIndividualmecAppSuptApiSubscriptionLinkList'\n        delIndividualmecAppSuptApiSubscriptionLinkList:\n          $ref: '#/components/links/DelIndividualmecAppSuptApiSubscriptionLinkList'\n    ApplicationsSubscriptions201:\n      description: \u003e-\n        Entity body in the request contains a subscription to the \n        MEC service availability notifications that is to be created.\n      headers:\n        location:\n          description: The resource URI of the created resource\n          schema:\n            type: string\n            format: uri\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AppTerminationNotificationSubscription'\n      links:\n        getIndividualmecAppSuptApiSubscription:\n          $ref: '#/components/links/GetIndividualmecAppSuptApiSubscription'\n        delIndividualmecAppSuptApiSubscription:\n          $ref: '#/components/links/DelIndividualmecAppSuptApiSubscription'\n    ApplicationsSubscription200:\n      description: \u003e-\n        Upon success, a response body containing the requested subscription\n        is returned.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AppTerminationNotificationSubscription'\n    ApplicationsTrafficRules200:\n      description: \u003e-\n        It is used to indicate nonspecific success. The response body\n        contains a representation of the resource.\n      content:\n        application/json:\n          schema:\n            type: array\n            minItems: 0\n            items:\n              $ref: '#/components/schemas/TrafficRule'\n          examples:\n            TrafficRules:\n              $ref: '#/components/examples/TrafficRules'\n      links:\n        getIndividualMeTrafficRule:\n          $ref: '#/components/links/GetIndividualMeTrafficRule'\n        putIndividualMeTrafficRule:\n          $ref: '#/components/links/PutIndividualMeTrafficRule'\n    ApplicationsTrafficRule200:\n      description: \u003e-\n        It is used to indicate nonspecific success. The response body\n        contains a representation of the resource.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/TrafficRule'\n          examples:\n            TrafficRule:\n              $ref: '#/components/examples/TrafficRule'\n    TimingCurrentTime200:\n      description: \u003e-\n        It is used to indicate nonspecific success. The response body\n        contains a representation of the resource.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CurrentTime'\n    TimingCaps200:\n      description: \u003e-\n        It is used to indicate nonspecific success. The response body\n        contains a representation of the resource.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/TimingCaps'\n    400:\n      description: \u003e-\n        Bad Request.\n        It is used to indicate that incorrect parameters were passed to the request.\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/ProblemDetails'\n    401:\n      description: \u003e-\n        Unauthorized.\n        It is used when the client did not submit the appropriate credentials.\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/ProblemDetails'\n    403:\n      description: \u003e-\n        Forbidden.\n        The operation is not allowed given the current status of the resource. \n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/ProblemDetails'\n    404:\n      description: \u003e-\n        Not Found.\n        It is used when a client provided a URI that cannot be mapped \n        to a valid resource URI.\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/ProblemDetails'\n    409:\n      description: \u003e- \n        Conflict.\n        The operation cannot be executed currently, due to a conflict with \n        the state of the resource. Typically, this is because the application \n        instance resource is in NOT_INSTANTIATED state.\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/ProblemDetails'\n    412:\n      description: \u003e-\n        Precondition Failed.\n        It is used when a condition has failed during conditional requests, \n        e.g. when using ETags to avoid write conflicts.\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/ProblemDetails'\n    429:\n      description: \u003e-\n        Too Many Requests.\n        It is used when a rate limiter has triggered.\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/ProblemDetails'\n  requestBodies:\n    ApplicationsConfirmReady:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AppReadyConfirmation'\n          example:\n            indication: 'READY'\n      required: true\n    ApplicationsConfirmTermination:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AppTerminationConfirmation'\n          example:\n            operationAction: 'TERMINATING'\n      required: true\n    ApplicationsDnsRule:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/DnsRule'\n      description: The updated state is included in the entity body of the request.\n      required: true\n    ApplicationsSubscriptions:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AppTerminationNotificationSubscription'\n          example:\n            subscriptionType: 'AppTerminationNotificationSubscription'\n            callbackReference: 'https://my.callback.com/sandboxname/mep1/rni/v2/'\n            appInstanceId: 'myAppInstanceId'\n      description: \u003e-\n        Entity body in the request contains a subscription to the MEC\n        application termination notifications that is to be created.\n      required: true\n    ApplicationsTrafficRule:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/TrafficRule'\n      description: One or more updated attributes that are allowed to be changed\n      required: true\n    AppTerminationNotification:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AppTerminationNotification'\n      required: true\n  callbacks:\n    AppTerminationNotification:\n      '{$request.body#/callbackReference}':\n        post:\n          description: \u003e-\n            Represents the information that the MEP notifies the\n            subscribed application instance about the corresponding \n            application instance termination/stop\n          operationId: As_AppTerminationNotification_POST\n          tags:\n            - callbacks\n          requestBody:\n            $ref: '#/components/requestBodies/AppTerminationNotification'\n          responses:\n            '200':\n              description: Expected responses from callback consumer, if it accepts the callback\n  links:\n    GetIndividualMeDNSRule:\n      operationId: As_ApplicationsDnsRule_GET\n      description: The `dnsRuleId` value returned in the response can be used as the `dnsRuleId` parameter in `GET /applications/{appInstanceId}/dns_rules/{dnsRuleId}`\n      parameters:\n        dnsRuleId: '$response.body#/dnsRuleId'\n    PutIndividualMeDNSRule:\n      operationId: As_ApplicationsDnsRule_PUT\n      description: The `dnsRuleId` value returned in the response can be used as the `dnsRuleId` parameter in `PUT /applications/{appInstanceId}/dns_rules/{dnsRuleId}`\n      parameters:\n        dnsRuleId: '$response.body#/dnsRuleId'\n    GetIndividualMeTrafficRule:\n      operationId: As_ApplicationsTrafficRule_GET\n      description: The `trafficRuleId` value returned in the response can be used as the `trafficRuleId` parameter in `GET /applications/{appInstanceId}/traffic_rules/{trafficRuleId}`\n      parameters:\n        trafficRuleId: '$response.body#/trafficRuleId'\n    PutIndividualMeTrafficRule:\n      operationId: As_ApplicationsTrafficRule_PUT\n      description: The `trafficRuleId` value returned in the response can be used as the `trafficRuleId` parameter in `PUT /applications/{appInstanceId}/traffic_rules/{trafficRuleId}`\n      parameters:\n        trafficRuleId: '$response.body#/trafficRuleId'\n    GetIndividualmecAppSuptApiSubscription:\n      operationId: As_ApplicationsSubscription_GET\n      description: The `subscriptionId` value returned in the response can be used as the `subscriptionId` parameter in `GET /applications/{appInstanceId}/subscriptions/{subscriptionId}`\n      parameters:\n        description: regex = \\/mec_app_support\\/v1\\/applications\\/.*\\/subscriptions\\/.*\\/(.*);subscriptionId = href.match(regex)[1];// where \"href\" is an attribute within the subscription attribute within the _links attribute\n        subscriptionId: 'TBC'\n    DelIndividualmecAppSuptApiSubscription:\n      operationId: As_ApplicationsSubscription_DELETE\n      description: The `subscriptionId` value returned in the response can be used as the `subscriptionId` parameter in `DELETE /applications/{appInstanceId}/subscriptions/{subscriptionId}`\n      parameters:\n        description: regex = \\/mec_app_support\\/v1\\/applications\\/.*\\/subscriptions\\/(.*);subscriptionId = href.match(regex)[1];// where \"href\" is an attribute within the subscription attribute within the _links attribute\n        subscriptionId: 'TBC'\n    GetIndividualmecAppSuptApiSubscriptionLinkList:\n      operationId: As_ApplicationsSubscription_GET\n      description: The `subscriptionId` value returned in the response can be used as the `subscriptionId` parameter in `GET /applications/{appInstanceId}/subscriptions/{subscriptionId}`\n      parameters:\n        description: regex = \\/mec_app_support\\/v1\\/applications\\/.*\\/subscriptions\\/(.*);subscriptionId = href.match(regex)[1];// where \"href\" is an attribute within the subscription attribute within the _links attribute\n        subscriptionId: 'TBC'\n    DelIndividualmecAppSuptApiSubscriptionLinkList:\n      operationId: As_ApplicationsSubscription_DELETE\n      description: The `subscriptionId` value returned in the response can be used as the `subscriptionId` parameter in `DELETE /applications/{appInstanceId}/subscriptions/{subscriptionId}`\n      parameters:\n        description: regex = \\/mec_app_support\\/v1\\/applications\\/.*\\/subscriptions\\/(.*);subscriptionId = href.match(regex)[1];// where \"href\" is an attribute within the subscription attribute within the _links attribute\n        subscriptionId: 'TBC'\n  examples:\n    DnsRule:\n      value:\n        dnsRuleId: 'DnsRule1'\n        domainName: 'www.example.com'\n        ipAddressType: 'IP_V4'\n        ipAddress: '146.241.7.3'\n        ttl: 300\n        state: 'ACTIVE'\n    DnsRules:\n      value:\n        - dnsRuleId: 'DnsRule1'\n          domainName: 'www.example.com'\n          ipAddressType: 'IP_V4'\n          ipAddress: '146.241.7.3'\n          ttl: 300\n          state: 'ACTIVE'\n        - dnsRuleId: 'DnsRule2'\n          domainName: 'www.example.com'\n          ipAddressType: 'IP_V4'\n          ipAddress: '146.241.7.4'\n          ttl: 300\n          state: 'INACTIVE'\n    TrafficRule:\n      value:\n        trafficRuleId: 'TrafficRule123'\n        serName: 'ExampleService'\n        filterType: 'FLOW'\n        priority: 1\n        trafficFilter:\n          - srcAddress:\n              - '192.168.2.0/24'\n              - '192.168.3.0/24'\n            dstAddress:\n              - '192.127.4.100/32'\n            dstPort:\n              - '80'\n        action: 'FORWARD_DECAPSULATED'\n        dstInterface:\n          interfaceType: 'IP'\n          dstIpAddress: '20.1.1.1'\n        state: 'ACTIVE'\n    TrafficRules:\n      value:\n        - trafficRuleId: 'TrafficRule123'\n          serName: 'ExampleService'\n          filterType: 'FLOW'\n          priority: 1\n          trafficFilter:\n            - srcAddress:\n                - '192.168.2.0/24'\n                - '192.168.3.0/24'\n              dstAddress:\n                - '192.127.4.100/32'\n              dstPort:\n                - '80'\n          action: 'FORWARD_DECAPSULATED'\n          dstInterface:\n            interfaceType: 'IP'\n            dstIpAddress: '20.1.1.1'\n          state: 'ACTIVE'\n\n\n\n",
			"canonicalURL": "/github.com/InterDigitalInc/AdvantEDGE@f203f7ab4f1cd5983fbbe2963ff72092b6e9b107/-/blob/go-apps/meep-app-enablement/api/app-support/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/InterDigitalInc/AdvantEDGE/blob/f203f7ab4f1cd5983fbbe2963ff72092b6e9b107/go-apps/meep-app-enablement/api/app-support/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 1: cannot unmarshal !!str `#/compo...` into ogen.PathItem"
}