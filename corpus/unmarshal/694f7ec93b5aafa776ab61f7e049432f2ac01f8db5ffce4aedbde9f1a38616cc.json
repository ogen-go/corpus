{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/jeffmikels/ProPresenter-API"
		},
		"file": {
			"name": "pro7.9.openapi-spec.json",
			"size": 0,
			"path": "pro7.9.openapi-spec.json",
			"byteSize": 206580,
			"content": "{\n  \"openapi\": \"3.0.2\",\n  \"info\": {\n    \"title\": \"ProPresenter API\",\n    \"version\": \"1.0\",\n    \"description\": \"Public API for controlling and retrieving information from ProPresenter.\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"../../\"\n    }\n  ],\n  \"paths\": {\n    \"/v1/audio/playlists\": {\n      \"get\": {\n        \"operationId\": \"audioPlaylistsGet\",\n        \"tags\": [\n          \"Audio\"\n        ],\n        \"summary\": \"Requests a list with all the configured audio playlists.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"required\": [\n                      \"id\"\n                    ],\n                    \"properties\": {\n                      \"id\": {\n                        \"$ref\": \"#/paths/~1v1~1playlist~1current/get/responses/200/content/application~1json/schema\"\n                      },\n                      \"type\": {\n                        \"type\": \"string\",\n                        \"enum\": [\n                          \"group\",\n                          \"playlist\"\n                        ],\n                        \"description\": \"Whether this is a playlist folder or an actual playlist.\"\n                      },\n                      \"children\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"$ref\": \"#/paths/~1v1~1audio~1playlists/get/responses/200/content/application~1json/schema/items\"\n                        },\n                        \"description\": \"The list of child playlists inside this playlist.\"\n                      }\n                    }\n                  }\n                },\n                \"example\": {\n                  \"id\": {\n                    \"uuid\": \"ED59503B-394D-4D5D-B0B0-5AE80D0BA025\",\n                    \"name\": \"Playlist Folder\",\n                    \"index\": 0\n                  },\n                  \"type\": \"group\",\n                  \"children\": [\n                    {\n                      \"id\": {\n                        \"uuid\": \"C49A250A-3E32-4C26-A220-46D6596426B5\",\n                        \"name\": \"Playlist 1\",\n                        \"index\": 0\n                      },\n                      \"type\": \"playlist\",\n                      \"children\": []\n                    },\n                    {\n                      \"id\": {\n                        \"uuid\": \"D8C5D151-45C9-4CFF-B1F9-74F3B4B5173B\",\n                        \"name\": \"Playlist 2\",\n                        \"index\": 1\n                      },\n                      \"type\": \"playlist\",\n                      \"children\": []\n                    }\n                  ]\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/audio/playlist/{playlist_id}\": {\n      \"get\": {\n        \"operationId\": \"audioPlaylistGet\",\n        \"tags\": [\n          \"Audio\"\n        ],\n        \"summary\": \"Requests a list of all the audio items in the specified audio playlist.\",\n        \"description\": \"A maximum of 100 items will be returned per call. The `start` query parameter can\\nbe used to retrieve multiple pages of items, by setting it to the index of the first\\nitem to return.\\n\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1playlist~1%7Bplaylist_id%7D/parameters/0\"\n          },\n          {\n            \"in\": \"query\",\n            \"required\": false,\n            \"name\": \"start\",\n            \"description\": \"The starting index in the list. If the index is out of range, the returned items array will be empty.\\n\",\n            \"schema\": {\n              \"type\": \"integer\"\n            },\n            \"example\": 100,\n            \"default\": 0\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"required\": [\n                      \"id\",\n                      \"items\"\n                    ],\n                    \"properties\": {\n                      \"id\": {\n                        \"$ref\": \"#/paths/~1v1~1playlist~1current/get/responses/200/content/application~1json/schema\"\n                      },\n                      \"items\": {\n                        \"type\": \"array\",\n                        \"$ref\": \"#/paths/~1v1~1media~1playlist~1%7Bplaylist_id%7D/get/responses/200/content/application~1json/schema/items\"\n                      }\n                    }\n                  }\n                },\n                \"example\": {\n                  \"id\": {\n                    \"uuid\": \"B238C071-3628-4204-BB19-DDE76DC57CE7\",\n                    \"name\": \"Playlist 3\",\n                    \"index\": 2\n                  },\n                  \"items\": [\n                    {\n                      \"id\": {\n                        \"uuid\": \"94A2D4EA-EEA5-48A4-AF6F-850D700C1830\",\n                        \"name\": \"Song 1\",\n                        \"index\": 0\n                      },\n                      \"type\": \"audio\",\n                      \"artist\": \"unknown\",\n                      \"duration\": 123\n                    },\n                    {\n                      \"id\": {\n                        \"uuid\": \"8F40D44E-4018-4552-8803-60DC788DB1CF\",\n                        \"name\": \"Amazing Grace\",\n                        \"index\": 1\n                      },\n                      \"type\": \"audio\",\n                      \"artist\": \"John Newton\",\n                      \"duration\": 110\n                    }\n                  ]\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/audio/playlist/{playlist_id}/updates\": {\n      \"get\": {\n        \"operationId\": \"audioPlaylistUpdateGet\",\n        \"tags\": [\n          \"Audio\"\n        ],\n        \"summary\": \"Requests a chunked data update every time the specified audio playlist changes.\",\n        \"description\": \"This endpoint can be used to subscribe to changes to a particular playlist.\\nThe response is chunked, where each chunk is a simple string \\\"change\\\".\\nThis string will be sent whenever the audio playlist changes in regards to any of the\\ndata returned by `GET /audio/playlist/{playlist_id}`. The updated playlist data can be\\nqueried by recalling `GET /audio/playlist/{playlist_id}`.\\n\\nNote that this endpoint will return nothing unless the `chunked` parameter is set to `true`.\\n\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1playlist~1%7Bplaylist_id%7D/parameters/0\"\n          },\n          {\n            \"$ref\": \"#/paths/~1v1~1props/get/parameters/0\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"enum\": [\n                    \"change\"\n                  ]\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/capture/status\": {\n      \"get\": {\n        \"operationId\": \"captureStatusGet\",\n        \"tags\": [\n          \"Capture\"\n        ],\n        \"summary\": \"Requests the current capture status and capture time.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1props/get/parameters/0\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"capturing\"\n                  ],\n                  \"properties\": {\n                    \"capturing\": {\n                      \"type\": \"boolean\",\n                      \"description\": \"`true` if the capture is running, `false` otherwise\\n\"\n                    },\n                    \"capture_time\": {\n                      \"type\": \"string\",\n                      \"description\": \"The length of time the capture has been running for, hh:mm:ss format\",\n                      \"example\": \"00:42:27\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/capture/{operation}\": {\n      \"get\": {\n        \"operationId\": \"captureOperation\",\n        \"tags\": [\n          \"Capture\"\n        ],\n        \"summary\": \"Performs the requested capture operation (start, stop).\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"required\": true,\n            \"name\": \"operation\",\n            \"description\": \"The capture operation to perform\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"start\",\n                \"stop\"\n              ]\n            }\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"$ref\": \"#/paths/~1v1~1look~1current/put/responses/204\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/capture/settings\": {\n      \"get\": {\n        \"operationId\": \"captureSettingsGet\",\n        \"tags\": [\n          \"Capture\"\n        ],\n        \"summary\": \"Requests the current capture settings.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/paths/~1v1~1capture~1settings/put/requestBody/content/application~1json/schema\"\n                },\n                \"examples\": {\n                  \"disk\": {\n                    \"$ref\": \"#/paths/~1v1~1capture~1settings/put/requestBody/content/application~1json/examples/disk\"\n                  },\n                  \"rtmp_no_local\": {\n                    \"$ref\": \"#/paths/~1v1~1capture~1settings/put/requestBody/content/application~1json/examples/rtmp_no_local\"\n                  },\n                  \"rtmp_local\": {\n                    \"$ref\": \"#/paths/~1v1~1capture~1settings/put/requestBody/content/application~1json/examples/rtmp_local\"\n                  },\n                  \"resi\": {\n                    \"$ref\": \"#/paths/~1v1~1capture~1settings/put/requestBody/content/application~1json/examples/resi\"\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      },\n      \"put\": {\n        \"operationId\": \"captureSettingsSet\",\n        \"tags\": [\n          \"Capture\"\n        ],\n        \"summary\": \"Sets the capture settings.\",\n        \"requestBody\": {\n          \"204\": {\n            \"$ref\": \"#/paths/~1v1~1look~1current/put/responses/204\"\n          },\n          \"400\": {\n            \"$ref\": \"#/paths/~1v1~1looks/post/responses/400\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          },\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"source\",\n                  \"destination\",\n                  \"audio_routing\"\n                ],\n                \"properties\": {\n                  \"source\": {\n                    \"type\": \"string\",\n                    \"description\": \"The UUID of the source screen.\"\n                  },\n                  \"audio_routing\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"integer\"\n                      }\n                    },\n                    \"description\": \"Audio routing for the capture stream.\"\n                  },\n                  \"disk\": {\n                    \"type\": \"object\",\n                    \"required\": [\n                      \"file_location\",\n                      \"codec\",\n                      \"resolution\",\n                      \"frame_rate\"\n                    ],\n                    \"properties\": {\n                      \"file_location\": {\n                        \"type\": \"string\",\n                        \"description\": \"The location of the file on disk (folder only, no filename)\",\n                        \"example\": \"/Users/someuser/Movies\"\n                      },\n                      \"encoding\": {\n                        \"type\": \"string\",\n                        \"description\": \"The encoding used for encoding the captured video. This must match one\\nof the encodings returned by the /encoding endpoint\\n\"\n                      },\n                      \"resolution\": {\n                        \"type\": \"object\",\n                        \"required\": [\n                          \"width\",\n                          \"height\"\n                        ],\n                        \"properties\": {\n                          \"width\": {\n                            \"type\": \"integer\",\n                            \"example\": 1920\n                          },\n                          \"height\": {\n                            \"type\": \"integer\",\n                            \"example\": 1080\n                          }\n                        }\n                      },\n                      \"frame_rate\": {\n                        \"type\": \"number\",\n                        \"description\": \"The capture frame rate.\",\n                        \"example\": 29.97\n                      }\n                    }\n                  },\n                  \"rtmp\": {\n                    \"type\": \"object\",\n                    \"required\": [\n                      \"url\",\n                      \"key\",\n                      \"encoding\",\n                      \"save_local\"\n                    ],\n                    \"properties\": {\n                      \"url\": {\n                        \"type\": \"string\",\n                        \"description\": \"The URL of the RTMP server.\",\n                        \"example\": \"rtmps://server.com/live\"\n                      },\n                      \"key\": {\n                        \"type\": \"string\",\n                        \"description\": \"The stream key to use with the URL.\",\n                        \"example\": \"g5sr2hz9\"\n                      },\n                      \"encoding\": {\n                        \"type\": \"string\",\n                        \"description\": \"The encoding used for encoding the captured video. This must match one\\nof the encodings returned by the /encoding endpoint\\n\"\n                      },\n                      \"save_local\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"`true` to save a local copy of the stream, `false` otherwise\\n\"\n                      },\n                      \"file_location\": {\n                        \"type\": \"string\",\n                        \"description\": \"The location of the file on disk (folder only, no filename)\",\n                        \"example\": \"/Users/someuser/Movies\"\n                      }\n                    }\n                  },\n                  \"resi\": {\n                    \"type\": \"object\",\n                    \"required\": [\n                      \"destination_group\",\n                      \"encoding\"\n                    ],\n                    \"properties\": {\n                      \"event_name\": {\n                        \"type\": \"string\",\n                        \"description\": \"Optional event name.\",\n                        \"example\": \"My Event\"\n                      },\n                      \"event_description\": {\n                        \"type\": \"string\",\n                        \"description\": \"Optional event description.\",\n                        \"example\": \"This is a short description of the event.\"\n                      },\n                      \"destination_group\": {\n                        \"type\": \"string\",\n                        \"example\": \"Default Destination Group.\"\n                      },\n                      \"encoding\": {\n                        \"type\": \"string\",\n                        \"description\": \"The encoding used for encoding the captured video. This must match one\\nof the encodings returned by the /encoding endpoint\\n\"\n                      }\n                    }\n                  }\n                }\n              },\n              \"examples\": {\n                \"disk\": {\n                  \"summary\": \"Capture to disk\",\n                  \"value\": {\n                    \"source\": \"3C39C433-5C18-4F51-B357-55BB870227C4\",\n                    \"audio_routing\": [\n                      [\n                        1\n                      ],\n                      [\n                        2\n                      ]\n                    ],\n                    \"disk\": {\n                      \"file_location\": \"/Users/someuser/Movies\",\n                      \"codec\": \"h_264\",\n                      \"resolution\": {\n                        \"width\": 1920,\n                        \"height\": 1080\n                      },\n                      \"frame_rate\": 29.97\n                    }\n                  }\n                },\n                \"rtmp_no_local\": {\n                  \"summary\": \"Stream to RTMP (no local copy)\",\n                  \"value\": {\n                    \"source\": \"3C39C433-5C18-4F51-B357-55BB870227C4\",\n                    \"audio_routing\": [\n                      [\n                        1\n                      ],\n                      [\n                        2\n                      ]\n                    ],\n                    \"rtmp\": {\n                      \"server\": \"rtmps://server.com/live\",\n                      \"key\": \"g5sr2hz9\",\n                      \"encoding\": \"720p30_2_5\",\n                      \"save_local\": false\n                    }\n                  }\n                },\n                \"rtmp_local\": {\n                  \"summary\": \"Stream to RTMP (with local copy)\",\n                  \"value\": {\n                    \"source\": \"3C39C433-5C18-4F51-B357-55BB870227C4\",\n                    \"destination\": \"disk\",\n                    \"rtmp\": {\n                      \"server\": \"rtmps://server.com/live\",\n                      \"key\": \"g5sr2hz9\",\n                      \"encoding\": \"720p30_2_5\",\n                      \"save_local\": true,\n                      \"file_location\": \"/Users/someuser/Movies\"\n                    }\n                  }\n                },\n                \"resi\": {\n                  \"summary\": \"Stream to Resi\",\n                  \"value\": {\n                    \"source\": \"3C39C433-5C18-4F51-B357-55BB870227C4\",\n                    \"destination\": \"disk\",\n                    \"audio_routing\": [\n                      [\n                        1\n                      ],\n                      [\n                        2\n                      ]\n                    ],\n                    \"resi\": {\n                      \"event_name\": \"My Event\",\n                      \"event_description\": \"This is a short description of the event.\",\n                      \"destination_group\": \"Default Destination Group\",\n                      \"encoding\": \"720p30_4\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/capture/encodings/{type}\": {\n      \"get\": {\n        \"operationId\": \"captureModesGet\",\n        \"tags\": [\n          \"Capture\"\n        ],\n        \"summary\": \"Requests a list of all available capture modes for the capture type (disk, rtmp, resi).\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"required\": true,\n            \"name\": \"type\",\n            \"description\": \"The required capture type.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"disk\",\n                \"rtmp\",\n                \"resi\"\n              ]\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request was completed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"example\": [\n                  \"h_264\",\n                  \"h_265\",\n                  \"hap\",\n                  \"hap_alpha\",\n                  \"hap_q\",\n                  \"prores_422\",\n                  \"prores_422_hq\",\n                  \"prores_422_lt\",\n                  \"prores_422_proxy\",\n                  \"prores_4444\",\n                  \"prores_4444_xq\"\n                ]\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/clear/layer/{layer}\": {\n      \"get\": {\n        \"operationId\": \"clearLayer\",\n        \"tags\": [\n          \"Clear\"\n        ],\n        \"summary\": \"Clears the specified layer (audio, props, messages, announcements, slide, media, video_input).\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"required\": true,\n            \"name\": \"layer\",\n            \"description\": \"The name of layer that is to be cleared.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"audio\",\n                \"props\",\n                \"messages\",\n                \"announcements\",\n                \"slide\",\n                \"media\",\n                \"video_input\"\n              ]\n            }\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"$ref\": \"#/paths/~1v1~1look~1current/put/responses/204\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/clear/group/{id}\": {\n      \"get\": {\n        \"operationId\": \"clearGroupGet\",\n        \"tags\": [\n          \"Clear\"\n        ],\n        \"summary\": \"Requests the details of the specified clear group.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1macro~1%7Bid%7D/parameters/0\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/paths/~1v1~1clear~1groups/post/requestBody/content/application~1json/schema\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      },\n      \"put\": {\n        \"operationId\": \"clearGroupSet\",\n        \"tags\": [\n          \"Clear\"\n        ],\n        \"summary\": \"Sets the details of the specified clear group.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1macro~1%7Bid%7D/parameters/0\"\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/paths/~1v1~1clear~1groups/post/requestBody/content/application~1json/schema\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/paths/~1v1~1clear~1groups/post/requestBody/content/application~1json/schema\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/paths/~1v1~1looks/post/responses/400\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      },\n      \"delete\": {\n        \"operationId\": \"clearGroupDelete\",\n        \"tags\": [\n          \"Clear\"\n        ],\n        \"summary\": \"Deletes the specified clear group.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1macro~1%7Bid%7D/parameters/0\"\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"$ref\": \"#/paths/~1v1~1look~1current/put/responses/204\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/clear/group/{id}/icon\": {\n      \"parameters\": [\n        {\n          \"$ref\": \"#/paths/~1v1~1macro~1%7Bid%7D/parameters/0\"\n        }\n      ],\n      \"get\": {\n        \"operationId\": \"clearGroupIconGet\",\n        \"tags\": [\n          \"Clear\"\n        ],\n        \"summary\": \"Requests the image data for the icon of the specified clear group.\",\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/paths/~1v1~1mask~1%7Bid%7D~1thumbnail/get/responses/200\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      },\n      \"put\": {\n        \"operationId\": \"clearGroupIconSet\",\n        \"tags\": [\n          \"Clear\"\n        ],\n        \"summary\": \"Sets the custom icon of the specified clear group.\",\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"image/*\": {\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"binary\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"204\": {\n            \"$ref\": \"#/paths/~1v1~1look~1current/put/responses/204\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/clear/group/{id}/trigger\": {\n      \"get\": {\n        \"operationId\": \"clearGroupTrigger\",\n        \"tags\": [\n          \"Clear\"\n        ],\n        \"summary\": \"Triggers the specified clear group.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1macro~1%7Bid%7D/parameters/0\"\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"$ref\": \"#/paths/~1v1~1look~1current/put/responses/204\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/clear/groups\": {\n      \"get\": {\n        \"operationId\": \"clearGroupsGet\",\n        \"tags\": [\n          \"Clear\"\n        ],\n        \"summary\": \"Requests a list of all the configured clear groups.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/paths/~1v1~1clear~1groups/post/requestBody/content/application~1json/schema\"\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      },\n      \"post\": {\n        \"operationId\": \"clearGroupCreate\",\n        \"tags\": [\n          \"Clear\"\n        ],\n        \"summary\": \"Create a clear group with the details specified.\",\n        \"description\": \"The UUID and index in the request body are ignored. They will be automatically\\nassigned and returned in the response body.\\n\",\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"index\",\n                  \"name\",\n                  \"uuid\",\n                  \"layers\",\n                  \"icon\",\n                  \"tint\",\n                  \"stop_timeline_announcements\",\n                  \"stop_timeline_presentation\"\n                ],\n                \"properties\": {\n                  \"id\": {\n                    \"$ref\": \"#/paths/~1v1~1playlist~1current/get/responses/200/content/application~1json/schema\"\n                  },\n                  \"icon\": {\n                    \"type\": \"string\",\n                    \"format\": \"base64\",\n                    \"description\": \"Icon to show for this clear group. Base64-encoded JPEG image data.\"\n                  },\n                  \"tint\": {\n                    \"description\": \"The color tint to apply to the icon for this clear group.\",\n                    \"$ref\": \"#/paths/~1v1~1macro~1%7Bid%7D/put/requestBody/content/application~1json/schema/properties/color\"\n                  },\n                  \"layers\": {\n                    \"type\": \"array\",\n                    \"description\": \"The list of all the layers cleared by this clear group\",\n                    \"items\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"music\",\n                        \"audio_effects\",\n                        \"props\",\n                        \"messages\",\n                        \"announcements\",\n                        \"presentation\",\n                        \"presentation_media\",\n                        \"video_input\"\n                      ]\n                    }\n                  },\n                  \"stop_timeline_announcements\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"Stop the timeline on the announcements layer\",\n                    \"default\": true\n                  },\n                  \"stop_timeline_presentation\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"Stop the timeline on the presentation layer\",\n                    \"default\": true\n                  },\n                  \"clear_next_presentation\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"Clear the next presentation when clearing the slide layer.\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/paths/~1v1~1clear~1groups/post/requestBody/content/application~1json/schema\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/paths/~1v1~1looks/post/responses/400\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/groups\": {\n      \"get\": {\n        \"operationId\": \"globalGroupsGet\",\n        \"tags\": [\n          \"Global Groups\"\n        ],\n        \"summary\": \"Requests a list of all the configured global groups.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"required\": [\n                      \"id\",\n                      \"color\"\n                    ],\n                    \"properties\": {\n                      \"id\": {\n                        \"$ref\": \"#/paths/~1v1~1playlist~1current/get/responses/200/content/application~1json/schema\"\n                      },\n                      \"color\": {\n                        \"$ref\": \"#/paths/~1v1~1macro~1%7Bid%7D/put/requestBody/content/application~1json/schema/properties/color\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/group/{id}\": {\n      \"get\": {\n        \"operationId\": \"globalGroupTrigger\",\n        \"tags\": [\n          \"Global Groups\"\n        ],\n        \"summary\": \"Triggers the specified global group.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1macro~1%7Bid%7D/parameters/0\"\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"$ref\": \"#/paths/~1v1~1look~1current/put/responses/204\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/libraries\": {\n      \"get\": {\n        \"operationId\": \"libraryListGet\",\n        \"tags\": [\n          \"Library\"\n        ],\n        \"summary\": \"Requests a list of all the configured libraries.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"required\": [\n                      \"id\"\n                    ],\n                    \"properties\": {\n                      \"id\": {\n                        \"$ref\": \"#/paths/~1v1~1playlist~1current/get/responses/200/content/application~1json/schema\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/library/{id}\": {\n      \"get\": {\n        \"operationId\": \"libraryGet\",\n        \"tags\": [\n          \"Library\"\n        ],\n        \"summary\": \"Requests an array of all items in the specified library.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1macro~1%7Bid%7D/parameters/0\"\n          },\n          {\n            \"$ref\": \"#/paths/~1v1~1props/get/parameters/0\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"updateType\",\n                    \"items\"\n                  ],\n                  \"properties\": {\n                    \"updateType\": {\n                      \"type\": \"string\",\n                      \"description\": \"The type of update this message represents:\\n  * `all` - The entire library, only sent as the initial response.\\n  * `add` - One or more items has been added to the library\\n  * `remove` - One or more items has been removed from the library\\n\",\n                      \"enum\": [\n                        \"all\",\n                        \"add\",\n                        \"remove\"\n                      ]\n                    },\n                    \"items\": {\n                      \"type\": \"array\",\n                      \"description\": \"The items included in this update.\",\n                      \"items\": {\n                        \"$ref\": \"#/paths/~1v1~1playlist~1current/get/responses/200/content/application~1json/schema\"\n                      }\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"initial\": {\n                    \"summary\": \"Initial response\",\n                    \"value\": {\n                      \"updateType\": \"all\",\n                      \"items\": [\n                        {\n                          \"index\": 0,\n                          \"name\": \"I Surrender All\",\n                          \"uuid\": \"942C3FC3-C4B2-44F7-A55D-4CC913BB8A5D\"\n                        },\n                        {\n                          \"index\": 1,\n                          \"name\": \"It Is Well With My Soul\",\n                          \"uuid\": \"942C3FC3-C4B2-44F7-A55D-4CC913BB8A5E\"\n                        },\n                        {\n                          \"index\": 2,\n                          \"name\": \"Amazing Grace\",\n                          \"uuid\": \"942C3FC3-C4B2-44F7-A55D-4CC913BB8A5F\"\n                        }\n                      ]\n                    }\n                  },\n                  \"add\": {\n                    \"summary\": \"Items added\",\n                    \"value\": {\n                      \"updateType\": \"add\",\n                      \"items\": [\n                        {\n                          \"index\": 3,\n                          \"name\": \"This I Believe\",\n                          \"uuid\": \"942C3FC3-C4B2-44F7-A55D-4CC913BB8A5A\"\n                        }\n                      ]\n                    }\n                  },\n                  \"remove\": {\n                    \"summary\": \"Items removed\",\n                    \"value\": {\n                      \"updateType\": \"remove\",\n                      \"items\": [\n                        {\n                          \"index\": 1,\n                          \"name\": \"It Is Well With My Soul\",\n                          \"uuid\": \"942C3FC3-C4B2-44F7-A55D-4CC913BB8A5E\"\n                        },\n                        {\n                          \"index\": 2,\n                          \"name\": \"Amazing Grace\",\n                          \"uuid\": \"942C3FC3-C4B2-44F7-A55D-4CC913BB8A5F\"\n                        }\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/looks\": {\n      \"get\": {\n        \"operationId\": \"lookGetAll\",\n        \"tags\": [\n          \"Looks\"\n        ],\n        \"summary\": \"Requests a list of all configured audience looks, except the live look.\",\n        \"description\": \"The current / live look is NOT included. The current look can be retrieved by GET /v1/look/current. While the current look may have the same attributes as one of the looks returned by this endpoint, the current look will have a unique UUID which is not returned by this endpoint.\\n\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/paths/~1v1~1looks/post/requestBody/content/application~1json/schema\"\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      },\n      \"post\": {\n        \"operationId\": \"lookCreate\",\n        \"tags\": [\n          \"Looks\"\n        ],\n        \"summary\": \"Creates a new audience look with the specified details.\",\n        \"description\": \"The UUID and index are ignored in the request body. They are automatically\\nassigned and returned as part of the response.\\n\",\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"uuid\",\n                  \"index\",\n                  \"name\",\n                  \"screens\"\n                ],\n                \"properties\": {\n                  \"id\": {\n                    \"$ref\": \"#/paths/~1v1~1playlist~1current/get/responses/200/content/application~1json/schema\"\n                  },\n                  \"screens\": {\n                    \"type\": \"array\",\n                    \"description\": \"The list of screens in the look\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"required\": [\n                        \"video_input\",\n                        \"media\",\n                        \"slide\",\n                        \"props\",\n                        \"messages\"\n                      ],\n                      \"properties\": {\n                        \"video_input\": {\n                          \"type\": \"boolean\",\n                          \"description\": \"Specifies whether the video input is enabled for this screen\"\n                        },\n                        \"media\": {\n                          \"type\": \"boolean\",\n                          \"description\": \"Specifies whether background media is enabled for this screen\"\n                        },\n                        \"slide\": {\n                          \"type\": \"boolean\",\n                          \"description\": \"Specifies whether the slide data is enabled for this screen\"\n                        },\n                        \"announcements\": {\n                          \"type\": \"boolean\",\n                          \"description\": \"Specifies whether the announcements layer is enabled for this screen\"\n                        },\n                        \"props\": {\n                          \"type\": \"boolean\",\n                          \"description\": \"Specifies whether props are enabled for this screen\"\n                        },\n                        \"messages\": {\n                          \"type\": \"boolean\",\n                          \"description\": \"Specifies whether messages are enabled for this screen\"\n                        },\n                        \"presentation\": {\n                          \"nullable\": true,\n                          \"type\": \"string\",\n                          \"description\": \"The UUID of the theme slide to apply to slide data on the presentation layer.\\nNot present or a null or empty string if no template is to be applied.\\nIf a UUID is provided but a matching theme slide is not found, then no change is made to the currently assigned theme slide.\\n\",\n                          \"example\": \"42C3FC3-C4B2-44F7-A55D-4CC913BB8A5D\"\n                        },\n                        \"mask\": {\n                          \"nullable\": true,\n                          \"type\": \"string\",\n                          \"description\": \"The UUID of the mask to apply to this screen.\\nNot present or a null or empty string if no mask is to be applied.\\nIf a UUID is provided but a matching mask is not found, then no change is made to the currently assigned mask.\\n\",\n                          \"example\": \"42C3FC3-C4B2-44F7-A55D-4CC913BB8A5D\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/paths/~1v1~1looks/post/requestBody/content/application~1json/schema\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"The request was not valid.\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/look/current\": {\n      \"get\": {\n        \"operationId\": \"lookGetCurrent\",\n        \"tags\": [\n          \"Looks\"\n        ],\n        \"summary\": \"Requests the details of the currently live audience look.\",\n        \"description\": \"NOTE: The current look is not contained in the looks returned by `GET /v1/looks` as\\nthe current look gets special treatment in ProPresenter and cannot be deleted.\\nThe current look may have the same attributes as one of the other not current saved looks, but it will have a\\nunique UUID not contained in the response of `GET /v1/looks`. If the current look's attributes match\\nthose of one of the saved looks, the index returned is the index of the matching look in the\\narray returned by `GET /v1/looks`. If the current look has been modified and its attributes don't\\nmatch any of the saved looks, the index returned is the size of the saved looks array.\\n\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1props/get/parameters/0\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/paths/~1v1~1looks/post/requestBody/content/application~1json/schema\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"operationId\": \"lookSetCurrent\",\n        \"tags\": [\n          \"Looks\"\n        ],\n        \"summary\": \"Sets the details of the currently live audience look.\",\n        \"description\": \"The UUID and index in the request body are ignored and not applied to the specified look.\\nFor multiple screens, the screens array is applied in order by index to the array of existing screens in the look.\\nUpdates to the screens are done until either the end of the screens update array is reached or the end of the existing screens array is reached.\\nIf the current look is not found in the saved looks (because it is modified but not saved), returns the size of the saved looks array for the index.\\n\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/paths/~1v1~1looks/post/requestBody/content/application~1json/schema\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"204\": {\n            \"description\": \"The request was processed successfully. There is no response body.\"\n          },\n          \"400\": {\n            \"$ref\": \"#/paths/~1v1~1looks/post/responses/400\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/look/{id}\": {\n      \"get\": {\n        \"operationId\": \"lookGet\",\n        \"tags\": [\n          \"Looks\"\n        ],\n        \"summary\": \"Requests the details of the specified audience look.\",\n        \"description\": \"NOTE: The currently live look is not found by this endpoint. To get the live look use GET /v1/look/current.\\n\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1macro~1%7Bid%7D/parameters/0\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/paths/~1v1~1looks/post/requestBody/content/application~1json/schema\"\n                }\n              }\n            }\n          },\n          \"404\": \"responses.yaml#/404\"\n        }\n      },\n      \"put\": {\n        \"operationId\": \"lookPut\",\n        \"tags\": [\n          \"Looks\"\n        ],\n        \"summary\": \"Sets the details of the specified audience look.\",\n        \"description\": \"The UUID and index are ignored in the request. They are not modified by this operation.\\nFor multiple screens, the screens array is applied in order by index to the array of existing screens in the look.\\nUpdates to the screens are done until either the end of the screens update array is reached or the end of the existing screens array is reached.\\nNOTE: The currently live look is not settable by this endpoint. To set the live look use PUT /v1/look/current.\\n\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1macro~1%7Bid%7D/parameters/0\"\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/paths/~1v1~1looks/post/requestBody/content/application~1json/schema\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/paths/~1v1~1looks/post/requestBody/content/application~1json/schema\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/paths/~1v1~1looks/post/responses/400\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      },\n      \"delete\": {\n        \"operationId\": \"lookDelete\",\n        \"tags\": [\n          \"Looks\"\n        ],\n        \"summary\": \"Deletes the specified audience look from the saved looks.\",\n        \"description\": \"NOTE: The currently live look may not be deleted.\\n\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1macro~1%7Bid%7D/parameters/0\"\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"$ref\": \"#/paths/~1v1~1look~1current/put/responses/204\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/look/{id}/trigger\": {\n      \"get\": {\n        \"operationId\": \"lookTrigger\",\n        \"tags\": [\n          \"Looks\"\n        ],\n        \"summary\": \"Triggers the specified audience look to make it the live/current look.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1macro~1%7Bid%7D/parameters/0\"\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"$ref\": \"#/paths/~1v1~1look~1current/put/responses/204\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/macros\": {\n      \"get\": {\n        \"operationId\": \"macroGetAll\",\n        \"tags\": [\n          \"Macro\"\n        ],\n        \"summary\": \"Requests a list of all the configured macros.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"description\": \"The list of all defined macros.\",\n                  \"items\": {\n                    \"$ref\": \"#/paths/~1v1~1macro~1%7Bid%7D/put/requestBody/content/application~1json/schema\"\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/macro/{id}\": {\n      \"parameters\": [\n        {\n          \"in\": \"path\",\n          \"required\": true,\n          \"name\": \"id\",\n          \"description\": \"The ID of the required item, either name, index or UUID.\",\n          \"schema\": {\n            \"type\": \"string\"\n          },\n          \"examples\": {\n            \"by_name\": {\n              \"summary\": \"Match item by name\",\n              \"value\": \"Item Name\"\n            },\n            \"by_index\": {\n              \"summary\": \"Match item by index\",\n              \"value\": \"3\"\n            },\n            \"by_uuid\": {\n              \"summary\": \"Match item by UUID\",\n              \"value\": \"3C39C433-5C18-4F51-B357-55BB870227C4\"\n            }\n          }\n        }\n      ],\n      \"get\": {\n        \"operationId\": \"macroGet\",\n        \"tags\": [\n          \"Macro\"\n        ],\n        \"summary\": \"Requests the details of the specified macro.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/paths/~1v1~1macro~1%7Bid%7D/put/requestBody/content/application~1json/schema\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      },\n      \"put\": {\n        \"operationId\": \"macroSet\",\n        \"tags\": [\n          \"Macro\"\n        ],\n        \"summary\": \"Sets the details of the specified macro.\",\n        \"description\": \"The UUID and index in the request body are ignored. They are not updated.\\n\",\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"id\",\n                  \"color\"\n                ],\n                \"properties\": {\n                  \"id\": {\n                    \"$ref\": \"#/paths/~1v1~1playlist~1current/get/responses/200/content/application~1json/schema\"\n                  },\n                  \"color\": {\n                    \"type\": \"object\",\n                    \"required\": [\n                      \"red\",\n                      \"green\",\n                      \"blue\",\n                      \"alpha\"\n                    ],\n                    \"properties\": {\n                      \"red\": {\n                        \"type\": \"number\",\n                        \"description\": \"The red component of the color, between 0 and 1\",\n                        \"example\": 0\n                      },\n                      \"green\": {\n                        \"type\": \"number\",\n                        \"description\": \"The green component of the color, between 0 and 1\",\n                        \"example\": 0.54\n                      },\n                      \"blue\": {\n                        \"type\": \"number\",\n                        \"description\": \"The blue component of the color, between 0 and 1\",\n                        \"example\": 0.87\n                      },\n                      \"alpha\": {\n                        \"type\": \"number\",\n                        \"description\": \"The alpha component of the color, between 0 and 1\",\n                        \"example\": 1,\n                        \"default\": 1\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/paths/~1v1~1macro~1%7Bid%7D/put/requestBody/content/application~1json/schema\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/paths/~1v1~1looks/post/responses/400\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      },\n      \"delete\": {\n        \"operationId\": \"macroDelete\",\n        \"tags\": [\n          \"Macro\"\n        ],\n        \"summary\": \"Deletes the specified macro.\",\n        \"responses\": {\n          \"204\": {\n            \"$ref\": \"#/paths/~1v1~1look~1current/put/responses/204\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/macro/{id}/trigger\": {\n      \"get\": {\n        \"operationId\": \"macroTrigger\",\n        \"tags\": [\n          \"Macro\"\n        ],\n        \"summary\": \"Triggers the specified macro.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1macro~1%7Bid%7D/parameters/0\"\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"$ref\": \"#/paths/~1v1~1look~1current/put/responses/204\"\n          },\n          \"400\": {\n            \"$ref\": \"#/paths/~1v1~1looks/post/responses/400\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/masks\": {\n      \"get\": {\n        \"operationId\": \"maskGetAll\",\n        \"tags\": [\n          \"Masks\"\n        ],\n        \"summary\": \"Requests a list of all configured masks.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/paths/~1v1~1mask~1%7Bid%7D/get/responses/200/content/application~1json/schema\"\n                  }\n                },\n                \"example\": [\n                  {\n                    \"id\": {\n                      \"uuid\": \"42C3FC3-C4B2-44F7-A55D-4CC913BB8A5D\",\n                      \"index\": 0,\n                      \"name\": \"Mask 1\"\n                    }\n                  },\n                  {\n                    \"id\": {\n                      \"uuid\": \"942C3FC3-C4B2-44F7-A55D-4CC913BB8A5D\",\n                      \"index\": 1,\n                      \"name\": \"Mask 2\"\n                    }\n                  }\n                ]\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/mask/{id}\": {\n      \"get\": {\n        \"operationId\": \"maskGet\",\n        \"tags\": [\n          \"Masks\"\n        ],\n        \"summary\": \"Requests the details of the specified mask.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1macro~1%7Bid%7D/parameters/0\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"summary\": \"The request was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"id\"\n                  ],\n                  \"properties\": {\n                    \"id\": {\n                      \"$ref\": \"#/paths/~1v1~1playlist~1current/get/responses/200/content/application~1json/schema\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/mask/{id}/thumbnail\": {\n      \"get\": {\n        \"operationId\": \"maskThumbnailGet\",\n        \"tags\": [\n          \"Masks\"\n        ],\n        \"summary\": \"Requests a thumbnail image of the specified mask at the given quality value.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1macro~1%7Bid%7D/parameters/0\"\n          },\n          {\n            \"in\": \"query\",\n            \"required\": false,\n            \"name\": \"quality\",\n            \"description\": \"The desired quality of the thumbnail, in pixels\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"example\": 400,\n              \"default\": 400\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request was processed successfully.\",\n            \"content\": {\n              \"image/jpeg\": {\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"format\": \"binary\",\n                  \"example\": \"image data here\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/media/playlists\": {\n      \"get\": {\n        \"operationId\": \"mediaPlaylistsGet\",\n        \"tags\": [\n          \"Media\"\n        ],\n        \"summary\": \"Requests a list of all the configured media playlists.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/paths/~1v1~1audio~1playlists/get/responses/200/content/application~1json/schema/items\"\n                  }\n                },\n                \"example\": {\n                  \"id\": {\n                    \"uuid\": \"ED59503B-394D-4D5D-B0B0-5AE80D0BA025\",\n                    \"name\": \"Playlist Folder\",\n                    \"index\": 0\n                  },\n                  \"type\": \"group\",\n                  \"children\": [\n                    {\n                      \"id\": {\n                        \"uuid\": \"C49A250A-3E32-4C26-A220-46D6596426B5\",\n                        \"name\": \"Playlist 1\",\n                        \"index\": 0\n                      },\n                      \"type\": \"playlist\",\n                      \"children\": []\n                    },\n                    {\n                      \"id\": {\n                        \"uuid\": \"D8C5D151-45C9-4CFF-B1F9-74F3B4B5173B\",\n                        \"name\": \"Playlist 2\",\n                        \"index\": 1\n                      },\n                      \"type\": \"playlist\",\n                      \"children\": []\n                    }\n                  ]\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/media/playlist/{playlist_id}\": {\n      \"get\": {\n        \"operationId\": \"mediaPlaylistGet\",\n        \"tags\": [\n          \"Media\"\n        ],\n        \"summary\": \"Requests a list of all the media items in the specified media playlist.\",\n        \"description\": \"A maximum of 100 items will be returned per call. The `start` query parameter can\\nbe used to retrieve multiple pages of items, by setting it to the index of the first\\nitem to return.\\n\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1playlist~1%7Bplaylist_id%7D/parameters/0\"\n          },\n          {\n            \"$ref\": \"#/paths/~1v1~1audio~1playlist~1%7Bplaylist_id%7D/get/parameters/1\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"required\": [\n                      \"id\",\n                      \"type\",\n                      \"artist\",\n                      \"duration\"\n                    ],\n                    \"properties\": {\n                      \"id\": {\n                        \"$ref\": \"#/paths/~1v1~1playlist~1current/get/responses/200/content/application~1json/schema\"\n                      },\n                      \"type\": {\n                        \"type\": \"string\",\n                        \"enum\": [\n                          \"audio\",\n                          \"video\",\n                          \"image\"\n                        ],\n                        \"description\": \"The type of media this item represents.\"\n                      },\n                      \"artist\": {\n                        \"type\": \"string\",\n                        \"description\": \"The media artist.\",\n                        \"example\": \"John Newton\"\n                      },\n                      \"duration\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Time in seconds.\"\n                      }\n                    }\n                  }\n                },\n                \"example\": {\n                  \"id\": {\n                    \"uuid\": \"B238C071-3628-4204-BB19-DDE76DC57CE7\",\n                    \"name\": \"Playlist 3\",\n                    \"index\": 2\n                  },\n                  \"items\": [\n                    {\n                      \"id\": {\n                        \"uuid\": \"94A2D4EA-EEA5-48A4-AF6F-850D700C1830\",\n                        \"name\": \"Photo 1\",\n                        \"index\": 0\n                      },\n                      \"type\": \"image\",\n                      \"artist\": \"unknown\",\n                      \"duration\": 0\n                    },\n                    {\n                      \"id\": {\n                        \"uuid\": \"8F40D44E-4018-4552-8803-60DC788DB1CF\",\n                        \"name\": \"Amazing Grace\",\n                        \"index\": 1\n                      },\n                      \"type\": \"video\",\n                      \"artist\": \"John Newton\",\n                      \"duration\": 110\n                    }\n                  ]\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/media/playlist/{playlist_id}/updates\": {\n      \"get\": {\n        \"operationId\": \"mediaPlaylistUpdateGet\",\n        \"tags\": [\n          \"Media\"\n        ],\n        \"summary\": \"Requests a chunked data update every time the specified media playlist changes.\",\n        \"description\": \"This endpoint returns a chunked response, where each chunk is a simple string \\\"change\\\".\\nThis string will be sent whenever the media playlist changes, and the playlist can\\nbe queried using the `/media/playlist/{id}` endpoint.\\n\\nNote that this endpoint will return nothing unless the `chunked` parameters is set to `true`\\n\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1playlist~1%7Bplaylist_id%7D/parameters/0\"\n          },\n          {\n            \"$ref\": \"#/paths/~1v1~1props/get/parameters/0\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"enum\": [\n                    \"change\"\n                  ]\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/media/{uuid}/thumbnail\": {\n      \"get\": {\n        \"operationId\": \"mediaThumbnailGet\",\n        \"tags\": [\n          \"Media\"\n        ],\n        \"summary\": \"Requests a thumbnail image of the specified media item at the given quality value.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1presentation~1%7Buuid%7D/get/parameters/0\"\n          },\n          {\n            \"$ref\": \"#/paths/~1v1~1mask~1%7Bid%7D~1thumbnail/get/parameters/1\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/paths/~1v1~1mask~1%7Bid%7D~1thumbnail/get/responses/200\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/messages\": {\n      \"get\": {\n        \"operationId\": \"messageGetAll\",\n        \"tags\": [\n          \"Message\"\n        ],\n        \"summary\": \"Requests a list of all configured messages.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1props/get/parameters/0\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"description\": \"The list of all defined messages.\",\n                  \"items\": {\n                    \"$ref\": \"#/paths/~1v1~1messages/post/requestBody/content/application~1json/schema\"\n                  }\n                },\n                \"example\": [\n                  {\n                    \"title\": \"New Message\",\n                    \"tokens\": [\n                      {\n                        \"name\": \"\",\n                        \"text\": {\n                          \"text\": \"Message for \"\n                        }\n                      },\n                      {\n                        \"name\": \"Name\",\n                        \"text\": {\n                          \"text\": null\n                        }\n                      },\n                      {\n                        \"name\": \"\",\n                        \"text\": {\n                          \"text\": \":\"\n                        }\n                      },\n                      {\n                        \"name\": \"Message\",\n                        \"text\": {\n                          \"text\": \"\"\n                        }\n                      }\n                    ]\n                  }\n                ]\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      },\n      \"post\": {\n        \"operationId\": \"messageCreate\",\n        \"tags\": [\n          \"Message\"\n        ],\n        \"summary\": \"Creates a new message with specified details.\",\n        \"description\": \"The UUID and index are ignored in the request body. They are automatically\\nassigned and returned in the response body.\\n\",\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"id\",\n                  \"message\",\n                  \"theme\"\n                ],\n                \"properties\": {\n                  \"id\": {\n                    \"$ref\": \"#/paths/~1v1~1playlist~1current/get/responses/200/content/application~1json/schema\"\n                  },\n                  \"message\": {\n                    \"type\": \"string\",\n                    \"description\": \"The base string for the message.\",\n                    \"example\": \"Please come to room {room}\"\n                  },\n                  \"tokens\": {\n                    \"type\": \"array\",\n                    \"description\": \"An array of the substrings and tokens that make up the message detail.\",\n                    \"items\": {\n                      \"$ref\": \"#/paths/~1v1~1message~1%7Bid%7D~1trigger/post/requestBody/content/application~1json/schema/items\"\n                    },\n                    \"example\": [\n                      {\n                        \"name\": \"room\",\n                        \"text\": {\n                          \"text\": \"204\"\n                        }\n                      }\n                    ]\n                  },\n                  \"theme\": {\n                    \"$ref\": \"#/paths/~1v1~1playlist~1current/get/responses/200/content/application~1json/schema\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/paths/~1v1~1messages/post/requestBody/content/application~1json/schema\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/paths/~1v1~1looks/post/responses/400\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/message/{id}\": {\n      \"get\": {\n        \"operationId\": \"messageGet\",\n        \"tags\": [\n          \"Message\"\n        ],\n        \"summary\": \"Requests the details of the specified message.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1macro~1%7Bid%7D/parameters/0\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/paths/~1v1~1messages/post/requestBody/content/application~1json/schema\"\n                },\n                \"example\": {\n                  \"id\": {\n                    \"name\": \"Test Message\",\n                    \"uuid\": \"942C3FC3-C4B2-44F7-A55D-4CC913BB8A5D\",\n                    \"index\": 0\n                  },\n                  \"message\": \"Text {text}, Clock {clock}, Countdown {countdown}, Countdown to time {count_down_to_time}, Elapsed {elapsed}\",\n                  \"tokens\": [\n                    {\n                      \"name\": \"text\",\n                      \"text\": {\n                        \"text\": \"142\"\n                      }\n                    },\n                    {\n                      \"name\": \"clock\",\n                      \"clock\": {\n                        \"format\": {\n                          \"date\": \"short\",\n                          \"time\": \"long\",\n                          \"is_24_hours\": true\n                        }\n                      }\n                    },\n                    {\n                      \"name\": \"countdown\",\n                      \"timer\": {\n                        \"configuration\": {\n                          \"id\": {\n                            \"name\": \"Timer 1\",\n                            \"uuid\": \"43b4c5c6-145a-4b19-9968-7b78e6980e82\",\n                            \"index\": 0\n                          },\n                          \"allows_overrun\": true,\n                          \"countdown\": {\n                            \"duration\": 300\n                          }\n                        },\n                        \"format\": {\n                          \"hour\": \"remove_long\",\n                          \"minute\": \"remove_long\",\n                          \"second\": \"short\",\n                          \"millisecond\": \"none\"\n                        }\n                      }\n                    },\n                    {\n                      \"name\": \"count_down_to_time\",\n                      \"timer\": {\n                        \"configuration\": {\n                          \"id\": {\n                            \"name\": \"Timer 2\",\n                            \"uuid\": \"1355b458-5f99-4e6e-8ac7-8522061f6bdb\",\n                            \"index\": 0\n                          },\n                          \"allows_overrun\": true,\n                          \"count_down_to_time\": {\n                            \"time_of_day\": \"09:30\",\n                            \"period\": \"am\"\n                          }\n                        },\n                        \"format\": {\n                          \"hour\": \"remove_long\",\n                          \"minute\": \"remove_long\",\n                          \"second\": \"short\",\n                          \"millisecond\": \"none\"\n                        }\n                      }\n                    },\n                    {\n                      \"name\": \"elapsed\",\n                      \"timer\": {\n                        \"configuration\": {\n                          \"id\": {\n                            \"name\": \"Timer 3\",\n                            \"uuid\": \"8efe5ec8-daf4-4609-aea2-7c80efa7f6fa\",\n                            \"index\": 0\n                          },\n                          \"allows_overrun\": true,\n                          \"elapsed\": {\n                            \"start_time\": 0\n                          }\n                        },\n                        \"format\": {\n                          \"hour\": \"remove_long\",\n                          \"minute\": \"remove_long\",\n                          \"second\": \"short\",\n                          \"millisecond\": \"none\"\n                        }\n                      }\n                    }\n                  ],\n                  \"theme\": {\n                    \"name\": \"Default\",\n                    \"uuid\": \"f5468354-01fb-44d8-b7b3-5ede94c6115c\",\n                    \"index\": 0\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      },\n      \"put\": {\n        \"operationId\": \"messageSet\",\n        \"tags\": [\n          \"Message\"\n        ],\n        \"summary\": \"Sets the details of the specified message.\",\n        \"description\": \"The UUID and index in the request body are ignored. They are not updated.\\n\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1macro~1%7Bid%7D/parameters/0\"\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/paths/~1v1~1messages/post/requestBody/content/application~1json/schema\"\n              },\n              \"examples\": {\n                \"text_token\": {\n                  \"summary\": \"Text token\",\n                  \"value\": {\n                    \"id\": {\n                      \"name\": \"Message with text token\",\n                      \"uuid\": \"\",\n                      \"index\": 0\n                    },\n                    \"message\": \"Please come to room {room}\",\n                    \"tokens\": [\n                      {\n                        \"name\": \"room\",\n                        \"text\": {\n                          \"text\": \"142\"\n                        }\n                      }\n                    ],\n                    \"theme\": {\n                      \"name\": \"\",\n                      \"uuid\": \"\",\n                      \"index\": 0\n                    }\n                  }\n                },\n                \"clock_token\": {\n                  \"summary\": \"Clock Token\",\n                  \"value\": {\n                    \"id\": {\n                      \"name\": \"Message with clock token\",\n                      \"uuid\": \"\",\n                      \"index\": 0\n                    },\n                    \"message\": \"The current time is {time}\",\n                    \"tokens\": [\n                      {\n                        \"name\": \"time\",\n                        \"clock\": {\n                          \"format\": {\n                            \"date\": \"short\",\n                            \"time\": \"long\",\n                            \"is_24_hours\": true\n                          }\n                        }\n                      }\n                    ],\n                    \"theme\": {\n                      \"name\": \"\",\n                      \"uuid\": \"\",\n                      \"index\": 0\n                    }\n                  }\n                },\n                \"timer_token_countdown\": {\n                  \"summary\": \"Timer Token - Countdown\",\n                  \"value\": {\n                    \"id\": {\n                      \"name\": \"Message with countdown timer token\",\n                      \"uuid\": \"\",\n                      \"index\": 0\n                    },\n                    \"message\": \"Time until start: {Timer Token}\",\n                    \"tokens\": [\n                      {\n                        \"name\": \"Timer Token\",\n                        \"timer\": {\n                          \"id\": {\n                            \"name\": \"Countdown Timer\",\n                            \"uuid\": \"942C3FC3-C4B2-44F7-A55D-4CC913BB8A5D\",\n                            \"index\": 1\n                          },\n                          \"allows_overrun\": true,\n                          \"format\": {\n                            \"hour\": \"remove_long\",\n                            \"minute\": \"remove_long\",\n                            \"second\": \"short\",\n                            \"millisecond\": \"none\"\n                          },\n                          \"countdown\": {\n                            \"duration\": 300\n                          }\n                        }\n                      }\n                    ],\n                    \"theme\": {\n                      \"name\": \"\",\n                      \"uuid\": \"\",\n                      \"index\": 0\n                    }\n                  }\n                },\n                \"timer_token_countdown_to_time\": {\n                  \"summary\": \"Timer Token - Countdown To Time\",\n                  \"value\": {\n                    \"id\": {\n                      \"name\": \"Message with countdown to time timer token\",\n                      \"uuid\": \"\",\n                      \"index\": 0\n                    },\n                    \"message\": \"Time until start: {Timer Token}\",\n                    \"tokens\": [\n                      {\n                        \"name\": \"Timer Token\",\n                        \"timer\": {\n                          \"id\": {\n                            \"name\": \"Count Down to Time Timer\",\n                            \"uuid\": \"942C3FC3-C4B2-44F7-A55D-4CC913BB8A5D\",\n                            \"index\": 1\n                          },\n                          \"allows_overrun\": true,\n                          \"format\": {\n                            \"hour\": \"remove_long\",\n                            \"minute\": \"remove_long\",\n                            \"second\": \"short\",\n                            \"millisecond\": \"none\"\n                          },\n                          \"count_down_to_time\": {\n                            \"time_of_day\": 3600,\n                            \"period\": \"pm\"\n                          }\n                        }\n                      }\n                    ],\n                    \"theme\": {\n                      \"name\": \"\",\n                      \"uuid\": \"\",\n                      \"index\": 0\n                    }\n                  }\n                },\n                \"timer_token_elapsed\": {\n                  \"summary\": \"Timer Token - Elapsed\",\n                  \"value\": {\n                    \"id\": {\n                      \"name\": \"Message with elapsed timer token\",\n                      \"uuid\": \"\",\n                      \"index\": 0\n                    },\n                    \"message\": \"Time since start: {Timer Token}\",\n                    \"tokens\": [\n                      {\n                        \"name\": \"Timer Token\",\n                        \"timer\": {\n                          \"id\": {\n                            \"name\": \"Elapsed Timer\",\n                            \"uuid\": \"942C3FC3-C4B2-44F7-A55D-4CC913BB8A5D\",\n                            \"index\": 1\n                          },\n                          \"allows_overrun\": true,\n                          \"format\": {\n                            \"hour\": \"remove_long\",\n                            \"minute\": \"remove_long\",\n                            \"second\": \"short\",\n                            \"millisecond\": \"none\"\n                          },\n                          \"elapsed\": {\n                            \"start_time\": 0,\n                            \"end_time\": 60\n                          }\n                        }\n                      }\n                    ],\n                    \"theme\": {\n                      \"name\": \"\",\n                      \"uuid\": \"\",\n                      \"index\": 0\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/paths/~1v1~1messages/post/requestBody/content/application~1json/schema\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/paths/~1v1~1looks/post/responses/400\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      },\n      \"delete\": {\n        \"operationId\": \"messaageDelete\",\n        \"tags\": [\n          \"Message\"\n        ],\n        \"summary\": \"Deletes the specified message.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1macro~1%7Bid%7D/parameters/0\"\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"$ref\": \"#/paths/~1v1~1look~1current/put/responses/204\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/message/{id}/trigger\": {\n      \"post\": {\n        \"operationId\": \"messageTrigger\",\n        \"tags\": [\n          \"Message\"\n        ],\n        \"summary\": \"Triggers / Shows the specified message.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1macro~1%7Bid%7D/parameters/0\"\n          }\n        ],\n        \"requestBody\": {\n          \"required\": false,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"oneOf\": [\n                    {\n                      \"type\": \"object\",\n                      \"required\": [\n                        \"name\"\n                      ],\n                      \"properties\": {\n                        \"name\": {\n                          \"type\": \"string\",\n                          \"example\": \"My Token\"\n                        },\n                        \"text\": {\n                          \"type\": \"object\",\n                          \"required\": [\n                            \"text\"\n                          ],\n                          \"properties\": {\n                            \"text\": {\n                              \"type\": \"string\",\n                              \"example\": \"Hello, world!\"\n                            }\n                          }\n                        }\n                      }\n                    },\n                    {\n                      \"type\": \"object\",\n                      \"required\": [\n                        \"name\"\n                      ],\n                      \"properties\": {\n                        \"name\": {\n                          \"type\": \"string\",\n                          \"example\": \"My Token\"\n                        },\n                        \"timer\": {\n                          \"type\": \"object\",\n                          \"required\": [\n                            \"configuration\",\n                            \"format\"\n                          ],\n                          \"properties\": {\n                            \"configuration\": {\n                              \"$ref\": \"#/paths/~1v1~1timer~1%7Bid%7D/put/requestBody/content/application~1json/schema\"\n                            },\n                            \"format\": {\n                              \"type\": \"object\",\n                              \"required\": [\n                                \"hour\",\n                                \"minute\",\n                                \"second\",\n                                \"millisecond\"\n                              ],\n                              \"properties\": {\n                                \"hour\": {\n                                  \"type\": \"string\",\n                                  \"enum\": [\n                                    \"none\",\n                                    \"short\",\n                                    \"long\",\n                                    \"remove_short\",\n                                    \"remove_long\"\n                                  ]\n                                },\n                                \"minute\": {\n                                  \"$ref\": \"#/paths/~1v1~1messages/get/responses/200/content/application~1json/schema/items/properties/tokens/items/oneOf/1/properties/timer/properties/format/properties/hour\"\n                                },\n                                \"second\": {\n                                  \"$ref\": \"#/paths/~1v1~1messages/get/responses/200/content/application~1json/schema/items/properties/tokens/items/oneOf/1/properties/timer/properties/format/properties/hour\"\n                                },\n                                \"millisecond\": {\n                                  \"$ref\": \"#/paths/~1v1~1messages/get/responses/200/content/application~1json/schema/items/properties/tokens/items/oneOf/1/properties/timer/properties/format/properties/hour\"\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n                    {\n                      \"type\": \"object\",\n                      \"required\": [\n                        \"name\"\n                      ],\n                      \"properties\": {\n                        \"name\": {\n                          \"type\": \"string\",\n                          \"example\": \"My Token\"\n                        },\n                        \"clock\": {\n                          \"type\": \"object\",\n                          \"required\": [\n                            \"format\"\n                          ],\n                          \"properties\": {\n                            \"format\": {\n                              \"type\": \"object\",\n                              \"required\": [\n                                \"date\",\n                                \"time\",\n                                \"is_24_hours\"\n                              ],\n                              \"properties\": {\n                                \"date\": {\n                                  \"type\": \"string\",\n                                  \"enum\": [\n                                    \"none\",\n                                    \"short\",\n                                    \"medium\",\n                                    \"long\",\n                                    \"full\"\n                                  ]\n                                },\n                                \"time\": {\n                                  \"$ref\": \"#/paths/~1v1~1messages/get/responses/200/content/application~1json/schema/items/properties/tokens/items/oneOf/2/properties/clock/properties/format/properties/date\"\n                                },\n                                \"is_24_hours\": {\n                                  \"type\": \"boolean\"\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  ]\n                }\n              },\n              \"examples\": {\n                \"trigger_message\": {\n                  \"summary\": \"Triggering a message with multiple tokens\",\n                  \"value\": [\n                    {\n                      \"name\": \"My Text Token\",\n                      \"text\": {\n                        \"text\": \"Hello, world!\"\n                      }\n                    },\n                    {\n                      \"name\": \"My Timer Token\",\n                      \"timer\": {\n                        \"configuration\": {\n                          \"countdown\": {\n                            \"duration\": 3600\n                          },\n                          \"format\": {\n                            \"hour\": \"none\",\n                            \"minute\": \"short\",\n                            \"second\": \"long\",\n                            \"millisecond\": \"remove_short\"\n                          }\n                        }\n                      }\n                    },\n                    {\n                      \"name\": \"My Clock Token\",\n                      \"clock\": {\n                        \"format\": {\n                          \"date\": \"full\",\n                          \"time\": \"short\",\n                          \"is_24_hours\": false\n                        }\n                      }\n                    }\n                  ]\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"204\": {\n            \"$ref\": \"#/paths/~1v1~1look~1current/put/responses/204\"\n          },\n          \"400\": {\n            \"$ref\": \"#/paths/~1v1~1looks/post/responses/400\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/message/{id}/clear\": {\n      \"get\": {\n        \"operationId\": \"messageClear\",\n        \"tags\": [\n          \"Message\"\n        ],\n        \"summary\": \"Clears / Hides the specified message.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1macro~1%7Bid%7D/parameters/0\"\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"$ref\": \"#/paths/~1v1~1look~1current/put/responses/204\"\n          },\n          \"400\": {\n            \"$ref\": \"#/paths/~1v1~1looks/post/responses/400\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/find_my_mouse\": {\n      \"get\": {\n        \"operationId\": \"findMyMouse\",\n        \"tags\": [\n          \"Miscellaneous\"\n        ],\n        \"summary\": \"Executes the “Find My Mouse” operation.\",\n        \"responses\": {\n          \"204\": {\n            \"$ref\": \"#/paths/~1v1~1look~1current/put/responses/204\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/playlists\": {\n      \"get\": {\n        \"operationId\": \"playlistGetAll\",\n        \"tags\": [\n          \"Playlist\"\n        ],\n        \"summary\": \"Requests a list of all configured playlists.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/paths/~1v1~1playlists/post/responses/200/content/application~1json/schema\"\n                  }\n                },\n                \"example\": [\n                  {\n                    \"id\": {\n                      \"index\": 0,\n                      \"name\": \"Service 2022-01-16\",\n                      \"uuid\": \"942C3FC3-C4B2-44F7-A55D-4CC913BB8A5D\"\n                    },\n                    \"type\": \"playlist\"\n                  }\n                ]\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      },\n      \"post\": {\n        \"operationId\": \"playlistCreateTopLevel\",\n        \"tags\": [\n          \"Playlist\"\n        ],\n        \"summary\": \"Creates a playlist with the specified details.\",\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"name\",\n                  \"type\"\n                ],\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\",\n                    \"description\": \"The name of the new playlist.\",\n                    \"example\": \"Sunday Services\"\n                  },\n                  \"type\": {\n                    \"type\": \"string\",\n                    \"description\": \"The type of playlist item:\\n  * `playlist` - A standard playlist\\n  * `group` - A playlist folder, which can contain other playlists\\n\",\n                    \"enum\": [\n                      \"playlist\",\n                      \"group\"\n                    ],\n                    \"example\": \"playlist\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"oneOf\": [\n                    {\n                      \"type\": \"object\",\n                      \"required\": [\n                        \"id\",\n                        \"type\",\n                        \"playlists\"\n                      ],\n                      \"properties\": {\n                        \"id\": {\n                          \"$ref\": \"#/paths/~1v1~1playlist~1current/get/responses/200/content/application~1json/schema\"\n                        },\n                        \"type\": {\n                          \"$ref\": \"#/paths/~1v1~1playlists/post/requestBody/content/application~1json/schema/properties/type\"\n                        },\n                        \"playlists\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"$ref\": \"#/paths/~1v1~1playlists/post/responses/200/content/application~1json/schema\"\n                          }\n                        }\n                      }\n                    },\n                    {\n                      \"type\": \"object\",\n                      \"required\": [\n                        \"id\",\n                        \"type\"\n                      ],\n                      \"properties\": {\n                        \"id\": {\n                          \"$ref\": \"#/paths/~1v1~1playlist~1current/get/responses/200/content/application~1json/schema\"\n                        },\n                        \"type\": {\n                          \"$ref\": \"#/paths/~1v1~1playlists/post/requestBody/content/application~1json/schema/properties/type\"\n                        }\n                      }\n                    }\n                  ],\n                  \"discriminator\": {\n                    \"propertyName\": \"type\",\n                    \"mapping\": {\n                      \"group\": \"schemas.yaml#/playlist_group\",\n                      \"playlist\": \"schemas.yaml#/playlist_data\"\n                    }\n                  }\n                },\n                \"example\": {\n                  \"id\": {\n                    \"uuid\": \"942C3FC3-C4B2-44F7-A55D-4CC913BB8A5D\",\n                    \"index\": 3,\n                    \"name\": \"Sunday Services\"\n                  },\n                  \"type\": \"playlist\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/paths/~1v1~1looks/post/responses/400\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/playlist/current\": {\n      \"get\": {\n        \"operationId\": \"playlistActiveGet\",\n        \"tags\": [\n          \"Playlist\"\n        ],\n        \"summary\": \"Requests the details of the currently active playlist.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1props/get/parameters/0\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The response was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"uuid\",\n                    \"name\",\n                    \"index\"\n                  ],\n                  \"properties\": {\n                    \"uuid\": {\n                      \"type\": \"string\",\n                      \"description\": \"The UUID of the item\",\n                      \"example\": \"942C3FC3-C4B2-44F7-A55D-4CC913BB8A5D\"\n                    },\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"description\": \"The user-defined name of the item\",\n                      \"example\": \"My Item\"\n                    },\n                    \"index\": {\n                      \"type\": \"integer\",\n                      \"description\": \"The index of the item\",\n                      \"example\": 3\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/playlist/{playlist_id}\": {\n      \"parameters\": [\n        {\n          \"in\": \"path\",\n          \"required\": true,\n          \"name\": \"playlist_id\",\n          \"description\": \"The ID of the playlist, either UUID, name, or index, in order of interpretation and search priority. A path can also be specified to identify playlists within folders. UUID and name matches are searched through the entire playlist tree. Because UUIDs are unique a path is not necessary. A name path is not necessary unless there are multiple playlists with the same name in different folders. A partial path of names can be used as well. Indices only index into the immediate children at each level of the tree so an index path is requred to access playlists within folders if only using indices. A mix of UUIDs, names, and indices can be used for the path if desired.\",\n          \"schema\": {\n            \"type\": \"string\"\n          },\n          \"examples\": {\n            \"by_uuid\": {\n              \"summary\": \"Match playlist by UUID\",\n              \"value\": \"3C39C433-5C18-4F51-B357-55BB870227C4\"\n            },\n            \"by_name\": {\n              \"summary\": \"Match playlist by name\",\n              \"value\": \"Playlist Name\"\n            },\n            \"by_name_with_path\": {\n              \"summary\": \"Match playlist with a name path\",\n              \"value\": \"Folder1/Folder2/Playlist Name\"\n            },\n            \"by_index\": {\n              \"summary\": \"Match playlist by index\",\n              \"value\": 3\n            },\n            \"by_index_path\": {\n              \"summary\": \"Match playlist by index path\",\n              \"value\": \"2/0/1\"\n            },\n            \"by_mixed_path\": {\n              \"summary\": \"Match playlist by a mixed path\",\n              \"value\": \"3C39C433-5C18-4F51-B357-55BB870227C4/Folder Name/0\"\n            }\n          }\n        }\n      ],\n      \"get\": {\n        \"operationId\": \"playlistGet\",\n        \"tags\": [\n          \"Playlist\"\n        ],\n        \"summary\": \"Requests a list of the items in the specified playlist.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"id\",\n                    \"items\"\n                  ],\n                  \"properties\": {\n                    \"id\": {\n                      \"$ref\": \"#/paths/~1v1~1playlist~1current/get/responses/200/content/application~1json/schema\"\n                    },\n                    \"items\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/paths/~1v1~1playlist~1%7Bplaylist_id%7D/put/requestBody/content/application~1json/schema/items\"\n                      }\n                    }\n                  }\n                },\n                \"example\": {\n                  \"id\": {\n                    \"index\": 0,\n                    \"name\": \"Sunday Service\",\n                    \"uuid\": \"942C3FC3-C4B2-44F7-A55D-4CC913BB8A5A\"\n                  },\n                  \"items\": [\n                    {\n                      \"id\": {\n                        \"index\": 0,\n                        \"name\": \"Songs\",\n                        \"uuid\": \"\"\n                      },\n                      \"type\": \"header\",\n                      \"is_hidden\": true\n                    },\n                    {\n                      \"id\": {\n                        \"index\": 1,\n                        \"name\": \"Amazing Grace\",\n                        \"uuid\": \"942C3FC3-C4B2-44F7-A55D-4CC913BB8A5B\"\n                      },\n                      \"type\": \"presentation\",\n                      \"is_hidden\": false\n                    },\n                    {\n                      \"id\": {\n                        \"index\": 2,\n                        \"name\": \"Graves Into Gardens\",\n                        \"uuid\": \"942C3FC3-C4B2-44F7-A55D-4CC913BB8A5C\"\n                      },\n                      \"type\": \"presentation\",\n                      \"is_hidden\": false\n                    },\n                    {\n                      \"id\": {\n                        \"index\": 3,\n                        \"name\": \"Sermon\",\n                        \"uuid\": \"\"\n                      },\n                      \"type\": \"header\",\n                      \"is_hidden\": false\n                    },\n                    {\n                      \"id\": {\n                        \"index\": 4,\n                        \"name\": \"Sermon Notes 2022-01-16\",\n                        \"uuid\": \"942C3FC3-C4B2-44F7-A55D-4CC913BB8A5D\"\n                      },\n                      \"type\": \"presentation\",\n                      \"is_hidden\": false\n                    }\n                  ]\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      },\n      \"put\": {\n        \"operationId\": \"playlistPut\",\n        \"tags\": [\n          \"Playlist\"\n        ],\n        \"summary\": \"Sets the contents of the specified playlist.\",\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"id\",\n                    \"type\",\n                    \"is_hidden\",\n                    \"is_pco\"\n                  ],\n                  \"properties\": {\n                    \"id\": {\n                      \"$ref\": \"#/paths/~1v1~1playlist~1current/get/responses/200/content/application~1json/schema\"\n                    },\n                    \"type\": {\n                      \"type\": \"string\",\n                      \"description\": \"The type of playlist item:\\n  * `presentation` - A presentation playlist item.\\n  * `placeholder` - A placeholder item, used for Planning Center items that have not been linked.\\n  * `header` - A header playlist item.\\n  * `media` - A media playlist item.\\n  * `audio` - An audio playlist item.\\n  * `livevideo` a live video playlist item.\\n\",\n                      \"enum\": [\n                        \"presentation\",\n                        \"placeholder\",\n                        \"header\",\n                        \"media\",\n                        \"audio\",\n                        \"livevideo\"\n                      ]\n                    },\n                    \"is_hidden\": {\n                      \"type\": \"boolean\",\n                      \"description\": \"`true` if the item is hidden, `false` if the item is visible.\\n\"\n                    },\n                    \"is_pco\": {\n                      \"type\": \"boolean\",\n                      \"description\": \"`true` if the item is a Planning Center Online item, `false` otherwise.\\n\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"204\": {\n            \"$ref\": \"#/paths/~1v1~1look~1current/put/responses/204\"\n          },\n          \"400\": {\n            \"$ref\": \"#/paths/~1v1~1looks/post/responses/400\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      },\n      \"post\": {\n        \"operationId\": \"playlistCreate\",\n        \"tags\": [\n          \"Playlist\"\n        ],\n        \"summary\": \"Creates a playlist with the specified details underneath the specified playlist or playlist folder.\",\n        \"description\": \"An 400 error will be returned if the specified playlist group is not\\nactually a playlist group (i.e. it is a regular playlist).\\n\",\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/paths/~1v1~1playlists/post/requestBody/content/application~1json/schema\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/paths/~1v1~1playlists/post/responses/200/content/application~1json/schema\"\n                },\n                \"example\": {\n                  \"id\": {\n                    \"uuid\": \"942C3FC3-C4B2-44F7-A55D-4CC913BB8A5D\",\n                    \"index\": 3,\n                    \"name\": \"Sunday Services\"\n                  },\n                  \"type\": \"playlist\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/paths/~1v1~1looks/post/responses/400\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/presentation/current\": {\n      \"get\": {\n        \"operationId\": \"presentationGetActive\",\n        \"tags\": [\n          \"Presentation\"\n        ],\n        \"summary\": \"Requests the details of the currently active presentation.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1props/get/parameters/0\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"presentation\": {\n                      \"$ref\": \"#/paths/~1v1~1presentation~1%7Buuid%7D/get/responses/200/content/application~1json/schema\"\n                    },\n                    \"announcements\": {\n                      \"$ref\": \"#/paths/~1v1~1presentation~1%7Buuid%7D/get/responses/200/content/application~1json/schema\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/presentation/slide_index\": {\n      \"get\": {\n        \"operationId\": \"presentationGetSlideIndex\",\n        \"tags\": [\n          \"Presentation\"\n        ],\n        \"summary\": \"Requests the index of the current slide/cue within the currently active presentation.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1props/get/parameters/0\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"presentation\": {\n                      \"type\": \"object\",\n                      \"nullable\": true,\n                      \"required\": [\n                        \"index\",\n                        \"presentation_id\"\n                      ],\n                      \"properties\": {\n                        \"index\": {\n                          \"type\": \"integer\"\n                        },\n                        \"presentation_id\": {\n                          \"$ref\": \"#/paths/~1v1~1playlist~1current/get/responses/200/content/application~1json/schema\"\n                        }\n                      }\n                    },\n                    \"announcements\": {\n                      \"$ref\": \"#/paths/~1v1~1presentation~1slide_index/get/responses/200/content/application~1json/schema/properties/presentation\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/presentation/chord_chart\": {\n      \"get\": {\n        \"operationId\": \"presentationGetChordChart\",\n        \"tags\": [\n          \"Presentation\"\n        ],\n        \"summary\": \"Requests the current chord chart image (if available) at the given quality value.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1mask~1%7Bid%7D~1thumbnail/get/parameters/1\"\n          },\n          {\n            \"$ref\": \"#/paths/~1v1~1props/get/parameters/0\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request was processed successfully.\",\n            \"content\": {\n              \"image/jpeg\": {\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"format\": \"binary\",\n                  \"example\": \"image data here\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/presentation/{uuid}\": {\n      \"get\": {\n        \"operationId\": \"presentationGet\",\n        \"tags\": [\n          \"Presentation\"\n        ],\n        \"summary\": \"Requests the details of the specified presentation.\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"required\": true,\n            \"name\": \"uuid\",\n            \"description\": \"The UUID of the item to look up.\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"3C39C433-5C18-4F51-B357-55BB870227C4\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"groups\",\n                    \"name\",\n                    \"has_timeline\",\n                    \"current_location\",\n                    \"destination\"\n                  ],\n                  \"properties\": {\n                    \"id\": {\n                      \"$ref\": \"#/paths/~1v1~1playlist~1current/get/responses/200/content/application~1json/schema\"\n                    },\n                    \"groups\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"required\": [\n                          \"name\",\n                          \"color\",\n                          \"slides\"\n                        ],\n                        \"properties\": {\n                          \"name\": {\n                            \"type\": \"string\",\n                            \"example\": \"Verse 1\"\n                          },\n                          \"color\": {\n                            \"$ref\": \"#/paths/~1v1~1macro~1%7Bid%7D/put/requestBody/content/application~1json/schema/properties/color\"\n                          },\n                          \"slides\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                              \"type\": \"object\",\n                              \"required\": [\n                                \"enabled\",\n                                \"notes\",\n                                \"text\",\n                                \"image\",\n                                \"label\",\n                                \"color\"\n                              ],\n                              \"properties\": {\n                                \"enabled\": {\n                                  \"type\": \"boolean\",\n                                  \"description\": \"Is this slide enabled\"\n                                },\n                                \"notes\": {\n                                  \"type\": \"string\",\n                                  \"description\": \"Notes to be showed along with the slide\",\n                                  \"example\": \"\"\n                                },\n                                \"text\": {\n                                  \"type\": \"string\",\n                                  \"description\": \"Slide text\",\n                                  \"example\": \"Amazing Grace\\nHow sweet the sound\"\n                                },\n                                \"image\": {\n                                  \"type\": \"string\",\n                                  \"description\": \"Base64-encoded JPEG image data.\",\n                                  \"example\": \"\u003cImageDataHere\u003e\"\n                                },\n                                \"label\": {\n                                  \"type\": \"string\",\n                                  \"description\": \"The label for the slide\",\n                                  \"example\": \"Acoustic\"\n                                },\n                                \"color\": {\n                                  \"$ref\": \"#/paths/~1v1~1macro~1%7Bid%7D/put/requestBody/content/application~1json/schema/properties/color\"\n                                },\n                                \"size\": {\n                                  \"$ref\": \"#/paths/~1v1~1theme~1%7Bid%7D~1slides~1%7Btheme_slide%7D/put/requestBody/content/application~1json/schema/properties/size\"\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"has_timeline\": {\n                      \"type\": \"boolean\",\n                      \"description\": \"True if this presentation has an associated timeline\"\n                    },\n                    \"presentation_path\": {\n                      \"type\": \"string\",\n                      \"description\": \"The path to the presentation file on disk\",\n                      \"example\": \"/Users/someuser/Documents/ProPresenter/Libraries/Default/Amazing Grace.pro\"\n                    },\n                    \"destination\": {\n                      \"type\": \"string\",\n                      \"description\": \"The presentation destination:\\n  * `presentation` - Presentation layer\\n  * `announcements` - Announcements layer\\n\",\n                      \"enum\": [\n                        \"presentation\",\n                        \"announcements\"\n                      ],\n                      \"example\": \"announcements\",\n                      \"default\": \"presentation\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/presentation/{uuid}/trigger\": {\n      \"get\": {\n        \"operationId\": \"presentationTrigger\",\n        \"tags\": [\n          \"Presentation\"\n        ],\n        \"summary\": \"Triggers the specified presentation.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1presentation~1%7Buuid%7D/get/parameters/0\"\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"$ref\": \"#/paths/~1v1~1look~1current/put/responses/204\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/presentation/{uuid}/trigger/{index}\": {\n      \"get\": {\n        \"operationId\": \"presentationTriggerCue\",\n        \"tags\": [\n          \"Presentation\"\n        ],\n        \"summary\": \"Triggers the specified cue inside the specified presentation.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1presentation~1%7Buuid%7D/get/parameters/0\"\n          },\n          {\n            \"$ref\": \"#/paths/~1v1~1trigger~1cue~1%7Bindex%7D/get/parameters/0\"\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"$ref\": \"#/paths/~1v1~1look~1current/put/responses/204\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/presentation/active/timeline/{operation}\": {\n      \"get\": {\n        \"operationId\": \"presentationActiveTimelineOperation\",\n        \"tags\": [\n          \"Presentation\"\n        ],\n        \"summary\": \"Performs the requested timeline operation for the active presentation.\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"required\": true,\n            \"name\": \"operation\",\n            \"description\": \"The operation to perform on the timeline\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"play\",\n                \"pause\",\n                \"rewind\"\n              ]\n            }\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"$ref\": \"#/paths/~1v1~1look~1current/put/responses/204\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/presentation/focused/timeline/{operation}\": {\n      \"get\": {\n        \"operationId\": \"presentationFocusedTimelineOperation\",\n        \"tags\": [\n          \"Presentation\"\n        ],\n        \"summary\": \"Performs the requested timeline operation for the currently active presentation (play, pause, rewind).\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1presentation~1active~1timeline~1%7Boperation%7D/get/parameters/0\"\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"$ref\": \"#/paths/~1v1~1look~1current/put/responses/204\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/presentation/{uuid}/timeline/{operation}\": {\n      \"get\": {\n        \"operationId\": \"presentationTimelineOperation\",\n        \"tags\": [\n          \"Presentation\"\n        ],\n        \"summary\": \"Performs the requested timeline operation for the specified presentation (play, pause, rewind).\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1presentation~1%7Buuid%7D/get/parameters/0\"\n          },\n          {\n            \"$ref\": \"#/paths/~1v1~1presentation~1active~1timeline~1%7Boperation%7D/get/parameters/0\"\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"$ref\": \"#/paths/~1v1~1look~1current/put/responses/204\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/presentation/{uuid}/thumbnail/{index}\": {\n      \"get\": {\n        \"operationId\": \"presentationThumbnailGet\",\n        \"tags\": [\n          \"Presentation\"\n        ],\n        \"summary\": \"Requests a thumbnail image of the specified cue inside the specified presentation at the given quality value.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1presentation~1%7Buuid%7D/get/parameters/0\"\n          },\n          {\n            \"$ref\": \"#/paths/~1v1~1trigger~1cue~1%7Bindex%7D/get/parameters/0\"\n          },\n          {\n            \"$ref\": \"#/paths/~1v1~1mask~1%7Bid%7D~1thumbnail/get/parameters/1\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/paths/~1v1~1mask~1%7Bid%7D~1thumbnail/get/responses/200\"\n          },\n          \"403\": {\n            \"description\": \"The request was not authorized.\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/props\": {\n      \"get\": {\n        \"operationId\": \"propGetAll\",\n        \"tags\": [\n          \"Prop\"\n        ],\n        \"summary\": \"Gets a list of all the props.\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"required\": false,\n            \"name\": \"chunked\",\n            \"description\": \"Turns this request into a streaming chunked response. Each chunk returned by the endpoint\\nis equal to the standard response. Each time the data updates, a chunk will be sent, until\\nthe connection is closed.\\n\\nMost browsers can only handle 5-6 open connections per page. If more connections than\\nthis are required, use the [/v1/status/updates](#/Status/statusUpdatesGet) endpoint, which functions as an aggregator\\nallowing the data from multiple endpoints to be consolidated into one.\\n\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            },\n            \"default\": false\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request was completed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"description\": \"The list of all the defined props.\",\n                  \"items\": {\n                    \"$ref\": \"#/paths/~1v1~1prop~1%7Bid%7D/get/responses/200/content/application~1json/schema\"\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/prop/{id}\": {\n      \"get\": {\n        \"operationId\": \"propGet\",\n        \"tags\": [\n          \"Prop\"\n        ],\n        \"summary\": \"Requests the details of the specified prop.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1macro~1%7Bid%7D/parameters/0\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"id\"\n                  ],\n                  \"properties\": {\n                    \"id\": {\n                      \"$ref\": \"#/paths/~1v1~1playlist~1current/get/responses/200/content/application~1json/schema\"\n                    },\n                    \"is_active\": {\n                      \"type\": \"boolean\",\n                      \"description\": \"`true` if the prop is currently active (triggered), `false` otherwise\\n\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      },\n      \"delete\": {\n        \"operationId\": \"propDelete\",\n        \"tags\": [\n          \"Prop\"\n        ],\n        \"summary\": \"Deletes the specified prop.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1macro~1%7Bid%7D/parameters/0\"\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"$ref\": \"#/paths/~1v1~1look~1current/put/responses/204\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/prop/{id}/trigger\": {\n      \"get\": {\n        \"operationId\": \"propTrigger\",\n        \"tags\": [\n          \"Prop\"\n        ],\n        \"summary\": \"Triggers the specified prop.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1macro~1%7Bid%7D/parameters/0\"\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"$ref\": \"#/paths/~1v1~1look~1current/put/responses/204\"\n          },\n          \"400\": {\n            \"$ref\": \"#/paths/~1v1~1looks/post/responses/400\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/prop/{id}/clear\": {\n      \"get\": {\n        \"operationId\": \"propClear\",\n        \"tags\": [\n          \"Prop\"\n        ],\n        \"summary\": \"Clears the specified prop.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1macro~1%7Bid%7D/parameters/0\"\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"$ref\": \"#/paths/~1v1~1look~1current/put/responses/204\"\n          },\n          \"400\": {\n            \"$ref\": \"#/paths/~1v1~1looks/post/responses/400\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/prop/{id}/thumbnail\": {\n      \"get\": {\n        \"operationId\": \"propThumbnailGet\",\n        \"tags\": [\n          \"Prop\"\n        ],\n        \"summary\": \"Requests a thumbnail image of the specified prop at the given quality value.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1macro~1%7Bid%7D/parameters/0\"\n          },\n          {\n            \"$ref\": \"#/paths/~1v1~1mask~1%7Bid%7D~1thumbnail/get/parameters/1\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/paths/~1v1~1mask~1%7Bid%7D~1thumbnail/get/responses/200\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/stage/message\": {\n      \"get\": {\n        \"operationId\": \"stageMessageGet\",\n        \"tags\": [\n          \"Stage\"\n        ],\n        \"summary\": \"Requests the currently active stage message.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1props/get/parameters/0\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The response was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"description\": \"The current stage message\",\n                  \"example\": \"Hello World\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      },\n      \"put\": {\n        \"operationId\": \"stageMessageShow\",\n        \"tags\": [\n          \"Stage\"\n        ],\n        \"summary\": \"Shows the specified stage message on the configured stage screen.\",\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"string\",\n                \"description\": \"The message to show on the stage screens\",\n                \"example\": \"Your message here\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"204\": {\n            \"$ref\": \"#/paths/~1v1~1look~1current/put/responses/204\"\n          },\n          \"400\": {\n            \"$ref\": \"#/paths/~1v1~1looks/post/responses/400\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      },\n      \"delete\": {\n        \"operationId\": \"stageMessageHide\",\n        \"tags\": [\n          \"Stage\"\n        ],\n        \"summary\": \"Hides the currently displayed stage message from the configured stage screen.\",\n        \"responses\": {\n          \"204\": {\n            \"$ref\": \"#/paths/~1v1~1look~1current/put/responses/204\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/stage/layout_map\": {\n      \"get\": {\n        \"operationId\": \"stageLayoutMapGet\",\n        \"tags\": [\n          \"Stage\"\n        ],\n        \"summary\": \"Requests the currently selected stage layout for each configured stage screen.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/paths/~1v1~1stage~1layout_map/put/requestBody/content/application~1json/schema\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      },\n      \"put\": {\n        \"operationId\": \"stageLayoutMapSet\",\n        \"tags\": [\n          \"Stage\"\n        ],\n        \"summary\": \"Sets the specified stage message to the corresponding stage screens.\",\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"screen\",\n                    \"layout\"\n                  ],\n                  \"properties\": {\n                    \"screen\": {\n                      \"$ref\": \"#/paths/~1v1~1playlist~1current/get/responses/200/content/application~1json/schema\"\n                    },\n                    \"layout\": {\n                      \"$ref\": \"#/paths/~1v1~1playlist~1current/get/responses/200/content/application~1json/schema\"\n                    }\n                  }\n                }\n              },\n              \"examples\": {\n                \"set_layouts_by_name\": {\n                  \"summary\": \"Setting layouts by name\",\n                  \"value\": [\n                    {\n                      \"screen\": {\n                        \"name\": \"Side Screen\"\n                      },\n                      \"layout\": {\n                        \"name\": \"Sermon Notes\"\n                      }\n                    }\n                  ]\n                },\n                \"set_layouts_by_index\": {\n                  \"summary\": \"Setting layouts by index\",\n                  \"value\": [\n                    {\n                      \"screen\": {\n                        \"index\": 3\n                      },\n                      \"layout\": {\n                        \"index\": 7\n                      }\n                    }\n                  ]\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"204\": {\n            \"$ref\": \"#/paths/~1v1~1look~1current/put/responses/204\"\n          },\n          \"400\": {\n            \"$ref\": \"#/paths/~1v1~1looks/post/responses/400\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/stage/screens\": {\n      \"get\": {\n        \"operationId\": \"stageScreensGet\",\n        \"tags\": [\n          \"Stage\"\n        ],\n        \"summary\": \"Requests a list of the configured stage screens.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/paths/~1v1~1playlist~1current/get/responses/200/content/application~1json/schema\"\n                  },\n                  \"example\": [\n                    {\n                      \"id\": {\n                        \"name\": \"Stage Left\",\n                        \"index\": 0,\n                        \"uuid\": \"BB6E8C3A-8182-4818-8D57-38B1D85333A9\"\n                      }\n                    },\n                    {\n                      \"id\": {\n                        \"name\": \"Stage Right\",\n                        \"index\": 1,\n                        \"uuid\": \"D2BAE32A-CDE2-4166-BA5C-2276D51EEFB8\"\n                      }\n                    }\n                  ]\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/stage/screen/{id}/layout\": {\n      \"get\": {\n        \"operationId\": \"stageScreenLayoutGet\",\n        \"tags\": [\n          \"Stage\"\n        ],\n        \"summary\": \"Requests the current stage layout for the specified stage screen.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1macro~1%7Bid%7D/parameters/0\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"content\": {\n                  \"schema\": {\n                    \"$ref\": \"#/paths/~1v1~1playlist~1current/get/responses/200/content/application~1json/schema\"\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/stage/screen/{id}/layout/{layout_id}\": {\n      \"get\": {\n        \"operationId\": \"stageScreenLayoutSet\",\n        \"tags\": [\n          \"Stage\"\n        ],\n        \"summary\": \"Sets the specified stage layout for the specified stage screen.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1macro~1%7Bid%7D/parameters/0\"\n          },\n          {\n            \"in\": \"path\",\n            \"required\": true,\n            \"name\": \"layout_id\",\n            \"description\": \"The ID of the stage layout to set, either name, index or UUID.\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"examples\": {\n              \"by_name\": {\n                \"summary\": \"Match item by name\",\n                \"value\": \"Item Name\"\n              },\n              \"by_index\": {\n                \"summary\": \"Match item by index\",\n                \"value\": \"3\"\n              },\n              \"by_uuid\": {\n                \"summary\": \"Match item by UUID\",\n                \"value\": \"3C39C433-5C18-4F51-B357-55BB870227C4\"\n              }\n            }\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"$ref\": \"#/paths/~1v1~1look~1current/put/responses/204\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/stage/layouts\": {\n      \"get\": {\n        \"operationId\": \"stageLayoutsGet\",\n        \"tags\": [\n          \"Stage\"\n        ],\n        \"summary\": \"Requests a list of the configured stage layouts.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"required\": [\n                      \"id\"\n                    ],\n                    \"properties\": {\n                      \"id\": {\n                        \"$ref\": \"#/paths/~1v1~1playlist~1current/get/responses/200/content/application~1json/schema\"\n                      }\n                    }\n                  },\n                  \"example\": [\n                    {\n                      \"id\": {\n                        \"name\": \"Current/Next Stacked - Music\",\n                        \"index\": 0,\n                        \"uuid\": \"4D542943-6CF2-4BEE-A625-7C37B79D8EEF\"\n                      }\n                    },\n                    {\n                      \"id\": {\n                        \"name\": \"Main Screen Preview\",\n                        \"index\": 1,\n                        \"uiuid\": \"D2BAE32A-CDE2-4166-BA5C-2276D51EEFB8\"\n                      }\n                    }\n                  ]\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/stage/layout/{id}\": {\n      \"delete\": {\n        \"operationId\": \"stageLayoutDelete\",\n        \"tags\": [\n          \"Stage\"\n        ],\n        \"summary\": \"Deletes the specified stage layout.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1macro~1%7Bid%7D/parameters/0\"\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"$ref\": \"#/paths/~1v1~1look~1current/put/responses/204\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/stage/layout/{id}/thumbnail\": {\n      \"get\": {\n        \"operationId\": \"stageLayoutThumbnailGet\",\n        \"tags\": [\n          \"Stage\"\n        ],\n        \"summary\": \"Requests a thumbnail image of the specified stage layout at the given quality value.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1macro~1%7Bid%7D/parameters/0\"\n          },\n          {\n            \"$ref\": \"#/paths/~1v1~1mask~1%7Bid%7D~1thumbnail/get/parameters/1\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/paths/~1v1~1mask~1%7Bid%7D~1thumbnail/get/responses/200\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/version\": {\n      \"get\": {\n        \"operationId\": \"versionGet\",\n        \"tags\": [\n          \"Status\"\n        ],\n        \"summary\": \"Requests the general information about the currently active ProPresenter instance.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The response was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"name\",\n                    \"platform\",\n                    \"os_version\",\n                    \"host_description\",\n                    \"api_version\"\n                  ],\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"description\": \"Human-readable name representing the machine\",\n                      \"example\": \"Main sanctuary Pro7 machine\"\n                    },\n                    \"platform\": {\n                      \"type\": \"string\",\n                      \"description\": \"The platform that ProPresenter is running on\\n* `win`- Windows\\n* `mac` - macOS\\n* `unknown` - Unknown platform\\n\",\n                      \"enum\": [\n                        \"win\",\n                        \"mac\",\n                        \"unknown\"\n                      ]\n                    },\n                    \"os_version\": {\n                      \"type\": \"string\",\n                      \"description\": \"Version of the operating system.\",\n                      \"example\": \"10.0.19043\"\n                    },\n                    \"host_description\": {\n                      \"type\": \"string\",\n                      \"description\": \"Description of the host machine\",\n                      \"example\": \"ProPresenter 7.8.1\"\n                    },\n                    \"api_version\": {\n                      \"type\": \"string\",\n                      \"description\": \"Version of the API supported by this machine\",\n                      \"example\": \"v1\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"The receiving machine does not have Network enabled or the requested path was not found.\"\n          }\n        }\n      }\n    },\n    \"/v1/status/layers\": {\n      \"get\": {\n        \"operationId\": \"layerStatusGet\",\n        \"tags\": [\n          \"Status\"\n        ],\n        \"summary\": \"Requests the status of all available layers.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1props/get/parameters/0\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The response was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"video_input\",\n                    \"media\",\n                    \"slide\",\n                    \"announcements\",\n                    \"props\",\n                    \"messaages\",\n                    \"audio\"\n                  ],\n                  \"properties\": {\n                    \"video_input\": {\n                      \"type\": \"boolean\",\n                      \"description\": \"`true` if the layer is currently active, `false` otherwise\\n\"\n                    },\n                    \"media\": {\n                      \"type\": \"boolean\",\n                      \"description\": \"`true` if the layer is currently active, `false` otherwise\\n\"\n                    },\n                    \"slide\": {\n                      \"type\": \"boolean\",\n                      \"description\": \"`true` if the layer is currently active, `false` otherwise\\n\"\n                    },\n                    \"announcements\": {\n                      \"type\": \"boolean\",\n                      \"description\": \"`true` if the layer is currently active, `false` otherwise\\n\"\n                    },\n                    \"props\": {\n                      \"type\": \"boolean\",\n                      \"description\": \"`true` if the layer is currently active, `false` otherwise\\n\"\n                    },\n                    \"messages\": {\n                      \"type\": \"boolean\",\n                      \"description\": \"`true` if the layer is currently active, `false` otherwise\\n\"\n                    },\n                    \"audio\": {\n                      \"type\": \"boolean\",\n                      \"description\": \"`true` if the layer is currently active, `false` otherwise\\n\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/status/stage_screens\": {\n      \"get\": {\n        \"operationId\": \"stageScreensStatusGet\",\n        \"tags\": [\n          \"Status\"\n        ],\n        \"summary\": \"Requests the status of the stage screens.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1props/get/parameters/0\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The response was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\",\n                  \"description\": \"`true` if the stage screens are enabled, `false` otherwise.\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      },\n      \"put\": {\n        \"operationId\": \"stageScreensStatusSet\",\n        \"tags\": [\n          \"Status\"\n        ],\n        \"summary\": \"Sets the status of the stage screens.\",\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"boolean\",\n                \"description\": \"`true` to enable the stage screens, `false` otherwise.\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"204\": {\n            \"$ref\": \"#/paths/~1v1~1look~1current/put/responses/204\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/status/audience_screens\": {\n      \"get\": {\n        \"operationId\": \"audienceScreensStatusGet\",\n        \"tags\": [\n          \"Status\"\n        ],\n        \"summary\": \"Requests the status of the audience screens.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1props/get/parameters/0\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The response was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\",\n                  \"description\": \"`true` if the audience screens are enabled, `false` otherwise.\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      },\n      \"put\": {\n        \"operationId\": \"audienceScreensStatusSet\",\n        \"tags\": [\n          \"Status\"\n        ],\n        \"summary\": \"Sets the status of the audience screens.\",\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"boolean\",\n                \"description\": \"`true` to enable the audience screens, `false` otherwise.\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"204\": {\n            \"$ref\": \"#/paths/~1v1~1look~1current/put/responses/204\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/status/screens\": {\n      \"get\": {\n        \"operationId\": \"statusScreensGet\",\n        \"tags\": [\n          \"Status\"\n        ],\n        \"summary\": \"Requests the details of all configured screens.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1props/get/parameters/0\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"required\": [\n                      \"id\",\n                      \"size\",\n                      \"screen_type\"\n                    ],\n                    \"properties\": {\n                      \"id\": {\n                        \"$ref\": \"#/paths/~1v1~1playlist~1current/get/responses/200/content/application~1json/schema\"\n                      },\n                      \"size\": {\n                        \"$ref\": \"#/paths/~1v1~1theme~1%7Bid%7D~1slides~1%7Btheme_slide%7D/put/requestBody/content/application~1json/schema/properties/size\"\n                      },\n                      \"screen_type\": {\n                        \"type\": \"string\",\n                        \"description\": \"The type of screen this item represents, audience or stage display.\",\n                        \"enum\": [\n                          \"audience\",\n                          \"stage\"\n                        ]\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/status/slide\": {\n      \"get\": {\n        \"operationId\": \"slideStatusGet\",\n        \"tags\": [\n          \"Status\"\n        ],\n        \"summary\": \"Requests the current/next slide text and image UUIDs.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1props/get/parameters/0\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The response was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"current\": {\n                      \"$ref\": \"#/paths/~1v1~1status~1slide/get/responses/200/content/application~1json/schema/properties/next\"\n                    },\n                    \"next\": {\n                      \"type\": \"object\",\n                      \"required\": [\n                        \"text\",\n                        \"notes\",\n                        \"uuid\"\n                      ],\n                      \"properties\": {\n                        \"text\": {\n                          \"type\": \"string\",\n                          \"description\": \"The text of the slide.\",\n                          \"example\": \"Amazing Grace, how sweet the sound\\nThat saved a wretch like me.\"\n                        },\n                        \"notes\": {\n                          \"type\": \"string\",\n                          \"description\": \"Any notes associated with the slide.\",\n                          \"example\": \"Start quiet, leave open.\"\n                        },\n                        \"uuid\": {\n                          \"type\": \"string\",\n                          \"description\": \"The UUID of the slide, used when requesting slide images.\",\n                          \"example\": \"1C43092A-B254-45F0-8F8A-9A8FEE26F4DE\"\n                        }\n                      }\n                    }\n                  }\n                },\n                \"example\": {\n                  \"current\": {\n                    \"text\": \"Amazing Grace, how sweet the sound\\nThat saved a wretch like me.\",\n                    \"notes\": \"Start quiet, leave open\",\n                    \"uuid\": \"1C43092A-B254-45F0-8F8A-9A8FEE26F4DE\"\n                  },\n                  \"next\": {\n                    \"text\": \"I once was lost, but now I'm found\\nWas blind, but now I see.\",\n                    \"notes\": \"Build from last chord\",\n                    \"uuid\": \"242BAEBB-FAC5-4B7B-A19D-F4C09A66D711\"\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/status/updates\": {\n      \"post\": {\n        \"operationId\": \"statusUpdatesGet\",\n        \"tags\": [\n          \"Status\"\n        ],\n        \"summary\": \"Aggregates the data from one or more streaming endpoints into a single streaming endpoint.\",\n        \"description\": \"This endpoint is used to overcome a browser limit on the number of concurrent connections allowed. The following\\nendpoints are permitted here:\\n  * [audio/playlist/{id}/updates](#/Audio/audioPlaylistUpdateGet)\\n  * [capture/status](#/Capture/captureStatusGet)\\n  * [library/{id}](#/Library/libraryGet)\\n  * [look/current](#/Looks/lookGetCurrent)\\n  * [media/playlist/{id}/updates](#/Media/mediaPlaylistUpdateGet)\\n  * [messages](#/Message/messageGetAll)\\n  * [playlist/current](#/Playlist/playlistCurrentGet)\\n  * [presentation/current](#/Presentation/presentationGetCurrent)\\n  * [presentation/slide_index](#/Presentation/presentationGetSlideIndex)\\n  * [stage/message](#/Stage/stageMessageGet)\\n  * [status/layers](#/Status/layerStatusGet)\\n  * [status/stage_screens](#/Status/stageScreensStatusGet)\\n  * [status/audience_screens](#/Status/audienceScreensStatusGet)\\n  * [status/screens](#/Status/statusScreensGet)\\n  * [status/slide](#/Status/slideStatusGet)\\n  * [timers](#/Timer/timerGetAll)\\n  * [timers/current](#/Timer/timerGetCurrentTimes)\\n  * [timer/system_time](#/Timer/timerGetSystemTime)\\n  * [timer/video_countdown](#/Timer/timerGetVideoCountdown)\\n  * [transport/{layer}/time](#/Transport/transportTimeGet)\\n  * [transport/{layer}/current](#/Transport/transportCurrentMediaGet)\\n\\nIn particular, all (and only) GET requests that return a chunked JSON response are legal URLs.\\n\",\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"examples\": {\n                \"one_url\": {\n                  \"summary\": \"One URL\",\n                  \"value\": [\n                    \"status/slide\"\n                  ]\n                },\n                \"multi_urls\": {\n                  \"summary\": \"Multiple URLs\",\n                  \"value\": [\n                    \"status/slide\",\n                    \"timer/video_countdown\",\n                    \"presentation/current\"\n                  ]\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request was processed successfully. A stream of updates will be returned to the client as they\\nbecome available. Each update is separated by a CRLF pair, so a section of data followed by a\\nCR-LF-CR-LF sequence is one update. Each update is a JSON object, as below.\\n\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"url\": {\n                      \"type\": \"string\",\n                      \"description\": \"The URL that caused this chunk of data to be sent\",\n                      \"example\": \"/v1/timer/video_countdown\"\n                    },\n                    \"data\": {\n                      \"type\": {},\n                      \"description\": \"The data object that was returned by the given URL. This is in the same data format\\nas the given URL returns natively.\\n\",\n                      \"example\": \"00:00:00\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"The given request was invalid. This can be caused by a number of things:\\n  * The given URL was not found.\\n  * The given URL is not a streaming URL (i.e. it does not return a chunked response).\\n  * The given URL does not return a JSON data type.\\n\\nThe response body contains a list of URLs that were not valid.\\n\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"example\": [\n                  \"/this_is_not_a_valid_url\",\n                  \"/v1/audio/playlist/0\",\n                  \"/v1/presentation/chord_chart\"\n                ]\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/themes\": {\n      \"get\": {\n        \"operationId\": \"themeGetAll\",\n        \"tags\": [\n          \"Theme\"\n        ],\n        \"summary\": \"Requests a list of all configured themes and theme slides.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"required\": [\n                      \"id\"\n                    ],\n                    \"properties\": {\n                      \"id\": {\n                        \"$ref\": \"#/paths/~1v1~1playlist~1current/get/responses/200/content/application~1json/schema\"\n                      },\n                      \"themes\": {\n                        \"type\": \"array\",\n                        \"description\": \"The list of themes in this group.\",\n                        \"items\": {\n                          \"$ref\": \"#/paths/~1v1~1theme~1%7Bid%7D/get/responses/200/content/application~1json/schema\"\n                        }\n                      },\n                      \"groups\": {\n                        \"type\": \"array\",\n                        \"description\": \"The list of child groups in this group.\",\n                        \"items\": {\n                          \"$ref\": \"#/paths/~1v1~1themes/get/responses/200/content/application~1json/schema/items\"\n                        },\n                        \"example\": [\n                          {\n                            \"id\": {\n                              \"uuid\": \"\",\n                              \"name\": \"My Theme\",\n                              \"index\": 0\n                            },\n                            \"groups\": [],\n                            \"themes\": [\n                              {\n                                \"id\": {\n                                  \"uuid\": \"\",\n                                  \"name\": \"My Theme\",\n                                  \"index\": 0\n                                },\n                                \"slides\": [\n                                  {\n                                    \"id\": {\n                                      \"uuid\": \"ad19b83b-ee4d-4cfe-9280-220cc9330262\",\n                                      \"name\": \"New Theme Slide\",\n                                      \"index\": 0\n                                    },\n                                    \"size\": {\n                                      \"width\": 1920,\n                                      \"height\": 1080\n                                    },\n                                    \"background\": {\n                                      \"red\": 0,\n                                      \"green\": 0,\n                                      \"blue\": 0,\n                                      \"alpha\": 1\n                                    }\n                                  }\n                                ]\n                              }\n                            ]\n                          },\n                          {\n                            \"id\": {\n                              \"uuid\": \"\",\n                              \"name\": \"My Theme Folder\",\n                              \"index\": 1\n                            },\n                            \"groups\": [\n                              {\n                                \"id\": {\n                                  \"uuid\": \"\",\n                                  \"name\": \"Theme 2\",\n                                  \"index\": 0\n                                },\n                                \"groups\": [],\n                                \"themes\": [\n                                  {\n                                    \"id\": {\n                                      \"uuid\": \"\",\n                                      \"name\": \"Theme 2\",\n                                      \"index\": 0\n                                    },\n                                    \"slides\": [\n                                      {\n                                        \"id\": {\n                                          \"uuid\": \"b86f287a-1692-4574-a739-5451da814249\",\n                                          \"name\": \"New Theme Slide\",\n                                          \"index\": 0\n                                        },\n                                        \"size\": {\n                                          \"width\": 1920,\n                                          \"height\": 1080\n                                        },\n                                        \"background\": {\n                                          \"red\": 0,\n                                          \"green\": 0,\n                                          \"blue\": 0,\n                                          \"alpha\": 1\n                                        }\n                                      }\n                                    ]\n                                  }\n                                ]\n                              }\n                            ],\n                            \"themes\": []\n                          }\n                        ]\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/theme/{id}\": {\n      \"parameters\": [\n        {\n          \"$ref\": \"#/paths/~1v1~1macro~1%7Bid%7D/parameters/0\"\n        }\n      ],\n      \"get\": {\n        \"operationId\": \"themeGet\",\n        \"tags\": [\n          \"Theme\"\n        ],\n        \"summary\": \"Requests the details of the theme and theme slides.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"id\",\n                    \"slides\"\n                  ],\n                  \"properties\": {\n                    \"id\": {\n                      \"$ref\": \"#/paths/~1v1~1playlist~1current/get/responses/200/content/application~1json/schema\"\n                    },\n                    \"slides\": {\n                      \"type\": \"array\",\n                      \"description\": \"The list of theme slides in this theme.\",\n                      \"items\": {\n                        \"$ref\": \"#/paths/~1v1~1theme~1%7Bid%7D~1slides~1%7Btheme_slide%7D/put/requestBody/content/application~1json/schema\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/theme/{id}/slides/{theme_slide}\": {\n      \"parameters\": [\n        {\n          \"$ref\": \"#/paths/~1v1~1macro~1%7Bid%7D/parameters/0\"\n        },\n        {\n          \"in\": \"path\",\n          \"required\": \"true;\",\n          \"name\": \"theme_slide\",\n          \"description\": \"The ID of the required theme slide, either name, index or UUID.\",\n          \"schema\": {\n            \"type\": \"string\"\n          },\n          \"examples\": {\n            \"by_name\": {\n              \"summary\": \"Match theme slide by name\",\n              \"value\": \"Item Name\"\n            },\n            \"by_index\": {\n              \"summary\": \"Match theme slide by index\",\n              \"value\": \"3\"\n            },\n            \"by_uuid\": {\n              \"summary\": \"Match theme slide by UUID\",\n              \"value\": \"3C39C433-5C18-4F51-B357-55BB870227C4\"\n            }\n          }\n        }\n      ],\n      \"get\": {\n        \"operationId\": \"themeSlideGet\",\n        \"tags\": [\n          \"Theme\"\n        ],\n        \"summary\": \"Requests the details of the specified theme slide within the specified theme.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/paths/~1v1~1theme~1%7Bid%7D~1slides~1%7Btheme_slide%7D/put/requestBody/content/application~1json/schema\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      },\n      \"put\": {\n        \"operationId\": \"themeSlideSet\",\n        \"tags\": [\n          \"Theme\"\n        ],\n        \"summary\": \"Sets the details of the specified theme slide within the specified theme.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"id\"\n                ],\n                \"properties\": {\n                  \"id\": {\n                    \"$ref\": \"#/paths/~1v1~1playlist~1current/get/responses/200/content/application~1json/schema\"\n                  },\n                  \"size\": {\n                    \"type\": \"object\",\n                    \"required\": [\n                      \"width\",\n                      \"height\"\n                    ],\n                    \"properties\": {\n                      \"width\": {\n                        \"type\": \"integer\",\n                        \"description\": \"The width of the slide, in pixels\",\n                        \"example\": 1920\n                      },\n                      \"height\": {\n                        \"type\": \"integer\",\n                        \"description\": \"The height of the slide, in pixels\",\n                        \"example\": 1080\n                      }\n                    }\n                  },\n                  \"background\": {\n                    \"$ref\": \"#/paths/~1v1~1macro~1%7Bid%7D/put/requestBody/content/application~1json/schema/properties/color\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"204\": {\n            \"$ref\": \"#/paths/~1v1~1look~1current/put/responses/204\"\n          },\n          \"400\": {\n            \"$ref\": \"#/paths/~1v1~1looks/post/responses/400\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/theme/{id}/slides/{theme_slide}/thumbnail\": {\n      \"get\": {\n        \"operationId\": \"themeSlideThumbnailGet\",\n        \"tags\": [\n          \"Theme\"\n        ],\n        \"summary\": \"Requests a thumbnail image of the specified theme slide at the given quality value.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1macro~1%7Bid%7D/parameters/0\"\n          },\n          {\n            \"$ref\": \"#/paths/~1v1~1theme~1%7Bid%7D~1slides~1%7Btheme_slide%7D/parameters/1\"\n          },\n          {\n            \"$ref\": \"#/paths/~1v1~1mask~1%7Bid%7D~1thumbnail/get/parameters/1\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/paths/~1v1~1mask~1%7Bid%7D~1thumbnail/get/responses/200\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/timers\": {\n      \"get\": {\n        \"operationId\": \"timerGetAll\",\n        \"tags\": [\n          \"Timer\"\n        ],\n        \"summary\": \"Requests the details for all configured timers.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1props/get/parameters/0\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/paths/~1v1~1timer~1%7Bid%7D/put/requestBody/content/application~1json/schema\"\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      },\n      \"post\": {\n        \"operationId\": \"timerCreate\",\n        \"tags\": [\n          \"Timer\"\n        ],\n        \"summary\": \"Creates a new timer with the specified details.\",\n        \"description\": \"The newly created timer's UUID and index are returned in the response body.\\n\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"oneOf\": [\n                  {\n                    \"type\": \"object\",\n                    \"required\": [\n                      \"id\",\n                      \"allows_overrun\"\n                    ],\n                    \"properties\": {\n                      \"name\": {\n                        \"type\": \"string\",\n                        \"description\": \"The user-defined name of the timer\",\n                        \"example\": \"Countdown Timer\"\n                      },\n                      \"allows_overrun\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"Whether the timer is allowed to overrun.\"\n                      },\n                      \"countdown\": {\n                        \"type\": \"object\",\n                        \"required\": [\n                          \"duration\"\n                        ],\n                        \"properties\": {\n                          \"duration\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Time in seconds.\"\n                          }\n                        }\n                      }\n                    }\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"required\": [\n                      \"id\",\n                      \"allows_overrun\"\n                    ],\n                    \"properties\": {\n                      \"name\": {\n                        \"type\": \"string\",\n                        \"description\": \"The user-defined name of the timer\",\n                        \"example\": \"Countdown Timer\"\n                      },\n                      \"allows_overrun\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"Whether the timer is allowed to overrun.\"\n                      },\n                      \"count_down_to_time\": {\n                        \"required\": [\n                          \"time_of_day\",\n                          \"period\"\n                        ],\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"time_of_day\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Time in seconds.\"\n                          },\n                          \"period\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"am\",\n                              \"pm\",\n                              \"24_hour\"\n                            ]\n                          }\n                        }\n                      }\n                    }\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"required\": [\n                      \"id\",\n                      \"allows_overrun\"\n                    ],\n                    \"properties\": {\n                      \"name\": {\n                        \"type\": \"string\",\n                        \"description\": \"The user-defined name of the timer\",\n                        \"example\": \"Countdown Timer\"\n                      },\n                      \"allows_overrun\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"Whether the timer is allowed to overrun.\"\n                      },\n                      \"elapsed\": {\n                        \"required\": [\n                          \"start_time\"\n                        ],\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"start_time\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Time in seconds.\"\n                          },\n                          \"end_time\": {\n                            \"type\": \"integer\",\n                            \"nullable\": true,\n                            \"description\": \"Time in seconds. Omit to specify unlimited end time.\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/paths/~1v1~1timer~1%7Bid%7D/put/requestBody/content/application~1json/schema\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/paths/~1v1~1looks/post/responses/400\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/timers/current\": {\n      \"get\": {\n        \"operationId\": \"timerGetCurrentTimes\",\n        \"tags\": [\n          \"Timer\"\n        ],\n        \"summary\": \"Requests the current time for all configured timers.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1props/get/parameters/0\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"id\": {\n                        \"$ref\": \"#/paths/~1v1~1playlist~1current/get/responses/200/content/application~1json/schema\"\n                      },\n                      \"time\": {\n                        \"type\": \"string\",\n                        \"description\": \"The current time for the timer\",\n                        \"example\": \"00:00:01.00\"\n                      },\n                      \"is_active\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"If the timer is currently running\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/timers/{operation}\": {\n      \"get\": {\n        \"operationId\": \"timerOperationAll\",\n        \"tags\": [\n          \"Timer\"\n        ],\n        \"summary\": \"Performs the requested operation for all configured timers (start, stop, reset).\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"required\": true,\n            \"name\": \"operation\",\n            \"description\": \"The operation to perform on the timer\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"start\",\n                \"stop\",\n                \"reset\"\n              ]\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/paths/~1v1~1look~1current/put/responses/204\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/timer/{id}\": {\n      \"get\": {\n        \"operationId\": \"timerGet\",\n        \"tags\": [\n          \"Timer\"\n        ],\n        \"summary\": \"Requests the details of the specified timer.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1macro~1%7Bid%7D/parameters/0\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/paths/~1v1~1timer~1%7Bid%7D/put/requestBody/content/application~1json/schema\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      },\n      \"put\": {\n        \"operationId\": \"timerSet\",\n        \"tags\": [\n          \"Timer\"\n        ],\n        \"summary\": \"Sets the details of the specified timer.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1macro~1%7Bid%7D/parameters/0\"\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"oneOf\": [\n                  {\n                    \"type\": \"object\",\n                    \"required\": [\n                      \"id\",\n                      \"allows_overrun\"\n                    ],\n                    \"properties\": {\n                      \"id\": {\n                        \"$ref\": \"#/paths/~1v1~1playlist~1current/get/responses/200/content/application~1json/schema\"\n                      },\n                      \"allows_overrun\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"Whether the timer is allowed to overrun.\"\n                      },\n                      \"countdown\": {\n                        \"type\": \"object\",\n                        \"required\": [\n                          \"duration\"\n                        ],\n                        \"properties\": {\n                          \"duration\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Time in seconds.\"\n                          }\n                        }\n                      }\n                    }\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"required\": [\n                      \"id\",\n                      \"allows_overrun\"\n                    ],\n                    \"properties\": {\n                      \"id\": {\n                        \"$ref\": \"#/paths/~1v1~1playlist~1current/get/responses/200/content/application~1json/schema\"\n                      },\n                      \"allows_overrun\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"Whether the timer is allowed to overrun.\"\n                      },\n                      \"count_down_to_time\": {\n                        \"required\": [\n                          \"time_of_day\",\n                          \"period\"\n                        ],\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"time_of_day\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Time in seconds.\"\n                          },\n                          \"period\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"am\",\n                              \"pm\",\n                              \"24_hour\"\n                            ]\n                          }\n                        }\n                      }\n                    }\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"required\": [\n                      \"id\",\n                      \"allows_overrun\"\n                    ],\n                    \"properties\": {\n                      \"id\": {\n                        \"$ref\": \"#/paths/~1v1~1playlist~1current/get/responses/200/content/application~1json/schema\"\n                      },\n                      \"allows_overrun\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"Whether the timer is allowed to overrun.\"\n                      },\n                      \"elapsed\": {\n                        \"required\": [\n                          \"start_time\"\n                        ],\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"start_time\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Time in seconds.\"\n                          },\n                          \"end_time\": {\n                            \"type\": \"integer\",\n                            \"nullable\": true,\n                            \"description\": \"Time in seconds. Omit to specify unlimited end time.\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                ]\n              },\n              \"examples\": {\n                \"set_configuration_countdown\": {\n                  \"summary\": \"Countdown configuration\",\n                  \"value\": {\n                    \"id\": {\n                      \"uuid\": \"942C3FC3-C4B2-44F7-A55D-4CC913BB8A5D\",\n                      \"name\": \"Timer 1\",\n                      \"index\": 0\n                    },\n                    \"allows_overrun\": true,\n                    \"countdown\": {\n                      \"duration\": 300\n                    }\n                  }\n                },\n                \"set_configuration_countdown_to_time\": {\n                  \"summary\": \"Countdown to time configuration\",\n                  \"value\": {\n                    \"id\": {\n                      \"uuid\": \"942C3FC3-C4B2-44F7-A55D-4CC913BB8A5D\",\n                      \"name\": \"Timer 1\",\n                      \"index\": 0\n                    },\n                    \"allows_overrun\": true,\n                    \"count_down_to_time\": {\n                      \"time_of_day\": 3600,\n                      \"period\": \"pm\"\n                    }\n                  }\n                },\n                \"set_configuration_elapsed\": {\n                  \"summary\": \"Elapsed configuration\",\n                  \"value\": {\n                    \"id\": {\n                      \"uuid\": \"942C3FC3-C4B2-44F7-A55D-4CC913BB8A5D\",\n                      \"name\": \"Timer 1\",\n                      \"index\": 0\n                    },\n                    \"allows_overrun\": true,\n                    \"elapsed\": {\n                      \"start_time\": 0,\n                      \"end_time\": 120\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/paths/~1v1~1timer~1%7Bid%7D/put/requestBody/content/application~1json/schema\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/paths/~1v1~1looks/post/responses/400\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      },\n      \"delete\": {\n        \"operationId\": \"timerDelete\",\n        \"tags\": [\n          \"Timer\"\n        ],\n        \"summary\": \"Deletes the specified timer.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1macro~1%7Bid%7D/parameters/0\"\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"$ref\": \"#/paths/~1v1~1look~1current/put/responses/204\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/timer/{id}/{operation}\": {\n      \"get\": {\n        \"operationId\": \"timerOperation\",\n        \"tags\": [\n          \"Timer\"\n        ],\n        \"summary\": \"Performs the requested operation on the specified timer (start, stop, reset).\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1macro~1%7Bid%7D/parameters/0\"\n          },\n          {\n            \"$ref\": \"#/paths/~1v1~1timers~1%7Boperation%7D/get/parameters/0\"\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"$ref\": \"#/paths/~1v1~1look~1current/put/responses/204\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/timer/system_time\": {\n      \"get\": {\n        \"operationId\": \"timerGetSystemTime\",\n        \"tags\": [\n          \"Timer\"\n        ],\n        \"summary\": \"Requests the current system time.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1props/get/parameters/0\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"description\": \"The current system time defined as seconds since midnight, 1st January 1970.\",\n                  \"example\": 1628029541\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/timer/video_countdown\": {\n      \"get\": {\n        \"operationId\": \"timerGetVideoCountdown\",\n        \"tags\": [\n          \"Timer\"\n        ],\n        \"summary\": \"Requests the current value of the video countdown timer.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1props/get/parameters/0\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"example\": \"00:00:01.00\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/transport/{layer}/play\": {\n      \"get\": {\n        \"operationId\": \"transportPlay\",\n        \"tags\": [\n          \"Transport\"\n        ],\n        \"summary\": \"Plays the content on the specified layer (presentation, announcement, audio).\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"required\": true,\n            \"name\": \"layer\",\n            \"description\": \"The layer to perform the transport operation on\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"presentation\",\n                \"announcement\",\n                \"audio\"\n              ]\n            }\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"$ref\": \"#/paths/~1v1~1look~1current/put/responses/204\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/transport/{layer}/pause\": {\n      \"get\": {\n        \"operationId\": \"transportPause\",\n        \"tags\": [\n          \"Transport\"\n        ],\n        \"summary\": \"Pauses the content on the specified layer (presentation, announcement, audio).\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1transport~1%7Blayer%7D~1play/get/parameters/0\"\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"$ref\": \"#/paths/~1v1~1look~1current/put/responses/204\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/transport/{layer}/skip_backward/{time}\": {\n      \"get\": {\n        \"operationId\": \"transportSkipBackward\",\n        \"tags\": [\n          \"Transport\"\n        ],\n        \"summary\": \"Moves backward in the content on the specified layer by the specified number of seconds (presentation, announcement, audio).\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1transport~1%7Blayer%7D~1play/get/parameters/0\"\n          },\n          {\n            \"$ref\": \"#/paths/~1v1~1transport~1%7Blayer%7D~1skip_forward~1%7Btime%7D/get/parameters/1\"\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"$ref\": \"#/paths/~1v1~1look~1current/put/responses/204\"\n          },\n          \"400\": {\n            \"$ref\": \"#/paths/~1v1~1looks/post/responses/400\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/transport/{layer}/skip_forward/{time}\": {\n      \"get\": {\n        \"operationId\": \"transportSkipForward\",\n        \"tags\": [\n          \"Transport\"\n        ],\n        \"summary\": \"Moves forward in the content on the specified layer by the specified number of seconds (presentation, announcement, audio).\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1transport~1%7Blayer%7D~1play/get/parameters/0\"\n          },\n          {\n            \"in\": \"path\",\n            \"required\": true,\n            \"name\": \"time\",\n            \"description\": \"The time component of the request, in seconds\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"example\": 15\n            }\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"$ref\": \"#/paths/~1v1~1look~1current/put/responses/204\"\n          },\n          \"400\": {\n            \"$ref\": \"#/paths/~1v1~1looks/post/responses/400\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/transport/{layer}/go_to_end\": {\n      \"get\": {\n        \"operationId\": \"transportGoToEnd\",\n        \"tags\": [\n          \"Transport\"\n        ],\n        \"summary\": \"Moves to the end on a certain layer\",\n        \"description\": \"Moves to the end in the content on the specified layer or moves the specified number of seconds away from the end in the content on the specified layer (presentation, announcement, audio).\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1transport~1%7Blayer%7D~1play/get/parameters/0\"\n          },\n          {\n            \"in\": \"query\",\n            \"required\": false,\n            \"name\": \"time\",\n            \"description\": \"The time component of the request, in seconds\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"example\": 15\n            }\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"$ref\": \"#/paths/~1v1~1look~1current/put/responses/204\"\n          },\n          \"400\": {\n            \"$ref\": \"#/paths/~1v1~1looks/post/responses/400\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/transport/{layer}/time\": {\n      \"get\": {\n        \"operationId\": \"transportTimeGet\",\n        \"tags\": [\n          \"Transport\"\n        ],\n        \"summary\": \"Requests the current transport time for the specified layer (presentation, announcement, audio).\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1transport~1%7Blayer%7D~1play/get/parameters/0\"\n          },\n          {\n            \"$ref\": \"#/paths/~1v1~1props/get/parameters/0\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"number\",\n                  \"description\": \"The current transport time in seconds.\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      },\n      \"put\": {\n        \"operationId\": \"transportTimeSet\",\n        \"tags\": [\n          \"Transport\"\n        ],\n        \"summary\": \"Moves to the specified time for the specified layer (presentation, announcement, audio).\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1transport~1%7Blayer%7D~1play/get/parameters/0\"\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"integer\",\n                \"description\": \"The time in seconds to move to.\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"204\": {\n            \"$ref\": \"#/paths/~1v1~1look~1current/put/responses/204\"\n          },\n          \"400\": {\n            \"$ref\": \"#/paths/~1v1~1looks/post/responses/400\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/transport/{layer}/auto_advance\": {\n      \"parameters\": [\n        {\n          \"in\": \"path\",\n          \"required\": true,\n          \"name\": \"layer\",\n          \"description\": \"The layer to perform the transport operation on\",\n          \"schema\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"presentation\",\n              \"announcement\"\n            ]\n          }\n        }\n      ],\n      \"get\": {\n        \"operationId\": \"transportAutoAdvanceGet\",\n        \"tags\": [\n          \"Transport\"\n        ],\n        \"summary\": \"Requests the auto-advance status for the specified layer (presentation, announcement).\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\",\n                  \"description\": \"`true` if auto-advance is enabled, `false` otherwise.\\n\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      },\n      \"delete\": {\n        \"operationId\": \"transportAutoAdvanceCancel\",\n        \"tags\": [\n          \"Transport\"\n        ],\n        \"summary\": \"Cancels the auto-advance for the specified layer (presentation, announcement).\",\n        \"responses\": {\n          \"204\": {\n            \"$ref\": \"#/paths/~1v1~1look~1current/put/responses/204\"\n          },\n          \"400\": {\n            \"$ref\": \"#/paths/~1v1~1looks/post/responses/400\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/transport/{layer}/current\": {\n      \"get\": {\n        \"operationId\": \"transportCurrentMediaGet\",\n        \"tags\": [\n          \"Transport\"\n        ],\n        \"summary\": \"Requests the details of the currently playing content for the specified layer (presentation, announcement, audio).\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1transport~1%7Blayer%7D~1play/get/parameters/0\"\n          },\n          {\n            \"$ref\": \"#/paths/~1v1~1props/get/parameters/0\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"is_playing\",\n                    \"uuid\",\n                    \"name\",\n                    \"artist\",\n                    \"audio_only\",\n                    \"length\"\n                  ],\n                  \"properties\": {\n                    \"is_playing\": {\n                      \"type\": \"boolean\",\n                      \"description\": \"`true` if media is currently playing, `false` otherwise.\\n\"\n                    },\n                    \"uuid\": {\n                      \"type\": \"string\",\n                      \"description\": \"The UUID of the media item\",\n                      \"example\": \"942C3FC3-C4B2-44F7-A55D-4CC913BB8A5D\"\n                    },\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"description\": \"The media name.\",\n                      \"example\": \"Amazing Grace\"\n                    },\n                    \"artist\": {\n                      \"type\": \"string\",\n                      \"nullable\": true,\n                      \"description\": \"The media artist.\",\n                      \"example\": \"John Newton\"\n                    },\n                    \"audio_only\": {\n                      \"type\": \"boolean\",\n                      \"description\": \"`true` if the item is audio-only, `false` otherwise\\n\"\n                    },\n                    \"duration\": {\n                      \"type\": \"number\",\n                      \"description\": \"The length of the media in seconds\",\n                      \"example\": 112.5\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/trigger/cue/{index}\": {\n      \"get\": {\n        \"operationId\": \"triggerCue\",\n        \"tags\": [\n          \"Trigger\"\n        ],\n        \"summary\": \"Triggers the specified cue in the currently active playlist item.\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"required\": true,\n            \"name\": \"index\",\n            \"description\": \"The index of the cue to use. Respects the selected arrangement of cues.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            },\n            \"example\": 0\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"$ref\": \"#/paths/~1v1~1look~1current/put/responses/204\"\n          },\n          \"400\": {\n            \"$ref\": \"#/paths/~1v1~1looks/post/responses/400\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/trigger/playlist/{playlist_id}/{item_id}/{cue_index}\": {\n      \"get\": {\n        \"operationId\": \"triggerPlaylist\",\n        \"tags\": [\n          \"Trigger\"\n        ],\n        \"summary\": \"Triggers the specified cue in the specified item in the specified playlist.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1playlist~1%7Bplaylist_id%7D/parameters/0\"\n          },\n          {\n            \"$ref\": \"#/paths/~1v1~1trigger~1media~1%7Bplaylist_id%7D~1%7Bitem_id%7D/get/parameters/1\"\n          },\n          {\n            \"in\": \"path\",\n            \"required\": true,\n            \"name\": \"cue_index\",\n            \"description\": \"The index of the cue (slide) to use. Respects the selected arrangement of cues. For media playlist items pass 0 here.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            },\n            \"example\": 0\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"$ref\": \"#/paths/~1v1~1look~1current/put/responses/204\"\n          },\n          \"400\": {\n            \"$ref\": \"#/paths/~1v1~1looks/post/responses/400\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/trigger/media/{playlist_id}/{item_id}\": {\n      \"get\": {\n        \"operationId\": \"triggerMedia\",\n        \"tags\": [\n          \"Trigger\"\n        ],\n        \"summary\": \"Triggers the specified media item in the specified media playlist.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1playlist~1%7Bplaylist_id%7D/parameters/0\"\n          },\n          {\n            \"in\": \"path\",\n            \"required\": true,\n            \"name\": \"item_id\",\n            \"description\": \"The ID of the item within a playlist, either UUID, name, or index, in order of interpretation and search priority.\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"examples\": {\n              \"by_uuid\": {\n                \"summary\": \"Match item by UUID\",\n                \"value\": \"3C39C433-5C18-4F51-B357-55BB870227C4\"\n              },\n              \"by_name\": {\n                \"summary\": \"Match item by name\",\n                \"value\": \"Presentation Name\"\n              },\n              \"by_index\": {\n                \"summary\": \"Match item by index\",\n                \"value\": 3\n              }\n            }\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"$ref\": \"#/paths/~1v1~1look~1current/put/responses/204\"\n          },\n          \"400\": {\n            \"$ref\": \"#/paths/~1v1~1looks/post/responses/400\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/trigger/media/next\": {\n      \"get\": {\n        \"operationId\": \"triggerMediaNext\",\n        \"tags\": [\n          \"Trigger\"\n        ],\n        \"summary\": \"Triggers the next item in the currently active media playlist.\",\n        \"responses\": {\n          \"204\": {\n            \"$ref\": \"#/paths/~1v1~1look~1current/put/responses/204\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/trigger/media/previous\": {\n      \"get\": {\n        \"operationId\": \"triggerMediaPrevious\",\n        \"tags\": [\n          \"Trigger\"\n        ],\n        \"summary\": \"Triggers the previous item in the currently active media playlist.\",\n        \"responses\": {\n          \"204\": {\n            \"$ref\": \"#/paths/~1v1~1look~1current/put/responses/204\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/trigger/audio/{playlist_id}/{item_id}\": {\n      \"get\": {\n        \"operationId\": \"triggerAudio\",\n        \"tags\": [\n          \"Trigger\"\n        ],\n        \"summary\": \"Triggers the specified audio item in the specified audio playlist.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1playlist~1%7Bplaylist_id%7D/parameters/0\"\n          },\n          {\n            \"$ref\": \"#/paths/~1v1~1trigger~1media~1%7Bplaylist_id%7D~1%7Bitem_id%7D/get/parameters/1\"\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"$ref\": \"#/paths/~1v1~1look~1current/put/responses/204\"\n          },\n          \"400\": {\n            \"$ref\": \"#/paths/~1v1~1looks/post/responses/400\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/trigger/audio/next\": {\n      \"get\": {\n        \"operationId\": \"triggerAudioNext\",\n        \"tags\": [\n          \"Trigger\"\n        ],\n        \"summary\": \"Triggers the next item in the currently active audio playlist.\",\n        \"responses\": {\n          \"204\": {\n            \"$ref\": \"#/paths/~1v1~1look~1current/put/responses/204\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/trigger/audio/previous\": {\n      \"get\": {\n        \"operationId\": \"triggerAudioPrevious\",\n        \"tags\": [\n          \"Trigger\"\n        ],\n        \"summary\": \"Triggers the previous item in the currently active audio playlist.\",\n        \"responses\": {\n          \"204\": {\n            \"$ref\": \"#/paths/~1v1~1look~1current/put/responses/204\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/trigger/video_input/{id}\": {\n      \"get\": {\n        \"operationId\": \"triggerVideoInput\",\n        \"tags\": [\n          \"Trigger\"\n        ],\n        \"summary\": \"Triggers the specified video input in the video input playlist.\",\n        \"description\": \"Video input sources must be added to the Video Input playlist in the Media Bin in order to be triggered with this endpoint.\\n\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/paths/~1v1~1macro~1%7Bid%7D/parameters/0\"\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"$ref\": \"#/paths/~1v1~1look~1current/put/responses/204\"\n          },\n          \"400\": {\n            \"$ref\": \"#/paths/~1v1~1looks/post/responses/400\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/trigger/library/{library_id}/{presentation_id}/{index}\": {\n      \"get\": {\n        \"operationId\": \"triggerLibrary\",\n        \"tags\": [\n          \"Trigger\"\n        ],\n        \"summary\": \"Triggers the specified slide in the specified presentation in the specified library.\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"required\": true,\n            \"name\": \"library_id\",\n            \"description\": \"The ID of the library, either UUID, name, or index, in order of interpretation and search priority.\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"examples\": {\n              \"by_uuid\": {\n                \"summary\": \"Match library by UUID\",\n                \"value\": \"3C39C433-5C18-4F51-B357-55BB870227C4\"\n              },\n              \"by_name\": {\n                \"summary\": \"Match library by name\",\n                \"value\": \"Library Name\"\n              },\n              \"by_index\": {\n                \"summary\": \"Match library by index\",\n                \"value\": \"3\"\n              }\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"required\": true,\n            \"name\": \"presentation_id\",\n            \"description\": \"The ID of the presentation, either UUID, name, or index, in order of interpretation and search priority.\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"examples\": {\n              \"by_uuid\": {\n                \"summary\": \"Match presentation by UUID\",\n                \"value\": \"3C39C433-5C18-4F51-B357-55BB870227C4\"\n              },\n              \"by_name\": {\n                \"summary\": \"Match presentation by name\",\n                \"value\": \"Presentation Name\"\n              },\n              \"by_index\": {\n                \"summary\": \"Match presentation by index\",\n                \"value\": \"3\"\n              }\n            }\n          },\n          {\n            \"$ref\": \"#/paths/~1v1~1trigger~1cue~1%7Bindex%7D/get/parameters/0\"\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"$ref\": \"#/paths/~1v1~1look~1current/put/responses/204\"\n          },\n          \"400\": {\n            \"$ref\": \"#/paths/~1v1~1looks/post/responses/400\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/trigger/next\": {\n      \"get\": {\n        \"operationId\": \"triggerNext\",\n        \"tags\": [\n          \"Trigger\"\n        ],\n        \"summary\": \"Triggers the next cue or item in the currently active playlist or library.\",\n        \"responses\": {\n          \"204\": {\n            \"$ref\": \"#/paths/~1v1~1look~1current/put/responses/204\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/trigger/previous\": {\n      \"get\": {\n        \"operationId\": \"triggerPrevious\",\n        \"tags\": [\n          \"Trigger\"\n        ],\n        \"summary\": \"Triggers the previous cue or item in the currently active playlist or library.\",\n        \"responses\": {\n          \"204\": {\n            \"$ref\": \"#/paths/~1v1~1look~1current/put/responses/204\"\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    },\n    \"/v1/video_inputs\": {\n      \"get\": {\n        \"operationId\": \"videoInputsGet\",\n        \"tags\": [\n          \"Video Input\"\n        ],\n        \"summary\": \"Requests a list of the configured and triggerable video inputs.\",\n        \"description\": \"Triggerable video inputs come from the Video Inputs playlist in the Media Bin. Once the video input is added there it can be triggered with GET /v1/trigger/video_input/{id}\\n\",\n        \"responses\": {\n          \"200\": {\n            \"summary\": \"The request was processed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/paths/~1v1~1playlist~1current/get/responses/200/content/application~1json/schema\"\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/paths/~1version/get/responses/404\"\n          }\n        }\n      }\n    }\n  }\n}\n"
		}
	},
	"Error": "unmarshal: json: line 3:10: callback: json: cannot unmarshal object into Go struct field Schema.type of type string"
}