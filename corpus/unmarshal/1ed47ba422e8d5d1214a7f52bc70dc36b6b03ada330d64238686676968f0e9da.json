{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Optum/mockiato"
		},
		"file": {
			"name": "api-docs.yml",
			"size": 0,
			"path": "api-docs.yml",
			"byteSize": 29687,
			"content": "openapi: 3.0.0\r\ninfo:\r\n  title: Mockiato\r\n  description: ''\r\n  contact: {}\r\n  version: '1.0.0'\r\nservers:\r\n- url: '{mockiatoUrl}/api'\r\n  variables:\r\n    mockiatoUrl:\r\n      default: http://mockiato.optum.com\r\n\r\npaths:\r\n  /login:\r\n    post:\r\n      tags:\r\n      - token\r\n      description: returns an access token for the user\r\n      parameters: []\r\n      requestBody:\r\n        description: your MS credentials\r\n        content:\r\n          application/json:\r\n            schema:\r\n              description: your MS credentials\r\n              $ref: '#/components/requestBodies/AuthReq'\r\n        required: true\r\n      responses:\r\n        200:\r\n          description: successful response\r\n          content:\r\n            application/json:\r\n              schema:\r\n                description: successful response\r\n                $ref: '#/components/responses/AuthRes'\r\n        401:\r\n          description: authentication failure\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/responses/AuthRes'\r\n\r\n  /services:\r\n    get:\r\n      tags:\r\n      - services\r\n      description: retrieves the virtual services\r\n      parameters:\r\n      - name: sut\r\n        in: query\r\n        description: name of system under test\r\n        required: false\r\n        style: simple\r\n        explode: false\r\n        schema:\r\n          type: string\r\n      - name: user\r\n        in: query\r\n        description: name of user\r\n        required: false\r\n        style: simple\r\n        explode: false\r\n        schema:\r\n          type: string\r\n      responses:\r\n        200:\r\n          description: successful response\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: array\r\n                items:\r\n                  $ref: '#/components/schemas/Service'\r\n                description: successful response\r\n                \r\n    post:\r\n      tags:\r\n      - services\r\n      description: creates a new virtual service\r\n      security:\r\n        JWT: []\r\n      parameters:\r\n      - name: x-access-token\r\n        in: header\r\n        required: true\r\n        description: your access token\r\n        style: simple\r\n        explode: false\r\n        schema:\r\n          type: string\r\n      requestBody:\r\n        description: the service to create\r\n        content:\r\n          application/json:\r\n            schema:\r\n              description: the service to create\r\n              $ref: '#/components/schemas/Service'\r\n        required: false\r\n      responses:\r\n        200:\r\n          description: successful response\r\n          content:\r\n            application/json:\r\n              schema:\r\n                description: successful response\r\n                $ref: '#/components/schemas/Service'\r\n\r\n  /services/search:\r\n    get:\r\n      tags:\r\n      - services\r\n      description: retrieves the virtual services\r\n      parameters:\r\n      - name: requestContains\r\n        in: query\r\n        description: Filters only services that have rr pairs that contain this string in their request\r\n        required: false\r\n        style: simple\r\n        explode: false\r\n        schema:\r\n          type: string\r\n      - name: responseContains\r\n        in: query\r\n        description: Filters only services that have rr pairs that contain this string in their response\r\n        required: false\r\n        style: simple\r\n        explode: false\r\n        schema:\r\n          type: string\r\n      - name: name\r\n        in: query\r\n        description: Filters on name of service\r\n        required: false\r\n        style: simple\r\n        explode: false\r\n        schema:\r\n          type: string\r\n      - name: sortBy\r\n        in: query\r\n        description: created sorts on created datetime, updated sorts on updated datetime\r\n        required: false\r\n        style: simple\r\n        explode: false\r\n        schema:\r\n          type: string\r\n          example: created\r\n      - name: asc\r\n        in: query\r\n        description: if set (any value or none), sort ascending instead of descending\r\n        required: false\r\n        style: simple\r\n        explode: false\r\n        schema:\r\n          type: string\r\n      - name: authorizedOnly\r\n        in: query\r\n        description: When passed a username, restricts results to only services that user is authorized to edit. \r\n        required: false\r\n        style: simple\r\n        explode: false\r\n        schema:\r\n          type: string\r\n      responses:\r\n        200:\r\n          description: successful response\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: array\r\n                items:\r\n                  $ref: '#/components/schemas/Service'\r\n                description: successful response\r\n\r\n  /services/{id}:\r\n    get:\r\n      tags:\r\n      - services\r\n      description: retrieves a virtual service\r\n      parameters:\r\n      - name: id\r\n        in: path\r\n        description: ID of service to fetch\r\n        required: true\r\n        style: simple\r\n        explode: false\r\n        schema:\r\n          type: integer\r\n          format: int64\r\n      responses:\r\n        200:\r\n          description: successful response\r\n          content:\r\n            application/json:\r\n              schema:\r\n                description: successful response\r\n                $ref: '#/components/schemas/Service'\r\n    put:\r\n      tags:\r\n      - services\r\n      description: updates a virtual service\r\n      security:\r\n        JWT: []\r\n      parameters:\r\n      - name: id\r\n        in: path\r\n        description: ID of service to update\r\n        required: true\r\n        style: simple\r\n        explode: false\r\n        schema:\r\n          type: integer\r\n          format: int64\r\n      - name: x-access-token\r\n        in: header\r\n        required: true\r\n        description: your access token\r\n        style: simple\r\n        explode: false\r\n        schema:\r\n          type: string\r\n      requestBody:\r\n        description: the service to update\r\n        content:\r\n          application/json:\r\n            schema:\r\n              description: the service to update\r\n              $ref: '#/components/schemas/Service'\r\n        required: false\r\n      responses:\r\n        200:\r\n          description: successful response\r\n          content:\r\n            application/json:\r\n              schema:\r\n                description: successful response\r\n                $ref: '#/components/schemas/Service'\r\n    delete:\r\n      tags:\r\n      - services\r\n      description: removes a virtual service\r\n      security:\r\n        JWT: []\r\n      parameters:\r\n      - name: id\r\n        in: path\r\n        description: ID of service to remove\r\n        required: true\r\n        style: simple\r\n        explode: false\r\n        schema:\r\n          type: integer\r\n          format: int64\r\n      - name: x-access-token\r\n        in: header\r\n        required: true\r\n        description: your access token\r\n        style: simple\r\n        explode: false\r\n        schema:\r\n          type: string\r\n      responses:\r\n        200:\r\n          description: successful response\r\n          content:\r\n            application/json:\r\n              schema:\r\n                description: successful response\r\n\r\n  /services/{id}/rrpairs:\r\n    get:\r\n      tags:\r\n      - services\r\n      responses:\r\n        200:\r\n          description: successful response\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: array\r\n                items:\r\n                  $ref: '#/components/schemas/RRPair'\r\n                description: successful response\r\n    patch:\r\n      tags:\r\n      - services\r\n      requestBody:\r\n        description: An RR pair to add to this service\r\n        content:\r\n          application/json:\r\n            schema:\r\n              description: the service to update\r\n              $ref: '#/components/schemas/RRPair'\r\n      responses:\r\n        200:\r\n          description: successful response\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: array\r\n                items:\r\n                  $ref: '#/components/schemas/RRPair'\r\n                description: successful response\r\n  /services/{id}/recorded:\r\n    get:\r\n      description: Gets all recorded pairs from Live Invocation recording for this service\r\n      tags:\r\n      - services\r\n      responses:\r\n        200:\r\n          description: successful response\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: array\r\n                items:\r\n                  $ref: '#/components/schemas/RRPair'\r\n                description: successful response\r\n  /services/{id}/recorded/{rrPaidId}:\r\n    patch:\r\n      description: Merges a recorded RR pair into the service\r\n      tags:\r\n      - services\r\n      responses:\r\n        200:\r\n          description: successful response\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: array\r\n                items:\r\n                  $ref: '#/components/schemas/RRPair'\r\n                description: successful response\r\n    delete:\r\n      description: Deletes a recorded RR pair\r\n      tags:\r\n      - services\r\n      responses:\r\n        200:\r\n          description: successful response\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: array\r\n                items:\r\n                  $ref: '#/components/schemas/RRPair'\r\n                description: successful response\r\n\r\n  /services/fromSpec/upload:\r\n    post:\r\n      tags:\r\n      - services\r\n      security:\r\n        JWT: []\r\n      responses:\r\n        200:\r\n          description: successful response\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: string\r\n                description: the ID of the uploaded file\r\n\r\n  /services/fromSpec/publish:\r\n    post:\r\n      tags:\r\n      - services\r\n      description: creates a virtual service from OpenAPI or WSDL\r\n      security:\r\n        JWT: []\r\n      parameters:\r\n      - name: x-access-token\r\n        in: header\r\n        required: true\r\n        description: your access token\r\n        style: simple\r\n        explode: false\r\n        schema:\r\n          type: string\r\n      - name: name\r\n        in: query\r\n        description: name of service to create\r\n        required: true\r\n        style: simple\r\n        explode: false\r\n        schema:\r\n          type: string\r\n      - name: type\r\n        in: query\r\n        description: type of spec (e.g. openapi, wsdl)\r\n        required: true\r\n        style: simple\r\n        explode: false\r\n        schema:\r\n          type: string\r\n      - name: group\r\n        in: query\r\n        description: group to add the service to\r\n        required: true\r\n        style: simple\r\n        explode: false\r\n        schema:\r\n          type: string\r\n      - name: url\r\n        in: query\r\n        description: the url to the spec\r\n        required: true\r\n        style: simple\r\n        explode: false\r\n        schema:\r\n          type: string\r\n      - name: base\r\n        in: query\r\n        description: use this to overwrite the base path defined in the spec\r\n        required: false\r\n        style: simple\r\n        explode: false\r\n        schema:\r\n          type: string\r\n      responses:\r\n        200:\r\n          description: successful response\r\n          content:\r\n            application/json:\r\n              schema:\r\n                description: successful response\r\n                $ref: '#/components/schemas/Service'\r\n  \r\n  # TO DO\r\n  /services/fromPairs/upload:\r\n    post:\r\n      tags:\r\n      - services\r\n      security:\r\n        JWT: []\r\n      responses:\r\n        200:\r\n          description: successful response\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: string\r\n                description: the ID of the uploaded file\r\n\r\n  /services/fromPairs/publish:\r\n    post:\r\n      tags:\r\n      - services\r\n      security:\r\n        JWT: []\r\n      responses:\r\n        200:\r\n          description: successful response\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: array\r\n                items:\r\n                  $ref: '#/components/schemas/Service'\r\n                description: successful response\r\n\r\n  /services/{id}/toggle:\r\n    post:\r\n      tags:\r\n      - services\r\n      description: toggles a virtual service on / off\r\n      security:\r\n        JWT: []\r\n      parameters:\r\n      - name: id\r\n        in: path\r\n        description: ID of service to update\r\n        required: true\r\n        style: simple\r\n        explode: false\r\n        schema:\r\n          type: integer\r\n          format: int64\r\n      - name: x-access-token\r\n        in: header\r\n        required: true\r\n        description: your access token\r\n        style: simple\r\n        explode: false\r\n        schema:\r\n          type: string\r\n      responses:\r\n        200:\r\n          description: toggle response\r\n          content:\r\n            application/json:\r\n              schema:\r\n                description: toggle response\r\n                $ref: '#/components/responses/ToggleResponse'\r\n\r\n  /services/sut/{name}:\r\n    get:\r\n      tags:\r\n      - services\r\n      description: retrieves virtual services by system under test\r\n      parameters:\r\n      - name: name\r\n        in: path\r\n        description: name of system under test\r\n        required: true\r\n        style: simple\r\n        explode: false\r\n        schema:\r\n          type: string\r\n      responses:\r\n        200:\r\n          description: successful response\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: array\r\n                items:\r\n                  $ref: '#/components/schemas/Service'\r\n                description: successful response\r\n     \r\n  /services/user/{name}:\r\n    get:\r\n      tags:\r\n      - services\r\n      description: retrieves virtual services by owner\r\n      parameters:\r\n      - name: name\r\n        in: path\r\n        description: name of user / owner\r\n        required: true\r\n        style: simple\r\n        explode: false\r\n        schema:\r\n          type: string\r\n      responses:\r\n        200:\r\n          description: successful response\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: array\r\n                items:\r\n                  $ref: '#/components/schemas/Service'\r\n                description: successful response\r\n     \r\n\r\n  /services/archive:\r\n    get:\r\n      tags:\r\n      - archives\r\n      description: retrieves virtual services by owner\r\n      parameters:\r\n      - name: user\r\n        in: path\r\n        description: name of user / owner\r\n        required: false\r\n        style: simple\r\n        explode: false\r\n        schema:\r\n          type: string\r\n      - name: sut\r\n        in: path\r\n        description: name of system under test\r\n        required: false\r\n        style: simple\r\n        explode: false\r\n        schema:\r\n          type: string\r\n      responses:\r\n        200:\r\n          description: successful response\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: array\r\n                items:\r\n                  $ref: '#/components/schemas/Service'\r\n                description: successful response\r\n     \r\n  /services/archive/{id}:\r\n    delete:\r\n      tags:\r\n      - archives\r\n      description: retrieves a virtual service\r\n      security:\r\n        JWT: []\r\n      parameters:\r\n      - name: id\r\n        in: path\r\n        description: ID of service to fetch\r\n        required: true\r\n        style: simple\r\n        explode: false\r\n        schema:\r\n          type: integer\r\n          format: int64\r\n      responses:\r\n        200:\r\n          description: successful response\r\n          content:\r\n            application/json:\r\n              schema:\r\n                description: successful response\r\n                $ref: '#/components/schemas/Service'\r\n     \r\n  /services/archive/{id}/restore:\r\n    post:\r\n      tags:\r\n      - archives\r\n      security:\r\n        JWT: []\r\n      responses:\r\n        200:\r\n          description: successful response\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: array\r\n                items:\r\n                  $ref: '#/components/schemas/Service'\r\n                description: successful response\r\n\r\n  /services/archive/{id}:\r\n    get:\r\n      tags:\r\n      - archives\r\n      responses:\r\n        200:\r\n          description: successful response\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: array\r\n                items:\r\n                  $ref: '#/components/schemas/Service'\r\n                description: successful response\r\n\r\n  /services/sut/{name}/archive:\r\n    get:\r\n      tags:\r\n      - archives\r\n      description: retrieves archived services by system under test\r\n      parameters:\r\n      - name: name\r\n        in: path\r\n        description: name of system under test\r\n        required: true\r\n        style: simple\r\n        explode: false\r\n        schema:\r\n          type: string\r\n      responses:\r\n        200:\r\n          description: successful response\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: array\r\n                items:\r\n                  $ref: '#/components/schemas/Service'\r\n                description: successful response\r\n     \r\n  /services/user/{name}/archive:\r\n    get:\r\n      tags:\r\n      - archives\r\n      description: retrieves archived services by owner\r\n      parameters:\r\n      - name: name\r\n        in: path\r\n        description: name of user / owner\r\n        required: true\r\n        style: simple\r\n        explode: false\r\n        schema:\r\n          type: string\r\n      responses:\r\n        200:\r\n          description: successful response\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: array\r\n                items:\r\n                  $ref: '#/components/schemas/Service'\r\n                description: successful response\r\n\r\n  /recording:\r\n    get:\r\n      tags:\r\n      - recordings\r\n      responses:\r\n        200:\r\n          description: successful response\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: array\r\n                items:\r\n                  $ref: '#/components/schemas/Recording'\r\n                description: successful response\r\n    put:\r\n      tags:\r\n      - recordings\r\n      security:\r\n        JWT: []\r\n      requestBody:\r\n        content:\r\n            application/json:\r\n              schema:\r\n                type: array\r\n                items:\r\n                  $ref: '#/components/schemas/Recording'\r\n                description: the recording to create\r\n      responses:\r\n        200:\r\n          description: successful response\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: array\r\n                items:\r\n                  $ref: '#/components/schemas/Recording'\r\n                description: successful response\r\n\r\n  /recording/{id}:\r\n    get:\r\n      tags:\r\n      - recordings\r\n      responses:\r\n        200:\r\n          description: successful response\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: array\r\n                items:\r\n                  $ref: '#/components/schemas/Recording'\r\n                description: successful response\r\n    delete:\r\n      tags:\r\n      - recordings\r\n      security:\r\n        JWT: []\r\n      responses:\r\n        200:\r\n          description: successful response\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: array\r\n                items:\r\n                  $ref: '#/components/schemas/Recording'\r\n                description: successful response\r\n\r\n  /recording/{id}/{index}:\r\n    get:\r\n      tags:\r\n      - recordings\r\n      responses:\r\n        200:\r\n          description: successful response\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: array\r\n                items:\r\n                  $ref: '#/components/schemas/Recording'\r\n                description: successful response\r\n  /recording/{id}/stop:\r\n    patch:\r\n      description: Stops a recorder. A stopped recorder will not be deleted, but will not accept any more incoming requests. \r\n      parameters:\r\n      - name: id\r\n        in: path\r\n        description: id of Recording\r\n        required: true\r\n        style: simple\r\n        explode: false\r\n        schema:\r\n          type: string\r\n      tags:\r\n      - recordings\r\n      responses:\r\n        200:\r\n          description: successful response\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: array\r\n                items:\r\n                  $ref: '#/components/schemas/Recording'\r\n                description: successful response\r\n  /recording/{id}/start:\r\n   \r\n    patch:\r\n      parameters:\r\n      - name: id\r\n        in: path\r\n        description: id of Recording\r\n        required: true\r\n        style: simple\r\n        explode: false\r\n        schema:\r\n          type: string\r\n      description: Start a recorder, and make it accept incoming requests again. \r\n      tags:\r\n      - recordings\r\n      responses:\r\n        200:\r\n          description: successful response\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: array\r\n                items:\r\n                  $ref: '#/components/schemas/Recording'\r\n                description: successful response\r\n\r\n  /systems:\r\n    get:\r\n      tags:\r\n      - systems\r\n      description: retrieves all systems under test\r\n      parameters: []\r\n      responses:\r\n        200:\r\n          description: successful response\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: array\r\n                items:\r\n                  $ref: '#/components/schemas/System'\r\n                description: successful response\r\n    post:\r\n      tags:\r\n      - systems\r\n      description: creates a new system under test\r\n      security:\r\n        JWT: []\r\n      parameters: []\r\n      requestBody:\r\n        description: the SUT to create\r\n        content:\r\n          application/json:\r\n            schema:\r\n              description: the SUT to create\r\n              $ref: '#/components/schemas/System'\r\n        required: false\r\n      responses:\r\n        200:\r\n          description: successful response\r\n          content:\r\n            application/json:\r\n              schema:\r\n                description: successful response\r\n                $ref: '#/components/schemas/System'\r\n     \r\n  /systems/{name}:\r\n    get:\r\n      tags:\r\n      - systems\r\n      description: retrieves a systems under test by name\r\n      parameters: []\r\n      responses:\r\n        200:\r\n          description: successful response\r\n          content:\r\n            application/json:\r\n              schema:\r\n                description: successful response\r\n                $ref: '#/components/schemas/System'\r\n\r\n    put:\r\n      tags:\r\n      - systems\r\n      security:\r\n        JWT: []\r\n      description: updates a systems under test\r\n      requestBody:\r\n        description: the updated SUT\r\n        content:\r\n          application/json:\r\n            schema:\r\n              description: the updated SUT\r\n              $ref: '#/components/schemas/System'\r\n      responses:\r\n        200:\r\n          description: successful response\r\n          content:\r\n            application/json:\r\n              schema:\r\n                description: successful response\r\n                $ref: '#/components/schemas/System'\r\n    delete:\r\n      tags:\r\n      - systems\r\n      description: removes a system under test\r\n      security:\r\n        JWT: []\r\n      parameters:\r\n      - name: name\r\n        in: path\r\n        description: name of system to remove\r\n        required: true\r\n        style: simple\r\n        explode: false\r\n        schema:\r\n          type: string\r\n      - name: x-access-token\r\n        in: header\r\n        required: true\r\n        description: your access token\r\n        style: simple\r\n        explode: false\r\n        schema:\r\n          type: string\r\n      responses:\r\n        200:\r\n          description: successful response\r\n          content:\r\n            application/json:\r\n              schema:\r\n                description: successful response\r\n\r\n  /users:\r\n    get:\r\n      tags:\r\n      - users\r\n      description: retrieves all users\r\n      parameters: []\r\n      responses:\r\n        200:\r\n          description: successful response\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: array\r\n                items:\r\n                  $ref: '#/components/schemas/User'\r\n                description: successful response\r\n    \r\n  /users/{name}:\r\n    delete:\r\n      tags:\r\n      - users\r\n      description: removes a system under test\r\n      security:\r\n        JWT: []\r\n      parameters:\r\n      - name: name\r\n        in: path\r\n        description: uid of user to remove\r\n        required: true\r\n        style: simple\r\n        explode: false\r\n        schema:\r\n          type: string\r\n      - name: x-access-token\r\n        in: header\r\n        required: true\r\n        description: your access token\r\n        style: simple\r\n        explode: false\r\n        schema:\r\n          type: string\r\n      responses:\r\n        200:\r\n          description: successful response\r\n          content:\r\n            application/json:\r\n              schema:\r\n                description: successful response\r\n  /report:\r\n    get:\r\n      tags:\r\n      - report\r\n      description: retrieves a report of total services, users, etc\r\n      responses:\r\n        200:\r\n          description: report\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: array\r\n                items:\r\n                  $ref: '#/components/schemas/Report'\r\n                description: report \r\n        \r\ncomponents:\r\n  securitySchemes:\r\n    JWT:\r\n      type: apiKey\r\n      description: \"Access token retrieved by POSTing credentials to /api/login\"\r\n      name: x-access-token\r\n      in: header\r\n\r\n  requestBodies:\r\n    AuthReq:\r\n      title: AuthReq\r\n      required:\r\n      - username\r\n      - password\r\n      type: object\r\n      properties:\r\n        username:\r\n          type: string\r\n        password:\r\n          type: string\r\n          format: password\r\n\r\n  responses:\r\n    AuthRes:\r\n      title: AuthRes\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n        token:\r\n          type: string\r\n        message:\r\n          type: string\r\n\r\n    ToggleResponse:\r\n      title: ToggleResponse\r\n      type: object\r\n      properties:\r\n        message:\r\n          type: string\r\n        service:\r\n          $ref: '#/components/schemas/Service'\r\n\r\n  schemas:\r\n    Service:\r\n      title: Service\r\n      type: object\r\n      properties:\r\n        sut:\r\n          $ref: '#/components/schemas/System'\r\n        user:\r\n          $ref: '#/components/schemas/User'\r\n        name:\r\n          type: string\r\n        type:\r\n          type: string\r\n        basePath:\r\n          type: string\r\n        matchTemplates:\r\n          type: array\r\n          items:\r\n            type: string\r\n        rrpairs:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/RRPair'\r\n          description: ''\r\n        delay:\r\n          type: integer\r\n          format: int64\r\n        running:\r\n          type: boolean\r\n\r\n    System:\r\n      title: System\r\n      type: object\r\n      properties:\r\n        name:\r\n          type: string\r\n        members:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/User'\r\n\r\n    RRPair:\r\n      title: RRPair\r\n      type: object\r\n      properties:\r\n        verb:\r\n          type: string\r\n        path:\r\n          type: string\r\n        payloadType:\r\n          type: string\r\n        reqHeaders:\r\n          type: object\r\n        reqData:\r\n          type: object\r\n        resStatus:\r\n          type: integer\r\n          format: int64\r\n        resHeaders:\r\n          type: object\r\n        resData:\r\n          type: object\r\n\r\n    User:\r\n      title: User\r\n      type: object\r\n      properties:\r\n        uid:\r\n          type: string\r\n        mail:\r\n          type: string\r\n\r\n    Recording:\r\n      title: Recording\r\n      type: object\r\n      properties:\r\n        service:\r\n          $ref: '#/components/schemas/Service'\r\n        sut:\r\n          $ref: '#/components/schemas/System'\r\n        path:\r\n          type: string\r\n        remoteHost:\r\n          type: string\r\n        remotePort:\r\n          type: integer\r\n          format: int64\r\n        payloadType:\r\n          type: string\r\n        name:\r\n          type: string\r\n        active:\r\n          type: boolean\r\n        ssl:\r\n          type: boolean\r\n        headerMask:\r\n          type: array\r\n          items:\r\n            type: string\r\n    Report:\r\n        title: Report\r\n        type: object\r\n        properties:\r\n          totalServices:\r\n            type: integer\r\n          activeServices: \r\n            type: integer\r\n          draftServices:\r\n            type: integer\r\n          archiveServices:\r\n            type: integer\r\n          users:\r\n            type: integer\r\n          systems:\r\n            type: integer\r\n          totalTransactions:\r\n            type: integer\r\n\r\ntags:\r\n- name: services\r\n  description: ''\r\n- name: recordings\r\n  description: ''\r\n- name: archives\r\n  description: ''\r\n- name: systems\r\n  description: ''\r\n- name: users\r\n  description: ''\r\n- name: token\r\n  description: ''\r\n",
			"canonicalURL": "/github.com/Optum/mockiato@c35248cd7f6b660bac39849e82f2fb5c6dd958f9/-/blob/api-docs.yml",
			"externalURLs": [
				{
					"url": "https://github.com/Optum/mockiato/blob/c35248cd7f6b660bac39849e82f2fb5c6dd958f9/api-docs.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 1: cannot unmarshal !!seq into bool; yaml: line 1: cannot unmarshal !!map into ogen.SecurityRequirements; yaml: line 1: cannot unmarshal !!map into ogen.SecurityRequirements; yaml: line 1: cannot unmarshal !!map into ogen.SecurityRequirements; yaml: line 1: cannot unmarshal !!map into ogen.SecurityRequirements; yaml: line 1: cannot unmarshal !!map into ogen.SecurityRequirements; yaml: line 1: cannot unmarshal !!map into ogen.SecurityRequirements; yaml: line 1: cannot unmarshal !!map into ogen.SecurityRequirements; yaml: line 1: cannot unmarshal !!map into ogen.SecurityRequirements; yaml: line 1: cannot unmarshal !!map into ogen.SecurityRequirements; yaml: line 1: cannot unmarshal !!map into ogen.SecurityRequirements; yaml: line 1: cannot unmarshal !!map into ogen.SecurityRequirements; yaml: line 1: cannot unmarshal !!map into ogen.SecurityRequirements; yaml: line 1: cannot unmarshal !!map into ogen.SecurityRequirements; yaml: line 1: cannot unmarshal !!map into ogen.SecurityRequirements; yaml: line 1: cannot unmarshal !!map into ogen.SecurityRequirements"
}