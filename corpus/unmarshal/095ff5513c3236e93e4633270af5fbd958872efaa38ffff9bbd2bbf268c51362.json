{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ferdikoomen/openapi-typescript-codegen"
		},
		"file": {
			"name": "v3.json",
			"size": 0,
			"path": "test/spec/v3.json",
			"byteSize": 97568,
			"content": "{\n    \"openapi\": \"3.0.0\",\n    \"info\": {\n        \"title\": \"swagger\",\n        \"version\": \"v1.0\"\n    },\n    \"servers\": [\n        {\n            \"url\": \"http://localhost:3000/base\"\n        }\n    ],\n    \"paths\": {\n        \"/api/v{api-version}/no-tag\": {\n            \"tags\": [],\n            \"get\": {\n                \"operationId\": \"ServiceWithEmptyTag\"\n            }\n        },\n        \"/api/v{api-version}/simple\": {\n            \"get\": {\n                \"tags\": [\n                    \"Simple\"\n                ],\n                \"operationId\": \"GetCallWithoutParametersAndResponse\"\n            },\n            \"put\": {\n                \"tags\": [\n                    \"Simple\"\n                ],\n                \"operationId\": \"PutCallWithoutParametersAndResponse\"\n            },\n            \"post\": {\n                \"tags\": [\n                    \"Simple\"\n                ],\n                \"operationId\": \"PostCallWithoutParametersAndResponse\"\n            },\n            \"delete\": {\n                \"tags\": [\n                    \"Simple\"\n                ],\n                \"operationId\": \"DeleteCallWithoutParametersAndResponse\"\n            },\n            \"options\": {\n                \"tags\": [\n                    \"Simple\"\n                ],\n                \"operationId\": \"OptionsCallWithoutParametersAndResponse\"\n            },\n            \"head\": {\n                \"tags\": [\n                    \"Simple\"\n                ],\n                \"operationId\": \"HeadCallWithoutParametersAndResponse\"\n            },\n            \"patch\": {\n                \"tags\": [\n                    \"Simple\"\n                ],\n                \"operationId\": \"PatchCallWithoutParametersAndResponse\"\n            }\n        },\n        \"/api/v{api-version}/descriptions/\": {\n            \"post\": {\n                \"tags\": [\n                    \"Descriptions\"\n                ],\n                \"operationId\": \"CallWithDescriptions\",\n                \"parameters\": [\n                    {\n                        \"description\": \"Testing multiline comments in string: First line\\nSecond line\\n\\nFourth line\",\n                        \"name\": \"parameterWithBreaks\",\n                        \"in\": \"query\",\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \"Testing backticks in string: `backticks` and ```multiple backticks``` should work\",\n                        \"name\": \"parameterWithBackticks\",\n                        \"in\": \"query\",\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \"Testing slashes in string: \\\\backwards\\\\\\\\\\\\ and /forwards/// should work\",\n                        \"name\": \"parameterWithSlashes\",\n                        \"in\": \"query\",\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \"Testing expression placeholders in string: ${expression} should work\",\n                        \"name\": \"parameterWithExpressionPlaceholders\",\n                        \"in\": \"query\",\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \"Testing quotes in string: 'single quote''' and \\\"double quotes\\\"\\\"\\\" should work\",\n                        \"name\": \"parameterWithQuotes\",\n                        \"in\": \"query\",\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \"Testing reserved characters in string: /* inline */ and /** inline **/ should work\",\n                        \"name\": \"parameterWithReservedCharacters\",\n                        \"in\": \"query\",\n                        \"type\": \"string\"\n                    }\n                ]\n            }\n        },\n        \"/api/v{api-version}/parameters/deprecated\": {\n            \"post\": {\n                \"tags\": [\n                    \"Deprecated\"\n                ],\n                \"deprecated\": true,\n                \"operationId\": \"DeprecatedCall\",\n                \"parameters\": [\n                    {\n                        \"deprecated\": true,\n                        \"description\": \"This parameter is deprecated\",\n                        \"name\": \"parameter\",\n                        \"in\": \"header\",\n                        \"required\": true,\n                        \"nullable\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/DeprecatedModel\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"/api/v{api-version}/parameters/{parameterPath}\": {\n            \"post\": {\n                \"tags\": [\n                    \"Parameters\"\n                ],\n                \"operationId\": \"CallWithParameters\",\n                \"parameters\": [\n                    {\n                        \"description\": \"This is the parameter that goes into the header\",\n                        \"name\": \"parameterHeader\",\n                        \"in\": \"header\",\n                        \"required\": true,\n                        \"nullable\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"This is the parameter that goes into the query params\",\n                        \"name\": \"parameterQuery\",\n                        \"in\": \"query\",\n                        \"required\": true,\n                        \"nullable\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"This is the parameter that goes into the form data\",\n                        \"name\": \"parameterForm\",\n                        \"in\": \"formData\",\n                        \"required\": true,\n                        \"nullable\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"This is the parameter that goes into the cookie\",\n                        \"name\": \"parameterCookie\",\n                        \"in\": \"cookie\",\n                        \"required\": true,\n                        \"nullable\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"This is the parameter that goes into the path\",\n                        \"name\": \"parameterPath\",\n                        \"in\": \"path\",\n                        \"required\": true,\n                        \"nullable\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"api-version\",\n                        \"in\": \"path\",\n                        \"required\": true,\n                        \"nullable\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"description\": \"This is the parameter that goes into the body\",\n                    \"required\": true,\n                    \"nullable\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/ModelWithString\"\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/api/v{api-version}/parameters/{parameter.path.1}/{parameter-path-2}/{PARAMETER-PATH-3}\": {\n            \"post\": {\n                \"tags\": [\n                    \"Parameters\"\n                ],\n                \"operationId\": \"CallWithWeirdParameterNames\",\n                \"parameters\": [\n                    {\n                        \"description\": \"This is the parameter that goes into the path\",\n                        \"name\": \"parameter.path.1\",\n                        \"in\": \"path\",\n                        \"required\": false,\n                        \"nullable\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"This is the parameter that goes into the path\",\n                        \"name\": \"parameter-path-2\",\n                        \"in\": \"path\",\n                        \"required\": false,\n                        \"nullable\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"This is the parameter that goes into the path\",\n                        \"name\": \"PARAMETER-PATH-3\",\n                        \"in\": \"path\",\n                        \"required\": false,\n                        \"nullable\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"This is the parameter with a reserved keyword\",\n                        \"name\": \"default\",\n                        \"in\": \"query\",\n                        \"required\": false,\n                        \"nullable\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"This is the parameter that goes into the request header\",\n                        \"name\": \"parameter.header\",\n                        \"in\": \"header\",\n                        \"required\": true,\n                        \"nullable\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"This is the parameter that goes into the request query params\",\n                        \"name\": \"parameter-query\",\n                        \"in\": \"query\",\n                        \"required\": true,\n                        \"nullable\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"This is the parameter that goes into the request form data\",\n                        \"name\": \"parameter_form\",\n                        \"in\": \"formData\",\n                        \"required\": true,\n                        \"nullable\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"This is the parameter that goes into the cookie\",\n                        \"name\": \"PARAMETER-COOKIE\",\n                        \"in\": \"cookie\",\n                        \"required\": true,\n                        \"nullable\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"api-version\",\n                        \"in\": \"path\",\n                        \"required\": true,\n                        \"nullable\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"description\": \"This is the parameter that goes into the body\",\n                    \"required\": true,\n                    \"nullable\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/ModelWithString\"\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/api/v{api-version}/parameters/\": {\n            \"get\": {\n                \"tags\": [\n                    \"Parameters\"\n                ],\n                \"operationId\": \"GetCallWithOptionalParam\",\n                \"parameters\": [\n                    {\n                        \"description\": \"This is an optional parameter\",\n                        \"name\": \"parameter\",\n                        \"in\": \"query\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"description\": \"This is a required parameter\",\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/ModelWithString\"\n                            }\n                        }\n                    }\n                }\n            },\n            \"post\": {\n                \"tags\": [\n                    \"Parameters\"\n                ],\n                \"operationId\": \"PostCallWithOptionalParam\",\n                \"parameters\": [\n                    {\n                        \"description\": \"This is a required parameter\",\n                        \"name\": \"parameter\",\n                        \"in\": \"query\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/Pageable\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"description\": \"This is an optional parameter\",\n                    \"required\": false,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/ModelWithString\"\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/api/v{api-version}/requestBody/\": {\n            \"post\": {\n                \"tags\": [\n                    \"RequestBody\"\n                ],\n                \"parameters\": [\n                    {\n                        \"$ref\": \"#/components/parameters/SimpleParameter\"\n                    }\n                ],\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/SimpleRequestBody\"\n                }\n            }\n        },\n        \"/api/v{api-version}/formData/\": {\n            \"post\": {\n                \"tags\": [\n                    \"FormData\"\n                ],\n                \"parameters\": [\n                    {\n                        \"$ref\": \"#/components/parameters/SimpleParameter\"\n                    }\n                ],\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/SimpleFormData\"\n                }\n            }\n        },\n        \"/api/v{api-version}/defaults\": {\n            \"get\": {\n                \"tags\": [\n                    \"Defaults\"\n                ],\n                \"operationId\": \"CallWithDefaultParameters\",\n                \"parameters\": [\n                    {\n                        \"description\": \"This is a simple string with default value\",\n                        \"name\": \"parameterString\",\n                        \"in\": \"query\",\n                        \"nullable\": true,\n                        \"schema\": {\n                            \"type\": \"string\",\n                            \"default\": \"Hello World!\"\n                        }\n                    },\n                    {\n                        \"description\": \"This is a simple number with default value\",\n                        \"name\": \"parameterNumber\",\n                        \"in\": \"query\",\n                        \"nullable\": true,\n                        \"schema\": {\n                            \"type\": \"number\",\n                            \"default\": 123\n                        }\n                    },\n                    {\n                        \"description\": \"This is a simple boolean with default value\",\n                        \"name\": \"parameterBoolean\",\n                        \"in\": \"query\",\n                        \"nullable\": true,\n                        \"schema\": {\n                            \"type\": \"boolean\",\n                            \"default\": true\n                        }\n                    },\n                    {\n                        \"description\": \"This is a simple enum with default value\",\n                        \"name\": \"parameterEnum\",\n                        \"in\": \"query\",\n                        \"schema\": {\n                            \"enum\": [\n                                \"Success\",\n                                \"Warning\",\n                                \"Error\"\n                            ],\n                            \"default\": 0\n                        }\n                    },\n                    {\n                        \"description\": \"This is a simple model with default value\",\n                        \"name\": \"parameterModel\",\n                        \"in\": \"query\",\n                        \"nullable\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/ModelWithString\",\n                            \"default\": {\n                                \"prop\": \"Hello World!\"\n                            }\n                        }\n                    }\n                ]\n            },\n            \"post\": {\n                \"tags\": [\n                    \"Defaults\"\n                ],\n                \"operationId\": \"CallWithDefaultOptionalParameters\",\n                \"parameters\": [\n                    {\n                        \"description\": \"This is a simple string that is optional with default value\",\n                        \"name\": \"parameterString\",\n                        \"in\": \"query\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\",\n                            \"default\": \"Hello World!\"\n                        }\n                    },\n                    {\n                        \"description\": \"This is a simple number that is optional with default value\",\n                        \"name\": \"parameterNumber\",\n                        \"in\": \"query\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"number\",\n                            \"default\": 123\n                        }\n                    },\n                    {\n                        \"description\": \"This is a simple boolean that is optional with default value\",\n                        \"name\": \"parameterBoolean\",\n                        \"in\": \"query\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"boolean\",\n                            \"default\": true\n                        }\n                    },\n                    {\n                        \"description\": \"This is a simple enum that is optional with default value\",\n                        \"name\": \"parameterEnum\",\n                        \"in\": \"query\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"enum\": [\n                                \"Success\",\n                                \"Warning\",\n                                \"Error\"\n                            ],\n                            \"default\": 0\n                        }\n                    },\n                    {\n                        \"description\": \"This is a simple model that is optional with default value\",\n                        \"name\": \"parameterModel\",\n                        \"in\": \"query\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/ModelWithString\",\n                            \"default\": {\n                                \"prop\": \"Hello World!\"\n                            }\n                        }\n                    }\n                ]\n            },\n            \"put\": {\n                \"tags\": [\n                    \"Defaults\"\n                ],\n                \"operationId\": \"CallToTestOrderOfParams\",\n                \"parameters\": [\n                    {\n                        \"description\": \"This is a optional string with default\",\n                        \"name\": \"parameterOptionalStringWithDefault\",\n                        \"in\": \"query\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\",\n                            \"default\": \"Hello World!\"\n                        }\n                    },\n                    {\n                        \"description\": \"This is a optional string with empty default\",\n                        \"name\": \"parameterOptionalStringWithEmptyDefault\",\n                        \"in\": \"query\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\",\n                            \"default\": \"\"\n                        }\n                    },\n                    {\n                        \"description\": \"This is a optional string with no default\",\n                        \"name\": \"parameterOptionalStringWithNoDefault\",\n                        \"in\": \"query\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"This is a string with default\",\n                        \"name\": \"parameterStringWithDefault\",\n                        \"in\": \"query\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\",\n                            \"default\": \"Hello World!\"\n                        }\n                    },\n                    {\n                        \"description\": \"This is a string with empty default\",\n                        \"name\": \"parameterStringWithEmptyDefault\",\n                        \"in\": \"query\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\",\n                            \"default\": \"\"\n                        }\n                    },\n                    {\n                        \"description\": \"This is a string with no default\",\n                        \"name\": \"parameterStringWithNoDefault\",\n                        \"in\": \"query\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"This is a string that can be null with no default\",\n                        \"name\": \"parameterStringNullableWithNoDefault\",\n                        \"in\": \"query\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\",\n                            \"nullable\": true\n                        }\n                    },\n                    {\n                        \"description\": \"This is a string that can be null with default\",\n                        \"name\": \"parameterStringNullableWithDefault\",\n                        \"in\": \"query\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\",\n                            \"nullable\": true,\n                            \"default\": null\n                        }\n                    }\n                ]\n            }\n        },\n        \"/api/v{api-version}/duplicate\": {\n            \"get\": {\n                \"tags\": [\n                    \"Duplicate\"\n                ],\n                \"operationId\": \"DuplicateName\"\n            },\n            \"post\": {\n                \"tags\": [\n                    \"Duplicate\"\n                ],\n                \"operationId\": \"DuplicateName\"\n            },\n            \"put\": {\n                \"tags\": [\n                    \"Duplicate\"\n                ],\n                \"operationId\": \"DuplicateName\"\n            },\n            \"delete\": {\n                \"tags\": [\n                    \"Duplicate\"\n                ],\n                \"operationId\": \"DuplicateName\"\n            }\n        },\n        \"/api/v{api-version}/no-content\": {\n            \"get\": {\n                \"tags\": [\n                    \"NoContent\"\n                ],\n                \"operationId\": \"CallWithNoContentResponse\",\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"Success\"\n                    }\n                }\n            }\n        },\n        \"/api/v{api-version}/multiple-tags/a\": {\n            \"get\": {\n                \"tags\": [\n                    \"MultipleTags1\",\n                    \"MultipleTags2\"\n                ],\n                \"operationId\": \"DummyA\",\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"Success\"\n                    }\n                }\n            }\n        },\n        \"/api/v{api-version}/multiple-tags/b\": {\n            \"get\": {\n                \"tags\": [\n                    \"MultipleTags1\",\n                    \"MultipleTags2\",\n                    \"MultipleTags3\"\n                ],\n                \"operationId\": \"DummyB\",\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"Success\"\n                    }\n                }\n            }\n        },\n        \"/api/v{api-version}/response\": {\n            \"get\": {\n                \"tags\": [\n                    \"Response\"\n                ],\n                \"operationId\": \"CallWithResponse\",\n                \"responses\": {\n                    \"default\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ModelWithString\"\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"post\": {\n                \"tags\": [\n                    \"Response\"\n                ],\n                \"operationId\": \"CallWithDuplicateResponses\",\n                \"responses\": {\n                    \"default\": {\n                        \"description\": \"Message for default response\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ModelWithString\"\n                                }\n                            }\n                        }\n                    },\n                    \"201\": {\n                        \"description\": \"Message for 201 response\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ModelWithString\"\n                                }\n                            }\n                        }\n                    },\n                    \"202\": {\n                        \"description\": \"Message for 202 response\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ModelWithString\"\n                                }\n                            }\n                        }\n                    },\n                    \"500\": {\n                        \"description\": \"Message for 500 error\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ModelWithString\"\n                                }\n                            }\n                        }\n                    },\n                    \"501\": {\n                        \"description\": \"Message for 501 error\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ModelWithString\"\n                                }\n                            }\n                        }\n                    },\n                    \"502\": {\n                        \"description\": \"Message for 502 error\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ModelWithString\"\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"tags\": [\n                    \"Response\"\n                ],\n                \"operationId\": \"CallWithResponses\",\n                \"responses\": {\n                    \"default\": {\n                        \"description\": \"Message for default response\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ModelWithString\"\n                                }\n                            }\n                        }\n                    },\n                    \"200\": {\n                        \"description\": \"Message for 200 response\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"@namespace.string\": {\n                                            \"type\": \"string\",\n                                            \"readOnly\": true\n                                        },\n                                        \"@namespace.integer\": {\n                                            \"type\": \"integer\",\n                                            \"readOnly\": true\n                                        },\n                                        \"value\": {\n                                            \"type\": \"array\",\n                                            \"items\": {\n                                                \"$ref\": \"#/components/schemas/ModelWithString\"\n                                            },\n                                            \"readOnly\": true\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    \"201\": {\n                        \"description\": \"Message for 201 response\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ModelThatExtends\"\n                                }\n                            }\n                        }\n                    },\n                    \"202\": {\n                        \"description\": \"Message for 202 response\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ModelThatExtendsExtends\"\n                                }\n                            }\n                        }\n                    },\n                    \"500\": {\n                        \"description\": \"Message for 500 error\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ModelWithString\"\n                                }\n                            }\n                        }\n                    },\n                    \"501\": {\n                        \"description\": \"Message for 501 error\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ModelWithString\"\n                                }\n                            }\n                        }\n                    },\n                    \"502\": {\n                        \"description\": \"Message for 502 error\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ModelWithString\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/api/v{api-version}/collectionFormat\": {\n            \"get\": {\n                \"tags\": [\n                    \"CollectionFormat\"\n                ],\n                \"operationId\": \"CollectionFormat\",\n                \"parameters\": [\n                    {\n                        \"description\": \"This is an array parameter that is sent as csv format (comma-separated values)\",\n                        \"name\": \"parameterArrayCSV\",\n                        \"in\": \"query\",\n                        \"required\": true,\n                        \"nullable\": true,\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"collectionFormat\": \"csv\"\n                    },\n                    {\n                        \"description\": \"This is an array parameter that is sent as ssv format (space-separated values)\",\n                        \"name\": \"parameterArraySSV\",\n                        \"in\": \"query\",\n                        \"required\": true,\n                        \"nullable\": true,\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"collectionFormat\": \"ssv\"\n                    },\n                    {\n                        \"description\": \"This is an array parameter that is sent as tsv format (tab-separated values)\",\n                        \"name\": \"parameterArrayTSV\",\n                        \"in\": \"query\",\n                        \"required\": true,\n                        \"nullable\": true,\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"collectionFormat\": \"tsv\"\n                    },\n                    {\n                        \"description\": \"This is an array parameter that is sent as pipes format (pipe-separated values)\",\n                        \"name\": \"parameterArrayPipes\",\n                        \"in\": \"query\",\n                        \"required\": true,\n                        \"nullable\": true,\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"collectionFormat\": \"pipes\"\n                    },\n                    {\n                        \"description\": \"This is an array parameter that is sent as multi format (multiple parameter instances)\",\n                        \"name\": \"parameterArrayMulti\",\n                        \"in\": \"query\",\n                        \"required\": true,\n                        \"nullable\": true,\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"collectionFormat\": \"multi\"\n                    }\n                ]\n            }\n        },\n        \"/api/v{api-version}/types\": {\n            \"get\": {\n                \"tags\": [\n                    \"Types\"\n                ],\n                \"operationId\": \"Types\",\n                \"parameters\": [\n                    {\n                        \"description\": \"This is a number parameter\",\n                        \"name\": \"parameterNumber\",\n                        \"in\": \"query\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"number\",\n                            \"default\": 123\n                        }\n                    },\n                    {\n                        \"description\": \"This is a string parameter\",\n                        \"name\": \"parameterString\",\n                        \"in\": \"query\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\",\n                            \"default\": \"default\",\n                            \"nullable\": true\n                        }\n                    },\n                    {\n                        \"description\": \"This is a boolean parameter\",\n                        \"name\": \"parameterBoolean\",\n                        \"in\": \"query\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"boolean\",\n                            \"default\": true,\n                            \"nullable\": true\n                        }\n                    },\n                    {\n                        \"description\": \"This is an object parameter\",\n                        \"name\": \"parameterObject\",\n                        \"in\": \"query\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"object\",\n                            \"default\": null,\n                            \"nullable\": true\n                        }\n                    },\n                    {\n                        \"description\": \"This is an array parameter\",\n                        \"name\": \"parameterArray\",\n                        \"in\": \"query\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"type\": \"string\"\n                            },\n                            \"nullable\": true\n                        }\n                    },\n                    {\n                        \"description\": \"This is a dictionary parameter\",\n                        \"name\": \"parameterDictionary\",\n                        \"in\": \"query\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"object\",\n                            \"items\": {\n                                \"type\": \"string\"\n                            },\n                            \"nullable\": true\n                        }\n                    },\n                    {\n                        \"description\": \"This is an enum parameter\",\n                        \"name\": \"parameterEnum\",\n                        \"in\": \"query\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"enum\": [\n                                \"Success\",\n                                \"Warning\",\n                                \"Error\"\n                            ],\n                            \"nullable\": true\n                        }\n                    },\n                    {\n                        \"description\": \"This is a number parameter\",\n                        \"name\": \"id\",\n                        \"in\": \"path\",\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int32\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Response is a simple number\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"number\"\n                                }\n                            }\n                        }\n                    },\n                    \"201\": {\n                        \"description\": \"Response is a simple string\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"string\"\n                                }\n                            }\n                        }\n                    },\n                    \"202\": {\n                        \"description\": \"Response is a simple boolean\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"boolean\"\n                                }\n                            }\n                        }\n                    },\n                    \"203\": {\n                        \"description\": \"Response is a simple object\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"object\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/api/v{api-version}/upload\": {\n            \"post\": {\n                \"tags\": [\n                    \"Upload\"\n                ],\n                \"operationId\": \"UploadFile\",\n                \"parameters\": [\n                    {\n                        \"description\": \"Supply a file reference for upload\",\n                        \"name\": \"file\",\n                        \"in\": \"formData\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"file\"\n                        }\n                    },\n                    {\n                        \"name\": \"api-version\",\n                        \"in\": \"path\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\",\n                            \"nullable\": true\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"boolean\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/api/v{api-version}/complex\": {\n            \"get\": {\n                \"tags\": [\n                    \"Complex\"\n                ],\n                \"operationId\": \"ComplexTypes\",\n                \"parameters\": [\n                    {\n                        \"description\": \"Parameter containing object\",\n                        \"name\": \"parameterObject\",\n                        \"in\": \"query\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"first\": {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"second\": {\n                                            \"type\": \"object\",\n                                            \"properties\": {\n                                                \"third\": {\n                                                    \"type\": \"string\"\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    {\n                        \"description\": \"Parameter containing reference\",\n                        \"name\": \"parameterReference\",\n                        \"in\": \"query\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/ModelWithString\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful response\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/ModelWithString\"\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"400 server error\"\n                    },\n                    \"500\": {\n                        \"description\": \"500 server error\"\n                    }\n                }\n            }\n        },\n        \"/api/v{api-version}/multipart\": {\n            \"post\": {\n                \"tags\": [\n                    \"multipart\"\n                ],\n                \"operationId\": \"MultipartRequest\",\n                \"requestBody\": {\n                    \"content\": {\n                        \"multipart/form-data\": {\n                            \"schema\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                    \"content\": {\n                                        \"type\": \"string\",\n                                        \"format\": \"binary\"\n                                    },\n                                    \"data\": {\n                                        \"oneOf\": [\n                                            {\n                                                \"$ref\": \"#/components/schemas/ModelWithString\"\n                                            }\n                                        ],\n                                        \"nullable\": true\n                                    }\n                                }\n                            },\n                            \"encoding\": {\n                                \"content\": {\n                                    \"style\": \"form\"\n                                },\n                                \"data\": {\n                                    \"style\": \"form\"\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"get\": {\n                \"tags\": [\n                    \"multipart\"\n                ],\n                \"operationId\": \"MultipartResponse\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {\n                            \"multipart/mixed\": {\n                                \"schema\": {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"file\": {\n                                            \"type\": \"string\",\n                                            \"format\": \"binary\"\n                                        },\n                                        \"metadata\": {\n                                            \"type\": \"object\",\n                                            \"properties\": {\n                                                \"foo\": {\n                                                    \"type\": \"string\"\n                                                },\n                                                \"bar\": {\n                                                    \"type\": \"string\"\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/api/v{api-version}/complex/{id}\": {\n            \"put\": {\n                \"tags\": [\n                    \"Complex\"\n                ],\n                \"operationId\": \"ComplexParams\",\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"in\": \"path\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int32\"\n                        }\n                    },\n                    {\n                        \"name\": \"api-version\",\n                        \"in\": \"path\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json-patch+json\": {\n                            \"schema\": {\n                                \"required\": [\n                                    \"key\",\n                                    \"name\",\n                                    \"parameters\",\n                                    \"type\"\n                                ],\n                                \"type\": \"object\",\n                                \"properties\": {\n                                    \"key\": {\n                                        \"maxLength\": 64,\n                                        \"pattern\": \"^[a-zA-Z0-9_]*$\",\n                                        \"type\": \"string\",\n                                        \"nullable\": true,\n                                        \"readOnly\": true\n                                    },\n                                    \"name\": {\n                                        \"maxLength\": 255,\n                                        \"type\": \"string\",\n                                        \"nullable\": true\n                                    },\n                                    \"enabled\": {\n                                        \"type\": \"boolean\",\n                                        \"default\": true\n                                    },\n                                    \"type\": {\n                                        \"enum\": [\n                                            \"Monkey\",\n                                            \"Horse\",\n                                            \"Bird\"\n                                        ],\n                                        \"type\": \"string\",\n                                        \"readOnly\": true\n                                    },\n                                    \"listOfModels\": {\n                                        \"type\": \"array\",\n                                        \"items\": {\n                                            \"$ref\": \"#/components/schemas/ModelWithString\"\n                                        },\n                                        \"nullable\": true\n                                    },\n                                    \"listOfStrings\": {\n                                        \"type\": \"array\",\n                                        \"items\": {\n                                            \"type\": \"string\"\n                                        },\n                                        \"nullable\": true\n                                    },\n                                    \"parameters\": {\n                                        \"type\": \"object\",\n                                        \"oneOf\": [\n                                            {\n                                                \"$ref\": \"#/components/schemas/ModelWithString\"\n                                            },\n                                            {\n                                                \"$ref\": \"#/components/schemas/ModelWithEnum\"\n                                            },\n                                            {\n                                                \"$ref\": \"#/components/schemas/ModelWithArray\"\n                                            },\n                                            {\n                                                \"$ref\": \"#/components/schemas/ModelWithDictionary\"\n                                            }\n                                        ]\n                                    },\n                                    \"user\": {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"id\": {\n                                                \"type\": \"integer\",\n                                                \"format\": \"int32\",\n                                                \"readOnly\": true\n                                            },\n                                            \"name\": {\n                                                \"type\": \"string\",\n                                                \"nullable\": true,\n                                                \"readOnly\": true\n                                            }\n                                        },\n                                        \"readOnly\": true\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json; type=collection\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ModelWithString\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/api/v{api-version}/header\": {\n            \"post\": {\n                \"tags\": [\n                    \"Header\"\n                ],\n                \"operationId\": \"CallWithResultFromHeader\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful response\",\n                        \"headers\": {\n                            \"operation-location\": {\n                                \"schema\": {\n                                    \"type\": \"string\"\n                                }\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"400 server error\"\n                    },\n                    \"500\": {\n                        \"description\": \"500 server error\"\n                    }\n                }\n            }\n        },\n        \"/api/v{api-version}/error\": {\n            \"post\": {\n                \"tags\": [\n                    \"Error\"\n                ],\n                \"operationId\": \"testErrorCode\",\n                \"parameters\": [\n                    {\n                        \"description\": \"Status code to return\",\n                        \"name\": \"status\",\n                        \"in\": \"query\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Custom message: Successful response\"\n                    },\n                    \"500\": {\n                        \"description\": \"Custom message: Internal Server Error\"\n                    },\n                    \"501\": {\n                        \"description\": \"Custom message: Not Implemented\"\n                    },\n                    \"502\": {\n                        \"description\": \"Custom message: Bad Gateway\"\n                    },\n                    \"503\": {\n                        \"description\": \"Custom message: Service Unavailable\"\n                    }\n                }\n            }\n        }\n    },\n    \"components\": {\n        \"requestBodies\": {\n            \"SimpleRequestBody\": {\n                \"description\": \"A reusable request body\",\n                \"required\": false,\n                \"content\": {\n                    \"application/json\": {\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/ModelWithString\"\n                        }\n                    }\n                }\n            },\n            \"SimpleFormData\": {\n                \"description\": \"A reusable request body\",\n                \"required\": false,\n                \"content\": {\n                    \"multipart/form-data\": {\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/ModelWithString\"\n                        }\n                    }\n                }\n            }\n        },\n        \"parameters\": {\n            \"SimpleParameter\": {\n                \"description\": \"This is a reusable parameter\",\n                \"name\": \"parameter\",\n                \"in\": \"query\",\n                \"required\": false,\n                \"schema\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schemas\": {\n            \"CommentWithBreaks\": {\n                \"description\": \"Testing multiline comments in string: First line\\nSecond line\\n\\nFourth line\",\n                \"type\": \"integer\"\n            },\n            \"CommentWithBackticks\": {\n                \"description\": \"Testing backticks in string: `backticks` and ```multiple backticks``` should work\",\n                \"type\": \"integer\"\n            },\n            \"CommentWithSlashes\": {\n                \"description\": \"Testing slashes in string: \\\\backwards\\\\\\\\\\\\ and /forwards/// should work\",\n                \"type\": \"integer\"\n            },\n            \"CommentWithExpressionPlaceholders\": {\n                \"description\": \"Testing expression placeholders in string: ${expression} should work\",\n                \"type\": \"integer\"\n            },\n            \"CommentWithQuotes\": {\n                \"description\": \"Testing quotes in string: 'single quote''' and \\\"double quotes\\\"\\\"\\\" should work\",\n                \"type\": \"integer\"\n            },\n            \"CommentWithReservedCharacters\": {\n                \"description\": \"Testing reserved characters in string: /* inline */ and /** inline **/ should work\",\n                \"type\": \"integer\"\n            },\n            \"SimpleInteger\": {\n                \"description\": \"This is a simple number\",\n                \"type\": \"integer\"\n            },\n            \"SimpleBoolean\": {\n                \"description\": \"This is a simple boolean\",\n                \"type\": \"boolean\"\n            },\n            \"SimpleString\": {\n                \"description\": \"This is a simple string\",\n                \"type\": \"string\"\n            },\n            \"SimpleFile\": {\n                \"description\": \"This is a simple file\",\n                \"type\": \"file\"\n            },\n            \"SimpleReference\": {\n                \"description\": \"This is a simple reference\",\n                \"$ref\": \"#/components/schemas/ModelWithString\"\n            },\n            \"SimpleStringWithPattern\": {\n                \"description\": \"This is a simple string\",\n                \"type\": \"string\",\n                \"nullable\": true,\n                \"maxLength\": 64,\n                \"pattern\": \"^[a-zA-Z0-9_]*$\"\n            },\n            \"EnumWithStrings\": {\n                \"description\": \"This is a simple enum with strings\",\n                \"enum\": [\n                    \"Success\",\n                    \"Warning\",\n                    \"Error\",\n                    \"'Single Quote'\",\n                    \"\\\"Double Quotes\\\"\"\n                ]\n            },\n            \"EnumWithNumbers\": {\n                \"description\": \"This is a simple enum with numbers\",\n                \"enum\": [\n                    1,\n                    2,\n                    3,\n                    1.1,\n                    1.20,\n                    1.300,\n                    100,\n                    200,\n                    300,\n                    -100,\n                    -200,\n                    -300,\n                    -1.1,\n                    -1.20,\n                    -1.300\n                ]\n            },\n            \"EnumFromDescription\": {\n                \"description\": \"Success=1,Warning=2,Error=3\",\n                \"type\": \"number\"\n            },\n            \"EnumWithExtensions\": {\n                \"description\": \"This is a simple enum with numbers\",\n                \"enum\": [\n                    200,\n                    400,\n                    500\n                ],\n                \"x-enum-varnames\": [\n                    \"CUSTOM_SUCCESS\",\n                    \"CUSTOM_WARNING\",\n                    \"CUSTOM_ERROR\"\n                ],\n                \"x-enum-descriptions\": [\n                    \"Used when the status of something is successful\",\n                    \"Used when the status of something has a warning\",\n                    \"Used when the status of something has an error\"\n                ]\n            },\n            \"ArrayWithNumbers\": {\n                \"description\": \"This is a simple array with numbers\",\n                \"type\": \"array\",\n                \"items\": {\n                    \"type\": \"integer\"\n                }\n            },\n            \"ArrayWithBooleans\": {\n                \"description\": \"This is a simple array with booleans\",\n                \"type\": \"array\",\n                \"items\": {\n                    \"type\": \"boolean\"\n                }\n            },\n            \"ArrayWithStrings\": {\n                \"description\": \"This is a simple array with strings\",\n                \"type\": \"array\",\n                \"items\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"ArrayWithReferences\": {\n                \"description\": \"This is a simple array with references\",\n                \"type\": \"array\",\n                \"items\": {\n                    \"$ref\": \"#/components/schemas/ModelWithString\"\n                }\n            },\n            \"ArrayWithArray\": {\n                \"description\": \"This is a simple array containing an array\",\n                \"type\": \"array\",\n                \"items\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/components/schemas/ModelWithString\"\n                    }\n                }\n            },\n            \"ArrayWithProperties\": {\n                \"description\": \"This is a simple array with properties\",\n                \"type\": \"array\",\n                \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"foo\": {\n                            \"type\": \"string\"\n                        },\n                        \"bar\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            },\n            \"DictionaryWithString\": {\n                \"description\": \"This is a string dictionary\",\n                \"type\": \"object\",\n                \"additionalProperties\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"DictionaryWithReference\": {\n                \"description\": \"This is a string reference\",\n                \"type\": \"object\",\n                \"additionalProperties\": {\n                    \"$ref\": \"#/components/schemas/ModelWithString\"\n                }\n            },\n            \"DictionaryWithArray\": {\n                \"description\": \"This is a complex dictionary\",\n                \"type\": \"object\",\n                \"additionalProperties\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/components/schemas/ModelWithString\"\n                    }\n                }\n            },\n            \"DictionaryWithDictionary\": {\n                \"description\": \"This is a string dictionary\",\n                \"type\": \"object\",\n                \"additionalProperties\": {\n                    \"type\": \"object\",\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    }\n                }\n            },\n            \"DictionaryWithProperties\": {\n                \"description\": \"This is a complex dictionary\",\n                \"type\": \"object\",\n                \"additionalProperties\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"foo\": {\n                            \"type\": \"string\"\n                        },\n                        \"bar\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            },\n            \"ModelWithInteger\": {\n                \"description\": \"This is a model with one number property\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"prop\": {\n                        \"description\": \"This is a simple number property\",\n                        \"type\": \"integer\"\n                    }\n                }\n            },\n            \"ModelWithBoolean\": {\n                \"description\": \"This is a model with one boolean property\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"prop\": {\n                        \"description\": \"This is a simple boolean property\",\n                        \"type\": \"boolean\"\n                    }\n                }\n            },\n            \"ModelWithString\": {\n                \"description\": \"This is a model with one string property\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"prop\": {\n                        \"description\": \"This is a simple string property\",\n                        \"type\": \"string\"\n                    }\n                }\n            },\n            \"ModelWithNullableString\": {\n                \"description\": \"This is a model with one string property\",\n                \"type\": \"object\",\n                \"required\": [\n                    \"nullableRequiredProp1\",\n                    \"nullableRequiredProp2\"\n                ],\n                \"properties\": {\n                    \"nullableProp1\": {\n                        \"description\": \"This is a simple string property\",\n                        \"type\": \"string\",\n                        \"nullable\": true\n                    },\n                    \"nullableRequiredProp1\": {\n                        \"description\": \"This is a simple string property\",\n                        \"type\": \"string\",\n                        \"nullable\": true\n                    },\n                    \"nullableProp2\": {\n                        \"description\": \"This is a simple string property\",\n                        \"type\": [\n                            \"string\",\n                            \"null\"\n                        ]\n                    },\n                    \"nullableRequiredProp2\": {\n                        \"description\": \"This is a simple string property\",\n                        \"type\": [\n                            \"string\",\n                            \"null\"\n                        ]\n                    }\n                }\n            },\n            \"ModelWithEnum\": {\n                \"description\": \"This is a model with one enum\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"test\": {\n                        \"description\": \"This is a simple enum with strings\",\n                        \"enum\": [\n                            \"Success\",\n                            \"Warning\",\n                            \"Error\"\n                        ]\n                    },\n                    \"statusCode\": {\n                        \"description\": \"These are the HTTP error code enums\",\n                        \"enum\": [\n                            \"100\",\n                            \"200 FOO\",\n                            \"300 FOO_BAR\",\n                            \"400 foo-bar\",\n                            \"500 foo.bar\",\n                            \"600 foo\u0026bar\"\n                        ]\n                    },\n                    \"bool\": {\n                        \"description\": \"Simple boolean enum\",\n                        \"type\": \"boolean\",\n                        \"enum\": [\n                            true\n                        ]\n                    }\n                }\n            },\n            \"ModelWithEnumFromDescription\": {\n                \"description\": \"This is a model with one enum\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"test\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Success=1,Warning=2,Error=3\"\n                    }\n                }\n            },\n            \"ModelWithNestedEnums\": {\n                \"description\": \"This is a model with nested enums\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"dictionaryWithEnum\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": {\n                            \"enum\": [\n                                \"Success\",\n                                \"Warning\",\n                                \"Error\"\n                            ]\n                        }\n                    },\n                    \"dictionaryWithEnumFromDescription\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Success=1,Warning=2,Error=3\"\n                        }\n                    },\n                    \"arrayWithEnum\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"enum\": [\n                                \"Success\",\n                                \"Warning\",\n                                \"Error\"\n                            ]\n                        }\n                    },\n                    \"arrayWithDescription\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Success=1,Warning=2,Error=3\"\n                        }\n                    }\n                }\n            },\n            \"ModelWithReference\": {\n                \"description\": \"This is a model with one property containing a reference\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"prop\": {\n                        \"$ref\": \"#/components/schemas/ModelWithProperties\"\n                    }\n                }\n            },\n            \"ModelWithArray\": {\n                \"description\": \"This is a model with one property containing an array\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"prop\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/ModelWithString\"\n                        }\n                    },\n                    \"propWithFile\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"file\"\n                        }\n                    },\n                    \"propWithNumber\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"number\"\n                        }\n                    }\n                }\n            },\n            \"ModelWithDictionary\": {\n                \"description\": \"This is a model with one property containing a dictionary\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"prop\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            },\n            \"DeprecatedModel\": {\n                \"deprecated\": true,\n                \"description\": \"This is a deprecated model with a deprecated property\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"prop\": {\n                        \"deprecated\": true,\n                        \"description\": \"This is a deprecated property\",\n                        \"type\": \"string\"\n                    }\n                }\n            },\n            \"ModelWithCircularReference\": {\n                \"description\": \"This is a model with one property containing a circular reference\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"prop\": {\n                        \"$ref\": \"#/components/schemas/ModelWithCircularReference\"\n                    }\n                }\n            },\n            \"CompositionWithOneOf\": {\n                \"description\": \"This is a model with one property with a 'one of' relationship\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"propA\": {\n                        \"type\": \"object\",\n                        \"oneOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/ModelWithString\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/ModelWithEnum\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/ModelWithArray\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/ModelWithDictionary\"\n                            }\n                        ]\n                    }\n                }\n            },\n            \"CompositionWithOneOfAnonymous\": {\n                \"description\": \"This is a model with one property with a 'one of' relationship where the options are not $ref\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"propA\": {\n                        \"type\": \"object\",\n                        \"oneOf\": [\n                            {\n                                \"description\": \"Anonymous object type\",\n                                \"type\": \"object\",\n                                \"properties\": {\n                                    \"propA\": {\n                                        \"type\": \"string\"\n                                    }\n                                }\n                            },\n                            {\n                                \"description\": \"Anonymous string type\",\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"description\": \"Anonymous integer type\",\n                                \"type\": \"integer\"\n                            }\n                        ]\n                    }\n                }\n            },\n            \"ModelCircle\": {\n                \"description\": \"Circle\",\n                \"type\": \"object\",\n                \"required\": [\n                    \"kind\"\n                ],\n                \"properties\": {\n                    \"kind\": {\n                        \"type\": \"string\"\n                    },\n                    \"radius\": {\n                        \"type\": \"number\"\n                    }\n                }\n            },\n            \"ModelSquare\": {\n                \"description\": \"Square\",\n                \"type\": \"object\",\n                \"required\": [\n                    \"kind\"\n                ],\n                \"properties\": {\n                    \"kind\": {\n                        \"type\": \"string\"\n                    },\n                    \"sideLength\": {\n                        \"type\": \"number\"\n                    }\n                }\n            },\n            \"CompositionWithOneOfDiscriminator\": {\n                \"description\": \"This is a model with one property with a 'one of' relationship where the options are not $ref\",\n                \"type\": \"object\",\n                \"oneOf\": [\n                    {\n                        \"$ref\": \"#/components/schemas/ModelCircle\"\n                    },\n                    {\n                        \"$ref\": \"#/components/schemas/ModelSquare\"\n                    }\n                ],\n                \"discriminator\": {\n                    \"propertyName\": \"kind\",\n                    \"mapping\": {\n                        \"circle\": \"#/components/schemas/ModelCircle\",\n                        \"square\": \"#/components/schemas/ModelSquare\"\n                    }\n                }\n            },\n            \"CompositionWithAnyOf\": {\n                \"description\": \"This is a model with one property with a 'any of' relationship\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"propA\": {\n                        \"type\": \"object\",\n                        \"anyOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/ModelWithString\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/ModelWithEnum\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/ModelWithArray\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/ModelWithDictionary\"\n                            }\n                        ]\n                    }\n                }\n            },\n            \"CompositionWithAnyOfAnonymous\": {\n                \"description\": \"This is a model with one property with a 'any of' relationship where the options are not $ref\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"propA\": {\n                        \"type\": \"object\",\n                        \"anyOf\": [\n                            {\n                                \"description\": \"Anonymous object type\",\n                                \"type\": \"object\",\n                                \"properties\": {\n                                    \"propA\": {\n                                        \"type\": \"string\"\n                                    }\n                                }\n                            },\n                            {\n                                \"description\": \"Anonymous string type\",\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"description\": \"Anonymous integer type\",\n                                \"type\": \"integer\"\n                            }\n                        ]\n                    }\n                }\n            },\n            \"CompositionWithOneOfAndNullable\": {\n                \"description\": \"This is a model with one property with a 'one of' relationship\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"propA\": {\n                        \"nullable\": true,\n                        \"type\": \"object\",\n                        \"oneOf\": [\n                            {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                    \"boolean\": {\n                                        \"type\": \"boolean\"\n                                    }\n                                }\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/ModelWithEnum\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/ModelWithArray\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/ModelWithDictionary\"\n                            }\n                        ]\n                    }\n                }\n            },\n            \"CompositionWithOneOfAndSimpleDictionary\": {\n                \"description\": \"This is a model that contains a simple dictionary within composition\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"propA\": {\n                        \"oneOf\": [\n                            {\n                                \"type\": \"boolean\"\n                            },\n                            {\n                                \"type\": \"object\",\n                                \"additionalProperties\": {\n                                    \"type\": \"number\"\n                                }\n                            }\n                        ]\n                    }\n                }\n            },\n            \"CompositionWithOneOfAndSimpleArrayDictionary\": {\n                \"description\": \"This is a model that contains a dictionary of simple arrays within composition\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"propA\": {\n                        \"oneOf\": [\n                            {\n                                \"type\": \"boolean\"\n                            },\n                            {\n                                \"type\": \"object\",\n                                \"additionalProperties\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"type\": \"boolean\"\n                                    }\n                                }\n                            }\n                        ]\n                    }\n                }\n            },\n            \"CompositionWithOneOfAndComplexArrayDictionary\": {\n                \"description\": \"This is a model that contains a dictionary of complex arrays (composited) within composition\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"propA\": {\n                        \"oneOf\": [\n                            {\n                                \"type\": \"boolean\"\n                            },\n                            {\n                                \"type\": \"object\",\n                                \"additionalProperties\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"oneOf\": [\n                                            {\n                                                \"type\": \"number\"\n                                            },\n                                            {\n                                                \"type\": \"string\"\n                                            }\n                                        ]\n                                    }\n                                }\n                            }\n                        ]\n                    }\n                }\n            },\n            \"CompositionWithAllOfAndNullable\": {\n                \"description\": \"This is a model with one property with a 'all of' relationship\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"propA\": {\n                        \"nullable\": true,\n                        \"type\": \"object\",\n                        \"allOf\": [\n                            {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                    \"boolean\": {\n                                        \"type\": \"boolean\"\n                                    }\n                                }\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/ModelWithEnum\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/ModelWithArray\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/ModelWithDictionary\"\n                            }\n                        ]\n                    }\n                }\n            },\n            \"CompositionWithAnyOfAndNullable\": {\n                \"description\": \"This is a model with one property with a 'any of' relationship\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"propA\": {\n                        \"nullable\": true,\n                        \"type\": \"object\",\n                        \"anyOf\": [\n                            {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                    \"boolean\": {\n                                        \"type\": \"boolean\"\n                                    }\n                                }\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/ModelWithEnum\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/ModelWithArray\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/ModelWithDictionary\"\n                            }\n                        ]\n                    }\n                }\n            },\n            \"CompositionBaseModel\": {\n                \"description\": \"This is a base model with two simple optional properties\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"firstName\": {\n                        \"type\": \"string\"\n                    },\n                    \"lastname\": {\n                        \"type\": \"string\"\n                    }\n                }\n            },\n            \"CompositionExtendedModel\": {\n                \"description\": \"This is a model that extends the base model\",\n                \"type\": \"object\",\n                \"allOf\": [\n                    {\n                        \"$ref\": \"#/components/schemas/CompositionBaseModel\"\n                    }\n                ],\n                \"properties\": {\n                    \"age\": {\n                        \"type\": \"number\"\n                    }\n                },\n                \"required\": [\n                    \"firstName\",\n                    \"lastname\",\n                    \"age\"\n                ]\n            },\n            \"ModelWithProperties\": {\n                \"description\": \"This is a model with one nested property\",\n                \"type\": \"object\",\n                \"required\": [\n                    \"required\",\n                    \"requiredAndReadOnly\",\n                    \"requiredAndNullable\"\n                ],\n                \"properties\": {\n                    \"required\": {\n                        \"type\": \"string\"\n                    },\n                    \"requiredAndReadOnly\": {\n                        \"type\": \"string\",\n                        \"readOnly\": true\n                    },\n                    \"requiredAndNullable\": {\n                        \"type\": \"string\",\n                        \"nullable\": true\n                    },\n                    \"string\": {\n                        \"type\": \"string\"\n                    },\n                    \"number\": {\n                        \"type\": \"number\"\n                    },\n                    \"boolean\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"reference\": {\n                        \"$ref\": \"#/components/schemas/ModelWithString\"\n                    },\n                    \"property with space\": {\n                        \"type\": \"string\"\n                    },\n                    \"default\": {\n                        \"type\": \"string\"\n                    },\n                    \"try\": {\n                        \"type\": \"string\"\n                    },\n                    \"@namespace.string\": {\n                        \"type\": \"string\",\n                        \"readOnly\": true\n                    },\n                    \"@namespace.integer\": {\n                        \"type\": \"integer\",\n                        \"readOnly\": true\n                    }\n                }\n            },\n            \"ModelWithNestedProperties\": {\n                \"description\": \"This is a model with one nested property\",\n                \"type\": \"object\",\n                \"required\": [\n                    \"first\"\n                ],\n                \"properties\": {\n                    \"first\": {\n                        \"type\": \"object\",\n                        \"required\": [\n                            \"second\"\n                        ],\n                        \"readOnly\": true,\n                        \"nullable\": true,\n                        \"properties\": {\n                            \"second\": {\n                                \"type\": \"object\",\n                                \"required\": [\n                                    \"third\"\n                                ],\n                                \"readOnly\": true,\n                                \"nullable\": true,\n                                \"properties\": {\n                                    \"third\": {\n                                        \"type\": \"string\",\n                                        \"required\": true,\n                                        \"readOnly\": true,\n                                        \"nullable\": true\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"ModelWithDuplicateProperties\": {\n                \"description\": \"This is a model with duplicated properties\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"prop\": {\n                        \"$ref\": \"#/components/schemas/ModelWithString\"\n                    },\n                    \"prop\": {\n                        \"$ref\": \"#/components/schemas/ModelWithString\"\n                    },\n                    \"prop\": {\n                        \"$ref\": \"#/components/schemas/ModelWithString\"\n                    }\n                }\n            },\n            \"ModelWithOrderedProperties\": {\n                \"description\": \"This is a model with ordered properties\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"zebra\": {\n                        \"type\": \"string\"\n                    },\n                    \"apple\": {\n                        \"type\": \"string\"\n                    },\n                    \"hawaii\": {\n                        \"type\": \"string\"\n                    }\n                }\n            },\n            \"ModelWithDuplicateImports\": {\n                \"description\": \"This is a model with duplicated imports\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"propA\": {\n                        \"$ref\": \"#/components/schemas/ModelWithString\"\n                    },\n                    \"propB\": {\n                        \"$ref\": \"#/components/schemas/ModelWithString\"\n                    },\n                    \"propC\": {\n                        \"$ref\": \"#/components/schemas/ModelWithString\"\n                    }\n                }\n            },\n            \"ModelThatExtends\": {\n                \"description\": \"This is a model that extends another model\",\n                \"type\": \"object\",\n                \"allOf\": [\n                    {\n                        \"$ref\": \"#/components/schemas/ModelWithString\"\n                    },\n                    {\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"propExtendsA\": {\n                                \"type\": \"string\"\n                            },\n                            \"propExtendsB\": {\n                                \"$ref\": \"#/components/schemas/ModelWithString\"\n                            }\n                        }\n                    }\n                ]\n            },\n            \"ModelThatExtendsExtends\": {\n                \"description\": \"This is a model that extends another model\",\n                \"type\": \"object\",\n                \"allOf\": [\n                    {\n                        \"$ref\": \"#/components/schemas/ModelWithString\"\n                    },\n                    {\n                        \"$ref\": \"#/components/schemas/ModelThatExtends\"\n                    },\n                    {\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"propExtendsC\": {\n                                \"type\": \"string\"\n                            },\n                            \"propExtendsD\": {\n                                \"$ref\": \"#/components/schemas/ModelWithString\"\n                            }\n                        }\n                    }\n                ]\n            },\n            \"ModelWithPattern\": {\n                \"description\": \"This is a model that contains a some patterns\",\n                \"type\": \"object\",\n                \"required\": [\n                    \"key\",\n                    \"name\"\n                ],\n                \"properties\": {\n                    \"key\": {\n                        \"maxLength\": 64,\n                        \"pattern\": \"^[a-zA-Z0-9_]*$\",\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"maxLength\": 255,\n                        \"type\": \"string\"\n                    },\n                    \"enabled\": {\n                        \"type\": \"boolean\",\n                        \"readOnly\": true\n                    },\n                    \"modified\": {\n                        \"type\": \"string\",\n                        \"format\": \"date-time\",\n                        \"readOnly\": true\n                    },\n                    \"id\": {\n                        \"type\": \"string\",\n                        \"pattern\": \"^\\\\d{2}-\\\\d{3}-\\\\d{4}$\"\n                    },\n                    \"text\": {\n                        \"type\": \"string\",\n                        \"pattern\": \"^\\\\w+$\"\n                    }\n                }\n            },\n            \"File\": {\n                \"required\": [\n                    \"mime\"\n                ],\n                \"type\": \"object\",\n                \"properties\": {\n                    \"id\": {\n                        \"title\": \"Id\",\n                        \"type\": \"string\",\n                        \"readOnly\": true,\n                        \"minLength\": 1\n                    },\n                    \"updated_at\": {\n                        \"title\": \"Updated at\",\n                        \"type\": \"string\",\n                        \"format\": \"date-time\",\n                        \"readOnly\": true\n                    },\n                    \"created_at\": {\n                        \"title\": \"Created at\",\n                        \"type\": \"string\",\n                        \"format\": \"date-time\",\n                        \"readOnly\": true\n                    },\n                    \"mime\": {\n                        \"title\": \"Mime\",\n                        \"type\": \"string\",\n                        \"maxLength\": 24,\n                        \"minLength\": 1\n                    },\n                    \"file\": {\n                        \"title\": \"File\",\n                        \"type\": \"string\",\n                        \"readOnly\": true,\n                        \"format\": \"uri\"\n                    }\n                }\n            },\n            \"Pageable\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"page\": {\n                        \"minimum\": 0,\n                        \"type\": \"integer\",\n                        \"format\": \"int32\"\n                    },\n                    \"size\": {\n                        \"minimum\": 1,\n                        \"type\": \"integer\",\n                        \"format\": \"int32\"\n                    },\n                    \"sort\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n"
		}
	},
	"Error": "unmarshal: json: line 7:10: callback: json: cannot unmarshal array into Go struct field Schema.type of type string"
}