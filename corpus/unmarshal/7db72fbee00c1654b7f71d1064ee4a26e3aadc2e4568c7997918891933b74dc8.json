{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/audiocloud/audiocloud"
		},
		"file": {
			"name": "domain_api.yaml",
			"size": 0,
			"path": "specs/openapi/domain_api.yaml",
			"byteSize": 118123,
			"content": "openapi: 3.1.0\ninfo:\n  contact:\n    email: bojan@distopik.com\n    name: Bojan Å ernek\n  description: ''\n  license:\n    name: Apache 2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0.html\n  title: Audio Cloud Domain\n  version: 0.1.0\npaths:\n  /v1/engines/{engine_id}/register:\n    post:\n      deprecated: false\n      description: |\n        Register an audio engine\n\n        This endpoint is used to register an audio engine with the Domain Server. It will provide its known configuration\n        and expect to return an updated (merged) configuration that includes any configuration that the domain server knows.\n      operationId: register_engine\n      summary: Register an audio engine\n      parameters:\n        - deprecated: false\n          description: The ID of the engine to register\n          in: path\n          name: engine_id\n          required: true\n          schema:\n            $ref: '#/components/schemas/EngineId'\n      requestBody:\n        content:\n          application/json:\n            name: engine_config\n            description: The engine configuration\n            schema:\n              $ref: '#/components/schemas/EngineConfig'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EngineConfig'\n          description: Success\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DomainError'\n          description: Not authorized\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DomainError'\n          description: Not found\n      tags:\n        - registration\n  /v1/drivers/{driver_id}/register:\n    post:\n      deprecated: false\n      description: |\n        Register a fixed instance driver\n\n        This endpoint is used to register a fixed instance driver with the Domain Server. It will provide its known configuration\n        and expect to return an updated (merged) configuration that includes any configuration that the domain server knows.\n      operationId: register_fixed_instance_driver\n      parameters:\n        - deprecated: false\n          description: The manufacturer of the driver\n          in: path\n          name: driver_id\n          required: true\n          schema:\n            $ref: '#/components/schemas/InstanceDriverId'\n      requestBody:\n        content:\n          application/json: null\n          name: driver_config\n          description: The driver configuration\n          schema:\n            $ref: '#/components/schemas/TimestampedInstanceDriverConfig'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TimestampedInstanceDriverConfig'\n          description: Success\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DomainError'\n          description: Not authorized\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DomainError'\n          description: Not found\n      tags:\n        - registration\n  /v1/streams/{app_id}/{task_id}/{play_id}:\n    get:\n      deprecated: false\n      description: |\n        Get stream statistics\n\n        Get statistics about cached packets available in the stream.\n      operationId: stream_stats\n      parameters:\n        - deprecated: false\n          description: App id\n          in: path\n          name: app_id\n          required: true\n          schema:\n            $ref: '#/components/schemas/AppId'\n        - deprecated: false\n          description: Task id\n          in: path\n          name: task_id\n          required: true\n          schema:\n            $ref: '#/components/schemas/TaskId'\n        - deprecated: false\n          description: Play id\n          in: path\n          name: play_id\n          required: true\n          schema:\n            $ref: '#/components/schemas/PlayId'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StreamStats'\n          description: Success\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DomainError'\n          description: Not authorized\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DomainError'\n          description: Not found\n      summary: Get stream statistics\n      tags:\n        - streaming\n  /v1/streams/{app_id}/{task_id}/{play_id}/packet/{serial}:\n    get:\n      deprecated: false\n      description: |\n        Load packet data\n\n        For each PlayId, on a task, a stream is kept in memory with a history of packets, by ascending\n        serial number. For a sane amount of time, the packets may be requested by the clients. If a\n        packet is not yet models (but it is expected they will be, in the future) the request will\n        block (wait) for `Timeout` milliseconds before giving up and returning 408.\n      operationId: stream_packets\n      parameters:\n        - deprecated: false\n          description: App id\n          in: path\n          name: app_id\n          required: true\n          schema:\n            $ref: '#/components/schemas/AppId'\n        - deprecated: false\n          description: Task id\n          in: path\n          name: task_id\n          required: true\n          schema:\n            $ref: '#/components/schemas/TaskId'\n        - deprecated: false\n          description: Play id\n          in: path\n          name: play_id\n          required: true\n          schema:\n            $ref: '#/components/schemas/PlayId'\n        - deprecated: false\n          description: Packet serial number\n          in: path\n          name: serial\n          required: true\n          schema:\n            format: int64\n            type: integer\n        - deprecated: false\n          description: Milliseconds to wait for the packet to be ready\n          in: header\n          name: Timeout\n          required: true\n          schema:\n            format: int64\n            type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StreamingPacket'\n          description: Success\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DomainError'\n          description: Not authorized\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DomainError'\n          description: App, task or stream not found\n        '408':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DomainError'\n          description: Timed out waiting for packet\n      summary: Load packet data\n      tags:\n        - streaming\n  /v1/tasks:\n    get:\n      deprecated: false\n      description: |\n        List tasks\n\n        Return a list of all current tasks and their status.\n      operationId: list_tasks\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskSummaryList'\n          description: Success\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DomainError'\n          description: Not authorized\n      summary: List tasks\n      tags:\n        - tasks\n    post:\n      deprecated: false\n      description: |\n        Create a task\n\n        In standalone mode, the task will be checked for mutual exclusivity with other tasks, otherwise\n        it will be created. This call could also fail if the referenced resources (such as fixed\n        instances) do not exist.\n      operationId: create_task\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateTask'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskCreated'\n          description: Success\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DomainError'\n          description: Not authorized\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DomainError'\n          description: Not found\n        '409':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DomainError'\n          description: Overlapping task exists\n      summary: Create a task\n      tags:\n        - tasks\n  /v1/tasks/{app_id}/{task_id}:\n    delete:\n      deprecated: false\n      description: |\n        Delete a task\n\n        Delete a task and release all referenced resources.\n      operationId: delete_task\n      parameters:\n        - deprecated: false\n          description: App id\n          in: path\n          name: app_id\n          required: true\n          schema:\n            $ref: '#/components/schemas/AppId'\n        - deprecated: false\n          description: Task id\n          in: path\n          name: task_id\n          required: true\n          schema:\n            $ref: '#/components/schemas/TaskId'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskDeleted'\n          description: Success\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DomainError'\n          description: Not authorized\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DomainError'\n          description: Not found\n      summary: Delete a task\n      tags:\n        - tasks\n    get:\n      deprecated: false\n      description: |\n        Get task details\n\n        Get details of a task, including dependent media and instance statuses\n      operationId: get_task\n      parameters:\n        - deprecated: false\n          description: App id\n          in: path\n          name: app_id\n          required: true\n          schema:\n            $ref: '#/components/schemas/AppId'\n        - deprecated: false\n          description: Task id\n          in: path\n          name: task_id\n          required: true\n          schema:\n            $ref: '#/components/schemas/TaskId'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskWithStatusAndSpec'\n          description: Success\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DomainError'\n          description: Not authorized\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DomainError'\n          description: Not found\n      summary: Get task details\n      tags:\n        - tasks\n  /v1/tasks/{app_id}/{task_id}/modify:\n    post:\n      deprecated: false\n      description: |\n        Modify existing task\n\n        Submit modifications to the task. This generic request can be used to update most aspects of the\n        session: adjusting parameters, creating, deleting, reconnecting nodes, changing media, etc.\n      operationId: modify_task\n      parameters:\n        - deprecated: false\n          description: App id\n          in: path\n          name: app_id\n          required: true\n          schema:\n            $ref: '#/components/schemas/AppId'\n        - deprecated: false\n          description: Task id\n          in: path\n          name: task_id\n          required: true\n          schema:\n            $ref: '#/components/schemas/TaskId'\n        - deprecated: false\n          description: The task version to be changed\n          in: header\n          name: If-Match\n          required: true\n          schema:\n            format: int64\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ModifyTask'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskUpdated'\n          description: Success\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DomainError'\n          description: Not authorized\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DomainError'\n          description: Not found\n        '409':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DomainError'\n          description: Not allowed to change instances\n      summary: Modify existing task\n      tags:\n        - tasks\n  /v1/tasks/{app_id}/{task_id}/transport/cancel:\n    post:\n      deprecated: false\n      description: |\n        Cancel rendering a task\n\n        Request to stop (cancel) rendering if the task is rendering.\n      operationId: cancel_render_task\n      parameters:\n        - deprecated: false\n          description: App id\n          in: path\n          name: app_id\n          required: true\n          schema:\n            $ref: '#/components/schemas/AppId'\n        - deprecated: false\n          description: Task id\n          in: path\n          name: task_id\n          required: true\n          schema:\n            $ref: '#/components/schemas/TaskId'\n        - deprecated: false\n          description: The task version\n          in: header\n          name: If-Match\n          required: true\n          schema:\n            format: int64\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RequestCancelRender'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskRenderCancelled'\n          description: Success\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DomainError'\n          description: Not authorized\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DomainError'\n          description: Task or mixer Not found\n      summary: Cancel rendering a task\n      tags:\n        - tasks\n  /v1/tasks/{app_id}/{task_id}/transport/play:\n    post:\n      deprecated: false\n      description: |\n        Start playing a task\n\n        Start playing a task that is stopped. The request will return when the task has started to play\n        or with an error.\n      operationId: play_task\n      parameters:\n        - deprecated: false\n          description: App id\n          in: path\n          name: app_id\n          required: true\n          schema:\n            $ref: '#/components/schemas/AppId'\n        - deprecated: false\n          description: Task id\n          in: path\n          name: task_id\n          required: true\n          schema:\n            $ref: '#/components/schemas/TaskId'\n        - deprecated: false\n          description: The task version\n          in: header\n          name: If-Match\n          required: true\n          schema:\n            format: int64\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RequestPlay'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskPlaying'\n          description: Success\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DomainError'\n          description: Not authorized\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DomainError'\n          description: Task or mixer Not found\n      summary: Start playing a task\n      tags:\n        - tasks\n  /v1/tasks/{app_id}/{task_id}/transport/render:\n    post:\n      deprecated: false\n      description: |\n        Render a task to a new file\n\n        The domain will check that\n      operationId: render_task\n      parameters:\n        - deprecated: false\n          description: App id\n          in: path\n          name: app_id\n          required: true\n          schema:\n            $ref: '#/components/schemas/AppId'\n        - deprecated: false\n          description: Task id\n          in: path\n          name: task_id\n          required: true\n          schema:\n            $ref: '#/components/schemas/TaskId'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RequestRender'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskRendering'\n          description: Success\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DomainError'\n          description: Not authorized\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DomainError'\n          description: Task or mixer Not found\n      summary: Render a task to a new file\n      tags:\n        - tasks\n  /v1/tasks/{app_id}/{task_id}/transport/seek:\n    post:\n      deprecated: false\n      description: |\n        Seek while task is playing\n\n        If the task is playing, change the playing position.\n      operationId: seek_task\n      parameters:\n        - deprecated: false\n          description: App id\n          in: path\n          name: app_id\n          required: true\n          schema:\n            $ref: '#/components/schemas/AppId'\n        - deprecated: false\n          description: Task id\n          in: path\n          name: task_id\n          required: true\n          schema:\n            $ref: '#/components/schemas/TaskId'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RequestSeek'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskSought'\n          description: Success\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DomainError'\n          description: Not authorized\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DomainError'\n          description: Task Not found\n      summary: Seek while task is playing\n      tags:\n        - tasks\n  /v1/tasks/{app_id}/{task_id}/transport/stop:\n    post:\n      deprecated: false\n      description: |\n        Stop playing a task\n\n        Request to stop a track if the task is playing.\n      operationId: stop_playing_task\n      parameters:\n        - deprecated: false\n          description: App id\n          in: path\n          name: app_id\n          required: true\n          schema:\n            $ref: '#/components/schemas/AppId'\n        - deprecated: false\n          description: Task id\n          in: path\n          name: task_id\n          required: true\n          schema:\n            $ref: '#/components/schemas/TaskId'\n        - deprecated: false\n          description: The task version\n          in: header\n          name: If-Match\n          required: true\n          schema:\n            format: int64\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RequestStopPlay'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskPlayStopped'\n          description: Success\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DomainError'\n          description: Not authorized\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DomainError'\n          description: Task or mixer Not found\n      summary: Stop playing a task\n      tags:\n        - tasks\nservers:\n  - description: Distopik HQ\n    url: https://distopik-hq.eu.audiocloud.io\n  - description: Local development\n    url: http://localhost:7200\ncomponents:\n  schemas:\n    AppId:\n      type: string\n    AppMediaObjectId:\n      type: string\n    AppTaskId:\n      type: string\n    ChannelMask:\n      oneOf:\n        - type: object\n          required:\n            - mono\n          properties:\n            mono:\n              type: integer\n              format: uint\n              minimum: 0.0\n          additionalProperties: false\n        - type: object\n          required:\n            - stereo\n          properties:\n            stereo:\n              type: integer\n              format: uint\n              minimum: 0.0\n          additionalProperties: false\n    ClientId:\n      type: string\n    ClientSocketId:\n      type: object\n      required:\n        - client_id\n        - socket_id\n      properties:\n        client_id:\n          $ref: '#/components/schemas/ClientId'\n        socket_id:\n          $ref: '#/components/schemas/SocketId'\n    CompressedAudio:\n      type: object\n      required:\n        - buffer\n        - last\n        - num_samples\n        - play_id\n        - stream_pos\n        - timeline_pos\n      properties:\n        buffer:\n          type: array\n          items:\n            type: integer\n            format: uint8\n            minimum: 0.0\n        last:\n          type: boolean\n        num_samples:\n          type: integer\n          format: uint\n          minimum: 0.0\n        play_id:\n          $ref: '#/components/schemas/PlayId'\n        stream_pos:\n          type: integer\n          format: uint64\n          minimum: 0.0\n        timeline_pos:\n          type: number\n          format: double\n    ConnectionValues:\n      type: object\n      properties:\n        pan:\n          type:\n            - number\n            - 'null'\n          format: double\n        volume:\n          type:\n            - number\n            - 'null'\n          format: double\n    CreateTask:\n      title: CreateTask\n      description: Create a task on the domain\n      type: object\n      required:\n        - reservations\n        - security\n        - spec\n        - task_id\n      properties:\n        reservations:\n          description: Task reservations\n          allOf:\n            - $ref: '#/components/schemas/CreateTaskReservation'\n        security:\n          description: Security keys and associateds permissions\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/TaskPermissions'\n        spec:\n          description: Task specification\n          allOf:\n            - $ref: '#/components/schemas/CreateTaskSpec'\n        task_id:\n          description: The new app id\n          allOf:\n            - $ref: '#/components/schemas/AppTaskId'\n    CreateTaskReservation:\n      description: Timed resource reservations for the task (must contain all used resources)\n      type: object\n      required:\n        - fixed_instances\n        - from\n        - to\n      properties:\n        fixed_instances:\n          description: Fixed instances reserved for the task\n          type: array\n          items:\n            $ref: '#/components/schemas/FixedInstanceId'\n          uniqueItems: true\n        from:\n          description: Start of the reservation time\n          type: string\n          format: date-time\n        to:\n          description: End of the reservation time\n          type: string\n          format: date-time\n    CreateTaskSpec:\n      description: Create task spec\n      type: object\n      properties:\n        connections:\n          description: Connections between nodes\n          default: { }\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/NodeConnection'\n        dynamic:\n          description: Dynamic instance nodes of the task\n          default: { }\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/DynamicInstanceNode'\n        fixed:\n          description: Fixed instance nodes of the task\n          default: { }\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/FixedInstanceNode'\n        mixers:\n          description: Mixer nodes of the task\n          default: { }\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/MixerNode'\n        tracks:\n          description: Track nodes of the task\n          default: { }\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/TrackNode'\n    DesiredInstancePlayState:\n      oneOf:\n        - type: object\n          required:\n            - playing\n          properties:\n            playing:\n              type: object\n              required:\n                - play_id\n              properties:\n                play_id:\n                  $ref: '#/components/schemas/PlayId'\n          additionalProperties: false\n        - type: object\n          required:\n            - rendering\n          properties:\n            rendering:\n              type: object\n              required:\n                - length\n                - render_id\n              properties:\n                length:\n                  type: number\n                  format: double\n                render_id:\n                  $ref: '#/components/schemas/RenderId'\n          additionalProperties: false\n        - type: object\n          required:\n            - stopped\n          properties:\n            stopped:\n              type: object\n              properties:\n                position:\n                  type:\n                    - number\n                    - 'null'\n                  format: double\n          additionalProperties: false\n    DesiredInstancePowerState:\n      type: string\n      enum:\n        - powered_up\n        - shut_down\n    DesiredTaskPlayState:\n      description: A desired state for the task play state\n      oneOf:\n        - description: Play, with sample rate conversion\n          type: object\n          required:\n            - play\n          properties:\n            play:\n              $ref: '#/components/schemas/RequestPlay'\n          additionalProperties: false\n        - description: Rendering is always a F32 WAV at full sample rate, so nothing else needs to happen here\n          type: object\n          required:\n            - render\n          properties:\n            render:\n              $ref: '#/components/schemas/RequestRender'\n          additionalProperties: false\n        - description: Stopped\n          type: string\n          enum:\n            - stopped\n    DiffStamped_for_AnyValue:\n      description: Difference stamped in milliseconds since a common epoch, in order to pack most efficiently The epoch in InstancePacket is the created_at field of SessionPacket\n      type: array\n      items:\n        - type: integer\n          format: uint\n          minimum: 0.0\n        - true\n      maxItems: 2\n      minItems: 2\n    DiffStamped_for_CompressedAudio:\n      description: Difference stamped in milliseconds since a common epoch, in order to pack most efficiently The epoch in InstancePacket is the created_at field of SessionPacket\n      type: array\n      items:\n        - type: integer\n          format: uint\n          minimum: 0.0\n        - $ref: '#/components/schemas/CompressedAudio'\n      maxItems: 2\n      minItems: 2\n    DiffStamped_for_PadMetering:\n      description: Difference stamped in milliseconds since a common epoch, in order to pack most efficiently The epoch in InstancePacket is the created_at field of SessionPacket\n      type: array\n      items:\n        - type: integer\n          format: uint\n          minimum: 0.0\n        - $ref: '#/components/schemas/PadMetering'\n      maxItems: 2\n      minItems: 2\n    DomainClientMessage:\n      title: DomainClientMessage\n      description: A message sent over a real-time communication channel to a streaming domain connection\n      oneOf:\n        - description: Request to modify task specification\n          type: object\n          required:\n            - request_modify_task_spec\n          properties:\n            request_modify_task_spec:\n              type: object\n              required:\n                - modify_spec\n                - optional\n                - request_id\n                - revision\n                - task_id\n              properties:\n                modify_spec:\n                  description: List of modifications to apply\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/ModifyTaskSpec'\n                optional:\n                  description: If true, the modifications are optional (no error if task already diverged)\n                  type: boolean\n                request_id:\n                  description: Request id (to reference the response to)\n                  allOf:\n                    - $ref: '#/components/schemas/RequestId'\n                revision:\n                  description: Task version\n                  type: integer\n                  format: uint64\n                  minimum: 0.0\n                task_id:\n                  description: Id of the task to modify\n                  allOf:\n                    - $ref: '#/components/schemas/AppTaskId'\n          additionalProperties: false\n        - description: Request a new WebRTC peer connection to the domain\n          type: object\n          required:\n            - request_peer_connection\n          properties:\n            request_peer_connection:\n              type: object\n              required:\n                - request_id\n              properties:\n                request_id:\n                  description: Request id (to reference the response to)\n                  allOf:\n                    - $ref: '#/components/schemas/RequestId'\n          additionalProperties: false\n        - type: object\n          required:\n            - answer_peer_connection\n          properties:\n            answer_peer_connection:\n              type: object\n              required:\n                - answer\n                - request_id\n                - socket_id\n              properties:\n                answer:\n                  description: The domain server's WebRTC offer response (answer)\n                  type: string\n                request_id:\n                  description: Request id (to reference the response to)\n                  allOf:\n                    - $ref: '#/components/schemas/RequestId'\n                socket_id:\n                  description: The socket for which we are generating an anwser\n                  allOf:\n                    - $ref: '#/components/schemas/SocketId'\n          additionalProperties: false\n        - description: Submit a new WebRTC peer connection ICE candidate\n          type: object\n          required:\n            - submit_peer_connection_candidate\n          properties:\n            submit_peer_connection_candidate:\n              type: object\n              required:\n                - request_id\n                - socket_id\n              properties:\n                candidate:\n                  description: ICE Candidate\n                  type:\n                    - string\n                    - 'null'\n                request_id:\n                  description: Request id (to reference the response to)\n                  allOf:\n                    - $ref: '#/components/schemas/RequestId'\n                socket_id:\n                  description: Socket id of the peer connection\n                  allOf:\n                    - $ref: '#/components/schemas/SocketId'\n          additionalProperties: false\n        - description: Request attaching to a task\n          type: object\n          required:\n            - request_attach_to_task\n          properties:\n            request_attach_to_task:\n              type: object\n              required:\n                - request_id\n                - secure_key\n                - task_id\n              properties:\n                request_id:\n                  description: Request id (to reference the response to)\n                  allOf:\n                    - $ref: '#/components/schemas/RequestId'\n                secure_key:\n                  description: Secure key to use for attachment\n                  allOf:\n                    - $ref: '#/components/schemas/SecureKey'\n                task_id:\n                  description: Id of the task to attach to\n                  allOf:\n                    - $ref: '#/components/schemas/AppTaskId'\n          additionalProperties: false\n        - type: object\n          required:\n            - request_detach_from_task\n          properties:\n            request_detach_from_task:\n              type: object\n              required:\n                - request_id\n                - task_id\n              properties:\n                request_id:\n                  description: Request id (to reference the response to)\n                  allOf:\n                    - $ref: '#/components/schemas/RequestId'\n                task_id:\n                  description: Id of the task to attach to\n                  allOf:\n                    - $ref: '#/components/schemas/AppTaskId'\n          additionalProperties: false\n        - type: object\n          required:\n            - pong\n          properties:\n            pong:\n              type: object\n              required:\n                - challenge\n                - response\n              properties:\n                challenge:\n                  type: string\n                response:\n                  type: string\n          additionalProperties: false\n    DomainCommand:\n      title: DomainCommand\n      oneOf:\n        - type: object\n          required:\n            - create\n          properties:\n            create:\n              type: object\n              required:\n                - app_session_id\n                - task\n              properties:\n                app_session_id:\n                  $ref: '#/components/schemas/AppTaskId'\n                task:\n                  $ref: '#/components/schemas/Task'\n          additionalProperties: false\n        - type: object\n          required:\n            - set_spec\n          properties:\n            set_spec:\n              type: object\n              required:\n                - app_session_id\n                - spec\n                - version\n              properties:\n                app_session_id:\n                  $ref: '#/components/schemas/AppTaskId'\n                spec:\n                  $ref: '#/components/schemas/TaskSpec'\n                version:\n                  type: integer\n                  format: uint64\n                  minimum: 0.0\n          additionalProperties: false\n        - type: object\n          required:\n            - set_security\n          properties:\n            set_security:\n              type: object\n              required:\n                - app_session_id\n                - security\n                - version\n              properties:\n                app_session_id:\n                  $ref: '#/components/schemas/AppTaskId'\n                security:\n                  type: object\n                  additionalProperties:\n                    $ref: '#/components/schemas/TaskPermissions'\n                version:\n                  type: integer\n                  format: uint64\n                  minimum: 0.0\n          additionalProperties: false\n        - type: object\n          required:\n            - modify\n          properties:\n            modify:\n              type: object\n              required:\n                - app_session_id\n                - modifications\n                - version\n              properties:\n                app_session_id:\n                  $ref: '#/components/schemas/AppTaskId'\n                modifications:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/ModifyTaskSpec'\n                version:\n                  type: integer\n                  format: uint64\n                  minimum: 0.0\n          additionalProperties: false\n        - type: object\n          required:\n            - set_desired_play_state\n          properties:\n            set_desired_play_state:\n              type: object\n              required:\n                - app_session_id\n                - desired_play_state\n                - version\n              properties:\n                app_session_id:\n                  $ref: '#/components/schemas/AppTaskId'\n                desired_play_state:\n                  $ref: '#/components/schemas/DesiredTaskPlayState'\n                version:\n                  type: integer\n                  format: uint64\n                  minimum: 0.0\n          additionalProperties: false\n        - type: object\n          required:\n            - delete\n          properties:\n            delete:\n              type: object\n              required:\n                - app_session_id\n              properties:\n                app_session_id:\n                  $ref: '#/components/schemas/AppTaskId'\n          additionalProperties: false\n    DomainError:\n      oneOf:\n        - type: object\n          required:\n            - error\n            - instance_id\n            - type\n          properties:\n            error:\n              $ref: '#/components/schemas/InstanceDriverError'\n            instance_id:\n              $ref: '#/components/schemas/FixedInstanceId'\n            type:\n              type: string\n              enum:\n                - instance_driver\n        - type: object\n          required:\n            - engine_id\n            - error\n            - type\n          properties:\n            engine_id:\n              $ref: '#/components/schemas/EngineId'\n            error:\n              $ref: '#/components/schemas/EngineError'\n            type:\n              type: string\n              enum:\n                - engine\n        - type: object\n          required:\n            - engine_id\n            - type\n          properties:\n            engine_id:\n              $ref: '#/components/schemas/EngineId'\n            type:\n              type: string\n              enum:\n                - engine_not_found\n        - type: object\n          required:\n            - socket_id\n            - type\n          properties:\n            socket_id:\n              $ref: '#/components/schemas/ClientSocketId'\n            type:\n              type: string\n              enum:\n                - socket_not_found\n        - type: object\n          required:\n            - socket_id\n            - type\n          properties:\n            socket_id:\n              $ref: '#/components/schemas/ClientSocketId'\n            type:\n              type: string\n              enum:\n                - socket_exists\n        - type: object\n          required:\n            - task_id\n            - type\n          properties:\n            task_id:\n              $ref: '#/components/schemas/AppTaskId'\n            type:\n              type: string\n              enum:\n                - task_not_found\n        - type: object\n          required:\n            - play_id\n            - task_id\n            - type\n          properties:\n            play_id:\n              $ref: '#/components/schemas/PlayId'\n            task_id:\n              $ref: '#/components/schemas/AppTaskId'\n            type:\n              type: string\n              enum:\n                - task_stream_not_found\n        - type: object\n          required:\n            - play_id\n            - serial\n            - task_id\n            - type\n          properties:\n            play_id:\n              $ref: '#/components/schemas/PlayId'\n            serial:\n              type: integer\n              format: uint64\n              minimum: 0.0\n            task_id:\n              $ref: '#/components/schemas/AppTaskId'\n            type:\n              type: string\n              enum:\n                - task_packet_not_found\n        - type: object\n          required:\n            - task_id\n            - type\n          properties:\n            task_id:\n              $ref: '#/components/schemas/AppTaskId'\n            type:\n              type: string\n              enum:\n                - task_exists\n        - type: object\n          required:\n            - revision\n            - task_id\n            - type\n          properties:\n            revision:\n              type: integer\n              format: uint64\n              minimum: 0.0\n            task_id:\n              $ref: '#/components/schemas/AppTaskId'\n            type:\n              type: string\n              enum:\n                - task_modification_revision_out_of_date\n        - type: object\n          required:\n            - error\n            - task_id\n            - type\n          properties:\n            error:\n              $ref: '#/components/schemas/ModifyTaskError'\n            task_id:\n              $ref: '#/components/schemas/AppTaskId'\n            type:\n              type: string\n              enum:\n                - task_modification\n        - type: object\n          required:\n            - instance_id\n            - type\n          properties:\n            instance_id:\n              $ref: '#/components/schemas/FixedInstanceId'\n            type:\n              type: string\n              enum:\n                - instance_not_found\n        - type: object\n          required:\n            - instance_id\n            - operation\n            - type\n          properties:\n            instance_id:\n              $ref: '#/components/schemas/FixedInstanceId'\n            operation:\n              type: string\n            type:\n              type: string\n              enum:\n                - instance_not_capable\n        - type: object\n          required:\n            - media_object_id\n            - type\n          properties:\n            media_object_id:\n              $ref: '#/components/schemas/AppMediaObjectId'\n            type:\n              type: string\n              enum:\n                - media_not_found\n        - type: object\n          required:\n            - error\n            - type\n          properties:\n            error:\n              type: string\n            type:\n              type: string\n              enum:\n                - serialization\n        - type: object\n          required:\n            - call\n            - reason\n            - type\n          properties:\n            call:\n              type: string\n            reason:\n              type: string\n            type:\n              type: string\n              enum:\n                - not_implemented\n        - type: object\n          required:\n            - error\n            - type\n          properties:\n            error:\n              type: string\n            type:\n              type: string\n              enum:\n                - bad_gateway\n        - type: object\n          required:\n            - type\n          properties:\n            type:\n              type: string\n              enum:\n                - authentication_failed\n        - type: object\n          required:\n            - error\n            - type\n          properties:\n            error:\n              type: string\n            type:\n              type: string\n              enum:\n                - task_revision_malformed\n        - type: object\n          required:\n            - required\n            - task_id\n            - type\n          properties:\n            required:\n              $ref: '#/components/schemas/TaskPermissions'\n            task_id:\n              $ref: '#/components/schemas/AppTaskId'\n            type:\n              type: string\n              enum:\n                - task_authtorization_failed\n        - type: object\n          required:\n            - state\n            - task_id\n            - type\n          properties:\n            state:\n              $ref: '#/components/schemas/TaskPlayStateSummary'\n            task_id:\n              $ref: '#/components/schemas/AppTaskId'\n            type:\n              type: string\n              enum:\n                - task_illegal_play_state\n        - type: object\n          required:\n            - error\n            - type\n          properties:\n            error:\n              type: string\n            type:\n              type: string\n              enum:\n                - web_r_t_c_error\n        - type: object\n          required:\n            - error\n            - type\n          properties:\n            error:\n              type: string\n            type:\n              type: string\n              enum:\n                - r_p_c\n    DomainEvent:\n      title: DomainEvent\n      oneOf:\n        - type: object\n          required:\n            - fixed_instance\n          properties:\n            fixed_instance:\n              type: object\n              required:\n                - event\n                - instance_id\n              properties:\n                event:\n                  $ref: '#/components/schemas/InstanceEvent'\n                instance_id:\n                  $ref: '#/components/schemas/FixedInstanceId'\n          additionalProperties: false\n        - type: object\n          required:\n            - task\n          properties:\n            task:\n              type: object\n              required:\n                - event\n                - task_id\n              properties:\n                event:\n                  $ref: '#/components/schemas/TaskEvent'\n                task_id:\n                  $ref: '#/components/schemas/AppTaskId'\n          additionalProperties: false\n    DomainFixedInstanceEngine:\n      description: Configuration of how a fixed instance is connected to the domain\n      type: object\n      required:\n        - engine_id\n        - input_start\n        - output_start\n      properties:\n        engine_id:\n          description: Engine hosting the instance, if any\n          allOf:\n            - $ref: '#/components/schemas/EngineId'\n        input_start:\n          description: Instance inputs start at index on engine\n          type: integer\n          format: uint32\n          minimum: 0.0\n        output_start:\n          description: Instance outputs start at index on engine\n          type: integer\n          format: uint32\n          minimum: 0.0\n    DomainId:\n      type: string\n    DomainMediaInstanceConfig:\n      description: Instance media settings\n      type: object\n      required:\n        - length_ms\n        - renders_rewind_to_start\n      properties:\n        length_ms:\n          description: Lenght of the inserted media in milliseconds\n          type: integer\n          format: uint\n          minimum: 0.0\n        play_rewind:\n          description: |-\n            Behaviour of playing back (streaming) and hitting end of media\n\n            - If null, rewind to start - Otherwise, rewind by specified amount of milliseconds\n          type:\n            - integer\n            - 'null'\n          format: uint\n          minimum: 0.0\n        renders_rewind_to_start:\n          description: WHen rewinding to make space for contiguous renders, should the driver rewind to start or just enough to start rendering\n          type: boolean\n    DomainPowerInstanceConfig:\n      description: Instance power settings\n      type: object\n      required:\n        - channel\n        - instance\n      properties:\n        channel:\n          description: Which channel on the power instance is distributing power to this instance\n          type: integer\n          format: uint\n          minimum: 0.0\n        cool_down_ms:\n          description: Number of milliseconds to wait to cool down after powering down\n          default: 2500\n          type: integer\n          format: uint\n          minimum: 0.0\n        idle_off_delay_ms:\n          description: Number of milliseconds to wait before automatically powering down after idle\n          default: 60000\n          type: integer\n          format: uint\n          minimum: 0.0\n        instance:\n          description: Power instance used to distribute power to this instance\n          allOf:\n            - $ref: '#/components/schemas/FixedInstanceId'\n        warm_up_ms:\n          description: Number of milliseconds to wait to warm up after powering on\n          default: 2500\n          type: integer\n          format: uint\n          minimum: 0.0\n    DomainServerMessage:\n      title: DomainServerMessage\n      description: A mesasge received over a real-time communication channel from a streaming domain connection\n      oneOf:\n        - description: Task generated event\n          type: object\n          required:\n            - task_event\n          properties:\n            task_event:\n              type: object\n              required:\n                - event\n                - task_id\n              properties:\n                event:\n                  description: Event details\n                  allOf:\n                    - $ref: '#/components/schemas/TaskEvent'\n                task_id:\n                  description: Id of the task generating the event\n                  allOf:\n                    - $ref: '#/components/schemas/AppTaskId'\n          additionalProperties: false\n        - description: Response to a request to change a task play state\n          type: object\n          required:\n            - set_desired_play_state_response\n          properties:\n            set_desired_play_state_response:\n              type: object\n              required:\n                - request_id\n                - result\n              properties:\n                request_id:\n                  description: Request id this message is responding to\n                  allOf:\n                    - $ref: '#/components/schemas/RequestId'\n                result:\n                  description: Result\n                  allOf:\n                    - $ref: '#/components/schemas/SerializableResult_for_TaskUpdated_and_DomainError'\n          additionalProperties: false\n        - description: Response to a request to change task specification\n          type: object\n          required:\n            - modify_task_spec_response\n          properties:\n            modify_task_spec_response:\n              type: object\n              required:\n                - request_id\n                - result\n              properties:\n                request_id:\n                  description: Request id this message is responding to\n                  allOf:\n                    - $ref: '#/components/schemas/RequestId'\n                result:\n                  description: Result of the operation\n                  allOf:\n                    - $ref: '#/components/schemas/SerializableResult_for_TaskUpdated_and_DomainError'\n          additionalProperties: false\n        - description: Response to initiating a new peer connection\n          type: object\n          required:\n            - peer_connection_response\n          properties:\n            peer_connection_response:\n              type: object\n              required:\n                - request_id\n                - result\n              properties:\n                request_id:\n                  description: Request id this message is responding to\n                  allOf:\n                    - $ref: '#/components/schemas/RequestId'\n                result:\n                  description: Result of the operation - the assigned socket ID\n                  allOf:\n                    - $ref: '#/components/schemas/SerializableResult_for_PeerConnectionCreated_and_DomainError'\n          additionalProperties: false\n        - type: object\n          required:\n            - answer_peer_connection_response\n          properties:\n            answer_peer_connection_response:\n              type: object\n              required:\n                - request_id\n                - result\n              properties:\n                request_id:\n                  description: Request id this message is responding to\n                  allOf:\n                    - $ref: '#/components/schemas/RequestId'\n                result:\n                  description: Result of the operation or error\n                  allOf:\n                    - $ref: '#/components/schemas/SerializableResult_for_Null_and_DomainError'\n          additionalProperties: false\n        - description: Response to submitting a peer connection candidate\n          type: object\n          required:\n            - peer_connection_candidate_response\n          properties:\n            peer_connection_candidate_response:\n              type: object\n              required:\n                - request_id\n                - result\n              properties:\n                request_id:\n                  description: Request id this message is responding to\n                  allOf:\n                    - $ref: '#/components/schemas/RequestId'\n                result:\n                  description: Result of the operation\n                  allOf:\n                    - $ref: '#/components/schemas/SerializableResult_for_Null_and_DomainError'\n          additionalProperties: false\n        - description: Response to a request to attach the socket to a task\n          type: object\n          required:\n            - attach_to_task_response\n          properties:\n            attach_to_task_response:\n              type: object\n              required:\n                - request_id\n                - result\n              properties:\n                request_id:\n                  description: Request id this message is responding to\n                  allOf:\n                    - $ref: '#/components/schemas/RequestId'\n                result:\n                  description: Result of the operation\n                  allOf:\n                    - $ref: '#/components/schemas/SerializableResult_for_Null_and_DomainError'\n          additionalProperties: false\n        - description: Response to detach the socket from a task\n          type: object\n          required:\n            - detach_from_task_response\n          properties:\n            detach_from_task_response:\n              type: object\n              required:\n                - request_id\n                - result\n              properties:\n                request_id:\n                  description: Request id this message is responding to\n                  allOf:\n                    - $ref: '#/components/schemas/RequestId'\n                result:\n                  description: Result of the operation - will be success even if task does not exist\n                  allOf:\n                    - $ref: '#/components/schemas/SerializableResult_for_Null_and_DomainError'\n          additionalProperties: false\n        - description: Submit a new WebRTC peer connection ICE candidate\n          type: object\n          required:\n            - submit_peer_connection_candidate\n          properties:\n            submit_peer_connection_candidate:\n              type: object\n              required:\n                - socket_id\n              properties:\n                candidate:\n                  description: ICE Candidate\n                  type:\n                    - string\n                    - 'null'\n                socket_id:\n                  description: Socket id of the peer connection\n                  allOf:\n                    - $ref: '#/components/schemas/SocketId'\n          additionalProperties: false\n        - description: Ping message\n          type: object\n          required:\n            - ping\n          properties:\n            ping:\n              type: object\n              required:\n                - challenge\n              properties:\n                challenge:\n                  description: |-\n                    Challenge string\n                    \n                    In a future release, this field will contain a challenge that must be processed and returned to validate that the client is running a valid version of the client code\n                  type: string\n          additionalProperties: false\n        - description: Notify the task permissions on this socket\n          type: object\n          required:\n            - notify_task_permissions\n          properties:\n            notify_task_permissions:\n              type: object\n              required:\n                - permissions\n              properties:\n                permissions:\n                  description: Mapping from each available task to permission information to that task\n                  type: object\n                  additionalProperties:\n                    $ref: '#/components/schemas/TaskPermissions'\n          additionalProperties: false\n    DynamicInstanceLimits:\n      description: Limits on dynamic instances\n      type: object\n      required:\n        - max_instances\n      properties:\n        max_instances:\n          description: |-\n            Maximum number of concurrent dynamic instances\n\n            Takes precedence over over total resource usage. For example, there may be more resources but licensing limits the amount of instances.\n          type: integer\n          format: uint\n          minimum: 0.0\n    DynamicInstanceNode:\n      description: Dynamic node specification\n      type: object\n      required:\n        - model_id\n        - parameters\n      properties:\n        model_id:\n          description: The manufacturer and name of the processing software\n          allOf:\n            - $ref: '#/components/schemas/ModelId'\n        parameters:\n          description: Parameter values\n    DynamicInstanceNodeId:\n      type: string\n    EngineConfig:\n      title: EngineConfig\n      description: Information about a media engine within a domain\n      type: object\n      required:\n        - max_concurrent_tasks\n        - sample_rate\n      properties:\n        additional:\n          description: Additional configuration, specific to the engine configuration\n          default: null\n        dynamic_instances:\n          description: Dynamic instances configured on the audio engine, with associated limits\n          default: { }\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/DynamicInstanceLimits'\n        max_concurrent_tasks:\n          description: Maximum number of concurrent tasks\n          type: integer\n          format: uint\n          minimum: 0.0\n        resources:\n          description: Resources available on the domain\n          default: { }\n          type: object\n          additionalProperties:\n            type: number\n            format: double\n        sample_rate:\n          description: Native audio sample rate\n          type: integer\n          format: uint\n          minimum: 0.0\n    EngineError:\n      oneOf:\n        - type: object\n          required:\n            - track\n            - type\n          properties:\n            track:\n              type: integer\n              format: uint\n              minimum: 0.0\n            type:\n              type: string\n              enum:\n                - track_not_found\n        - type: object\n          required:\n            - item\n            - track\n            - type\n          properties:\n            item:\n              type: integer\n              format: uint\n              minimum: 0.0\n            track:\n              type: integer\n              format: uint\n              minimum: 0.0\n            type:\n              type: string\n              enum:\n                - item_not_found\n        - type: object\n          required:\n            - error\n            - task\n            - type\n          properties:\n            error:\n              $ref: '#/components/schemas/ModifyTaskError'\n            task:\n              $ref: '#/components/schemas/AppTaskId'\n            type:\n              type: string\n              enum:\n                - modify_task\n        - type: object\n          required:\n            - error\n            - type\n          properties:\n            error:\n              type: string\n            type:\n              type: string\n              enum:\n                - internal_error\n        - type: object\n          required:\n            - error\n            - type\n          properties:\n            error:\n              type: string\n            type:\n              type: string\n              enum:\n                - r_p_c\n    EngineId:\n      type: string\n    FixedInstanceConfig:\n      description: Configuration of a fixed instance\n      type: object\n      properties:\n        additional:\n          description: Additional information specific to the driver implementation\n          default: null\n        apps_override:\n          description: Apps allowed to access the instance or null if the domain defaults are used\n          default: null\n          type:\n            - array\n            - 'null'\n          items:\n            $ref: '#/components/schemas/AppId'\n          uniqueItems: true\n        driver:\n          description: Which driver is using\n          default: null\n          anyOf:\n            - $ref: '#/components/schemas/InstanceDriverId'\n            - type: 'null'\n        engine:\n          description: Configuration of how a fixed instance is connected to the domain\n          default: null\n          anyOf:\n            - $ref: '#/components/schemas/DomainFixedInstanceEngine'\n            - type: 'null'\n        maintenance:\n          description: Maintenance windows on this instance\n          default: [ ]\n          type: array\n          items:\n            $ref: '#/components/schemas/Maintenance'\n        media:\n          description: Optional configuration if instance handles media (such as tape machines)\n          default: null\n          anyOf:\n            - $ref: '#/components/schemas/DomainMediaInstanceConfig'\n            - type: 'null'\n        power:\n          description: Optional configuration to powers on/off instance to conserve energy\n          default: null\n          anyOf:\n            - $ref: '#/components/schemas/DomainPowerInstanceConfig'\n            - type: 'null'\n        sidecars:\n          description: Additional models with parameters or reports that are merged with the instance model\n          default: [ ]\n          type: array\n          items:\n            $ref: '#/components/schemas/ModelId'\n          uniqueItems: true\n    FixedInstanceId:\n      type: string\n    FixedInstanceNode:\n      description: Fixed instance node specification\n      type: object\n      required:\n        - instance_id\n        - parameters\n        - wet\n      properties:\n        instance_id:\n          description: The manufacturer, name and instance identifier of the hardware device doing the processing\n          allOf:\n            - $ref: '#/components/schemas/FixedInstanceId'\n        parameters:\n          description: parameters\n        wet:\n          description: |-\n            Dry-wet percentage\n\n            only applicable for instances with same number of inputs and outputs, having 1 or 2 channels.\n          type: number\n          format: double\n    FixedInstanceNodeId:\n      type: string\n    InputPadId:\n      description: A pad that can receive connections on a node inside a task\n      oneOf:\n        - description: Mixer node input\n          type: object\n          required:\n            - mixer\n          properties:\n            mixer:\n              $ref: '#/components/schemas/MixerNodeId'\n          additionalProperties: false\n        - description: Fixed instance node input\n          type: object\n          required:\n            - fixed\n          properties:\n            fixed:\n              $ref: '#/components/schemas/FixedInstanceNodeId'\n          additionalProperties: false\n        - description: Dynamic instance node input\n          type: object\n          required:\n            - dynamic\n          properties:\n            dynamic:\n              $ref: '#/components/schemas/DynamicInstanceNodeId'\n          additionalProperties: false\n    InstanceDriverConfig:\n      title: InstanceDriverConfig\n      type: object\n      required:\n        - instances\n      properties:\n        instances:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/FixedInstanceConfig'\n    InstanceDriverError:\n      oneOf:\n        - type: string\n          enum:\n            - media_not_present\n            - not_power_controller\n            - not_interruptable\n        - type: object\n          required:\n            - instance_not_found\n          properties:\n            instance_not_found:\n              type: object\n              required:\n                - instance\n              properties:\n                instance:\n                  $ref: '#/components/schemas/FixedInstanceId'\n          additionalProperties: false\n        - type: object\n          required:\n            - parameter_does_not_exist\n          properties:\n            parameter_does_not_exist:\n              type: object\n              required:\n                - error\n              properties:\n                error:\n                  type: string\n          additionalProperties: false\n        - type: object\n          required:\n            - parameters_malformed\n          properties:\n            parameters_malformed:\n              type: object\n              required:\n                - error\n              properties:\n                error:\n                  type: string\n          additionalProperties: false\n        - type: object\n          required:\n            - reports_malformed\n          properties:\n            reports_malformed:\n              type: object\n              required:\n                - error\n              properties:\n                error:\n                  type: string\n          additionalProperties: false\n        - type: object\n          required:\n            - config_malformed\n          properties:\n            config_malformed:\n              type: object\n              required:\n                - error\n              properties:\n                error:\n                  type: string\n          additionalProperties: false\n        - type: object\n          required:\n            - i_o_error\n          properties:\n            i_o_error:\n              type: object\n              required:\n                - error\n              properties:\n                error:\n                  type: string\n          additionalProperties: false\n        - type: object\n          required:\n            - driver_not_supported\n          properties:\n            driver_not_supported:\n              type: object\n              required:\n                - manufacturer\n                - name\n              properties:\n                manufacturer:\n                  type: string\n                name:\n                  type: string\n          additionalProperties: false\n        - type: object\n          required:\n            - r_p_c\n          properties:\n            r_p_c:\n              type: object\n              required:\n                - error\n              properties:\n                error:\n                  type: string\n          additionalProperties: false\n    InstanceDriverId:\n      type: string\n    InstanceEvent:\n      oneOf:\n        - type: object\n          required:\n            - state\n          properties:\n            state:\n              type: object\n              required:\n                - connected\n              properties:\n                connected:\n                  $ref: '#/components/schemas/Timestamped_for_Boolean'\n                play:\n                  anyOf:\n                    - $ref: '#/components/schemas/ReportInstancePlayState'\n                    - type: 'null'\n                power:\n                  anyOf:\n                    - $ref: '#/components/schemas/ReportInstancePowerState'\n                    - type: 'null'\n          additionalProperties: false\n        - type: object\n          required:\n            - error\n          properties:\n            error:\n              type: object\n              required:\n                - error\n              properties:\n                error:\n                  type: string\n          additionalProperties: false\n    InstancePlayState:\n      oneOf:\n        - type: string\n          enum:\n            - stopping\n        - type: object\n          required:\n            - preparing_to_play\n          properties:\n            preparing_to_play:\n              type: object\n              required:\n                - play_id\n              properties:\n                play_id:\n                  $ref: '#/components/schemas/PlayId'\n          additionalProperties: false\n        - type: object\n          required:\n            - playing\n          properties:\n            playing:\n              type: object\n              required:\n                - play_id\n              properties:\n                play_id:\n                  $ref: '#/components/schemas/PlayId'\n          additionalProperties: false\n        - type: object\n          required:\n            - preparing_to_render\n          properties:\n            preparing_to_render:\n              type: object\n              required:\n                - length\n                - render_id\n              properties:\n                length:\n                  type: number\n                  format: double\n                render_id:\n                  $ref: '#/components/schemas/RenderId'\n          additionalProperties: false\n        - type: object\n          required:\n            - rendering\n          properties:\n            rendering:\n              type: object\n              required:\n                - length\n                - render_id\n              properties:\n                length:\n                  type: number\n                  format: double\n                render_id:\n                  $ref: '#/components/schemas/RenderId'\n          additionalProperties: false\n        - type: object\n          required:\n            - rewinding\n          properties:\n            rewinding:\n              type: object\n              required:\n                - to\n              properties:\n                to:\n                  type: number\n                  format: double\n          additionalProperties: false\n        - type: object\n          required:\n            - stopped\n          properties:\n            stopped:\n              type: object\n              properties:\n                position:\n                  type:\n                    - number\n                    - 'null'\n                  format: double\n          additionalProperties: false\n    InstancePowerState:\n      type: string\n      enum:\n        - powering_up\n        - shutting_down\n        - powered_up\n        - shut_down\n    Maintenance:\n      description: Maintenance window\n      type: object\n      required:\n        - reason\n        - time\n      properties:\n        reason:\n          description: Human readable string about it, or URL to a web page detailing more information\n          type: string\n        time:\n          description: Time during which maintenance is taking place (may overlap with others)\n          allOf:\n            - $ref: '#/components/schemas/TimeRange'\n    MediaChannels:\n      description: Channel count for media items and track nodes\n      oneOf:\n        - description: Single channel\n          type: string\n          enum:\n            - mono\n        - description: Two channels - left and right\n          type: string\n          enum:\n            - stereo\n    MediaMetadata:\n      type: object\n      required:\n        - bytes\n        - channels\n        - format\n        - sample_rate\n        - seconds\n      properties:\n        bytes:\n          type: integer\n          format: uint64\n          minimum: 0.0\n        channels:\n          $ref: '#/components/schemas/MediaChannels'\n        format:\n          $ref: '#/components/schemas/TrackMediaFormat'\n        sample_rate:\n          type: integer\n          format: uint\n          minimum: 0.0\n        seconds:\n          type: number\n          format: double\n    MediaObject:\n      type: object\n      required:\n        - id\n        - revision\n      properties:\n        id:\n          $ref: '#/components/schemas/AppMediaObjectId'\n        last_used:\n          type:\n            - string\n            - 'null'\n          format: date-time\n        metadata:\n          anyOf:\n            - $ref: '#/components/schemas/MediaMetadata'\n            - type: 'null'\n        path:\n          type:\n            - string\n            - 'null'\n        revision:\n          type: integer\n          format: uint64\n          minimum: 0.0\n    MediaObjectId:\n      type: string\n    MixerNode:\n      description: Mixer node specification\n      type: object\n      required:\n        - input_channels\n        - output_channels\n      properties:\n        input_channels:\n          description: Numvber of input channels on the mixer node\n          type: integer\n          format: uint\n          minimum: 0.0\n        output_channels:\n          description: Number of output channels on the mixer node\n          type: integer\n          format: uint\n          minimum: 0.0\n    MixerNodeId:\n      type: string\n    ModelId:\n      type: string\n    ModifyTask:\n      title: ModifyTask\n      description: Request to modify a task on the domain\n      type: object\n      required:\n        - modify_spec\n      properties:\n        modify_spec:\n          description: A list of modifications to apply\n          type: array\n          items:\n            $ref: '#/components/schemas/ModifyTaskSpec'\n    ModifyTaskError:\n      oneOf:\n        - type: object\n          required:\n            - node_id\n            - type\n          properties:\n            node_id:\n              $ref: '#/components/schemas/TrackNodeId'\n            type:\n              type: string\n              enum:\n                - track_exists\n        - type: object\n          required:\n            - node_id\n            - type\n          properties:\n            node_id:\n              $ref: '#/components/schemas/FixedInstanceNodeId'\n            type:\n              type: string\n              enum:\n                - fixed_instance_exists\n        - type: object\n          required:\n            - node_id\n            - type\n          properties:\n            node_id:\n              $ref: '#/components/schemas/DynamicInstanceNodeId'\n            type:\n              type: string\n              enum:\n                - dynamic_instance_exists\n        - type: object\n          required:\n            - node_id\n            - type\n          properties:\n            node_id:\n              $ref: '#/components/schemas/MixerNodeId'\n            type:\n              type: string\n              enum:\n                - mixer_exists\n        - type: object\n          required:\n            - node_id\n            - type\n          properties:\n            node_id:\n              $ref: '#/components/schemas/TrackNodeId'\n            type:\n              type: string\n              enum:\n                - track_does_not_exist\n        - type: object\n          required:\n            - node_id\n            - type\n          properties:\n            node_id:\n              $ref: '#/components/schemas/FixedInstanceNodeId'\n            type:\n              type: string\n              enum:\n                - fixed_instance_does_not_exist\n        - type: object\n          required:\n            - node_id\n            - type\n          properties:\n            node_id:\n              $ref: '#/components/schemas/DynamicInstanceNodeId'\n            type:\n              type: string\n              enum:\n                - dynamic_instance_does_not_exist\n        - type: object\n          required:\n            - node_id\n            - type\n          properties:\n            node_id:\n              $ref: '#/components/schemas/MixerNodeId'\n            type:\n              type: string\n              enum:\n                - mixer_does_not_exist\n        - type: object\n          required:\n            - connection_id\n            - type\n          properties:\n            connection_id:\n              $ref: '#/components/schemas/NodeConnectionId'\n            type:\n              type: string\n              enum:\n                - connection_does_not_exist\n        - type: object\n          required:\n            - connection_id\n            - type\n          properties:\n            connection_id:\n              $ref: '#/components/schemas/NodeConnectionId'\n            type:\n              type: string\n              enum:\n                - connection_exists\n        - type: object\n          required:\n            - connection_id\n            - message\n            - type\n          properties:\n            connection_id:\n              $ref: '#/components/schemas/NodeConnectionId'\n            message:\n              type: string\n            type:\n              type: string\n              enum:\n                - connection_malformed\n        - type: object\n          required:\n            - media_id\n            - node_id\n            - type\n          properties:\n            media_id:\n              $ref: '#/components/schemas/TrackMediaId'\n            node_id:\n              $ref: '#/components/schemas/TrackNodeId'\n            type:\n              type: string\n              enum:\n                - media_exists\n        - type: object\n          required:\n            - media_id\n            - node_id\n            - type\n          properties:\n            media_id:\n              $ref: '#/components/schemas/TrackMediaId'\n            node_id:\n              $ref: '#/components/schemas/TrackNodeId'\n            type:\n              type: string\n              enum:\n                - media_does_not_exist\n        - type: object\n          required:\n            - type\n          properties:\n            type:\n              type: string\n              enum:\n                - cycle_detected\n    ModifyTaskSpec:\n      description: Modify task structure\n      oneOf:\n        - description: Add a track node to the task\n          type: object\n          required:\n            - add_track\n          properties:\n            add_track:\n              type: object\n              required:\n                - channels\n                - track_id\n              properties:\n                channels:\n                  description: Number of channels for the track node\n                  allOf:\n                    - $ref: '#/components/schemas/MediaChannels'\n                track_id:\n                  description: New track node id\n                  allOf:\n                    - $ref: '#/components/schemas/TrackNodeId'\n          additionalProperties: false\n        - description: Add media to a track node\n          type: object\n          required:\n            - add_track_media\n          properties:\n            add_track_media:\n              type: object\n              required:\n                - media_id\n                - spec\n                - track_id\n              properties:\n                media_id:\n                  description: Media id within the track node\n                  allOf:\n                    - $ref: '#/components/schemas/TrackMediaId'\n                spec:\n                  description: Media object specification\n                  allOf:\n                    - $ref: '#/components/schemas/TrackMedia'\n                track_id:\n                  description: Track node id\n                  allOf:\n                    - $ref: '#/components/schemas/TrackNodeId'\n          additionalProperties: false\n        - description: Update track media on a track node\n          type: object\n          required:\n            - update_track_media\n          properties:\n            update_track_media:\n              type: object\n              required:\n                - media_id\n                - track_id\n                - update\n              properties:\n                media_id:\n                  description: Media id within the track node\n                  allOf:\n                    - $ref: '#/components/schemas/TrackMediaId'\n                track_id:\n                  description: Track node id\n                  allOf:\n                    - $ref: '#/components/schemas/TrackNodeId'\n                update:\n                  description: Media object update\n                  allOf:\n                    - $ref: '#/components/schemas/UpdateTaskTrackMedia'\n          additionalProperties: false\n        - description: Delete track media from a track node\n          type: object\n          required:\n            - delete_track_media\n          properties:\n            delete_track_media:\n              type: object\n              required:\n                - media_id\n                - track_id\n              properties:\n                media_id:\n                  description: Media id within the track node\n                  allOf:\n                    - $ref: '#/components/schemas/TrackMediaId'\n                track_id:\n                  description: Track node id\n                  allOf:\n                    - $ref: '#/components/schemas/TrackNodeId'\n          additionalProperties: false\n        - description: Delete a track node from the task (including all media and referencing connections)\n          type: object\n          required:\n            - delete_track\n          properties:\n            delete_track:\n              type: object\n              required:\n                - track_id\n              properties:\n                track_id:\n                  description: Track node id\n                  allOf:\n                    - $ref: '#/components/schemas/TrackNodeId'\n          additionalProperties: false\n        - description: Add a fixed instance node to the task\n          type: object\n          required:\n            - add_fixed_instance\n          properties:\n            add_fixed_instance:\n              type: object\n              required:\n                - fixed_id\n                - spec\n              properties:\n                fixed_id:\n                  description: Fixed instance node id\n                  allOf:\n                    - $ref: '#/components/schemas/FixedInstanceNodeId'\n                spec:\n                  description: Fixed instance node processing specification\n                  allOf:\n                    - $ref: '#/components/schemas/FixedInstanceNode'\n          additionalProperties: false\n        - description: Add a dynamic instance node to the task\n          type: object\n          required:\n            - add_dynamic_instance\n          properties:\n            add_dynamic_instance:\n              type: object\n              required:\n                - dynamic_id\n                - spec\n              properties:\n                dynamic_id:\n                  description: Dynamic instance node id\n                  allOf:\n                    - $ref: '#/components/schemas/DynamicInstanceNodeId'\n                spec:\n                  description: Dynamic instance node processing specification\n                  allOf:\n                    - $ref: '#/components/schemas/DynamicInstanceNode'\n          additionalProperties: false\n        - description: Add a mixer node to the task\n          type: object\n          required:\n            - add_mixer\n          properties:\n            add_mixer:\n              type: object\n              required:\n                - mixer_id\n                - spec\n              properties:\n                mixer_id:\n                  description: Mixer node id\n                  allOf:\n                    - $ref: '#/components/schemas/MixerNodeId'\n                spec:\n                  description: Mixer node processing specification\n                  allOf:\n                    - $ref: '#/components/schemas/MixerNode'\n          additionalProperties: false\n        - description: Delete a mixer node from the task (including all referencing connections)\n          type: object\n          required:\n            - delete_mixer\n          properties:\n            delete_mixer:\n              type: object\n              required:\n                - mixer_id\n              properties:\n                mixer_id:\n                  description: Moxer node id\n                  allOf:\n                    - $ref: '#/components/schemas/MixerNodeId'\n          additionalProperties: false\n        - description: Delete a fixed instance node from the task (including all referencing connections)\n          type: object\n          required:\n            - delete_fixed_instance\n          properties:\n            delete_fixed_instance:\n              type: object\n              required:\n                - fixed_id\n              properties:\n                fixed_id:\n                  description: Fixed instance node id\n                  allOf:\n                    - $ref: '#/components/schemas/FixedInstanceNodeId'\n          additionalProperties: false\n        - description: Delete dynamic instance node from the task (including all referencing connections)\n          type: object\n          required:\n            - delete_dynamic_instance\n          properties:\n            delete_dynamic_instance:\n              type: object\n              required:\n                - dynamic_id\n              properties:\n                dynamic_id:\n                  description: Dynamic instance node id\n                  allOf:\n                    - $ref: '#/components/schemas/DynamicInstanceNodeId'\n          additionalProperties: false\n        - description: Delete a connection from the task (preserving the referenced nodes even if they are now unconnected)\n          type: object\n          required:\n            - delete_connection\n          properties:\n            delete_connection:\n              type: object\n              required:\n                - connection_id\n              properties:\n                connection_id:\n                  description: Connection id\n                  allOf:\n                    - $ref: '#/components/schemas/NodeConnectionId'\n          additionalProperties: false\n        - description: Add a connection to the task\n          type: object\n          required:\n            - add_connection\n          properties:\n            add_connection:\n              type: object\n              required:\n                - connection_id\n                - from\n                - from_channels\n                - pan\n                - to\n                - to_channels\n                - volume\n              properties:\n                connection_id:\n                  description: Connection id\n                  allOf:\n                    - $ref: '#/components/schemas/NodeConnectionId'\n                from:\n                  description: Source node pad\n                  allOf:\n                    - $ref: '#/components/schemas/OutputPadId'\n                from_channels:\n                  description: Source channel mask\n                  allOf:\n                    - $ref: '#/components/schemas/ChannelMask'\n                pan:\n                  description: Panning adjustment on the audio passing through the connection\n                  type: number\n                  format: double\n                to:\n                  description: Destination node pad\n                  allOf:\n                    - $ref: '#/components/schemas/InputPadId'\n                to_channels:\n                  description: Destination channel mask\n                  allOf:\n                    - $ref: '#/components/schemas/ChannelMask'\n                volume:\n                  description: Volume adjustment on audio passing through the connection\n                  type: number\n                  format: double\n          additionalProperties: false\n        - description: Set connection values\n          type: object\n          required:\n            - set_connection_parameter_values\n          properties:\n            set_connection_parameter_values:\n              type: object\n              required:\n                - connection_id\n                - values\n              properties:\n                connection_id:\n                  description: Connection id\n                  allOf:\n                    - $ref: '#/components/schemas/NodeConnectionId'\n                values:\n                  description: Values (parameters) on the connection\n                  allOf:\n                    - $ref: '#/components/schemas/ConnectionValues'\n          additionalProperties: false\n        - description: Set fixed instance node values\n          type: object\n          required:\n            - set_fixed_instance_parameter_values\n          properties:\n            set_fixed_instance_parameter_values:\n              type: object\n              required:\n                - fixed_id\n                - values\n              properties:\n                fixed_id:\n                  description: Fixed instance node id\n                  allOf:\n                    - $ref: '#/components/schemas/FixedInstanceNodeId'\n                values:\n                  description: Values to set\n          additionalProperties: false\n        - description: Set dynamic instance node values\n          type: object\n          required:\n            - set_dynamic_instance_parameter_values\n          properties:\n            set_dynamic_instance_parameter_values:\n              type: object\n              required:\n                - dynamic_id\n                - values\n              properties:\n                dynamic_id:\n                  description: Dynamic instance node id\n                  allOf:\n                    - $ref: '#/components/schemas/DynamicInstanceNodeId'\n                values:\n                  description: Values to set\n          additionalProperties: false\n    NodeConnection:\n      description: Connection between nodes in a task\n      type: object\n      required:\n        - from\n        - from_channels\n        - pan\n        - to\n        - to_channels\n        - volume\n      properties:\n        from:\n          description: Source node pad\n          allOf:\n            - $ref: '#/components/schemas/OutputPadId'\n        from_channels:\n          description: Source channel mask\n          allOf:\n            - $ref: '#/components/schemas/ChannelMask'\n        pan:\n          description: |-\n            Panning adjustment\n\n            Zero is centered, -1 is fully left, 1 is fully right\n          type: number\n          format: double\n        to:\n          description: Destination node pad\n          allOf:\n            - $ref: '#/components/schemas/InputPadId'\n        to_channels:\n          description: Destination channel mask\n          allOf:\n            - $ref: '#/components/schemas/ChannelMask'\n        volume:\n          description: Volume adjustment as a factor\n          type: number\n          format: double\n    NodeConnectionId:\n      type: string\n    OutputPadId:\n      description: A pad that can receive connections on a node inside a task\n      oneOf:\n        - description: Mixer node output\n          type: object\n          required:\n            - mixer\n          properties:\n            mixer:\n              $ref: '#/components/schemas/MixerNodeId'\n          additionalProperties: false\n        - description: Fixed instance node output\n          type: object\n          required:\n            - fixed\n          properties:\n            fixed:\n              $ref: '#/components/schemas/FixedInstanceNodeId'\n          additionalProperties: false\n        - description: Dynamic instance node output\n          type: object\n          required:\n            - dynamic\n          properties:\n            dynamic:\n              $ref: '#/components/schemas/DynamicInstanceNodeId'\n          additionalProperties: false\n        - description: Track node output\n          type: object\n          required:\n            - track\n          properties:\n            track:\n              $ref: '#/components/schemas/TrackNodeId'\n          additionalProperties: false\n    PadMetering:\n      type: object\n      required:\n        - volume\n      properties:\n        volume:\n          type: array\n          items:\n            type: number\n            format: double\n    PeerConnectionCreated:\n      description: Confirmation that the socket has been created normally from the domain client offer\n      oneOf:\n        - description: Connection created normally\n          type: object\n          required:\n            - created\n          properties:\n            created:\n              type: object\n              required:\n                - remote_description\n                - socket_id\n              properties:\n                remote_description:\n                  description: The domain server's WebRTC offer\n                  type: string\n                socket_id:\n                  description: Created socket id\n                  allOf:\n                    - $ref: '#/components/schemas/ClientSocketId'\n          additionalProperties: false\n    PlayBitDepth:\n      type: string\n      enum:\n        - '24'\n        - '16'\n    PlayId:\n      type: string\n    RenderId:\n      type: string\n    ReportInstancePlayState:\n      type: object\n      required:\n        - actual\n        - desired\n        - media\n      properties:\n        actual:\n          $ref: '#/components/schemas/Timestamped_for_InstancePlayState'\n        desired:\n          $ref: '#/components/schemas/Timestamped_for_DesiredInstancePlayState'\n        media:\n          $ref: '#/components/schemas/Timestamped_for_Nullable_double'\n    ReportInstancePowerState:\n      type: object\n      required:\n        - actual\n        - desired\n      properties:\n        actual:\n          $ref: '#/components/schemas/Timestamped_for_InstancePowerState'\n        desired:\n          $ref: '#/components/schemas/Timestamped_for_DesiredInstancePowerState'\n    RequestCancelRender:\n      title: RequestCancelRender\n      type: object\n      required:\n        - render_id\n      properties:\n        render_id:\n          $ref: '#/components/schemas/RenderId'\n    RequestChangeMixer:\n      title: RequestChangeMixer\n      type: object\n      required:\n        - mixer_id\n        - play_id\n      properties:\n        mixer_id:\n          $ref: '#/components/schemas/MixerNodeId'\n        play_id:\n          $ref: '#/components/schemas/PlayId'\n    RequestId:\n      type: string\n    RequestPlay:\n      title: RequestPlay\n      type: object\n      required:\n        - bit_depth\n        - looping\n        - mixer_id\n        - play_id\n        - sample_rate\n        - segment\n        - start_at\n      properties:\n        bit_depth:\n          $ref: '#/components/schemas/PlayBitDepth'\n        looping:\n          type: boolean\n        mixer_id:\n          $ref: '#/components/schemas/MixerNodeId'\n        play_id:\n          $ref: '#/components/schemas/PlayId'\n        sample_rate:\n          $ref: '#/components/schemas/SampleRate'\n        segment:\n          $ref: '#/components/schemas/TimeSegment'\n        start_at:\n          type: number\n          format: double\n    RequestRender:\n      type: object\n      required:\n        - mixer_id\n        - object_id\n        - render_id\n        - segment\n      properties:\n        mixer_id:\n          $ref: '#/components/schemas/MixerNodeId'\n        object_id:\n          $ref: '#/components/schemas/AppMediaObjectId'\n        render_id:\n          $ref: '#/components/schemas/RenderId'\n        segment:\n          $ref: '#/components/schemas/TimeSegment'\n    RequestSeek:\n      title: RequestSeek\n      type: object\n      required:\n        - looping\n        - play_id\n        - segment\n        - start_at\n      properties:\n        looping:\n          type: boolean\n        play_id:\n          $ref: '#/components/schemas/PlayId'\n        segment:\n          $ref: '#/components/schemas/TimeSegment'\n        start_at:\n          type: number\n          format: double\n    RequestStopPlay:\n      title: RequestStopPlay\n      type: object\n      required:\n        - play_id\n      properties:\n        play_id:\n          $ref: '#/components/schemas/PlayId'\n    SampleRate:\n      type: string\n      enum:\n        - '192'\n        - '96'\n        - '88.2'\n        - '48'\n        - '44.1'\n    SecureKey:\n      type: string\n    SerializableResult_for_Null_and_DomainError:\n      oneOf:\n        - type: object\n          required:\n            - ok\n          properties:\n            ok:\n              type: 'null'\n          additionalProperties: false\n        - type: object\n          required:\n            - error\n          properties:\n            error:\n              $ref: '#/components/schemas/DomainError'\n          additionalProperties: false\n    SerializableResult_for_PeerConnectionCreated_and_DomainError:\n      oneOf:\n        - type: object\n          required:\n            - ok\n          properties:\n            ok:\n              $ref: '#/components/schemas/PeerConnectionCreated'\n          additionalProperties: false\n        - type: object\n          required:\n            - error\n          properties:\n            error:\n              $ref: '#/components/schemas/DomainError'\n          additionalProperties: false\n    SerializableResult_for_TaskUpdated_and_DomainError:\n      oneOf:\n        - type: object\n          required:\n            - ok\n          properties:\n            ok:\n              $ref: '#/components/schemas/TaskUpdated'\n          additionalProperties: false\n        - type: object\n          required:\n            - error\n          properties:\n            error:\n              $ref: '#/components/schemas/DomainError'\n          additionalProperties: false\n    SocketId:\n      type: string\n    StreamStats:\n      title: StreamStats\n      type: object\n      required:\n        - id\n        - play_id\n        - state\n      properties:\n        high:\n          type:\n            - integer\n            - 'null'\n          format: uint64\n          minimum: 0.0\n        id:\n          $ref: '#/components/schemas/AppTaskId'\n        low:\n          type:\n            - integer\n            - 'null'\n          format: uint64\n          minimum: 0.0\n        play_id:\n          $ref: '#/components/schemas/PlayId'\n        state:\n          $ref: '#/components/schemas/TaskPlayState'\n    StreamingPacket:\n      title: StreamingPacket\n      type: object\n      required:\n        - audio\n        - created_at\n        - instance_metering\n        - pad_metering\n        - play_id\n        - serial\n        - streaming_pos\n        - timeline_pos\n      properties:\n        audio:\n          type: array\n          items:\n            $ref: '#/components/schemas/DiffStamped_for_CompressedAudio'\n        created_at:\n          type: string\n          format: date-time\n        instance_metering:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              $ref: '#/components/schemas/DiffStamped_for_AnyValue'\n        pad_metering:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              $ref: '#/components/schemas/DiffStamped_for_PadMetering'\n        play_id:\n          $ref: '#/components/schemas/PlayId'\n        serial:\n          type: integer\n          format: uint64\n          minimum: 0.0\n        streaming_pos:\n          type: integer\n          format: uint64\n          minimum: 0.0\n        timeline_pos:\n          type: number\n          format: double\n    Task:\n      description: Task information\n      type: object\n      required:\n        - domain_id\n        - reservations\n        - security\n        - spec\n      properties:\n        domain_id:\n          description: Domain executing the task\n          allOf:\n            - $ref: '#/components/schemas/DomainId'\n        reservations:\n          description: Task reservations\n          allOf:\n            - $ref: '#/components/schemas/TaskReservation'\n        security:\n          description: Security keys and associateds permissions\n          allOf:\n            - $ref: '#/components/schemas/TaskSecurity'\n        spec:\n          description: Task specification\n          allOf:\n            - $ref: '#/components/schemas/TaskSpec'\n    TaskCreated:\n      title: TaskCreated\n      description: Response to creating a task on the domain\n      oneOf:\n        - description: Created normally\n          type: object\n          required:\n            - created\n          properties:\n            created:\n              type: object\n              required:\n                - task_id\n              properties:\n                task_id:\n                  description: Task Id\n                  allOf:\n                    - $ref: '#/components/schemas/AppTaskId'\n          additionalProperties: false\n    TaskDeleted:\n      title: TaskDeleted\n      oneOf:\n        - type: object\n          required:\n            - deleted\n          properties:\n            deleted:\n              type: object\n              required:\n                - id\n              properties:\n                id:\n                  $ref: '#/components/schemas/AppTaskId'\n          additionalProperties: false\n    TaskEvent:\n      oneOf:\n        - type: string\n          enum:\n            - deleted\n        - type: object\n          required:\n            - play_state\n          properties:\n            play_state:\n              type: object\n              required:\n                - current\n                - desired\n                - waiting_instances\n                - waiting_media\n              properties:\n                current:\n                  $ref: '#/components/schemas/Timestamped_for_TaskPlayState'\n                desired:\n                  $ref: '#/components/schemas/Timestamped_for_DesiredTaskPlayState'\n                waiting_instances:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/FixedInstanceId'\n                  uniqueItems: true\n                waiting_media:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/AppMediaObjectId'\n                  uniqueItems: true\n          additionalProperties: false\n        - type: object\n          required:\n            - streaming_packet\n          properties:\n            streaming_packet:\n              type: object\n              required:\n                - packet\n              properties:\n                packet:\n                  $ref: '#/components/schemas/StreamingPacket'\n          additionalProperties: false\n    TaskId:\n      title: TaskId\n      type: string\n    TaskPermissions:\n      type: object\n      required:\n        - audio\n        - media\n        - parameters\n        - structure\n        - transport\n      properties:\n        audio:\n          type: boolean\n        media:\n          type: boolean\n        parameters:\n          type: boolean\n        structure:\n          type: boolean\n        transport:\n          type: boolean\n    TaskPlayState:\n      oneOf:\n        - type: string\n          enum:\n            - stopped\n        - type: object\n          required:\n            - preparing_to_play\n          properties:\n            preparing_to_play:\n              $ref: '#/components/schemas/RequestPlay'\n          additionalProperties: false\n        - type: object\n          required:\n            - preparing_to_render\n          properties:\n            preparing_to_render:\n              $ref: '#/components/schemas/RequestRender'\n          additionalProperties: false\n        - type: object\n          required:\n            - playing\n          properties:\n            playing:\n              $ref: '#/components/schemas/RequestPlay'\n          additionalProperties: false\n        - type: object\n          required:\n            - rendering\n          properties:\n            rendering:\n              $ref: '#/components/schemas/RequestRender'\n          additionalProperties: false\n        - type: object\n          required:\n            - stopping_play\n          properties:\n            stopping_play:\n              $ref: '#/components/schemas/PlayId'\n          additionalProperties: false\n        - type: object\n          required:\n            - stopping_render\n          properties:\n            stopping_render:\n              $ref: '#/components/schemas/RenderId'\n          additionalProperties: false\n    TaskPlayStateSummary:\n      type: string\n      enum:\n        - preparing_to_play\n        - preparing_to_render\n        - playing\n        - rendering\n        - stopping_play\n        - stopping_render\n        - stopped\n    TaskPlayStopped:\n      title: TaskPlayStopped\n      oneOf:\n        - type: object\n          required:\n            - stopped\n          properties:\n            stopped:\n              type: object\n              required:\n                - play_id\n                - task_id\n              properties:\n                play_id:\n                  $ref: '#/components/schemas/PlayId'\n                task_id:\n                  $ref: '#/components/schemas/AppTaskId'\n          additionalProperties: false\n    TaskPlaying:\n      title: TaskPlaying\n      oneOf:\n        - type: object\n          required:\n            - playing\n          properties:\n            playing:\n              type: object\n              required:\n                - play_id\n                - task_id\n              properties:\n                play_id:\n                  $ref: '#/components/schemas/PlayId'\n                task_id:\n                  $ref: '#/components/schemas/AppTaskId'\n          additionalProperties: false\n    TaskRenderCancelled:\n      title: TaskRenderCancelled\n      oneOf:\n        - type: object\n          required:\n            - cancelled\n          properties:\n            cancelled:\n              type: object\n              required:\n                - render_id\n                - task_id\n              properties:\n                render_id:\n                  $ref: '#/components/schemas/RenderId'\n                task_id:\n                  $ref: '#/components/schemas/AppTaskId'\n          additionalProperties: false\n    TaskRendering:\n      title: TaskRendering\n      oneOf:\n        - type: object\n          required:\n            - rendering\n          properties:\n            rendering:\n              type: object\n              required:\n                - render_id\n                - task_id\n              properties:\n                render_id:\n                  $ref: '#/components/schemas/RenderId'\n                task_id:\n                  $ref: '#/components/schemas/AppTaskId'\n          additionalProperties: false\n    TaskReservation:\n      description: Timed resource reservations for the task (must contain all used resources)\n      type: object\n      required:\n        - fixed_instances\n        - from\n        - revision\n        - to\n      properties:\n        fixed_instances:\n          description: Fixed instances reserved for the task\n          type: array\n          items:\n            $ref: '#/components/schemas/FixedInstanceId'\n          uniqueItems: true\n        from:\n          description: Start of the reservation time\n          type: string\n          format: date-time\n        revision:\n          description: Revision number - starts at zero and change of task reservation increments it\n          type: integer\n          format: uint64\n          minimum: 0.0\n        to:\n          description: End of the reservation time\n          type: string\n          format: date-time\n    TaskSecurity:\n      description: Information about access keys and permissions of a task\n      type: object\n      required:\n        - security\n      properties:\n        revision:\n          description: Revision number - starts at zero and is incremented at every change of task security\n          default: 0\n          type: integer\n          format: uint64\n          minimum: 0.0\n        security:\n          description: Security settings per secure key\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/TaskPermissions'\n    TaskSought:\n      title: TaskSought\n      oneOf:\n        - type: object\n          required:\n            - sought\n          properties:\n            sought:\n              type: object\n              required:\n                - play_id\n                - task_id\n              properties:\n                play_id:\n                  $ref: '#/components/schemas/PlayId'\n                task_id:\n                  $ref: '#/components/schemas/AppTaskId'\n          additionalProperties: false\n    TaskSpec:\n      description: Task specification\n      type: object\n      properties:\n        connections:\n          description: Connections between nodes\n          default: { }\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/NodeConnection'\n        dynamic:\n          description: Dynamic instance nodes of the task\n          default: { }\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/DynamicInstanceNode'\n        fixed:\n          description: Fixed instance nodes of the task\n          default: { }\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/FixedInstanceNode'\n        mixers:\n          description: Mixer nodes of the task\n          default: { }\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/MixerNode'\n        revision:\n          description: The revision number of the specification (starts at zero, increments for every change)\n          default: 0\n          type: integer\n          format: uint64\n          minimum: 0.0\n        tracks:\n          description: Track nodes of the task\n          default: { }\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/TrackNode'\n    TaskSummary:\n      description: A summary of a task\n      type: object\n      required:\n        - play_state\n        - task_id\n        - waiting_for_instances\n        - waiting_for_media\n      properties:\n        play_state:\n          description: Current play sate\n          allOf:\n            - $ref: '#/components/schemas/TaskPlayState'\n        task_id:\n          description: Task Id\n          allOf:\n            - $ref: '#/components/schemas/AppTaskId'\n        waiting_for_instances:\n          description: List of instances that are blocking play state change\n          type: array\n          items:\n            $ref: '#/components/schemas/FixedInstanceId'\n          uniqueItems: true\n        waiting_for_media:\n          description: List of media that are blocking or influencing completeness of play state change\n          type: array\n          items:\n            $ref: '#/components/schemas/AppMediaObjectId'\n          uniqueItems: true\n    TaskSummaryList:\n      title: Array_of_TaskSummary\n      type: array\n      items:\n        $ref: '#/components/schemas/TaskSummary'\n    TaskUpdated:\n      title: TaskUpdated\n      description: Response to modifying a task on the domain\n      oneOf:\n        - description: Updated normally\n          type: object\n          required:\n            - updated\n          properties:\n            updated:\n              type: object\n              required:\n                - revision\n                - task_id\n              properties:\n                revision:\n                  description: New version to be used with `If-Matches` when submitting further modifications\n                  type: integer\n                  format: uint64\n                  minimum: 0.0\n                task_id:\n                  description: Task Id\n                  allOf:\n                    - $ref: '#/components/schemas/AppTaskId'\n          additionalProperties: false\n        - description: Did not update because a newer revision was specified and update is optional\n          type: object\n          required:\n            - ignored\n          properties:\n            ignored:\n              type: object\n              required:\n                - revision\n                - task_id\n              properties:\n                revision:\n                  description: Current version to be used with `If-Matches` when submitting further modifications\n                  type: integer\n                  format: uint64\n                  minimum: 0.0\n                task_id:\n                  description: Task Id\n                  allOf:\n                    - $ref: '#/components/schemas/AppTaskId'\n          additionalProperties: false\n    TaskWithStatusAndSpec:\n      title: TaskWithStatusAndSpec\n      description: A more complete information about a task\n      type: object\n      required:\n        - instances\n        - media\n        - play_state\n        - spec\n        - task_id\n      properties:\n        instances:\n          description: State of attatched fixed instances\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/InstancePlayState'\n        media:\n          description: State of attached media objects\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/MediaObject'\n        play_state:\n          description: Current play state\n          allOf:\n            - $ref: '#/components/schemas/TaskPlayState'\n        spec:\n          description: The current specification of the task\n          allOf:\n            - $ref: '#/components/schemas/TaskSpec'\n        task_id:\n          description: Task Id\n          allOf:\n            - $ref: '#/components/schemas/AppTaskId'\n    TimeRange:\n      type: object\n      required:\n        - from\n        - to\n      properties:\n        from:\n          type: string\n          format: date-time\n        to:\n          type: string\n          format: date-time\n    TimeSegment:\n      type: object\n      required:\n        - length\n        - start\n      properties:\n        length:\n          type: number\n          format: double\n        start:\n          type: number\n          format: double\n    Timestamped_for_Boolean:\n      type: array\n      items:\n        - type: string\n          format: date-time\n        - type: boolean\n      maxItems: 2\n      minItems: 2\n    Timestamped_for_DesiredInstancePlayState:\n      type: array\n      items:\n        - type: string\n          format: date-time\n        - $ref: '#/components/schemas/DesiredInstancePlayState'\n      maxItems: 2\n      minItems: 2\n    Timestamped_for_DesiredInstancePowerState:\n      type: array\n      items:\n        - type: string\n          format: date-time\n        - $ref: '#/components/schemas/DesiredInstancePowerState'\n      maxItems: 2\n      minItems: 2\n    Timestamped_for_DesiredTaskPlayState:\n      type: array\n      items:\n        - type: string\n          format: date-time\n        - $ref: '#/components/schemas/DesiredTaskPlayState'\n      maxItems: 2\n      minItems: 2\n    Timestamped_for_InstancePlayState:\n      type: array\n      items:\n        - type: string\n          format: date-time\n        - $ref: '#/components/schemas/InstancePlayState'\n      maxItems: 2\n      minItems: 2\n    Timestamped_for_InstancePowerState:\n      type: array\n      items:\n        - type: string\n          format: date-time\n        - $ref: '#/components/schemas/InstancePowerState'\n      maxItems: 2\n      minItems: 2\n    Timestamped_for_Nullable_double:\n      type: array\n      items:\n        - type: string\n          format: date-time\n        - type:\n            - number\n            - 'null'\n          format: double\n      maxItems: 2\n      minItems: 2\n    Timestamped_for_TaskPlayState:\n      type: array\n      items:\n        - type: string\n          format: date-time\n        - $ref: '#/components/schemas/TaskPlayState'\n      maxItems: 2\n      minItems: 2\n    TrackMedia:\n      description: Media item specification\n      type: object\n      required:\n        - channels\n        - format\n        - media_segment\n        - object_id\n        - timeline_segment\n      properties:\n        channels:\n          description: Number of channels\n          allOf:\n            - $ref: '#/components/schemas/MediaChannels'\n        format:\n          description: Media format\n          allOf:\n            - $ref: '#/components/schemas/TrackMediaFormat'\n        media_segment:\n          description: Subset of media that is used\n          allOf:\n            - $ref: '#/components/schemas/TimeSegment'\n        object_id:\n          description: Source media object id\n          allOf:\n            - $ref: '#/components/schemas/MediaObjectId'\n        timeline_segment:\n          description: Where to place the media in the task timeline\n          allOf:\n            - $ref: '#/components/schemas/TimeSegment'\n    TrackMediaFormat:\n      type: string\n      enum:\n        - wave\n        - mp3\n        - flac\n        - wavpack\n    TrackMediaId:\n      type: string\n    TrackNode:\n      description: Track node specification\n      type: object\n      required:\n        - channels\n        - media\n      properties:\n        channels:\n          description: Number of channels\n          allOf:\n            - $ref: '#/components/schemas/MediaChannels'\n        media:\n          description: Media items present on the track\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/TrackMedia'\n    TrackNodeId:\n      type: string\n    UpdateTaskTrackMedia:\n      type: object\n      properties:\n        channels:\n          anyOf:\n            - $ref: '#/components/schemas/MediaChannels'\n            - type: 'null'\n        media_segment:\n          anyOf:\n            - $ref: '#/components/schemas/TimeSegment'\n            - type: 'null'\n        object_id:\n          anyOf:\n            - $ref: '#/components/schemas/MediaObjectId'\n            - type: 'null'\n        timeline_segment:\n          anyOf:\n            - $ref: '#/components/schemas/TimeSegment'\n            - type: 'null'\n",
			"canonicalURL": "/github.com/audiocloud/audiocloud@56531e13d2a0601c635db44185e8f555eab699e0/-/blob/specs/openapi/domain_api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/audiocloud/audiocloud/blob/56531e13d2a0601c635db44185e8f555eab699e0/specs/openapi/domain_api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 79: cannot unmarshal !!str `driver_...` into ogen.Media; yaml: line 80: cannot unmarshal !!str `The dri...` into ogen.Media; yaml: line 816: cannot unmarshal !!seq into string; yaml: line 946: cannot unmarshal !!seq into string; yaml: line 982: cannot unmarshal !!seq into ogen.Schema; yaml: line 992: cannot unmarshal !!seq into ogen.Schema; yaml: line 1002: cannot unmarshal !!seq into ogen.Schema; yaml: line 1100: cannot unmarshal !!seq into string; yaml: line 1648: cannot unmarshal !!seq into string; yaml: line 1865: cannot unmarshal !!seq into string; yaml: line 2050: cannot unmarshal !!seq into string; yaml: line 2379: cannot unmarshal !!seq into string; yaml: line 2449: cannot unmarshal !!seq into string; yaml: line 3289: cannot unmarshal !!seq into string; yaml: line 3847: cannot unmarshal !!seq into ogen.Schema; yaml: line 3855: cannot unmarshal !!seq into ogen.Schema; yaml: line 3863: cannot unmarshal !!seq into ogen.Schema; yaml: line 3871: cannot unmarshal !!seq into ogen.Schema; yaml: line 3879: cannot unmarshal !!seq into ogen.Schema; yaml: line 3887: cannot unmarshal !!seq into ogen.Schema; yaml: line 3895: cannot unmarshal !!seq into ogen.Schema; yaml: line 3906: cannot unmarshal !!seq into ogen.Schema"
}