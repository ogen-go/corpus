{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ZanichelliEditore/laravel-jwt-idp"
		},
		"file": {
			"name": "api-docs.json",
			"size": 0,
			"path": "storage/api-docs/api-docs.json",
			"byteSize": 34556,
			"content": "{\n    \"openapi\": \"3.0.0\",\n    \"info\": {\n        \"title\": \"Zanichelli API IdentityProvider\",\n        \"description\": \"REST APIs to use SSO (single-sign-on) for applications \",\n        \"contact\": {\n            \"name\": \"Zanichelli DEV team\",\n            \"email\": \"gsiciliano@zanichelli.it\"\n        },\n        \"version\": \"1.0.0\"\n    },\n    \"paths\": {\n        \"/v2/login\": {\n            \"post\": {\n                \"tags\": [\n                    \"JWT Auth\"\n                ],\n                \"summary\": \"generate a JWT token\",\n                \"description\": \"Use to generate access JWT token for user auth\",\n                \"operationId\": \"v2/login\",\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/x-www-form-urlencoded\": {\n                            \"schema\": {\n                                \"properties\": {\n                                    \"username\": {\n                                        \"description\": \"Username\",\n                                        \"type\": \"string\"\n                                    },\n                                    \"password\": {\n                                        \"description\": \"User password\",\n                                        \"type\": \"string\",\n                                        \"format\": \"password\"\n                                    }\n                                },\n                                \"type\": \"object\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Operation successful\",\n                        \"content\": {\n                            \"application/json\": {}\n                        }\n                    },\n                    \"404\": {\n                        \"description\": \"Authentication error\",\n                        \"content\": {\n                            \"application/json\": {}\n                        }\n                    }\n                }\n            }\n        },\n        \"/v1/user\": {\n            \"get\": {\n                \"tags\": [\n                    \"JWT Auth\"\n                ],\n                \"summary\": \"retrieve user info in json format\",\n                \"description\": \"Use to retrieve user info with roles and departments\",\n                \"operationId\": \"userByToken\",\n                \"parameters\": [\n                    {\n                        \"name\": \"token\",\n                        \"in\": \"query\",\n                        \"description\": \"JWT token vaule\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Operation successful\",\n                        \"content\": {\n                            \"application/json\": {}\n                        }\n                    }\n                }\n            },\n            \"post\": {\n                \"tags\": [\n                    \"User management\"\n                ],\n                \"summary\": \"create a new user\",\n                \"description\": \"__*Security:*__ __*can be used only by clients with 'manager' role*__\",\n                \"operationId\": \"create\",\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/x-www-form-urlencoded\": {\n                            \"schema\": {\n                                \"required\": [\n                                    \"name\",\n                                    \"username\"\n                                ],\n                                \"properties\": {\n                                    \"email\": {\n                                        \"description\": \"User e-mail. It is not mandatory\",\n                                        \"type\": \"string\",\n                                        \"example\": \"mario.rossi@email.com\"\n                                    },\n                                    \"name\": {\n                                        \"description\": \"User name\",\n                                        \"type\": \"string\",\n                                        \"example\": \"mario\"\n                                    },\n                                    \"surname\": {\n                                        \"description\": \"User surname\",\n                                        \"type\": \"string\",\n                                        \"example\": \"rossi\"\n                                    },\n                                    \"username\": {\n                                        \"description\": \"Username\",\n                                        \"type\": \"string\",\n                                        \"example\": \"mario.rossi\"\n                                    },\n                                    \"employee\": {\n                                        \"description\": \"If user is employee the value must be 1, otherwise 0.\",\n                                        \"type\": \"string\",\n                                        \"enum\": [\n                                            0,\n                                            1\n                                        ]\n                                    }\n                                },\n                                \"type\": \"object\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Operation successful\",\n                        \"content\": {\n                            \"application/json\": {}\n                        }\n                    },\n                    \"401\": {\n                        \"description\": \"Unauthorized\",\n                        \"content\": {\n                            \"application/json\": {}\n                        }\n                    },\n                    \"403\": {\n                        \"description\": \"Forbidden\",\n                        \"content\": {\n                            \"application/json\": {}\n                        }\n                    },\n                    \"422\": {\n                        \"description\": \"Validation error\",\n                        \"content\": {\n                            \"application/json\": {}\n                        }\n                    },\n                    \"500\": {\n                        \"description\": \"Server error\",\n                        \"content\": {\n                            \"application/json\": {}\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"passport\": []\n                    }\n                ]\n            }\n        },\n        \"/v1/logout\": {\n            \"get\": {\n                \"tags\": [\n                    \"JWT Auth\"\n                ],\n                \"summary\": \"Logout the user and delete his session\",\n                \"description\": \"Logout the user and delete his session\",\n                \"operationId\": \"logout\",\n                \"parameters\": [\n                    {\n                        \"name\": \"token\",\n                        \"in\": \"query\",\n                        \"description\": \"JWT token vaule\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Operation successful\",\n                        \"content\": {\n                            \"application/json\": {}\n                        }\n                    }\n                }\n            }\n        },\n        \"/v1/login\": {\n            \"post\": {\n                \"tags\": [\n                    \"JWT Auth\"\n                ],\n                \"summary\": \"generate a JWT token - @deprecated: use /v2/login\",\n                \"description\": \"Use to generate access JWT token for user auth\",\n                \"operationId\": \"V1/login\",\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/x-www-form-urlencoded\": {\n                            \"schema\": {\n                                \"properties\": {\n                                    \"username\": {\n                                        \"description\": \"User name\",\n                                        \"type\": \"string\"\n                                    },\n                                    \"password\": {\n                                        \"description\": \"User password\",\n                                        \"type\": \"string\"\n                                    }\n                                },\n                                \"type\": \"object\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Operation successful\",\n                        \"content\": {\n                            \"application/json\": {}\n                        }\n                    },\n                    \"404\": {\n                        \"description\": \"Authentication error\",\n                        \"content\": {\n                            \"application/json\": {}\n                        }\n                    }\n                },\n                \"deprecated\": true\n            }\n        },\n        \"/v1/loginWithToken\": {\n            \"get\": {\n                \"tags\": [\n                    \"JWT Auth\"\n                ],\n                \"summary\": \"retrieve user info in json format - @deprecated: use /v1/user\",\n                \"description\": \"Use to retrieve user info with roles and departments\",\n                \"operationId\": \"loginWithToken\",\n                \"parameters\": [\n                    {\n                        \"name\": \"token\",\n                        \"in\": \"query\",\n                        \"description\": \"JWT token vaule\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Operation successful\",\n                        \"content\": {\n                            \"application/json\": {}\n                        }\n                    }\n                },\n                \"deprecated\": true\n            }\n        },\n        \"/v1/complete-registration\": {\n            \"post\": {\n                \"tags\": [\n                    \"JWT Auth\"\n                ],\n                \"summary\": \"Active user\",\n                \"description\": \"Activate user using token received in the email\",\n                \"operationId\": \"VerificationController.verify\",\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/x-www-form-urlencoded\": {\n                            \"schema\": {\n                                \"properties\": {\n                                    \"token\": {\n                                        \"description\": \"Token\",\n                                        \"type\": \"string\"\n                                    },\n                                    \"password\": {\n                                        \"description\": \"User password\",\n                                        \"type\": \"string\",\n                                        \"format\": \"password\"\n                                    }\n                                },\n                                \"type\": \"object\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"Operation successful\",\n                        \"content\": {\n                            \"application/json\": {}\n                        }\n                    },\n                    \"422\": {\n                        \"description\": \"Invalid data\",\n                        \"content\": {\n                            \"application/json\": {}\n                        }\n                    },\n                    \"500\": {\n                        \"description\": \"General error\",\n                        \"content\": {\n                            \"application/json\": {}\n                        }\n                    }\n                }\n            }\n        },\n        \"/v1/departments\": {\n            \"get\": {\n                \"tags\": [\n                    \"Departments\"\n                ],\n                \"summary\": \"list of departments\",\n                \"description\": \"Returns the entire list of departments\",\n                \"operationId\": \"all\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Operation successful\",\n                        \"content\": {\n                            \"application/json\": {}\n                        }\n                    },\n                    \"401\": {\n                        \"description\": \"Unauthorized\",\n                        \"content\": {\n                            \"application/json\": {}\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"passport\": []\n                    }\n                ]\n            }\n        },\n        \"/v1/providers\": {\n            \"get\": {\n                \"tags\": [\n                    \"Providers\"\n                ],\n                \"summary\": \"list of providers\",\n                \"description\": \"Returns the entire list of providers.\",\n                \"operationId\": \"all\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Operation successful\",\n                        \"content\": {\n                            \"application/json\": {}\n                        }\n                    },\n                    \"401\": {\n                        \"description\": \"Unauthorized\",\n                        \"content\": {\n                            \"application/json\": {}\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"passport\": []\n                    }\n                ]\n            },\n            \"post\": {\n                \"tags\": [\n                    \"Providers\"\n                ],\n                \"summary\": \"Create a new provider\",\n                \"description\": \"__*Security:*__ __*can be used only by clients with 'admin' role*__\",\n                \"operationId\": \"create\",\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/x-www-form-urlencoded\": {\n                            \"schema\": {\n                                \"properties\": {\n                                    \"domain\": {\n                                        \"description\": \"Provider domain\",\n                                        \"type\": \"string\",\n                                        \"example\": \"portale.zanichelli.it\"\n                                    },\n                                    \"logoutUrl\": {\n                                        \"description\": \"URL for logout\",\n                                        \"type\": \"string\",\n                                        \"example\": \"https://portale.zanichelli.it/logoutUser/\"\n                                    },\n                                    \"username\": {\n                                        \"description\": \"username\",\n                                        \"type\": \"string\",\n                                        \"example\": \"4d8d58c9s99\"\n                                    },\n                                    \"password\": {\n                                        \"description\": \"password\",\n                                        \"type\": \"string\",\n                                        \"example\": \"4sc8s28v4d8s\"\n                                    }\n                                },\n                                \"type\": \"object\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"Operation successful\",\n                        \"content\": {\n                            \"application/json\": {}\n                        }\n                    },\n                    \"401\": {\n                        \"description\": \"Unauthorized\",\n                        \"content\": {\n                            \"application/json\": {}\n                        }\n                    },\n                    \"403\": {\n                        \"description\": \"Forbidden\",\n                        \"content\": {\n                            \"application/json\": {}\n                        }\n                    },\n                    \"422\": {\n                        \"description\": \"Validation error\",\n                        \"content\": {\n                            \"application/json\": {}\n                        }\n                    },\n                    \"500\": {\n                        \"description\": \"Server error\",\n                        \"content\": {\n                            \"application/json\": {}\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"passport\": []\n                    }\n                ]\n            }\n        },\n        \"/v1/roles\": {\n            \"get\": {\n                \"tags\": [\n                    \"Roles\"\n                ],\n                \"summary\": \"list of roles\",\n                \"description\": \"Returns the entire list of roles\",\n                \"operationId\": \"all\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Operation successful\",\n                        \"content\": {\n                            \"application/json\": {}\n                        }\n                    },\n                    \"401\": {\n                        \"description\": \"Unauthorized\",\n                        \"content\": {\n                            \"application/json\": {}\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"passport\": []\n                    }\n                ]\n            },\n            \"post\": {\n                \"tags\": [\n                    \"Roles\"\n                ],\n                \"summary\": \"Create a new role\",\n                \"description\": \"__*Security:*__ __*can be used only by clients with 'admin' role*__\",\n                \"operationId\": \"RoleController.create\",\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/x-www-form-urlencoded\": {\n                            \"schema\": {\n                                \"properties\": {\n                                    \"name\": {\n                                        \"description\": \"Role name\",\n                                        \"type\": \"string\",\n                                        \"example\": \"ADMIN_IDP\"\n                                    }\n                                },\n                                \"type\": \"object\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"Operation successful\",\n                        \"content\": {\n                            \"application/json\": {}\n                        }\n                    },\n                    \"401\": {\n                        \"description\": \"Unauthorized\",\n                        \"content\": {\n                            \"application/json\": {}\n                        }\n                    },\n                    \"422\": {\n                        \"description\": \"Validation error\",\n                        \"content\": {\n                            \"application/json\": {}\n                        }\n                    },\n                    \"403\": {\n                        \"description\": \"Invalid scope or client role, Forbidden\",\n                        \"content\": {\n                            \"application/json\": {}\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"passport\": [\n                            \"manage-idp\"\n                        ]\n                    }\n                ]\n            }\n        },\n        \"/v1/roles/{id}\": {\n            \"delete\": {\n                \"tags\": [\n                    \"Roles\"\n                ],\n                \"summary\": \"Remove role by id\",\n                \"description\": \"__*Security:*__ __*can be used only by clients with 'admin' role*__\",\n                \"operationId\": \"RoleController.delete\",\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"in\": \"path\",\n                        \"description\": \"Role id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"minimum\": 1\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"Operation successful\",\n                        \"content\": {\n                            \"application/json\": {}\n                        }\n                    },\n                    \"404\": {\n                        \"description\": \"Not found\",\n                        \"content\": {\n                            \"application/json\": {}\n                        }\n                    },\n                    \"401\": {\n                        \"description\": \"Unauthorized\",\n                        \"content\": {\n                            \"application/json\": {}\n                        }\n                    },\n                    \"500\": {\n                        \"description\": \"Error on deleting\",\n                        \"content\": {\n                            \"application/json\": {}\n                        }\n                    },\n                    \"403\": {\n                        \"description\": \"Invalid scope or client role, Forbidden\",\n                        \"content\": {\n                            \"application/json\": {}\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"passport\": [\n                            \"manage-idp\"\n                        ]\n                    }\n                ]\n            }\n        },\n        \"/v1/users/{id}\": {\n            \"get\": {\n                \"tags\": [\n                    \"User management\"\n                ],\n                \"summary\": \"Returns user by id\",\n                \"description\": \"Returns user details by id\",\n                \"operationId\": \"find\",\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"in\": \"path\",\n                        \"description\": \"User id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Operation successful\",\n                        \"content\": {\n                            \"application/json\": {}\n                        }\n                    },\n                    \"401\": {\n                        \"description\": \"Unauthorized\",\n                        \"content\": {\n                            \"application/json\": {}\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"passport\": []\n                    }\n                ]\n            }\n        },\n        \"/v1/user/available/{username}\": {\n            \"get\": {\n                \"tags\": [\n                    \"User management\"\n                ],\n                \"summary\": \"Check if a username exists in the user table\",\n                \"description\": \"__*Security:*__ __*can be used only by clients with 'manager' role*__\",\n                \"operationId\": \"availableUsername\",\n                \"parameters\": [\n                    {\n                        \"name\": \"username\",\n                        \"in\": \"path\",\n                        \"description\": \"Username\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Operation successful\",\n                        \"content\": {\n                            \"application/json\": {}\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Missing parameter 'username'\",\n                        \"content\": {\n                            \"application/json\": {}\n                        }\n                    },\n                    \"401\": {\n                        \"description\": \"Unauthorized\",\n                        \"content\": {\n                            \"application/json\": {}\n                        }\n                    },\n                    \"403\": {\n                        \"description\": \"Forbidden\",\n                        \"content\": {\n                            \"application/json\": {}\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"passport\": []\n                    }\n                ]\n            }\n        },\n        \"/v1/employees\": {\n            \"get\": {\n                \"tags\": [\n                    \"User management\"\n                ],\n                \"summary\": \"returns all employees\",\n                \"description\": \"Returns the list of employees\",\n                \"operationId\": \"employees\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Operation successful\",\n                        \"content\": {\n                            \"application/json\": {}\n                        }\n                    },\n                    \"401\": {\n                        \"description\": \"Unauthorized\",\n                        \"content\": {\n                            \"application/json\": {}\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"passport\": []\n                    }\n                ]\n            }\n        },\n        \"/v1/users/{id}/user-roles\": {\n            \"get\": {\n                \"tags\": [\n                    \"User-Role\"\n                ],\n                \"summary\": \"Retrieve role on department of user\",\n                \"description\": \"Retrieve role on department of user\",\n                \"operationId\": \"UserRole.retrieve-user\",\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"in\": \"path\",\n                        \"description\": \"User id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"minimum\": 1\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Operation successful\",\n                        \"content\": {\n                            \"application/json\": {}\n                        }\n                    },\n                    \"404\": {\n                        \"description\": \"User not found\",\n                        \"content\": {\n                            \"application/json\": {}\n                        }\n                    },\n                    \"401\": {\n                        \"description\": \"Unauthorized\",\n                        \"content\": {\n                            \"application/json\": {}\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"passport\": []\n                    }\n                ]\n            },\n            \"post\": {\n                \"tags\": [\n                    \"User-Role\"\n                ],\n                \"summary\": \"Assigne role on department to user\",\n                \"description\": \"__*Security:*__ __*can be used only by clients with 'manager' role*__\",\n                \"operationId\": \"UserRole.create\",\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"in\": \"path\",\n                        \"description\": \"User id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"minimum\": 1\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"type\": \"array\",\n                                \"items\": {\n                                    \"properties\": {\n                                        \"department_id\": {\n                                            \"description\": \"Id of department\",\n                                            \"type\": \"integer\",\n                                            \"example\": 1\n                                        },\n                                        \"role_id\": {\n                                            \"description\": \"Id of role\",\n                                            \"type\": \"integer\",\n                                            \"example\": 1\n                                        }\n                                    },\n                                    \"type\": \"object\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"Operation successful\",\n                        \"content\": {\n                            \"application/json\": {}\n                        }\n                    },\n                    \"204\": {\n                        \"description\": \"Operation successfull, user already has role passed\",\n                        \"content\": {\n                            \"application/json\": {}\n                        }\n                    },\n                    \"422\": {\n                        \"description\": \"Validation error\",\n                        \"content\": {\n                            \"application/json\": {}\n                        }\n                    },\n                    \"401\": {\n                        \"description\": \"Unauthorized\",\n                        \"content\": {\n                            \"application/json\": {}\n                        }\n                    },\n                    \"403\": {\n                        \"description\": \"Invalid scope or client role, Forbidden\",\n                        \"content\": {\n                            \"application/json\": {}\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"passport\": []\n                    }\n                ]\n            }\n        },\n        \"/v1/user-role/{id}\": {\n            \"delete\": {\n                \"tags\": [\n                    \"User-Role\"\n                ],\n                \"summary\": \"Remove role on department to user by user-role-id\",\n                \"description\": \"__*Security:*__ __*can be used only by clients with 'manager' role*__\",\n                \"operationId\": \"UserRole.delete\",\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"in\": \"path\",\n                        \"description\": \"User-role id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"minimum\": 1\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Operation successful\",\n                        \"content\": {\n                            \"application/json\": {}\n                        }\n                    },\n                    \"404\": {\n                        \"description\": \"Not found\",\n                        \"content\": {\n                            \"application/json\": {}\n                        }\n                    },\n                    \"401\": {\n                        \"description\": \"Unauthorized\",\n                        \"content\": {\n                            \"application/json\": {}\n                        }\n                    },\n                    \"500\": {\n                        \"description\": \"Error on saving\",\n                        \"content\": {\n                            \"application/json\": {}\n                        }\n                    },\n                    \"403\": {\n                        \"description\": \"Invalid scope or client role, Forbidden\",\n                        \"content\": {\n                            \"application/json\": {}\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"passport\": []\n                    }\n                ]\n            }\n        }\n    },\n    \"components\": {\n        \"securitySchemes\": {\n            \"passport\": {\n                \"type\": \"oauth2\",\n                \"in\": \"header\",\n                \"flows\": {\n                    \"clientCredentials\": {\n                        \"tokenUrl\": \"http://localhost:8083/oauth/token\",\n                        \"scopes\": []\n                    }\n                },\n                \"scheme\": [\n                    \"http\",\n                    \"https\"\n                ]\n            }\n        }\n    },\n    \"tags\": [\n        {\n            \"name\": \"JWT Auth\",\n            \"description\": \"Handle login operations\"\n        }\n    ]\n}",
			"canonicalURL": "/github.com/ZanichelliEditore/laravel-jwt-idp@9385801d3e6a588f3ed6929a69cbcb43c441397e/-/blob/storage/api-docs/api-docs.json",
			"externalURLs": [
				{
					"url": "https://github.com/ZanichelliEditore/laravel-jwt-idp/blob/9385801d3e6a588f3ed6929a69cbcb43c441397e/storage/api-docs/api-docs.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: json: line 925:35: json: cannot unmarshal Go value of type ogen.Spec: spec: json: unable to unmarshal JSON array into Go value of type map[string]string"
}