{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/audiocloud/audiocloud"
		},
		"file": {
			"name": "audio_engine_api.yaml",
			"size": 0,
			"path": "specs/openapi/audio_engine_api.yaml",
			"byteSize": 50075,
			"content": "openapi: 3.1.0\ninfo:\n  contact:\n    url: https://github.com/audiocloud\n    email: bojan@distopik.com\n    name: Bojan Å ernek\n  description: |\n    Audio cloud audio engine API specification\n  license:\n    name: Apache 2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0.html\n  title: Audio Cloud Audio Engine\n  version: 0.1.9\npaths:\n  /v1/instances:\n    put:\n      deprecated: false\n      description: |\n        Set instance I/O mapping\n\n        The Audio Engine needs to map FixedInstanceNode to I/O on the audio interface it is bound\n        to. For example, an instance may be bound to channels 0 and 1 or to channels 5 and 6 and\n        the Audio Engine needs to know to route the audio correctly.\n      operationId: set_instances\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SetInstances'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InstancesUpdated'\n          description: Success\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EngineError'\n          description: Not found\n      summary: Set instance I/O mapping\n      tags:\n      - environment\n  /v1/media:\n    put:\n      deprecated: false\n      description: |\n        Set media presence\n\n        The Audio Engine needs to map AppMediaObjectId on track items to\n      operationId: set_media\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SetMedia'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MediaUpdated'\n          description: Success\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EngineError'\n          description: Not found\n      summary: Set media presence\n      tags:\n      - environment\n  /v1/tasks:\n    get:\n      deprecated: false\n      description: |\n        List tasks\n\n        Return a list of all current tasks and their play status.\n      operationId: list\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskWithStatusList'\n          description: Success\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EngineError'\n          description: Not found\n      summary: List tasks\n      tags:\n      - tasks\n  /v1/tasks/{app_id}/{task_id}:\n    delete:\n      deprecated: false\n      description: |\n        Delete a task\n\n        Delete an existing task spec. This will interrupt any playback or rendering and will free\n        resources associated with the task (such as instances or locks on media files).\n      operationId: delete_task\n      parameters:\n      - deprecated: false\n        description: App id\n        in: path\n        name: app_id\n        required: true\n        schema:\n          $ref: '#/components/schemas/AppId'\n      - deprecated: false\n        description: Task id\n        in: path\n        name: task_id\n        required: true\n        schema:\n          $ref: '#/components/schemas/TaskId'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskDeleted'\n          description: Success\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EngineError'\n          description: Not found\n      summary: Delete a task\n      tags:\n      - tasks\n    patch:\n      deprecated: false\n      description: |\n        Modify task spec\n\n        Apply a modification to an existing spec. Changing the spec even trivially could result in a\n        rendering or playback interruption. The task must exist in order to be modified.\n      operationId: modify_task_spec\n      parameters:\n      - deprecated: false\n        description: App id\n        in: path\n        name: app_id\n        required: true\n        schema:\n          $ref: '#/components/schemas/AppId'\n      - deprecated: false\n        description: Task id\n        in: path\n        name: task_id\n        required: true\n        schema:\n          $ref: '#/components/schemas/TaskId'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ModifyTaskSpec'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskModified'\n          description: Success\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EngineError'\n          description: Modification failed\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EngineError'\n          description: Not found\n      summary: Modify task spec\n      tags:\n      - tasks\n    put:\n      deprecated: false\n      description: |\n        Create or update task spec\n\n        Create or update a task by providing its spec. Changing the spec even trivially could result\n        in a rendering or playback interruption.\n      operationId: set_task_spec\n      parameters:\n      - deprecated: false\n        description: App id\n        in: path\n        name: app_id\n        required: true\n        schema:\n          $ref: '#/components/schemas/AppId'\n      - deprecated: false\n        description: Task id\n        in: path\n        name: task_id\n        required: true\n        schema:\n          $ref: '#/components/schemas/TaskId'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TaskSpec'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskReplaced'\n          description: Success\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EngineError'\n          description: Not authorized\n      summary: Create or update task spec\n      tags:\n      - tasks\n  /v1/tasks/{app_id}/{task_id}/transport/cancel:\n    post:\n      deprecated: false\n      description: |\n        Cancel rendering a task\n\n        Request to stop (cancel) rendering if the task is rendering.\n      operationId: cancel_render\n      parameters:\n      - deprecated: false\n        description: App id\n        in: path\n        name: app_id\n        required: true\n        schema:\n          $ref: '#/components/schemas/AppId'\n      - deprecated: false\n        description: Task id\n        in: path\n        name: task_id\n        required: true\n        schema:\n          $ref: '#/components/schemas/TaskId'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RequestCancelRender'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskRenderCancelled'\n          description: Success\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EngineError'\n          description: Task or mixer Not found\n      summary: Cancel rendering a task\n      tags:\n      - tasks\n  /v1/tasks/{app_id}/{task_id}/transport/play:\n    post:\n      deprecated: false\n      description: |\n        Start playing a task\n\n        Start playing a task that is stopped. The request will return when the task has started to play\n        or with an error.\n      operationId: play\n      parameters:\n      - deprecated: false\n        description: App id\n        in: path\n        name: app_id\n        required: true\n        schema:\n          $ref: '#/components/schemas/AppId'\n      - deprecated: false\n        description: Task id\n        in: path\n        name: task_id\n        required: true\n        schema:\n          $ref: '#/components/schemas/TaskId'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RequestPlay'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskPlaying'\n          description: Success\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EngineError'\n          description: Not found\n      summary: Start playing a task\n      tags:\n      - tasks\n  /v1/tasks/{app_id}/{task_id}/transport/render:\n    post:\n      deprecated: false\n      description: |\n        Render a task to a new file\n\n        Start rendering a task. Note that unlike the orchestration or domain API, the audio engine\n        does not care if the media files are present and will happily execute a render even when no\n        files (or instances) are ready. The caller to this API should make sure that any such\n        preconditions are met.\n      operationId: render\n      parameters:\n      - deprecated: false\n        description: App id\n        in: path\n        name: app_id\n        required: true\n        schema:\n          $ref: '#/components/schemas/AppId'\n      - deprecated: false\n        description: Task id\n        in: path\n        name: task_id\n        required: true\n        schema:\n          $ref: '#/components/schemas/TaskId'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RequestRender'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskRendering'\n          description: Success\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EngineError'\n          description: Task or mixer Not found\n      summary: Render a task to a new file\n      tags:\n      - tasks\n  /v1/tasks/{app_id}/{task_id}/transport/seek:\n    post:\n      deprecated: false\n      description: |\n        Seek while task is playing\n\n        If the task is playing, change the playing position.\n      operationId: seek_task_play\n      parameters:\n      - deprecated: false\n        description: App id\n        in: path\n        name: app_id\n        required: true\n        schema:\n          $ref: '#/components/schemas/AppId'\n      - deprecated: false\n        description: Task id\n        in: path\n        name: task_id\n        required: true\n        schema:\n          $ref: '#/components/schemas/TaskId'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RequestSeek'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskSought'\n          description: Success\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EngineError'\n          description: Task Not found\n      summary: Seek while task is playing\n      tags:\n      - tasks\n  /v1/tasks/{app_id}/{task_id}/transport/stop:\n    post:\n      deprecated: false\n      description: |\n        Stop playing a task\n\n        Request to stop a track if the task is playing.\n      operationId: stop_playing\n      parameters:\n      - deprecated: false\n        description: App id\n        in: path\n        name: app_id\n        required: true\n        schema:\n          $ref: '#/components/schemas/AppId'\n      - deprecated: false\n        description: Task id\n        in: path\n        name: task_id\n        required: true\n        schema:\n          $ref: '#/components/schemas/TaskId'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RequestStopPlay'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskPlayStopped'\n          description: Success\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EngineError'\n          description: Task or mixer Not found\n      summary: Stop playing a task\n      tags:\n      - tasks\nservers:\n- description: Local development\n  url: http://localhost:7300\ncomponents:\n  schemas:\n    AppId:\n      title: AppId\n      type: string\n    AppMediaObjectId:\n      type: string\n    AppTaskId:\n      type: string\n    ChannelMask:\n      oneOf:\n      - type: object\n        required:\n        - mono\n        properties:\n          mono:\n            type: integer\n            format: uint\n            minimum: 0.0\n        additionalProperties: false\n      - type: object\n        required:\n        - stereo\n        properties:\n          stereo:\n            type: integer\n            format: uint\n            minimum: 0.0\n        additionalProperties: false\n    ConnectionValues:\n      type: object\n      properties:\n        pan:\n          type:\n          - number\n          - 'null'\n          format: double\n        volume:\n          type:\n          - number\n          - 'null'\n          format: double\n    DynamicInstanceNode:\n      description: Dynamic node specification\n      type: object\n      required:\n      - model_id\n      - parameters\n      properties:\n        model_id:\n          description: The manufacturer and name of the processing software\n          allOf:\n          - $ref: '#/components/schemas/ModelId'\n        parameters:\n          description: Parameter values\n    DynamicInstanceNodeId:\n      type: string\n    EngineError:\n      title: EngineError\n      oneOf:\n      - type: object\n        required:\n        - track\n        - type\n        properties:\n          track:\n            type: integer\n            format: uint\n            minimum: 0.0\n          type:\n            type: string\n            enum:\n            - track_not_found\n      - type: object\n        required:\n        - item\n        - track\n        - type\n        properties:\n          item:\n            type: integer\n            format: uint\n            minimum: 0.0\n          track:\n            type: integer\n            format: uint\n            minimum: 0.0\n          type:\n            type: string\n            enum:\n            - item_not_found\n      - type: object\n        required:\n        - error\n        - task\n        - type\n        properties:\n          error:\n            $ref: '#/components/schemas/ModifyTaskError'\n          task:\n            $ref: '#/components/schemas/AppTaskId'\n          type:\n            type: string\n            enum:\n            - modify_task\n      - type: object\n        required:\n        - error\n        - type\n        properties:\n          error:\n            type: string\n          type:\n            type: string\n            enum:\n            - internal_error\n      - type: object\n        required:\n        - error\n        - type\n        properties:\n          error:\n            type: string\n          type:\n            type: string\n            enum:\n            - r_p_c\n    EngineFixedInstance:\n      type: object\n      required:\n      - input_start\n      - num_inputs\n      - num_outputs\n      - output_start\n      properties:\n        input_start:\n          type: integer\n          format: uint32\n          minimum: 0.0\n        num_inputs:\n          type: integer\n          format: uint32\n          minimum: 0.0\n        num_outputs:\n          type: integer\n          format: uint32\n          minimum: 0.0\n        output_start:\n          type: integer\n          format: uint32\n          minimum: 0.0\n    FixedInstanceId:\n      type: string\n    FixedInstanceNode:\n      description: Fixed instance node specification\n      type: object\n      required:\n      - instance_id\n      - parameters\n      - wet\n      properties:\n        instance_id:\n          description: The manufacturer, name and instance identifier of the hardware device doing the processing\n          allOf:\n          - $ref: '#/components/schemas/FixedInstanceId'\n        parameters:\n          description: parameters\n        wet:\n          description: |-\n            Dry-wet percentage\n\n            only applicable for instances with same number of inputs and outputs, having 1 or 2 channels.\n          type: number\n          format: double\n    FixedInstanceNodeId:\n      type: string\n    InputPadId:\n      description: A pad that can receive connections on a node inside a task\n      oneOf:\n      - description: Mixer node input\n        type: object\n        required:\n        - mixer\n        properties:\n          mixer:\n            $ref: '#/components/schemas/MixerNodeId'\n        additionalProperties: false\n      - description: Fixed instance node input\n        type: object\n        required:\n        - fixed\n        properties:\n          fixed:\n            $ref: '#/components/schemas/FixedInstanceNodeId'\n        additionalProperties: false\n      - description: Dynamic instance node input\n        type: object\n        required:\n        - dynamic\n        properties:\n          dynamic:\n            $ref: '#/components/schemas/DynamicInstanceNodeId'\n        additionalProperties: false\n    InstancesUpdated:\n      title: InstancesUpdated\n      oneOf:\n      - type: object\n        required:\n        - updated\n        properties:\n          updated:\n            type: object\n            required:\n            - added\n            - deleted\n            - replaced\n            properties:\n              added:\n                type: integer\n                format: uint\n                minimum: 0.0\n              deleted:\n                type: integer\n                format: uint\n                minimum: 0.0\n              replaced:\n                type: integer\n                format: uint\n                minimum: 0.0\n        additionalProperties: false\n    MediaChannels:\n      description: Channel count for media items and track nodes\n      oneOf:\n      - description: Single channel\n        type: string\n        enum:\n        - mono\n      - description: Two channels - left and right\n        type: string\n        enum:\n        - stereo\n    MediaMetadata:\n      type: object\n      required:\n      - bytes\n      - channels\n      - format\n      - sample_rate\n      - seconds\n      properties:\n        bytes:\n          type: integer\n          format: uint64\n          minimum: 0.0\n        channels:\n          $ref: '#/components/schemas/MediaChannels'\n        format:\n          $ref: '#/components/schemas/TrackMediaFormat'\n        sample_rate:\n          type: integer\n          format: uint\n          minimum: 0.0\n        seconds:\n          type: number\n          format: double\n    MediaObject:\n      type: object\n      required:\n      - id\n      - revision\n      properties:\n        id:\n          $ref: '#/components/schemas/AppMediaObjectId'\n        last_used:\n          type:\n          - string\n          - 'null'\n          format: date-time\n        metadata:\n          anyOf:\n          - $ref: '#/components/schemas/MediaMetadata'\n          - type: 'null'\n        path:\n          type:\n          - string\n          - 'null'\n        revision:\n          type: integer\n          format: uint64\n          minimum: 0.0\n    MediaObjectId:\n      type: string\n    MediaUpdated:\n      title: MediaUpdated\n      oneOf:\n      - type: object\n        required:\n        - updated\n        properties:\n          updated:\n            type: object\n            required:\n            - added\n            - deleted\n            - replaced\n            properties:\n              added:\n                type: integer\n                format: uint\n                minimum: 0.0\n              deleted:\n                type: integer\n                format: uint\n                minimum: 0.0\n              replaced:\n                type: integer\n                format: uint\n                minimum: 0.0\n        additionalProperties: false\n    MixerNode:\n      description: Mixer node specification\n      type: object\n      required:\n      - input_channels\n      - output_channels\n      properties:\n        input_channels:\n          description: Numvber of input channels on the mixer node\n          type: integer\n          format: uint\n          minimum: 0.0\n        output_channels:\n          description: Number of output channels on the mixer node\n          type: integer\n          format: uint\n          minimum: 0.0\n    MixerNodeId:\n      type: string\n    ModelId:\n      type: string\n    ModifyTaskError:\n      oneOf:\n      - type: object\n        required:\n        - node_id\n        - type\n        properties:\n          node_id:\n            $ref: '#/components/schemas/TrackNodeId'\n          type:\n            type: string\n            enum:\n            - track_exists\n      - type: object\n        required:\n        - node_id\n        - type\n        properties:\n          node_id:\n            $ref: '#/components/schemas/FixedInstanceNodeId'\n          type:\n            type: string\n            enum:\n            - fixed_instance_exists\n      - type: object\n        required:\n        - node_id\n        - type\n        properties:\n          node_id:\n            $ref: '#/components/schemas/DynamicInstanceNodeId'\n          type:\n            type: string\n            enum:\n            - dynamic_instance_exists\n      - type: object\n        required:\n        - node_id\n        - type\n        properties:\n          node_id:\n            $ref: '#/components/schemas/MixerNodeId'\n          type:\n            type: string\n            enum:\n            - mixer_exists\n      - type: object\n        required:\n        - node_id\n        - type\n        properties:\n          node_id:\n            $ref: '#/components/schemas/TrackNodeId'\n          type:\n            type: string\n            enum:\n            - track_does_not_exist\n      - type: object\n        required:\n        - node_id\n        - type\n        properties:\n          node_id:\n            $ref: '#/components/schemas/FixedInstanceNodeId'\n          type:\n            type: string\n            enum:\n            - fixed_instance_does_not_exist\n      - type: object\n        required:\n        - node_id\n        - type\n        properties:\n          node_id:\n            $ref: '#/components/schemas/DynamicInstanceNodeId'\n          type:\n            type: string\n            enum:\n            - dynamic_instance_does_not_exist\n      - type: object\n        required:\n        - node_id\n        - type\n        properties:\n          node_id:\n            $ref: '#/components/schemas/MixerNodeId'\n          type:\n            type: string\n            enum:\n            - mixer_does_not_exist\n      - type: object\n        required:\n        - connection_id\n        - type\n        properties:\n          connection_id:\n            $ref: '#/components/schemas/NodeConnectionId'\n          type:\n            type: string\n            enum:\n            - connection_does_not_exist\n      - type: object\n        required:\n        - connection_id\n        - type\n        properties:\n          connection_id:\n            $ref: '#/components/schemas/NodeConnectionId'\n          type:\n            type: string\n            enum:\n            - connection_exists\n      - type: object\n        required:\n        - connection_id\n        - message\n        - type\n        properties:\n          connection_id:\n            $ref: '#/components/schemas/NodeConnectionId'\n          message:\n            type: string\n          type:\n            type: string\n            enum:\n            - connection_malformed\n      - type: object\n        required:\n        - media_id\n        - node_id\n        - type\n        properties:\n          media_id:\n            $ref: '#/components/schemas/TrackMediaId'\n          node_id:\n            $ref: '#/components/schemas/TrackNodeId'\n          type:\n            type: string\n            enum:\n            - media_exists\n      - type: object\n        required:\n        - media_id\n        - node_id\n        - type\n        properties:\n          media_id:\n            $ref: '#/components/schemas/TrackMediaId'\n          node_id:\n            $ref: '#/components/schemas/TrackNodeId'\n          type:\n            type: string\n            enum:\n            - media_does_not_exist\n      - type: object\n        required:\n        - type\n        properties:\n          type:\n            type: string\n            enum:\n            - cycle_detected\n    ModifyTaskSpec:\n      title: ModifyTaskSpec\n      description: Modify task structure\n      oneOf:\n      - description: Add a track node to the task\n        type: object\n        required:\n        - add_track\n        properties:\n          add_track:\n            type: object\n            required:\n            - channels\n            - track_id\n            properties:\n              channels:\n                description: Number of channels for the track node\n                allOf:\n                - $ref: '#/components/schemas/MediaChannels'\n              track_id:\n                description: New track node id\n                allOf:\n                - $ref: '#/components/schemas/TrackNodeId'\n        additionalProperties: false\n      - description: Add media to a track node\n        type: object\n        required:\n        - add_track_media\n        properties:\n          add_track_media:\n            type: object\n            required:\n            - media_id\n            - spec\n            - track_id\n            properties:\n              media_id:\n                description: Media id within the track node\n                allOf:\n                - $ref: '#/components/schemas/TrackMediaId'\n              spec:\n                description: Media object specification\n                allOf:\n                - $ref: '#/components/schemas/TrackMedia'\n              track_id:\n                description: Track node id\n                allOf:\n                - $ref: '#/components/schemas/TrackNodeId'\n        additionalProperties: false\n      - description: Update track media on a track node\n        type: object\n        required:\n        - update_track_media\n        properties:\n          update_track_media:\n            type: object\n            required:\n            - media_id\n            - track_id\n            - update\n            properties:\n              media_id:\n                description: Media id within the track node\n                allOf:\n                - $ref: '#/components/schemas/TrackMediaId'\n              track_id:\n                description: Track node id\n                allOf:\n                - $ref: '#/components/schemas/TrackNodeId'\n              update:\n                description: Media object update\n                allOf:\n                - $ref: '#/components/schemas/UpdateTaskTrackMedia'\n        additionalProperties: false\n      - description: Delete track media from a track node\n        type: object\n        required:\n        - delete_track_media\n        properties:\n          delete_track_media:\n            type: object\n            required:\n            - media_id\n            - track_id\n            properties:\n              media_id:\n                description: Media id within the track node\n                allOf:\n                - $ref: '#/components/schemas/TrackMediaId'\n              track_id:\n                description: Track node id\n                allOf:\n                - $ref: '#/components/schemas/TrackNodeId'\n        additionalProperties: false\n      - description: Delete a track node from the task (including all media and referencing connections)\n        type: object\n        required:\n        - delete_track\n        properties:\n          delete_track:\n            type: object\n            required:\n            - track_id\n            properties:\n              track_id:\n                description: Track node id\n                allOf:\n                - $ref: '#/components/schemas/TrackNodeId'\n        additionalProperties: false\n      - description: Add a fixed instance node to the task\n        type: object\n        required:\n        - add_fixed_instance\n        properties:\n          add_fixed_instance:\n            type: object\n            required:\n            - fixed_id\n            - spec\n            properties:\n              fixed_id:\n                description: Fixed instance node id\n                allOf:\n                - $ref: '#/components/schemas/FixedInstanceNodeId'\n              spec:\n                description: Fixed instance node processing specification\n                allOf:\n                - $ref: '#/components/schemas/FixedInstanceNode'\n        additionalProperties: false\n      - description: Add a dynamic instance node to the task\n        type: object\n        required:\n        - add_dynamic_instance\n        properties:\n          add_dynamic_instance:\n            type: object\n            required:\n            - dynamic_id\n            - spec\n            properties:\n              dynamic_id:\n                description: Dynamic instance node id\n                allOf:\n                - $ref: '#/components/schemas/DynamicInstanceNodeId'\n              spec:\n                description: Dynamic instance node processing specification\n                allOf:\n                - $ref: '#/components/schemas/DynamicInstanceNode'\n        additionalProperties: false\n      - description: Add a mixer node to the task\n        type: object\n        required:\n        - add_mixer\n        properties:\n          add_mixer:\n            type: object\n            required:\n            - mixer_id\n            - spec\n            properties:\n              mixer_id:\n                description: Mixer node id\n                allOf:\n                - $ref: '#/components/schemas/MixerNodeId'\n              spec:\n                description: Mixer node processing specification\n                allOf:\n                - $ref: '#/components/schemas/MixerNode'\n        additionalProperties: false\n      - description: Delete a mixer node from the task (including all referencing connections)\n        type: object\n        required:\n        - delete_mixer\n        properties:\n          delete_mixer:\n            type: object\n            required:\n            - mixer_id\n            properties:\n              mixer_id:\n                description: Moxer node id\n                allOf:\n                - $ref: '#/components/schemas/MixerNodeId'\n        additionalProperties: false\n      - description: Delete a fixed instance node from the task (including all referencing connections)\n        type: object\n        required:\n        - delete_fixed_instance\n        properties:\n          delete_fixed_instance:\n            type: object\n            required:\n            - fixed_id\n            properties:\n              fixed_id:\n                description: Fixed instance node id\n                allOf:\n                - $ref: '#/components/schemas/FixedInstanceNodeId'\n        additionalProperties: false\n      - description: Delete dynamic instance node from the task (including all referencing connections)\n        type: object\n        required:\n        - delete_dynamic_instance\n        properties:\n          delete_dynamic_instance:\n            type: object\n            required:\n            - dynamic_id\n            properties:\n              dynamic_id:\n                description: Dynamic instance node id\n                allOf:\n                - $ref: '#/components/schemas/DynamicInstanceNodeId'\n        additionalProperties: false\n      - description: Delete a connection from the task (preserving the referenced nodes even if they are now unconnected)\n        type: object\n        required:\n        - delete_connection\n        properties:\n          delete_connection:\n            type: object\n            required:\n            - connection_id\n            properties:\n              connection_id:\n                description: Connection id\n                allOf:\n                - $ref: '#/components/schemas/NodeConnectionId'\n        additionalProperties: false\n      - description: Add a connection to the task\n        type: object\n        required:\n        - add_connection\n        properties:\n          add_connection:\n            type: object\n            required:\n            - connection_id\n            - from\n            - from_channels\n            - pan\n            - to\n            - to_channels\n            - volume\n            properties:\n              connection_id:\n                description: Connection id\n                allOf:\n                - $ref: '#/components/schemas/NodeConnectionId'\n              from:\n                description: Source node pad\n                allOf:\n                - $ref: '#/components/schemas/OutputPadId'\n              from_channels:\n                description: Source channel mask\n                allOf:\n                - $ref: '#/components/schemas/ChannelMask'\n              pan:\n                description: Panning adjustment on the audio passing through the connection\n                type: number\n                format: double\n              to:\n                description: Destination node pad\n                allOf:\n                - $ref: '#/components/schemas/InputPadId'\n              to_channels:\n                description: Destination channel mask\n                allOf:\n                - $ref: '#/components/schemas/ChannelMask'\n              volume:\n                description: Volume adjustment on audio passing through the connection\n                type: number\n                format: double\n        additionalProperties: false\n      - description: Set connection values\n        type: object\n        required:\n        - set_connection_parameter_values\n        properties:\n          set_connection_parameter_values:\n            type: object\n            required:\n            - connection_id\n            - values\n            properties:\n              connection_id:\n                description: Connection id\n                allOf:\n                - $ref: '#/components/schemas/NodeConnectionId'\n              values:\n                description: Values (parameters) on the connection\n                allOf:\n                - $ref: '#/components/schemas/ConnectionValues'\n        additionalProperties: false\n      - description: Set fixed instance node values\n        type: object\n        required:\n        - set_fixed_instance_parameter_values\n        properties:\n          set_fixed_instance_parameter_values:\n            type: object\n            required:\n            - fixed_id\n            - values\n            properties:\n              fixed_id:\n                description: Fixed instance node id\n                allOf:\n                - $ref: '#/components/schemas/FixedInstanceNodeId'\n              values:\n                description: Values to set\n        additionalProperties: false\n      - description: Set dynamic instance node values\n        type: object\n        required:\n        - set_dynamic_instance_parameter_values\n        properties:\n          set_dynamic_instance_parameter_values:\n            type: object\n            required:\n            - dynamic_id\n            - values\n            properties:\n              dynamic_id:\n                description: Dynamic instance node id\n                allOf:\n                - $ref: '#/components/schemas/DynamicInstanceNodeId'\n              values:\n                description: Values to set\n        additionalProperties: false\n    NodeConnection:\n      description: Connection between nodes in a task\n      type: object\n      required:\n      - from\n      - from_channels\n      - pan\n      - to\n      - to_channels\n      - volume\n      properties:\n        from:\n          description: Source node pad\n          allOf:\n          - $ref: '#/components/schemas/OutputPadId'\n        from_channels:\n          description: Source channel mask\n          allOf:\n          - $ref: '#/components/schemas/ChannelMask'\n        pan:\n          description: |-\n            Panning adjustment\n\n            Zero is centered, -1 is fully left, 1 is fully right\n          type: number\n          format: double\n        to:\n          description: Destination node pad\n          allOf:\n          - $ref: '#/components/schemas/InputPadId'\n        to_channels:\n          description: Destination channel mask\n          allOf:\n          - $ref: '#/components/schemas/ChannelMask'\n        volume:\n          description: Volume adjustment as a factor\n          type: number\n          format: double\n    NodeConnectionId:\n      type: string\n    OutputPadId:\n      description: A pad that can receive connections on a node inside a task\n      oneOf:\n      - description: Mixer node output\n        type: object\n        required:\n        - mixer\n        properties:\n          mixer:\n            $ref: '#/components/schemas/MixerNodeId'\n        additionalProperties: false\n      - description: Fixed instance node output\n        type: object\n        required:\n        - fixed\n        properties:\n          fixed:\n            $ref: '#/components/schemas/FixedInstanceNodeId'\n        additionalProperties: false\n      - description: Dynamic instance node output\n        type: object\n        required:\n        - dynamic\n        properties:\n          dynamic:\n            $ref: '#/components/schemas/DynamicInstanceNodeId'\n        additionalProperties: false\n      - description: Track node output\n        type: object\n        required:\n        - track\n        properties:\n          track:\n            $ref: '#/components/schemas/TrackNodeId'\n        additionalProperties: false\n    PlayBitDepth:\n      type: string\n      enum:\n      - '24'\n      - '16'\n    PlayId:\n      type: string\n    RenderId:\n      type: string\n    RequestCancelRender:\n      title: RequestCancelRender\n      type: object\n      required:\n      - render_id\n      properties:\n        render_id:\n          $ref: '#/components/schemas/RenderId'\n    RequestChangeMixer:\n      title: RequestChangeMixer\n      type: object\n      required:\n      - mixer_id\n      - play_id\n      properties:\n        mixer_id:\n          $ref: '#/components/schemas/MixerNodeId'\n        play_id:\n          $ref: '#/components/schemas/PlayId'\n    RequestPlay:\n      title: RequestPlay\n      type: object\n      required:\n      - bit_depth\n      - looping\n      - mixer_id\n      - play_id\n      - sample_rate\n      - segment\n      - start_at\n      properties:\n        bit_depth:\n          $ref: '#/components/schemas/PlayBitDepth'\n        looping:\n          type: boolean\n        mixer_id:\n          $ref: '#/components/schemas/MixerNodeId'\n        play_id:\n          $ref: '#/components/schemas/PlayId'\n        sample_rate:\n          $ref: '#/components/schemas/SampleRate'\n        segment:\n          $ref: '#/components/schemas/TimeSegment'\n        start_at:\n          type: number\n          format: double\n    RequestRender:\n      type: object\n      required:\n      - mixer_id\n      - object_id\n      - render_id\n      - segment\n      properties:\n        mixer_id:\n          $ref: '#/components/schemas/MixerNodeId'\n        object_id:\n          $ref: '#/components/schemas/AppMediaObjectId'\n        render_id:\n          $ref: '#/components/schemas/RenderId'\n        segment:\n          $ref: '#/components/schemas/TimeSegment'\n    RequestSeek:\n      title: RequestSeek\n      type: object\n      required:\n      - looping\n      - play_id\n      - segment\n      - start_at\n      properties:\n        looping:\n          type: boolean\n        play_id:\n          $ref: '#/components/schemas/PlayId'\n        segment:\n          $ref: '#/components/schemas/TimeSegment'\n        start_at:\n          type: number\n          format: double\n    RequestStopPlay:\n      title: RequestStopPlay\n      type: object\n      required:\n      - play_id\n      properties:\n        play_id:\n          $ref: '#/components/schemas/PlayId'\n    SampleRate:\n      type: string\n      enum:\n      - '192'\n      - '96'\n      - '88.2'\n      - '48'\n      - '44.1'\n    SetInstances:\n      title: SetInstances\n      type: object\n      required:\n      - instances\n      properties:\n        instances:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/EngineFixedInstance'\n    SetMedia:\n      title: SetMedia\n      type: object\n      required:\n      - media\n      properties:\n        media:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/MediaObject'\n    TaskDeleted:\n      title: TaskDeleted\n      oneOf:\n      - type: object\n        required:\n        - deleted\n        properties:\n          deleted:\n            type: object\n            required:\n            - task_id\n            properties:\n              task_id:\n                $ref: '#/components/schemas/AppTaskId'\n        additionalProperties: false\n    TaskId:\n      title: TaskId\n      type: string\n    TaskModified:\n      title: TaskModified\n      oneOf:\n      - type: object\n        required:\n        - modified\n        properties:\n          modified:\n            type: object\n            required:\n            - task_id\n            properties:\n              task_id:\n                $ref: '#/components/schemas/AppTaskId'\n        additionalProperties: false\n    TaskPlayState:\n      oneOf:\n      - type: string\n        enum:\n        - stopped\n      - type: object\n        required:\n        - preparing_to_play\n        properties:\n          preparing_to_play:\n            $ref: '#/components/schemas/RequestPlay'\n        additionalProperties: false\n      - type: object\n        required:\n        - preparing_to_render\n        properties:\n          preparing_to_render:\n            $ref: '#/components/schemas/RequestRender'\n        additionalProperties: false\n      - type: object\n        required:\n        - playing\n        properties:\n          playing:\n            $ref: '#/components/schemas/RequestPlay'\n        additionalProperties: false\n      - type: object\n        required:\n        - rendering\n        properties:\n          rendering:\n            $ref: '#/components/schemas/RequestRender'\n        additionalProperties: false\n      - type: object\n        required:\n        - stopping_play\n        properties:\n          stopping_play:\n            $ref: '#/components/schemas/PlayId'\n        additionalProperties: false\n      - type: object\n        required:\n        - stopping_render\n        properties:\n          stopping_render:\n            $ref: '#/components/schemas/RenderId'\n        additionalProperties: false\n    TaskPlayStopped:\n      title: TaskPlayStopped\n      oneOf:\n      - type: object\n        required:\n        - stopped\n        properties:\n          stopped:\n            type: object\n            required:\n            - play_id\n            - task_id\n            properties:\n              play_id:\n                $ref: '#/components/schemas/PlayId'\n              task_id:\n                $ref: '#/components/schemas/AppTaskId'\n        additionalProperties: false\n    TaskPlaying:\n      title: TaskPlaying\n      oneOf:\n      - type: object\n        required:\n        - playing\n        properties:\n          playing:\n            type: object\n            required:\n            - play_id\n            - task_id\n            properties:\n              play_id:\n                $ref: '#/components/schemas/PlayId'\n              task_id:\n                $ref: '#/components/schemas/AppTaskId'\n        additionalProperties: false\n    TaskRenderCancelled:\n      title: TaskRenderCancelled\n      oneOf:\n      - type: object\n        required:\n        - cancelled\n        properties:\n          cancelled:\n            type: object\n            required:\n            - render_id\n            - task_id\n            properties:\n              render_id:\n                $ref: '#/components/schemas/RenderId'\n              task_id:\n                $ref: '#/components/schemas/AppTaskId'\n        additionalProperties: false\n    TaskRendering:\n      title: TaskRendering\n      oneOf:\n      - type: object\n        required:\n        - rendering\n        properties:\n          rendering:\n            type: object\n            required:\n            - render_id\n            - task_id\n            properties:\n              render_id:\n                $ref: '#/components/schemas/RenderId'\n              task_id:\n                $ref: '#/components/schemas/AppTaskId'\n        additionalProperties: false\n    TaskReplaced:\n      title: TaskReplaced\n      oneOf:\n      - type: object\n        required:\n        - updated\n        properties:\n          updated:\n            type: object\n            required:\n            - task_id\n            properties:\n              task_id:\n                $ref: '#/components/schemas/AppTaskId'\n        additionalProperties: false\n      - type: object\n        required:\n        - created\n        properties:\n          created:\n            type: object\n            required:\n            - task_id\n            properties:\n              task_id:\n                $ref: '#/components/schemas/AppTaskId'\n        additionalProperties: false\n    TaskSought:\n      title: TaskSought\n      oneOf:\n      - type: object\n        required:\n        - sought\n        properties:\n          sought:\n            type: object\n            required:\n            - play_id\n            - task_id\n            properties:\n              play_id:\n                $ref: '#/components/schemas/PlayId'\n              task_id:\n                $ref: '#/components/schemas/AppTaskId'\n        additionalProperties: false\n    TaskSpec:\n      title: TaskSpec\n      description: Task specification\n      type: object\n      properties:\n        connections:\n          description: Connections between nodes\n          default: {}\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/NodeConnection'\n        dynamic:\n          description: Dynamic instance nodes of the task\n          default: {}\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/DynamicInstanceNode'\n        fixed:\n          description: Fixed instance nodes of the task\n          default: {}\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/FixedInstanceNode'\n        mixers:\n          description: Mixer nodes of the task\n          default: {}\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/MixerNode'\n        revision:\n          description: The revision number of the specification (starts at zero, increments for every change)\n          default: 0\n          type: integer\n          format: uint64\n          minimum: 0.0\n        tracks:\n          description: Track nodes of the task\n          default: {}\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/TrackNode'\n    TaskWithStatus:\n      title: TaskWithStatus\n      type: object\n      required:\n      - id\n      - play_state\n      - spec\n      properties:\n        id:\n          $ref: '#/components/schemas/AppTaskId'\n        play_state:\n          $ref: '#/components/schemas/TaskPlayState'\n        spec:\n          $ref: '#/components/schemas/TaskSpec'\n    TaskWithStatusList:\n      title: Array_of_TaskWithStatus\n      type: array\n      items:\n        $ref: '#/components/schemas/TaskWithStatus'\n    TimeSegment:\n      type: object\n      required:\n      - length\n      - start\n      properties:\n        length:\n          type: number\n          format: double\n        start:\n          type: number\n          format: double\n    TrackMedia:\n      description: Media item specification\n      type: object\n      required:\n      - channels\n      - format\n      - media_segment\n      - object_id\n      - timeline_segment\n      properties:\n        channels:\n          description: Number of channels\n          allOf:\n          - $ref: '#/components/schemas/MediaChannels'\n        format:\n          description: Media format\n          allOf:\n          - $ref: '#/components/schemas/TrackMediaFormat'\n        media_segment:\n          description: Subset of media that is used\n          allOf:\n          - $ref: '#/components/schemas/TimeSegment'\n        object_id:\n          description: Source media object id\n          allOf:\n          - $ref: '#/components/schemas/MediaObjectId'\n        timeline_segment:\n          description: Where to place the media in the task timeline\n          allOf:\n          - $ref: '#/components/schemas/TimeSegment'\n    TrackMediaFormat:\n      type: string\n      enum:\n      - wave\n      - mp3\n      - flac\n      - wavpack\n    TrackMediaId:\n      type: string\n    TrackNode:\n      description: Track node specification\n      type: object\n      required:\n      - channels\n      - media\n      properties:\n        channels:\n          description: Number of channels\n          allOf:\n          - $ref: '#/components/schemas/MediaChannels'\n        media:\n          description: Media items present on the track\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/TrackMedia'\n    TrackNodeId:\n      type: string\n    UpdateTaskTrackMedia:\n      type: object\n      properties:\n        channels:\n          anyOf:\n          - $ref: '#/components/schemas/MediaChannels'\n          - type: 'null'\n        media_segment:\n          anyOf:\n          - $ref: '#/components/schemas/TimeSegment'\n          - type: 'null'\n        object_id:\n          anyOf:\n          - $ref: '#/components/schemas/MediaObjectId'\n          - type: 'null'\n        timeline_segment:\n          anyOf:\n          - $ref: '#/components/schemas/TimeSegment'\n          - type: 'null'\n",
			"canonicalURL": "/github.com/audiocloud/audiocloud@56531e13d2a0601c635db44185e8f555eab699e0/-/blob/specs/openapi/audio_engine_api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/audiocloud/audiocloud/blob/56531e13d2a0601c635db44185e8f555eab699e0/specs/openapi/audio_engine_api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 503: cannot unmarshal !!seq into string; yaml: line 744: cannot unmarshal !!seq into string"
}