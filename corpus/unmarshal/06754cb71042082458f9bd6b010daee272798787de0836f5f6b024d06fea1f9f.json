{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/figment-networks/hubble"
		},
		"file": {
			"name": "prime_eth2_staking_swagger.yaml",
			"size": 0,
			"path": "swagger/v1/prime_eth2_staking_swagger.yaml",
			"byteSize": 15540,
			"content": "---\nopenapi: 3.0.1\ninfo:\n  title: Prime ETH2 Staking\n  version: v1\ncomponents:\n  securitySchemes:\n    auth:\n      type: http\n      scheme: bearer\n  schemas:\n    error:\n      type: object\n      properties:\n        errors:\n          type: array\n          items:\n            type: object\n            properties:\n              status:\n                type: string\n              title:\n                type: string\n              code:\n                type: string\n                nullable: true\n              detail:\n                type: string\n                nullable: true\n              source:\n                type:\n                - object\n                - 'null'\n                properties:\n                  pointer:\n                    type: string\n            required:\n            - status\n            - title\n    links:\n      type: object\n      properties:\n        self:\n          type: string\n        current:\n          type: string\n        next:\n          type: string\n        last:\n          type: string\n        prev:\n          type: string\n    position:\n      type: object\n      properties:\n        id:\n          type: string\n          nullable: false\n        type:\n          type: string\n          nullable: false\n        attributes:\n          type: object\n          properties:\n            id:\n              type: integer\n              nullable: false\n            name:\n              type: string\n              nullable: true\n            eth1_withdrawal_address:\n              type: string\n              nullable: false\n            staked_amount:\n              type: integer\n              nullable: false\n            validators_count:\n              type: integer\n              nullable: false\n            created_at:\n              type: string\n              nullable: false\n            updated_at:\n              type: string\n              nullable: false\n    position_relationship:\n      type: object\n      properties:\n        data:\n          type: object\n          properties:\n            id:\n              type: string\n              nullable: false\n            type:\n              type: string\n              nullable: false\n    validator:\n      type: object\n      properties:\n        id:\n          type: string\n          nullable: false\n        type:\n          type: string\n          nullable: false\n        attributes:\n          type: object\n          properties:\n            name:\n              type: string\n              nullable: true\n            pubkey:\n              type: string\n              nullable: false\n            withdrawal_credentials:\n              type: string\n              nullable: false\n            amount:\n              type: integer\n              nullable: false\n              description: amount in GWEI\n            signature:\n              type: string\n              nullable: false\n            deposit_data_root:\n              type: string\n              nullable: false\n            deposit_message_root:\n              type: string\n              nullable: false\n            fork_version:\n              type: string\n              nullable: true\n            eth2_network_name:\n              type: string\n              nullable: true\n            status:\n              type: string\n              nullable: true\n            deposit_cli_version:\n              type: string\n              nullable: true\n            status_synced_at:\n              type: string\n              nullable: true\n            status_history:\n              type: array\n              items:\n                type: object\n                properties:\n                  status:\n                    type: string\n                    nullable: false\n                  changed_at:\n                    type: string\n                    nullable: false\n        relationships:\n          type: object\n          properties:\n            position:\n              \"$ref\": \"#/components/schemas/position_relationship\"\n    position_daily_reward:\n      type: object\n      properties:\n        id:\n          type: string\n          nullable: false\n        type:\n          type: string\n          nullable: false\n        attributes:\n          type: object\n          properties:\n            time:\n              type: string\n              nullable: false\n            validators_count:\n              type: integer\n              nullable: false\n            commission_rate:\n              type: string\n              nullable: false\n            reward_amount:\n              type: string\n              nullable: false\n            currency:\n              type: string\n              nullable: false\npaths:\n  \"/api/v1/prime/eth2_staking/positions\":\n    post:\n      summary: request new staking position\n      tags:\n      - Positions\n      description: \"Request creation of new staking position with passed attributes.\\n\\n###\n        Webhook configuration        \\n\\nUser can be notified once a new staking position\n        is created by configuring webhook url and webhook api key\\nunder Prime / ETH\n        Staking in Prime Dashboard. Configured api key will be sent in `Authorization`\n        header.\\n\\nDetailed documentation can be found in the **Callbacks** tab below.\\n\"\n      security:\n      - auth: []\n      parameters: []\n      callbacks:\n        position_created:\n          \"/\":\n            post:\n              requestBody:\n                description:\n                required: true\n                content:\n                  application/json:\n                    schema:\n                      type: object\n                      properties:\n                        action:\n                          type: string\n                          nullable: false\n                        data:\n                          type: object\n                          properties:\n                            id:\n                              type: string\n                              nullable: false\n                            withdrawal_address:\n                              type: string\n                              nullable: false\n                            validators_count:\n                              type: integer\n                              nullable: false\n              responses:\n                '200':\n                  description: receiver should respond with 2xx http code to avoid\n                    retry attempts\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                    nullable: false\n        '422':\n          description: invalid\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/error\"\n        '401':\n          description: not authenticated\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/error\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                external_user_id:\n                  type: string\n                  nullable: false\n                external_user_email:\n                  type: string\n                  nullable: false\n                withdrawal_address:\n                  type: string\n                  nullable: false\n                validators_count:\n                  type: integer\n                  nullable: false\n                eth2_network_name:\n                  type: string\n                  nullable: false\n              required:\n              - external_user_id\n              - external_user_email\n              - withdrawal_address\n              - validators_count\n    get:\n      summary: list of staking positions\n      tags:\n      - Positions\n      description: Returns list of staking positions of a customer\n      security:\n      - auth: []\n      parameters:\n      - name: withdrawal_address\n        in: query\n        required: false\n        schema:\n          type: string\n      - name: page[size]\n        in: query\n        required: false\n        schema:\n          type: integer\n      - name: page[number]\n        in: query\n        required: false\n        schema:\n          type: integer\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      \"$ref\": \"#/components/schemas/position\"\n                  links:\n                    \"$ref\": \"#/components/schemas/links\"\n        '401':\n          description: not authenticated\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/error\"\n  \"/api/v1/prime/eth2_staking/positions/{position_id}/rewards\":\n    parameters:\n    - name: position_id\n      in: path\n      description: staking position id\n      required: true\n      schema:\n        type: string\n    get:\n      summary: list of rewards per day for staking position\n      tags:\n      - Positions\n      description: Returns list of rewards by day for specified staking position\n      security:\n      - auth: []\n      parameters:\n      - name: page[size]\n        in: query\n        required: false\n        schema:\n          type: integer\n      - name: page[number]\n        in: query\n        required: false\n        schema:\n          type: integer\n      - name: start_date\n        in: query\n        required: false\n        description: 'format: YYYY-MM-DD'\n        schema:\n          type: string\n      - name: end_date\n        in: query\n        required: false\n        description: 'format: YYYY-MM-DD'\n        schema:\n          type: string\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      \"$ref\": \"#/components/schemas/position_daily_reward\"\n                  links:\n                    \"$ref\": \"#/components/schemas/links\"\n        '401':\n          description: not authenticated\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/error\"\n        '422':\n          description: invalid parameters\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/error\"\n  \"/api/v1/prime/eth2_staking/positions/{position_id}/validators\":\n    parameters:\n    - name: position_id\n      in: path\n      description: staking position id\n      required: true\n      schema:\n        type: string\n    get:\n      summary: list validators in staking position\n      tags:\n      - Positions\n      - Validators\n      description: Returns list of validators for a given staking position\n      security:\n      - auth: []\n      parameters:\n      - name: page[size]\n        in: query\n        required: false\n        schema:\n          type: integer\n      - name: page[number]\n        in: query\n        required: false\n        schema:\n          type: integer\n      - name: include\n        in: query\n        required: false\n        description: 'accepted values: position'\n        schema:\n          type: string\n      - name: status_history\n        in: query\n        required: false\n        description: if present status change history will be included for each validator\n        schema:\n          type: string\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      \"$ref\": \"#/components/schemas/validator\"\n                  links:\n                    \"$ref\": \"#/components/schemas/links\"\n                  included:\n                    type: array\n                    items:\n                      anyOf:\n                      - \"$ref\": \"#/components/schemas/position\"\n        '401':\n          description: not authenticated\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/error\"\n  \"/api/v1/prime/eth2_staking/validators\":\n    get:\n      summary: lists all validators belonging to the customer\n      tags:\n      - Validators\n      description: Returns list of validators belonging to a customer\n      security:\n      - auth: []\n      parameters:\n      - name: page[size]\n        in: query\n        required: false\n        schema:\n          type: integer\n      - name: page[number]\n        in: query\n        required: false\n        schema:\n          type: integer\n      - name: include\n        in: query\n        required: false\n        description: 'accepted values: position'\n        schema:\n          type: string\n      - name: status_history\n        in: query\n        required: false\n        description: if present status change history will be included for each validator\n        schema:\n          type: string\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      \"$ref\": \"#/components/schemas/validator\"\n                  links:\n                    \"$ref\": \"#/components/schemas/links\"\n                  included:\n                    type: array\n                    items:\n                      anyOf:\n                      - \"$ref\": \"#/components/schemas/position\"\n        '401':\n          description: not authenticated\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/error\"\n  \"/api/v1/prime/eth2_staking/validators/{id}\":\n    get:\n      summary: single validator info\n      tags:\n      - Validators\n      description: Returns information about single validator\n      security:\n      - auth: []\n      parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: include\n        in: query\n        required: false\n        description: 'accepted values: position'\n        schema:\n          type: string\n      - name: status_history\n        in: query\n        required: false\n        description: if present status change history will be included for each validator\n        schema:\n          type: string\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    \"$ref\": \"#/components/schemas/validator\"\n                  included:\n                    type: array\n                    items:\n                      anyOf:\n                      - \"$ref\": \"#/components/schemas/position\"\n        '401':\n          description: not authenticated\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/error\"\n        '404':\n          description: not found\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/error\"\n",
			"canonicalURL": "/github.com/figment-networks/hubble@559ba54a473395b91090ee655e321eb75de6bdf2/-/blob/swagger/v1/prime_eth2_staking_swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/figment-networks/hubble/blob/559ba54a473395b91090ee655e321eb75de6bdf2/swagger/v1/prime_eth2_staking_swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: json: line 1:227: json: cannot unmarshal Go value of type ogen.Spec: spec: json: cannot unmarshal Go value of type ogen.Properties: json: cannot unmarshal Go value of type ogen.Properties: json: cannot unmarshal JSON array into Go value of type string"
}