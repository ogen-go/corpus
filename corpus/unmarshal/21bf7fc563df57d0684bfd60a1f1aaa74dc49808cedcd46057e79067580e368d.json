{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/samwightt/mastodon-openapi"
		},
		"file": {
			"name": "Mastodon-API.yml",
			"size": 0,
			"path": "Mastodon-API.yml",
			"byteSize": 119902,
			"content": "openapi: 3.1.0\nx-stoplight:\n  id: cc3pgc7osi9i0\ninfo:\n  title: Mastodon API\n  version: '1.0'\n  contact:\n    name: None\n  description: The API for interacting with Mastodon.\nservers:\n  - url: 'http://localhost:3000'\npaths:\n  /api/v1/apps:\n    post:\n      summary: Create an application\n      responses:\n        '200':\n          description: 'Store the client_id and client_secret in your cache, as these will be used to obtain OAuth tokens.'\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/Application'\n                  - $ref: '#/components/schemas/Client-Credentials'\n                  - type: object\n                    properties:\n                      id:\n                        type: string\n                        description: The ID of the application.\n                    required:\n                      - id\n              examples:\n                Example 1:\n                  value:\n                    id: '563419'\n                    name: test app\n                    website: null\n                    redirect_uri: 'urn:ietf:wg:oauth:2.0:oob'\n                    client_id: TWhM-tNSuncnqN7DBJmoyeLnk6K3iJJ71KKXxgL1hPM\n                    client_secret: ZEaFUFmF0umgBX1qKJDjaU99Q31lDkOU8NutzTOoliw\n                    vapid_key: BCk-QqERU0q-CfYZjcuB6lnyyOYfJ2AifKqfeGIm7Z-HiTU5T9eTG5GxVA0_OH5mMlI4UkkDTpaZwozy0TzdZ2M=\n        '422':\n          description: 'If a required parameter is missing or improperly formatted, the request will fail.'\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n                required:\n                  - error\n      operationId: post-api-v1-apps\n      description: Create a new application to obtain OAuth2 credentials.\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                client_name:\n                  type: string\n                redirect_uris:\n                  format: uri\n                  oneOf:\n                    - format: uri\n                      description: Use a URL to redirect the user to a web page after authorization.\n                    - enum:\n                        - 'urn:ietf:wg:oauth:2.0:oob'\n                      description: Pass this constant to display the authorization code to the user instead of redirecting to a web page.\n                  description: 'Where the user should be redirected after authorization. Called this because it''s apparently possible to pass multiple redirect_uris, but is documented nowhere on what syntax you need to use.'\n                  type: string\n                scopes:\n                  type: string\n                  description: Space separated list of scopes.\n                  default: read\n                website:\n                  type: string\n                  format: uri\n                  description: A URL to the homepage of your app.\n              required:\n                - client_name\n                - redirect_uris\n      tags:\n        - Applications\n  /api/v1/apps/verify_credentials:\n    get:\n      summary: Verify your app works\n      responses:\n        '200':\n          description: 'If the Authorization header was provided with a valid token, you should see your app returned as an Application entity.'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Application'\n              examples:\n                Example 1:\n                  value:\n                    name: test app\n                    website: null\n                    vapid_key: BCk-QqERU0q-CfYZjcuB6lnyyOYfJ2AifKqfeGIm7Z-HiTU5T9eTG5GxVA0_OH5mMlI4UkkDTpaZwozy0TzdZ2M=\n        '401':\n          $ref: '#/components/responses/Invalid-Authentication-Token'\n      operationId: get-api-v1-apps-verify_credentials\n      description: Confirm that the app's OAuth2 credentials work.\n      parameters: []\n      security:\n        - client-auth: []\n      tags:\n        - Applications\n  /oauth/authorize:\n    get:\n      summary: Authorize a user\n      responses:\n        '200':\n          description: |-\n            The authorization code will be returned as a query parameter named `code`.\n\n            ```\n            redirect_uri?code=qDFUEaYrRK5c-HNmTCJbAzazwLRInJ7VHFat0wcMgCU\n            ```\n      operationId: get-oauth-authorize\n      description: 'Displays an authorization form to the user. If approved, it will create and return an authorization code, then redirect to the desired redirect_uri, or show the authorization code if urn:ietf:wg:oauth:2.0:oob was requested. The authorization code can be used while requesting a token to obtain access to user-level methods.'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                response_type:\n                  type: string\n                  enum:\n                    - code\n                  description: Should be equal to `code`.\n                client_id:\n                  type: string\n                  description: 'Client ID, obtained during app registration.'\n                redirect_uri:\n                  type: string\n                  format: uri\n                  description: 'Set a URI to redirect the user to. If this parameter is set to `urn:ietf:wg:oauth:2.0:oob` then the authorization code will be shown instead. Must match one of the redirect URIs declared during app registration.'\n                scope:\n                  type: string\n                  description: 'List of requested OAuth scopes, separated by spaces. Must be a subset of scopes declared during app registration. If not provided, defaults to `read`.'\n                force_login:\n                  type: boolean\n                  description: 'Added in `2.6.0`. Forces the user to re-login, which is necessary for authorizing with multiple accounts from the same instance.'\n              required:\n                - response_type\n                - client_id\n                - redirect_uri\n      tags:\n        - OAuth\n  /oauth/token:\n    post:\n      summary: Obtain a token\n      responses:\n        '200':\n          description: Store the result of this for later use with auth-required methods.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Access-Token'\n              examples:\n                Example 1:\n                  value:\n                    access_token: ZA-Yj3aBD8U8Cm7lKUp-lm9O9BmDgdhHzDeqsY8tlL0\n                    token_type: Bearer\n                    scope: read write follow push\n                    created_at: 1573979017\n        '400':\n          description: 'If you try to request a scope that was not included when registering the app, the request will fail.'\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n                  error_description:\n                    type: string\n                required:\n                  - error\n                  - error_description\n              examples:\n                Invalid Scope Error:\n                  value:\n                    error: invalid_scope\n                    error_description: 'The requested scope is invalid, unknown, or malformed.'\n        '401':\n          $ref: '#/components/responses/Invalid-Authentication-Token'\n      operationId: post-oauth-token\n      description: 'Returns an access token, to be used during API calls that are not public.'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              allOf:\n                - type: object\n                  properties:\n                    client_id:\n                      type: string\n                      description: 'Client ID, obtained during app registration.'\n                    client_secret:\n                      type: string\n                      description: 'Client secret, obtained during app registration.'\n                    redirect_uri:\n                      type: string\n                      description: 'Set a URI to redirect the user to. If this parameter is set to `urn:ietf:wg:oauth:2.0:oob` then the token will be shown instead. Must match one of the redirect URIs declared during app registration.'\n                    scope:\n                      type: string\n                      description: 'List of requested OAuth scops, separated by spaces. Must be a subset of scopes declared during app registration. If not provided, defaults to `read`.'\n                  required:\n                    - client_id\n                    - client_secret\n                    - redirect_uri\n                - oneOf:\n                    - type: object\n                      description: Used for the `authorization_code` flow to gain user-level access.\n                      properties:\n                        grant_type:\n                          type: string\n                          enum:\n                            - authorization_code\n                          description: Set equal to `authorization_code` if `code` is provided in order to gain user-level access.\n                        code:\n                          type: string\n                          description: 'A user authorization code, obtained via `/oauth/authorize`.'\n                      required:\n                        - grant_type\n                        - code\n                    - type: object\n                      description: Used for `client_credentials` flow for app-level access only.\n                      properties:\n                        grant_type:\n                          type: string\n                          enum:\n                            - client_credentials\n                          description: Set equal to `client_credentials` to obtain app-level access only.\n                      required:\n                        - grant_type\n        description: ''\n      tags:\n        - OAuth\n  /oauth/revoke:\n    post:\n      summary: Revoke token\n      tags:\n        - OAuth\n      responses:\n        '200':\n          description: 'If you own the provided token, the API call will provide an empty response. This operation is idempotent, so calling this API multiple times will still return OK.'\n          content:\n            application/json:\n              schema:\n                type: object\n                properties: {}\n        '403':\n          description: 'If you provide a token you don''t own, or no token at all, the API call will return a 403 error.'\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n                  error_description:\n                    type: string\n                required:\n                  - error\n                  - error_description\n              examples:\n                Example 1:\n                  value:\n                    error: unauthorized_client\n                    error_description: You are not authorized to revoke this token\n      operationId: post-oauth-revoke\n      description: Revoke an access token to make it no longer valid for use.\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                client_id:\n                  type: string\n                  description: 'Client ID, obtained during app registration.'\n                client_secret:\n                  type: string\n                  description: 'Client secret, obtained during app registration.'\n                token:\n                  type: string\n                  description: 'The previously obtained token, to be invalidated.'\n              required:\n                - client_id\n                - client_secret\n                - token\n      security:\n        - client-auth: []\n  /api/v1/accounts:\n    post:\n      summary: Register an account\n      tags:\n        - Accounts\n      responses:\n        '200':\n          description: Account creation was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Access-Token'\n        '401':\n          $ref: '#/components/responses/Invalid-Authentication-Token'\n        '422':\n          description: There were validation errors when trying to create the account.\n          content:\n            application/json:\n              schema:\n                type: object\n                x-examples:\n                  Example 1:\n                    error: 'Validation failed: E-mail address can''t be blank, Password can''t be blank, Username can''t be blank, Service agreement must be accepted'\n                    details:\n                      email:\n                        - error: ERR_BLANK\n                          description: can't be blank\n                      password:\n                        - error: ERR_BLANK\n                          description: can't be blank\n                      username:\n                        - error: ERR_BLANK\n                          description: can't be blank\n                      agreement:\n                        - error: ERR_ACCEPTED\n                          description: must be accepted\n                properties:\n                  error:\n                    type: string\n                  details:\n                    type: object\n                    properties:\n                      email:\n                        type: array\n                        items:\n                          type: object\n                          properties:\n                            error:\n                              type: string\n                            description:\n                              type: string\n                          required:\n                            - error\n                            - description\n                      password:\n                        type: array\n                        items:\n                          type: object\n                          properties:\n                            error:\n                              type: string\n                            description:\n                              type: string\n                          required:\n                            - error\n                            - description\n                      username:\n                        type: array\n                        items:\n                          type: object\n                          properties:\n                            error:\n                              type: string\n                            description:\n                              type: string\n                          required:\n                            - error\n                            - description\n                      agreement:\n                        type: array\n                        items:\n                          type: object\n                          properties:\n                            error:\n                              type: string\n                            description:\n                              type: string\n                          required:\n                            - error\n                            - description\n                required:\n                  - error\n                  - details\n      operationId: post-api-v1-accounts\n      description: Creates a user and account records.\n      parameters: []\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                username:\n                  type: string\n                  description: The desired username for the account.\n                email:\n                  type: string\n                  description: The email address to be used for login.\n                  format: email\n                password:\n                  type: string\n                  description: The password to be used for login.\n                agreement:\n                  type: boolean\n                  description: 'Whether the user agrees to the local rules, terms, and policies. **These should be presented to the user in order to allow them to consent before setting this parameter to `true`**.'\n                locale:\n                  type: string\n                  description: The language of the confirmation email that will be sent.\n                reason:\n                  type: string\n                  description: Text that will be reviewed by moderators if registrations require manual approval.\n              required:\n                - username\n                - email\n                - password\n                - agreement\n      security:\n        - client-auth:\n            - 'write:accounts'\n  /api/v1/accounts/verify_credentials:\n    get:\n      summary: Verify account credentials\n      tags:\n        - Accounts\n      responses:\n        '200':\n          description: |-\n            Success.\n\n            Note the extra `source` property, which is not visible on accounts other than your own. Also note that plain-text is used within `source` and HTML is used for their corresponding properties such as note` and `fields`.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/Account'\n                  - type: object\n                    properties:\n                      source:\n                        $ref: '#/components/schemas/Source'\n              examples:\n                Successful response:\n                  value:\n                    id: '14715'\n                    username: trwnh\n                    acct: trwnh\n                    display_name: infinite love ⴳ\n                    locked: false\n                    bot: false\n                    created_at: '2016-11-24T10:02:12.085Z'\n                    note: '\u003cp\u003ei have approximate knowledge of many things. perpetual student. (nb/ace/they)\u003c/p\u003e\u003cp\u003exmpp/email: a@trwnh.com\u003cbr /\u003e\u003ca href=\"https://trwnh.com\" rel=\"nofollow noopener noreferrer\" target=\"_blank\"\u003e\u003cspan class=\"invisible\"\u003ehttps://\u003c/span\u003e\u003cspan class=\"\"\u003etrwnh.com\u003c/span\u003e\u003cspan class=\"invisible\"\u003e\u003c/span\u003e\u003c/a\u003e\u003cbr /\u003ehelp me live: \u003ca href=\"https://liberapay.com/at\" rel=\"nofollow noopener noreferrer\" target=\"_blank\"\u003e\u003cspan class=\"invisible\"\u003ehttps://\u003c/span\u003e\u003cspan class=\"\"\u003eliberapay.com/at\u003c/span\u003e\u003cspan class=\"invisible\"\u003e\u003c/span\u003e\u003c/a\u003e or \u003ca href=\"https://paypal.me/trwnh\" rel=\"nofollow noopener noreferrer\" target=\"_blank\"\u003e\u003cspan class=\"invisible\"\u003ehttps://\u003c/span\u003e\u003cspan class=\"\"\u003epaypal.me/trwnh\u003c/span\u003e\u003cspan class=\"invisible\"\u003e\u003c/span\u003e\u003c/a\u003e\u003c/p\u003e\u003cp\u003e- my triggers are moths and glitter\u003cbr /\u003e- i have all notifs except mentions turned off, so please interact if you wanna be friends! i literally will not notice otherwise\u003cbr /\u003e- dm me if i did something wrong, so i can improve\u003cbr /\u003e- purest person on fedi, do not lewd in my presence\u003cbr /\u003e- #1 ami cole fan account\u003c/p\u003e\u003cp\u003e:fatyoshi:\u003c/p\u003e'\n                    url: 'https://mastodon.social/@trwnh'\n                    avatar: 'https://files.mastodon.social/accounts/avatars/000/014/715/original/34aa222f4ae2e0a9.png'\n                    avatar_static: 'https://files.mastodon.social/accounts/avatars/000/014/715/original/34aa222f4ae2e0a9.png'\n                    header: 'https://files.mastodon.social/accounts/headers/000/014/715/original/5c6fc24edb3bb873.jpg'\n                    header_static: 'https://files.mastodon.social/accounts/headers/000/014/715/original/5c6fc24edb3bb873.jpg'\n                    followers_count: 821\n                    following_count: 178\n                    statuses_count: 33120\n                    last_status_at: '2019-11-24T15:49:42.251Z'\n                    source:\n                      privacy: public\n                      sensitive: false\n                      language: ''\n                      note: \"i have approximate knowledge of many things. perpetual student. (nb/ace/they)\\r\\n\\r\\nxmpp/email: a@trwnh.com\\r\\nhttps://trwnh.com\\r\\nhelp me live: https://liberapay.com/at or https://paypal.me/trwnh\\r\\n\\r\\n- my triggers are moths and glitter\\r\\n- i have all notifs except mentions turned off, so please interact if you wanna be friends! i literally will not notice otherwise\\r\\n- dm me if i did something wrong, so i can improve\\r\\n- purest person on fedi, do not lewd in my presence\\r\\n- #1 ami cole fan account\\r\\n\\r\\n:fatyoshi:\"\n                      fields:\n                        - name: Website\n                          value: 'https://trwnh.com'\n                          verified_at: '2019-08-29T04:14:55.571+00:00'\n                        - name: Sponsor\n                          value: 'https://liberapay.com/at'\n                          verified_at: '2019-11-15T10:06:15.557+00:00'\n                        - name: 'Fan of:'\n                          value: 'Punk-rock and post-hardcore (Circa Survive, letlive., La Dispute, THE FEVER 333)Manga (Yu-Gi-Oh!, One Piece, JoJo''s Bizarre Adventure, Death Note, Shaman King)Platformers and RPGs (Banjo-Kazooie, Boktai, Final Fantasy Crystal Chronicles)'\n                          verified_at: null\n                        - name: 'Main topics:'\n                          value: 'systemic analysis, design patterns, anticapitalism, info/tech freedom, theory and philosophy, and otherwise being a genuine and decent wholesome poster. i''m just here to hang out and talk to cool people!'\n                          verified_at: null\n                      follow_requests_count: 0\n                    emojis:\n                      - shortcode: fatyoshi\n                        url: 'https://files.mastodon.social/custom_emojis/images/000/023/920/original/e57ecb623faa0dc9.png'\n                        static_url: 'https://files.mastodon.social/custom_emojis/images/000/023/920/static/e57ecb623faa0dc9.png'\n                        visible_in_picker: true\n                    fields:\n                      - name: Website\n                        value: '\u003ca href=\"https://trwnh.com\" rel=\"me nofollow noopener noreferrer\" target=\"_blank\"\u003e\u003cspan class=\"invisible\"\u003ehttps://\u003c/span\u003e\u003cspan class=\"\"\u003etrwnh.com\u003c/span\u003e\u003cspan class=\"invisible\"\u003e\u003c/span\u003e\u003c/a\u003e'\n                        verified_at: '2019-08-29T04:14:55.571+00:00'\n                      - name: Sponsor\n                        value: '\u003ca href=\"https://liberapay.com/at\" rel=\"me nofollow noopener noreferrer\" target=\"_blank\"\u003e\u003cspan class=\"invisible\"\u003ehttps://\u003c/span\u003e\u003cspan class=\"\"\u003eliberapay.com/at\u003c/span\u003e\u003cspan class=\"invisible\"\u003e\u003c/span\u003e\u003c/a\u003e'\n                        verified_at: '2019-11-15T10:06:15.557+00:00'\n                      - name: 'Fan of:'\n                        value: 'Punk-rock and post-hardcore (Circa Survive, letlive., La Dispute, THE FEVER 333)Manga (Yu-Gi-Oh!, One Piece, JoJo\u0026apos;s Bizarre Adventure, Death Note, Shaman King)Platformers and RPGs (Banjo-Kazooie, Boktai, Final Fantasy Crystal Chronicles)'\n                        verified_at: null\n                      - name: 'Main topics:'\n                        value: 'systemic analysis, design patterns, anticapitalism, info/tech freedom, theory and philosophy, and otherwise being a genuine and decent wholesome poster. i\u0026apos;m just here to hang out and talk to cool people!'\n                        verified_at: null\n        '401':\n          $ref: '#/components/responses/Invalid-Authentication-Token'\n        '403':\n          description: 'Your user account is currently disabled, missing a confirmed email address, or pending approval.'\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n              examples:\n                Account is disabled:\n                  value:\n                    error: Your login is currently disabled\n                Account is unconfirmed:\n                  value:\n                    error: Your login is missing a confirmed e-mail address\n                Account is unapproved:\n                  value:\n                    error: Your login is currently pending approval\n      operationId: get-api-v1-accounts-verify_credentials\n      security:\n        - user-token-auth:\n            - read\n            - 'read:accounts'\n      parameters: []\n      description: Test to make sure that the user token works.\n  /api/v1/accounts/update_credentials:\n    patch:\n      summary: Update account credentials\n      tags:\n        - Accounts\n      responses:\n        '200':\n          description: Fields were saved successfully.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/Account'\n                  - type: object\n                    properties:\n                      source:\n                        $ref: '#/components/schemas/Source'\n                    required:\n                      - source\n        '401':\n          $ref: '#/components/responses/Invalid-Authentication-Token'\n      operationId: patch-api-v1-accounts-update_credentials\n      description: |-\n        Update the user's display and preferences.\n\n        You should use `/api/v1/apps/verify_credentials` to first obtain plaintext representations from within the `source` parameter, then allow the user to edit these plaintext representations before submitting them through this API. The server will generate the corresponding HTML.\n      security:\n        - user-token-auth:\n            - 'write:accounts'\n            - write\n      parameters: []\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                discoverable:\n                  type: boolean\n                  description: Whether the account should be shown in the user profile directory.\n                bot:\n                  type: boolean\n                  description: Whether the account has a bot flag.\n                display_name:\n                  type: string\n                  description: The display name to use for the profile.\n                note:\n                  type: string\n                  description: The account bio.\n                avatar:\n                  type: string\n                  description: Avatar image encoded using multipart / form data.\n                header:\n                  type: string\n                  description: Header image encoded using multipart / form data.\n                locked:\n                  type: boolean\n                  description: Whether manual approval of follow requests is required.\n                source:\n                  type: object\n                  properties:\n                    privacy:\n                      type: string\n                      description: Default post privacy for authored statuses.\n                    sensitive:\n                      type: boolean\n                      description: Whether to mark authored statuses as sensitive by default.\n                    language:\n                      type: string\n                      description: Default language to use for authored statuses (ISO 6391).\n                fields_attributes:\n                  type: array\n                  description: 'Profile metadata `name` and `value`. (By default, max 4 fields and 255 characters per property / value).'\n                  items:\n                    type: object\n                    properties:\n                      name:\n                        type: string\n                        description: Name of the field.\n                      value:\n                        type: string\n                        description: Value of the field.\n        description: ''\n  '/api/v1/accounts/{id}':\n    parameters:\n      - schema:\n          type: string\n        name: id\n        in: path\n        required: true\n        description: The id of the account in the database.\n    get:\n      summary: Get account profile\n      tags:\n        - Accounts\n      responses:\n        '200':\n          description: Account record will be returned. Note that `acct` of local users does not include the domain name.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Account'\n              examples:\n                Local user:\n                  value:\n                    id: '1'\n                    username: Gargron\n                    acct: Gargron\n                    display_name: Eugen\n                    locked: false\n                    bot: false\n                    created_at: '2016-03-16T14:34:26.392Z'\n                    note: '\u003cp\u003eDeveloper of Mastodon and administrator of mastodon.social. I post service announcements, development updates, and personal stuff.\u003c/p\u003e'\n                    url: 'https://mastodon.social/@Gargron'\n                    avatar: 'https://files.mastodon.social/accounts/avatars/000/000/001/original/d96d39a0abb45b92.jpg'\n                    avatar_static: 'https://files.mastodon.social/accounts/avatars/000/000/001/original/d96d39a0abb45b92.jpg'\n                    header: 'https://files.mastodon.social/accounts/headers/000/000/001/original/c91b871f294ea63e.png'\n                    header_static: 'https://files.mastodon.social/accounts/headers/000/000/001/original/c91b871f294ea63e.png'\n                    followers_count: 318699\n                    following_count: 453\n                    statuses_count: 61013\n                    last_status_at: '2019-11-30T20:02:08.277Z'\n                    emojis: []\n                    fields:\n                      - name: Patreon\n                        value: '\u003ca href=\"https://www.patreon.com/mastodon\" rel=\"me nofollow noopener noreferrer\" target=\"_blank\"\u003e\u003cspan class=\"invisible\"\u003ehttps://www.\u003c/span\u003e\u003cspan class=\"\"\u003epatreon.com/mastodon\u003c/span\u003e\u003cspan class=\"invisible\"\u003e\u003c/span\u003e\u003c/a\u003e'\n                        verified_at: null\n                      - name: Homepage\n                        value: '\u003ca href=\"https://zeonfederated.com\" rel=\"me nofollow noopener noreferrer\" target=\"_blank\"\u003e\u003cspan class=\"invisible\"\u003ehttps://\u003c/span\u003e\u003cspan class=\"\"\u003ezeonfederated.com\u003c/span\u003e\u003cspan class=\"invisible\"\u003e\u003c/span\u003e\u003c/a\u003e'\n                        verified_at: '2019-07-15T18:29:57.191+00:00'\n                Remote user:\n                  value:\n                    id: '23634'\n                    username: noiob\n                    acct: noiob@awoo.space\n                    display_name: shork\n                    locked: false\n                    bot: false\n                    created_at: '2017-02-08T02:00:53.274Z'\n                    note: '\u003cp\u003e:ms_rainbow_flag:​ :ms_bisexual_flag:​ :ms_nonbinary_flag:​ \u003ca href=\"https://awoo.space/tags/awoo\" class=\"mention hashtag\" rel=\"nofollow noopener noreferrer\" target=\"_blank\"\u003e#\u003cspan\u003eawoo\u003c/span\u003e\u003c/a\u003e.space \u003ca href=\"https://awoo.space/tags/admin\" class=\"mention hashtag\" rel=\"nofollow noopener noreferrer\" target=\"_blank\"\u003e#\u003cspan\u003eadmin\u003c/span\u003e\u003c/a\u003e ~ \u003ca href=\"https://awoo.space/tags/bi\" class=\"mention hashtag\" rel=\"nofollow noopener noreferrer\" target=\"_blank\"\u003e#\u003cspan\u003ebi\u003c/span\u003e\u003c/a\u003e ~ \u003ca href=\"https://awoo.space/tags/nonbinary\" class=\"mention hashtag\" rel=\"nofollow noopener noreferrer\" target=\"_blank\"\u003e#\u003cspan\u003enonbinary\u003c/span\u003e\u003c/a\u003e ~ compsci student ~ likes video \u003ca href=\"https://awoo.space/tags/games\" class=\"mention hashtag\" rel=\"nofollow noopener noreferrer\" target=\"_blank\"\u003e#\u003cspan\u003egames\u003c/span\u003e\u003c/a\u003e and weird/ old electronics and will post obsessively about both ~ avatar by \u003cspan class=\"h-card\"\u003e\u003ca href=\"https://weirder.earth/@dzuk\" class=\"u-url mention\" rel=\"nofollow noopener noreferrer\" target=\"_blank\"\u003e@\u003cspan\u003edzuk\u003c/span\u003e\u003c/a\u003e\u003c/span\u003e\u003c/p\u003e'\n                    url: 'https://awoo.space/@noiob'\n                    avatar: 'https://files.mastodon.social/accounts/avatars/000/023/634/original/6ca8804dc46800ad.png'\n                    avatar_static: 'https://files.mastodon.social/accounts/avatars/000/023/634/original/6ca8804dc46800ad.png'\n                    header: 'https://files.mastodon.social/accounts/headers/000/023/634/original/256eb8d7ac40f49a.png'\n                    header_static: 'https://files.mastodon.social/accounts/headers/000/023/634/original/256eb8d7ac40f49a.png'\n                    followers_count: 553\n                    following_count: 405\n                    statuses_count: 28982\n                    last_status_at: '2019-12-01T00:39:57.264Z'\n                    emojis:\n                      - shortcode: ms_rainbow_flag\n                        url: 'https://files.mastodon.social/custom_emojis/images/000/028/691/original/6de008d6281f4f59.png'\n                        static_url: 'https://files.mastodon.social/custom_emojis/images/000/028/691/static/6de008d6281f4f59.png'\n                        visible_in_picker: true\n                      - shortcode: ms_bisexual_flag\n                        url: 'https://files.mastodon.social/custom_emojis/images/000/050/744/original/02f94a5fca7eaf78.png'\n                        static_url: 'https://files.mastodon.social/custom_emojis/images/000/050/744/static/02f94a5fca7eaf78.png'\n                        visible_in_picker: true\n                      - shortcode: ms_nonbinary_flag\n                        url: 'https://files.mastodon.social/custom_emojis/images/000/105/099/original/8106088bd4782072.png'\n                        static_url: 'https://files.mastodon.social/custom_emojis/images/000/105/099/static/8106088bd4782072.png'\n                        visible_in_picker: true\n                    fields:\n                      - name: Pronouns\n                        value: they/them\n                        verified_at: null\n                      - name: Alt\n                        value: '\u003cspan class=\"h-card\"\u003e\u003ca href=\"https://cybre.space/@noiob\" class=\"u-url mention\" rel=\"nofollow noopener noreferrer\" target=\"_blank\"\u003e@\u003cspan\u003enoiob\u003c/span\u003e\u003c/a\u003e\u003c/span\u003e'\n                        verified_at: null\n                      - name: Bots\n                        value: '\u003cspan class=\"h-card\"\u003e\u003ca href=\"https://botsin.space/@darksouls\" class=\"u-url mention\" rel=\"nofollow noopener noreferrer\" target=\"_blank\"\u003e@\u003cspan\u003edarksouls\u003c/span\u003e\u003c/a\u003e\u003c/span\u003e, \u003cspan class=\"h-card\"\u003e\u003ca href=\"https://botsin.space/@nierautomata\" class=\"u-url mention\" rel=\"nofollow noopener noreferrer\" target=\"_blank\"\u003e@\u003cspan\u003enierautomata\u003c/span\u003e\u003c/a\u003e\u003c/span\u003e, code for \u003cspan class=\"h-card\"\u003e\u003ca href=\"https://botsin.space/@awoobot\" class=\"u-url mention\" rel=\"nofollow noopener noreferrer\" target=\"_blank\"\u003e@\u003cspan\u003eawoobot\u003c/span\u003e\u003c/a\u003e\u003c/span\u003e'\n                        verified_at: null\n                      - name: Website\n                        value: '\u003ca href=\"http://shork.xyz\" rel=\"nofollow noopener noreferrer\" target=\"_blank\"\u003e\u003cspan class=\"invisible\"\u003ehttp://\u003c/span\u003e\u003cspan class=\"\"\u003eshork.xyz\u003c/span\u003e\u003cspan class=\"invisible\"\u003e\u003c/span\u003e\u003c/a\u003e'\n                        verified_at: '2019-11-23T20:25:47.907+00:00'\n                Suspended user:\n                  value:\n                    id: '14'\n                    username: stigatle\n                    acct: stigatle@quitter.no\n                    display_name: ''\n                    locked: false\n                    bot: false\n                    discoverable: false\n                    group: false\n                    created_at: '2016-03-18T10:04:51.700Z'\n                    note: ''\n                    url: 'https://quitter.no/stigatle'\n                    avatar: 'https://mastodon.social/avatars/original/missing.png'\n                    avatar_static: 'https://mastodon.social/avatars/original/missing.png'\n                    header: 'https://mastodon.social/headers/original/missing.png'\n                    header_static: 'https://mastodon.social/headers/original/missing.png'\n                    followers_count: 0\n                    following_count: 0\n                    statuses_count: 0\n                    last_status_at: null\n                    suspended: true\n                    emojis: []\n                    fields: []\n        '401':\n          $ref: '#/components/responses/Invalid-Authentication-Token'\n        '404':\n          description: Account does not exist\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n              examples:\n                Example 1:\n                  value:\n                    error: Record not found\n        '410':\n          description: Account is suspended\n      operationId: get-api-v1-accounts-id\n      description: View information about a profile.\n  '/api/v1/accounts/{id}/statuses':\n    parameters:\n      - schema:\n          type: string\n        name: id\n        in: path\n        required: true\n        description: The id of the account in the database.\n    get:\n      summary: Statuses for user\n      tags:\n        - Statuses\n        - Accounts\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Status'\n        '401':\n          description: 'Instance is in whitelist mode or running a version of Mastodon older than 2.7.0, and the Authorization header is invalid or missing.'\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n                required:\n                  - error\n              examples:\n                whitelist:\n                  value:\n                    error: This API requires an authenticated user.\n                pre-2.7.0:\n                  value:\n                    error: The access token is invalid\n        '404':\n          description: Account is deleted or does not exist.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n                required:\n                  - error\n              examples:\n                Example 1:\n                  value:\n                    error: Record not found\n        '410':\n          description: Account is suspended.\n      operationId: get-api-v1-accounts-id-statuses\n      description: |-\n        Statuses posted to the given account.\n\n        Public for public statuses only, or user_token + read:statuses (for private statuses the user is authorized to see).\n      security:\n        - user-token-auth:\n            - 'read:statuses'\n      parameters: []\n  '/api/v1/accounts/{id}/followers':\n    parameters:\n      - schema:\n          type: string\n        name: id\n        in: path\n        required: true\n        description: The id of the account in the database.\n    get:\n      summary: Get account's followers.\n      tags:\n        - Accounts\n      responses:\n        '200':\n          description: Success\n          headers:\n            Link:\n              schema:\n                type: string\n              description: 'Because the ID of follow relationships is not generally used or provided with any API calls, an HTTP `Link` header is used instead to indicate next and previous pages. You will have to parse this header yourself to extract the paging URLs. Format: \u003curl\u003e; rel=\"next\", \u003curl\u003e; rel=\"prev\"'\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Account'\n              examples:\n                Limit=2:\n                  value:\n                    - id: '1020382'\n                      username: atul13061987\n                      acct: atul13061987\n                      display_name: ''\n                      locked: false\n                      bot: false\n                      created_at: '2019-12-04T07:17:02.745Z'\n                      note: \u003cp\u003e\u003c/p\u003e\n                      url: 'https://mastodon.social/@atul13061987'\n                      avatar: 'https://mastodon.social/avatars/original/missing.png'\n                      avatar_static: 'https://mastodon.social/avatars/original/missing.png'\n                      header: 'https://mastodon.social/headers/original/missing.png'\n                      header_static: 'https://mastodon.social/headers/original/missing.png'\n                      followers_count: 0\n                      following_count: 2\n                      statuses_count: 0\n                      last_status_at: null\n                      emojis: []\n                      fields: []\n                    - id: '1020381'\n                      username: linuxliner\n                      acct: linuxliner\n                      display_name: ''\n                      locked: false\n                      bot: false\n                      created_at: '2019-12-04T07:15:56.426Z'\n                      note: \u003cp\u003e\u003c/p\u003e\n                      url: 'https://mastodon.social/@linuxliner'\n                      avatar: 'https://mastodon.social/avatars/original/missing.png'\n                      avatar_static: 'https://mastodon.social/avatars/original/missing.png'\n                      header: 'https://mastodon.social/headers/original/missing.png'\n                      header_static: 'https://mastodon.social/headers/original/missing.png'\n                      followers_count: 0\n                      following_count: 2\n                      statuses_count: 0\n                      last_status_at: null\n                      emojis: []\n                      fields: []\n        '401':\n          description: 'Invalid or missing Authorization header, or instance is in whitelist mode and your token is not authorized with a user.'\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n                required:\n                  - error\n              examples:\n                header:\n                  value:\n                    error: The access token is invalid\n                whitelist:\n                  value:\n                    error: This API requires an authenticated user\n        '404':\n          description: Account is deleted or does not exist.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n                required:\n                  - error\n              examples:\n                Example 1:\n                  value:\n                    error: Record not found\n        '410':\n          description: Account is suspended.\n      operationId: get-api-v1-accounts-id-followers\n      description: 'Accounts which follow the given account, if network is not hidden by the account owner.'\n      security:\n        - client-auth:\n            - 'read:accounts'\n      parameters: []\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                max_id:\n                  type: string\n                  description: '**Internal parameter**. Use HTTP `Link` header for pagination.'\n                since_id:\n                  type: string\n                  description: '**Internal parameter**. Use HTTP `Link` header for pagination.'\n                limit:\n                  type: integer\n                  description: Maximum number of results to return.\n                  default: 40\n  '/api/v1/accounts/{id}/following':\n    parameters:\n      - schema:\n          type: string\n        name: id\n        in: path\n        required: true\n        description: The id of the account in the database.\n    get:\n      summary: List users following account\n      tags:\n        - Accounts\n      responses:\n        '200':\n          description: OK\n          headers:\n            Link:\n              schema:\n                type: string\n              description: 'Because the ID of follow relationships is not generally used or provided with any API calls, an HTTP `Link` header is used instead to indicate the next and previous pages. You will have to parse this header yourself to extract the paging URLs. Format: \u003curl\u003e; rel=\"next\", \u003curl\u003e; rel=\"prev\"'\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Account'\n              examples:\n                Example 1:\n                  value:\n                    - id: '963410'\n                      username: gautambhatia\n                      acct: gautambhatia\n                      display_name: Gautam Bhatia\n                      locked: false\n                      bot: false\n                      created_at: '2019-11-07T13:06:57.442Z'\n                      note: '\u003cp\u003eSF reader, editor, and writer.\u003c/p\u003e'\n                      url: 'https://mastodon.social/@gautambhatia'\n                      avatar: 'https://files.mastodon.social/accounts/avatars/000/963/410/original/d8e0fd5cefcf9687.jpg'\n                      avatar_static: 'https://files.mastodon.social/accounts/avatars/000/963/410/original/d8e0fd5cefcf9687.jpg'\n                      header: 'https://mastodon.social/headers/original/missing.png'\n                      header_static: 'https://mastodon.social/headers/original/missing.png'\n                      followers_count: 1900\n                      following_count: 52\n                      statuses_count: 183\n                      last_status_at: '2019-12-02T17:52:39.463Z'\n                      emojis: []\n                      fields: []\n                    - id: '1007400'\n                      username: seafrog\n                      acct: seafrog@glitterkitten.co.uk\n                      display_name: \"\\U0001F413\\U0001F983 Heck Partridge \\U0001F920 \\U0001F986\"\n                      locked: false\n                      bot: false\n                      created_at: '2019-11-19T18:46:49.977Z'\n                      note: '\u003cp\u003ehi im elise!! this is scribblefrog''s new account\u003c/p\u003e\u003cp\u003eshe/her, 27\u003c/p\u003e'\n                      url: 'https://glitterkitten.co.uk/@seafrog'\n                      avatar: 'https://files.mastodon.social/accounts/avatars/001/007/400/original/306cd22c1b118693.png'\n                      avatar_static: 'https://files.mastodon.social/accounts/avatars/001/007/400/original/306cd22c1b118693.png'\n                      header: 'https://files.mastodon.social/accounts/headers/001/007/400/original/fd9728559f7265f5.jpeg'\n                      header_static: 'https://files.mastodon.social/accounts/headers/001/007/400/original/fd9728559f7265f5.jpeg'\n                      followers_count: 168\n                      following_count: 223\n                      statuses_count: 944\n                      last_status_at: '2019-12-04T00:44:08.603Z'\n                      emojis: []\n                      fields:\n                        - name: gotdamb\n                          value: frog\n                          verified_at: null\n                        - name: whomst lov\n                          value: the oceane\n                          verified_at: null\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n                required:\n                  - error\n              examples:\n                header:\n                  value:\n                    error: The access token is invalid\n                whitelist:\n                  value:\n                    error: This API requires an authenticated user\n        '404':\n          description: Account is deleted or does not exist.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n                required:\n                  - error\n              examples:\n                Example 1:\n                  value:\n                    error: Record not found\n        '410':\n          description: Account is suspended.\n      operationId: get-api-v1-accounts-id-following\n      description: 'Accounts which the given account is following, if network is not hidden by the account owner.'\n      security:\n        - client-auth:\n            - 'read:accounts'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                max_id:\n                  type: string\n                  description: '**Internal parameter**. Use HTTP `Link` header for pagination.'\n                since_id:\n                  type: string\n                  description: '**Internal parameter**. Use HTTP `Link` header for pagination.'\n                limit:\n                  type: integer\n                  default: 40\n                  description: Maximum number of results to return.\n  '/api/v1/accounts/{id}/featured_tags':\n    parameters:\n      - schema:\n          type: string\n        name: id\n        in: path\n        required: true\n    get:\n      summary: Featured tags\n      tags:\n        - Tags\n        - Accounts\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Featured-Tag'\n        '401':\n          $ref: '#/components/responses/Invalid-Authentication-Token'\n      operationId: get-api-v1-accounts-id-featured_tags\n      description: Tags featured by this account.\n      security:\n        - user-token-auth:\n            - 'read:accounts'\n      parameters: []\n  '/api/v1/accounts/{id}/lists':\n    parameters:\n      - schema:\n          type: string\n        name: id\n        in: path\n        required: true\n    get:\n      summary: Lists containing this account\n      tags:\n        - Lists\n        - Accounts\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                description: 'If the account is part of any lists, those entities will be returned. If the account is not part of any of your lists, then an empty array will be returned.'\n                items:\n                  $ref: '#/components/schemas/List'\n              examples:\n                Part of lists:\n                  value:\n                    - id: '13694'\n                      title: dev\n                Not in any lists.:\n                  value: []\n        '401':\n          $ref: '#/components/responses/Invalid-Authentication-Token'\n        '404':\n          description: Account with given id does not exist or is deleted.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n                required:\n                  - error\n              examples:\n                Example 1:\n                  value:\n                    error: Record not found\n        '410':\n          description: Account with given id is suspended.\n      operationId: get-api-v1-accounts-id-lists\n      description: User lists that you have added this account to.\n      security:\n        - user-token-auth:\n            - 'read:lists'\n      parameters: []\n  '/api/v1/accounts/{id}/identity_proofs':\n    parameters:\n      - schema:\n          type: string\n        name: id\n        in: path\n        required: true\n        description: The id of the account in the database.\n    get:\n      summary: Identity proofs for account\n      tags:\n        - Identity Proofs\n        - Accounts\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Identity-Proof'\n              examples:\n                Example 1:\n                  value:\n                    - provider: Keybase\n                      provider_username: gargron\n                      updated_at: '2019-07-21T20:14:39.596Z'\n                      proof_url: 'https://keybase.io/gargron/sigchain#5cfc20c7018f2beefb42a68836da59a792e55daa4d118498c9b1898de7e845690f'\n                      profile_url: 'https://keybase.io/gargron'\n        '404':\n          description: Account with given id is deleted or does not exist\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n              examples:\n                Example 1:\n                  value:\n                    error: Record not found\n        '410':\n          description: Account with given id is suspended.\n        '422':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: object\n                x-examples:\n                  Example 1:\n                    error: This method requires an authenticated user\n                properties:\n                  error:\n                    type: string\n                required:\n                  - error\n              examples:\n                Example 1:\n                  value:\n                    error: This method requires an authenticated user\n      operationId: get-api-v1-accounts-id-identity_proofs\n      security:\n        - user-token-auth: []\n      description: Get the identity proofs for an account.\n  '/api/v1/accounts/{id}/follow':\n    parameters:\n      - schema:\n          type: string\n        name: id\n        in: path\n        required: true\n        description: The id of the account in the database.\n    post:\n      summary: Follow account\n      tags:\n        - Accounts\n      responses:\n        '200':\n          description: 'Successfully followed, or account was already followed.'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Relationship'\n        '403':\n          description: Trying to follow someone that you block or that blocks you.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n                required:\n                  - error\n              examples:\n                Example 1:\n                  value:\n                    error: This action is not allowed\n      operationId: post-api-v1-accounts-id-follow\n      security:\n        - user-token-auth:\n            - 'write:follows'\n            - follow\n      parameters: []\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                reblogs:\n                  type: boolean\n                  description: Receive this account's reblogs in home timeline?\n                  default: true\n                notify:\n                  type: boolean\n                  default: false\n                  description: Receive notifications when this account posts a status?\n      description: Follows the given account. Can be used to update whether ot show reblogs or enable notifications.\n  '/api/v1/accounts/{id}/unfollow':\n    parameters:\n      - schema:\n          type: string\n        name: id\n        in: path\n        required: true\n        description: The id of the account in the database.\n    post:\n      summary: Unfollow\n      tags:\n        - Accounts\n      responses:\n        '200':\n          description: 'Successfully unfollowed, or account was already not followed.'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Relationship'\n              examples:\n                Example 1:\n                  value:\n                    id: '3'\n                    following: false\n                    showing_reblogs: false\n                    notifying: false\n                    followed_by: false\n                    blocking: false\n                    blocked_by: false\n                    muting: false\n                    muting_notifications: false\n                    requested: false\n                    domain_blocking: false\n                    endorsed: false\n        '401':\n          description: Invalid or missing Authorization header.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n                required:\n                  - error\n              examples:\n                Example 1:\n                  value:\n                    error: The access token is invalid\n      operationId: post-api-v1-accounts-id-unfollow\n      description: Unfollow the given account.\n      security:\n        - user-token-auth:\n            - 'write:follows'\n            - follow\n      parameters: []\ncomponents:\n  schemas:\n    Access-Token:\n      title: App-Token\n      x-stoplight:\n        id: ncqgsrz14ym19\n      type: object\n      properties:\n        access_token:\n          type: string\n          description: An OAuth token to be used for authorization.\n        token_type:\n          type: string\n          description: The OAuth token type. Mastodon uses `Bearer` tokens.\n          enum:\n            - Bearer\n        scope:\n          type: string\n          description: 'The OAuth scopes granted by this token, space-separated.'\n        created_at:\n          type: number\n          description: When the token was generated (UNIX Timestamp).\n      required:\n        - access_token\n        - token_type\n        - scope\n        - created_at\n    Account:\n      title: Account\n      x-stoplight:\n        id: 9bgeu11t3p4j6\n      type: object\n      properties:\n        id:\n          type: string\n          description: The account id `header`. Cast from an integer but not guaranteed to be a number.\n          example: '23634'\n        username:\n          type: string\n          description: 'The username of the account, **not including the domain**.'\n        acct:\n          type: string\n          description: 'The webfinger account URI. Equal to `username` for local users, or `username@domain` for remote users.'\n        url:\n          type: string\n          description: The location of the user's profile page (HTTPS URI).\n          format: uri\n        moved:\n          $ref: '#/components/schemas/Account'\n        fields:\n          $ref: '#/components/schemas/Field'\n        bot:\n          type: boolean\n          description: 'A presentational flag. Indicates that the account may perform automated actions, may not be monitored, or identifies as a robot.'\n        suspended:\n          type: boolean\n          description: An extra entity returned when an account is suspended.\n        mute_expires_at:\n          type: string\n          format: date-time\n          description: 'When a timed mute will expire, if applicable (ISO 8601 Datetime).'\n        created_at:\n          type: string\n          format: date-time\n          description: When the account was created (ISO 8601 Datetime).\n        last_status_at:\n          type: string\n          format: date-time\n          description: When the most recent status was posted (ISO 8601 Datetime).\n        statuses_count:\n          type: number\n          description: How many statuses are attached to this account.\n          minimum: 0\n        followers_count:\n          type: number\n          description: The reported followers of this profile.\n          minimum: 0\n        following_count:\n          type: number\n          description: The reported follows of this profile.\n          minimum: 0\n        display_name:\n          type: string\n          description: The profile's display name.\n        note:\n          type: string\n          description: The profile's bio / description (HTML string).\n        avatar:\n          type: string\n          description: An image icon that is shown next to statuses and in the profile.\n          format: uri\n        avatar_static:\n          type: string\n          description: A static version of the avatar. Equal to `avatar` if its value is a static image; different if `avatar` is an animated GIF.\n          format: uri\n        header:\n          type: string\n          description: An image banner that is shown above the profile and in profile cards.\n          format: uri\n        header_static:\n          type: string\n          description: A static version of the header. Equal to `header` if its value is a static image; different if `header` is an animated GIF.\n          format: uri\n        locked:\n          type: boolean\n          description: Whether the account manually approves follow requests.\n        emojis:\n          type: array\n          description: 'Custom emoji entities to be used when rendering the profile. If none, an empty array will be returned.'\n          items:\n            $ref: '#/components/schemas/Emoji'\n        discoverable:\n          type: string\n          description: Whether the account has opted into discovery features such as the profile directory.\n      required:\n        - id\n        - username\n        - acct\n        - url\n        - created_at\n        - statuses_count\n        - followers_count\n        - following_count\n        - display_name\n        - note\n        - avatar\n        - avatar_static\n        - header\n        - header_static\n        - locked\n        - emojis\n        - discoverable\n      x-tags:\n        - Accounts\n    Activity:\n      title: Activity\n      x-stoplight:\n        id: laoulmz8wkrfh\n      type: object\n      description: Represents a weekly bucket of instance activity.\n      properties:\n        week:\n          type: string\n          description: Midnight at the first day of the week. UNIX timestamp.\n        statuses:\n          description: Statuses created since the week began. String cast from an integer.\n          type: string\n        logins:\n          type: string\n          description: User logins since the week began. String cast from an integer.\n        registrations:\n          type: string\n          description: User registrations since the week began. String cast from an integer.\n      required:\n        - week\n        - statuses\n        - logins\n        - registrations\n    Application:\n      title: Application\n      x-stoplight:\n        id: s0e4fxq0juzns\n      type: object\n      properties:\n        name:\n          type: string\n          description: The name of your application.\n        website:\n          type: string\n          nullable: true\n          description: The website associated with your application.\n          format: uri\n        vapid_key:\n          type: string\n          description: ' Used for Push Streaming API. Returned with POST /api/v1/apps. Equivalent to PushSubscription#server_key.'\n      required:\n        - name\n      description: Represents an application that interfaces with the REST API to access accounts or post statuses.\n      x-tags:\n        - Applications\n    Attachment:\n      title: Attachment\n      x-stoplight:\n        id: kyesjtrexbuw4\n      type: object\n      properties:\n        id:\n          type: string\n          description: The ID of the attachment in the database. Cast from integer but not guaranteed to be a number.\n        url:\n          type: string\n          format: uri\n          description: The location of the original full-size attachment.\n        preview_url:\n          type: string\n          format: uri\n          description: The location of a scaled-down preview of the attachment.\n        remote_url:\n          type: string\n          format: uri\n          description: The location of the full-size original attachment on the remote website. Null if the attachment is local.\n        description:\n          type: string\n          description: 'Alternate text that describes what is in the media attachment, to be used for the visually impaired or when media attachments do not load.'\n        blurhash:\n          type: string\n          description: 'A hash computed by the BlurHash algorithm, for generating colorful preview thumbnails when media has not been downloaded yet.'\n      required:\n        - id\n        - url\n        - preview_url\n    Card:\n      title: Card\n      x-stoplight:\n        id: 3rnsdy0r7wiyc\n      description: Represents a rich preview card that is generated using OpenGraph tags from a URL.\n      properties:\n        url:\n          type: string\n          format: uri\n          description: Location of linked resource.\n        title:\n          type: string\n          description: Title of linked resource.\n        description:\n          type: string\n          description: Description of preview.\n        type:\n          type: string\n          enum:\n            - link\n            - photo\n            - video\n            - rich\n          description: |-\n            The type of preview card.\n            - `link` = Link OEmbed\n            - `photo` = Photo OEmbed\n            - `video` = Video OEmbed\n            - `rich` = iFrame OEmbed. Not currently accepted, so won't show up in practice.\n        author_name:\n          type: string\n          description: The author of the original resource.\n        author_url:\n          type: string\n          format: uri\n          description: A link to the author of the original resource.\n        provider_name:\n          type: string\n          description: The provider of the original resource.\n        provider_url:\n          type: string\n          format: uri\n          description: A link to the provider of the original resource.\n        html:\n          type: string\n          description: HTML to be used for generating the preview card.\n        width:\n          type: integer\n          description: 'Width of preview, in pixels.'\n        height:\n          type: integer\n          description: 'Height of preview, in pixels.'\n        image:\n          type: string\n          format: uri\n          description: Preview thumbnail.\n        embed_url:\n          type: string\n          format: uri\n          description: 'Used for photo embeds, instead of custom `html`.'\n        blurhash:\n          type: string\n          description: 'A hash compute by the BlurHash algorithm, for generating colorful preview thumbnails when media has not been downloaded yet.'\n      required:\n        - url\n        - title\n        - description\n        - type\n      examples:\n        - url: 'https://www.youtube.com/watch?v=OMv_EPMED8Y'\n          title: ♪ Brand New Friend (Christmas Song!)\n          description: ''\n          type: video\n          author_name: YOGSCAST Lewis \u0026 Simon\n          author_url: 'https://www.youtube.com/user/BlueXephos'\n          provider_name: YouTube\n          provider_url: 'https://www.youtube.com/'\n          html: '\u003ciframe width=\"480\" height=\"270\" src=\"https://www.youtube.com/embed/OMv_EPMED8Y?feature=oembed\" frameborder=\"0\" allowfullscreen=\"\"\u003e\u003c/iframe\u003e'\n          width: 480\n          height: 270\n          image: 'https://files.mastodon.social/preview_cards/images/014/179/145/original/9cf4b7cf5567b569.jpeg'\n          embed_url: ''\n          blurhash: 'UvK0HNkV,:s9xBR%njog0fo2W=WBS5ozofV@'\n        - url: 'https://www.flickr.com/photos/tomfenskephotography/49088768431/'\n          title: Oregon\n          description: ''\n          type: photo\n          author_name: Tom Fenske Photography\n          author_url: 'https://www.flickr.com/photos/tomfenskephotography/'\n          provider_name: Flickr\n          provider_url: 'https://www.flickr.com/'\n          html: ''\n          width: 1024\n          height: 427\n          image: 'https://files.mastodon.social/preview_cards/images/014/287/139/original/651b1c6976817824.jpeg'\n          embed_url: 'https://live.staticflickr.com/65535/49088768431_6a4322b3bb_b.jpg'\n          blurhash: 'UnE{@jt6M_oIAhjYs+ayT2WBf9ayRkkDXAj['\n        - url: 'https://www.theguardian.com/money/2019/dec/07/i-lost-my-193000-inheritance-with-one-wrong-digit-on-my-sort-code'\n          title: '‘I lost my £193,000 inheritance – with one wrong digit on my sort code’'\n          description: 'When Peter Teich’s money went to another Barclays customer, the bank offered £25 as a token gesture'\n          type: link\n          author_name: ''\n          author_url: ''\n          provider_name: ''\n          provider_url: ''\n          html: ''\n          width: 0\n          height: 0\n          image: null\n          embed_url: ''\n          blurhash: null\n    Client-Credentials:\n      title: Client-Credentials\n      x-stoplight:\n        id: nvyokwqza0vca\n      type: object\n      properties:\n        client_id:\n          type: string\n          description: 'Client ID key, to be used for obtaining OAuth tokens.'\n        client_secret:\n          type: string\n          description: 'Client secret key, to be used for obtaining OAuth tokens.'\n      required:\n        - client_id\n        - client_secret\n      description: Client credentials returned when creating an app.\n      examples:\n        - client_id: TWhM-tNSuncnqN7DBJmoyeLnk6K3iJJ71KKXxgL1hPM\n          client_secret: ZEaFUFmF0umgBX1qKJDjaU99Q31lDkOU8NutzTOoliw\n      x-tags:\n        - Applications\n    Emoji:\n      title: Emoji\n      x-stoplight:\n        id: x8px3r5ceivxr\n      type: object\n      properties:\n        shortcode:\n          type: string\n          description: The name of the custom emoji.\n        url:\n          type: string\n          format: uri\n          description: A link to the custom emoji.\n        static_url:\n          type: string\n          format: uri\n          description: A link to a static copy of the custom emoji.\n        visible_in_picker:\n          type: boolean\n          description: Whether this Emoji should be visible in the picker or unlisted.\n        category:\n          type: string\n          description: Used for sorting custom emoji in the picker.\n      required:\n        - shortcode\n        - url\n        - static_url\n        - visible_in_picker\n      description: Represents a custom emoji.\n      examples:\n        - shortcode: blobaww\n          url: 'https://files.mastodon.social/custom_emojis/images/000/011/739/original/blobaww.png'\n          static_url: 'https://files.mastodon.social/custom_emojis/images/000/011/739/static/blobaww.png'\n          visible_in_picker: true\n          category: Blobs\n      x-tags:\n        - Emojis\n    Featured-Tag:\n      title: Featured-Tag\n      x-stoplight:\n        id: 28qu5cwm6edgw\n      type: object\n      description: Represents a hashtag that is featured on a profile.\n      properties:\n        id:\n          type: string\n          description: The internal ID of the featured tag in the database. Cast from integer but not guaranteed to be a number.\n        name:\n          type: string\n          description: The name of the hashtag being featured.\n        url:\n          type: string\n          description: A link to all statuses by a user that contain this hashtag.\n          format: uri\n        statuses_count:\n          type: integer\n          description: The number of authored statuses containing this hashtag.\n        last_status_at:\n          type: string\n          description: The timestamp of the last authored status containing this hashtag.ISO 8601 Datetime.\n          format: date-time\n      required:\n        - id\n        - name\n        - url\n        - statuses_count\n        - last_status_at\n    Field:\n      title: Field\n      x-stoplight:\n        id: z0seiqzqx3san\n      type: object\n      description: Represents a profile field as name-value pair with optional verification.\n      properties:\n        name:\n          type: string\n          description: The key of a given field's key-value pair.\n        value:\n          type: string\n          description: The value associated with the `name` key (HTML).\n        verified_at:\n          type: string\n          format: date-time\n          description: 'Timestamp of when the server verified a URL value for a rel=\"me\" link (ISO 8601 Datetime). Only defined if `value` is a verified URL. Otherwise, null.'\n      required:\n        - name\n        - value\n      examples:\n        - name: Website\n          value: 'https://trwnh.com'\n          verified_at: '2019-08-29T04:14:55.571+00:00'\n        - name: Sponsor\n          value: 'https://liberapay.com/at'\n          verified_at: '2019-11-15T10:06:15.557+00:00'\n        - name: 'Fan of:'\n          value: 'Punk-rock and post-hardcore (Circa Survive, letlive., La Dispute, THE FEVER 333)Manga (Yu-Gi-Oh!, One Piece, JoJo''s Bizarre Adventure, Death Note, Shaman King)Platformers and RPGs (Banjo-Kazooie, Boktai, Final Fantasy Crystal Chronicles)'\n          verified_at: null\n        - name: 'Main topics:'\n          value: 'systemic analysis, design patterns, anticapitalism, info/tech freedom, theory and philosophy, and otherwise being a genuine and decent wholesome poster. i''m just here to hang out and talk to cool people!'\n          verified_at: null\n      x-tags:\n        - Accounts\n    History:\n      title: History\n      x-stoplight:\n        id: gnd8vp9n6jpa3\n      x-tags:\n        - Tags\n      type: object\n      description: Represents daily usage history of a hashtag.\n      properties:\n        day:\n          type: string\n          description: UNIX timestamp on midnight of the given day.\n        uses:\n          type: string\n          description: The counted usage of the tag within that day. Cast from integer.\n        accounts:\n          type: string\n          description: The total of accounts using the tag within that day. Cast from integer.\n      required:\n        - day\n        - uses\n        - accounts\n      examples:\n        - day: string\n          uses: string\n          accounts: string\n    Identity-Proof:\n      title: Identity-Proof\n      x-stoplight:\n        id: nbj1lnwz95tt3\n      type: object\n      properties:\n        provider:\n          type: string\n          description: The name of the identity provider.\n        provider_username:\n          type: string\n          description: The account owner's username on the identity provider's service.\n        profile_url:\n          type: string\n          format: uri\n          description: The account owner's profile URL on the identity provider.\n        proof_url:\n          type: string\n          format: uri\n          description: 'A link to a statement of identity proof, hosted by the identity provider.'\n        updated_at:\n          type: string\n          description: When the identity proof was last updated. ISO 8601 DateTime.\n          format: date-time\n      required:\n        - provider\n        - provider_username\n        - profile_url\n        - proof_url\n        - updated_at\n      description: Represents a proof from an external identity provider.\n    List:\n      title: List\n      x-stoplight:\n        id: iz3xezwcfiyi5\n      type: object\n      description: Represents a list of some users that the authenticated user follows.\n      properties:\n        id:\n          type: string\n          description: 'The internal database ID of the list. Cast from an integer, but not guaranteed to be a number.'\n        title:\n          type: string\n          description: The user-defined title of the list.\n        replies_policy:\n          type: string\n          enum:\n            - followed\n            - list\n            - none\n          description: |-\n            The user-defined title of the list.\n\n            - `followed` = Show replies to any followed user.\n            - `list` = Show replies to members of the list.\n            - `none` = Show replies to no one.\n      required:\n        - id\n        - title\n    Mention:\n      title: Mention\n      x-stoplight:\n        id: ephprj9etl86y\n      type: object\n      properties:\n        id:\n          type: string\n          description: 'The account id of the mentioned user. Cast from an integer, but not guaranteed to be a number.'\n        username:\n          type: string\n          description: The username of the mentioned user.\n        acct:\n          type: string\n          description: 'The webfinger acct: URI of the mentioned user. Equivalent to `username` for local users, or `username@domain` for remote users.'\n        url:\n          type: string\n          description: The location of the mentioned user's profile.\n          format: uri\n      required:\n        - id\n        - username\n        - acct\n        - url\n      description: Represents a mention of a user within the content of a status.\n      examples:\n        - id: '952529'\n          username: alayna\n          url: 'https://desvox.es/users/alayna'\n          acct: alayna@desvox.es\n        - id: '14715'\n          username: trwnh\n          url: 'https://mastodon.social/@trwnh'\n          acct: trwnh\n    Poll:\n      title: Poll\n      x-stoplight:\n        id: eck898dvd4y4a\n      description: Represents a poll attached to a status.\n      type: object\n      properties:\n        id:\n          type: string\n          description: The ID of the poll in the database. Cast from an integer but not guaranteed to be a number.\n        expires_at:\n          type: string\n          description: When the poll ends. ISO8601 DateTime or null if the poll does not end.\n        expired:\n          type: boolean\n          description: Is the poll currently expired?\n        multiple:\n          type: boolean\n          description: Does the poll allow multiple-choice answers?\n        votes_count:\n          type: integer\n          description: How many votes have been recieved.\n        voters_count:\n          type: integer\n          description: How many unique accounts have voted on a multiple choice poll. Null if `multiple` is false.\n        voted:\n          type: boolean\n          description: 'When called with a user token, has the authorized user voted?'\n        own_votes:\n          type: array\n          description: 'When called with a user token, which options has the authorized user chosen? Contains an array of index values for `options`.'\n          items:\n            type: integer\n        options:\n          type: array\n          description: Possible answers for the poll.\n          items:\n            type: object\n            properties:\n              title:\n                type: string\n                description: The text value of the poll option.\n              votes_count:\n                type: integer\n                description: 'The number of votes received for this option. Number, or null if results are not published yet.'\n                minimum: 0\n            required:\n              - title\n        emojis:\n          type: array\n          description: Custom emoji to be used for rendering poll options.\n          items:\n            $ref: '#/components/schemas/Emoji'\n      required:\n        - id\n        - expired\n        - multiple\n        - votes_count\n        - options\n        - emojis\n    Relationship:\n      title: Relationship\n      x-stoplight:\n        id: m55gcfa8jpe5r\n      description: 'Represents the relationship between accounts, such as following / blocking / muting / etc.'\n      properties:\n        id:\n          type: string\n          description: 'The account id. Cast from an integer, but not guaranteed to be a number.'\n        following:\n          type: boolean\n          description: Are you following this user?\n        requested:\n          type: boolean\n          description: Do you have a pending follow request for this user?\n        followed_by:\n          type: boolean\n          description: Are you followed by this user?\n        muting:\n          type: boolean\n          description: Are you muting this user?\n        muting_notifications:\n          type: boolean\n          description: Are you muting notifications from this user?\n        showing_reblogs:\n          type: boolean\n          description: Are you receiving this user's boosts in your home timeline?\n        notifying:\n          type: boolean\n          description: Have you enabled notifications for this user?\n        blocking:\n          type: boolean\n          description: Are you blocking this user?\n        domain_blocking:\n          type: boolean\n          description: Are you blocking this user's domain?\n        blocked_by:\n          type: boolean\n          description: Is this user blocking you?\n        note:\n          type: string\n          description: This user's profile bio\n      required:\n        - id\n        - following\n        - requested\n        - followed_by\n        - muting\n        - muting_notifications\n        - showing_reblogs\n        - notifying\n        - blocking\n        - domain_blocking\n        - blocked_by\n    Source:\n      title: Source\n      x-stoplight:\n        id: jmpm6jpiz2lfq\n      type: object\n      description: 'Represents display or publishing preferences of user''s own account. Returned as an additional entity when verifying and updated credentials, as an attribute of `Account`.'\n      properties:\n        note:\n          type: string\n          description: Profile bio.\n        fields:\n          type: array\n          description: Metadata about the account.\n          items:\n            $ref: '#/components/schemas/Field'\n        privacy:\n          type: string\n          description: 'The default post privacy to be used for new statuses. `public` = Public post, `unlisted` = unlisted post, `private` = followers-only post, and `direct` = direct post.'\n          enum:\n            - public\n            - unlisted\n            - private\n            - direct\n        sensitive:\n          type: boolean\n          description: Whether new statuses should be marked sensitive by default.\n        language:\n          type: string\n          description: The default posting langauge for new statuses (ISO 639-1 language two-letter code).\n        follower_requests_count:\n          type: number\n          description: The number of pending follow requests.\n      required:\n        - note\n        - fields\n      x-tags:\n        - Accounts\n    Status:\n      title: Status\n      x-stoplight:\n        id: 7bz8wiw45jg0v\n      type: object\n      properties:\n        id:\n          type: string\n          description: ID of the status in the database. Cast from integer but not guaranteed to be a number.\n        uri:\n          type: string\n          format: uri\n          description: URI of the status used for federation.\n        created_at:\n          type: string\n          description: The date when this status was created (ISO 8601 DateTime).\n          format: date-time\n        account:\n          $ref: '#/components/schemas/Account'\n        content:\n          type: string\n          description: HTML-encoded status content.\n        visibility:\n          type: string\n          description: |-\n            Visibility of this status.\n            - `public` = Visible to everyone, shown in public timelines.\n            - `unlisted` = Visible to public, but not included in public timelines.\n            - `private` = Visible to followers only, and to any mentioned users.\n            - `direct` = Visible only to mentioned users.\n          enum:\n            - public\n            - unlisted\n            - private\n            - direct\n        sensitive:\n          type: boolean\n          description: Is the status marked as sensitive content?\n        spoiler_text:\n          type: string\n          description: 'Subject or summary line, below which status content is collapsed until expanded.'\n        media_attachements:\n          type: array\n          description: Media that is attached to this status.\n          items:\n            $ref: '#/components/schemas/Attachment'\n        application:\n          $ref: '#/components/schemas/Application'\n        url:\n          type: string\n          format: uri\n          description: A link to the status's HTML representation.\n        in_reply_to_id:\n          type: string\n          description: ID of the status being replied. Cast from an integer but not guaranteed to be a number.\n        in_reply_to_account_id:\n          type: string\n          description: ID of the account being replied to. Cast from integer but not guaranteed to be a number.\n        reblog:\n          $ref: '#/components/schemas/Status'\n        poll:\n          $ref: '#/components/schemas/Poll'\n        card:\n          $ref: '#/components/schemas/Card'\n        language:\n          type: string\n          description: Primary langauge of this status. ISO 639 Part 1 two-letter langauge code.\n        text:\n          type: string\n          description: 'Plain-text source of a status. Returned instead of `content` when status is deleted, so the user may redraft from the source text without the client having to reverse-engineer the original text from the HTML content.'\n        mentions:\n          type: array\n          description: Mentions of users within the status content.\n          items:\n            $ref: '#/components/schemas/Mention'\n        tags:\n          type: array\n          description: Hashtags used within the status content.\n          items:\n            $ref: '#/components/schemas/Tag'\n        emojis:\n          type: array\n          description: Custom emoji to be used while rendering status content.\n          items:\n            $ref: '#/components/schemas/Emoji'\n        reblogs_count:\n          type: integer\n          minimum: 0\n          description: How many boosts this status has received.\n        favourites_count:\n          type: integer\n          minimum: 0\n          description: How many favourites this status has received.\n        replies_count:\n          type: integer\n          minimum: 0\n          description: How many replies this status has received.\n        favourited:\n          type: boolean\n          description: Have you favourited this status?\n        reblogged:\n          type: boolean\n          description: Have you boosted this status?\n        muted:\n          type: string\n          description: Have you muted notifications for this status's conversation?\n        bookmarked:\n          type: string\n          description: Have you bookmarked this status?\n        pinned:\n          type: string\n          description: Have you pinned this status? Only appears if the status is pinnable.\n      required:\n        - id\n        - uri\n        - created_at\n        - account\n        - content\n        - visibility\n        - sensitive\n        - spoiler_text\n        - media_attachements\n        - application\n        - mentions\n        - tags\n        - emojis\n        - reblogs_count\n        - favourites_count\n        - replies_count\n    Tag:\n      title: Tag\n      x-stoplight:\n        id: vrpd11pw1tt8t\n      type: object\n      examples:\n        - name: nowplaying\n          url: 'https://mastodon.social/tags/nowplaying'\n          history:\n            - day: '1574553600'\n              uses: '200'\n              accounts: '31'\n            - day: '1574467200'\n              uses: '272'\n              accounts: '39'\n            - day: '1574380800'\n              uses: '345'\n              accounts: '40'\n            - day: '1574294400'\n              uses: '366'\n              accounts: '46'\n            - day: '1574208000'\n              uses: '226'\n              accounts: '32'\n            - day: '1574121600'\n              uses: '217'\n              accounts: '42'\n            - day: '1574035200'\n              uses: '214'\n              accounts: '34'\n      description: Represents a hashtag used within the content of a status.\n      x-tags:\n        - Tags\n      properties:\n        name:\n          type: string\n          description: 'The value of the hashtag after the # sign.'\n        url:\n          type: string\n          format: uri\n          description: A link to the hashtag on the instance.\n        history:\n          type: array\n          description: Usage statistics for given days.\n          items:\n            $ref: '#/components/schemas/History'\n      required:\n        - name\n        - url\n    Admin-Account:\n      title: 'Admin::Account'\n      x-stoplight:\n        id: xyakm7mxo0kti\n      type: object\n      description: Admin-level information about a given account.\n      properties:\n        id:\n          type: string\n          description: 'The ID of the account in the database. Cast from an integer, but not guaranteed to be a number.'\n        username:\n          type: string\n          description: The username of the account.\n        domain:\n          type: string\n          description: The domain of the account.\n        created_at:\n          type: string\n          format: date-time\n          description: When the account was first discovered\n        email:\n          type: string\n          description: The email address associated with the account.\n          format: email\n        ip:\n          type: string\n          description: The IP address last used to login to this account.\n        locale:\n          type: string\n          description: The locale of the account. ISO 639 Part 1 two-letter language code.\n        invite_request:\n          type: string\n          description: Invite request text ???\n        role:\n          type: string\n          description: The current role of the account.\n        confirmed:\n          type: boolean\n          description: Whether the account has confirmed their email address.\n        approved:\n          type: boolean\n          description: Whether the account is currently approved.\n        disabled:\n          type: boolean\n          description: Whether the account is currently disabled.\n        silenced:\n          type: boolean\n          description: Whether the account is currently silenced.\n        suspended:\n          type: boolean\n          description: Whether the account is currently suspended.\n        account:\n          $ref: '#/components/schemas/Account'\n        created_by_application_id:\n          type: string\n          description: 'The ID of the application that created this account. Cast from an integer, but not guaranteed to be a number.'\n        invited_by_account_id:\n          type: string\n          description: 'The ID of the account that invited this user. Cast from an integer, but not guaranteed to be a number.'\n      required:\n        - id\n        - username\n        - domain\n        - created_at\n        - email\n        - ip\n        - locale\n        - invite_request\n        - role\n        - confirmed\n        - approved\n        - disabled\n        - silenced\n        - suspended\n        - account\n    Admin-Report:\n      title: 'Admin::Report'\n      x-stoplight:\n        id: s42ye786vcvq0\n      type: object\n      description: Admin-level information about a filed report.\n      properties:\n        id:\n          type: string\n          description: The ID of the report in the database.\n        action_taken:\n          type: string\n          description: The action taken to resolve this report.\n        comment:\n          type: string\n          description: An optional reason for reporting.\n        created_at:\n          type: string\n          format: date-time\n          description: The time the report was filed.\n        updated_at:\n          type: string\n          description: The time of last action on this report.\n          format: date-time\n        account:\n          $ref: '#/components/schemas/Account'\n        target_account:\n          $ref: '#/components/schemas/Account'\n        assigned_account:\n          $ref: '#/components/schemas/Account'\n        action_taken_by_account:\n          type: string\n          description: The action taken by the moderator who handled the report.\n        statuses:\n          type:\n            - string\n            - array\n          description: 'Statuses attached to the report, for context.'\n          items:\n            $ref: '#/components/schemas/Status'\n      required:\n        - id\n        - created_at\n        - updated_at\n        - account\n        - target_account\n        - assigned_account\n        - action_taken_by_account\n        - statuses\n    Announcement:\n      title: Announcement\n      x-stoplight:\n        id: tq7a9r3zs770w\n      type: object\n      description: Represents an announcement set by an administrator.\n      properties:\n        id:\n          type: string\n          description: The announcement id.\n        text:\n          type: string\n          description: The content of the announcement.\n        published:\n          type: boolean\n          description: Whether the announcement is currently active.\n        all_day:\n          type: boolean\n          description: Whether the announcement has a start/end time.\n        created_at:\n          type: string\n          description: When the announcement was created.\n          format: date-time\n        updated_at:\n          type: string\n          description: When the announcement was updated.\n          format: date-time\n        read:\n          description: Whether the announcement has been read by the user.\n          type: boolean\n        reactions:\n          type: array\n          description: Emoji reactions attached to the announcement.\n          items:\n            $ref: '#/components/schemas/Announcement-Reaction'\n        scheduled_at:\n          type: string\n          format: date-time\n          description: When the future annouoncement was scheduled.\n        starts_at:\n          type: string\n          format: date-time\n          description: When the future announcement will start.\n        ends_at:\n          type: string\n          format: date-time\n          description: When the future announcement will end.\n      required:\n        - id\n        - text\n        - published\n        - all_day\n        - created_at\n        - updated_at\n        - read\n        - reactions\n      examples:\n        - id: '8'\n          content: '\u003cp\u003eLooks like there was an issue processing audio attachments without embedded art since yesterday due to an experimental new feature. That issue has now been fixed, so you may see older posts with audio from other servers pop up in your feeds now as they are being finally properly processed. Sorry!\u003c/p\u003e'\n          starts_at: null\n          ends_at: null\n          all_day: false\n          published_at: '2020-07-03T01:27:38.726Z'\n          updated_at: '2020-07-03T01:27:38.752Z'\n          read: true\n          mentions: []\n          statuses: []\n          tags: []\n          emojis: []\n          reactions:\n            - name: bongoCat\n              count: 9\n              me: false\n              url: 'https://files.mastodon.social/custom_emojis/images/000/067/715/original/fdba57dff7576d53.png'\n              static_url: 'https://files.mastodon.social/custom_emojis/images/000/067/715/static/fdba57dff7576d53.png'\n            - name: thonking\n              count: 1\n              me: false\n              url: 'https://files.mastodon.social/custom_emojis/images/000/098/690/original/a8d36edc4a7032e8.png'\n              static_url: 'https://files.mastodon.social/custom_emojis/images/000/098/690/static/a8d36edc4a7032e8.png'\n            - name: AAAAAA\n              count: 1\n              me: false\n              url: 'https://files.mastodon.social/custom_emojis/images/000/071/387/original/AAAAAA.png'\n              static_url: 'https://files.mastodon.social/custom_emojis/images/000/071/387/static/AAAAAA.png'\n            - name: \"\\U0001F914\"\n              count: 1\n              me: true\n    Announcement-Reaction:\n      title: Announcement-Reaction\n      x-stoplight:\n        id: 6kf3k3lzqaqdt\n      type: object\n      properties:\n        name:\n          type: string\n          description: 'The emoji used for the reaction. Either a unicode emoji, or a custom emoji''s shortcode.'\n        count:\n          type: integer\n          description: The total number of users who have added this reaction.\n        me:\n          type: boolean\n          description: Whether the authorized user has added this reaction to the announcement.\n        url:\n          type: string\n          description: A link to the custom emoji.\n        static_url:\n          type: string\n          description: A link to a non-animated version of the custom emoji.\n      required:\n        - name\n        - count\n        - me\n    Context:\n      title: Context\n      x-stoplight:\n        id: ok2jn797msj53\n      type: object\n      description: Represents the tree around a given status. Used for reconstructing threads of statuses.\n      properties:\n        ancestors:\n          type: array\n          description: Parents in the thread.\n          items:\n            $ref: '#/components/schemas/Status'\n        descendants:\n          type: array\n          description: Children in the thread.\n          items:\n            $ref: '#/components/schemas/Status'\n      required:\n        - ancestors\n        - descendants\n    Conversation:\n      title: Conversation\n      x-stoplight:\n        id: k5x3so2ok8b48\n      type: object\n      description: Represents a conversation with \"direct message\" visibility.\n      properties:\n        id:\n          type: string\n          description: Local database ID of the conversation.\n        accounts:\n          type: array\n          description: Participants in the conversation.\n          items:\n            $ref: '#/components/schemas/Account'\n        unread:\n          type: boolean\n          description: Is the conversation currently marked as unread?\n        last_status:\n          $ref: '#/components/schemas/Status'\n      required:\n        - id\n        - accounts\n        - unread\n    Filter:\n      title: Filter\n      x-stoplight:\n        id: gkc9qhjrql1nl\n      type: object\n      description: |-\n        Represents a user-defined filter for determining which statuses should not be shown to the user.\n\n        ## Implementation notes\n        If `whole_word` is true, cient app should:\n\n        - Define 'word constituent character' for your app. In the official implementation, it's `[A-Za-z0-9_]` in JavaScript, and `[[:word]]` in Ruby. Ruby uses POSIX character class (Letter | Mark | Decimal_Number | Connector_Punctuation).\n        - If the phrase starts with a word character, and if the previous character before matched range is a word character, its matched range should be treated to not match.\n        - If the phrase ends with a word character, and if the next character after matched range is a word character, its matched range should be treated to not match.\n\n        Please check `app/javascript/mastodon/selectors/index.js` and `app/lib/feed_manager.rb` in the Mastodon source code for more details.\n      properties:\n        id:\n          type: string\n          description: The ID of the filter in the database.\n        phrase:\n          type: string\n          description: The text to be filtered.\n        context:\n          type: array\n          description: |-\n            The contexts in which the filter should be applied.\n\n            - `home` = home timeline and lists.\n            - `notifications` = notifications timeline\n            - `public` = public timelines\n            - `thread` = expanded thread of a detailed status.\n          items:\n            type: string\n            enum:\n              - home\n              - notifications\n              - public\n              - thread\n        expires_at:\n          type: string\n          description: When the filter should no longer be applied\n          format: date-time\n        irreversible:\n          type: boolean\n          description: Should matching entities in home and notifications be dropped by the server?\n        whole_word:\n          type: boolean\n          description: Should the filter consider word boundaries?\n      required:\n        - id\n        - phrase\n        - context\n        - expires_at\n        - irreversible\n        - whole_word\n    Instance:\n      type: object\n      x-examples:\n        example-1:\n          uri: mastodon.social\n          title: Mastodon\n          short_description: \"Server run by the main developers of the project \u003cimg draggable=\\\"false\\\" alt=\\\"\\U0001F418\\\" class=\\\"emojione\\\" src=\\\"https://mastodon.social/emoji/1f418.svg\\\" /\u003e It is not focused on any particular niche interest - everyone is welcome as long as you follow our code of conduct!\"\n          description: \"Server run by the main developers of the project \u003cimg draggable=\\\"false\\\" alt=\\\"\\U0001F418\\\" class=\\\"emojione\\\" src=\\\"https://mastodon.social/emoji/1f418.svg\\\" /\u003e It is not focused on any particular niche interest - everyone is welcome as long as you follow our code of conduct!\"\n          email: staff@mastodon.social\n          version: 3.0.1\n          urls:\n            streaming_api: 'wss://mastodon.social'\n          stats:\n            user_count: 415526\n            status_count: 17085754\n            domain_count: 11834\n          thumbnail: 'https://files.mastodon.social/site_uploads/files/000/000/001/original/vlcsnap-2018-08-27-16h43m11s127.png'\n          languages:\n            - en\n          registrations: true\n          approval_required: false\n          contact_account:\n            id: '1'\n            username: Gargron\n            acct: Gargron\n            display_name: Eugen\n            locked: false\n            bot: false\n            created_at: '2016-03-16T14:34:26.392Z'\n            note: '\u003cp\u003eDeveloper of Mastodon and administrator of mastodon.social. I post service announcements, development updates, and personal stuff.\u003c/p\u003e'\n            url: 'https://mastodon.social/@Gargron'\n            avatar: 'https://files.mastodon.social/accounts/avatars/000/000/001/original/d96d39a0abb45b92.jpg'\n            avatar_static: 'https://files.mastodon.social/accounts/avatars/000/000/001/original/d96d39a0abb45b92.jpg'\n            header: 'https://files.mastodon.social/accounts/headers/000/000/001/original/c91b871f294ea63e.png'\n            header_static: 'https://files.mastodon.social/accounts/headers/000/000/001/original/c91b871f294ea63e.png'\n            followers_count: 317112\n            following_count: 453\n            statuses_count: 60903\n            last_status_at: '2019-11-26T21:14:44.522Z'\n            emojis: []\n            fields:\n              - name: Patreon\n                value: '\u003ca href=\"https://www.patreon.com/mastodon\" rel=\"me nofollow noopener noreferrer\" target=\"_blank\"\u003e\u003cspan class=\"invisible\"\u003ehttps://www.\u003c/span\u003e\u003cspan class=\"\"\u003epatreon.com/mastodon\u003c/span\u003e\u003cspan class=\"invisible\"\u003e\u003c/span}'\n                verified_at: null\n              - name: Homepage\n                value: '\u003ca href=\"https://zeonfederated.com\" rel=\"me nofollow noopener noreferrer\" target=\"_blank\"\u003e\u003cspan class=\"invisible\"\u003ehttps://\u003c/span\u003e\u003cspan class=\"\"\u003ezeonfederated.com\u003c/span\u003e\u003cspan class=\"invisible\"\u003e\u003c/span}'\n                verified_at: '2019-07-15T18:29:57.191+00:00'\n      properties:\n        uri:\n          type: string\n          format: uri\n          description: The domain name of the instance.\n        title:\n          type: string\n          description: The title of the website.\n        short_description:\n          type: string\n          description: A shorter description defined by the admin.\n        description:\n          type: string\n          description: Admin-defined description of the Mastodon site.\n        email:\n          type: string\n          description: An email that may be contacted for any inquiries.\n          format: email\n        version:\n          type: string\n          description: The version of Mastodon installed on the instance.\n        urls:\n          type: object\n          description: URLs of interest for client apps.\n          required:\n            - streaming_api\n          properties:\n            streaming_api:\n              type: string\n              description: Websockets address for push streaming.\n              format: uri\n        stats:\n          type: object\n          required:\n            - user_count\n            - status_count\n            - domain_count\n          properties:\n            user_count:\n              type: integer\n              description: Users registered on this instance.\n            status_count:\n              type: integer\n              description: Statuses authored by users on instance.\n            domain_count:\n              type: integer\n              description: Domains federated with this instance.\n        languages:\n          type: array\n          description: Primary languages of the website and its staff.\n          items:\n            type: string\n        registrations:\n          type: boolean\n          description: Whether registrations are enabled.\n        approval_required:\n          type: boolean\n          description: Whether registrations require moderator approval.\n        contact_account:\n          $ref: '#/components/schemas/Account'\n        thumbnail:\n          type:\n            - string\n            - 'null'\n          description: Banner image for the website.\n          format: uri\n      required:\n        - uri\n        - title\n        - short_description\n        - description\n        - email\n        - version\n        - urls\n        - stats\n        - languages\n        - registrations\n        - approval_required\n      description: Represents the software instance of Mastodon running on this domain.\n      examples:\n        - uri: mastodon.social\n          title: Mastodon\n          short_description: \"Server run by the main developers of the project \u003cimg draggable=\\\"false\\\" alt=\\\"\\U0001F418\\\" class=\\\"emojione\\\" src=\\\"https://mastodon.social/emoji/1f418.svg\\\" /\u003e It is not focused on any particular niche interest - everyone is welcome as long as you follow our code of conduct!\"\n          description: \"Server run by the main developers of the project \u003cimg draggable=\\\"false\\\" alt=\\\"\\U0001F418\\\" class=\\\"emojione\\\" src=\\\"https://mastodon.social/emoji/1f418.svg\\\" /\u003e It is not focused on any particular niche interest - everyone is welcome as long as you follow our code of conduct!\"\n          email: staff@mastodon.social\n          version: 3.0.1\n          urls:\n            streaming_api: 'wss://mastodon.social'\n          stats:\n            user_count: 415526\n            status_count: 17085754\n            domain_count: 11834\n          thumbnail: 'https://files.mastodon.social/site_uploads/files/000/000/001/original/vlcsnap-2018-08-27-16h43m11s127.png'\n          languages:\n            - en\n          registrations: true\n          approval_required: false\n          contact_account:\n            id: '1'\n            username: Gargron\n            acct: Gargron\n            display_name: Eugen\n            locked: false\n            bot: false\n            created_at: '2016-03-16T14:34:26.392Z'\n            note: '\u003cp\u003eDeveloper of Mastodon and administrator of mastodon.social. I post service announcements, development updates, and personal stuff.\u003c/p\u003e'\n            url: 'https://mastodon.social/@Gargron'\n            avatar: 'https://files.mastodon.social/accounts/avatars/000/000/001/original/d96d39a0abb45b92.jpg'\n            avatar_static: 'https://files.mastodon.social/accounts/avatars/000/000/001/original/d96d39a0abb45b92.jpg'\n            header: 'https://files.mastodon.social/accounts/headers/000/000/001/original/c91b871f294ea63e.png'\n            header_static: 'https://files.mastodon.social/accounts/headers/000/000/001/original/c91b871f294ea63e.png'\n            followers_count: 317112\n            following_count: 453\n            statuses_count: 60903\n            last_status_at: '2019-11-26T21:14:44.522Z'\n            emojis: []\n            fields:\n              - name: Patreon\n                value: '\u003ca href=\"https://www.patreon.com/mastodon\" rel=\"me nofollow noopener noreferrer\" target=\"_blank\"\u003e\u003cspan class=\"invisible\"\u003ehttps://www.\u003c/span\u003e\u003cspan class=\"\"\u003epatreon.com/mastodon\u003c/span\u003e\u003cspan class=\"invisible\"\u003e\u003c/span}'\n                verified_at: null\n              - name: Homepage\n                value: '\u003ca href=\"https://zeonfederated.com\" rel=\"me nofollow noopener noreferrer\" target=\"_blank\"\u003e\u003cspan class=\"invisible\"\u003ehttps://\u003c/span\u003e\u003cspan class=\"\"\u003ezeonfederated.com\u003c/span\u003e\u003cspan class=\"invisible\"\u003e\u003c/span}'\n                verified_at: '2019-07-15T18:29:57.191+00:00'\n    Marker:\n      title: Marker\n      x-stoplight:\n        id: u81wt8l4ongah\n      type: object\n      description: Represents the last read position with a user's timeline.\n      properties:\n        home:\n          type: object\n          description: Information about the user's position in the home timeline.\n          required:\n            - last_read_id\n            - updated_at\n            - version\n          properties:\n            last_read_id:\n              type: string\n              description: The ID of the most recently viewed entity.\n            updated_at:\n              type: string\n              description: The timestamp of when the marker was set.\n              format: date-time\n            version:\n              type: string\n              description: Used for locking to prevent write conflicts.\n        notifications:\n          type: object\n          required:\n            - last_read_id\n            - updated_at\n            - version\n          description: Information about the user's position in their notifications.\n          properties:\n            last_read_id:\n              type: string\n              description: The ID of the most recently viewed entity.\n            updated_at:\n              type: string\n              description: The timestamp of when the marker was set.\n              format: date-time\n            version:\n              type: number\n              description: Used for locking to prevent write conflicts.\n      required:\n        - home\n        - notifications\n    Notification:\n      title: Notification\n      x-stoplight:\n        id: hulmsnr7wpgy8\n      type: object\n      description: Represents a notification of an event relevant to the user.\n      properties:\n        id:\n          type: string\n          description: The id of the notification in the database.\n        type:\n          type: string\n          description: |-\n            The type of event that resulted in the notification.\n\n            - `follow` = Someone followed you.\n            - `follow_request` = Someone requested to follow you\n            - `mention` = Someone mentioned you in their status.\n            - `reblog` = Someone boosted one of your statuses\n            - `favourite` = Someone favourited one of your statuses\n            - `poll` = A poll you have voted in or created has ended.\n            - `status` = Someone you enabled notifications for has posted a status.\n          enum:\n            - follow\n            - follow_request\n            - mention\n            - reblog\n            - favourite\n            - poll\n            - status\n        created_at:\n          type: string\n          format: date-time\n          description: The timestamp of the notification.\n        account:\n          $ref: '#/components/schemas/Account'\n        status:\n          $ref: '#/components/schemas/Status'\n      required:\n        - id\n        - type\n        - created_at\n        - account\n    Preferences:\n      type: object\n      x-examples:\n        example-1:\n          'posting:default:visibility': public\n          'posting:default:sensitive': false\n          'posting:default:language': null\n          'reading:expand:media': default\n          'reading:expand:spoilers': false\n      examples:\n        - 'posting:default:visibility': public\n          'posting:default:sensitive': false\n          'posting:default:language': null\n          'reading:expand:media': default\n          'reading:expand:spoilers': false\n      properties:\n        'posting:default:visibility':\n          type: string\n          description: Default visibility for new posts. Equivalent to `Source#privacy`.\n        'posting:default:sensitive':\n          type: boolean\n          description: Default sensitivity flag for new posts. Equivalent to `Source#sensitive`.\n        'posting:default:language':\n          type:\n            - string\n            - 'null'\n          description: Default language for new posts. Equivalent to `Source#language`\n        'reading:expand:media':\n          type: string\n          description: |-\n            Whether media attachments should be automatically displayed or blurred / hidden.\n\n            - `default` = Hide media marked as sensitive.\n            - `show_all` = Always show all media by default, regardless of sensitivity.\n            - `hide_all` = Always hide all media by default, redgardless of sensitivity.\n          enum:\n            - default\n            - show_all\n            - hide_all\n        'reading:expand:spoilers':\n          type: boolean\n          description: Whether CWs should be expanded by default.\n      required:\n        - 'posting:default:visibility'\n        - 'posting:default:sensitive'\n        - 'reading:expand:media'\n        - 'reading:expand:spoilers'\n      description: Represents a user's preferences.\n    PushSubscription:\n      type: object\n      x-examples:\n        example-1:\n          id: 328183\n          endpoint: 'https://yourdomain.example/listener'\n          alerts:\n            follow: false\n            favourite: false\n            reblog: false\n            mention: true\n            poll: false\n          server_key: BCk-QqERU0q-CfYZjcuB6lnyyOYfJ2AifKqfeGIm7Z-HiTU5T9eTG5GxVA0_OH5mMlI4UkkDTpaZwozy0TzdZ2M=\n      description: Represents a subscription to the push streaming server.\n      properties:\n        id:\n          type: integer\n          description: The id of the push subscription in the database.\n        endpoint:\n          type: string\n          format: uri\n          description: Where push alerts will be sent to.\n        server_key:\n          type: string\n          description: The streaming server's VAPID key.\n        alerts:\n          type: object\n          description: Which alerts should be delivered to the `endpoint`.\n          required:\n            - follow\n            - favourite\n            - reblog\n            - mention\n            - poll\n          properties:\n            follow:\n              type: boolean\n              description: Receive a push notification when someone has followed you?\n            favourite:\n              type: boolean\n              description: Receive a push notification when a status you created has been favourited by someone else?\n            reblog:\n              type: boolean\n              description: Receive a push notification when someone else has mentioned you in a status?\n            mention:\n              type: boolean\n              description: Receive a push notification when a status you created has been boosted by someone else?\n            poll:\n              type: boolean\n              description: Receive a push notification when a poll you voted in or created has ended?\n      required:\n        - id\n        - endpoint\n        - server_key\n        - alerts\n      examples:\n        - id: 328183\n          endpoint: 'https://yourdomain.example/listener'\n          alerts:\n            follow: false\n            favourite: false\n            reblog: false\n            mention: true\n            poll: false\n          server_key: BCk-QqERU0q-CfYZjcuB6lnyyOYfJ2AifKqfeGIm7Z-HiTU5T9eTG5GxVA0_OH5mMlI4UkkDTpaZwozy0TzdZ2M=\n    Results-V1:\n      title: Results V1\n      x-stoplight:\n        id: 26g5rccbqr9ib\n      type: object\n      description: Represents the results of a search.\n      properties:\n        accounts:\n          type: array\n          description: Accounts which match the given query.\n          items:\n            $ref: '#/components/schemas/Account'\n        statuses:\n          type: array\n          description: Statuses which match the given query.\n          items:\n            $ref: '#/components/schemas/Status'\n        hashtags:\n          type: array\n          description: Hashtags which match the given query.\n          items:\n            type: string\n      required:\n        - accounts\n        - statuses\n        - hashtags\n    Results-V2:\n      title: Results-V2\n      x-stoplight:\n        id: 226sql6nvzsgq\n      type: object\n      properties:\n        accounts:\n          type: array\n          description: Accounts which match the given query.\n          items:\n            $ref: '#/components/schemas/Account'\n        statuses:\n          type: array\n          description: Statuses which match the given query.\n          items:\n            $ref: '#/components/schemas/Status'\n        hashtags:\n          type:\n            - string\n            - array\n          description: Hashtags which match the given query.\n          items:\n            $ref: '#/components/schemas/Tag'\n      required:\n        - accounts\n        - statuses\n        - hashtags\n      description: Represents the results of a search.\n  requestBodies: {}\n  securitySchemes:\n    user-token-auth:\n      type: oauth2\n      flows:\n        authorizationCode:\n          authorizationUrl: /oauth/authorize\n          tokenUrl: /oauth/token\n          scopes:\n            read: Grants access to read data. Requesting `read` will also grant child scopes shown in the left column of the table below.\n            write: Grants access to write data. Requesting `write` will also grant child scopes shown in the right column of the table below.\n            follow: 'Grants access to manage relationships. Requesting `follow` will also grant the following child scopes, shown in bold in the table: `read:blocks`, `write:blocks`, `read:follows`, `write:follows`, `read:mutes`, and `write:mutes`.'\n            push: Grants access to Web Push API subscriptions. Added in Mastodon 2.4.0.\n            'admin:read': 'Includes `admin:read:accounts` and `admin:read:reports` scopes.'\n            'admin:read:accounts': ''\n            'admin:read:reports': ''\n            'admin:write': 'Includes `admin:write:accounts` and `admin:write:reports`'\n            'admin:write:accounts': ''\n            'admin:write:reports': ''\n            'read:accounts': ''\n            'write:accounts': ''\n            'read:bookmarks': ''\n            'write:bookmarks': ''\n            'write:conversations': ''\n            'read:favourites': ''\n            'write:favourites': ''\n            'read:filters': ''\n            'write:filters': ''\n            'read:follows': ''\n            'write:follows': ''\n            'read:lists': ''\n            'write:lists': ''\n            'write:media': ''\n            'read:mutes': ''\n            'write:mutes': ''\n            'read:notifications': ''\n            'write:notifications': ''\n            'write:reports': ''\n            'read:search': ''\n            'read:statuses': ''\n            'write:statuses': ''\n      description: ''\n    client-auth:\n      type: oauth2\n      flows:\n        clientCredentials:\n          tokenUrl: ''\n          refreshUrl: ''\n          scopes:\n            'write:accounts': ''\n            'read:accounts': ''\n  responses:\n    Invalid-Authentication-Token:\n      description: 'If the Authorization header contains an invalid token, is malformed, or is not present, an error will be returned indicating an authorization failure.'\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              error:\n                type: string\n            required:\n              - error\n          examples:\n            Response:\n              value:\n                error: The access token is invalid\ntags:\n  - name: Accounts\n  - name: Applications\n  - name: Identity Proofs\n  - name: Lists\n  - name: OAuth\n  - name: Statuses\n  - name: Tags\nsecurity: []\n",
			"canonicalURL": "/github.com/samwightt/mastodon-openapi@b029c1aaec5450c2ac40e67763ce89d7a9037b75/-/blob/Mastodon-API.yml",
			"externalURLs": [
				{
					"url": "https://github.com/samwightt/mastodon-openapi/blob/b029c1aaec5450c2ac40e67763ce89d7a9037b75/Mastodon-API.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 2335: cannot unmarshal !!seq into string; yaml: line 2671: cannot unmarshal !!seq into string; yaml: line 2845: cannot unmarshal !!seq into string; yaml: line 2978: cannot unmarshal !!seq into string"
}