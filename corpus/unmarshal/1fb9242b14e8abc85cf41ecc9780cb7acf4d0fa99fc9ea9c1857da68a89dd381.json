{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/api-evangelist/atlassian"
		},
		"file": {
			"name": "jira-software-cloud-api-openapi.json",
			"size": 0,
			"path": "jira-software-cloud-api-openapi.json",
			"byteSize": 105994,
			"content": "{\n    \"openapi\": \"3.0.0\",\n    \"info\": {\n        \"version\": \"1001.0.0\",\n        \"title\": \"Jira Software Cloud API\",\n        \"description\": \"Jira Software Cloud REST API documentation\",\n        \"termsOfService\": \"http:\\/\\/atlassian.com\\/terms\\/\"\n    },\n    \"servers\": [\n        \"\\/\\/atlassian.com\"\n    ],\n    \"paths\": {\n        \"\\/rest\\/agile\\/1.0\\/backlog\\/issue\": {\n            \"post\": {\n                \"summary\": \"Move issues to backlog\",\n                \"description\": \"Move issues to the backlog.  \\nThis operation is equivalent to remove future and active sprints from a given set of issues. At most 50 issues may be moved at once.\",\n                \"operationId\": \"ComAtlassianGreenhopperApiRestBacklogResourceMoveIssuesToBacklogPost\",\n                \"deprecated\": 0,\n                \"parameters\": [],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"Empty response is returned if operation was successful.\"\n                    }\n                }\n            }\n        },\n        \"\\/rest\\/agile\\/1.0\\/backlog\\/{boardId}\\/issue\": {\n            \"post\": {\n                \"summary\": \"Move issues to backlog for board\",\n                \"description\": \"Move issues to the backlog of a particular board (if they are already on that board).  \\nThis operation is equivalent to remove future and active sprints from a given set of issues if the board has sprints If the board does not have sprints this will put the issues back into the backlog from the board. At most 50 issues may be moved at once.\",\n                \"operationId\": \"ComAtlassianGreenhopperApiRestBacklogResourceMoveIssuesToBacklogForBoardPost\",\n                \"deprecated\": 0,\n                \"parameters\": [\n                    {\n                        \"name\": \"boardId\",\n                        \"in\": \"path\",\n                        \"description\": \"\"\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"Empty response is returned if operation was successful.\"\n                    }\n                }\n            }\n        },\n        \"\\/rest\\/agile\\/1.0\\/board\": {\n            \"get\": {\n                \"summary\": \"Get all boards\",\n                \"description\": \"Returns all boards. This only includes boards that the user has permission to view.\",\n                \"operationId\": \"ComAtlassianGreenhopperApiRestBoardResourceGetAllBoardsGet\",\n                \"deprecated\": 0,\n                \"parameters\": [\n                    {\n                        \"name\": \"startAt\",\n                        \"in\": \"query\",\n                        \"description\": \"The starting index of the returned boards. Base index: 0. See the 'Pagination' section at the top of this page for more details.\"\n                    },\n                    {\n                        \"name\": \"maxResults\",\n                        \"in\": \"query\",\n                        \"description\": \"The maximum number of boards to return per page. See the 'Pagination' section at the top of this page for more details.\"\n                    },\n                    {\n                        \"name\": \"type\",\n                        \"in\": \"query\",\n                        \"description\": \"Filters results to boards of the specified types. Valid values: scrum, kanban, simple.\"\n                    },\n                    {\n                        \"name\": \"name\",\n                        \"in\": \"query\",\n                        \"description\": \"Filters results to boards that match or partially match the specified name.\"\n                    },\n                    {\n                        \"name\": \"projectKeyOrId\",\n                        \"in\": \"query\",\n                        \"description\": \"Filters results to boards that are relevant to a project. Relevance means that the jql filter defined in board contains a reference to a project.\"\n                    },\n                    {\n                        \"name\": \"accountIdLocation\",\n                        \"in\": \"query\",\n                        \"description\": \"\"\n                    },\n                    {\n                        \"name\": \"userkeyLocation\",\n                        \"in\": \"query\",\n                        \"description\": \"\"\n                    },\n                    {\n                        \"name\": \"usernameLocation\",\n                        \"in\": \"query\",\n                        \"description\": \"\"\n                    },\n                    {\n                        \"name\": \"projectLocation\",\n                        \"in\": \"query\",\n                        \"description\": \"\"\n                    },\n                    {\n                        \"name\": \"includePrivate\",\n                        \"in\": \"query\",\n                        \"description\": \"Appends private boards to the end of the list. The name and type fields are excluded for security reasons.\"\n                    },\n                    {\n                        \"name\": \"negateLocationFiltering\",\n                        \"in\": \"query\",\n                        \"description\": \"If set to true, negate filters used for querying by location. By default false.\"\n                    },\n                    {\n                        \"name\": \"orderBy\",\n                        \"in\": \"query\",\n                        \"description\": \"Ordering of the results by a given field. If not provided, values will not be sorted. Valid values: name.\"\n                    },\n                    {\n                        \"name\": \"expand\",\n                        \"in\": \"query\",\n                        \"description\": \"List of fields to expand for each board. Valid values: admins, permissions.\"\n                    },\n                    {\n                        \"name\": \"filterId\",\n                        \"in\": \"query\",\n                        \"description\": \"Filters results to boards that are relevant to a filter. Not supported for next-gen boards.\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns the requested boards, at the specified page of the results.\"\n                    }\n                }\n            },\n            \"post\": {\n                \"summary\": \"Create board\",\n                \"description\": \"Creates a new board. Board name, type and filter ID is required.\\n\\n*   `name` \\\\- Must be less than 255 characters.\\n*   `type` \\\\- Valid values: scrum, kanban\\n*   `filterId` \\\\- ID of a filter that the user has permissions to view. Note, if the user does not have the 'Create shared objects' permission and tries to create a shared board, a private board will be created instead (remember that board sharing depends on the filter sharing).\\n*   `location` \\\\- The container that the board will be located i\",\n                \"operationId\": \"ComAtlassianGreenhopperApiRestBoardResourceCreateBoardPost\",\n                \"deprecated\": 0,\n                \"parameters\": [],\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"Returns the created board.\"\n                    }\n                }\n            }\n        },\n        \"\\/rest\\/agile\\/1.0\\/board\\/filter\\/{filterId}\": {\n            \"get\": {\n                \"summary\": \"Get board by filter id\",\n                \"description\": \"Returns any boards which use the provided filter id. This method can be executed by users without a valid software license in order to find which boards are using a particular filter.\",\n                \"operationId\": \"ComAtlassianGreenhopperApiRestBoardResourceGetBoardByFilterIdGet\",\n                \"deprecated\": 0,\n                \"parameters\": [\n                    {\n                        \"name\": \"filterId\",\n                        \"in\": \"path\",\n                        \"description\": \"Filters results to boards that are relevant to a filter. Not supported for next-gen boards.\"\n                    },\n                    {\n                        \"name\": \"startAt\",\n                        \"in\": \"query\",\n                        \"description\": \"The starting index of the returned boards. Base index: 0. See the 'Pagination' section at the top of this page for more details.\"\n                    },\n                    {\n                        \"name\": \"maxResults\",\n                        \"in\": \"query\",\n                        \"description\": \"The maximum number of boards to return per page. See the 'Pagination' section at the top of this page for more details.\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns the requested boards, at the specified page of the results.\"\n                    }\n                }\n            }\n        },\n        \"\\/rest\\/agile\\/1.0\\/board\\/{boardId}\": {\n            \"get\": {\n                \"summary\": \"Get board\",\n                \"description\": \"Returns the board for the given board ID. This board will only be returned if the user has permission to view it. Admins without the view permission will see the board as a private one, so will see only a subset of the board's data (board location for instance).\",\n                \"operationId\": \"ComAtlassianGreenhopperApiRestBoardResourceGetBoardGet\",\n                \"deprecated\": 0,\n                \"parameters\": [\n                    {\n                        \"name\": \"boardId\",\n                        \"in\": \"path\",\n                        \"description\": \"\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns the requested boards, at the specified page of the results.\"\n                    }\n                }\n            },\n            \"delete\": {\n                \"summary\": \"Delete board\",\n                \"description\": \"Deletes the board. Admin without the view permission can still remove the board.\",\n                \"operationId\": \"ComAtlassianGreenhopperApiRestBoardResourceDeleteBoardDelete\",\n                \"deprecated\": 0,\n                \"parameters\": [\n                    {\n                        \"name\": \"boardId\",\n                        \"in\": \"path\",\n                        \"description\": \"\"\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"Empty response is returned if operation was successful.\"\n                    }\n                }\n            }\n        },\n        \"\\/rest\\/agile\\/1.0\\/board\\/{boardId}\\/backlog\": {\n            \"get\": {\n                \"summary\": \"Get issues for backlog\",\n                \"description\": \"Returns all issues from the board's backlog, for the given board ID. This only includes issues that the user has permission to view. The backlog contains incomplete issues that are not assigned to any future or active sprint. Note, if the user does not have permission to view the board, no issues will be returned at all. Issues returned from this resource include Agile fields, like sprint, closedSprints, flagged, and epic. By default, the returned issues are ordered by rank.\",\n                \"operationId\": \"ComAtlassianGreenhopperApiRestBoardResourceGetIssuesForBacklogGet\",\n                \"deprecated\": 0,\n                \"parameters\": [\n                    {\n                        \"name\": \"boardId\",\n                        \"in\": \"path\",\n                        \"description\": \"\"\n                    },\n                    {\n                        \"name\": \"startAt\",\n                        \"in\": \"query\",\n                        \"description\": \"The starting index of the returned boards. Base index: 0. See the 'Pagination' section at the top of this page for more details.\"\n                    },\n                    {\n                        \"name\": \"maxResults\",\n                        \"in\": \"query\",\n                        \"description\": \"The maximum number of boards to return per page. See the 'Pagination' section at the top of this page for more details.\"\n                    },\n                    {\n                        \"name\": \"jql\",\n                        \"in\": \"query\",\n                        \"description\": \"Filters results using a JQL query. If you define an order in your JQL query, it will override the default order of the returned issues.  \\nNote that `username` and `userkey` can't be used as search terms for this parameter due to privacy reasons. Use `accountId` instead.\"\n                    },\n                    {\n                        \"name\": \"validateQuery\",\n                        \"in\": \"query\",\n                        \"description\": \"Specifies whether to validate the JQL query or not. Default: true.\"\n                    },\n                    {\n                        \"name\": \"fields\",\n                        \"in\": \"query\",\n                        \"description\": \"The list of fields to return for each issue. By default, all navigable and Agile fields are returned.\"\n                    },\n                    {\n                        \"name\": \"expand\",\n                        \"in\": \"query\",\n                        \"description\": \"List of fields to expand for each board. Valid values: admins, permissions.\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns the requested boards, at the specified page of the results.\"\n                    }\n                }\n            }\n        },\n        \"\\/rest\\/agile\\/1.0\\/board\\/{boardId}\\/configuration\": {\n            \"get\": {\n                \"summary\": \"Get configuration\",\n                \"description\": \"Get the board configuration. The response contains the following fields:\\n\\n*   `id` \\\\- ID of the board.\\n*   `name` \\\\- Name of the board.\\n*   `filter` \\\\- Reference to the filter used by the given board.\\n*   `location` \\\\- Reference to the container that the board is located in. Includes the container type (Valid values: project, user).\\n*   `subQuery` (Kanban only) - JQL subquery used by the given board.\\n*   `columnConfig` \\\\- The column configuration lists the columns for the board, in the order def\",\n                \"operationId\": \"ComAtlassianGreenhopperApiRestBoardResourceGetConfigurationGet\",\n                \"deprecated\": 0,\n                \"parameters\": [\n                    {\n                        \"name\": \"boardId\",\n                        \"in\": \"path\",\n                        \"description\": \"\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns the requested boards, at the specified page of the results.\"\n                    }\n                }\n            }\n        },\n        \"\\/rest\\/agile\\/1.0\\/board\\/{boardId}\\/epic\": {\n            \"get\": {\n                \"summary\": \"Get epics\",\n                \"description\": \"Returns all epics from the board, for the given board ID. This only includes epics that the user has permission to view. Note, if the user does not have permission to view the board, no epics will be returned at all.\",\n                \"operationId\": \"ComAtlassianGreenhopperApiRestBoardEpicResourceGetEpicsGet\",\n                \"deprecated\": 0,\n                \"parameters\": [\n                    {\n                        \"name\": \"boardId\",\n                        \"in\": \"path\",\n                        \"description\": \"\"\n                    },\n                    {\n                        \"name\": \"startAt\",\n                        \"in\": \"query\",\n                        \"description\": \"The starting index of the returned boards. Base index: 0. See the 'Pagination' section at the top of this page for more details.\"\n                    },\n                    {\n                        \"name\": \"maxResults\",\n                        \"in\": \"query\",\n                        \"description\": \"The maximum number of boards to return per page. See the 'Pagination' section at the top of this page for more details.\"\n                    },\n                    {\n                        \"name\": \"done\",\n                        \"in\": \"query\",\n                        \"description\": \"Filters results to epics that are either done or not done. Valid values: true, false.\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns the requested boards, at the specified page of the results.\"\n                    }\n                }\n            }\n        },\n        \"\\/rest\\/agile\\/1.0\\/board\\/{boardId}\\/epic\\/none\\/issue\": {\n            \"get\": {\n                \"summary\": \"Get issues without epic\",\n                \"description\": \"Returns all issues that do not belong to any epic on a board, for a given board ID. This only includes issues that the user has permission to view. Issues returned from this resource include Agile fields, like sprint, closedSprints, flagged, and epic. By default, the returned issues are ordered by rank.\",\n                \"operationId\": \"ComAtlassianGreenhopperApiRestBoardEpicResourceGetIssuesWithoutEpicGet\",\n                \"deprecated\": 0,\n                \"parameters\": [\n                    {\n                        \"name\": \"boardId\",\n                        \"in\": \"path\",\n                        \"description\": \"\"\n                    },\n                    {\n                        \"name\": \"startAt\",\n                        \"in\": \"query\",\n                        \"description\": \"The starting index of the returned boards. Base index: 0. See the 'Pagination' section at the top of this page for more details.\"\n                    },\n                    {\n                        \"name\": \"maxResults\",\n                        \"in\": \"query\",\n                        \"description\": \"The maximum number of boards to return per page. See the 'Pagination' section at the top of this page for more details.\"\n                    },\n                    {\n                        \"name\": \"jql\",\n                        \"in\": \"query\",\n                        \"description\": \"Filters results using a JQL query. If you define an order in your JQL query, it will override the default order of the returned issues.  \\nNote that `username` and `userkey` can't be used as search terms for this parameter due to privacy reasons. Use `accountId` instead.\"\n                    },\n                    {\n                        \"name\": \"validateQuery\",\n                        \"in\": \"query\",\n                        \"description\": \"Specifies whether to validate the JQL query or not. Default: true.\"\n                    },\n                    {\n                        \"name\": \"fields\",\n                        \"in\": \"query\",\n                        \"description\": \"The list of fields to return for each issue. By default, all navigable and Agile fields are returned.\"\n                    },\n                    {\n                        \"name\": \"expand\",\n                        \"in\": \"query\",\n                        \"description\": \"List of fields to expand for each board. Valid values: admins, permissions.\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns the requested boards, at the specified page of the results.\"\n                    }\n                }\n            }\n        },\n        \"\\/rest\\/agile\\/1.0\\/board\\/{boardId}\\/epic\\/{epicId}\\/issue\": {\n            \"get\": {\n                \"summary\": \"Get issues for epic\",\n                \"description\": \"Returns all issues that belong to an epic on the board, for the given epic ID and the board ID. This only includes issues that the user has permission to view. Issues returned from this resource include Agile fields, like sprint, closedSprints, flagged, and epic. By default, the returned issues are ordered by rank.\",\n                \"operationId\": \"ComAtlassianGreenhopperApiRestBoardEpicResourceGetIssuesForEpicGet\",\n                \"deprecated\": 0,\n                \"parameters\": [\n                    {\n                        \"name\": \"boardId\",\n                        \"in\": \"path\",\n                        \"description\": \"\"\n                    },\n                    {\n                        \"name\": \"epicId\",\n                        \"in\": \"path\",\n                        \"description\": \"The ID of the epic that contains the requested issues.\"\n                    },\n                    {\n                        \"name\": \"startAt\",\n                        \"in\": \"query\",\n                        \"description\": \"The starting index of the returned boards. Base index: 0. See the 'Pagination' section at the top of this page for more details.\"\n                    },\n                    {\n                        \"name\": \"maxResults\",\n                        \"in\": \"query\",\n                        \"description\": \"The maximum number of boards to return per page. See the 'Pagination' section at the top of this page for more details.\"\n                    },\n                    {\n                        \"name\": \"jql\",\n                        \"in\": \"query\",\n                        \"description\": \"Filters results using a JQL query. If you define an order in your JQL query, it will override the default order of the returned issues.  \\nNote that `username` and `userkey` can't be used as search terms for this parameter due to privacy reasons. Use `accountId` instead.\"\n                    },\n                    {\n                        \"name\": \"validateQuery\",\n                        \"in\": \"query\",\n                        \"description\": \"Specifies whether to validate the JQL query or not. Default: true.\"\n                    },\n                    {\n                        \"name\": \"fields\",\n                        \"in\": \"query\",\n                        \"description\": \"The list of fields to return for each issue. By default, all navigable and Agile fields are returned.\"\n                    },\n                    {\n                        \"name\": \"expand\",\n                        \"in\": \"query\",\n                        \"description\": \"List of fields to expand for each board. Valid values: admins, permissions.\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns the requested boards, at the specified page of the results.\"\n                    }\n                }\n            }\n        },\n        \"\\/rest\\/agile\\/1.0\\/board\\/{boardId}\\/features\": {\n            \"get\": {\n                \"summary\": \"Get features for board\",\n                \"description\": \"\",\n                \"operationId\": \"ComAtlassianGreenhopperApiRestBoardFeaturesResourceGetFeaturesForBoardGet\",\n                \"deprecated\": 0,\n                \"parameters\": [\n                    {\n                        \"name\": \"boardId\",\n                        \"in\": \"path\",\n                        \"description\": \"\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns the requested boards, at the specified page of the results.\"\n                    }\n                }\n            },\n            \"put\": {\n                \"summary\": \"Toggle features\",\n                \"description\": \"\",\n                \"operationId\": \"ComAtlassianGreenhopperApiRestBoardFeaturesResourceToggleFeaturesPut\",\n                \"deprecated\": 0,\n                \"parameters\": [\n                    {\n                        \"name\": \"boardId\",\n                        \"in\": \"path\",\n                        \"description\": \"\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns the requested boards, at the specified page of the results.\"\n                    }\n                }\n            }\n        },\n        \"\\/rest\\/agile\\/1.0\\/board\\/{boardId}\\/issue\": {\n            \"get\": {\n                \"summary\": \"Get issues for board\",\n                \"description\": \"Returns all issues from a board, for a given board ID. This only includes issues that the user has permission to view. An issue belongs to the board if its status is mapped to the board's column. Epic issues do not belongs to the scrum boards. Note, if the user does not have permission to view the board, no issues will be returned at all. Issues returned from this resource include Agile fields, like sprint, closedSprints, flagged, and epic. By default, the returned issues are ordered by rank.\",\n                \"operationId\": \"ComAtlassianGreenhopperApiRestBoardResourceGetIssuesForBoardGet\",\n                \"deprecated\": 0,\n                \"parameters\": [\n                    {\n                        \"name\": \"boardId\",\n                        \"in\": \"path\",\n                        \"description\": \"\"\n                    },\n                    {\n                        \"name\": \"startAt\",\n                        \"in\": \"query\",\n                        \"description\": \"The starting index of the returned boards. Base index: 0. See the 'Pagination' section at the top of this page for more details.\"\n                    },\n                    {\n                        \"name\": \"maxResults\",\n                        \"in\": \"query\",\n                        \"description\": \"The maximum number of boards to return per page. See the 'Pagination' section at the top of this page for more details.\"\n                    },\n                    {\n                        \"name\": \"jql\",\n                        \"in\": \"query\",\n                        \"description\": \"Filters results using a JQL query. If you define an order in your JQL query, it will override the default order of the returned issues.  \\nNote that `username` and `userkey` can't be used as search terms for this parameter due to privacy reasons. Use `accountId` instead.\"\n                    },\n                    {\n                        \"name\": \"validateQuery\",\n                        \"in\": \"query\",\n                        \"description\": \"Specifies whether to validate the JQL query or not. Default: true.\"\n                    },\n                    {\n                        \"name\": \"fields\",\n                        \"in\": \"query\",\n                        \"description\": \"The list of fields to return for each issue. By default, all navigable and Agile fields are returned.\"\n                    },\n                    {\n                        \"name\": \"expand\",\n                        \"in\": \"query\",\n                        \"description\": \"List of fields to expand for each board. Valid values: admins, permissions.\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns the requested boards, at the specified page of the results.\"\n                    }\n                }\n            },\n            \"post\": {\n                \"summary\": \"Move issues to board\",\n                \"description\": \"Move issues from the backog to the board (if they are already in the backlog of that board).  \\nThis operation either moves an issue(s) onto a board from the backlog (by adding it to the issueList for the board) Or transitions the issue(s) to the first column for a kanban board with backlog. At most 50 issues may be moved at once.\",\n                \"operationId\": \"ComAtlassianGreenhopperApiRestBoardResourceMoveIssuesToBoardPost\",\n                \"deprecated\": 0,\n                \"parameters\": [\n                    {\n                        \"name\": \"boardId\",\n                        \"in\": \"path\",\n                        \"description\": \"\"\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"Empty response is returned if operation was successful.\"\n                    }\n                }\n            }\n        },\n        \"\\/rest\\/agile\\/1.0\\/board\\/{boardId}\\/project\": {\n            \"get\": {\n                \"summary\": \"Get projects\",\n                \"description\": \"Returns all projects that are associated with the board, for the given board ID. If the user does not have permission to view the board, no projects will be returned at all. Returned projects are ordered by the name.\\n\\nA project is associated with a board if the board filter contains reference the project or there is an issue from the project that belongs to the board.\\n\\nThe board filter contains reference the project only if JQL query guarantees that returned issues will be returned from the proj\",\n                \"operationId\": \"ComAtlassianGreenhopperApiRestBoardProjectResourceGetProjectsGet\",\n                \"deprecated\": 0,\n                \"parameters\": [\n                    {\n                        \"name\": \"boardId\",\n                        \"in\": \"path\",\n                        \"description\": \"\"\n                    },\n                    {\n                        \"name\": \"startAt\",\n                        \"in\": \"query\",\n                        \"description\": \"The starting index of the returned boards. Base index: 0. See the 'Pagination' section at the top of this page for more details.\"\n                    },\n                    {\n                        \"name\": \"maxResults\",\n                        \"in\": \"query\",\n                        \"description\": \"The maximum number of boards to return per page. See the 'Pagination' section at the top of this page for more details.\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns the requested boards, at the specified page of the results.\"\n                    }\n                }\n            }\n        },\n        \"\\/rest\\/agile\\/1.0\\/board\\/{boardId}\\/project\\/full\": {\n            \"get\": {\n                \"summary\": \"Get projects full\",\n                \"description\": \"Returns all projects that are statically associated with the board, for the given board ID. Returned projects are ordered by the name.\\n\\nA project is associated with a board if the board filter contains reference the project.\\n\\nThe board filter contains reference the project only if JQL query guarantees that returned issues will be returned from the project set defined in JQL. For instance the query `project in (ABC, BCD) AND reporter = admin` have reference to ABC and BCD projects but query `proj\",\n                \"operationId\": \"ComAtlassianGreenhopperApiRestBoardProjectResourceGetProjectsFullGet\",\n                \"deprecated\": 0,\n                \"parameters\": [\n                    {\n                        \"name\": \"boardId\",\n                        \"in\": \"path\",\n                        \"description\": \"\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns the requested boards, at the specified page of the results.\"\n                    }\n                }\n            }\n        },\n        \"\\/rest\\/agile\\/1.0\\/board\\/{boardId}\\/properties\": {\n            \"get\": {\n                \"summary\": \"Get board property keys\",\n                \"description\": \"Returns the keys of all properties for the board identified by the id. The user who retrieves the property keys is required to have permissions to view the board.\",\n                \"operationId\": \"ComAtlassianGreenhopperApiRestBoardPropertyResourceGetBoardPropertyKeysGet\",\n                \"deprecated\": 0,\n                \"parameters\": [\n                    {\n                        \"name\": \"boardId\",\n                        \"in\": \"path\",\n                        \"description\": \"\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns the requested boards, at the specified page of the results.\"\n                    }\n                }\n            }\n        },\n        \"\\/rest\\/agile\\/1.0\\/board\\/{boardId}\\/properties\\/{propertyKey}\": {\n            \"get\": {\n                \"summary\": \"Get board property\",\n                \"description\": \"Returns the value of the property with a given key from the board identified by the provided id. The user who retrieves the property is required to have permissions to view the board.\",\n                \"operationId\": \"ComAtlassianGreenhopperApiRestBoardPropertyResourceGetBoardPropertyGet\",\n                \"deprecated\": 0,\n                \"parameters\": [\n                    {\n                        \"name\": \"boardId\",\n                        \"in\": \"path\",\n                        \"description\": \"\"\n                    },\n                    {\n                        \"name\": \"propertyKey\",\n                        \"in\": \"path\",\n                        \"description\": \"the key of the property to return.\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns the requested boards, at the specified page of the results.\"\n                    }\n                }\n            },\n            \"put\": {\n                \"summary\": \"Set board property\",\n                \"description\": \"Sets the value of the specified board's property.\\n\\nYou can use this resource to store a custom data against the board identified by the id. The user who stores the data is required to have permissions to modify the board.\",\n                \"operationId\": \"ComAtlassianGreenhopperApiRestBoardPropertyResourceSetBoardPropertyPut\",\n                \"deprecated\": 0,\n                \"parameters\": [\n                    {\n                        \"name\": \"boardId\",\n                        \"in\": \"path\",\n                        \"description\": \"\"\n                    },\n                    {\n                        \"name\": \"propertyKey\",\n                        \"in\": \"path\",\n                        \"description\": \"the key of the property to return.\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns the requested boards, at the specified page of the results.\"\n                    }\n                }\n            },\n            \"delete\": {\n                \"summary\": \"Delete board property\",\n                \"description\": \"Removes the property from the board identified by the id. Ths user removing the property is required to have permissions to modify the board.\",\n                \"operationId\": \"ComAtlassianGreenhopperApiRestBoardPropertyResourceDeleteBoardPropertyDelete\",\n                \"deprecated\": 0,\n                \"parameters\": [\n                    {\n                        \"name\": \"boardId\",\n                        \"in\": \"path\",\n                        \"description\": \"\"\n                    },\n                    {\n                        \"name\": \"propertyKey\",\n                        \"in\": \"path\",\n                        \"description\": \"the key of the property to return.\"\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"Empty response is returned if operation was successful.\"\n                    }\n                }\n            }\n        },\n        \"\\/rest\\/agile\\/1.0\\/board\\/{boardId}\\/quickfilter\": {\n            \"get\": {\n                \"summary\": \"Get all quick filters\",\n                \"description\": \"Returns all quick filters from a board, for a given board ID.\",\n                \"operationId\": \"ComAtlassianGreenhopperApiRestBoardQuickFilterResourceGetAllQuickFiltersGet\",\n                \"deprecated\": 0,\n                \"parameters\": [\n                    {\n                        \"name\": \"boardId\",\n                        \"in\": \"path\",\n                        \"description\": \"\"\n                    },\n                    {\n                        \"name\": \"startAt\",\n                        \"in\": \"query\",\n                        \"description\": \"The starting index of the returned boards. Base index: 0. See the 'Pagination' section at the top of this page for more details.\"\n                    },\n                    {\n                        \"name\": \"maxResults\",\n                        \"in\": \"query\",\n                        \"description\": \"The maximum number of boards to return per page. See the 'Pagination' section at the top of this page for more details.\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns the requested boards, at the specified page of the results.\"\n                    }\n                }\n            }\n        },\n        \"\\/rest\\/agile\\/1.0\\/board\\/{boardId}\\/quickfilter\\/{quickFilterId}\": {\n            \"get\": {\n                \"summary\": \"Get quick filter\",\n                \"description\": \"Returns the quick filter for a given quick filter ID. The quick filter will only be returned if the user can view the board that the quick filter belongs to.\",\n                \"operationId\": \"ComAtlassianGreenhopperApiRestBoardQuickFilterResourceGetQuickFilterGet\",\n                \"deprecated\": 0,\n                \"parameters\": [\n                    {\n                        \"name\": \"boardId\",\n                        \"in\": \"path\",\n                        \"description\": \"\"\n                    },\n                    {\n                        \"name\": \"quickFilterId\",\n                        \"in\": \"path\",\n                        \"description\": \"The ID of the requested quick filter.\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns the requested boards, at the specified page of the results.\"\n                    }\n                }\n            }\n        },\n        \"\\/rest\\/agile\\/1.0\\/board\\/{boardId}\\/reports\": {\n            \"get\": {\n                \"summary\": \"Get reports for board\",\n                \"description\": \"\",\n                \"operationId\": \"ComAtlassianGreenhopperApiRestBoardReportsResourceGetReportsForBoardGet\",\n                \"deprecated\": 0,\n                \"parameters\": [\n                    {\n                        \"name\": \"boardId\",\n                        \"in\": \"path\",\n                        \"description\": \"\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns the requested boards, at the specified page of the results.\"\n                    }\n                }\n            }\n        },\n        \"\\/rest\\/agile\\/1.0\\/board\\/{boardId}\\/sprint\": {\n            \"get\": {\n                \"summary\": \"Get all sprints\",\n                \"description\": \"Returns all sprints from a board, for a given board ID. This only includes sprints that the user has permission to view.\",\n                \"operationId\": \"ComAtlassianGreenhopperApiRestBoardSprintResourceGetAllSprintsGet\",\n                \"deprecated\": 0,\n                \"parameters\": [\n                    {\n                        \"name\": \"boardId\",\n                        \"in\": \"path\",\n                        \"description\": \"\"\n                    },\n                    {\n                        \"name\": \"startAt\",\n                        \"in\": \"query\",\n                        \"description\": \"The starting index of the returned boards. Base index: 0. See the 'Pagination' section at the top of this page for more details.\"\n                    },\n                    {\n                        \"name\": \"maxResults\",\n                        \"in\": \"query\",\n                        \"description\": \"The maximum number of boards to return per page. See the 'Pagination' section at the top of this page for more details.\"\n                    },\n                    {\n                        \"name\": \"state\",\n                        \"in\": \"query\",\n                        \"description\": \"Filters results to sprints in specified states. Valid values: future, active, closed. You can define multiple states separated by commas, e.g. state=active,closed\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns the requested boards, at the specified page of the results.\"\n                    }\n                }\n            }\n        },\n        \"\\/rest\\/agile\\/1.0\\/board\\/{boardId}\\/sprint\\/{sprintId}\\/issue\": {\n            \"get\": {\n                \"summary\": \"Get issues for sprint\",\n                \"description\": \"Get all issues you have access to that belong to the sprint from the board. Issue returned from this resource contains additional fields like: sprint, closedSprints, flagged and epic. Issues are returned ordered by rank. JQL order has higher priority than default rank.\",\n                \"operationId\": \"ComAtlassianGreenhopperApiRestBoardSprintResourceGetIssuesForSprintGet\",\n                \"deprecated\": 0,\n                \"parameters\": [\n                    {\n                        \"name\": \"boardId\",\n                        \"in\": \"path\",\n                        \"description\": \"\"\n                    },\n                    {\n                        \"name\": \"sprintId\",\n                        \"in\": \"path\",\n                        \"description\": \"The ID of the sprint that contains requested issues.\"\n                    },\n                    {\n                        \"name\": \"startAt\",\n                        \"in\": \"query\",\n                        \"description\": \"The starting index of the returned boards. Base index: 0. See the 'Pagination' section at the top of this page for more details.\"\n                    },\n                    {\n                        \"name\": \"maxResults\",\n                        \"in\": \"query\",\n                        \"description\": \"The maximum number of boards to return per page. See the 'Pagination' section at the top of this page for more details.\"\n                    },\n                    {\n                        \"name\": \"jql\",\n                        \"in\": \"query\",\n                        \"description\": \"Filters results using a JQL query. If you define an order in your JQL query, it will override the default order of the returned issues.  \\nNote that `username` and `userkey` can't be used as search terms for this parameter due to privacy reasons. Use `accountId` instead.\"\n                    },\n                    {\n                        \"name\": \"validateQuery\",\n                        \"in\": \"query\",\n                        \"description\": \"Specifies whether to validate the JQL query or not. Default: true.\"\n                    },\n                    {\n                        \"name\": \"fields\",\n                        \"in\": \"query\",\n                        \"description\": \"The list of fields to return for each issue. By default, all navigable and Agile fields are returned.\"\n                    },\n                    {\n                        \"name\": \"expand\",\n                        \"in\": \"query\",\n                        \"description\": \"List of fields to expand for each board. Valid values: admins, permissions.\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns the requested boards, at the specified page of the results.\"\n                    }\n                }\n            }\n        },\n        \"\\/rest\\/agile\\/1.0\\/board\\/{boardId}\\/version\": {\n            \"get\": {\n                \"summary\": \"Get all versions\",\n                \"description\": \"Returns all versions from a board, for a given board ID. This only includes versions that the user has permission to view. Note, if the user does not have permission to view the board, no versions will be returned at all. Returned versions are ordered by the name of the project from which they belong and then by sequence defined by user.\",\n                \"operationId\": \"ComAtlassianGreenhopperApiRestBoardVersionResourceGetAllVersionsGet\",\n                \"deprecated\": 0,\n                \"parameters\": [\n                    {\n                        \"name\": \"boardId\",\n                        \"in\": \"path\",\n                        \"description\": \"\"\n                    },\n                    {\n                        \"name\": \"startAt\",\n                        \"in\": \"query\",\n                        \"description\": \"The starting index of the returned boards. Base index: 0. See the 'Pagination' section at the top of this page for more details.\"\n                    },\n                    {\n                        \"name\": \"maxResults\",\n                        \"in\": \"query\",\n                        \"description\": \"The maximum number of boards to return per page. See the 'Pagination' section at the top of this page for more details.\"\n                    },\n                    {\n                        \"name\": \"released\",\n                        \"in\": \"query\",\n                        \"description\": \"Filters results to versions that are either released or unreleased. Valid values: true, false.\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns the requested boards, at the specified page of the results.\"\n                    }\n                }\n            }\n        },\n        \"\\/rest\\/agile\\/1.0\\/epic\\/none\\/issue\": {\n            \"get\": {\n                \"summary\": \"Get issues without epic\",\n                \"description\": \"Returns all issues that do not belong to any epic. This only includes issues that the user has permission to view. Issues returned from this resource include Agile fields, like sprint, closedSprints, flagged, and epic. By default, the returned issues are ordered by rank. **Note:** If you are querying a next-gen project, do not use this operation. Instead, search for issues that don't belong to an epic by using the [Search for issues using JQL](https:\\/\\/developer.atlassian.com\\/cloud\\/jira\\/platform\\/\",\n                \"operationId\": \"ComAtlassianGreenhopperApiRestEpicResourceGetIssuesWithoutEpicGet\",\n                \"deprecated\": 0,\n                \"parameters\": [\n                    {\n                        \"name\": \"startAt\",\n                        \"in\": \"query\",\n                        \"description\": \"The starting index of the returned boards. Base index: 0. See the 'Pagination' section at the top of this page for more details.\"\n                    },\n                    {\n                        \"name\": \"maxResults\",\n                        \"in\": \"query\",\n                        \"description\": \"The maximum number of boards to return per page. See the 'Pagination' section at the top of this page for more details.\"\n                    },\n                    {\n                        \"name\": \"jql\",\n                        \"in\": \"query\",\n                        \"description\": \"Filters results using a JQL query. If you define an order in your JQL query, it will override the default order of the returned issues.  \\nNote that `username` and `userkey` can't be used as search terms for this parameter due to privacy reasons. Use `accountId` instead.\"\n                    },\n                    {\n                        \"name\": \"validateQuery\",\n                        \"in\": \"query\",\n                        \"description\": \"Specifies whether to validate the JQL query or not. Default: true.\"\n                    },\n                    {\n                        \"name\": \"fields\",\n                        \"in\": \"query\",\n                        \"description\": \"The list of fields to return for each issue. By default, all navigable and Agile fields are returned.\"\n                    },\n                    {\n                        \"name\": \"expand\",\n                        \"in\": \"query\",\n                        \"description\": \"List of fields to expand for each board. Valid values: admins, permissions.\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns the requested boards, at the specified page of the results.\"\n                    }\n                }\n            },\n            \"post\": {\n                \"summary\": \"Remove issues from epic\",\n                \"description\": \"Removes issues from epics. The user needs to have the edit issue permission for all issue they want to remove from epics. The maximum number of issues that can be moved in one operation is 50. **Note:** This operation does not work for epics in next-gen projects. Instead, update the issue using `{ fields: { parent: {} } }`\",\n                \"operationId\": \"ComAtlassianGreenhopperApiRestEpicResourceRemoveIssuesFromEpicPost\",\n                \"deprecated\": 0,\n                \"parameters\": [],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"Empty response is returned if operation was successful.\"\n                    }\n                }\n            }\n        },\n        \"\\/rest\\/agile\\/1.0\\/epic\\/{epicIdOrKey}\": {\n            \"get\": {\n                \"summary\": \"Get epic\",\n                \"description\": \"Returns the epic for a given epic ID. This epic will only be returned if the user has permission to view it. **Note:** This operation does not work for epics in next-gen projects.\",\n                \"operationId\": \"ComAtlassianGreenhopperApiRestEpicResourceGetEpicGet\",\n                \"deprecated\": 0,\n                \"parameters\": [\n                    {\n                        \"name\": \"epicIdOrKey\",\n                        \"in\": \"path\",\n                        \"description\": \"The id or key of the requested epic.\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns the requested boards, at the specified page of the results.\"\n                    }\n                }\n            },\n            \"post\": {\n                \"summary\": \"Partially update epic\",\n                \"description\": \"Performs a partial update of the epic. A partial update means that fields not present in the request JSON will not be updated. Valid values for color are `color_1` to `color_9`. **Note:** This operation does not work for epics in next-gen projects.\",\n                \"operationId\": \"ComAtlassianGreenhopperApiRestEpicResourcePartiallyUpdateEpicPost\",\n                \"deprecated\": 0,\n                \"parameters\": [\n                    {\n                        \"name\": \"epicIdOrKey\",\n                        \"in\": \"path\",\n                        \"description\": \"The id or key of the requested epic.\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns the requested boards, at the specified page of the results.\"\n                    }\n                }\n            }\n        },\n        \"\\/rest\\/agile\\/1.0\\/epic\\/{epicIdOrKey}\\/issue\": {\n            \"get\": {\n                \"summary\": \"Get issues for epic\",\n                \"description\": \"Returns all issues that belong to the epic, for the given epic ID. This only includes issues that the user has permission to view. Issues returned from this resource include Agile fields, like sprint, closedSprints, flagged, and epic. By default, the returned issues are ordered by rank. **Note:** If you are querying a next-gen project, do not use this operation. Instead, search for issues that belong to an epic by using the [Search for issues using JQL](https:\\/\\/developer.atlassian.com\\/cloud\\/jira\",\n                \"operationId\": \"ComAtlassianGreenhopperApiRestEpicResourceGetIssuesForEpicGet\",\n                \"deprecated\": 0,\n                \"parameters\": [\n                    {\n                        \"name\": \"epicIdOrKey\",\n                        \"in\": \"path\",\n                        \"description\": \"The id or key of the requested epic.\"\n                    },\n                    {\n                        \"name\": \"startAt\",\n                        \"in\": \"query\",\n                        \"description\": \"The starting index of the returned boards. Base index: 0. See the 'Pagination' section at the top of this page for more details.\"\n                    },\n                    {\n                        \"name\": \"maxResults\",\n                        \"in\": \"query\",\n                        \"description\": \"The maximum number of boards to return per page. See the 'Pagination' section at the top of this page for more details.\"\n                    },\n                    {\n                        \"name\": \"jql\",\n                        \"in\": \"query\",\n                        \"description\": \"Filters results using a JQL query. If you define an order in your JQL query, it will override the default order of the returned issues.  \\nNote that `username` and `userkey` can't be used as search terms for this parameter due to privacy reasons. Use `accountId` instead.\"\n                    },\n                    {\n                        \"name\": \"validateQuery\",\n                        \"in\": \"query\",\n                        \"description\": \"Specifies whether to validate the JQL query or not. Default: true.\"\n                    },\n                    {\n                        \"name\": \"fields\",\n                        \"in\": \"query\",\n                        \"description\": \"The list of fields to return for each issue. By default, all navigable and Agile fields are returned.\"\n                    },\n                    {\n                        \"name\": \"expand\",\n                        \"in\": \"query\",\n                        \"description\": \"List of fields to expand for each board. Valid values: admins, permissions.\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns the requested boards, at the specified page of the results.\"\n                    }\n                }\n            },\n            \"post\": {\n                \"summary\": \"Move issues to epic\",\n                \"description\": \"Moves issues to an epic, for a given epic id. Issues can be only in a single epic at the same time. That means that already assigned issues to an epic, will not be assigned to the previous epic anymore. The user needs to have the edit issue permission for all issue they want to move and to the epic. The maximum number of issues that can be moved in one operation is 50. **Note:** This operation does not work for epics in next-gen projects.\",\n                \"operationId\": \"ComAtlassianGreenhopperApiRestEpicResourceMoveIssuesToEpicPost\",\n                \"deprecated\": 0,\n                \"parameters\": [\n                    {\n                        \"name\": \"epicIdOrKey\",\n                        \"in\": \"path\",\n                        \"description\": \"The id or key of the requested epic.\"\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"Empty response is returned if operation was successful.\"\n                    }\n                }\n            }\n        },\n        \"\\/rest\\/agile\\/1.0\\/epic\\/{epicIdOrKey}\\/rank\": {\n            \"put\": {\n                \"summary\": \"Rank epics\",\n                \"description\": \"Moves (ranks) an epic before or after a given epic.\\n\\nIf rankCustomFieldId is not defined, the default rank field will be used.\\n\\n**Note:** This operation does not work for epics in next-gen projects.\",\n                \"operationId\": \"ComAtlassianGreenhopperApiRestEpicResourceRankEpicsPut\",\n                \"deprecated\": 0,\n                \"parameters\": [\n                    {\n                        \"name\": \"epicIdOrKey\",\n                        \"in\": \"path\",\n                        \"description\": \"The id or key of the requested epic.\"\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"Empty response is returned if operation was successful.\"\n                    }\n                }\n            }\n        },\n        \"\\/rest\\/agile\\/1.0\\/issue\\/rank\": {\n            \"put\": {\n                \"summary\": \"Rank issues\",\n                \"description\": \"Moves (ranks) issues before or after a given issue. At most 50 issues may be ranked at once.\\n\\nThis operation may fail for some issues, although this will be rare. In that case the 207 status code is returned for the whole response and detailed information regarding each issue is available in the response body.\\n\\nIf rankCustomFieldId is not defined, the default rank field will be used.\",\n                \"operationId\": \"ComAtlassianGreenhopperApiRestIssueResourceRankIssuesPut\",\n                \"deprecated\": 0,\n                \"parameters\": [],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"Empty response is returned if operation was successful.\"\n                    }\n                }\n            }\n        },\n        \"\\/rest\\/agile\\/1.0\\/issue\\/{issueIdOrKey}\": {\n            \"get\": {\n                \"summary\": \"Get issue\",\n                \"description\": \"Returns a single issue, for a given issue ID or issue key. Issues returned from this resource include Agile fields, like sprint, closedSprints, flagged, and epic.\",\n                \"operationId\": \"ComAtlassianGreenhopperApiRestIssueResourceGetIssueGet\",\n                \"deprecated\": 0,\n                \"parameters\": [\n                    {\n                        \"name\": \"issueIdOrKey\",\n                        \"in\": \"path\",\n                        \"description\": \"The ID or key of the requested issue.\"\n                    },\n                    {\n                        \"name\": \"fields\",\n                        \"in\": \"query\",\n                        \"description\": \"The list of fields to return for each issue. By default, all navigable and Agile fields are returned.\"\n                    },\n                    {\n                        \"name\": \"expand\",\n                        \"in\": \"query\",\n                        \"description\": \"List of fields to expand for each board. Valid values: admins, permissions.\"\n                    },\n                    {\n                        \"name\": \"updateHistory\",\n                        \"in\": \"query\",\n                        \"description\": \"A boolean indicating whether the issue retrieved by this method should be added to the current user's issue history\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns the requested boards, at the specified page of the results.\"\n                    }\n                }\n            }\n        },\n        \"\\/rest\\/agile\\/1.0\\/issue\\/{issueIdOrKey}\\/estimation\": {\n            \"get\": {\n                \"summary\": \"Get issue estimation for board\",\n                \"description\": \"Returns the estimation of the issue and a fieldId of the field that is used for it. `boardId` param is required. This param determines which field will be updated on a issue.\\n\\nOriginal time internally stores and returns the estimation as a number of seconds.\\n\\nThe field used for estimation on the given board can be obtained from [board configuration resource](#agile\\/1.0\\/board-getConfiguration). More information about the field are returned by [edit meta resource](#api-rest-api-\u003cver\u003e-issue-getEdit\",\n                \"operationId\": \"ComAtlassianGreenhopperApiRestIssueResourceGetIssueEstimationForBoardGet\",\n                \"deprecated\": 0,\n                \"parameters\": [\n                    {\n                        \"name\": \"issueIdOrKey\",\n                        \"in\": \"path\",\n                        \"description\": \"The ID or key of the requested issue.\"\n                    },\n                    {\n                        \"name\": \"boardId\",\n                        \"in\": \"query\",\n                        \"description\": \"The ID of the board required to determine which field is used for estimation.\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns the requested boards, at the specified page of the results.\"\n                    }\n                }\n            },\n            \"put\": {\n                \"summary\": \"Estimate issue for board\",\n                \"description\": \"Updates the estimation of the issue. boardId param is required. This param determines which field will be updated on a issue.\\n\\nNote that this resource changes the estimation field of the issue regardless of appearance the field on the screen.\\n\\nOriginal time tracking estimation field accepts estimation in formats like \\\"1w\\\", \\\"2d\\\", \\\"3h\\\", \\\"20m\\\" or number which represent number of minutes. However, internally the field stores and returns the estimation as a number of seconds.\\n\\nThe field used for esti\",\n                \"operationId\": \"ComAtlassianGreenhopperApiRestIssueResourceEstimateIssueForBoardPut\",\n                \"deprecated\": 0,\n                \"parameters\": [\n                    {\n                        \"name\": \"issueIdOrKey\",\n                        \"in\": \"path\",\n                        \"description\": \"The ID or key of the requested issue.\"\n                    },\n                    {\n                        \"name\": \"boardId\",\n                        \"in\": \"query\",\n                        \"description\": \"The ID of the board required to determine which field is used for estimation.\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns the requested boards, at the specified page of the results.\"\n                    }\n                }\n            }\n        },\n        \"\\/rest\\/agile\\/1.0\\/sprint\": {\n            \"post\": {\n                \"summary\": \"Create sprint\",\n                \"description\": \"Creates a future sprint. Sprint name and origin board id are required. Start date, end date, and goal are optional.\\n\\nNote that the sprint name is trimmed. Also, when starting sprints from the UI, the \\\"endDate\\\" set through this call is ignored and instead the last sprint's duration is used to fill the form.\",\n                \"operationId\": \"ComAtlassianGreenhopperApiRestSprintResourceCreateSprintPost\",\n                \"deprecated\": 0,\n                \"parameters\": [],\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"Returns the created board.\"\n                    }\n                }\n            }\n        },\n        \"\\/rest\\/agile\\/1.0\\/sprint\\/{sprintId}\": {\n            \"get\": {\n                \"summary\": \"Get sprint\",\n                \"description\": \"Returns the sprint for a given sprint ID. The sprint will only be returned if the user can view the board that the sprint was created on, or view at least one of the issues in the sprint.\",\n                \"operationId\": \"ComAtlassianGreenhopperApiRestSprintResourceGetSprintGet\",\n                \"deprecated\": 0,\n                \"parameters\": [\n                    {\n                        \"name\": \"sprintId\",\n                        \"in\": \"path\",\n                        \"description\": \"The ID of the sprint that contains requested issues.\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns the requested boards, at the specified page of the results.\"\n                    }\n                }\n            },\n            \"post\": {\n                \"summary\": \"Partially update sprint\",\n                \"description\": \"Performs a partial update of a sprint. A partial update means that fields not present in the request JSON will not be updated.\\n\\nNotes:\\n\\n*   Sprints that are in a closed state cannot be updated.\\n*   A sprint can be started by updating the state to 'active'. This requires the sprint to be in the 'future' state and have a startDate and endDate set.\\n*   A sprint can be completed by updating the state to 'closed'. This action requires the sprint to be in the 'active' state. This sets the completeDate\",\n                \"operationId\": \"ComAtlassianGreenhopperApiRestSprintResourcePartiallyUpdateSprintPost\",\n                \"deprecated\": 0,\n                \"parameters\": [\n                    {\n                        \"name\": \"sprintId\",\n                        \"in\": \"path\",\n                        \"description\": \"The ID of the sprint that contains requested issues.\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns the requested boards, at the specified page of the results.\"\n                    }\n                }\n            },\n            \"put\": {\n                \"summary\": \"Update sprint\",\n                \"description\": \"Performs a full update of a sprint. A full update means that the result will be exactly the same as the request body. Any fields not present in the request JSON will be set to null.\\n\\nNotes:\\n\\n*   Sprints that are in a closed state cannot be updated.\\n*   A sprint can be started by updating the state to 'active'. This requires the sprint to be in the 'future' state and have a startDate and endDate set.\\n*   A sprint can be completed by updating the state to 'closed'. This action requires the sprint \",\n                \"operationId\": \"ComAtlassianGreenhopperApiRestSprintResourceUpdateSprintPut\",\n                \"deprecated\": 0,\n                \"parameters\": [\n                    {\n                        \"name\": \"sprintId\",\n                        \"in\": \"path\",\n                        \"description\": \"The ID of the sprint that contains requested issues.\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns the requested boards, at the specified page of the results.\"\n                    }\n                }\n            },\n            \"delete\": {\n                \"summary\": \"Delete sprint\",\n                \"description\": \"Deletes a sprint. Once a sprint is deleted, all open issues in the sprint will be moved to the backlog.\",\n                \"operationId\": \"ComAtlassianGreenhopperApiRestSprintResourceDeleteSprintDelete\",\n                \"deprecated\": 0,\n                \"parameters\": [\n                    {\n                        \"name\": \"sprintId\",\n                        \"in\": \"path\",\n                        \"description\": \"The ID of the sprint that contains requested issues.\"\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"Empty response is returned if operation was successful.\"\n                    }\n                }\n            }\n        },\n        \"\\/rest\\/agile\\/1.0\\/sprint\\/{sprintId}\\/issue\": {\n            \"get\": {\n                \"summary\": \"Get issues for sprint\",\n                \"description\": \"Returns all issues in a sprint, for a given sprint ID. This only includes issues that the user has permission to view. By default, the returned issues are ordered by rank.\",\n                \"operationId\": \"ComAtlassianGreenhopperApiRestSprintResourceGetIssuesForSprintGet\",\n                \"deprecated\": 0,\n                \"parameters\": [\n                    {\n                        \"name\": \"sprintId\",\n                        \"in\": \"path\",\n                        \"description\": \"The ID of the sprint that contains requested issues.\"\n                    },\n                    {\n                        \"name\": \"startAt\",\n                        \"in\": \"query\",\n                        \"description\": \"The starting index of the returned boards. Base index: 0. See the 'Pagination' section at the top of this page for more details.\"\n                    },\n                    {\n                        \"name\": \"maxResults\",\n                        \"in\": \"query\",\n                        \"description\": \"The maximum number of boards to return per page. See the 'Pagination' section at the top of this page for more details.\"\n                    },\n                    {\n                        \"name\": \"jql\",\n                        \"in\": \"query\",\n                        \"description\": \"Filters results using a JQL query. If you define an order in your JQL query, it will override the default order of the returned issues.  \\nNote that `username` and `userkey` can't be used as search terms for this parameter due to privacy reasons. Use `accountId` instead.\"\n                    },\n                    {\n                        \"name\": \"validateQuery\",\n                        \"in\": \"query\",\n                        \"description\": \"Specifies whether to validate the JQL query or not. Default: true.\"\n                    },\n                    {\n                        \"name\": \"fields\",\n                        \"in\": \"query\",\n                        \"description\": \"The list of fields to return for each issue. By default, all navigable and Agile fields are returned.\"\n                    },\n                    {\n                        \"name\": \"expand\",\n                        \"in\": \"query\",\n                        \"description\": \"List of fields to expand for each board. Valid values: admins, permissions.\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns the requested boards, at the specified page of the results.\"\n                    }\n                }\n            },\n            \"post\": {\n                \"summary\": \"Move issues to sprint and rank\",\n                \"description\": \"Moves issues to a sprint, for a given sprint ID. Issues can only be moved to open or active sprints. The maximum number of issues that can be moved in one operation is 50.\",\n                \"operationId\": \"ComAtlassianGreenhopperApiRestSprintResourceMoveIssuesToSprintAndRankPost\",\n                \"deprecated\": 0,\n                \"parameters\": [\n                    {\n                        \"name\": \"sprintId\",\n                        \"in\": \"path\",\n                        \"description\": \"The ID of the sprint that contains requested issues.\"\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"Empty response is returned if operation was successful.\"\n                    }\n                }\n            }\n        },\n        \"\\/rest\\/agile\\/1.0\\/sprint\\/{sprintId}\\/properties\": {\n            \"get\": {\n                \"summary\": \"Get properties keys\",\n                \"description\": \"Returns the keys of all properties for the sprint identified by the id. The user who retrieves the property keys is required to have permissions to view the sprint.\",\n                \"operationId\": \"ComAtlassianGreenhopperApiRestSprintPropertyResourceGetPropertiesKeysGet\",\n                \"deprecated\": 0,\n                \"parameters\": [\n                    {\n                        \"name\": \"sprintId\",\n                        \"in\": \"path\",\n                        \"description\": \"The ID of the sprint that contains requested issues.\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns the requested boards, at the specified page of the results.\"\n                    }\n                }\n            }\n        },\n        \"\\/rest\\/agile\\/1.0\\/sprint\\/{sprintId}\\/properties\\/{propertyKey}\": {\n            \"get\": {\n                \"summary\": \"Get property\",\n                \"description\": \"Returns the value of the property with a given key from the sprint identified by the provided id. The user who retrieves the property is required to have permissions to view the sprint.\",\n                \"operationId\": \"ComAtlassianGreenhopperApiRestSprintPropertyResourceGetPropertyGet\",\n                \"deprecated\": 0,\n                \"parameters\": [\n                    {\n                        \"name\": \"sprintId\",\n                        \"in\": \"path\",\n                        \"description\": \"The ID of the sprint that contains requested issues.\"\n                    },\n                    {\n                        \"name\": \"propertyKey\",\n                        \"in\": \"path\",\n                        \"description\": \"the key of the property to return.\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns the requested boards, at the specified page of the results.\"\n                    }\n                }\n            },\n            \"put\": {\n                \"summary\": \"Set property\",\n                \"description\": \"Sets the value of the specified sprint's property.\\n\\nYou can use this resource to store a custom data against the sprint identified by the id. The user who stores the data is required to have permissions to modify the sprint.\",\n                \"operationId\": \"ComAtlassianGreenhopperApiRestSprintPropertyResourceSetPropertyPut\",\n                \"deprecated\": 0,\n                \"parameters\": [\n                    {\n                        \"name\": \"sprintId\",\n                        \"in\": \"path\",\n                        \"description\": \"The ID of the sprint that contains requested issues.\"\n                    },\n                    {\n                        \"name\": \"propertyKey\",\n                        \"in\": \"path\",\n                        \"description\": \"the key of the property to return.\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns the requested boards, at the specified page of the results.\"\n                    }\n                }\n            },\n            \"delete\": {\n                \"summary\": \"Delete property\",\n                \"description\": \"Removes the property from the sprint identified by the id. Ths user removing the property is required to have permissions to modify the sprint.\",\n                \"operationId\": \"ComAtlassianGreenhopperApiRestSprintPropertyResourceDeletePropertyDelete\",\n                \"deprecated\": 0,\n                \"parameters\": [\n                    {\n                        \"name\": \"sprintId\",\n                        \"in\": \"path\",\n                        \"description\": \"The ID of the sprint that contains requested issues.\"\n                    },\n                    {\n                        \"name\": \"propertyKey\",\n                        \"in\": \"path\",\n                        \"description\": \"the key of the property to return.\"\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"Empty response is returned if operation was successful.\"\n                    }\n                }\n            }\n        },\n        \"\\/rest\\/agile\\/1.0\\/sprint\\/{sprintId}\\/swap\": {\n            \"post\": {\n                \"summary\": \"Swap sprint\",\n                \"description\": \"Swap the position of the sprint with the second sprint.\",\n                \"operationId\": \"ComAtlassianGreenhopperApiRestSprintResourceSwapSprintPost\",\n                \"deprecated\": 0,\n                \"parameters\": [\n                    {\n                        \"name\": \"sprintId\",\n                        \"in\": \"path\",\n                        \"description\": \"The ID of the sprint that contains requested issues.\"\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"Empty response is returned if operation was successful.\"\n                    }\n                }\n            }\n        },\n        \"\\/rest\\/devinfo\\/0.10\\/bulk\": {\n            \"post\": {\n                \"summary\": \"Store development information\",\n                \"description\": \"Stores development information provided in the request to make it available when viewing issues in JIRA. Existing repository and entity data for the same ID will be replaced if the updateSequenceId of existing data is less than the incoming data. Submissions are performed asynchronously. Submitted data will eventually be available in Jira; most updates are available within a short period of time, but may take some time during peak load and\\/or maintenance times.\",\n                \"operationId\": \"StoreDevelopmentInformation\",\n                \"deprecated\": 0,\n                \"parameters\": [],\n                \"responses\": {\n                    \"202\": {\n                        \"description\": \"Submission accepted. Each submitted repository and entity that is of a valid format will be eventually available in Jira.\"\n                    }\n                }\n            }\n        },\n        \"\\/rest\\/devinfo\\/0.10\\/repository\\/{repositoryId}\": {\n            \"get\": {\n                \"summary\": \"Get repository\",\n                \"description\": \"For the specified repository ID, retrieves the repository and the most recent 400 development information entities. The result will be what is currently stored, ignoring any pending updates or deletes.\",\n                \"operationId\": \"GetRepository\",\n                \"deprecated\": 0,\n                \"parameters\": [\n                    {\n                        \"name\": \"repositoryId\",\n                        \"in\": \"path\",\n                        \"description\": \"The ID of repository to fetch\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns the requested boards, at the specified page of the results.\"\n                    }\n                }\n            },\n            \"delete\": {\n                \"summary\": \"Delete repository\",\n                \"description\": \"Deletes the repository data stored by the given ID and all related development information entities. Deletion is performed asynchronously.\",\n                \"operationId\": \"DeleteRepository\",\n                \"deprecated\": 0,\n                \"parameters\": [\n                    {\n                        \"name\": \"repositoryId\",\n                        \"in\": \"path\",\n                        \"description\": \"The ID of repository to fetch\"\n                    },\n                    {\n                        \"name\": \"_updateSequenceId\",\n                        \"in\": \"query\",\n                        \"description\": \"An optional property to use to control deletion. Only stored data with an updateSequenceId less than or equal to that provided will be deleted. This can be used to help ensure submit\\/delete requests are applied correctly if they are issued close together.\"\n                    }\n                ],\n                \"responses\": {\n                    \"202\": {\n                        \"description\": \"Submission accepted. Each submitted repository and entity that is of a valid format will be eventually available in Jira.\"\n                    }\n                }\n            }\n        },\n        \"\\/rest\\/devinfo\\/0.10\\/bulkByProperties\": {\n            \"delete\": {\n                \"summary\": \"Delete development information by properties\",\n                \"description\": \"Deletes development information entities which have all the provided properties. Entities will be deleted that match ALL of the properties (i.e. treated as an AND). For example if request is DELETE bulk?accountId=123\u0026projectId=ABC entities which have properties accountId=123 and projectId=ABC will be deleted. Special property '\\\\_updateSequenceId' can be used to delete all entities with updateSequenceId less or equal than the value specified. In addition to the optional '\\\\_updateSequenceId', one \",\n                \"operationId\": \"DeleteByProperties\",\n                \"deprecated\": 0,\n                \"parameters\": [\n                    {\n                        \"name\": \"_updateSequenceId\",\n                        \"in\": \"query\",\n                        \"description\": \"An optional property to use to control deletion. Only stored data with an updateSequenceId less than or equal to that provided will be deleted. This can be used to help ensure submit\\/delete requests are applied correctly if they are issued close together.\"\n                    }\n                ],\n                \"responses\": {\n                    \"202\": {\n                        \"description\": \"Submission accepted. Each submitted repository and entity that is of a valid format will be eventually available in Jira.\"\n                    }\n                }\n            }\n        },\n        \"\\/rest\\/devinfo\\/0.10\\/existsByProperties\": {\n            \"get\": {\n                \"summary\": \"Check if data exists for the supplied properties\",\n                \"description\": \"Checks if development information which have all the provided properties exists. For example, if request is GET existsByProperties?accountId=123\u0026projectId=ABC then result will be positive only if there is at least one entity or repository with both properties accountId=123 and projectId=ABC. Special property '\\\\_updateSequenceId' can be used to filter all entities with updateSequenceId less or equal than the value specified. In addition to the optional '\\\\_updateSequenceId', one or more query para\",\n                \"operationId\": \"ExistsByProperties\",\n                \"deprecated\": 0,\n                \"parameters\": [\n                    {\n                        \"name\": \"_updateSequenceId\",\n                        \"in\": \"query\",\n                        \"description\": \"An optional property to use to control deletion. Only stored data with an updateSequenceId less than or equal to that provided will be deleted. This can be used to help ensure submit\\/delete requests are applied correctly if they are issued close together.\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns the requested boards, at the specified page of the results.\"\n                    }\n                }\n            }\n        },\n        \"\\/rest\\/devinfo\\/0.10\\/repository\\/{repositoryId}\\/{entityType}\\/{entityId}\": {\n            \"delete\": {\n                \"summary\": \"Delete development information entity\",\n                \"description\": \"Deletes particular development information entity. Deletion is performed asynchronously.\",\n                \"operationId\": \"DeleteEntity\",\n                \"deprecated\": 0,\n                \"parameters\": [\n                    {\n                        \"name\": \"repositoryId\",\n                        \"in\": \"path\",\n                        \"description\": \"The ID of repository to fetch\"\n                    },\n                    {\n                        \"name\": \"entityType\",\n                        \"in\": \"path\",\n                        \"description\": \"\"\n                    },\n                    {\n                        \"name\": \"entityId\",\n                        \"in\": \"path\",\n                        \"description\": \"\"\n                    },\n                    {\n                        \"name\": \"_updateSequenceId\",\n                        \"in\": \"query\",\n                        \"description\": \"An optional property to use to control deletion. Only stored data with an updateSequenceId less than or equal to that provided will be deleted. This can be used to help ensure submit\\/delete requests are applied correctly if they are issued close together.\"\n                    }\n                ],\n                \"responses\": {\n                    \"202\": {\n                        \"description\": \"Submission accepted. Each submitted repository and entity that is of a valid format will be eventually available in Jira.\"\n                    }\n                }\n            }\n        },\n        \"\\/rest\\/featureflags\\/0.1\\/bulk\": {\n            \"post\": {\n                \"summary\": \"Submit Feature Flag data\",\n                \"description\": \"Update \\/ insert Feature Flag data. Feature Flags are identified by their ID, and existing Feature Flag data for the same ID will be replaced if it exists and the updateSequenceId of existing data is less than the incoming data. Submissions are performed asynchronously. Submitted data will eventually be available in Jira; most updates are available within a short period of time, but may take some time during peak load and\\/or maintenance times. The getFeatureFlagById operation can be used to confi\",\n                \"operationId\": \"SubmitFeatureFlags\",\n                \"deprecated\": 0,\n                \"parameters\": [],\n                \"responses\": {\n                    \"202\": {\n                        \"description\": \"Submission accepted. Each submitted repository and entity that is of a valid format will be eventually available in Jira.\"\n                    }\n                }\n            },\n            \"parameters\": {\n                \"summary\": \"\",\n                \"description\": \"\",\n                \"operationId\": \"\",\n                \"deprecated\": 0,\n                \"parameters\": []\n            }\n        },\n        \"\\/rest\\/featureflags\\/0.1\\/bulkByProperties\": {\n            \"delete\": {\n                \"summary\": \"Delete Feature Flags by Property\",\n                \"description\": \"Bulk delete all Feature Flags that match the given request. In addition to the optional `updateSequenceId`, one or more query params must be supplied to specify Properties to delete by. If more than one Property is provided, data will be deleted that matches ALL of the Properties (e.g. treated as an AND). See the documentation for the submitFeatureFlags operation for more details. e.g. DELETE \\/bulkByProperties?accountId=account-123\u0026createdBy=user-456 Deletion is performed asynchronously. The get\",\n                \"operationId\": \"DeleteFeatureFlagsByProperty\",\n                \"deprecated\": 0,\n                \"parameters\": [\n                    {\n                        \"name\": \"_updateSequenceId\",\n                        \"in\": \"query\",\n                        \"description\": \"An optional property to use to control deletion. Only stored data with an updateSequenceId less than or equal to that provided will be deleted. This can be used to help ensure submit\\/delete requests are applied correctly if they are issued close together.\"\n                    }\n                ],\n                \"responses\": {\n                    \"202\": {\n                        \"description\": \"Submission accepted. Each submitted repository and entity that is of a valid format will be eventually available in Jira.\"\n                    }\n                }\n            },\n            \"parameters\": {\n                \"summary\": \"\",\n                \"description\": \"\",\n                \"operationId\": \"\",\n                \"deprecated\": 0,\n                \"parameters\": []\n            }\n        },\n        \"\\/rest\\/featureflags\\/0.1\\/flag\\/{featureFlagId}\": {\n            \"get\": {\n                \"summary\": \"Get a Feature Flag by ID\",\n                \"description\": \"Retrieve the currently stored Feature Flag data for the given ID. The result will be what is currently stored, ignoring any pending updates or deletes. Only apps that define the Feature Flags module can access this resource. This resource requires the 'READ' scope.\",\n                \"operationId\": \"GetFeatureFlagById\",\n                \"deprecated\": 0,\n                \"parameters\": [\n                    {\n                        \"name\": \"featureFlagId\",\n                        \"in\": \"path\",\n                        \"description\": \"The ID of the Feature Flag to fetch.\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns the requested boards, at the specified page of the results.\"\n                    }\n                }\n            },\n            \"delete\": {\n                \"summary\": \"Delete a Feature Flag by ID\",\n                \"description\": \"Delete the Feature Flag data currently stored for the given ID. Deletion is performed asynchronously. The getFeatureFlagById operation can be used to confirm that data has been deleted successfully (if needed). Only apps that define the Feature Flags module can access this resource. This resource requires the 'DELETE' scope.\",\n                \"operationId\": \"DeleteFeatureFlagById\",\n                \"deprecated\": 0,\n                \"parameters\": [\n                    {\n                        \"name\": \"featureFlagId\",\n                        \"in\": \"path\",\n                        \"description\": \"The ID of the Feature Flag to fetch.\"\n                    },\n                    {\n                        \"name\": \"_updateSequenceId\",\n                        \"in\": \"query\",\n                        \"description\": \"An optional property to use to control deletion. Only stored data with an updateSequenceId less than or equal to that provided will be deleted. This can be used to help ensure submit\\/delete requests are applied correctly if they are issued close together.\"\n                    }\n                ],\n                \"responses\": {\n                    \"202\": {\n                        \"description\": \"Submission accepted. Each submitted repository and entity that is of a valid format will be eventually available in Jira.\"\n                    }\n                }\n            },\n            \"parameters\": {\n                \"summary\": \"\",\n                \"description\": \"\",\n                \"operationId\": \"\",\n                \"deprecated\": 0,\n                \"parameters\": []\n            }\n        },\n        \"\\/rest\\/deployments\\/0.1\\/bulk\": {\n            \"post\": {\n                \"summary\": \"Submit deployment data\",\n                \"description\": \"Update \\/ insert deployment data. Deployments are identified by the combination of `pipelineId`, `environmentId` and `deploymentSequenceNumber`, and existing deployment data for the same deployment will be replaced if it exists and the `updateSequenceNumber` of existing data is less than the incoming data. Submissions are processed asynchronously. Submitted data will eventually be available in Jira. Most updates are available within a short period of time, but may take some time during peak load \",\n                \"operationId\": \"SubmitDeployments\",\n                \"deprecated\": 0,\n                \"parameters\": [],\n                \"responses\": {\n                    \"202\": {\n                        \"description\": \"Submission accepted. Each submitted repository and entity that is of a valid format will be eventually available in Jira.\"\n                    }\n                }\n            },\n            \"parameters\": {\n                \"summary\": \"\",\n                \"description\": \"\",\n                \"operationId\": \"\",\n                \"deprecated\": 0,\n                \"parameters\": []\n            }\n        },\n        \"\\/rest\\/deployments\\/0.1\\/bulkByProperties\": {\n            \"delete\": {\n                \"summary\": \"Delete deployments by Property\",\n                \"description\": \"Bulk delete all deployments that match the given request. In addition to the optional `_updateSequenceNumber`, one or more query params must be supplied to specify the Properties to delete by. If more than one Property is provided, data will be deleted that matches ALL of the Properties (i.e. treated as AND). See the documentation for the `submitDeployments` operation for more details. Example operation: DELETE \\/bulkByProperties?accountId=account-123\u0026createdBy=user-456 Deletion is performed asyn\",\n                \"operationId\": \"DeleteDeploymentsByProperty\",\n                \"deprecated\": 0,\n                \"parameters\": [\n                    {\n                        \"name\": \"_updateSequenceNumber\",\n                        \"in\": \"query\",\n                        \"description\": \"An optional `updateSequenceNumber` to use to control deletion. Only stored data with an `updateSequenceNumber` less than or equal to that provided will be deleted. This can be used help ensure submit\\/delete requests are applied correctly if issued close together. If not provided, all stored data that matches the request will be deleted.\"\n                    }\n                ],\n                \"responses\": {\n                    \"202\": {\n                        \"description\": \"Submission accepted. Each submitted repository and entity that is of a valid format will be eventually available in Jira.\"\n                    }\n                }\n            },\n            \"parameters\": {\n                \"summary\": \"\",\n                \"description\": \"\",\n                \"operationId\": \"\",\n                \"deprecated\": 0,\n                \"parameters\": []\n            }\n        },\n        \"\\/rest\\/deployments\\/0.1\\/pipelines\\/{pipelineId}\\/environments\\/{environmentId}\\/deployments\\/{deploymentSequenceNumber}\": {\n            \"get\": {\n                \"summary\": \"Get a deployment by key\",\n                \"description\": \"Retrieve the currently stored deployment data for the given `pipelineId`, `environmentId` and `deploymentSequenceNumber` combination. The result will be what is currently stored, ignoring any pending updates or deletes. Only Connect apps that define the `jiraDeploymentInfoProvider` module, and on-premise integrations, can access this resource. This resource requires the 'READ' scope for Connect apps.\",\n                \"operationId\": \"GetDeploymentByKey\",\n                \"deprecated\": 0,\n                \"parameters\": [\n                    {\n                        \"name\": \"pipelineId\",\n                        \"in\": \"path\",\n                        \"description\": \"The ID of the deployment's pipeline.\"\n                    },\n                    {\n                        \"name\": \"environmentId\",\n                        \"in\": \"path\",\n                        \"description\": \"The ID of the deployment's environment.\"\n                    },\n                    {\n                        \"name\": \"deploymentSequenceNumber\",\n                        \"in\": \"path\",\n                        \"description\": \"The deployment's deploymentSequenceNumber.\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns the requested boards, at the specified page of the results.\"\n                    }\n                }\n            },\n            \"delete\": {\n                \"summary\": \"Delete a deployment by key\",\n                \"description\": \"Delete the currently stored deployment data for the given `pipelineId`, `environmentId` and `deploymentSequenceNumber` combination. Deletion is performed asynchronously. The `getDeploymentByKey` operation can be used to confirm that data has been deleted successfully (if needed). Only Connect apps that define the `jiraDeploymentInfoProvider` module, and on-premise integrations, can access this resource. This resource requires the 'DELETE' scope for Connect apps.\",\n                \"operationId\": \"DeleteDeploymentByKey\",\n                \"deprecated\": 0,\n                \"parameters\": [\n                    {\n                        \"name\": \"pipelineId\",\n                        \"in\": \"path\",\n                        \"description\": \"The ID of the deployment's pipeline.\"\n                    },\n                    {\n                        \"name\": \"environmentId\",\n                        \"in\": \"path\",\n                        \"description\": \"The ID of the deployment's environment.\"\n                    },\n                    {\n                        \"name\": \"deploymentSequenceNumber\",\n                        \"in\": \"path\",\n                        \"description\": \"The deployment's deploymentSequenceNumber.\"\n                    },\n                    {\n                        \"name\": \"_updateSequenceNumber\",\n                        \"in\": \"query\",\n                        \"description\": \"An optional `updateSequenceNumber` to use to control deletion. Only stored data with an `updateSequenceNumber` less than or equal to that provided will be deleted. This can be used help ensure submit\\/delete requests are applied correctly if issued close together. If not provided, all stored data that matches the request will be deleted.\"\n                    }\n                ],\n                \"responses\": {\n                    \"202\": {\n                        \"description\": \"Submission accepted. Each submitted repository and entity that is of a valid format will be eventually available in Jira.\"\n                    }\n                }\n            },\n            \"parameters\": {\n                \"summary\": \"\",\n                \"description\": \"\",\n                \"operationId\": \"\",\n                \"deprecated\": 0,\n                \"parameters\": []\n            }\n        },\n        \"\\/rest\\/builds\\/0.1\\/bulk\": {\n            \"post\": {\n                \"summary\": \"Submit build data\",\n                \"description\": \"Update \\/ insert builds data. Builds are identified by the combination of `pipelineId` and `buildNumber`, and existing build data for the same build will be replaced if it exists and the `updateSequenceNumber` of the existing data is less than the incoming data. Submissions are performed asynchronously. Submitted data will eventually be available in Jira; most updates are available within a short period of time, but may take some time during peak load and\\/or maintenance times. The `getBuildByKey`\",\n                \"operationId\": \"SubmitBuilds\",\n                \"deprecated\": 0,\n                \"parameters\": [],\n                \"responses\": {\n                    \"202\": {\n                        \"description\": \"Submission accepted. Each submitted repository and entity that is of a valid format will be eventually available in Jira.\"\n                    }\n                }\n            },\n            \"parameters\": {\n                \"summary\": \"\",\n                \"description\": \"\",\n                \"operationId\": \"\",\n                \"deprecated\": 0,\n                \"parameters\": []\n            }\n        },\n        \"\\/rest\\/builds\\/0.1\\/bulkByProperties\": {\n            \"delete\": {\n                \"summary\": \"Delete builds by Property\",\n                \"description\": \"Bulk delete all builds data that match the given request. In addition to the optional `_updateSequenceNumber`, one or more query params must be supplied to specify Properties to delete by. If more than one Property is provided, data will be deleted that matches ALL of the Properties (e.g. treated as an AND). See the documentation for the `submitBuilds` operation for more details. e.g. DELETE \\/bulkByProperties?accountId=account-123\u0026repoId=repo-345 Deletion is performed asynchronously. The `getBui\",\n                \"operationId\": \"DeleteBuildsByProperty\",\n                \"deprecated\": 0,\n                \"parameters\": [\n                    {\n                        \"name\": \"_updateSequenceNumber\",\n                        \"in\": \"query\",\n                        \"description\": \"An optional `updateSequenceNumber` to use to control deletion. Only stored data with an `updateSequenceNumber` less than or equal to that provided will be deleted. This can be used help ensure submit\\/delete requests are applied correctly if issued close together. If not provided, all stored data that matches the request will be deleted.\"\n                    }\n                ],\n                \"responses\": {\n                    \"202\": {\n                        \"description\": \"Submission accepted. Each submitted repository and entity that is of a valid format will be eventually available in Jira.\"\n                    }\n                }\n            },\n            \"parameters\": {\n                \"summary\": \"\",\n                \"description\": \"\",\n                \"operationId\": \"\",\n                \"deprecated\": 0,\n                \"parameters\": []\n            }\n        },\n        \"\\/rest\\/builds\\/0.1\\/pipelines\\/{pipelineId}\\/builds\\/{buildNumber}\": {\n            \"get\": {\n                \"summary\": \"Get a build by key\",\n                \"description\": \"Retrieve the currently stored build data for the given `pipelineId` and `buildNumber` combination. The result will be what is currently stored, ignoring any pending updates or deletes. Only Connect apps that define the `jiraBuildInfoProvider` module, and on-premise integrations, can access this resource. This resource requires the 'WRITE' scope for Connect apps.\",\n                \"operationId\": \"GetBuildByKey\",\n                \"deprecated\": 0,\n                \"parameters\": [\n                    {\n                        \"name\": \"pipelineId\",\n                        \"in\": \"path\",\n                        \"description\": \"The ID of the deployment's pipeline.\"\n                    },\n                    {\n                        \"name\": \"buildNumber\",\n                        \"in\": \"path\",\n                        \"description\": \"The `buildNumber` of the build.\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns the requested boards, at the specified page of the results.\"\n                    }\n                }\n            },\n            \"delete\": {\n                \"summary\": \"Delete a build by key\",\n                \"description\": \"Delete the build data currently stored for the given `pipelineId` and `buildNumber` combination. Deletion is performed asynchronously. The `getBuildByKey` operation can be used to confirm that data has been deleted successfully (if needed). Only Connect apps that define the `jiraBuildInfoProvider` module, and on-premise integrations, can access this resource. This resource requires the 'WRITE' scope for Connect apps.\",\n                \"operationId\": \"DeleteBuildByKey\",\n                \"deprecated\": 0,\n                \"parameters\": [\n                    {\n                        \"name\": \"pipelineId\",\n                        \"in\": \"path\",\n                        \"description\": \"The ID of the deployment's pipeline.\"\n                    },\n                    {\n                        \"name\": \"buildNumber\",\n                        \"in\": \"path\",\n                        \"description\": \"The `buildNumber` of the build.\"\n                    },\n                    {\n                        \"name\": \"_updateSequenceNumber\",\n                        \"in\": \"query\",\n                        \"description\": \"An optional `updateSequenceNumber` to use to control deletion. Only stored data with an `updateSequenceNumber` less than or equal to that provided will be deleted. This can be used help ensure submit\\/delete requests are applied correctly if issued close together. If not provided, all stored data that matches the request will be deleted.\"\n                    }\n                ],\n                \"responses\": {\n                    \"202\": {\n                        \"description\": \"Submission accepted. Each submitted repository and entity that is of a valid format will be eventually available in Jira.\"\n                    }\n                }\n            },\n            \"parameters\": {\n                \"summary\": \"\",\n                \"description\": \"\",\n                \"operationId\": \"\",\n                \"deprecated\": 0,\n                \"parameters\": []\n            }\n        }\n    },\n    \"components\": {\n        \"schemas\": {\n            \"com.atlassian.greenhopper.api.rest.BacklogResource.moveIssuesToBacklogForBoard_postIssuerankrequestbean\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"issues\": {\n                        \"description\": \"\",\n                        \"type\": \"array\"\n                    },\n                    \"rankBeforeIssue\": {\n                        \"description\": \"\",\n                        \"type\": \"string\"\n                    },\n                    \"rankAfterIssue\": {\n                        \"description\": \"\",\n                        \"type\": \"string\"\n                    },\n                    \"rankCustomFieldId\": {\n                        \"description\": \"\",\n                        \"type\": \"integer\"\n                    }\n                }\n            },\n            \"issues\": {\n                \"type\": \"array\"\n            },\n            \"com.atlassian.greenhopper.api.rest.BacklogResource.moveIssuesToBacklog_postIssueassignrequestbean\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"issues\": {\n                        \"description\": \"\",\n                        \"type\": \"array\"\n                    }\n                }\n            },\n            \"com.atlassian.greenhopper.api.rest.SprintResource.partiallyUpdateSprint_postSprintbean\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"id\": {\n                        \"description\": \"\",\n                        \"type\": \"integer\"\n                    },\n                    \"self\": {\n                        \"description\": \"\",\n                        \"type\": \"string\"\n                    },\n                    \"state\": {\n                        \"description\": \"\",\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"description\": \"\",\n                        \"type\": \"string\"\n                    },\n                    \"startDate\": {\n                        \"description\": \"\",\n                        \"type\": \"string\"\n                    },\n                    \"endDate\": {\n                        \"description\": \"\",\n                        \"type\": \"string\"\n                    },\n                    \"completeDate\": {\n                        \"description\": \"\",\n                        \"type\": \"string\"\n                    },\n                    \"originBoardId\": {\n                        \"description\": \"\",\n                        \"type\": \"integer\"\n                    },\n                    \"goal\": {\n                        \"description\": \"\",\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    }\n}",
			"canonicalURL": "/github.com/api-evangelist/atlassian@68b3341ddc1a072c255124b8a9097145d1f8bb45/-/blob/jira-software-cloud-api-openapi.json",
			"externalURLs": [
				{
					"url": "https://github.com/api-evangelist/atlassian/blob/68b3341ddc1a072c255124b8a9097145d1f8bb45/jira-software-cloud-api-openapi.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 10: cannot unmarshal !!str `//atlas...` into ogen.Server; yaml: line 18: cannot unmarshal !!int `0` into bool; yaml: line 32: cannot unmarshal !!int `0` into bool; yaml: line 52: cannot unmarshal !!int `0` into bool; yaml: line 135: cannot unmarshal !!int `0` into bool; yaml: line 149: cannot unmarshal !!int `0` into bool; yaml: line 179: cannot unmarshal !!int `0` into bool; yaml: line 197: cannot unmarshal !!int `0` into bool; yaml: line 217: cannot unmarshal !!int `0` into bool; yaml: line 267: cannot unmarshal !!int `0` into bool; yaml: line 287: cannot unmarshal !!int `0` into bool; yaml: line 322: cannot unmarshal !!int `0` into bool; yaml: line 372: cannot unmarshal !!int `0` into bool; yaml: line 427: cannot unmarshal !!int `0` into bool; yaml: line 445: cannot unmarshal !!int `0` into bool; yaml: line 465: cannot unmarshal !!int `0` into bool; yaml: line 513: cannot unmarshal !!int `0` into bool; yaml: line 533: cannot unmarshal !!int `0` into bool; yaml: line 563: cannot unmarshal !!int `0` into bool; yaml: line 583: cannot unmarshal !!int `0` into bool; yaml: line 603: cannot unmarshal !!int `0` into bool; yaml: line 626: cannot unmarshal !!int `0` into bool; yaml: line 649: cannot unmarshal !!int `0` into bool; yaml: line 674: cannot unmarshal !!int `0` into bool; yaml: line 704: cannot unmarshal !!int `0` into bool; yaml: line 729: cannot unmarshal !!int `0` into bool; yaml: line 749: cannot unmarshal !!int `0` into bool; yaml: line 784: cannot unmarshal !!int `0` into bool; yaml: line 839: cannot unmarshal !!int `0` into bool; yaml: line 874: cannot unmarshal !!int `0` into bool; yaml: line 917: cannot unmarshal !!int `0` into bool; yaml: line 931: cannot unmarshal !!int `0` into bool; yaml: line 949: cannot unmarshal !!int `0` into bool; yaml: line 969: cannot unmarshal !!int `0` into bool; yaml: line 1017: cannot unmarshal !!int `0` into bool; yaml: line 1037: cannot unmarshal !!int `0` into bool; yaml: line 1057: cannot unmarshal !!int `0` into bool; yaml: line 1071: cannot unmarshal !!int `0` into bool; yaml: line 1106: cannot unmarshal !!int `0` into bool; yaml: line 1129: cannot unmarshal !!int `0` into bool; yaml: line 1154: cannot unmarshal !!int `0` into bool; yaml: line 1168: cannot unmarshal !!int `0` into bool; yaml: line 1186: cannot unmarshal !!int `0` into bool; yaml: line 1204: cannot unmarshal !!int `0` into bool; yaml: line 1222: cannot unmarshal !!int `0` into bool; yaml: line 1242: cannot unmarshal !!int `0` into bool; yaml: line 1290: cannot unmarshal !!int `0` into bool; yaml: line 1310: cannot unmarshal !!int `0` into bool; yaml: line 1330: cannot unmarshal !!int `0` into bool; yaml: line 1353: cannot unmarshal !!int `0` into bool; yaml: line 1376: cannot unmarshal !!int `0` into bool; yaml: line 1401: cannot unmarshal !!int `0` into bool; yaml: line 1421: cannot unmarshal !!int `0` into bool; yaml: line 1435: cannot unmarshal !!int `0` into bool; yaml: line 1453: cannot unmarshal !!int `0` into bool; yaml: line 1478: cannot unmarshal !!int `0` into bool; yaml: line 1498: cannot unmarshal !!int `0` into bool; yaml: line 1518: cannot unmarshal !!int `0` into bool; yaml: line 1553: cannot unmarshal !!int `0` into bool; yaml: line 1561: cannot unmarshal !!map into []*ogen.Parameter; yaml: line 1574: cannot unmarshal !!int `0` into bool; yaml: line 1588: cannot unmarshal !!map into []*ogen.Parameter; yaml: line 1601: cannot unmarshal !!int `0` into bool; yaml: line 1619: cannot unmarshal !!int `0` into bool; yaml: line 1638: cannot unmarshal !!map into []*ogen.Parameter; yaml: line 1651: cannot unmarshal !!int `0` into bool; yaml: line 1659: cannot unmarshal !!map into []*ogen.Parameter; yaml: line 1672: cannot unmarshal !!int `0` into bool; yaml: line 1686: cannot unmarshal !!map into []*ogen.Parameter; yaml: line 1699: cannot unmarshal !!int `0` into bool; yaml: line 1727: cannot unmarshal !!int `0` into bool; yaml: line 1756: cannot unmarshal !!map into []*ogen.Parameter; yaml: line 1769: cannot unmarshal !!int `0` into bool; yaml: line 1777: cannot unmarshal !!map into []*ogen.Parameter; yaml: line 1790: cannot unmarshal !!int `0` into bool; yaml: line 1804: cannot unmarshal !!map into []*ogen.Parameter; yaml: line 1817: cannot unmarshal !!int `0` into bool; yaml: line 1840: cannot unmarshal !!int `0` into bool; yaml: line 1864: cannot unmarshal !!map into []*ogen.Parameter"
}