{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/StarSheriff2/expert-class"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "swagger/v1/swagger.yaml",
			"byteSize": 20605,
			"content": "---\nopenapi: 3.0.1\ninfo:\n  title: API V1\n  version: v1\npaths:\n  \"/api/v1/cities\":\n    get:\n      summary: returns a list of all cities\n      tags:\n      - Cities\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              example:\n              - id: 1\n                name: Windhoek\n                created_at: '2021-12-09T21:50:34.255Z'\n                updated_at: '2021-12-09T21:50:34.255Z'\n              - id: 2\n                name: Phnom Penh\n                created_at: '2021-12-09T21:50:34.256Z'\n                updated_at: '2021-12-09T21:50:34.256Z'\n              - id: 3\n                name: Pyongyang\n                created_at: '2021-12-09T21:50:34.256Z'\n                updated_at: '2021-12-09T21:50:34.256Z'\n              - id: 4\n                name: Berlin\n                created_at: '2021-12-09T21:50:34.257Z'\n                updated_at: '2021-12-09T21:50:34.257Z'\n              - id: 5\n                name: Vatican City\n                created_at: '2021-12-09T21:50:34.258Z'\n                updated_at: '2021-12-09T21:50:34.258Z'\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    id:\n                      type: integer\n                    name:\n                      type: string\n                    created_at:\n                      type: string\n                    updated_at:\n                      type: string\n                  required:\n                  - id\n                  - name\n                  - created_at\n                  - updated_at\n  \"/api/v1/courses\":\n    get:\n      summary: returns list with all courses\n      tags:\n      - Courses\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              example:\n              - id: 1\n                title: Sketching\n                description: Omnis voluptatum nesciunt. Perspiciatis quia soluta.\n                  Nam et consequuntur.\n                instructor: Louie Hermiston\n                duration: 5\n                created_at: '2021-12-09T21:50:34.312Z'\n                updated_at: '2021-12-09T21:50:34.319Z'\n                course_image_url: https://res.cloudinary.com/starsheriff/image/upload/p8z6deh4fo.jpeg\n              - id: 2\n                title: Gunsmithing\n                description: Quia modi error. Porro nostrum dignissimos. Voluptate\n                  numquam vero.\n                instructor: Francesco Ryan\n                duration: 8\n                created_at: '2021-12-09T21:50:34.325Z'\n                updated_at: '2021-12-09T21:50:34.327Z'\n                course_image_url: https://res.cloudinary.com/starsheriff/image/upload/l3ugzdzf7e.jpeg\n              - id: 3\n                title: Shopping\n                description: Quia deserunt non. Dolorem a architecto. Est vero nisi.\n                instructor: Darwin Willms\n                duration: 5\n                created_at: '2021-12-09T21:50:34.332Z'\n                updated_at: '2021-12-09T21:50:34.334Z'\n                course_image_url: https://res.cloudinary.com/starsheriff/image/upload/nsy6ripxij.jpeg\n              - id: 4\n                title: Flying\n                description: Ea velit rem. Assumenda aut qui. Deleniti libero eaque.\n                instructor: Stevie Stokes\n                duration: 9\n                created_at: '2021-12-09T21:50:34.338Z'\n                updated_at: '2021-12-09T21:50:34.341Z'\n                course_image_url: https://res.cloudinary.com/starsheriff/image/upload/5kdtpdj76q.jpeg\n              - id: 5\n                title: Skimboarding\n                description: Omnis officia molestiae. Ea tempora possimus. In esse\n                  tempore.\n                instructor: Rashad Rogahn\n                duration: 0\n                created_at: '2021-12-09T21:50:34.345Z'\n                updated_at: '2021-12-09T21:50:34.347Z'\n                course_image_url: https://res.cloudinary.com/starsheriff/image/upload/6psblidqop.jpeg\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    id:\n                      type: integer\n                    title:\n                      type: string\n                    description:\n                      type: string\n                    instructor:\n                      type: string\n                    duration:\n                      type: integer\n                    created_at:\n                      type: string\n                    updated_at:\n                      type: string\n                    course_image_url:\n                      type: string\n                  required:\n                  - id\n                  - title\n                  - description\n                  - instructor\n                  - duration\n                  - created_at\n                  - updated_at\n                  - course_image_url\n                required: true\n    post:\n      summary: creates a new course\n      tags:\n      - Courses\n      parameters: []\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              example:\n                message: Course successfully created\n                status: created\n                course:\n                  id: 16\n                  title: Web Development\n                  description: Learn to build websites.\n                  instructor: Mike Milano\n                  duration: 12\n                  created_at: '2021-12-09T21:50:34.519Z'\n                  updated_at: '2021-12-09T21:50:34.521Z'\n                  course_image_url: https://res.cloudinary.com/starsheriff/image/upload/lys82crxg0.jpeg\n              schema:\n                type: object\n                properties:\n                  course:\n                    type: object\n                  message:\n                    type: string\n                  status:\n                    type: string\n                required:\n                - course\n                - message\n                - status\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                title:\n                  type: string\n                description:\n                  type: string\n                instructor:\n                  type: string\n                duration:\n                  type: integer\n                image:\n                  type: binary\n              required:\n              - title\n              - description\n              - instructor\n              - duration\n              - image\n        required: true\n  \"/api/v1/courses/{id}\":\n    get:\n      summary: returns details for one course\n      tags:\n      - Courses\n      parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              example:\n                id: 6\n                title: Woodworking\n                description: Quia enim quo. Odit ut et. Explicabo beatae libero.\n                instructor: Blake Satterfield\n                duration: 11\n                created_at: '2021-12-09T21:50:34.418Z'\n                updated_at: '2021-12-09T21:50:34.420Z'\n                course_image_url: https://res.cloudinary.com/starsheriff/image/upload/tw1n3cxkxn.jpeg\n              schema:\n                type: object\n                properties:\n                  id:\n                    type: integer\n                  title:\n                    type: string\n                  description:\n                    type: string\n                  instructor:\n                    type: string\n                  duration:\n                    type: integer\n                  created_at:\n                    type: string\n                  updated_at:\n                    type: string\n                  course_image_url:\n                    type: string\n                required:\n                - id\n                - title\n                - description\n                - instructor\n                - duration\n                - created_at\n                - updated_at\n                - course_image_url\n    delete:\n      summary: deletes a course\n      tags:\n      - Courses\n      parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              example:\n                course:\n                  id: 21\n                  title: Skydiving\n                  description: Autem rem laboriosam. Dolorum dolor architecto. Aut\n                    similique dolore.\n                  instructor: Fr. Heriberto Graham\n                  duration: 8\n                  created_at: '2021-12-09T21:50:34.556Z'\n                  updated_at: '2021-12-09T21:50:34.558Z'\n                  course_image_url: https://res.cloudinary.com/starsheriff/image/upload/zuha4ry2b0.jpeg\n                message: Course successfully deleted\n                status: 200\n              schema:\n                type: object\n                properties:\n                  course:\n                    type: object\n                  message:\n                    type: string\n                  status:\n                    type: integer\n                required:\n                - course\n                - message\n                - status\n        '404':\n          description: success\n          content:\n            application/json:\n              example:\n                message: Couldn't find Course with 'id'=1022\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n                required:\n                - message\n  \"/api/v1/reservations\":\n    get:\n      summary: returns list with all reservations\n      tags:\n      - Reservations\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              example:\n              - user: Jacinto\n                course: Couponing\n                city: Moroni\n                date: '2022-02-10'\n                id: 1\n                created_at: '2021-12-09T21:50:34.650Z'\n                updated_at: '2021-12-09T21:50:34.650Z'\n              - user: Jacinto\n                course: Candle making\n                city: Tegucigalpa\n                date: '2022-04-16'\n                id: 2\n                created_at: '2021-12-09T21:50:34.661Z'\n                updated_at: '2021-12-09T21:50:34.661Z'\n              - user: Jacinto\n                course: Amateur radio\n                city: Addis Ababa\n                date: '2022-11-12'\n                id: 3\n                created_at: '2021-12-09T21:50:34.670Z'\n                updated_at: '2021-12-09T21:50:34.670Z'\n              - user: Jacinto\n                course: Graffiti\n                city: Ottawa\n                date: '2022-10-17'\n                id: 4\n                created_at: '2021-12-09T21:50:34.678Z'\n                updated_at: '2021-12-09T21:50:34.678Z'\n              - user: Jacinto\n                course: Shopping\n                city: Lima\n                date: '2022-06-22'\n                id: 5\n                created_at: '2021-12-09T21:50:34.692Z'\n                updated_at: '2021-12-09T21:50:34.692Z'\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    user:\n                      type: string\n                    course:\n                      type: string\n                    city:\n                      type: string\n                    date:\n                      type: string\n                    id:\n                      type: integer\n                    created_at:\n                      type: string\n                    updated_at:\n                      type: string\n                  required:\n                  - user\n                  - course\n                  - city\n                  - date\n                  - id\n                  - created_at\n                  - updated_at\n                required: true\n    post:\n      summary: creates a new course\n      tags:\n      - Reservations\n      parameters: []\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              example:\n                reservation:\n                  user: Hugh\n                  course: Taxidermy\n                  city: New Delhi\n                  date: '2021-12-10'\n                  id: 11\n                  created_at: '2021-12-09T21:50:34.922Z'\n                  updated_at: '2021-12-09T21:50:34.922Z'\n                message: Reservation created successfully\n                status: 200\n              schema:\n                type: object\n                properties:\n                  reservation:\n                    type: object\n                    properties:\n                      user:\n                        type: string\n                      course:\n                        type: string\n                      city:\n                        type: string\n                      date:\n                        type: string\n                      id:\n                        type: integer\n                      created_at:\n                        type: string\n                      updated_at:\n                        type: string\n                    required:\n                    - user\n                    - course\n                    - city\n                    - date\n                    - id\n                    - created_at\n                    - updated_at\n                  message:\n                    type: string\n                  status:\n                    type: integer\n                required:\n                - reservation\n                - message\n                - status\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                date:\n                  type: string\n                user_id:\n                  type: integer\n                course_id:\n                  type: integer\n                city_id:\n                  type: integer\n              required:\n              - date\n              - user_id\n              - course_id\n              - city_id\n        required: true\n  \"/api/v1/reservations/{id}\":\n    delete:\n      summary: deletes a reservation\n      tags:\n      - Reservations\n      parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              example:\n                reservation:\n                  id: 16\n                  date: '2022-03-29'\n                  user_id: 17\n                  course_id: 61\n                  created_at: '2021-12-09T21:50:34.980Z'\n                  updated_at: '2021-12-09T21:50:34.980Z'\n                  city_id: 30\n                message: Reservation deleted successfully\n              schema:\n                type: object\n                properties:\n                  reservation:\n                    type: object\n                    properties:\n                      user_id:\n                        type: integer\n                      course_id:\n                        type: integer\n                      city_id:\n                        type: integer\n                      date:\n                        type: string\n                      id:\n                        type: integer\n                      created_at:\n                        type: string\n                      updated_at:\n                        type: string\n                    required:\n                    - user_id\n                    - course_id\n                    - city_id\n                    - date\n                    - id\n                    - created_at\n                    - updated_at\n                  message:\n                    type: string\n                required:\n                - reservation\n                - message\n        '404':\n          description: success\n          content:\n            application/json:\n              example:\n                message: Couldn't find Reservation with 'id'=1021\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n                required:\n                - message\n  \"/api/v1/sign_in\":\n    post:\n      summary: creates a new session\n      tags:\n      - Sessions\n      parameters: []\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              examples:\n                when user exists:\n                  value:\n                    status: created\n                    logged_in: true\n                    user:\n                      id: 27\n                      username: kii7yi2iwv\n                      name: Shelia\n                      created_at: '2021-12-09T21:50:35.209Z'\n                      updated_at: '2021-12-09T21:50:35.209Z'\n                when user does not exist:\n                  value:\n                    status: 401\n              schema:\n                type: object\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                username:\n                  type: string\n              required:\n              - username\n        required: true\n  \"/api/v1/signed_in\":\n    get:\n      summary: return login status of user\n      tags:\n      - Sessions\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              examples:\n                when user is logged in:\n                  value:\n                    logged_in: true\n                    user:\n                      id: 37\n                      username: jo42v7bfkq\n                      name: Ute\n                      created_at: '2021-12-09T21:50:35.236Z'\n                      updated_at: '2021-12-09T21:50:35.236Z'\n                when user is not logged in:\n                  value:\n                    logged_in: false\n              schema:\n                type: object\n                properties:\n                  logged_in:\n                    type: boolean\n                required:\n                - logged_in\n  \"/api/v1/sign_out\":\n    delete:\n      summary: return logged-out status of user as true\n      tags:\n      - Sessions\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              example:\n                status: 200\n                logged_out: true\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: integer\n                  logged_out:\n                    type: boolean\n                required:\n                - status\n                - logged_out\n  \"/api/v1/users\":\n    post:\n      summary: creates a new user\n      tags:\n      - Users\n      parameters: []\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              examples:\n                when user exists:\n                  value:\n                    status: created\n                    logged_in: true\n                    user:\n                      id: 55\n                      username: 1ztx7hbxrk\n                      name: Jasmine\n                      created_at: '2021-12-09T21:50:35.300Z'\n                      updated_at: '2021-12-09T21:50:35.300Z'\n                when user does not exist:\n                  value:\n                    status: 401\n                    error: This username already exists. Please Choose another one.\n              schema:\n                type: object\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                username:\n                  type: string\n              required:\n              - name\n              - username\n        required: true\nservers:\n- url: https://{defaultHost}\n  variables:\n    defaultHost:\n      default: www.example.com\n"
		}
	},
	"Error": "unmarshal: json: line 1:3123: json: cannot unmarshal bool into Go struct field Schema.paths.get.responses.content.schema.required of type []string"
}