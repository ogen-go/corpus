{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/sngular/scs-multiapi-plugin"
		},
		"file": {
			"name": "api-test.yml",
			"size": 0,
			"path": "multiapi-engine/src/test/resources/openapigenerator/testComplexAnyOf/api-test.yml",
			"byteSize": 10736,
			"content": "openapi: 3.0.2\ninfo:\n  title: Schema Management\n  version: \"1.0\"\nservers:\n- url: https://localhost/v1\npaths:\n  /schema:\n    post:\n      tags:\n      - schemas\n      operationId: createSchema\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/schema\"\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/schema\"\n        '400':\n          description: Bad Request\n        '500':\n          description: Server Error\n  /schema/{name}:\n    get:\n      tags:\n      - schemas\n      operationId: getSchema\n      parameters:\n      - name: name\n        in: path\n        description: Schema name to get\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/schema\"\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '500':\n          description: Server Error\n    put:\n      tags:\n      - schemas\n      operationId: updateSchema\n      parameters:\n      - name: name\n        in: path\n        description: Schema name to update\n        required: true\n        schema:\n          type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/schema\"\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/schema\"\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '500':\n          description: Server Error\n  /schema/{id}:\n    delete:\n      tags:\n      - schemas\n      operationId: deleteSchema\n      parameters:\n      - name: id\n        in: path\n        description: Subject name to delete\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: OK\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '500':\n          description: Server Error\n  /schemas:\n    get:\n      tags:\n      - schemas\n      operationId: getSchemas\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/schema\"\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '500':\n          description: Server Error\n    delete:\n      tags:\n      - schemas\n      operationId: deleteSchemas\n      responses:\n        '200':\n          description: OK\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '500':\n          description: Server Error\n  /schema_master/{subject}:\n    get:\n      tags:\n      - schemas\n      operationId: getSchemaMaster\n      parameters:\n      - name: subject\n        in: path\n        description: Schema Subject to retrieve\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/schema\"\n        '400':\n          description: Bad Request\n        '500':\n          description: Server Error\n\n  /schema_master/{schemaType}:\n    post:\n      tags:\n      - schemas\n      operationId: createSchemaMaster\n      parameters:\n      - name: schemaType\n        in: path\n        description: Schema Type to create\n        required: true\n        schema:\n          type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/schema\"\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/schema\"\n        '400':\n          description: Bad Request\n        '500':\n          description: Server Error\n  /schemas/names:\n    get:\n      tags:\n      - schemas\n      operationId: getAllSchemaNames\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/arrayNames'\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '500':\n          description: Server Error\ncomponents:\n  schemas:\n    arrayNames:\n      type: array\n      items:\n        type: string\n    schema:\n      type: object\n      required:\n      - id\n      - subjectName\n      - name\n      - type\n      - properties\n      properties:\n        id:\n          type: string\n        subjectName:\n          type: string\n        name:\n          type: string\n        requiredFields:\n          $ref: \"#/components/schemas/typeArray\"\n        type:\n          type: string\n        properties:\n          $ref: \"#/components/schemas/typeArray\"\n    stringField:\n      type: object\n      properties:\n        name:\n          type: string\n        type:\n          type: string\n        defaultValues:\n          type: array\n          items: string\n        regex:\n          type: string\n        minLength:\n          type: integer\n          format: int32\n        maxLength:\n          type: integer\n          format: int32\n        format:\n          type: integer\n          format: int32\n        valueLength:\n          type: integer\n          format: int32\n        properties:\n          type: array\n          items: string\n    arrayField:\n      type: object\n      properties:\n        name:\n          type: string\n        type:\n          type: string\n        defaultValues:\n          $ref: \"#/components/schemas/typeArray\"\n        values:\n          $ref: \"#/components/schemas/typeArray\"\n        regex:\n          type: string\n        minItems:\n          type: integer\n          format: int32\n        arraySize:\n          type: integer\n          format: int32\n        uniqueItems:\n          type: boolean\n    booleanField:\n      type: object\n      properties:\n        name:\n          type: string\n        type:\n          type: string\n        defaultValue:\n          type: boolean\n    dateField:\n      type: object\n      properties:\n        name:\n          type: string\n        type:\n          type: string\n        defaultValues:\n          type: object\n        format:\n          type: string\n    enumField:\n      type: object\n      properties:\n        name:\n          type: string\n        type:\n          type: string\n        defaultValues:\n          type: array\n          items: string\n        defaultValue:\n          type: string\n        enumValues:\n          type: array\n          items: string\n    mapField:\n      type: object\n      properties:\n        name:\n          type: string\n        type:\n          type: string\n        defaultValues:\n          type: array\n          items:\n            type: object\n        mapTypes:\n          $ref: \"#/components/schemas/typeArray\"\n        keyType:\n          type: string\n        mapSize:\n          type: integer\n          format: int32\n    numberField:\n      type: object\n      properties:\n        name:\n          type: string\n        type:\n          type: string\n        defaultValues:\n          type: array\n          items:\n            type: object\n        defaultValue:\n          type: integer\n          format: int64\n        minimum:\n          type: integer\n          format: int32\n        maximum:\n          type: integer\n          format: int32\n        flagExclusiveMinimum:\n          type: boolean\n        flagExclusiveMaximum:\n          type: boolean\n        multipleOf:\n          type: integer\n          format: int32\n        numberEnum:\n          type: string\n          enum:\n          - integer\n          - float\n        precision:\n          type: integer\n          format: int32\n        scale:\n          type: integer\n          format: int32\n    objectField:\n      type: object\n      properties:\n        name:\n          type: string\n        type:\n          type: string\n        defaultValues:\n          type: array\n          items: object\n        properties:\n          $ref: \"#/components/schemas/typeArray\"\n        requiredValues:\n          type: array\n          items: string\n    unionField:\n      type: object\n      properties:\n        name:\n          type: string\n        type:\n          type: string\n        values:\n          $ref: \"#/components/schemas/typeArray\"\n        defaultItem:\n          anyOf:\n          - $ref: \"#/components/schemas/stringField\"\n          - $ref: \"#/components/schemas/arrayField\"\n          - $ref: \"#/components/schemas/booleanField\"\n          - $ref: \"#/components/schemas/dateField\"\n          - $ref: \"#/components/schemas/enumField\"\n          - $ref: \"#/components/schemas/mapField\"\n          - $ref: \"#/components/schemas/numberField\"\n          - $ref: \"#/components/schemas/objectField\"\n          - $ref: \"#/components/schemas/unionField\"\n          - $ref: \"#/components/schemas/sequenceField\"\n        unionEnum:\n          type: string\n          enum:\n          - oneof\n          - anyof\n          - allof\n        generatedFlag:\n          type: boolean\n        optionalUnion:\n          type: boolean\n    typeArray:\n      type: array\n      items:\n        anyOf:\n        - $ref: \"#/components/schemas/stringField\"\n        - $ref: \"#/components/schemas/arrayField\"\n        - $ref: \"#/components/schemas/booleanField\"\n        - $ref: \"#/components/schemas/dateField\"\n        - $ref: \"#/components/schemas/enumField\"\n        - $ref: \"#/components/schemas/mapField\"\n        - $ref: \"#/components/schemas/numberField\"\n        - $ref: \"#/components/schemas/objectField\"\n        - $ref: \"#/components/schemas/unionField\"\n        - $ref: \"#/components/schemas/sequenceField\"\n    sequenceField:\n      type: object\n      properties:\n        name:\n          type: string\n        type:\n          type: string\n        initialValue:\n          type: string\n        defaultValues:\n          type: array\n          items: object\n        properties:\n          $ref: \"#/components/schemas/typeArray\"\n        elements:\n          type: integer\n          format: int32\n        increment:\n          type: integer\n          format: int32\n        seqEnum:\n          type: string\n          enum:\n          - YEAR\n          - MONTH\n          - DAY\n          - HOUR\n          - MINUTE\n          - SECOND\n\n\n",
			"canonicalURL": "/github.com/sngular/scs-multiapi-plugin@10c1ae7d3bcc1a5b71af6b70ce0530ff81663f52/-/blob/multiapi-engine/src/test/resources/openapigenerator/testComplexAnyOf/api-test.yml",
			"externalURLs": [
				{
					"url": "https://github.com/sngular/scs-multiapi-plugin/blob/10c1ae7d3bcc1a5b71af6b70ce0530ff81663f52/multiapi-engine/src/test/resources/openapigenerator/testComplexAnyOf/api-test.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 246: cannot unmarshal !!str `string` into ogen.Schema; yaml: line 314: cannot unmarshal !!str `string` into ogen.Schema; yaml: line 385: cannot unmarshal !!str `object` into ogen.Schema; yaml: line 447: cannot unmarshal !!str `object` into ogen.Schema"
}