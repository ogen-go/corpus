{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Kong/kong"
		},
		"file": {
			"name": "kong-admin-api.yml",
			"size": 0,
			"path": "kong-admin-api.yml",
			"byteSize": 14913,
			"content": "components:\n  schemas:\n    tags:\n      required:\n      - tag\n      - entity_name\n      - entity_id\n      type: object\n      properties:\n        entity_id:\n          type: string\n        tag:\n          type: string\n        entity_name:\n          type: string\n    consumers:\n      required: []\n      type: object\n      properties:\n        tags:\n          type: array\n        username:\n          type: string\n        id:\n          type: string\n          format: uuid\n        custom_id:\n          type: string\n        created_at:\n          type: integer\n          format: int32\n    plugins:\n      required:\n      - name\n      - protocols\n      - enabled\n      type: object\n      properties:\n        tags:\n          type: array\n        enabled:\n          type: boolean\n          default: true\n        service:\n          $ref: '#/components/schemas/services'\n          default: ~\n          nullable: true\n        route:\n          $ref: '#/components/schemas/routes'\n          default: ~\n          nullable: true\n        created_at:\n          type: integer\n          format: int32\n        consumer:\n          $ref: '#/components/schemas/consumers'\n          default: ~\n          nullable: true\n        name:\n          type: string\n        id:\n          type: string\n          format: uuid\n        protocols:\n          default:\n          - grpc\n          - grpcs\n          - http\n          - https\n          enum:\n          - http\n          - https\n          - tcp\n          - tls\n          - udp\n          - grpc\n          - grpcs\n          type: array\n        config:\n          type: array\n    certificates:\n      required:\n      - cert\n      - key\n      type: object\n      properties:\n        tags:\n          type: array\n        key:\n          type: string\n        cert_alt:\n          type: string\n        key_alt:\n          type: string\n        cert:\n          type: string\n        created_at:\n          type: integer\n          format: int32\n        id:\n          type: string\n          format: uuid\n    ca_certificates:\n      required:\n      - cert\n      type: object\n      properties:\n        tags:\n          type: array\n        id:\n          type: string\n          format: uuid\n        cert:\n          type: string\n        created_at:\n          type: integer\n          format: int32\n        cert_digest:\n          type: string\n    snis:\n      required:\n      - name\n      - certificate\n      type: object\n      properties:\n        tags:\n          type: array\n        name:\n          type: string\n        id:\n          type: string\n          format: uuid\n        created_at:\n          type: integer\n          format: int32\n        certificate:\n          $ref: '#/components/schemas/certificates'\n    upstreams:\n      required:\n      - name\n      type: object\n      properties:\n        tags:\n          type: array\n        created_at:\n          type: integer\n          format: int32\n        slots:\n          type: integer\n          default: 10000\n        host_header:\n          type: string\n        algorithm:\n          type: string\n          default: round-robin\n        hash_on_header:\n          type: string\n        hash_on:\n          type: string\n          default: none\n        hash_fallback_header:\n          type: string\n        name:\n          type: string\n        id:\n          type: string\n          format: uuid\n        client_certificate:\n          $ref: '#/components/schemas/certificates'\n        hash_on_cookie_path:\n          type: string\n          default: /\n        hash_on_cookie:\n          type: string\n        healthchecks:\n          type: array\n          default:\n            passive:\n              unhealthy:\n                http_failures: 0\n                tcp_failures: 0\n                http_statuses:\n                - 429\n                - 500\n                - 503\n                timeouts: 0\n              type: http\n              healthy:\n                http_statuses:\n                - 200\n                - 201\n                - 202\n                - 203\n                - 204\n                - 205\n                - 206\n                - 207\n                - 208\n                - 226\n                - 300\n                - 301\n                - 302\n                - 303\n                - 304\n                - 305\n                - 306\n                - 307\n                - 308\n                successes: 0\n            active:\n              http_path: /\n              unhealthy:\n                tcp_failures: 0\n                timeouts: 0\n                http_failures: 0\n                interval: 0\n                http_statuses:\n                - 429\n                - 404\n                - 500\n                - 501\n                - 502\n                - 503\n                - 504\n                - 505\n              https_verify_certificate: true\n              concurrency: 10\n              timeout: 1\n              type: http\n              healthy:\n                successes: 0\n                interval: 0\n                http_statuses:\n                - 200\n                - 302\n        hash_fallback:\n          type: string\n          default: none\n    targets:\n      required:\n      - upstream\n      - target\n      type: object\n      properties:\n        upstream:\n          $ref: '#/components/schemas/upstreams'\n        target:\n          type: string\n        id:\n          type: string\n          format: uuid\n        weight:\n          type: integer\n          default: 100\n        created_at:\n          type: number\n          format: float\n        tags:\n          type: array\n    vaults:\n      required:\n      - prefix\n      - name\n      type: object\n      properties:\n        tags:\n          type: array\n        name:\n          type: string\n        id:\n          type: string\n          format: uuid\n        config:\n          type: array\n        created_at:\n          type: integer\n          format: int32\n        prefix:\n          type: string\n        description:\n          type: string\n        updated_at:\n          type: integer\n          format: int32\n    clustering_data_planes:\n      required:\n      - id\n      - ip\n      - hostname\n      - sync_status\n      type: object\n      properties:\n        version:\n          type: string\n        id:\n          type: string\n        last_seen:\n          type: integer\n          format: int32\n        config_hash:\n          type: string\n        ip:\n          type: string\n        sync_status:\n          type: string\n          default: unknown\n        hostname:\n          type: string\n    workspaces:\n      required:\n      - name\n      type: object\n      properties:\n        name:\n          type: string\n        id:\n          type: string\n          format: uuid\n        config:\n          type: array\n        meta:\n          type: array\n        created_at:\n          type: integer\n          format: int32\n        comment:\n          type: string\n    parameters:\n      required:\n      - key\n      - value\n      type: object\n      properties:\n        value:\n          type: string\n        created_at:\n          type: integer\n          format: int32\n        key:\n          type: string\n    routes:\n      required:\n      - protocols\n      - https_redirect_status_code\n      - strip_path\n      - preserve_host\n      - request_buffering\n      - response_buffering\n      type: object\n      properties:\n        tags:\n          type: array\n        response_buffering:\n          type: boolean\n          default: true\n        regex_priority:\n          type: integer\n          default: 0\n        service:\n          $ref: '#/components/schemas/services'\n        https_redirect_status_code:\n          type: integer\n          default: 426\n        headers:\n          type: array\n        destinations:\n          type: array\n        hosts:\n          type: array\n        snis:\n          type: array\n        strip_path:\n          type: boolean\n          default: true\n        methods:\n          type: array\n        created_at:\n          type: integer\n          format: int32\n        updated_at:\n          type: integer\n          format: int32\n        paths:\n          type: array\n        name:\n          type: string\n        id:\n          type: string\n          format: uuid\n        path_handling:\n          type: string\n          default: v0\n        protocols:\n          type: array\n          default:\n          - http\n          - https\n        preserve_host:\n          type: boolean\n          default: false\n        sources:\n          type: array\n        request_buffering:\n          type: boolean\n          default: true\n    services:\n      required:\n      - protocol\n      - host\n      - port\n      - enabled\n      type: object\n      properties:\n        tags:\n          type: array\n        retries:\n          type: integer\n          default: 5\n        ca_certificates:\n          type: array\n        connect_timeout:\n          type: integer\n          default: 60000\n        write_timeout:\n          type: integer\n          default: 60000\n        read_timeout:\n          type: integer\n          default: 60000\n        client_certificate:\n          $ref: '#/components/schemas/certificates'\n        tls_verify:\n          type: boolean\n        port:\n          type: integer\n          default: 80\n        tls_verify_depth:\n          default: ~\n          type: integer\n          nullable: true\n        enabled:\n          type: boolean\n          default: true\n        path:\n          type: string\n        updated_at:\n          type: integer\n          format: int32\n        protocol:\n          type: string\n          default: http\n        id:\n          type: string\n          format: uuid\n        host:\n          type: string\n        name:\n          type: string\n        created_at:\n          type: integer\n          format: int32\ninfo:\n  contact:\n    url: https://github.com/Kong/kong\n    name: Kong\n  version: 2.7.0\n  title: Kong Admin API\n  summary: Kong RESTful Admin API for administration purposes.\n  description: \"       {{site.base_gateway}} comes with an **internal** RESTful Admin\n    API for administration purposes.\\n        Requests to the Admin API can be sent\n    to any node in the cluster, and Kong will\\n        keep the configuration consistent\n    across all nodes.\\n\\n        - `8001` is the default port on which the Admin API\n    listens.\\n        - `8444` is the default port for HTTPS traffic to the Admin\n    API.\\n\\n        This API is designed for internal use and provides full control\n    over Kong, so\\n        care should be taken when setting up Kong environments\n    to avoid undue public\\n        exposure of this API. See [this document][secure-admin-api]\n    for a discussion\\n        of methods to secure the Admin API.\\n      \"\n  license:\n    url: https://github.com/Kong/kong/blob/master/LICENSE\n    name: Apache 2.0\npaths:\n  /clustering/status: []\n  /upstreams/{upstreams}/targets/{targets}/{address}/unhealthy:\n    post:\n      description: This method is not available when using DB-less mode.\n      summary: Set target address as unhealthy\n  /:\n    get:\n      summary: Retrieve node information\n  /cache/{key}:\n    delete:\n      description: This method is not available when using DB-less mode.\n    get: []\n  /certificates/{certificates}/snis: []\n  /upstreams/{upstreams}/targets/{targets}/unhealthy:\n    post:\n      description: This method is not available when using DB-less mode.\n      summary: Set target as unhealthy\n  /certificates/{certificates}:\n    put:\n      description: This method is not available when using DB-less mode.\n    get: []\n    patch:\n      description: This method is not available when using DB-less mode.\n  /upstreams/{upstreams}/targets:\n    post:\n      description: This method is not available when using DB-less mode.\n    get: []\n  /targets/:targets: []\n  /upstreams/{upstreams}/targets/{targets}/healthy:\n    post:\n      description: This method is not available when using DB-less mode.\n      summary: Set target as healthy\n  /upstreams/{upstreams}/targets/{targets}:\n    put:\n      description: This method is not available when using DB-less mode.\n    get: []\n    delete:\n      description: This method is not available when using DB-less mode.\n      summary: Delete Target\n    patch:\n      description: This method is not available when using DB-less mode.\n      summary: Update Target\n  /tags/{tags}:\n    get:\n      summary: ' List entity IDs by tag '\n  /plugins/enabled:\n    get:\n      summary: Retrieve Enabled Plugins\n  /upstreams/{upstreams}/targets/all:\n    get:\n      summary: List all Targets\n  /targets/{targets}/upstream: []\n  /certificates/{certificates}/snis/{snis}: []\n  /routes/:routes/plugins:\n    post: []\n  /plugins:\n    post:\n      description: This method is not available when using DB-less mode.\n  /cache:\n    delete:\n      description: This method is not available when using DB-less mode.\n  /targets: []\n  /config:\n    post:\n      description: This method is only available when using DB-less mode.\n    get:\n      description: This method is only available when using DB-less mode.\n  /consumers/{consumers}/plugins/{plugins}:\n    patch:\n      description: This method is not available when using DB-less mode.\n  /schemas/{name}:\n    get:\n      summary: Retrieve Entity Schema\n  /status:\n    get:\n      summary: Retrieve node status\n  /plugins/schema/{name}:\n    get: []\n  /schemas/plugins/{name}:\n    get:\n      summary: Retrieve Plugin Schema\n  /upstreams/{upstreams}/health:\n    get:\n      summary: Show Upstream health for node\n  /schemas/{db_entity_name}/validate:\n    post:\n      description: This method is not available when using DB-less mode.\n      summary: Validate a configuration against a schema\n  /plugins/{plugins}:\n    patch:\n      description: This method is not available when using DB-less mode.\n  /snis/{snis}/certificate: []\n  /upstreams/{upstreams}/targets/{targets}/{address}/healthy:\n    post:\n      description: This method is not available when using DB-less mode.\n      summary: Set target address as healthy\n  /routes/{routes}/plugins/{plugins}:\n    patch:\n      description: This method is not available when using DB-less mode.\n  /clustering/data-planes: []\n  /schemas/plugins/validate:\n    post:\n      description: This method is not available when using DB-less mode.\n      summary: Validate a plugin configuration against the schema\n  /services/{services}/plugins:\n    post:\n      description: This method is not available when using DB-less mode.\n  /services/{services}/plugins/{plugins}:\n    patch:\n      description: This method is not available when using DB-less mode.\n  /consumers:\n    get: []\n  /consumers/{consumers}/plugins:\n    post:\n      description: This method is not available when using DB-less mode.\n  /endpoints:\n    get:\n      summary: List available endpoints\nservers:\n- description: 8001 is the default port on which the Admin API listens.\n  url: http://localhost:8001\n- description: 8444 is the default port for HTTPS traffic to the Admin API.\n  url: https://localhost:8444\nopenapi: 3.1.0\n",
			"canonicalURL": "/github.com/Kong/kong@ceae3f37ddd31f7626f102fd6682dfc9b611233a/-/blob/kong-admin-api.yml",
			"externalURLs": [
				{
					"url": "https://github.com/Kong/kong/blob/ceae3f37ddd31f7626f102fd6682dfc9b611233a/kong-admin-api.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 1: cannot unmarshal !!seq into ogen.Operation; yaml: line 1: cannot unmarshal !!seq into ogen.Operation; yaml: line 1: cannot unmarshal !!seq into ogen.PathItem; yaml: line 1: cannot unmarshal !!seq into ogen.PathItem; yaml: line 1: cannot unmarshal !!seq into ogen.PathItem; yaml: line 1: cannot unmarshal !!seq into ogen.PathItem; yaml: line 1: cannot unmarshal !!seq into ogen.Operation; yaml: line 1: cannot unmarshal !!seq into ogen.Operation; yaml: line 1: cannot unmarshal !!seq into ogen.Operation; yaml: line 1: cannot unmarshal !!seq into ogen.PathItem; yaml: line 1: cannot unmarshal !!seq into ogen.PathItem; yaml: line 1: cannot unmarshal !!seq into ogen.PathItem; yaml: line 1: cannot unmarshal !!seq into ogen.PathItem; yaml: line 1: cannot unmarshal !!seq into ogen.Operation; yaml: line 1: cannot unmarshal !!seq into ogen.Operation"
}