{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/menes-dotnet/Menes"
		},
		"file": {
			"name": "PetStore.yaml",
			"size": 0,
			"path": "Solutions/Menes.PetStore/Menes/PetStore/PetStore.yaml",
			"byteSize": 14152,
			"content": "ï»¿openapi: \"3.0.0\"\ninfo:\n  version: 1.0.0\n  title: Swagger Petstore\n  license:\n    name: MIT\nservers:\n  - url: http://localhost:7071\npaths:\n  /pets:\n    get:\n      summary: List all pets\n      operationId: listPets\n      tags:\n        - pets\n      parameters:\n        - name: limit\n          in: query\n          description: How many items to return at one time (max 100)\n          required: false\n          schema:\n            type: integer\n            format: int32\n            maximum: 100\n            minimum: 1\n        - name: continuationToken\n          in: query\n          description: The continuation token for a paged result\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: A paged array of pets\n          headers:\n            x-next:\n              description: A link to the next page of responses\n              schema:\n                type: string\n          content:\n            application/hal+json:    \n              schema:\n                $ref: \"#/components/schemas/PetList\"\n        default:\n          description: unexpected error\n          content:\n            application/problem+json:\n              schema:\n                $ref: \"#/components/schemas/ProblemDetails\"\n    post:\n      summary: Create a pet\n      operationId: createPets\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/NewPet\"\n      tags:\n        - pets\n      responses:\n        '201':\n          description: Null response\n          headers:\n            Location:\n              description: A link to the canoncial uri for this element\n              schema:\n                type: string\n          content:\n            application/hal+json:\n              schema:\n                $ref: \"#/components/schemas/Pet\"\n        default:\n          description: unexpected error\n          content:\n            application/problem+json:\n              schema:\n                $ref: \"#/components/schemas/ProblemDetails\"\n  /longpets/{petId}:\n    get:\n      summary: Info for a specific pet\n      operationId: showPetByLongId\n      tags:\n        - pets\n      parameters:\n        - name: petId\n          in: path\n          required: true\n          description: The id of the pet to retrieve\n          schema:\n            type: integer\n            format: int64\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/hal+json:\n              schema:\n                $ref: \"#/components/schemas/Pet\"\n        '404':\n          description: No pet with that ID\n        default:\n          description: unexpected error\n          content:\n            application/problem+json:\n              schema:\n                $ref: \"#/components/schemas/ProblemDetails\"\n  /petsWithIdInHeader:\n    get:\n      summary: Info for a specific pet\n      operationId: showPetByLongIdInHeader\n      tags:\n        - pets\n      parameters:\n        - name: X-PET-ID\n          in: header\n          required: true\n          description: The id of the pet to retrieve\n          schema:\n            type: integer\n            format: int64\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/hal+json:\n              schema:\n                $ref: \"#/components/schemas/Pet\"\n        '404':\n          description: No pet with that ID\n        '400':\n          description: Bad  request\n          content:\n            application/problem+json:\n              schema:\n                $ref: \"#/components/schemas/ProblemDetails\"\n        default:\n          description: unexpected error\n          content:\n            application/problem+json:\n              schema:\n                $ref: \"#/components/schemas/ProblemDetails\"\n  /globalpets/{petId}:\n    get:\n      summary: Info for a specific pet\n      operationId: showPetByGlobalId\n      tags:\n        - pets\n      parameters:\n        - name: petId\n          in: path\n          required: true\n          description: The id of the pet to retrieve\n          schema:\n            type: string\n            format: guid\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/hal+json:\n              schema:\n                $ref: \"#/components/schemas/Pet\"\n        '404':\n          description: No pet with that ID\n        default:\n          description: unexpected error\n          content:\n            application/problem+json:\n              schema:\n                $ref: \"#/components/schemas/ProblemDetails\"\n  /pets/{petId}:\n    parameters:\n      - name: petId\n        in: path\n        required: true\n        description: The id of the pet to retrieve\n        schema:\n          type: string\n    get:\n      summary: Info for a specific pet\n      operationId: showPetById\n      tags:\n        - pets\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/hal+json:\n              schema:\n                $ref: \"#/components/schemas/Pet\"\n        '404':\n          description: No pet with that ID\n        default:\n          description: unexpected error\n          content:\n            application/problem+json:\n              schema:\n                $ref: \"#/components/schemas/ProblemDetails\"\n  /pets/{petId}/image:\n    parameters:\n      - name: petId\n        in: path\n        required: true\n        description: The id of the pet to retrieve\n        schema:\n          type: string\n    get:\n      summary: Returns a picture for the pet\n      operationId: petImage\n      tags:\n        - pets\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            image/jpeg:\n              schema:\n                type: string\n                format: binary\n        '404':\n          description: No pet with that ID\n        default:\n          description: unexpected error\n          content:\n            application/problem+json:\n              schema:\n                $ref: \"#/components/schemas/ProblemDetails\"\n  /pets/{petId}/pocoimage:\n    parameters:\n      - name: petId\n        in: path\n        required: true\n        description: The id of the pet to retrieve\n        schema:\n          type: string\n    get:\n      summary: Returns a picture for the pet, with the handler returning a raw stream rather than an OpenAPI response\n      operationId: petImagePoco\n      tags:\n        - pets\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            image/jpeg:\n              schema:\n                type: string\n                format: binary\n        '404':\n          description: No pet with that ID\n        '500':\n          description: unexpected error\n          content:\n            application/problem+json:\n              schema:\n                $ref: \"#/components/schemas/ProblemDetails\"\n    delete:\n      summary: Deletes a pet\n      operationId: deletePetById\n      tags:\n        - pets\n      responses:\n        '204':\n          description: Expected response to a valid request\n        '404':\n          description: No pet with that ID\n        default:\n          description: unexpected error\n          content:\n            application/problem+json:\n              schema:\n                $ref: \"#/components/schemas/ProblemDetails\"\n  /secretPet:\n    get:\n      summary: Info for the secret pet\n      operationId: showSecretPet\n      tags:\n        - pets\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/hal+json:\n              schema:\n                $ref: \"#/components/schemas/Pet\"\n        '401':\n          description: Insufficient priveliges\n        default:\n          description: unexpected error\n          content:\n            application/problem+json:\n              schema:\n                $ref: \"#/components/schemas/ProblemDetails\"\ncomponents:\n  schemas:\n    NewPet:\n      required:\n        - id\n        - name\n        - size\n        - tag\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n        tag:\n          type: string\n        size:\n          type: string\n          enum: [\"small\", \"medium\", \"large\"]\n\n    Pet:\n      anyOf:\n      - $ref: '#/components/schemas/Resource'\n      - type: object\n        properties:\n          id:\n            type: integer\n            format: int64\n          globalIdentifier:\n            type: string\n            format: guid\n          name:\n            type: string\n          tag:\n            type: string\n            nullable: true\n          size:\n            type: string\n            enum: [\"small\", \"medium\", \"large\"]\n          _links:\n            type: object\n            properties:\n              self:\n                $ref: \"#/components/schemas/Link\"\n              image:\n                $ref: \"#/components/schemas/Link\"\n              pocoimage:\n                $ref: \"#/components/schemas/Link\"\n\n    PetList:\n      anyOf:\n      - $ref: '#/components/schemas/Resource'\n      - type: object\n        properties:\n          totalCount:\n            type: integer\n            format: int64\n          pageSize:\n            type: integer\n          _links:\n            type: object\n            properties:\n              self:\n                $ref: \"#/components/schemas/Link\"\n              pets:\n                $ref: \"#/components/schemas/LinkCollection\"\n              create:\n                $ref: \"#/components/schemas/Link\"\n              next:\n                $ref: \"#/components/schemas/Link\"\n          _embedded:\n            type: object\n            properties:\n              pets:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Pet\"\n\n    Link:\n      type: object\n      required:\n        - href\n      properties:\n        href:\n          type: string\n          title: URI of the target resource\n          description: Either a URI [RFC3986] or URI Template [RFC6570] of the target\n            resource.\n        templated:\n          type: boolean\n          default: false\n          title: URI Template\n          description: Is true when the link object's href property is a URI Template.\n            Defaults to false.\n        type:\n          type: string\n          pattern: \"^(application|audio|example|image|message|model|multipart|text|video)\\\\/[a-zA-Z0-9!#\\\\$\u0026\\\\.\\\\+-\\\\^_]{1,127}$\"\n          title: Media type indication of the target resource\n          description: When present, used as a hint to indicate the media type expected\n            when dereferencing the target resource.\n        name:\n          type: string\n          title: Secondary key\n          description: When present, may be used as a secondary key for selecting\n            link objects that contain the same relation type.\n        profile:\n          type: string\n          format: uri\n          title: Additional semantics of the target resource\n          description: A URI that, when dereferenced, results in a profile to allow\n            clients to learn about additional semantics (constraints, conventions,\n            extensions) that are associated with the target resource representation,\n            in addition to those defined by the HAL media type and relations.\n        title:\n          type: string\n          title: Human-readable identifier\n          description: When present, is used to label the destination of a link\n            such that it can be used as a human-readable identifier (e.g. a menu\n            entry) in the language indicated by the Content-Language header (if\n            present).\n        hreflang:\n          type: string\n          pattern: \"^([a-zA-Z]{2,3}(-[a-zA-Z]{3}(-[a-zA-Z]{3}){0,2})?(-[a-zA-Z]{4})?(-([a-zA-Z]{2}|[0-9]{3}))?(-([a-zA-Z0-9]{5,8}|[0-9][a-zA-Z0-9]{3}))*([0-9A-WY-Za-wy-z](-[a-zA-Z0-9]{2,8}){1,})*(x-[a-zA-Z0-9]{2,8})?)|(x-[a-zA-Z0-9]{2,8})|(en-GB-oed)|(i-ami)|(i-bnn)|(i-default)|(i-enochian)|(i-hak)|(i-klingon)|(i-lux)|(i-mingo)|(i-navajo)|(i-pwn)|(i-tao)|(i-tay)|(i-tsu)|(sgn-BE-FR)|(sgn-BE-NL)|(sgn-CH-DE)|(art-lojban)|(cel-gaulish)|(no-bok)|(no-nyn)|(zh-guoyu)|(zh-hakka)|(zh-min)|(zh-min-nan)|(zh-xiang)$\"\n          title: Language indication of the target resource [RFC5988]\n          description: When present, is a hint in RFC5646 format indicating what\n            the language of the result of dereferencing the link should be.  Note\n            that this is only a hint; for example, it does not override the Content-Language\n            header of a HTTP response obtained by actually following the link.\n\n    LinkCollection:\n      type: array\n      items:\n        $ref: '#/components/schemas/Link'\n      uniqueItems: true\n      additionalProperties: false\n\n    Resource:\n      type: object\n      properties:\n        _links:\n          type: object\n          title: Hyperlink\n          description: Represents a hyperlink from the cotntaining resource to a URI.\n          additionalProperties:\n            oneOf:\n            - $ref: '#/components/schemas/Link'\n            - $ref: '#/components/schemas/LinkCollection'\n        _embedded:\n          type: object\n          additionalProperties:\n            oneOf:\n            - $ref: '#/components/schemas/Resource'\n            - $ref: '#/components/schemas/ResourceCollection'\n      additionalProperties: true\n\n    ResourceCollection:\n      type: array\n      items:      \n        $ref: '#/components/schemas/Resource'\n      uniqueItems: true\n      additionalProperties: false\n\n    ProblemDetails:\n      required:\n        - status\n        - detail\n      properties:\n        status:\n          type: integer\n          format: int32\n        detail:\n          type: string\n        title:\n          type: string\n        instance:\n          type: string\n          format: url\n        type: \n          type: string\n          format: url\n        validationErrors: \n          type: array\n        additionalProperties: true",
			"canonicalURL": "/github.com/menes-dotnet/Menes@6b2b63db27ea8e85e2a1a6893e349cc93a538ea0/-/blob/Solutions/Menes.PetStore/Menes/PetStore/PetStore.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/menes-dotnet/Menes/blob/6b2b63db27ea8e85e2a1a6893e349cc93a538ea0/Solutions/Menes.PetStore/Menes/PetStore/PetStore.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 477: cannot unmarshal !!bool `true` into ogen.Schema"
}