{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/NeuraLegion/har-sdk"
		},
		"file": {
			"name": "multipart.oas.yaml",
			"size": 0,
			"path": "packages/oas/tests/fixtures/multipart.oas.yaml",
			"byteSize": 2808,
			"content": "openapi: 3.0.1\ninfo:\n  title: Swagger Petstore\n  description:\n    'This is a sample server Petstore server.  You can find out more about     Swagger\n    at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For\n    this sample, you can use the api key `special-key` to test the authorization     filters.'\n  version: 1.0.0\nservers:\n  - url: https://petstore.swagger.io/v2\npaths:\n  /pet:\n    put:\n      summary: Update an existing pet\n      operationId: updatePet\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                $ref: '#/components/schemas/Pet'\n      responses:\n        400:\n          description: Invalid ID supplied\n          content: {}\n        404:\n          description: Pet not found\n          content: {}\n        405:\n          description: Validation exception\n          content: {}\n      security:\n        - petstore_auth:\n            - write:pets\n            - read:pets\ncomponents:\n  schemas:\n    Category:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n      xml:\n        name: Category\n    Tag:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n      xml:\n        name: Tag\n    Pet:\n      required:\n        - name\n        - photoUrls\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        category:\n          $ref: '#/components/schemas/Category'\n        name:\n          type: string\n          example: doggie\n        photoUrls:\n          type: array\n          xml:\n            name: photoUrl\n            wrapped: true\n          items:\n            type: string\n        tags:\n          type: array\n          xml:\n            name: tag\n            wrapped: true\n          items:\n            $ref: '#/components/schemas/Tag'\n        status:\n          type: string\n          description: pet status in the store\n          enum:\n            - available\n            - pending\n            - sold\n        profileImage:\n          type: string\n          format: binary\n      xml:\n        name: Pet\n    ApiResponse:\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int32\n        type:\n          type: string\n        message:\n          type: string\n  securitySchemes:\n    petstore_auth:\n      type: oauth2\n      flows:\n        implicit:\n          authorizationUrl: http://petstore.swagger.io/oauth/dialog\n          scopes:\n            write:pets: modify pets in your account\n            read:pets: read your pets\n    api_key:\n      type: apiKey\n      name: api_key\n      in: header\n",
			"canonicalURL": "/github.com/NeuraLegion/har-sdk@6a423cdffe7e687727a5599c6bd98cdd7a36e0ec/-/blob/packages/oas/tests/fixtures/multipart.oas.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/NeuraLegion/har-sdk/blob/6a423cdffe7e687727a5599c6bd98cdd7a36e0ec/packages/oas/tests/fixtures/multipart.oas.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 1: cannot unmarshal !!str `#/compo...` into ogen.Schema"
}