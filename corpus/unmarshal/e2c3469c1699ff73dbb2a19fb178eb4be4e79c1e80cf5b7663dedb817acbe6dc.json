{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/code4moldova/voluntar-backend"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "backend/static/swagger.yaml",
			"byteSize": 30506,
			"content": "openapi: 3.0.0\ninfo:\n  title: voluntar.md API\n  description: Flask REST API\n  version: 1.0.0\n  license: MPL 2.0\nservers:\n  - url: http://185.181.229.182:5000/api\n    description: Dev server\n  - url: http://localhost:5000/api\n    description: Local server\nsecurity:\n  - basicAuth: []\npaths:\n  /operator:\n    description: Will be renamed to /user\n    get:\n      summary: Returns a list of users\n      parameters:\n        - in: query\n          name: first_name\n          type: string\n        - in: query\n          name: last_name\n          type: string\n        - in: query\n          name: email\n          type: string\n        - in: query\n          name: phone\n          type: string\n        - in: query\n          name: role\n          type: string\n      responses:\n        '200':\n          description: Users founded\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/UsersResponse'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/ServerError'\n\n  /operator/{user_id}:\n    get:\n      summary: Returns a user for given ID\n      parameters:\n        - in: path\n          name: user_id\n          schema:\n            type: string\n          description: The ID of user\n      responses:\n        '200':\n          description: User founded\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/ServerError'\n    post:\n      summary: Registers a new user\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n      responses:\n        '201':\n          description: A user created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/ServerError'\n    put:\n      summary: Updates a user\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n      responses:\n        '200':\n          description: A user updated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/ServerError'\n\n  /operator/filters:\n    get:\n      summary: Returns a list of users for given filter fields. Default size list is 15 pages with 10 items per page.\n      parameters:\n        - in: query\n          name: query\n          schema:\n            type: string\n          description: Search query by First Name/Last Name/Phone\n        - in: query\n          name: is_active\n          schema:\n            type: boolean\n          description: Search for active/inactive users\n        - in: query\n          name: roles\n          schema:\n            $ref: '#/components/schemas/Role'\n          description: Search users for roles\n      responses:\n        '200':\n          description: User founded\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/ServerError'\n\n  /operator/filters/{pages}/{per_pages}:\n    get:\n      summary: Returns a list of users for given filter fields, number of pages and number items per page.\n      parameters:\n        - in: path\n          description: Number of pages to return\n          name: pages\n          schema:\n            type: integer\n        - in: path\n          description: Number of items per page to return\n          name: per_page\n          schema:\n            type: integer\n        - in: query\n          name: query\n          schema:\n            type: string\n            description: Search query by First Name/Last Name/Phone\n        - in: query\n          name: is_active\n          schema:\n            type: boolean\n          description: Search for active/inactive users\n        - in: query\n          name: roles\n          schema:\n            $ref: '#/components/schemas/Role'\n          description: Search users for roles\n      responses:\n        '200':\n          description: User founded\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/ServerError'\n\n  /volunteers:\n    get:\n      summary: Returns a list of volunteer\n      parameters:\n        - in: query\n          name: id\n          schema:\n            type: string\n          description: The ID of volunteer\n      responses:\n        '200':\n          description: Volunteers founded\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/ServerError'\n\n  /volunteer/filters/{pages}/{per_page}:\n    get:\n      summary: Returns a list of volunteer according to filter and pagination\n      parameters:\n        - in: path\n          name: pages\n          schema:\n            type: integer\n          description: Number of result pages\n        - in: path\n          name: per_page\n          schema:\n            type: integer\n          description: Number of result per page\n        - in: query\n          name: query\n          schema:\n            type: string\n          description: Search query by First Name/Last Name/Phone\n        - in: query\n          name: zone\n          schema:\n            type: string\n          description: Search filter by zone\n        - in: query\n          name: availability_days\n          schema:\n            type: string\n          description: Search filter by availability_days          \n        - in: query\n          name: role\n          schema:\n            type: string\n          description: Search filter by role      \n        - in: query\n          name: status\n          schema:\n            type: string\n          description: Search filter by status\n      responses:\n        '200':\n          description: Volunteers founded\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/ServerError'\n\n  /volunteers/{volunteer_id}:\n    get:\n      summary: Returns a volunteer for given ID\n      parameters:\n        - in: path\n          name: volunteer_id\n          schema:\n            type: string\n          description: The ID of volunteer\n      responses:\n        '200':\n          description: Volunteers founded\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Volunteer'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/ServerError'\n    post:\n      summary: Registers a new volunteer\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Volunteer'\n      responses:\n        '201':\n          description: A volunteer created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Volunteer'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/ServerError'\n    put:\n      summary: Updates a volunteer\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Volunteer'\n      responses:\n        '200':\n          description: A volunteer updated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Volunteer'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/ServerError'\n\n  /beneficiaries:\n    get:\n      summary: Returns a list of beneficiaries\n      responses:\n        '200':\n          description: Beneficiary founded\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Beneficiary'\n\n  /beneficiaries/{beneficiary_id}:\n    get:\n      summary: Returns a beneficiary for given ID\n      parameters:\n        - in: path\n          name: beneficiary_id\n          schema:\n            type: string\n          description: The ID of beneficiary\n      responses:\n        '200':\n          description: Beneficiary founded\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Beneficiary'\n    post:\n      summary: Registers a new beneficiary\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Beneficiary'\n      responses:\n        '201':\n          description: A beneficiary created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Beneficiary'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/ServerError'\n    put:\n      summary: Updates a beneficiary\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Beneficiary'\n      responses:\n        '200':\n          description: A beneficiary updated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Beneficiary'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/ServerError'\n\n  /beneficiary/filters/{pages}/{per_page}:\n    get:\n      summary: Returns a list of beneficiary according to filter and pagination\n      parameters:\n        - in: path\n          name: pages\n          schema:\n            type: integer\n          description: Number of result pages\n        - in: path\n          name: per_page\n          schema:\n            type: integer\n          description: Number of result per page\n        - in: query\n          name: query\n          schema:\n            type: string\n          description: Search query by First Name/Last Name/Phone\n        - in: query\n          name: zone\n          schema:\n            type: string\n          description: Search filter by zone\n        - in: query\n          name: is_active\n          schema:\n            type: boolean\n          description: Search for active/inactive beneficiaries\n        - in: query\n          name: black_list\n          schema:\n            type: boolean\n          description: Search for black_list beneficiaries\n        - in: query\n          name: phone\n          schema:\n            type: integer\n          description: Search filter by phone\n        - in: query\n          name: landline\n          schema:\n            type: integer\n          description: Search filter by landline\n      responses:\n        '200':\n          description: Beneficiaries founded\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/ServerError'\n\n  /requests/update:\n    put:\n      summary: Update just the request status and comment(used by Volunteer)\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                _id:\n                  type: string\n                cluster_id:\n                  type: string\n                comment:\n                  type: string\n                status:\n                  type: string\n      responses:\n        '200':\n          description: List of requests updated\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  response:\n                    type: string\n        '400':\n          description: Error\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n  /requests:\n    post:\n      summary: Creates a request\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              anyOf:\n                - $ref: '#/components/schemas/Request'\n                - $ref: '#/components/schemas/RequestPlusBeneficiary'\n      responses:\n        '200':\n          description: Request created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Request'\n        '400':\n          description: Error\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n    put:\n      summary: Updates a request\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Request'\n      responses:\n        '200':\n          description: Request updated\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  response:\n                    type: string\n        '400':\n          description: Error\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/ServerError'\n\n  /requests/{request_id}:\n    get:\n      summary: Returns a request for given ID\n      parameters:\n        - in: path\n          name: request_id\n          schema:\n            type: string\n          description: The ID of request\n      responses:\n        '200':\n          description: Request founded\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Request'\n        '400':\n          description: Error\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n\n  /requests/filters/{pages}/{per_page}:\n    get:\n      summary: Returns a list of requests according to filter and pagination\n      parameters:\n        - in: path\n          name: pages\n          schema:\n            type: integer\n          description: Number of result pages\n        - in: path\n          name: per_page\n          schema:\n            type: integer\n          description: Number of result per page\n        - in: query\n          name: b_id\n          schema:\n            type: string\n          description: Search by beneficiary id\n        - in: query\n          name: v_id\n          schema:\n            type: string\n          description: Search by volunteer id\n        - in: query\n          name: u_id\n          schema:\n            type: string\n          description: Search by user id (created_by)\n        - in: query\n          name: query\n          schema:\n            type: string\n          description: Search query by beneficiary First Name/Last Name/Phone\n        - in: query\n          name: zone\n          schema:\n            type: string\n          description: Search filter by beneficiary zone\n        - in: query\n          name: created_at\n          schema:\n            type: string\n          description: Search filter by beneficiary created_at\n        - in: query\n          name: cluster_id\n          schema:\n            type: string\n          description: Search filter by request cluster_id\n        - in: query\n          name: status\n          schema:\n            type: string\n          description: Search by request status\n        - in: query\n          name: type\n          schema:\n            type: string\n          description: Search by requests type\n        - in: query\n          name: id\n          schema:\n            type: string\n          description: Search request id\n        - in: query\n          name: by_cluster\n          schema:\n            type: string\n          description: Search one request for each cluster(in_process first)\n      responses:\n        '200':\n          description: Requests founded\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  count:\n                    type: integer\n                  list:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Request'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/ServerError'\n\n  /import/csv/requests:\n     post:\n       summary: Imports the requests from csv file\n       consumes:\n         - multipart/form-data\n       parameters:\n         - in: formData\n           name: file\n           type: file\n           description: The file to upload.\n  /import/csv/volunteers:\n     post:\n       summary: Imports the volunteers from csv file\n       consumes:\n         - multipart/form-data\n       parameters:\n         - in: formData\n           name: file\n           type: file\n           description: The file to upload.\n  /export/csv/volunteers:\n     get:\n       summary: Export volunteers to csv file\n  /export/csv/requests:\n     get:\n       summary: Export requests to csv file\n  /export/csv/beneficiary:\n     get:\n       summary: Export beneficiary to csv file\n\n\n  /cluster/{cluster_id}:\n    get:\n      summary: Returns a list of requests for a cluster\n      parameters:\n        - in: path\n          name: cluster_id\n          schema:\n            type: id\n          description: id of the cluster\n      responses:\n        '200':\n          description: Requests founded\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  count:\n                    type: integer\n                  list:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Request'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/ServerError'\n\n\n  /clusters:\n    post:\n      summary: Creates a new cluster and Updates the cluster properties for all requests\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                volunteer:\n                  type: string\n                request_list:\n                  type: array\n                  items:\n                    type: string\n      responses:\n        '200':\n          description: A cluster created\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  volunteer:\n                    type: string\n                  _id:\n                    type: string\n                  created_at:\n                    type: string\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/ServerError'\n\n  /notifications:\n    post:\n      summary: Registers a new notification\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Notification'\n      responses:\n        '201':\n          description: Notification object created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Notification'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/ServerError'\n\n  /notifications/filters/{pages}/{per_page}:\n    get:\n      summary: Returns a list of notifications according to filter and pagination\n      parameters:\n        - in: path\n          name: pages\n          schema:\n            type: integer\n          description: Number of result pages\n        - in: path\n          name: per_page\n          schema:\n            type: integer\n          description: Number of result per page\n        - in: query\n          name: status\n          schema:\n            type: string\n          description: Search notification by status\n        - in: query\n          name: user\n          schema:\n            type: string\n          description: Search filter by user\n      responses:\n        '200':\n          description: Notifications found\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/ServerError'\n\ncomponents:\n  securitySchemes:\n    basicAuth:\n      type: http\n      scheme: basic\n  schemas:\n# Classes\n    Volunteer:\n      type: object\n      properties:\n        first_name:\n          type: string\n        last_name:\n          type: string\n        email:\n          type: string\n          format: email\n        phone:\n          type: string\n        created_at:\n          type: string\n          format: date-time\n        is_active:\n          type: boolean\n        address:\n          type: string\n        zone:\n          type: string\n        age:\n          type: integer\n        soc_media:\n          type: string\n        role:\n          type: array\n          items:\n            $ref: '#/components/schemas/VolunteerRole'\n        availability_hours:\n          type: string\n        availability_days:\n          type: string\n      required:\n        - email\n        - address\n        - zone\n    User:\n      type: object\n      properties:\n        first_name:\n          type: string\n        last_name:\n          type: string\n        email:\n          type: string\n          format: email\n        password:\n          type : string\n        phone:\n          type: string\n        role:\n          $ref: '#/components/schemas/Role'\n        is_active:\n          type: boolean\n        volunteers:\n          type: array\n          items:\n            $ref: '#/components/schemas/Volunteer'\n        availability_hours_start:\n          type: integer\n        availability_hours_end:\n          type: integer\n        availability_days:\n          type: array\n          items:\n            $ref:  '#/components/schemas/WeekDay'\n        last_access:\n          type: string\n          format: date-time\n        created_at:\n          type: string\n          format: date-time\n      required:\n        - email\n        - password\n        - address\n        - zone\n        - phone\n    RequestPlusBeneficiary:\n      type: object\n      properties:\n        first_name:\n          type: string\n        last_name:\n          type: string\n        phone:\n          type: string\n        landline:\n          type: string\n        age:\n          type: integer\n        zone:\n          $ref: '#/components/schemas/Zone'\n        address:\n          type: string\n        special_condition:\n          $ref: '#/components/schemas/SpecialCondition'\n        status:\n          $ref: '#/components/schemas/RequestsStatus'\n        type:\n          $ref: string\n        secret:\n          type: string\n        urgent:\n          type: boolean\n        comments:\n          type: string\n        has_symptoms:\n          type: boolean\n        cluster:\n          type: integer\n        created_at:\n          type: string\n          format: date-time\n    Request:\n      type: object\n      properties:\n        beneficiary:\n          type: string\n        status:\n          $ref: '#/components/schemas/RequestsStatus'\n        type:\n          $ref: string\n        secret:\n          type: string\n        urgent:\n          type: boolean\n        comments:\n          type: string\n        has_symptoms:\n          type: boolean\n        cluster:\n          type: integer\n        created_at:\n          type: string\n          format: date-time\n    Beneficiary:\n      type: object\n      properties:\n        first_name:\n          type: string\n        last_name:\n          type: string\n        phone:\n          type: string\n        landline:\n          type: string\n        age:\n          type: integer\n        zone:\n          $ref: '#/components/schemas/Zone'\n        address:\n          type: string\n        special_condition:\n          $ref: '#/components/schemas/SpecialCondition'\n        created_at:\n          type: string\n          format: date-time\n    Cluster:\n      type: object\n      properties:\n        volunteer:\n          $ref: '#/components/schemas/Volunteer'\n        created_at:\n          type: string\n          format: date-time\n    Notification:\n      type: object\n      properties:\n        type:\n          $ref: '#/components/schemas/NotificationType'\n        subject:\n          type: string\n        request:\n          $ref: '#/components/schemas/Request'\n        created_at:\n          type: string\n          format: date-time\n    NotificationUser:\n      type: object\n      properties:\n        user:\n          $ref: '#/components/schemas/User'\n        status:\n          $ref: '#/components/schemas/NotificationStatus'\n        notification:\n          $ref: '#/components/schemas/Notification'\n        created_at:\n          type: string\n          format: date-time\n# Enums\n    Role:\n      type: string\n      enum:\n        - administrator\n        - coordinator\n        - operator\n    VolunteerRole:\n      type: string\n      enum:\n        - delivery\n        - copilot\n        - packing\n        - supply\n        - operator\n    Zone:\n      type: string\n      enum:\n        - botanica\n        - buiucani\n        - centru\n        - ciocana\n        - riscani\n        - telecentru\n        - suburbii\n    SpecialCondition:\n      type: string\n      enum:\n        - disability\n        - deaf_mute\n        - blind_weak_seer\n    RequestsStatus:\n      type: string\n      enum:\n        - new\n        - confirmed\n        - in_process\n        - canceled\n        - solved\n        - archived\n    NotificationType:\n      type: string\n      enum:\n        - new\n        - canceled\n    NotificationStatus:\n      type: string\n      enum:\n        - new\n        - seen\n        - deleted\n    WeekDay:\n      type: integer\n      enum:\n        - monday\n        - tuesday\n        - wednesday\n        - thursday\n        - friday\n        - saturday\n        - sunday\n    Error:\n      type: object\n      properties:\n        code:\n          type: string\n        message:\n          type: string\n      required:\n        - code\n        - message\n#Responses\n  responses:\n    NotFound:\n      description: The specified resource was not found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    Unauthorized:\n      description: Unauthorized Access\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    ServerError:\n      description: Unexpected Error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    UsersResponse:\n      description: Response for a list for users.\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              page:\n                type: integer\n              page_size:\n                type: integer\n              page_count:\n                type: integer\n              total_count:\n                type: integer\n              links:\n                type: array\n                items:\n                  type: object\n                  aditionalproperties:\n                    type: string\n              records:\n                type: array\n                items:\n                  $ref: '#/components/schemas/User'\n    Successful:\n      description: Successfull\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              response:\n                type: string\n",
			"canonicalURL": "/github.com/code4moldova/voluntar-backend@460b29d47a4a99b12ef47d72e1f4e9f701e2add4/-/blob/backend/static/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/code4moldova/voluntar-backend/blob/460b29d47a4a99b12ef47d72e1f4e9f701e2add4/backend/static/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 1: cannot unmarshal !!str `MPL 2.0` into ogen.License"
}