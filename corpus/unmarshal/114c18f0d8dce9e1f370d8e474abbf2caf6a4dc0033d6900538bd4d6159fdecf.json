{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/hasura/graphql-engine"
		},
		"file": {
			"name": "openapi_get_endpoint_test_complex_args.yaml",
			"size": 0,
			"path": "server/tests-py/queries/openapi/openapi_get_endpoint_test_complex_args.yaml",
			"byteSize": 3286,
			"content": "- description: Try to add a GET rest endpoint with no argument\n  url: /v1/query\n  status: 200\n  response:\n    message: success\n  query:\n    type: create_rest_endpoint\n    args:\n      url: complex_args\n      name: complex_args\n      methods:\n      - POST\n      definition:\n        query:\n          collection_name: test_collection\n          query_name: mutation_complex_args\n\n- description: Call openapi json endpoint\n  url: /api/swagger/json\n  method: GET\n  status: 200\n  query:\n  response:\n    openapi: 3.0.0\n    info:\n      version: ''\n      title: Rest Endpoints\n      description: This OpenAPI specification is automatically generated by Hasura.\n    paths:\n      /api/rest/complex_args:\n        post:\n          summary: complex_args\n          description: \"***\\nThe GraphQl query for this endpoint is:\\n``` graphql\\n\\\n            mutation QQ($new_object: test_table_set_input!, $first_name: String!) {\\\n            \\ update_test_table(where: {first_name: {_eq: $first_name}}, _set: $new_object)\\\n            \\ { affected_rows } }\\n```\"\n          parameters:\n          - schema:\n              type: string\n            in: header\n            name: x-hasura-admin-secret\n            description: Your x-hasura-admin-secret will be used for authentication\n              of the API request.\n          - schema:\n              type: string\n            in: query\n            name: first_name\n            description: _\"first_name\" is required (enter it either in parameters or\n              request body)_\n          requestBody:\n            required: true\n            content:\n              application/json:\n                schema:\n                  type: object\n                  properties:\n                    first_name:\n                      type: string\n                      nullable: false\n                    new_object:\n                      $ref: '#/components/schemas/test_table_set_input'\n            description: Query parameters can also be provided in the request body as\n              a JSON object\n          responses:\n            '200':\n              content:\n                application/json:\n                  schema:\n                    properties:\n                      update_test_table:\n                        type: object\n                        properties:\n                          affected_rows:\n                            title: Int\n                            type: integer\n              description: Responses for POST /api/rest/complex_args\n    components:\n      schemas:\n        String:\n          type: string\n          nullable: true\n        uuid:\n          pattern: '[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}'\n          type: string\n          nullable: true\n        test_table_set_input:\n          type: object\n          description: input type for updating data in table \"test_table\"\n          nullable: false\n          properties:\n            first_name:\n              $ref: '#/components/schemas/String'\n            last_name:\n              $ref: '#/components/schemas/String'\n            id:\n              $ref: '#/components/schemas/uuid'\n- description: Try to remove the endpoint\n  url: /v1/query\n  status: 200\n  response:\n    message: success\n  query:\n    type: drop_rest_endpoint\n    args:\n      name: complex_args\n",
			"canonicalURL": "/github.com/hasura/graphql-engine@2f3ae93ab02c51a6f0283bbe2433d679645ae435/-/blob/server/tests-py/queries/openapi/openapi_get_endpoint_test_complex_args.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/hasura/graphql-engine/blob/2f3ae93ab02c51a6f0283bbe2433d679645ae435/server/tests-py/queries/openapi/openapi_get_endpoint_test_complex_args.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: json: line 1:2: json: cannot unmarshal array into Go value of type ogen.Alias"
}