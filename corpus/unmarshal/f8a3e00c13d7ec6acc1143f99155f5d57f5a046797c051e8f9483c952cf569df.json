{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/workshopapps/engineerprofile360.web"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "backend/public/swagger/swagger.yaml",
			"byteSize": 60422,
			"content": "openapi: 3.0.0\nservers:\n  # Added by API Auto Mocking Plugin\n  - description: Skript App\n    url: http://api.skript.hng.tech/api\ninfo:\n  version: \"1.0.0\"\n  title: Skript API\n  description: Taking employee assessments to the moon ðŸš€\npaths:\n  # register user\n  /auth/register:\n    post:\n      tags:\n        - Authentication\n      description: 'Register user'\n      operationId: register\n      responses:\n        '200':\n          description: successful operation\n        '400':\n          description: Bad request\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RegisterationInfo'\n  # login user\n  /auth/login:\n    post:\n      tags:\n        - Authentication\n      description: 'Login user'\n      operationId: login\n      responses:\n        '200':\n          description: successful operation\n        '400':\n          description: Bad request\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LoginInfo'\n  # /auth/logout:\n  #   post:\n  #     tags:\n  #       - Authentication\n  #     description: 'Logout user'\n  #     operationId: logout\n  #     responses:\n  #       '200':\n  #         description: successful operation\n  #       '400':\n  #         description: Bad request\n  #     requestBody:\n  #       content:\n  #         application/json:\n  #           schema:\n  #             $ref: '#/components/schemas/LogoutInfo'\n  # /auth/refresh:\n  #   post:\n  #     tags:\n  #       - Authentication\n  #     description: 'Refresh token'\n  #     operationId: refresh\n  #     responses:\n  #       '200':\n  #         description: successful operation\n  #       '400':\n  #         description: Bad request\n  #     requestBody:\n  #       content:\n  #         application/json:\n  #           schema:\n  #             $ref: '#/components/schemas/Refresh'\n  \"/auth/password/forgot-password/{email}\":\n    get:\n      tags:\n        - Authentication\n      description: 'Forgot Password'\n      operationId: forgot password\n      parameters:\n        - name: email\n          in: path\n          required: true\n          type: string\n          format: email\n          example: \"test@mail.com\"\n      responses:\n        '200':\n          description: successful operation\n        '400':\n          description: Bad request\n  \"/auth/password/reset/{id}/{token}\":\n    post:\n      tags:\n        - Authentication\n      description: 'Reset Password'\n      operationId: reset password\n      parameters:\n        - name: id\n          in: path\n          required: true\n          type: string\n          format: uuid\n          example: \"3998502f-f63a-4ba6-b84d-0d85a300dbb4\"\n        - name: token\n          in: path\n          required: true\n          type: string\n          format: uuid\n          example: \"79b3ac1d2fa1f1f31993\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ResetPassword'\n      responses:\n        '200':\n          description: successful operation\n        '400':\n          description: Bad request\n        '404':\n          description: Not Found\n  \"/auth/verify/{id}/{token}\":\n    get:\n      tags:\n        - Authentication\n      description: 'Email verification'\n      operationId: verify email\n      responses:\n        '200':\n          description: successful operation\n        '400':\n          description: Bad request\n      parameters:\n        - name: id\n          in: path\n          required: true\n          type: string\n          example: \"3379cfe6-dd11-448f-b3be-47d191a7c724\"\n        - name: token\n          in: path\n          required: true\n          type: string\n          example: \"9cc2e4b47a6cf88aa4f7\"\n  /company/all:\n    get:\n      tags:\n        - Company\n      description: 'Fetch all companies'\n      operationId: company\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse200'\n        '401':\n          description: Unauthenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse401'\n  \"/company/{company_id}\":\n    get:\n      tags:\n        - Company\n      description: 'Get a company details'\n      operationId: getcompanybyid\n      parameters:\n        - name: company_id\n          in: path\n          required: true\n          type: company_id\n          format: company_id\n          example: \"9ea09b93-6682-11ed-9941-3863bbb7c6d\"\n      security:\n        - bearerAuth: []\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse200'\n        '401':\n          description: Unauthenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse401'\n  \"/company/user/{user_id}\":\n    get:\n      tags:\n        - Company\n      description: 'Get all companies own by a user'\n      operationId: getcompanybyuser\n      parameters:\n        - name: user_id\n          in: path\n          required: true\n          type: user_id\n          format: user_id\n          example: \"9ea09b93-6682-11ed-9941-3863bbb7c6d\"\n      security:\n        - bearerAuth: []\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse200'\n        '401':\n          description: Unauthenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse401'\n  \"/company/update/{company_id}\":\n    put:\n      tags:\n        - Company\n      description: \"Update company's info\"\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: company_id\n          in: path\n          required: true\n          type: company_id\n          format: string\n          example: \"9ea09b93-6682-11ed-9941-3863bbb7c6d\"\n      operationId: update\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                # $ref: '#/components/schemas/ApiResponse200'\n        '401':\n          description: Unauthenticated\n          content:\n            application/json:\n              schema:\n                # $ref: '#/components/schemas/ApiResponse401'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                # $ref: '#/components/schemas/ApiResponse400'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateCompanyInfo'\n  /user/all:\n    get:\n      tags:\n        - Users\n      description: 'Fetch Users'\n      operationId: users\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse200'\n        '401':\n          description: Unauthenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse401'\n    # fetch user\n  \"/user/{user_id}\":\n    get:\n      tags:\n        - Users\n      description: 'Fetch User'\n      parameters:\n        - name: user_id\n          in: path\n          required: true\n          type: user_id\n          format: user_id\n          example: \"9ea09b93-6682-11ed-9941-3863bbb7c6d\"\n      operationId: user\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse200'\n        '401':\n          description: Unauthenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse401'\n  \"/user/make-admin/{user_id}\":\n    get:\n      tags:\n        - Users\n      description: 'Make a user an admin'\n      parameters:\n        - name: user_id\n          in: path\n          required: true\n          type: user_id\n          format: user_id\n          example: \"9ea09b93-6682-11ed-9941-3863bbb7c6d\"\n      operationId: makeuseradmin\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse200'\n        '401':\n          description: Unauthenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse401'\n  \"/user/block-user/{user_id}\":\n    get:\n      tags:\n        - Users\n      description: 'Block a user'\n      parameters:\n        - name: user_id\n          in: path\n          required: true\n          type: user_id\n          format: user_id\n          example: \"9ea09b93-6682-11ed-9941-3863bbb7c6d\"\n      operationId: blockuser\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse200'\n        '401':\n          description: Unauthenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse401'\n    # fetch verified user\n  \"/user/verified/{user_id}\":\n    get:\n      tags:\n        - Users\n      description: 'Fetch Verified User'\n      operationId: verified_user\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse200'\n        '400':\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse400'\n      parameters:\n        - name: user_id\n          in: path\n          required: true\n          type: user_id\n          format: user_id\n          example: \"9ea09b93-6682-11ed-9941-3863bbb7c6d\"\n    \"/user/{user_id}/deactivate\":\n    post:\n      tags:\n        - Users\n      description: 'Deactivate a user'\n      parameters:\n        - name: user_id\n          in: path\n          required: true\n          type: user_id\n          format: user_id\n          example: \"9ea09b93-6682-11ed-9941-3863bbb7c6d\"\n      operationId: deactivateuser\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse200'\n        '400':\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse400'\n    # update user\n  \"/user/{userId}/update\":\n    put:\n      tags:\n        - Users\n      description: 'Update User'\n      operationId: update\n      security:\n        - bearerAuth: []\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse200'\n        '400':\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse400'\n      parameters:\n        - name: user_id\n          in: path\n          required: true\n          type: user_id\n          format: user_id\n          example: \"9ea09b93-6682-11ed-9941-3863bbb7c6d\"\n    # create employee\n  /employee/add:\n    post:\n      tags:\n        - Employee\n      description: 'Create employee'\n      operationId: employee\n      security:\n        - bearerAuth: []\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse200'\n        '400':\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse400'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Employee'\n  /employee/confirm:\n    post:\n      tags:\n        - Employee\n      description: 'Confirm employee CSV upload file'\n      operationId: employeecsv\n      security:\n        - bearerAuth: []\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse200'\n        '400':\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse400'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateEmployeeCSV'\n  /employee/{employee_id}:\n    get:\n      tags:\n        - Employee\n      security:\n        - bearerAuth: []\n      description: 'Fetch an employee details'\n      operationId: getemployee\n      parameters:\n        - name: employee_id\n          in: path\n          required: true\n          type: employee_id\n          format: employee_id\n          example: \"9ea09b93-6682-11ed-9941-3863bbb7c6d\"\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse200'\n        '400':\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse400'\n        '401':\n          description: Unauthenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse401'\n  /employee/company/{org_id}:\n    get:\n      tags:\n        - Employee\n      security:\n        - bearerAuth: []\n      description: 'Fetch all from an organisation'\n      operationId: getemployeebyorg\n      parameters:\n        - name: org_id\n          in: path\n          required: true\n          type: org_id\n          format: org_id\n          example: \"9ea09b93-6682-11ed-9941-3863bbb7c6d\"\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse200'\n        '400':\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse400'\n        '401':\n          description: Unauthenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse401'\n  \"employee/department/{department_id}\":\n    get:\n      tags:\n        - Employee\n      security:\n        - bearerAuth: []\n      description: 'Fetch all Employees'\n      operationId: getallemployees\n      parameters:\n        - name: \n          in: path\n          required: true\n          type: employees\n          format: employees\n          example: \"9ea09b93-6682-11ed-9941-3863bbb7c6d\"\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse200'\n        '400':\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse400'\n        '401':\n          description: Unauthenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse401'\n  /employee/department/{department_id}:\n    get:\n      tags:\n        - Employee\n      security:\n        - bearerAuth: []\n      description: 'Fetch all Employee in a department'\n      operationId: getemployeebydept\n      parameters:\n        - name: department_id\n          in: path\n          required: true\n          type: department_id\n          format: department_id\n          example: \"9ea09b93-6682-11ed-9941-3863bbb7c6d\"\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse200'\n        '400':\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse400'\n        '401':\n          description: Unauthenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse401'\n  \"/employee/{employee_id}/update\":\n    put:\n      tags:\n        - Employee\n      description: \"Update employee's info\"\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: employee_id\n          in: path\n          required: true\n          type: employee_id\n          format: employee_id\n          example: \"9ea09b93-6682-11ed-9941-3863bbb7c6d\"\n      operationId: updateemployee\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse200'\n        '401':\n          description: Unauthenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse401'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse400'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateEmployeeInfo'\n    # create category\n  /category/add:\n    post:\n      tags:\n        - Category\n      security:\n        - bearerAuth: []\n      description: 'Create Category'\n      operationId: category\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse200'\n        '400':\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse400'\n        '401':\n          description: Unauthenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse401'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateCategory'\n    # update category\n  \"/category/{category_id}/update\":\n    put:\n      tags:\n        - Category\n      description: 'Update Category'\n      operationId: update\n      parameters:\n        - name: category_id\n          in: path\n          required: true\n          type: category_id\n          format: category_id\n          example: \"9ea09b93-6682-11ed-9941-3863bbb7c6d\"\n      security:\n        - bearerAuth: []\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse200'\n        '400':\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse400'\n        '401':\n          description: Unauthenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse401'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateCategory'\n  \"/category/{category_id}\":\n    get:\n      tags:\n        - Category\n      description: 'Get a category details'\n      operationId: getcategory\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: category_id\n          in: path\n          required: true\n          type: category_id\n          format: category_id\n          example: \"9ea09b93-6682-11ed-9941-3863bbb7c6d\"\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse200'\n        '401':\n          description: Unauthenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse401'\n  \"/category/{category_id}/delete\":\n    delete:\n      tags:\n        - Category\n      description: 'Delete Category'\n      operationId: deleteCategory\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: category_id\n          in: path\n          required: true\n          type: category_id\n          format: category_id\n          example: \"9ea09b93-6682-11ed-9941-3863bbb7c6d\"\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse200'\n        '401':\n          description: Unauthenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse401'\n    # fetch assessment by organisation\n  \"/assessment/{organisation_id}\":\n    get:\n      tags:\n        - Assessment\n      description: 'Fetch assessment by organisation'\n      operationId: assessment\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: organisation_id\n          in: path\n          required: true\n          type: organisation_id\n          format: organisation_id\n          example: \"9ea09b93-6682-11ed-9941-3863bbb7c6d\"\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse200'\n        '401':\n          description: Unauthenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse401'\n    # update assessment\n  \"/assessment/{assessment_id}\":\n    put:\n      tags:\n        - Assessment\n      description: 'Update assessment'\n      operationId: updateAssessment\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: assessment_id\n          in: path\n          required: true\n          type: assessment_id\n          format: assessment_id\n          example: \"9ea09b93-6682-11ed-9941-3863bbb7c6d\"\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse200'\n        '401':\n          description: Unauthenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse401'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateAssessment'\n    # create assessment\n  /assessment/create:\n    post:\n      tags:\n        - Assessment\n      description: 'Create Assessment'\n      operationId: createassessment\n      security:\n        - bearerAuth: []\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse200'\n        '401':\n          description: Unauthenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse401'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateAssessment'\n    # delete assessment\n  \"/assessment/{assessment_id}/delete\":\n    delete:\n      tags:\n        - Assessment\n      description: 'Delete assessment'\n      operationId: deleteassessment\n      parameters:\n        - name: assessment_id\n          in: path\n          required: true\n          type: assessment_id\n          format: assessment_id\n          example: \"9ea09b93-6682-11ed-9941-3863bbb7c6d\"\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse200'\n        '401':\n          description: Unauthenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse401'\n    # create question\n  /question/add:\n    post:\n      tags:\n        - Question\n      description: 'Create question'\n      operationId: question\n      security:\n        - bearerAuth: []\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse200'\n        '401':\n          description: Unauthenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse401'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateQuestion'\n    # update question\n  \"/question/{question_id}/{assessment_id}/update\":\n    put:\n      tags:\n        - Question\n      description: 'Update question'\n      operationId: update\n      security:\n        - bearerAuth: []\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse200'\n        '401':\n          description: Unauthenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse401'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateQuestion'\n  \"/question/get/{organisation_id}\":\n    get:\n      tags:\n        - Question\n      description: 'Get all the questions set by an organisation'\n      operationId: getquestionbyorg\n      parameters:\n        - name: organisation_id\n          in: path\n          required: true\n          type: organisation_id\n          format: organisation_id\n          example: \"9ea09b93-6682-11ed-9941-3863bbb7c6d\"\n      security:\n        - bearerAuth: []\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse200'\n        '401':\n          description: Unauthenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse401'\n  \"/question/category/{category_id}\":\n    get:\n      tags:\n        - Question\n      description: 'Get all the questions set by it category'\n      operationId: getquestionbycategory\n      parameters:\n        - name: category_id\n          in: path\n          required: true\n          type: category_id\n          format: category_id\n          example: \"9ea09b93-6682-11ed-9941-3863bbb7c6d\"\n      security:\n        - bearerAuth: []\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse200'\n        '401':\n          description: Unauthenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse401'\n  \"/question/assessment/{assessment_id}\":\n    get:\n      tags:\n        - Question\n      description: 'Get all assessment questions'\n      operationId: getquestionbyassessment\n      parameters:\n        - name: assessment_id\n          in: path\n          required: true\n          type: assessment_id\n          format: assessment_id\n          example: \"9ea09b93-6682-11ed-9941-3863bbb7c6d\"\n      security:\n        - bearerAuth: []\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse200'\n        '401':\n          description: Unauthenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse401'\n  \"/question/{question_id}\":\n    get:\n      tags:\n        - Question\n      description: 'Get a single question'\n      operationId: getquestion\n      parameters:\n        - name: question_id\n          in: path\n          required: true\n          type: question_id\n          format: question_id\n          example: \"9ea09b93-6682-11ed-9941-3863bbb7c6d\"\n      security:\n        - bearerAuth: []\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse200'\n        '401':\n          description: Unauthenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse401'\n    # create userscore\n  /userscore/create:\n    post:\n      tags:\n        - Userscore\n      description: 'Create user score'\n      operationId: createuserscore\n      security:\n        - bearerAuth: []\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse200'\n        '400':\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse400'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserScoreCreate'\n  # get userscore\n  \"/userscore/{employee_id}/{assessment_id}\":\n    get:\n      tags:\n        - Userscore\n      description: 'Get user score'\n      operationId: getuserscore\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: assessment_id\n          in: path\n          required: true\n          type: assessment_id\n          format: assessment_id\n          example: \"9ea09b93-6682-11ed-9941-3863bbb7c6d\"\n        - name: employee_id\n          in: path\n          required: true\n          type: employee_id\n          format: employee_id\n          example: \"4ea09b93-6682-11ed-9941-3863bbb7c6e\"\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse200'\n        '401':\n          description: Unauthenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse401'\n  \"/userscore/assessment/{assessment_id}\":\n    get:\n      tags:\n        - Userscore\n      description: 'Get all assessment scores'\n      operationId: getscorebyassessment\n      parameters:\n        - name: assessment_id\n          in: path\n          required: true\n          type: assessment_id\n          format: assessment_id\n          example: \"9ea09b93-6682-11ed-9941-3863bbb7c6d\"\n      security:\n        - bearerAuth: []\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse200'\n        '401':\n          description: Unauthenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse401'\n  \"/userscore/category/{category_id}\":\n    get:\n      tags:\n        - Userscore\n      description: 'Get all scores for a category of questions'\n      operationId: getscorebycategory\n      parameters:\n        - name: category_id\n          in: path\n          required: true\n          type: category_id\n          format: category_id\n          example: \"9ea09b93-6682-11ed-9941-3863bbb7c6d\"\n      security:\n        - bearerAuth: []\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse200'\n        '401':\n          description: Unauthenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse401'\n\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserScoreCreate'\n \n  \"/department/{department_id}\":\n    get:\n      tags:\n        - Department\n      description: 'Fetch a sigle department details'\n      operationId: getdepartment\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: department_id\n          in: path\n          required: true\n          type: department_id\n          format: department_id\n          example: \"9ea09b93-6682-11ed-9941-3863bbb7c6d\"\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse200'\n        '401':\n          description: Unauthenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse401'\n  \"/department/company/{organisation_id}\":\n    get:\n      tags:\n        - Department\n      description: 'Fetch all departments created by an organisation'\n      operationId: getdepartmentbyORG\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: organisation_id\n          in: path\n          required: true\n          type: organisation_id\n          format: organisation_id\n          example: \"9ea09b93-6682-11ed-9941-3863bbb7c6d\"\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse200'\n        '401':\n          description: Unauthenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse401'                \n    # update assessment\n  \"/department/update/{department_id}\":\n    put:\n      tags:\n        - Department\n      description: 'Update department'\n      operationId: updateDepartment\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: department_id\n          in: path\n          required: true\n          type: department_id\n          format: department_id\n          example: \"9ea09b93-6682-11ed-9941-3863bbb7c6d\"\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse200'\n        '401':\n          description: Unauthenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse401'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateDepartment'\n    # create assessment\n  /department/add:\n    post:\n      tags:\n        - Department\n      description: 'Create Department'\n      operationId: createdepartment\n      security:\n        - bearerAuth: []\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse200'\n        '401':\n          description: Unauthenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse401'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateDepartment'\n    # delete assessment\n  \"/department/delete/{department_id}\":\n    delete:\n      tags:\n        - Department\n      description: 'Delete department'\n      operationId: deletedepartment\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: department_id\n          in: path\n          required: true\n          type: department_id\n          format: department_id\n          example: \"9ea09b93-6682-11ed-9941-3863bbb7c6d\"\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse200'\n        '401':\n          description: Unauthenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse401'\n  \"/stack/{stack_id}\":\n    get:\n      tags:\n        - Stack\n      description: 'Fetch a sigle stack details'\n      operationId: getstack\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: stack_id\n          in: path\n          required: true\n          type: stack_id\n          format: stack_id\n          example: \"9ea09b93-6682-11ed-9941-3863bbb7c6d\"\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse200'\n        '401':\n          description: Unauthenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse401'\n  \"/stack/all\":\n    get:\n      tags:\n        - Stack\n      description: 'Fetch all stacks'\n      operationId: getallstacks\n      security:\n        - bearerAuth: []\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse200'\n        '401':\n          description: Unauthenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse401'                \n    # update assessment\n  \"/stack/update/{stack_id}\":\n    put:\n      tags:\n        - Stack\n      description: 'Update stack'\n      operationId: updatestack\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: stack_id\n          in: path\n          required: true\n          type: stack_id\n          format: stack_id\n          example: \"9ea09b93-6682-11ed-9941-3863bbb7c6d\"\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse200'\n        '401':\n          description: Unauthenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse401'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateStack'\n    # create assessment\n  /stack/add:\n    post:\n      tags:\n        - Stack\n      description: 'Add Stack'\n      operationId: addstack\n      security:\n        - bearerAuth: []\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse200'\n        '401':\n          description: Unauthenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse401'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateStack'\n  \"/interview/get/{interview_id}\":\n    get:\n      tags:\n        - Interview\n      description: 'Fetch a sigle interview details'\n      operationId: getinterview\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: interview_id\n          in: path\n          required: true\n          type: interview_id\n          format: interview_id\n          example: \"9ea09b93-6682-11ed-9941-3863bbb7c6d\"\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse200'\n        '401':\n          description: Unauthenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse401'\n  \"/interview/stack/{stack_id}\":\n    get:\n      tags:\n        - Interview\n      description: 'Fetch all interviews for a partcular stack'\n      operationId: getinterviewnystack\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: stack_id\n          in: path\n          required: true\n          type: stack_id\n          format: stack_id\n          example: \"9ea09b93-6682-11ed-9941-3863bbb7c6d\"\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse200'\n        '401':\n          description: Unauthenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse401'\n  \"/interview/all\":\n    get:\n      tags:\n        - Interview\n      description: 'Fetch all interviews'\n      operationId: getallinterviews\n      security:\n        - bearerAuth: []\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse200'\n        '401':\n          description: Unauthenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse401'                \n    # update assessment\n  \"/interview/update/{interview_id}\":\n    put:\n      tags:\n        - Interview\n      description: 'Update interview'\n      operationId: updateinterview\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: interview_id\n          in: path\n          required: true\n          type: interview_id\n          format: interview_id\n          example: \"9ea09b93-6682-11ed-9941-3863bbb7c6d\"\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse200'\n        '401':\n          description: Unauthenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse401'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateInterview'\n    # create assessment\n  /interview/add:\n    post:\n      tags:\n        - Interview\n      description: 'Add Interview'\n      operationId: addinterview\n      security:\n        - bearerAuth: []\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse200'\n        '401':\n          description: Unauthenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse401'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateInterview'\n  \"/user-assessment/accept/{assessment_id}/{employee_id}/{organisation_id}\":\n    get:\n      tags:\n        - User Assessment\n      description: 'Accept to take an assessment'\n      operationId: acceptassessment\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: assessment_id\n          in: path\n          required: true\n          type: assessment_id\n          format: assessment_id\n          example: \"9ea09b93-6682-11ed-9941-3863bbb7c6d\"\n        - name: employee_id\n          in: path\n          required: true\n          type: employee_id\n          format: employee_id\n          example: \"4ea09b93-6682-11ed-9941-3863bbb7c6d\"\n        - name: organisation_id\n          in: path\n          required: true\n          type: organisation_id\n          format: organisation_id\n          example: \"3ea09b93-6682-11ed-9941-3863bbb7c6d\"\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse200'\n        '401':\n          description: Unauthenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse401'\n  \"/user-assessment/org/{organisation_id}\":\n    get:\n      tags:\n        - User Assessment\n      description: 'Fetch all employee assessment ordered by performance'\n      operationId: getalluserassessment\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: organisation_id\n          in: path\n          required: true\n          type: organisation_id\n          format: organisation_id\n          example: \"9ea09b93-6682-11ed-9941-3863bbb7c6d\"\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse200'\n        '401':\n          description: Unauthenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse401'     \n  \"/user-assessment/org/{organisation_id}/org-available\":\n    get:\n      tags:\n        - User Assessment\n      description: 'Fetch all organisation accepted assessment'\n      operationId: getallorgavailableassessment\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: organisation_id\n          in: path\n          required: true\n          type: organisation_id\n          format: organisation_id\n          example: \"9ea09b93-6682-11ed-9941-3863bbb7c6d\"\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse200'\n        '401':\n          description: Unauthenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse401'     \n  \"/user-assessment/org/{organisation_id}/org-completed\":\n    get:\n      tags:\n        - User Assessment\n      description: 'Fetch all organisation completed assessment'\n      operationId: getallorgcompletedassessment\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: organisation_id\n          in: path\n          required: true\n          type: organisation_id\n          format: organisation_id\n          example: \"9ea09b93-6682-11ed-9941-3863bbb7c6d\"\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse200'\n        '401':\n          description: Unauthenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse401'  \n  \"/user-assessment/{employee_id}\":\n    get:\n      tags:\n        - User Assessment\n      description: 'Fetch all employee available assessments'\n      operationId: getEmployeeAvailableAssessment\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: employee_id\n          in: path\n          required: true\n          type: employee_id\n          format: employee_id\n          example: \"9ea09b93-6682-11ed-9941-3863bbb7c6d\"\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse200'\n        '401':\n          description: Unauthenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse401'\n  \"/user-assessment/{employee_id}/completed\":\n    get:\n      tags:\n        - User Assessment\n      description: 'Fetch all employee completed assessments'\n      operationId: getEmployeeCompletedAssessment\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: employee_id\n          in: path\n          required: true\n          type: employee_id\n          format: employee_id\n          example: \"9ea09b93-6682-11ed-9941-3863bbb7c6d\"\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse200'\n        '401':\n          description: Unauthenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse401' \n    # update assessment\n  \"/user-assessment/{user_assessment_id}/update\":\n    put:\n      tags:\n        - User Assessment\n      description: 'Update user assessment'\n      operationId: updateuserassessment\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: user_assessment_id\n          in: path\n          required: true\n          type: user_assessment_id\n          format: user_assessment_id\n          example: \"9ea09b93-6682-11ed-9941-3863bbb7c6d\"\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse200'\n        '401':\n          description: Unauthenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse401'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateUserAssessment'\n    # create assessment\n  \"/user-assessment/{user_assessment_id}/delete\":\n    delete:\n      tags:\n        - User Assessment\n      description: 'Delete User Assessment'\n      operationId: deleteuserassessment\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: user_assessment_id\n          in: path\n          required: true\n          type: user_assessment_id\n          format: user_assessment_id\n          example: \"9ea09b93-6682-11ed-9941-3863bbb7c6d\"\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse200'\n        '401':\n          description: Unauthenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse401'\ncomponents:\n  schemas:\n    ResetPassword:\n      type: object\n      properties:\n        new_password:\n          type: string\n          format: string\n          example: '12345'\n          required: true\n        type:\n          type: string\n          format: string\n          example: 'organization | employee'\n          required: true\n    UserUpdate:\n      type: object\n      properties:\n        email:\n          type: string\n          format: email\n          example: 'test@mail.com'\n        username:\n          type: string\n          format: username\n          example: 'johny16'\n        full_name:\n          type: string\n          format: string\n          example: \"John Doe\"\n    UsersById:\n      parameters:\n        - name: zoneId\n          in: path\n          required: true\n          schema:\n            type: string\n    EmailVerificatikon:\n      type: object\n      \n    RegisterationInfo:\n      type: object\n      properties:\n        email:\n          type: string\n          format: email\n          example: 'test@mail.com'\n        full_name:\n          type: string\n          format: string\n          example: \"John Doe\"\n          required: true\n        username:\n          type: string\n          format: text\n          example: john doe\n        password:\n          type: string\n          format: password\n          example: \"1234\"\n    LoginInfo:\n      type: object\n      properties:\n        email:\n          type: string\n          format: email\n          example: 'test@mail.com'\n        password:\n          type: string\n          format: password\n          example: \"1234\"\n    UserScoreCreate:\n      type: object\n      properties:\n        assessment_id:\n          type: string\n          format: assessment_id\n          example: '9ea09b93-6682-11ed-9941-3863bbb7c6d'\n        employee_id:\n          type: string\n          format: assessment_id\n          example: '9ea09b93-6682-11ed-9941-3863bbb7c6d'\n        categories:\n          type: array\n          format: categories\n          example: ['PHP','SQL','REACTJS']\n        passed_questions:\n          type: array\n          format: passed_questions\n          example: [20,2,11]\n    ApiResponse200:\n      type: object\n      properties:\n        status:\n          type: boolean\n          format: status\n          example: true\n        message:\n          type: string\n          format: message\n          example: 'successful'\n        data:\n          type: array\n          format: data\n          example: [...]\n    ApiResponse400:\n      type: object\n      properties:\n        status:\n          type: string\n          format: status\n          example: 'error'\n        message:\n          type: string\n          format: message\n          example: 'The given data was invalid.'\n        errors:\n          type: array\n          format: errors\n          example: [...]\n    ApiResponse401:\n      type: object\n      properties:\n        message:\n          type: string\n          format: message\n          example: 'Unauthenticated.'\n    GetUserscore:\n      type: object\n      properties:\n        assessment_id:\n          type: string\n          format: assessment_id\n          example: '9ea09b93-6682-11ed-9941-3863bbb7c6d'\n        employee_id:\n          type: string\n          format: assessment_id\n          example: '9ea09b93-6682-11ed-9941-3863bbb7c6d'\n        categories:\n          type: array\n          format: categories\n          example: ['PHP','SQL','REACTJS']\n        passed_questions:\n          type: array\n          format: passed_questions\n          example: [20,2,11]\n    UpdateCompanyInfo:\n      type: object\n      properties:\n        name:\n          type: string\n          format: name\n          example: 'AxlePlex'\n        email:\n          type: string\n          format: org_email\n          example: 'main@company.com' \n    CreateEmployeeCSV:\n      type: string\n      example: 'data:text/csv;base64,Uy9OLEZ1bGwgTmFtZSxVc2VybmFtZSxFbWFpbA0KMSxqb2huIGRvZSxqb2hubnksam9obkBtYWlsLmNvbQ0KMSxqb2huIGRvZSxqb2hubnksam9obkBtYWlsLmNvbQ0KMSxqb2huIGRvZSxqb2hubnksam9obkBtYWlsLmNvbQ=='\n          \n    UpdateEmployeeInfo:\n      type: object\n      properties:\n        email:\n          type: string\n          format: email\n          example: 'johndoe@gmail.com'\n        fullname:\n          type: string\n          format: fullname\n          example: 'John Doe'\n        username:\n          type: string\n          format: username\n          example: 'Johndoe'\n        occupation:\n          type: string\n          format: occupation\n          example: 'Manager'\n    CreateCategory:\n      type: object\n      properties:\n        name:\n          type: string\n          format: name\n          example: 'PHP'\n        assessment_id:\n          type: string\n          format: assessment_id\n          example: '9ea09b93-6682-11ed-9941-3863bbb7c6d'\n    CreateInterview:\n      type: object\n      properties:\n        name:\n          type: string\n          format: name\n          example: 'Google Python Interview'\n        company_name:\n          type: string\n          format: company_name\n          example: 'google'\n        stack_id:\n          type: string\n          format: stack_id\n          example: '9ea09b93-6682-11ed-9941-3863bbb7c6d'\n    UpdateCategory:\n      type: object\n      properties:\n        name:\n          type: string\n          format: name\n          example: 'PHP'\n    UpdateAssessment:\n      type: object\n      properties:\n        name:\n          type: string\n          format: name\n          example: 'First Assessment'\n    UpdateDepartment:\n      type: object\n      properties:\n        name:\n          type: string\n          format: name\n          example: 'First Department'\n    UpdateInterview:\n      type: object\n      properties:\n        name:\n          type: string\n          format: name\n          example: 'Google Python Interview'\n        company_name:\n          type: string\n          format: company_name\n          example: 'microsoft'\n    UpdateStack:\n      type: object\n      properties:\n        name:\n          type: string\n          format: name\n          example: 'MEAN Stack'\n    CreateAssessment:\n      type: object\n      properties:\n        name:\n          type: string\n          format: name\n          example: 'First Assessment'\n        org_id:\n          type: string\n          format: org_id\n          example: '9ea09b93-6682-11ed-9941-3863bbb7c6d'\n    CreateDepartment:\n      type: object\n      properties:\n        name:\n          type: string\n          format: name\n          example: 'First Department'\n        org_id:\n          type: string\n          format: org_id\n          example: '9ea09b93-6682-11ed-9941-3863bbb7c6d'\n    CreateStack:\n      type: object\n      properties:\n        name:\n          type: string\n          format: name\n          example: 'MERN Stack'\n    CreateQuestion:\n      type: object\n      properties:\n        category_id:\n          type: string\n          format: category_id\n          example: '9ea09b93-6682-11ed-9941-3863bbb7c6d'\n        assessment_id:\n          type: string\n          format: assessment_id\n          example: '2ea09b93-6682-11ed-9941-3863bbb7c6d'\n        question_id:\n          type: string\n          format: question_id\n          example: '5ea09b93-6682-11ed-9941-3863bbb7c6d'\n        correct_answers:\n          type: string\n          format: correct_answers\n          example: '[1]'\n        options:\n          type: string\n          format: options\n          example: '[\"PHP\", \"SQL\", \"REACT\"]'\n        timeframe:\n          type: string\n          format: timeframe\n          example: '10'\n        is_multiple_answers:\n          type: boolean\n          format: is_multiple_answers\n          example: false\n    UpdateQuestion:\n      type: object\n      properties:\n        correct_answers:\n          type: string\n          format: correct_answers\n          example: '[1]'\n        options:\n          type: string\n          format: options\n          example: '[\"PHP\", \"SQL\", \"REACT\"]'\n        timeframe:\n          type: string\n          format: timeframe\n          example: '10'\n        is_multiple_answers:\n          type: boolean\n          format: is_multiple_answers\n          example: false\n    UpdateUserAssessment:\n      type: object\n      properties:\n        completed:\n          type: boolean\n          format: completed\n          example: true\n        total_questions:\n          type: integer\n          format: total_questions\n          example: 20\n        correct_questions:\n          type: integer\n          format: correct_questions\n          example: 7\n        result:\n          type: integer\n          format: result\n          example: 50",
			"canonicalURL": "/github.com/workshopapps/engineerprofile360.web@c6802e1482b4f0f4719e2dfcd14ac6109c37e90c/-/blob/backend/public/swagger/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/workshopapps/engineerprofile360.web/blob/c6802e1482b4f0f4719e2dfcd14ac6109c37e90c/backend/public/swagger/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 1853: cannot unmarshal !!bool `true` into []string; yaml: line 1895: cannot unmarshal !!bool `true` into []string"
}