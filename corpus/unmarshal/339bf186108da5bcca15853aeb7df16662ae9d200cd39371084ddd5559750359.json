{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/swagger-api/swagger-parser"
		},
		"file": {
			"name": "petstore-3.1_more.yaml",
			"size": 0,
			"path": "modules/swagger-parser-v3/src/test/resources/3.1.0/petstore-3.1_more.yaml",
			"byteSize": 5439,
			"content": "openapi: \"3.1.0\"\ninfo:\n  version: 1.0.0\n  title: Swagger Petstore\n  license:\n    name: MIT\n    identifier: test\nservers:\n  - url: http://petstore.swagger.io/v1\nwebhooks:\n  # Each webhook needs a name\n  newPet:\n    # This is a Path Item Object, the only difference is that the request is initiated by the API provider\n    post:\n      requestBody:\n        description: Information about a new pet in the system\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Pet\"\n      responses:\n        \"200\":\n          description: Return a 200 status to indicate that the data was received successfully\npaths:\n  /pets:\n    get:\n      summary: List all pets\n      operationId: listPets\n      tags:\n        - pets\n      x-extension: test\n      parameters:\n        - name: limit\n          in: query\n          description: How many items to return at one time (max 100)\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: An paged array of pets\n          headers:\n            x-next:\n              description: A link to the next page of responses\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Pets\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    post:\n      summary: Create a pet\n      operationId: createPets\n      tags:\n        - pets\n      responses:\n        \"201\":\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /pets/{petId}:\n    get:\n      summary: Info for a specific pet\n      operationId: showPetById\n      tags:\n        - pets\n      parameters:\n        - name: petId\n          in: path\n          required: true\n          description: The id of the pet to retrieve\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Pets\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\ncomponents:\n  schemas:\n    Pet:\n      required:\n        - id\n        - name\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type:\n          - string\n          - integer\n        tag:\n          type: string\n    Pets:\n      $id: test\n      $anchor: test\n      type: array\n      items:\n        $ref: \"#/components/schemas/Pet\"\n        description: desc\n        format: int32\n    Schema2020_12:\n      type: object\n      title: schema 2020-12\n      required:\n        - country\n      properties:\n        country:\n          enum:\n            - usa\n            - canada\n            - eu\n          default: eu\n          type: string\n          widget: Select\n      if:\n        properties:\n          country:\n            const: canada\n            type: string\n      then:\n        properties:\n          maple_trees:\n            type: number\n      else:\n        required:\n          - accept\n        properties:\n          accept:\n            const: \"true\"\n            type: boolean\n      const: const text\n      examples:\n        - sample1 \n        - sample2\n      $id: schemaId\n      $comment: comment for testing\n      propertyNames:\n        pattern: \"^[A-Za-z_][A-Za-z0-9_]*$\"\n      unevaluatedProperties:\n        type: object\n      unevaluatedItems:\n        type: object\n      prefixItems:\n        - description: Name\n          type: string\n        - description: Age\n          type: integer\n      contains:\n        type: integer\n      maxContains: 4\n      minContains: 2\n      $anchor: anchor text\n      $schema: https://json-schema.org/draft/2020-12/schema\n      contentSchema:\n        type: string\n      dependentSchemas:\n        credit_card:\n          required:\n            - billing_address\n          properties:\n            billing_address:\n              type: string\n      dependentRequired:\n        credit_card:\n          - billing_address\n      patternProperties:\n        ^S_:\n          type: string\n        ^I_:\n          type: integer\n      contentEncoding: base64\n      contentMediaType: text/html\n    Error:\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: integer\n          format: int32\n        message:\n          type: string\n    DiscriminatorExtension:\n      oneOf:\n        - $ref: '#/components/schemas/Cat'\n        - $ref: '#/components/schemas/Dog'\n        - $ref: '#/components/schemas/Lizard'\n      discriminator:\n        propertyName: petType\n        x-extension: test\n  pathItems:\n    pets:\n      get:\n        description: Returns all pets from the system that the user has access to\n        responses:\n          '200':\n            description: A list of pets.\n            content:\n              application/json:\n                schema:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/pet'\n\n",
			"canonicalURL": "/github.com/swagger-api/swagger-parser@87220efc5e2241d2192874f7ff244dc6eb729268/-/blob/modules/swagger-parser-v3/src/test/resources/3.1.0/petstore-3.1_more.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/swagger-api/swagger-parser/blob/87220efc5e2241d2192874f7ff244dc6eb729268/modules/swagger-parser-v3/src/test/resources/3.1.0/petstore-3.1_more.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 1: cannot unmarshal !!seq into string"
}