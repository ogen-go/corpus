{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/vanilla/vanilla"
		},
		"file": {
			"name": "addons.yml",
			"size": 0,
			"path": "applications/dashboard/openapi/addons.yml",
			"byteSize": 9095,
			"content": "openapi: 3.0.2\ninfo:\n    description: API access to your community.\n    title: Vanilla API\n    version: 2.0\nservers:\n    - url: /api/v2\npaths:\n    /addons:\n        get:\n            parameters:\n                - description: The type of addon.\n                  in: query\n                  name: type\n                  schema:\n                      enum:\n                          - addon\n                          - theme\n                          - locale\n                      type: string\n                - description: |\n                      Filter enabled or disabled addons.\n                  in: query\n                  name: enabled\n                  schema:\n                      type: boolean\n                - description: |\n                      Which theme to show the enabled status for.\n                  in: query\n                  name: themeType\n                  schema:\n                      type: string\n                      default: desktop\n                      enum:\n                          - desktop\n                          - mobile\n            responses:\n                \"200\":\n                    content:\n                        \"application/json\":\n                            schema:\n                                items:\n                                    $ref: \"#/components/schemas/Addon\"\n                                type: array\n                    description: Success\n            tags:\n                - Addons\n            summary: List addons.\n    \"/addons/{addonID}\":\n        get:\n            parameters:\n                - description: |\n                      The ID of the addon.\n                  in: path\n                  name: addonID\n                  required: true\n                  schema:\n                      minLength: 1\n                      type: string\n                - description: |\n                      Which theme to show the enabled status for.\n                  in: query\n                  name: themeType\n                  schema:\n                      type: string\n                      default: desktop\n                      enum:\n                          - desktop\n                          - mobile\n            responses:\n                \"200\":\n                    content:\n                        \"application/json\":\n                            schema:\n                                $ref: \"#/components/schemas/Addon\"\n                    description: Success\n            tags:\n                - Addons\n            summary: Get an addon.\n        patch:\n            parameters:\n                - description: The ID of the addon.\n                  in: path\n                  name: addonID\n                  required: true\n                  schema:\n                      minLength: 1\n                      type: string\n            responses:\n                \"200\":\n                    content:\n                        \"application/json\":\n                            schema:\n                                items:\n                                    $ref: \"#/components/schemas/Addon\"\n                                type: array\n                    description: Success\n            tags:\n                - Addons\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            properties:\n                                enabled:\n                                    description: Enable or disable the addon.\n                                    type: boolean\n                                themeType:\n                                    type: string\n                                    default: desktop\n                                    description: Which theme type to set.\n                                    enum:\n                                        - desktop\n                                        - mobile\n                            required:\n                                - enabled\n                            type: object\n                required: true\n            summary: Enable or disable an addon.\ncomponents:\n    schemas:\n        Addon:\n            properties:\n                addonID:\n                    description: The ID of the addon used for API calls.\n                    minLength: 1\n                    type: string\n                conflict:\n                    description: An array of addons that conflict with this addon.\n                    items:\n                        properties:\n                            addonID:\n                                description: The ID of the addon used for API calls.\n                                minLength: 1\n                                type: string\n                            constraint:\n                                description: The version requirement.\n                                minLength: 1\n                                type: string\n                            key:\n                                description: The unique key that identifies the addon\n                                minLength: 1\n                                type: string\n                            name:\n                                description: The name of the addon.\n                                minLength: 1\n                                type: string\n                            type:\n                                description: The type of addon.\n                                enum:\n                                    - addon\n                                    - theme\n                                    - locale\n                                minLength: 1\n                                type: string\n                        required:\n                            - addonID\n                            - name\n                            - key\n                            - type\n                            - constraint\n                        type: object\n                    type: array\n                attributes:\n                    type: object\n                    properties:\n                        locale:\n                            type: string\n                description:\n                    description: The addon's description\n                    type: string\n                enabled:\n                    description: Whether or not the addon is enabled.\n                    type: boolean\n                iconUrl:\n                    description: The addon's icon.\n                    format: uri\n                    minLength: 1\n                    type: string\n                key:\n                    description: The unique key that identifies the addon\n                    minLength: 1\n                    type: string\n                name:\n                    description: The name of the addon.\n                    minLength: 1\n                    type: string\n                require:\n                    description: An array of addons that are required to enable the addon.\n                    items:\n                        properties:\n                            addonID:\n                                description: The ID of the addon used for API calls.\n                                minLength: 1\n                                type: string\n                            constraint:\n                                description: The version requirement.\n                                minLength: 1\n                                type: string\n                            key:\n                                description: The unique key that identifies the addon\n                                minLength: 1\n                                type: string\n                            name:\n                                description: The name of the addon.\n                                minLength: 1\n                                type: string\n                            type:\n                                description: The type of addon.\n                                enum:\n                                    - addon\n                                    - theme\n                                    - locale\n                                minLength: 1\n                                type: string\n                        required:\n                            - addonID\n                            - name\n                            - key\n                            - type\n                            - constraint\n                        type: object\n                    type: array\n                type:\n                    description: The type of addon.\n                    enum:\n                        - addon\n                        - theme\n                        - locale\n                    minLength: 1\n                    type: string\n                version:\n                    description: The addon's version.\n                    minLength: 1\n                    type: string\n            required:\n                - addonID\n                - name\n                - key\n                - type\n                - iconUrl\n                - version\n                - enabled\n            type: object\n",
			"canonicalURL": "/github.com/vanilla/vanilla@dfe2732ec86d37eed7eec0956151e79f2f414b4f/-/blob/applications/dashboard/openapi/addons.yml",
			"externalURLs": [
				{
					"url": "https://github.com/vanilla/vanilla/blob/dfe2732ec86d37eed7eec0956151e79f2f414b4f/applications/dashboard/openapi/addons.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: json: line 1:2324: json: unable to unmarshal Go value of type ogen.Spec: spec: json: cannot unmarshal JSON number into Go value of type string"
}