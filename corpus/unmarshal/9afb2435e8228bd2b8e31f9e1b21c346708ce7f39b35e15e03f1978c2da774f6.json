{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "gitlab.com/operator-ict/golemio/code/modules/sorted-waste-stations"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "docs/openapi.yaml",
			"byteSize": 21033,
			"content": "openapi: 3.0.3\r\ninfo:\r\n    title: ‚ôªÔ∏è Sorted Waste Stations\r\n    description: \u003e-\r\n        \u003cp\u003eüí° About 400 containers are equiped with IoT sensors that measure their fullness. Use `?onlyMonitored` parameter to retrieve only these monitored containers. More about this project at \u003ca href=\"https://www.smartprague.eu/projekty/chytry-svoz-odpadu\"\u003eChytr√Ω svoz odpadu\u003c/a\u003e.\u003c/p\u003e\r\n    version: 1.0.0\r\n    contact:\r\n        name: Golemio Prague Data Plaform\r\n        email: golemio@operatorict.cz\r\n        url: https://golemio.cz\r\n\r\nservers:\r\n    - url: https://rabin.golemio.cz/v2\r\n      description: Test (development) server\r\n    - url: https://api.golemio.cz/v2\r\n      description: Main (production) server\r\n\r\ntags:\r\n    - name: ‚ôªÔ∏è Sorted Waste Stations\r\n      description: \u003e-\r\n          üí° About 400 containers are equiped with IoT sensors that measure their\r\n          fullness. Use `?onlyMonitored` parameter to retrieve only these monitored\r\n          containers. More about this project at [Chytr√Ω svoz\r\n          odpadu](https://www.smartprague.eu/projekty/chytry-svoz-odpadu).\r\n\r\npaths:\r\n    /sortedwastestations:\r\n        get:\r\n            summary: GET All Sorted Waste Stations\r\n            description: \"\"\r\n            tags:\r\n                - ‚ôªÔ∏è Sorted Waste Stations\r\n            operationId: getSWStations\r\n            parameters:\r\n                - name: latlng\r\n                  in: query\r\n                  description: \u003e-\r\n                      Sorting by location (Latitude and Longitude separated by comma,\r\n                      latitude first)\r\n                  required: false\r\n                  schema:\r\n                      type: string\r\n                      example: 50.124935,14.457204\r\n                - name: range\r\n                  in: query\r\n                  description: \u003e-\r\n                      Filter by distance from latlng in meters (range query). Depends on\r\n                      the latlng parameter\r\n                  required: false\r\n                  schema:\r\n                      type: integer\r\n                      format: int64\r\n                      example: 5000\r\n                - name: districts\r\n                  in: query\r\n                  description: Filter by Prague city districts (slug) separated by comma\r\n                  required: false\r\n                  schema:\r\n                      type: string\r\n                      example: praha-4\r\n                - name: accessibility\r\n                  in: query\r\n                  description: Filter by accessibility id\r\n                  required: false\r\n                  schema:\r\n                      type: string\r\n                      example: 1\r\n                - name: limit\r\n                  in: query\r\n                  description: \u003e-\r\n                      Limits number of retrieved items. The maximum is 10000 (default\r\n                      value)\r\n                  required: false\r\n                  schema:\r\n                      type: integer\r\n                      format: int64\r\n                      example: 10\r\n                - name: offset\r\n                  in: query\r\n                  description: Number of the first items that are skipped\r\n                  required: false\r\n                  schema:\r\n                      type: integer\r\n                      format: int64\r\n                      example: 0\r\n                - name: onlyMonitored\r\n                  in: query\r\n                  description: \u003e-\r\n                      Filter only stations with at least one \"smart\" container with sensor\r\n                      for measurements and pickups\r\n                  required: false\r\n                  schema:\r\n                      type: boolean\r\n                      example: true\r\n                - name: id\r\n                  in: query\r\n                  description: Main identifier of the station\r\n                  required: false\r\n                  schema:\r\n                      type: string\r\n                      example: 0a292077-4dbd-501a-ac60-d11c80e889c5\r\n                - name: knskoId\r\n                  in: query\r\n                  description: KNSKO identifier of the station\r\n                  required: false\r\n                  schema:\r\n                      type: string\r\n                      example: 15288\r\n            responses:\r\n                \"200\":\r\n                    description: successful operation\r\n                    content:\r\n                        application/json:\r\n                            schema:\r\n                                $ref: \"#/components/schemas/SortedWasteStationFeatureCollection\"\r\n                \"401\":\r\n                    $ref: \"#/components/responses/UnauthorizedError\"\r\n                \"404\":\r\n                    description: Not found\r\n\r\n    /sortedwastestations/measurements:\r\n        get:\r\n            summary: GET All Sorted Waste Measurements\r\n            description: \u003e-\r\n                üí° About 400 containers are equipped with IoT sensors that measure their fullness. Use these endpoints to get measurements from these devices. More about this project at [Chytr√Ω svoz odpadu](https://www.smartprague.eu/projekty/chytry-svoz-odpadu).\r\n            tags:\r\n                - ‚ôªÔ∏è Sorted Waste Stations\r\n            operationId: getSWMeasurements\r\n            parameters:\r\n                - name: containerId\r\n                  in: query\r\n                  description: Lists only measurements from container with this ID\r\n                  required: false\r\n                  schema:\r\n                      type: string\r\n                      example: 1a90b0e0-fabb-5e2e-8cb5-101bee0353dc\r\n                - name: knskoId\r\n                  in: query\r\n                  description: Lists only measurements from container with this KNSKO ID\r\n                  required: false\r\n                  schema:\r\n                      type: string\r\n                      example: 19196\r\n                - name: limit\r\n                  in: query\r\n                  description: Limits number of retrieved items. The maximum is 10000 (default value)\r\n                  required: false\r\n                  schema:\r\n                      type: integer\r\n                      format: int64\r\n                      example: 10\r\n                - name: offset\r\n                  in: query\r\n                  description: Number of the first items that are skipped\r\n                  required: false\r\n                  schema:\r\n                      type: integer\r\n                      format: int64\r\n                      example: 0\r\n                - name: from\r\n                  in: query\r\n                  description: Date in ISO8601, limits data measured from this datetime\r\n                  required: false\r\n                  schema:\r\n                      type: string\r\n                      example: \"2020-05-16T04:27:58.000Z\"\r\n                - name: to\r\n                  in: query\r\n                  description: Date in ISO8601, limits data measured up until this datetime\r\n                  required: false\r\n                  schema:\r\n                      type: string\r\n                      example: \"2020-05-18T04:27:58.000Z\"\r\n            responses:\r\n                \"200\":\r\n                    description: successful operation\r\n                    content:\r\n                        application/json:\r\n                            schema:\r\n                                type: array\r\n                                items:\r\n                                    $ref: \"#/components/schemas/SortedWasteMeasurement\"\r\n                \"401\":\r\n                    $ref: \"#/components/responses/UnauthorizedError\"\r\n                \"404\":\r\n                    description: Not found\r\n\r\n    /sortedwastestations/picks:\r\n        get:\r\n            summary: GET All Sorted Waste Picks\r\n            description: \"\"\r\n            tags:\r\n                - ‚ôªÔ∏è Sorted Waste Stations\r\n            operationId: getSWPicks\r\n            parameters:\r\n                - name: containerId\r\n                  in: query\r\n                  description: Lists only measurements from container with this ID\r\n                  required: false\r\n                  schema:\r\n                      type: string\r\n                      example: 1a90b0e0-fabb-5e2e-8cb5-101bee0353dc\r\n                - name: knskoId\r\n                  in: query\r\n                  description: Lists only measurements from container with this KNSKO ID\r\n                  required: false\r\n                  schema:\r\n                      type: string\r\n                      example: 19196\r\n                - name: limit\r\n                  in: query\r\n                  description: Limits number of retrieved items. The maximum is 10000 (default value)\r\n                  required: false\r\n                  schema:\r\n                      type: integer\r\n                      format: int64\r\n                      example: 10\r\n                - name: offset\r\n                  in: query\r\n                  description: Number of the first items that are skipped\r\n                  required: false\r\n                  schema:\r\n                      type: integer\r\n                      format: int64\r\n                      example: 0\r\n                - name: from\r\n                  in: query\r\n                  description: Date in ISO8601, limits data measured from this datetime\r\n                  required: false\r\n                  schema:\r\n                      type: string\r\n                      example: \"2020-05-16T04:27:58.000Z\"\r\n                - name: to\r\n                  in: query\r\n                  description: Date in ISO8601, limits data measured up until this datetime\r\n                  required: false\r\n                  schema:\r\n                      type: string\r\n                      example: \"2020-05-18T04:27:58.000Z\"\r\n            responses:\r\n                \"200\":\r\n                    description: successful operation\r\n                    content:\r\n                        application/json:\r\n                            schema:\r\n                                type: array\r\n                                items:\r\n                                    $ref: \"#/components/schemas/SortedWastePick\"\r\n                \"401\":\r\n                    $ref: \"#/components/responses/UnauthorizedError\"\r\n                \"404\":\r\n                    description: Not found\r\n\r\n    /sortedwastestations/pickdays:\r\n        get:\r\n            summary: GET Sorted Waste Pickdays\r\n            description: \"\"\r\n            tags:\r\n                - ‚ôªÔ∏è Sorted Waste Stations\r\n            operationId: getSWPickDays\r\n            parameters:\r\n                - name: sensoneoCode\r\n                  in: query\r\n                  description: Lists only pick days for container with this sensoneoCode\r\n                  required: false\r\n                  schema:\r\n                      type: string\r\n                      example: 0001/ 002C01583\r\n                - name: knskoId\r\n                  in: query\r\n                  description: Lists only pick days for container with this KNSKO ID\r\n                  required: false\r\n                  schema:\r\n                      type: string\r\n                      example: 15292\r\n            responses:\r\n                \"200\":\r\n                    description: successful operation\r\n                    content:\r\n                        application/json:\r\n                            schema:\r\n                                type: array\r\n                                items:\r\n                                    $ref: \"#/components/schemas/SortedWastePickDay\"\r\n                \"401\":\r\n                    $ref: \"#/components/responses/UnauthorizedError\"\r\n                \"404\":\r\n                    description: Not found\r\n\r\ncomponents:\r\n    responses:\r\n        UnauthorizedError:\r\n            description: API key is missing or invalid\r\n            headers:\r\n                WWW_Authenticate:\r\n                    schema:\r\n                        type: string\r\n\r\n    schemas:\r\n        SortedWasteStationFeatureCollection:\r\n            type: object\r\n            properties:\r\n                features:\r\n                    type: array\r\n                    items:\r\n                        $ref: \"#/components/schemas/SortedWasteStationFeature\"\r\n                type:\r\n                    type: string\r\n                    example: FeatureCollection\r\n\r\n        SortedWasteStationFeature:\r\n            type: object\r\n            properties:\r\n                geometry:\r\n                    type: object\r\n                    properties:\r\n                        coordinates:\r\n                            type: array\r\n                            items:\r\n                                type: number\r\n                                example: [14.416880835710145, 50.089021646755796]\r\n                        type:\r\n                            type: string\r\n                            example: Point\r\n                properties:\r\n                    $ref: \"#/components/schemas/SortedWasteStation\"\r\n                type:\r\n                    type: string\r\n                    example: Feature\r\n\r\n        SortedWasteStation:\r\n            type: object\r\n            properties:\r\n                accessibility:\r\n                    type: object\r\n                    properties:\r\n                        description:\r\n                            type: string\r\n                            example: P≈ô√≠jem odpadu\r\n                        id:\r\n                            type: integer\r\n                            format: int64\r\n                            example: 1\r\n                    required:\r\n                        - description\r\n                        - id\r\n                containers:\r\n                    type: array\r\n                    items:\r\n                        $ref: \"#/components/schemas/SortedWasteStationContainer\"\r\n                district:\r\n                    type: string\r\n                    example: praha-13\r\n                id:\r\n                    type: string\r\n                    example: dd08a6a7-1241-568a-9b1b-f384d69c358a\r\n                    description: station id\r\n                name:\r\n                    type: string\r\n                    example: Sbƒõrn√Ω dv≈Ør hl. m. Prahy ‚Äì are√°l skl√°dky ƒé√°blice\r\n                station_number:\r\n                    type: string\r\n                    example: 0001/ 001\r\n                updated_at:\r\n                    type: string\r\n                    example: \"2019-05-18T07:38:37.000Z\"\r\n                is_monitored:\r\n                    type: boolean\r\n                    example: true\r\n                knsko_id:\r\n                    type: integer\r\n                    format: int64\r\n                    example: 3497\r\n            required:\r\n                - id\r\n                - name\r\n\r\n        SortedWasteStationContainer:\r\n            type: object\r\n            properties:\r\n                cleaning_frequency:\r\n                    type: object\r\n                    properties:\r\n                        id:\r\n                            type: integer\r\n                            format: int64\r\n                            example: 21\r\n                        duration:\r\n                            type: string\r\n                            example: P2W\r\n                        frequency:\r\n                            type: integer\r\n                            format: int64\r\n                            example: 1\r\n                company:\r\n                    type: object\r\n                    properties:\r\n                        email:\r\n                            type: string\r\n                        name:\r\n                            type: string\r\n                        phone:\r\n                            type: string\r\n                        web:\r\n                            type: string\r\n                container_type:\r\n                    type: string\r\n                    example: 3000 L Podzemn√≠ - SV\r\n                description:\r\n                    type: string\r\n                trash_type:\r\n                    type: object\r\n                    properties:\r\n                        description:\r\n                            type: string\r\n                            example: ƒåir√© sklo\r\n                        id:\r\n                            type: integer\r\n                            format: int64\r\n                            example: 7\r\n                last_measurement:\r\n                    type: object\r\n                    properties:\r\n                        measured_at_utc:\r\n                            type: string\r\n                            example: \"2021-08-27T14:00:32.000Z\"\r\n                        percent_calculated:\r\n                            type: integer\r\n                            format: int64\r\n                            example: 62\r\n                        prediction_utc:\r\n                            type: string\r\n                            example: \"2021-05-18T07:38:37.000Z\"\r\n                last_pick:\r\n                    type: object\r\n                    properties:\r\n                        pick_at_utc:\r\n                            type: string\r\n                            example: \"2021-07-09T09:00:37.000Z\"\r\n                knsko_id:\r\n                    type: integer\r\n                    format: int64\r\n                    example: 15288\r\n                container_id:\r\n                    type: string\r\n                    example: dc532519-f2bd-5ab2-b049-132bad684dab\r\n                sensor_code:\r\n                    type: string\r\n                    example: 0006/ 016C00214\r\n                sensor_supplier:\r\n                    type: string\r\n                    example: sensoneo\r\n                sensor_id:\r\n                    type: string\r\n                    example: 29790\r\n\r\n        SortedWasteMeasurement:\r\n            type: object\r\n            properties:\r\n                id:\r\n                    type: string\r\n                    example: 41fa5890-527a-5c5f-8fc3-2ecd6bd4a8fa\r\n                    description: container id\r\n                sensor_code:\r\n                    type: string\r\n                    example: 0009/ 157C00353\r\n                percent_calculated:\r\n                    type: integer\r\n                    format: int64\r\n                    example: 67\r\n                upturned:\r\n                    type: integer\r\n                    format: int64\r\n                    example: 0\r\n                temperature:\r\n                    type: integer\r\n                    format: int64\r\n                    example: 15\r\n                battery_status:\r\n                    type: number\r\n                    multipleOf: 0.01\r\n                    example: 3.76\r\n                measured_at_utc:\r\n                    type: string\r\n                    example: \"2019-05-17T15:11:27.000Z\"\r\n                prediction_utc:\r\n                    type: string\r\n                    description: vendor prediction of maximum fullness\r\n                    example: \"2019-05-18T07:38:37.000Z\"\r\n                firealarm:\r\n                    type: number\r\n                    example: 0\r\n            required:\r\n                - id\r\n                - sensor_code\r\n                - percent_calculated\r\n                - measured_at_utc\r\n\r\n        SortedWastePick:\r\n            type: object\r\n            properties:\r\n                id:\r\n                    type: string\r\n                    example: 41fa5890-527a-5c5f-8fc3-2ecd6bd4a8fa\r\n                    description: container id\r\n                pick_minfilllevel:\r\n                    type: integer\r\n                    format: int64\r\n                    example: 30\r\n                decrease:\r\n                    type: integer\r\n                    format: int64\r\n                    example: 20\r\n                sensor_code:\r\n                    type: string\r\n                    example: 0005/ 025C00155\r\n                pick_at_utc:\r\n                    type: string\r\n                    example: \"2019-05-18T04:27:58.000Z\"\r\n                percent_before:\r\n                    type: integer\r\n                    format: int64\r\n                    example: 60\r\n                percent_now:\r\n                    type: integer\r\n                    format: int64\r\n                    example: 0\r\n                event_driven:\r\n                    type: boolean\r\n                    example: false\r\n            required:\r\n                - id\r\n                - sensor_code\r\n                - pick_at_utc\r\n\r\n        SortedWastePickDay:\r\n            type: object\r\n            properties:\r\n                knsko_id:\r\n                    type: integer\r\n                    format: int64\r\n                    example: 15292\r\n                sensoneo_code:\r\n                    type: string\r\n                    example: 0001/ 002C01583\r\n                generated_dates:\r\n                    type: array\r\n                    items:\r\n                        type: string\r\n                        format: date\r\n                        example: \"2021-01-28\"\r\n"
		}
	},
	"Error": "unmarshal: callback: json: cannot unmarshal number 0.01 into Go struct field Schema.multipleOf of type int"
}