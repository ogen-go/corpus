{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/SecConNet/mahiru"
		},
		"file": {
			"name": "schemas.yaml",
			"size": 0,
			"path": "mahiru/rest/schemas.yaml",
			"byteSize": 14596,
			"content": "openapi: \"3.0.0\"\n\ninfo:\n    version: 0.1.0\n    title: EFDDM Site external API\n\ncomponents:\n  schemas:\n    # Decided not to use OpenAPI polymorphism support, this is simpler\n    # and only marginally more typing, and we're doing serialisation by\n    # hand anyway.\n    InAssetCollection:\n      type: object\n      required:\n        - type\n        - signature\n        - asset\n        - collection\n      properties:\n        type:\n          description: Type of rule, always 'InAssetCollection'\n          type: string\n        signature:\n          description: BASE64url serialised signature\n          type: string\n        asset:\n          description: Id of the asset that is in the collection\n          type: string\n        collection:\n          description: Collection the asset is in\n          type: string\n\n    InPartyCollection:\n      type: object\n      required:\n        - type\n        - signature\n        - party\n        - collection\n      properties:\n        type:\n          description: Type of rule, always 'InPartyCollection'\n          type: string\n        signature:\n          description: BASE64url serialised signature\n          type: string\n        party:\n          description: Id of the party that is in the collection\n          type: string\n        collection:\n          description: Collection the party is in\n          type: string\n\n    MayAccess:\n      type: object\n      required:\n        - type\n        - signature\n        - site\n        - asset\n      properties:\n        type:\n          description: Type of rule, always 'MayAccess'\n          type: string\n        signature:\n          description: BASE64url serialised signature\n          type: string\n        site:\n          description: Id of the site that may access the asset\n          type: string\n        asset:\n          description: Asset that may be accessed\n          type: string\n\n    MayUse:\n      type: object\n      required:\n        - type\n        - signature\n        - party\n        - asset\n        - conditions\n      properties:\n        type:\n          description: Type of rule, always 'MayUse'\n          type: string\n        signature:\n          description: BASE64url serialised signature\n          type: string\n        party:\n          description: Id of the site that may access the asset\n          type: string\n        asset:\n          description: Asset that may be accessed\n          type: string\n        conditions:\n          description: Conditions of use\n          type: string\n\n    ResultOfIn:\n      type: object\n      required:\n        - type\n        - signature\n        - data_asset\n        - compute_asset\n        - output\n        - collection\n      properties:\n        type:\n          description: \u003e-\n            Type of rule, always 'ResultOfDataIn' or 'ResultOfComputeIn'\n        signature:\n          description: BASE64url serialised signature\n          type: string\n        data_asset:\n          description: Id of the data asset used as input\n          type: string\n        compute_asset:\n          description: Id of the compute asset used to processs it\n          type: string\n        output:\n          description: Name of the output the rule governs.\n          type: string\n        collection:\n          description: Id of the collection the result is in\n          type: string\n\n    Rule:\n      oneOf:\n        - $ref: '#/components/schemas/InAssetCollection'\n        - $ref: '#/components/schemas/InPartyCollection'\n        - $ref: '#/components/schemas/MayAccess'\n        - $ref: '#/components/schemas/MayUse'\n        - $ref: '#/components/schemas/ResultOfIn'\n\n    PolicyUpdate:\n      type: object\n      required:\n        - from_version\n        - to_version\n        - valid_until\n        - created\n        - deleted\n      properties:\n        from_version:\n          description: Version this update applies to\n          type: integer\n        to_version:\n          description: Version this update updates to\n          type: integer\n        valid_until:\n          description: Time until which the new version is valid\n          type: string\n          format: date-time\n        created:\n          description: Objects that were created since the last version\n          type: array\n          items:\n            oneOf:\n              - \"$ref\": \"#/components/schemas/InAssetCollection\"\n              - \"$ref\": \"#/components/schemas/InPartyCollection\"\n              - \"$ref\": \"#/components/schemas/MayAccess\"\n              - \"$ref\": \"#/components/schemas/MayUse\"\n              - \"$ref\": \"#/components/schemas/ResultOfIn\"\n        deleted:\n          description: Objects that were deleted since the last version\n          type: array\n          items:\n            oneOf:\n              - \"$ref\": \"#/components/schemas/InAssetCollection\"\n              - \"$ref\": \"#/components/schemas/InPartyCollection\"\n              - \"$ref\": \"#/components/schemas/MayAccess\"\n              - \"$ref\": \"#/components/schemas/MayUse\"\n              - \"$ref\": \"#/components/schemas/ResultOfIn\"\n\n    ComputeMetadata:\n      type: object\n      required:\n        - output_base\n      properties:\n        output_base:\n          description: Assets to use as base images for outputs\n          type: object\n          additionalProperties:\n            type: string\n\n    DataMetadata:\n      type: object\n      required:\n        - job\n        - item\n      properties:\n        job:\n          description: A minimal job that will generate this asset\n          type: object\n          schema:\n            \"$ref\": \"#/components/schemas/Job\"\n        item:\n          description: \u003e-\n            An item in the job's workflow corresponding to this asset\n          type: string\n\n    Metadata:\n      oneOf:\n        - $ref: '#/components/schemas/ComputeMetadata'\n        - $ref: '#/components/schemas/DataMetadata'\n\n    Asset:\n      type: object\n      required:\n        - id\n        - kind\n        - data\n        - image_location\n        - metadata\n      properties:\n        id:\n          description: Identifier for this asset\n          type: string\n        kind:\n          description: 'Kind of asset (\"compute\" or \"data\")'\n          type: string\n        data:\n          description: Data related to the asset\n          # This is currently null for compute objects, and the only way I\n          # could get it to match was with this double nullable\n          # declaration...\n          anyOf:\n            - type: \"number\"\n            - type: array\n              items:\n                type: number\n              nullable: true\n          nullable: true\n        image_location:\n          description: URL to download the image from\n          type: string\n          nullable: true\n        metadata:\n          type: object\n          schema:\n            \"$ref\": \"#/components/schemas/Metadata\"\n\n    ExecutionRequest:\n      type: object\n      required:\n        - job\n        - plan\n      properties:\n        job:\n          description: Job to run a part of\n          type: object\n          schema:\n            \"$ref\": \"#/components/schemas/Job\"\n        plan:\n          description: Execution plan for the job.\n          type: object\n          schema:\n            \"$ref\": \"#/components/schemas/Plan\"\n\n    Job:\n      type: object\n      required:\n        - workflow\n        - inputs\n      properties:\n        workflow:\n          description: Workflow to run a part of\n          type: object\n          schema:\n            \"$ref\": \"#/components/schemas/Workflow\"\n        inputs:\n          description: Map of workflow inputs to asset ids\n          type: object\n          additionalProperties:\n            type: string\n\n    Workflow:\n      type: object\n      required:\n        - inputs\n        - outputs\n        - steps\n      properties:\n        inputs:\n          description: Names of the workflow's inputs\n          type: array\n          items:\n            type: string\n        outputs:\n          description: \u003e-\n            Map of workflow output names to corresponding step output names\n            of the form step.output\n          type: object\n          additionalProperties:\n            type: string\n        steps:\n          description: The steps making up the workflow\n          type: array\n          items:\n            type: object\n            schema:\n              \"$ref\": \"#/components/schemas/WorkflowStep\"\n\n    WorkflowStep:\n      type: object\n      required:\n        - name\n        - inputs\n        - outputs\n        - compute_asset_id\n      properties:\n        name:\n          description: Name of the step, so it can be referred to\n          type: string\n        inputs:\n          description: \u003e-\n            Map of step parameter names to references to their sources\n          type: object\n          additionalProperties:\n            type: string\n        outputs:\n          description: \u003e-\n            Map of step output names to references to their base assets\n          type: object\n          additionalProperties:\n            type: string\n            nullable: true\n        compute_asset_id:\n          description: Id of the compute asset used by this step\n          type: string\n\n    Plan:\n      type: object\n      required:\n        - step_sites\n      properties:\n        step_sites:\n          description: Maps step names to the site to run them at\n          type: object\n          additionalProperties:\n            type: string\n\n    JobResult:\n      type: object\n      required:\n        - job\n        - plan\n        - is_done\n        - outputs\n      properties:\n        job:\n          description: The job as submitted\n          type: object\n          schema:\n            \"$ref\": \"#/components/schemas/Job\"\n        plan:\n          description: The plan according to which the job is executed\n          type: object\n          schema:\n            \"$ref\": \"#/components/schemas/Plan\"\n        is_done:\n          description: Whether the job has finished running\n          type: boolean\n        outputs:\n          description: The job's outputs by name\n          type: object\n          additionalProperties:\n            \"$ref\": \"#/components/schemas/Asset\"\n\n    # Definitions for the registry\n    Party:\n      type: object\n      required:\n        - id\n        - signature\n        - namespace\n        - main_certificate\n        - user_ca_certificate\n        - user_certificates\n      properties:\n        id:\n          description: Identifier of the party\n          type: string\n        signature:\n          description: BASE64url serialised signature\n          type: string\n        namespace:\n          description: The party's namespace\n          type: string\n        main_certificate:\n          description: The party's PEM-encoded main certificate\n          type: string\n        user_ca_certificate:\n          description: The party's PEM-encoded user CA certificate\n          type: string\n        user_certificates:\n          description: The party's PEM-encoded user certificates\n          type: array\n          items: string\n\n    Site:\n      type: object\n      required:\n        - id\n        - signature\n        - owner_id\n        - admin_id\n        - endpoint\n        - https_certificate\n        - has_runner\n        - has_store\n        - has_policies\n      properties:\n        id:\n          description: Identifier of the site\n          type: string\n        signature:\n          description: BASE64url serialised signature\n          type: string\n        owner_id:\n          description: Identifier of the party which owns this site\n          type: string\n        admin_id:\n          description: Identifier of the party which administrates this site\n          type: string\n        endpoint:\n          description: \u003e-\n            REST endpoint at which the site may be contacted.\n          type: string\n          format: uri\n        https_certificate:\n          description: The site's current HTTPS certificate, in PEM format\n          type: string\n        has_runner:\n          description: Whether the site has a runner\n          type: boolean\n        has_store:\n          description: Whether the site has a store\n          type: boolean\n        has_policies:\n          description: Whether the site serves policies\n          type: boolean\n\n    RegistryUpdate:\n      type: object\n      required:\n        - from_version\n        - to_version\n        - valid_until\n        - created\n        - deleted\n      properties:\n        from_version:\n          description: Version this update applies to\n          type: integer\n        to_version:\n          description: Version this update updates to\n          type: integer\n        valid_until:\n          description: Time until which the new version is valid\n          type: string\n          format: date-time\n        created:\n          description: Objects that were created since the last version\n          type: array\n          items:\n            oneOf:\n              - \"$ref\": \"#/components/schemas/Party\"\n              - \"$ref\": \"#/components/schemas/Site\"\n        deleted:\n          description: Objects that were deleted since the last version\n          type: array\n          items:\n            oneOf:\n              - \"$ref\": \"#/components/schemas/Party\"\n              - \"$ref\": \"#/components/schemas/Site\"\n\n    WireGuardEndpoint:\n      type: object\n      required:\n        - address\n        - port\n        - key\n      properties:\n        address:\n          description: IP address of the endpoint to connect to\n          type: string\n        port:\n          description: Port of the endpoint to connect to\n          type: integer\n        key:\n          description: WireGuard key of the endpoint to connect to\n          type: string\n\n    WireGuardConnectionRequest:\n      type: object\n      required:\n        - net\n        - endpoint\n      properties:\n        net:\n          description: VPN network id to use for the connection\n          type: integer\n        endpoint:\n          description: WireGuard endpoint for the client side\n          type: object\n          schema:\n            \"$ref\": \"#/components/schemas/WireGuardEndpoint\"\n\n    ConnectionRequest:\n      oneOf:\n        - $ref: '#/components/schemas/WireGuardConnectionRequest'\n\n    WireGuardConnectionInfo:\n      type: object\n      required:\n        - conn_id\n        - endpoint\n      properties:\n        conn_id:\n          description: Connection id, a URL identifying this connection.\n          type: string\n          format: uri\n        endpoint:\n          description: WireGuard endpoint for the server side\n          type: object\n          schema:\n            \"$ref\": \"#/components/schemas/WireGuardEndpoint\"\n\n    ConnectionInfo:\n      oneOf:\n        - $ref: '#/components/schemas/WireGuardConnectionInfo'\n",
			"canonicalURL": "/github.com/SecConNet/mahiru@22f9533a506e039237227ca66faea5375cce5fcb/-/blob/mahiru/rest/schemas.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/SecConNet/mahiru/blob/22f9533a506e039237227ca66faea5375cce5fcb/mahiru/rest/schemas.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 401: cannot unmarshal !!str `string` into ogen.Schema"
}