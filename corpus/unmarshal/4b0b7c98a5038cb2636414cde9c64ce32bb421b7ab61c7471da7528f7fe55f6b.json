{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Rebilly/api-definitions"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi/openapi.yaml",
			"byteSize": 60189,
			"content": "openapi: 3.0.3\ninfo:\n  version: \"2.1\"\n  title: Rebilly API\n  contact:\n    name: \"Rebilly API Support\"\n    url: \"https://www.rebilly.com/contact/\"\n    email: \"integrations@rebilly.com\"\n  license:\n    name: \"Rebilly\"\n    url: 'https://www.rebilly.com/api-license/'\n  termsOfService: 'https://www.rebilly.com/terms-of-use/'\n  x-logo:\n    url: 'https://rebilly-core.redoc.ly/rb_apiLogo.svg'\n    backgroundColor: '#0033A0'\n  description:\n    $ref: description.md\n\nsecurity:\n  - SecretApiKey: []\n  - JWT: []\n\nservers:\n  - url: 'https://api-sandbox.rebilly.com/organizations/{organizationId}'\n    description: Sandbox server\n    variables:\n      organizationId:\n        default: unknown\n        description: |-\n          Your organization ID.\n          An organization is an entity that represents your company.\n          For more information, see [Obtain your organization ID](https://www.rebilly.com/settings/organizations-and-websites/#obtain-your-organization-id-and-website-id).\n  - url: 'https://api.rebilly.com/organizations/{organizationId}'\n    description: Live server\n    variables:\n      organizationId:\n        default: unknown\n        description: |-\n          Your organization ID.\n          An organization is an entity that represents your company.\n          For more information, see [Obtain your organization ID](https://www.rebilly.com/settings/organizations-and-websites/#obtain-your-organization-id-and-website-id).\n\ncomponents:\n  securitySchemes:\n    JWT:\n      $ref: components/securitySchemes/JWT.yaml\n    ApplicationJWT:\n      $ref: components/securitySchemes/ApplicationJWT.yaml\n    PublishableApiKey:\n      $ref: components/securitySchemes/PublishableApiKey.yaml\n    SecretApiKey:\n      $ref: components/securitySchemes/SecretApiKey.yaml\n    CustomerJWT:\n      $ref: components/securitySchemes/CustomerJWT.yaml\n\ntags:\n  - name: AML\n    description: |-\n      Use Anti-Money Laundering (AML) operations to screen customers\n      and help prevent your business from becoming directly or\n      indirectly involved in criminal activity.\n\n      Use AML operations during customer creation, and some\n      transaction processing, to help determine if a potential\n      customer (lead), or customer, has political or economic sanctions\n      against them.\n\n      AML operations search the following for screening purposes:\n      Politically Exposed Persons (PEPs) lists, sanction lists,\n      and adverse media lists.\n  - name: Blocklists\n    description: |-\n      Use blocklists to prevent fraud and criminal activity.\n\n      Blocklists are lists of customer attribute values that are\n      blocked from buying from you. For example, if a customer\n      attempts to make a purchase from you with a credit card that is\n      in a blocklist, the transaction is blocked and will not be\n      processed.\n\n      Before a new transaction is processed in Rebilly, blocklists\n      are examined to check for attributes related to the entity.\n      If a match is detected, the operation is aborted. A blocklist\n      that expires after a period of time is called a greylist.\n  - name: Coupons\n    description: |-\n      Use coupons to reward customers, generate sales, or to test\n      new pricing strategies. Coupons enable you to apply different\n      types of discounts to invoices, subscriptions, and pricing\n      plans.\n\n      Redeemed coupons are attached to a customer's account.\n      Depending on the coupon's restrictions, the redeemed coupons\n      are then applied from the customer's account to subsequent\n      invoices or subscriptions. Redeemed coupons can only be applied\n      to invoices of the same currency.\n\n      Once a coupon is redeemed it cannot be modified. You may\n      deactivate a coupon or create a new coupon, but you cannot\n      reuse the same coupon code. If you have a use case where you\n      must reuse the same code,\n      [contact Rebilly](https://www.rebilly.com/contact/).\n  - name: Customers\n    description: |-\n      Use these operations to manage customers. A customer is an\n      entity that purchases goods or services from you (a merchant),\n      and is the payee in any transaction that is credited to you.\n      Customers are associated with payment instruments,\n      subscriptions, invoices, and other related resources.\n\n      In other systems, customers may be referred to as accounts,\n      clients, members, patrons, or players. For information on the\n      customer resource, see\n      [Resources](https://www.rebilly.com/docs/dev-docs/concepts/#resources).\n  - name: Customers timeline\n    description: \u003e-\n      Use customer timelines to maintain an audit trail of changes and\n      activity for each customer.\n  - name: Orders timeline\n    description: \u003e-\n      Use order timelines to maintain an audit trail of changes and\n      activity for each order.\n  - name: Invoices timeline\n    description: \u003e-\n      Use invoice timelines to maintain an audit trail of changes and\n      activity for each invoice.\n  - name: Transactions timeline\n    description: \u003e-\n      Use transaction timelines to maintain an audit trail of changes\n      and activity for each transaction.\n  - name: Credit memos timeline\n    description: \u003e-\n      Use credit memo timelines to maintain an audit trail of changes\n      and activity for each credit memo. Credit memos are a means of\n      providing a customer with store credit.\n  - name: Rules timeline\n    description: \u003e-\n      Use rule timelines to maintain an audit trail of changes and\n      activity for each rule.\n  - name: Gateway accounts timeline\n    description: \u003e-\n      Use gateway account timelines to maintain an audit trail of\n      changes and activity for each gateway account.\n  - name: KYC documents\n    description: |-\n      Use Know Your Customer (KYC) documents to verify your customers\n      identity. The KYC document operations generate a signed link to\n      the Rebilly\n      [KYC document gatherer](https://www.rebilly.com/docs/kyc-and-aml/kyc-document-gatherer/).\n\n      Document types:\n        - `identity-proof`: Validates a customer's identity.\n        - `address-proof`: Validates a customer's address.\n        - `purchase-proof`: Validates a customer's purchase.\n        - `funds-proof`: Validates that a customer has funds.\n        - `credit-file-proof`: Verifies that there is an existing\n        credit file with two sources that match the customer's name,\n        DOB, and address.\n\n      Rebilly parses and analyzes the documents and accepts or\n      rejects them according to a configurable scoring algorithm.\n      When all document types in a KYC request are accepted,\n      the status is fulfilled, and the\n      [KYC request fulfilled webhook](https://www.rebilly.com/docs/dev-docs/api/operation/kyc-request-fulfilled/)\n      is emitted.\n\n      ### Credit file proof\n\n      The `credit-file-proof` KYC document request type is only\n      available in the API, this option is not available in the\n      [KYC document gatherer](https://www.rebilly.com/docs/kyc-and-aml/kyc-document-gatherer/).\n      This request verifies that there is an existing credit\n      file with two sources that match the person's name, date of birth, and\n      address.\n\n      In Canada, to meet FINTRAC requirements, the `credit-file-proof`\n      KYC document request verifies the customer's name, address,\n      and date of birth with a credit agency.\n\n      If `credit-file-proof` is requested in combination with\n      `identity-proof` and `address-proof`, `credit-file-proof` is\n      attempted first. If `credit-file-proof` validates the identity\n      and address, the KYC request is considered fulfilled. If the\n      request is not fulfilled, redirect your customer to the KYC\n      document gatherer to collect their KYC documents.\n\n  - name: Customer authentication\n    description: \u003e-\n      Use these operations to validate the identity of users and\n      manage authentication credentials.\n  - name: Custom fields\n    description: |-\n      Use custom fields to extend a resource scheme to include custom\n      data that is not provided as a common field. Depending on the\n      resource on which the custom field is added, it will be\n      available in the Rebilly UI.\n\n      Example: A custom field called `preferredCommunicationChannel`\n      is added to the customer resource. It has two allowed values,\n      which are 'email' and 'phone'.\n\n      ```js\n      {\n        \"customFields\": {\n            \"preferredCommunicationChannel\": \"email\"\n        }\n      }\n      ```\n\n      For detailed information on Rebilly resources, see\n      [Resources](https://www.rebilly.com/docs/dev-docs/concepts/#resources).\n  - name: Disputes\n    description: |-\n      Use these operations to manage disputes. A dispute occurs when a\n      customer contests a charge to their account. The dispute and\n      related information is made available to the merchant by the\n      bank or credit card company. The merchant then has the option to\n      represent the charge and win the case. This process is called\n      dispute resolution. If the merchant is unable to represent the\n      charge, the card issuer will typically reverse the sale and add\n      fees on top of the charge. This process is called a chargeback.\n  - name: Files\n    description: |-\n      Use the file entity to store files and related metadata. Files\n      can be sorted by size, MIME-type, user-defined tags, and\n      description.\n\n      The following methods are available to upload files:\n      multipart/form-data encoded form, RAW POST \u0026mdash; by sending\n      the file contents as the POST body, and fetching from URL\n      \u0026mdash; by providing the file URL using the 'url' parameter.\n\n      Use the attachments entity to link a file to one or multiple\n      objects, such as: customer, dispute, transaction,\n      order, plan, product, invoice, or timeline comment. Attachments enable you\n      to quickly find and use files related to specific entities.\n  - name: Invoices\n    description: |-\n      Use invoices to bill for the goods or services that you provide.\n      If your invoice includes subscription items, it also includes\n      the corresponding service periods and prices. For information on\n      the invoice resource, see\n      [Resources](https://www.rebilly.com/docs/dev-docs/concepts/#resources).\n  - name: Credit memos\n    description: |-\n      Use credit memos to provide a customer with store\n      credit. A common use case for using a credit memo is to provide\n      a customer with store credit, rather than a refund, if the\n      customer pays more than they owe or returns a product. For\n      information on the credit memo resource, see\n      [Resources](https://www.rebilly.com/docs/dev-docs/concepts/#resources).\n  - name: Payment instruments\n    description: |-\n      Use these operations to manage payment instruments. Payment\n      instrument is a term which describes any means of making\n      a digital payment, such as: credit cards, debit cards,\n      direct debits, payment service providers, and digital wallets.\n\n      A payment instrument is not a resource. It is a term used to\n      describe a specific set of resources, such as payment cards\n      and bank accounts. For more information on payment\n      instruments, see\n      [Payment instruments](https://www.rebilly.com/docs/dev-docs/concepts/#payment-instruments).\n  - name: Payment tokens\n    description: |-\n      Use payment tokens to reduce the scope of\n      [PCI DSS compliance](https://www.rebilly.com/docs/pci-compliance/).\n\n      A payment token can be made using a different authentication\n      scheme, which enables you to create a payment token directly\n      from the browser, and bypasses the need to send\n      sensitive cardholder info to your servers. We recommend using\n      this with the FramePay library, which helps you set a form\n      into this API resource and create payment tokens. For more\n      information, see the public key authentication scheme in the \n      Authentication section.\n  - name: Products\n    description: |-\n      Use products to describe the goods and services that your\n      business sells. A product also describes sales items on invoices\n      and receipts. Product pricing is defined in\n      [plans](https://www.rebilly.com/docs/dev-docs/api/tag/Plans/).\n      A product may have one or many plans.\n\n      For information on the product resource, see\n      [Product](https://www.rebilly.com/docs/dev-docs/concepts/#products).\n  - name: Plans\n    description: |-\n      Use pricing plans to describe how the customer must pay for\n      [products](https://www.rebilly.com/docs/dev-docs/api/tag/Products/).\n\n      Rebilly provides the following plan types:\n\n      - Trial only: Use this plan to create and offer a free or\n      discounted trial period for your product. For example, a free 2\n      week trail of an internet service. After the trial, the customer\n      can choose to sign up for a paid subscription, or stop using the\n      service.\n      - Recurring: Use this plan to create and offer a subscription\n      for your product. For example, a monthly subscription to an\n      internet service that is charged at 20 USD per month.\n      - One time sale: Use this plan to create and offer a one-off\n      sale for your products. For example, a one time purchase of two\n      bags of coffee.\n\n      For information on the plans resource, see\n      [Plans](https://www.rebilly.com/docs/dev-docs/concepts/#plans).\n\n      For information on plan pricing, see\n      [Pricing formulas](https://www.rebilly.com/docs/settings/pricing-formulas/).\n  - name: Search\n    description: \u003e-\n      Use search operations to search data on customers, invoices,\n      orders, transactions and more.\n  - name: Shipping rates\n    description: \u003e-\n      Use these operations to manage shipping rates. A shipping rate\n      contains a filter and a pricing for a specific shipping\n      destination.\n  - name: Orders\n    description: |-\n      An order is a customer's request to purchase items. It can\n      contain subscription and one-time sale items. When an order\n      contains one or more subscription items, it is a subscription\n      order.\n\n      An order generates an invoice. A subscription order generates an\n      invoice for each service period.\n      For more information, see\n      [Orders](https://www.rebilly.com/docs/dev-docs/concepts/#orders).\n  - name: Tags\n    description: \u003e-\n      Use tags to organize and categorize customers or KYC documents\n      based on keywords.\n  - name: Transactions\n    description: |-\n      Use these operations to set up payment instruments for payments,\n      authorize and hold funds, capture funds, make payments, make\n      payouts, and refund transactions.\n  - name: Fees\n    description: |-\n      Use fees to reconcile transactions with applicable fees and\n      discount rates. Fees are not applied directly to transaction\n      amounts, they do not modify the transaction amount. Fees help to\n      describe each part of the transaction amount.\n\n      This API is experimental and not guaranteed to be backward\n      compatible.\n  - name: API keys\n    description: |-\n      Use API keys to identify and authenticate applications and users.\n      Always keep your API keys private. When creating API keys,\n      you can restrict them to a given set of permissions.\n      For information on how to create and manage API keys,\n      see [API keys](https://www.rebilly.com/docs/dev-docs/api-keys/).\n\n      In addition to API keys, you may use JSON Web Tokens (JWT)\n      to authenticate to the API. For more information, see\n      [JWT session](https://user-api-docs.rebilly.com/#tag/JWT-Session).\n  - name: Balance transactions\n    description: \u003e-\n      Use these operations to view and manage balance\n      transactions\n\n      This API is experimental and not guaranteed to be backward\n      compatible.\n  - name: Billing portals\n    description: |-\n      Use these operations to create and manage billing portals.\n      Rebilly hosted billing portals provide secure, Rebilly hosted\n      pages, where customers can: view invoices, cancel subscriptions,\n      update payment instruments, and update their address.\n  - name: Checkout forms\n    description: |-\n      Use these operations to create and manage checkout forms.\n      Rebilly hosted checkout forms provide secure and compliant\n      checkouts. Checkout forms are customizable, and use fully\n      responsive design, built-in error messaging, validation, and\n      expedited checkout for returning customers.\n  - name: Email credentials\n    description: \u003e-\n      Use these operations to get, create, and manage SMTP credential\n      hashes.\n  - name: Gateway accounts\n    description: |-\n      Use these operations to manage payment gateway accounts. A\n      payment gateway is a service which enables merchants to\n      receive payments from their customers to their merchant account.\n      A merchant account is a bank account that enables businesses to\n      receive payments. Use payment gateway accounts to connect\n      payment requests to third party networks and platforms.\n  - name: Lists\n    description: |-\n      Use lists to create and maintain sets of values that may be\n      referenced in rule conditions. Commonly used lists contain\n      values related to conditions that target specific properties\n      such as: customers, transactions, or BINs.\n\n      You may grant list edit permissions to members of your team\n      without enabling them to edit rules. This may be useful if your\n      workflow involves frequent updates to value sets that are used\n      in rule or bind conditions. List order may not be maintained and\n      duplicates may be removed.\n\n      For more information, see\n      [Value lists](https://www.rebilly.com/docs/automations/create-a-value-list/#value-lists).\n  - name: Organizations\n    description: |-\n      Use these operations to manage your organizations in Rebilly.\n      An organization is an entity that represents you, or your\n      company, as a merchant. You can have multiple organizations.\n      For more information, see\n      [My organizations and websites](https://www.rebilly.com/docs/settings/organizations-and-websites/).\n\n      Note: Organizations are shared between the live and sandbox\n      environments.\n  - name: Profile\n    description: \u003e-\n      Use these operations to manage user profiles. A profile\n      represents the person that is signed in to Rebilly.\n  - name: Reset password\n    description: \u003e-\n      Use these operations to manage password resets. When a password\n      reset is requested, an email with a token is sent. In the email\n      the user must click a reset link, and then create a new password.\n  - name: Rules\n    description: |-\n      Use rules to automate. In the Rebilly rules engine, an action\n      is an operation that executes when an event occurs. Action and\n      event conditions are defined in rules. Rulesets are collections\n      of rules that are associated with an event. The order in which\n      the rules are placed within a ruleset specifies the execution order.\n\n      For a list of events and related actions, see\n      [Events](https://www.rebilly.com/docs/automations/event-types/).\n  - name: JWT session\n    description: |\n      Use these operations to manage JWT sessions. A session contains\n      a token, which is a JSON Web Token. The token is created  with a\n      user's sign in credentials.\n\n      This token can be used to authenticate to the API. In addition,\n      the session can be set to expire at a particular time. Use the\n      token to authenticate further requests to the Rebilly API.\n\n      The token must be kept private, but can be stored on the\n      user's browser client to simulate a \"session\".\n  - name: Status\n    description: \u003e-\n      Use this operation to check the status of the Rebilly API. No\n      authentication is required.\n  - name: Tracking\n    description: \u003e-\n      Use tracking when debugging and auditing issues. Tracking is a\n      layer for accessing all activity such as: API requests,\n      subscriptions, webhooks, events, and more.\n  - name: Users\n    description: \u003e-\n      Use these operations to manage users. A user is a person who\n      can login to Rebilly, and take actions based on their granted\n      permissions.\n  - name: Websites\n    description: |-\n      Use these operations to manage websites. A website is where\n      your organization obtains a customer. It is also the processor\n      account and billing descriptor used for payment transactions.\n      You can create multiple websites.\n\n      Websites are related to each invoice and each payment\n      gateway account. This enables you to associate gateway accounts\n      with multiple websites, or make them exclusive to particular\n      websites. For more information, see\n      [My organizations and websites](https://www.rebilly.com/docs/settings/organizations-and-websites/).\n  - name: Webhook credentials\n    description: \u003e-\n      Use these operations to manage webhook credential hashes.\n  - name: Webhooks\n    description: |-\n      Use these operations to manage webhooks. Webhooks notify your\n      systems in real-time when certain events occur. For example,\n      when a new transaction occurs or a new subscription is created.\n      Webhooks enable you to collect information about events. Rebilly\n      can send this information by HTTP POST request to a defined URL of\n      your choice.\n  - name: Segments\n    description: |-\n      Use these operations to manage UI segments. A segment is a\n      filtered view of a data set that can be shared with other users.\n      For example, you may create a transactions segment that displays\n      specific columns that are filtered and sorted based on certain\n      criteria, and share it with others in your organization.\n  - name: Memberships\n    description: |-\n      Use these operations to manage user membership within your\n      organizations. Membership describes the relationship between\n      organizations and users. For example, one user could be a member\n      of more than one organization.\n  - name: Roles\n    description: |-\n      Use these operations to manage user roles within your team or\n      organization. Roles are an implementation of the general\n      hierarchical (Role Based Access Control) RBAC. A senior role\n      inherits all of its juniors' Access Control Lists (ACLs) and its\n      own ACL. Junior roles are not influenced by the senior role.\n  - name: Integrations\n    description: |-\n      Use these operations to manage third-party apps that are\n      integrated to your Rebilly account. For more information on\n      third-party apps, and how to integrate them, see\n      [Integrations](https://www.rebilly.com/docs/automations/integrations/).\n  - name: Broadcast messages\n    description: |-\n      Use broadcast messages to notify customers and leads about\n      upcoming promotions, service updates, and events.\n      Broadcast messages are emails that are sent to a specific group\n      of customers, or all customers. For more information, see\n      [Create a broadcast message](https://www.rebilly.com/docs/automations/email-notifications/#create-a-broadcast-messages).\n  - name: Email delivery settings\n    description: |-\n      Use email delivery settings to configure from which email\n      address notifications and broadcast message are sent. In\n      Rebilly, this email address is referred to as a \"From address\".\n      Supported email service providers are: SMTP, Mailgun, SendGrid,\n      AWS SES, Postmark, and Rebilly.\n  - name: Email messages\n    description: \u003e-\n      Use email messages to email customers directly.\n  - name: Email notifications\n    description: |-\n      Use email notifications to keep customers\n      informed on events, and to inform them of events that may\n      require action on their end. Email notifications are targeted\n      email messages that can be plain text or HTML.\n\n      Email notifications can also be used to notify teammates about\n      new customers, blocklist matches, risk score changes, and more.\n      For more information, see\n      [Email notifications](https://www.rebilly.com/docs/automations/email-notifications/).\n  - name: Plaid credentials\n    description: |-\n      Use these operations to manage your Plaid account credentials.\n      The Plaid integration provides customer bank credential\n      verification, and simplifies the process of providing\n      credentials for your customers. For more information, see\n      [Plaid integration](https://www.rebilly.com/docs/automations/plaid-integration/).\n  - name: Experian credentials\n    description: |-\n      Use these operations to manage your Experian account\n      credentials. The Experian integration provides identity\n      verification. For more information, see\n      [Experian integration](https://www.rebilly.com/docs/automations/experian-integration/#experian-integration).\n  - name: TaxJar credentials\n    description: |-\n      Use these operations to manage your TaxJar account credentials.\n      The TaxJar integration enables you to calculate taxes and create\n      transactions for the Sales Tax AutoFile feature in your TaxJar\n      account. For more information, see\n      [TaxJar integration](https://www.rebilly.com/docs/automations/tax-jar-integration/#taxjar-integration).\n  - name: Metadata\n    description: \u003e-\n      Use these operations to retrieve and manage metadata. Metadata\n      is structured information on other data.\n  - name: Custom domains\n    description: |-\n      Use custom domains to configure and use your own domain for\n      forms and billing portals, instead of the default Rebilly\n      domain:`portal.secure-payments.app`. For more information, see\n      [Configure a custom domain](https://www.rebilly.com/docs/settings/organizations-and-websites#configure-a-custom-domain).\n  - name: Histograms\n    description: \u003e-\n      Use histograms operations to generate transaction histogram reports\n      with cohorts and periods.\n  - name: Reports\n    description: \u003e-\n      Use reports operations to retrieve summary information about\n      your customers, subscriptions, transactions, and more.\n  - name: Data exports\n    description: |-\n      Use data export operations to manage the export of resource\n      data, such as: transactions, customers, subscriptions, invoices,\n      invoice item data, or revenue audit. Common data export use\n      cases are: accounting, data analysis, reporting, or importing\n      into other databases.\n\n      For detailed information on Rebilly resources, see\n      [Resources](https://www.rebilly.com/docs/dev-docs/concepts/#resources).\n  - name: Organization data exports\n    description: |-\n      Use organization data exports to export your organization's data\n      which you may want to do as a business continuity practice.\n      These may also be used to to export data if you decide to\n      migrate to a different payments solution.\n  - name: Rebilly API\n    description: |-\n      The Rebilly API is a collection of the most commonly used\n      endpoints and operations. For more information, see the\n      [Rebilly API](https://api-reference.rebilly.com).\n  - name: Reports API\n    description: |-\n      The Reports API is a collection of report related\n      endpoints and operations. This API is currently experimental.\n      For more information, see the\n      [Reports API](https://reports-api-docs.rebilly.com).\n  - name: Storefront API\n    description: |-\n      The Storefront API is a collection of customer related\n      endpoints and operations. This API is currently experimental.\n      For more information, see the\n      [Storefront API](https://storefront-api-docs.rebilly.com/).\n  - name: Users API\n    description: |-\n      The Users API is a collection of user and Rebilly UI related \n      endpoints and operations. A user represents a person who can \n      log in to Rebilly, and take actions based on their granted \n      permissions, and role. For more information, see the\n      [Rebilly User API](https://user-api-docs.rebilly.com).\n  - name: Account\n    description: \u003e-\n      Use these operations to manage Rebilly accounts. An account in\n      which you are subscribed to in order to use the Rebilly product.\n  - name: Authentication\n    description: \u003e-\n      Use these operations to manage the process of confirming the\n      identity of users that are attempting to access resources.\n  - name: Email verification\n    description: \u003e\n      Use these operations to manage email verification. Email\n      verification is the process of confirming that an email address\n      exists and is associated with an individual.\n  - name: Password reset\n    description: \u003e-\n      Use these operations to manage password resets for a user or\n      organization.\n  - name: Purchases\n    description: \u003e-\n      Use these operations to manage purchases. Purchases are\n      transactions that have been executed related to the purchase of\n      goods or services.\n  - name: Application owners\n    description: |-\n      Use these operations to register applications to the Rebilly\n      Apps Store and manage application instances. An application\n      owner is a person or organization that has submitted an app to\n      the Rebilly App Store. For more information, see\n      [Submit an app](https://www.rebilly.com/docs/dev-docs/submit-a-rebilly-app/).\n  - name: Application users\n    description: |-\n      Use these operations to install or uninstall apps from the\n      Rebilly App Store to your Rebilly account, and to manage\n      application instances. An application user is a person or\n      organization that uses an app that is installed from the\n      Rebilly App Store. For more information, see\n      [Install or uninstall an app](https://www.rebilly.com/docs/dev-docs/install-an-app/).\n\nx-tagGroups: []\n\npaths:\n  /aml:\n    $ref: './paths/aml.yaml'\n  /attachments:\n    $ref: ./paths/attachments.yaml\n  '/attachments/{id}':\n    $ref: './paths/attachments@{id}.yaml'\n  /authentication-options:\n    $ref: ./paths/authentication-options.yaml\n  /authentication-tokens:\n    $ref: ./paths/authentication-tokens.yaml\n  '/authentication-tokens/{token}':\n    $ref: './paths/authentication-tokens@{token}.yaml'\n  '/authentication-tokens/{token}/exchange':\n    $ref: './paths/authentication-tokens@{token}@exchange.yaml'\n  /blocklists:\n    $ref: ./paths/blocklists.yaml\n  '/blocklists/{id}':\n    $ref: './paths/blocklists@{id}.yaml'\n  /coupons-redemptions:\n    $ref: ./paths/coupons-redemptions.yaml\n  '/coupons-redemptions/{id}':\n    $ref: './paths/coupons-redemptions@{id}.yaml'\n  '/coupons-redemptions/{id}/cancel':\n    $ref: './paths/coupons-redemptions@{id}@cancel.yaml'\n  /coupons:\n    $ref: ./paths/coupons.yaml\n  '/coupons/{id}':\n    $ref: './paths/coupons@{id}.yaml'\n  '/coupons/{id}/expiration':\n    $ref: './paths/coupons@{id}@expiration.yaml'\n  /credentials:\n    $ref: ./paths/credentials.yaml\n  '/credentials/{id}':\n    $ref: './paths/credentials@{id}.yaml'\n  '/custom-fields/{resource}':\n    $ref: './paths/custom-fields@{resource}.yaml'\n  '/custom-fields/{resource}/{name}':\n    $ref: './paths/custom-fields@{resource}@{name}.yaml'\n  /customers:\n    $ref: ./paths/customers.yaml\n  '/customers/{id}':\n    $ref: './paths/customers@{id}.yaml'\n  /customer-timeline-custom-events:\n    $ref: ./paths/customer-timeline-custom-events.yaml\n  '/customer-timeline-custom-events/{id}':\n    $ref: './paths/customer-timeline-custom-events@{id}.yaml'\n  '/customers/{id}/aml':\n    $ref: './paths/customers@{id}@aml.yaml'\n  '/customers/{id}/lead-source':\n    $ref: './paths/customers@{id}@lead-source.yaml'\n  '/customers/{id}/timeline':\n    $ref: './paths/customers@{id}@timeline.yaml'\n  '/customers/{id}/timeline/{messageId}':\n    $ref: './paths/customers@{id}@timeline@{messageId}.yaml'\n  /disputes:\n    $ref: ./paths/disputes.yaml\n  '/disputes/{id}':\n    $ref: './paths/disputes@{id}.yaml'\n  /files:\n    $ref: ./paths/files.yaml\n  '/files/{id}':\n    $ref: './paths/files@{id}.yaml'\n  '/files/{id}/download':\n    $ref: './paths/files@{id}@download.yaml'\n  '/application-instances/{applicationId}':\n    $ref: './paths/application-instances@{applicationId}.yaml'\n  '/applications':\n    $ref: './paths/applications.yaml'\n  '/applications/{id}':\n    $ref: './paths/applications@{id}.yaml'\n  '/applications/{id}/instances':\n    $ref: './paths/applications@{id}@instances.yaml'\n  '/applications/{id}/instances/{organizationId}':\n    $ref: './paths/applications@{id}@instances@{organizationId}.yaml'\n  /invoices:\n    $ref: ./paths/invoices.yaml\n  '/invoices/{id}':\n    $ref: './paths/invoices@{id}.yaml'\n  '/invoices/{id}/items':\n    $ref: './paths/invoices@{id}@items.yaml'\n  '/invoices/{id}/items/{itemId}':\n    $ref: './paths/invoices@{id}@items@{itemId}.yaml'\n  '/invoices/{id}/issue':\n    $ref: './paths/invoices@{id}@issue.yaml'\n  '/invoices/{id}/abandon':\n    $ref: './paths/invoices@{id}@abandon.yaml'\n  '/invoices/{id}/void':\n    $ref: './paths/invoices@{id}@void.yaml'\n  '/invoices/{id}/recalculate':\n    $ref: './paths/invoices@{id}@recalculate.yaml'\n  '/invoices/{id}/reissue':\n    $ref: './paths/invoices@{id}@reissue.yaml'\n  '/invoices/{id}/transaction-allocations':\n    $ref: './paths/invoices@{id}@transaction-allocations.yaml'\n  '/invoices/{id}/transaction':\n    $ref: './paths/invoices@{id}@transaction.yaml'\n  '/customers/{id}/upcoming-invoices':\n    $ref: './paths/customers@{id}@upcoming-invoices.yaml'\n  '/invoices/{id}/timeline':\n    $ref: './paths/invoices@{id}@timeline.yaml'\n  '/invoices/{id}/timeline/{messageId}':\n    $ref: './paths/invoices@{id}@timeline@{messageId}.yaml'\n  /credit-memos:\n    $ref: ./paths/credit-memos.yaml\n  /credit-memos/{id}:\n    $ref: ./paths/credit-memos@{id}.yaml\n  /credit-memos/{id}/void:\n    $ref: ./paths/credit-memos@{id}@void.yaml\n  /credit-memos/{id}/timeline:\n    $ref: ./paths/credit-memos@{id}@timeline.yaml\n  /credit-memos/{id}/timeline/{messageId}:\n    $ref: ./paths/credit-memos@{id}@timeline@{messageId}.yaml\n  /invoices/{id}/credit-memo-allocations:\n    $ref: ./paths/invoices@{id}@credit-memo-allocations.yaml\n  /invoices/{id}/credit-memo-allocations/{creditMemoId}:\n    $ref: ./paths/invoices@{id}@credit-memo-allocations@{creditMemoId}.yaml\n  /kyc-requests:\n    $ref: ./paths/kyc-requests.yaml\n  '/kyc-requests/{id}':\n    $ref: './paths/kyc-requests@{id}.yaml'\n  /kyc-documents:\n    $ref: ./paths/kyc-documents.yaml\n  '/kyc-documents/{id}':\n    $ref: './paths/kyc-documents@{id}.yaml'\n  '/kyc-documents/{id}/acceptance':\n    $ref: './paths/kyc-documents@{id}@acceptance.yaml'\n  '/kyc-documents/{id}/matches':\n    $ref: './paths/kyc-documents@{id}@matches.yaml'\n  '/kyc-documents/{id}/rejection':\n    $ref: './paths/kyc-documents@{id}@rejection.yaml'\n  '/kyc-documents/{id}/review':\n    $ref: './paths/kyc-documents@{id}@review.yaml'\n  '/kyc-documents/{id}/start-review':\n    $ref: './paths/kyc-documents@{id}@start-review.yaml'\n  '/kyc-documents/{id}/stop-review':\n    $ref: './paths/kyc-documents@{id}@stop-review.yaml'\n  /kyc-settings:\n    $ref: ./paths/kyc-settings.yaml\n  /password-tokens:\n    $ref: ./paths/password-tokens.yaml\n  '/password-tokens/{id}':\n    $ref: './paths/password-tokens@{id}.yaml'\n  '/payment-instruments':\n    $ref: './paths/payment-instruments.yaml'\n  '/payment-instruments/{id}':\n    $ref: './paths/payment-instruments@{id}.yaml'\n  '/payment-instruments/{id}/deactivation':\n    $ref: './paths/payment-instruments@{id}@deactivation.yaml'\n  /plans:\n    $ref: ./paths/plans.yaml\n  '/plans/{id}':\n    $ref: './paths/plans@{id}.yaml'\n  /products:\n    $ref: ./paths/products.yaml\n  '/products/{id}':\n    $ref: './paths/products@{id}.yaml'\n  '/ready-to-pay':\n    $ref: ./paths/ready-to-pay.yaml\n  /search:\n    $ref: ./paths/search.yaml\n  /shipping-rates:\n    $ref: ./paths/shipping-rates.yaml\n  '/shipping-rates/{id}':\n    $ref: './paths/shipping-rates@{id}.yaml'\n  /subscriptions:\n    $ref: ./paths/subscriptions.yaml\n  '/subscriptions/{id}':\n    $ref: './paths/subscriptions@{id}.yaml'\n  '/subscriptions/{id}/void':\n    $ref: './paths/subscriptions@{id}@void.yaml'\n  '/subscriptions/{id}/change-items':\n    $ref: './paths/subscriptions@{id}@change-items.yaml'\n  '/subscriptions/{id}/interim-invoice':\n    $ref: './paths/subscriptions@{id}@interim-invoice.yaml'\n  /subscription-pauses:\n    $ref: ./paths/subscription-pauses.yaml\n  '/subscription-pauses/{id}':\n    $ref: './paths/subscription-pauses@{id}.yaml'\n  /subscription-cancellations:\n    $ref: ./paths/subscription-cancellations.yaml\n  '/subscription-cancellations/{id}':\n    $ref: './paths/subscription-cancellations@{id}.yaml'\n  /subscription-reactivations:\n    $ref: ./paths/subscription-reactivations.yaml\n  '/subscription-reactivations/{id}':\n    $ref: './paths/subscription-reactivations@{id}.yaml'\n  '/subscriptions/{id}/upcoming-invoices':\n    $ref: './paths/subscriptions@{id}@upcoming-invoices.yaml'\n  '/subscriptions/{id}/upcoming-invoices/{invoiceId}/issue':\n    $ref: './paths/subscriptions@{id}@upcoming-invoices@{invoiceId}@issue.yaml'\n  '/subscriptions/{id}/timeline':\n    $ref: './paths/subscriptions@{id}@timeline.yaml'\n  '/subscriptions/{id}/timeline/{messageId}':\n    $ref: './paths/subscriptions@{id}@timeline@{messageId}.yaml'\n  /tags:\n    $ref: ./paths/tags.yaml\n  '/tags/{tag}':\n    $ref: './paths/tags@{tag}.yaml'\n  '/tags/{tag}/customers':\n    $ref: './paths/tags@{tag}@customers.yaml'\n  '/tags/{tag}/customers/{customerId}':\n    $ref: './paths/tags@{tag}@customers@{customerId}.yaml'\n  '/tags/{tag}/kyc-documents':\n    $ref: './paths/tags@{tag}@kyc-documents.yaml'\n  '/tags/{tag}/kyc-documents/{kycDocumentId}':\n    $ref: './paths/tags@{tag}@kyc-documents@{kycDocumentId}.yaml'\n  /tokens:\n    $ref: ./paths/tokens.yaml\n  '/tokens/{token}':\n    $ref: './paths/tokens@{token}.yaml'\n  /digital-wallets/validation:\n    $ref: './paths/digital-wallets@validation.yaml'\n  /transactions:\n    $ref: ./paths/transactions.yaml\n  '/transactions/{id}':\n    $ref: './paths/transactions@{id}.yaml'\n  /payouts:\n    $ref: ./paths/payouts.yaml\n  '/transactions/{id}/query':\n    $ref: './paths/transactions@{id}@query.yaml'\n  '/transactions/{id}/update':\n    $ref: './paths/transactions@{id}@update.yaml'\n  '/transactions/{id}/refund':\n    $ref: './paths/transactions@{id}@refund.yaml'\n  '/transactions/{id}/timeline':\n    $ref: './paths/transactions@{id}@timeline.yaml'\n  '/transactions/{id}/timeline/{messageId}':\n    $ref: './paths/transactions@{id}@timeline@{messageId}.yaml'\n  '/fees':\n    $ref: './paths/fees.yaml'\n  '/fees/{id}':\n    $ref: './paths/fees@{id}.yaml'\n  '/activation/{token}':\n    $ref: './paths/activation@{token}.yaml'\n  /api-keys:\n    $ref: ./paths/api-keys.yaml\n  '/api-keys/{id}':\n    $ref: './paths/api-keys@{id}.yaml'\n  /balance-transactions:\n    $ref: './paths/balance-transactions.yaml'\n  '/balance-transactions/{id}':\n    $ref: './paths/balance-transactions@{id}.yaml'\n  /billing-portals:\n    $ref: ./paths/billing-portals.yaml\n  /billing-portals/{id}:\n    $ref: './paths/billing-portals@{id}.yaml'\n  /broadcast-messages:\n    $ref: ./paths/broadcast-messages.yaml\n  '/broadcast-messages/{id}':\n    $ref: './paths/broadcast-messages@{id}.yaml'\n  /checkout-forms:\n    $ref: ./paths/checkout-forms.yaml\n  /checkout-forms/{id}:\n    $ref: './paths/checkout-forms@{id}.yaml'\n  /credential-hashes/aws-ses:\n    $ref: ./paths/credential-hashes@aws-ses.yaml\n  '/credential-hashes/aws-ses/{hash}':\n    $ref: './paths/credential-hashes@aws-ses@{hash}.yaml'\n  /credential-hashes/emails:\n    $ref: ./paths/credential-hashes@emails.yaml\n  '/credential-hashes/emails/{hash}':\n    $ref: './paths/credential-hashes@emails@{hash}.yaml'\n  /credential-hashes/mailgun:\n    $ref: ./paths/credential-hashes@mailgun.yaml\n  '/credential-hashes/mailgun/{hash}':\n    $ref: './paths/credential-hashes@mailgun@{hash}.yaml'\n  /credential-hashes/oauth2:\n    $ref: ./paths/credential-hashes@oauth2.yaml\n  '/credential-hashes/oauth2/{hash}':\n    $ref: './paths/credential-hashes@oauth2@{hash}.yaml'\n  '/credential-hashes/oauth2/{hash}/items':\n    $ref: './paths/credential-hashes@oauth2@{hash}@items.yaml'\n  /credential-hashes/plaid:\n    $ref: './paths/credential-hashes@plaid.yaml'\n  '/credential-hashes/plaid/{hash}':\n    $ref: './paths/credential-hashes@plaid@{hash}.yaml'\n  /credential-hashes/postmark:\n    $ref: ./paths/credential-hashes@postmark.yaml\n  '/credential-hashes/postmark/{hash}':\n    $ref: './paths/credential-hashes@postmark@{hash}.yaml'\n  /credential-hashes/sendgrid:\n    $ref: ./paths/credential-hashes@sendgrid.yaml\n  '/credential-hashes/sendgrid/{hash}':\n    $ref: './paths/credential-hashes@sendgrid@{hash}.yaml'\n  /credential-hashes/webhooks:\n    $ref: ./paths/credential-hashes@webhooks.yaml\n  '/credential-hashes/webhooks/{hash}':\n    $ref: './paths/credential-hashes@webhooks@{hash}.yaml'\n  /credential-hashes/experian:\n    $ref: ./paths/credential-hashes@experian.yaml\n  '/credential-hashes/experian/{hash}':\n    $ref: './paths/credential-hashes@experian@{hash}.yaml'\n  /credential-hashes/taxjar:\n    $ref: ./paths/credential-hashes@taxjar.yaml\n  '/credential-hashes/taxjar/{hash}':\n    $ref: './paths/credential-hashes@taxjar@{hash}.yaml'\n  /custom-domains:\n    $ref: ./paths/custom-domains.yaml\n  '/custom-domains/{domain}':\n    $ref: './paths/custom-domains@{domain}.yaml'\n  '/email-delivery-setting-verifications/{token}':\n    $ref: './paths/email-delivery-setting-verifications@{token}.yaml'\n  /email-delivery-settings:\n    $ref: ./paths/email-delivery-settings.yaml\n  '/email-delivery-settings/{id}':\n    $ref: './paths/email-delivery-settings@{id}.yaml'\n  '/email-delivery-settings/{id}/resend-email-verification':\n    $ref: './paths/email-delivery-settings@{id}@resend-email-verification.yaml'\n  /email-messages:\n    $ref: ./paths/email-messages.yaml\n  '/email-messages/{id}':\n    $ref: './paths/email-messages@{id}.yaml'\n  /email-notifications:\n    $ref: ./paths/email-notifications.yaml\n  /events:\n    $ref: ./paths/events.yaml\n  '/events/{eventType}':\n    $ref: './paths/events@{eventType}.yaml'\n  '/events/{eventType}/rules':\n    $ref: './paths/events@{eventType}@rules.yaml'\n  '/events/{eventType}/timeline':\n    $ref: './paths/events@{eventType}@timeline.yaml'\n  '/events/{eventType}/timeline/{messageId}':\n    $ref: './paths/events@{eventType}@timeline@{messageId}.yaml'\n  '/events/{eventType}/rules/history':\n    $ref: './paths/events@{eventType}@rules@history.yaml'\n  '/events/{eventType}/rules/history/{version}':\n    $ref: './paths/events@{eventType}@rules@history@{version}.yaml'\n  '/events/{eventType}/rules/versions/{version}':\n    $ref: './paths/events@{eventType}@rules@versions@{version}.yaml'\n  '/events/{eventType}/rules/drafts':\n    $ref: './paths/events@{eventType}@rules@drafts.yaml'\n  '/events/{eventType}/rules/drafts/{id}':\n    $ref: './paths/events@{eventType}@rules@drafts@{id}.yaml'\n  /forgot-password:\n    $ref: ./paths/forgot-password.yaml\n  /gateway-accounts:\n    $ref: ./paths/gateway-accounts.yaml\n  '/gateway-accounts/{id}':\n    $ref: './paths/gateway-accounts@{id}.yaml'\n  '/gateway-accounts/{id}/close':\n    $ref: './paths/gateway-accounts@{id}@close.yaml'\n  '/gateway-accounts/{id}/disable':\n    $ref: './paths/gateway-accounts@{id}@disable.yaml'\n  '/gateway-accounts/{id}/downtime-schedules':\n    $ref: './paths/gateway-accounts@{id}@downtime-schedules.yaml'\n  '/gateway-accounts/{id}/downtime-schedules/{downtimeId}':\n    $ref: './paths/gateway-accounts@{id}@downtime-schedules@{downtimeId}.yaml'\n  '/gateway-accounts/{id}/enable':\n    $ref: './paths/gateway-accounts@{id}@enable.yaml'\n  '/gateway-accounts/{id}/limits':\n    $ref: './paths/gateway-accounts@{id}@limits.yaml'\n  '/gateway-accounts/{id}/limits/{limitId}':\n    $ref: './paths/gateway-accounts@{id}@limits@{limitId}.yaml'\n  '/gateway-accounts/{id}/timeline':\n    $ref: './paths/gateway-accounts@{id}@timeline.yaml'\n  '/gateway-accounts/{id}/timeline/{messageId}':\n    $ref: './paths/gateway-accounts@{id}@timeline@{messageId}.yaml'\n  '/gateway-accounts/{id}/check-credentials':\n    $ref: './paths/gateway-accounts@{id}@check-credentials.yaml'\n  '/gateway-accounts/{id}/financial-settings':\n    $ref: './paths/gateway-accounts@{id}@financial-settings.yaml'\n  /digital-wallets/onboarding/apple-pay:\n    $ref: './paths/digital-wallets@onboarding@apple-pay.yaml'\n  /grid-segments:\n    $ref: ./paths/grid-segments.yaml\n  '/grid-segments/{id}':\n    $ref: './paths/grid-segments@{id}.yaml'\n  /integrations:\n    $ref: ./paths/integrations.yaml\n  '/integrations/{label}':\n    $ref: './paths/integrations@{label}.yaml'\n  /lists:\n    $ref: ./paths/lists.yaml\n  '/lists/{id}':\n    $ref: './paths/lists@{id}.yaml'\n  '/lists/{id}/{version}':\n    $ref: './paths/lists@{id}@{version}.yaml'\n  /logout:\n    $ref: ./paths/logout.yaml\n  /memberships:\n    $ref: ./paths/memberships.yaml\n  '/memberships/{organizationId}/{userId}':\n    $ref: './paths/memberships@{organizationId}@{userId}.yaml'\n  /organizations:\n    $ref: ./paths/organizations.yaml\n  '/organizations/{id}':\n    $ref: './paths/organizations@{id}.yaml'\n  /payment-cards-bank-names:\n    $ref: ./paths/payment-cards-bank-names.yaml\n  /payment-methods:\n    $ref: ./paths/payment-methods.yaml\n  /payment-methods/{apiName}:\n    $ref: './paths/payment-methods@{apiName}.yaml'\n  /payment-gateways-metadata:\n    $ref: ./paths/payment-gateways-metadata.yaml\n  /payment-gateways-metadata/{apiName}:\n    $ref: './paths/payment-gateways-metadata@{apiName}.yaml'\n  /permissions-emulation:\n    $ref: ./paths/permissions-emulation.yaml\n  /previews/orders:\n    $ref: ./paths/previews@orders.yaml\n  /previews/rule-actions/send-email:\n    $ref: ./paths/previews@rule-actions@send-email.yaml\n  /previews/rule-actions/trigger-webhook:\n    $ref: ./paths/previews@rule-actions@trigger-webhook.yaml\n  /previews/webhooks:\n    $ref: ./paths/previews@webhooks.yaml\n  /profile:\n    $ref: ./paths/profile.yaml\n  /profile/mfa:\n    $ref: ./paths/profile@mfa.yaml\n  /profile/password:\n    $ref: ./paths/profile@password.yaml\n  /profile/totp-reset:\n    $ref: ./paths/profile@totp-reset.yaml\n  '/reset-password/{token}':\n    $ref: './paths/reset-password@{token}.yaml'\n  '/roles':\n    $ref: ./paths/roles.yaml\n  '/roles/{id}':\n    $ref: './paths/roles@{id}.yaml'\n  '/send-through-attribution/{eventType}':\n    $ref: './paths/send-through-attribution@{eventType}.yaml'\n  /signin:\n    $ref: ./paths/signin.yaml\n  /signup:\n    $ref: ./paths/signup.yaml\n  /status:\n    $ref: ./paths/status.yaml\n  /tracking/api:\n    $ref: ./paths/tracking@api.yaml\n  '/tracking/api/{id}':\n    $ref: './paths/tracking@api@{id}.yaml'\n  /tracking/lists:\n    $ref: ./paths/tracking@lists.yaml\n  /tracking/webhooks:\n    $ref: ./paths/tracking@webhooks.yaml\n  '/tracking/webhooks/{id}':\n    $ref: './paths/tracking@webhooks@{id}.yaml'\n  '/tracking/webhooks/{id}/resend':\n    $ref: './paths/tracking@webhooks@{id}@resend.yaml'\n  /users:\n    $ref: ./paths/users.yaml\n  '/users/{id}':\n    $ref: './paths/users@{id}.yaml'\n  '/users/{id}/mfa':\n    $ref: './paths/users@{id}@mfa.yaml'\n  '/users/{id}/password':\n    $ref: './paths/users@{id}@password.yaml'\n  '/users/{id}/totp-reset':\n    $ref: './paths/users@{id}@totp-reset.yaml'\n  /webhooks:\n    $ref: ./paths/webhooks.yaml\n  '/webhooks/{id}':\n    $ref: './paths/webhooks@{id}.yaml'\n  /websites:\n    $ref: ./paths/websites.yaml\n  '/websites/{id}':\n    $ref: './paths/websites@{id}.yaml'\n  '/experimental/customers/{customerId}/summary-metrics':\n    $ref: './paths/customers@{customerId}@summary-metrics.yaml'\n  /experimental/data-exports:\n    $ref: ./paths/data-exports.yaml\n  '/experimental/data-exports/{id}':\n    $ref: './paths/data-exports@{id}.yaml'\n  /organization-exports:\n    $ref: ./paths/organization-exports.yaml\n  '/organization-exports/{id}':\n    $ref: './paths/organization-exports@{id}.yaml'\n  /experimental/histograms/transactions:\n    $ref: ./paths/histograms@transactions.yaml\n  /experimental/reports/api-log-summary:\n    $ref: ./paths/reports@api-log-summary.yaml\n  /experimental/reports/cumulative-subscriptions:\n    $ref: ./paths/reports@cumulative-subscriptions.yaml\n  /experimental/reports/dashboard:\n    $ref: ./paths/reports@dashboard.yaml\n  /experimental/reports/dcc-markup:\n    $ref: ./paths/reports@dcc-markup.yaml\n  /experimental/reports/disputes:\n    $ref: ./paths/reports@disputes.yaml\n  /experimental/reports/events-triggered:\n    $ref: ./paths/reports@events-triggered.yaml\n  '/experimental/reports/events-triggered/{eventType}/rules':\n    $ref: ./paths/reports@events-triggered@{eventType}@rules.yaml\n  /experimental/reports/future-renewals:\n    $ref: ./paths/reports@future-renewals.yaml\n  /experimental/reports/journal:\n    $ref: ./paths/reports@journal.yaml\n  /experimental/reports/kyc-acceptance-summary:\n    $ref: ./paths/reports@kyc-acceptance-summary.yaml\n  /experimental/reports/kyc-rejection-summary:\n    $ref: ./paths/reports@kyc-rejection-summary.yaml\n  /experimental/reports/kyc-request-summary:\n    $ref: ./paths/reports@kyc-request-summary.yaml\n  /experimental/reports/monthly-recurring-revenue:\n    $ref: ./paths/reports@monthly-recurring-revenue.yaml\n  /experimental/reports/renewal-sales:\n    $ref: ./paths/reports@renewal-sales.yaml\n  /experimental/reports/retention-percentage:\n    $ref: ./paths/reports@retention-percentage.yaml\n  /experimental/reports/retention-value:\n    $ref: ./paths/reports@retention-value.yaml\n  /experimental/reports/revenue-waterfall:\n    $ref: ./paths/reports@revenue-waterfall.yaml\n  /experimental/reports/revenue-audit:\n    $ref: ./paths/reports@revenue-audit.yaml\n  /experimental/reports/subscription-cancellation:\n    $ref: ./paths/reports@subscription-cancellation.yaml\n  /experimental/reports/subscription-renewal:\n    $ref: ./paths/reports@subscription-renewal.yaml\n  /experimental/reports/time-series-transaction:\n    $ref: ./paths/reports@time-series-transaction.yaml\n  /experimental/reports/transactions-time-dispute:\n    $ref: ./paths/reports@transactions-time-dispute.yaml\n  /experimental/reports/transactions:\n    $ref: ./paths/reports@transactions.yaml\n  '/experimental/subscriptions/{subscriptionId}/summary-metrics':\n    $ref: ./paths/subscriptions@{subscriptionId}@summary-metrics.yaml\n  '/storefront/account':\n    $ref: ./paths/storefront/account.yaml\n  '/storefront/account/forgot-password':\n    $ref: paths/storefront/account@forgot-password.yaml\n  '/storefront/account/password':\n    $ref: paths/storefront/account@password.yaml\n  '/storefront/account/resend-verification':\n    $ref: paths/storefront/account@resend-verification.yaml\n  '/storefront/account/reset-password/{token}':\n    $ref: paths/storefront/account@reset-password@{token}.yaml\n  '/storefront/account/verification/{token}':\n    $ref: paths/storefront/account@verification@{token}.yaml\n  '/storefront/billing-portals/{slug}':\n    $ref: paths/storefront/billing-portals@{slug}.yaml\n  '/storefront/checkout-forms/{id}':\n    $ref: paths/storefront/checkout-forms@{id}.yaml\n  '/storefront/invoices':\n    $ref: paths/storefront/invoices.yaml\n  '/storefront/invoices/{id}':\n    $ref: paths/storefront/invoices@{id}.yaml\n  '/storefront/kyc-documents':\n    $ref: paths/storefront/kyc-documents.yaml\n  '/storefront/kyc-documents/{id}':\n    $ref: paths/storefront/kyc-documents@{id}.yaml\n  '/storefront/kyc-requests/{id}':\n    $ref: paths/storefront/kyc-requests@{id}.yaml\n  '/storefront/login':\n    $ref: paths/storefront/login.yaml\n  '/storefront/logout':\n    $ref: paths/storefront/logout.yaml\n  '/storefront/orders':\n    $ref: paths/storefront/orders.yaml\n  '/storefront/orders/{id}':\n    $ref: paths/storefront/orders@{id}.yaml\n  '/storefront/orders/{id}/cancellation':\n    $ref: paths/storefront/orders@{id}@cancellation.yaml\n  '/storefront/payment':\n    $ref: paths/storefront/payment.yaml\n  '/storefront/payment-instruments':\n    $ref: paths/storefront/payment-instruments.yaml\n  '/storefront/payment-instruments/{id}':\n    $ref: paths/storefront/payment-instruments@{id}.yaml\n  '/storefront/payment-instruments/{id}/deactivation':\n    $ref: paths/storefront/payment-instruments@{id}@deactivation.yaml\n  '/storefront/payment-instruments/{id}/setup':\n    $ref: paths/storefront/payment-instruments@{id}@setup.yaml\n  '/storefront/plans':\n    $ref: paths/storefront/plans.yaml\n  '/storefront/plans/{id}':\n    $ref: paths/storefront/plans@{id}.yaml\n  '/storefront/products':\n    $ref: paths/storefront/products.yaml\n  '/storefront/products/{id}':\n    $ref: paths/storefront/products@{id}.yaml\n  '/storefront/purchase':\n    $ref: paths/storefront/purchase.yaml\n  '/storefront/preview-purchase':\n    $ref: paths/storefront/preview-purchase.yaml\n  '/storefront/ready-to-pay':\n    $ref: paths/storefront/ready-to-pay.yaml\n  '/storefront/register':\n    $ref: paths/storefront/register.yaml\n  '/storefront/transactions':\n    $ref: paths/storefront/transactions.yaml\n  '/storefront/transactions/{id}':\n    $ref: paths/storefront/transactions@{id}.yaml\n  '/storefront/websites/{id}':\n    $ref: paths/storefront/websites@{id}.yaml\n  '/customers/{id}/edd-score':\n    $ref: paths/customers@{id}@edd-score.yaml\n  '/customers/{id}/edd-timeline':\n    $ref: paths/customers@{id}@edd-timeline.yaml\n  '/customers/{id}/edd-search-results':\n    $ref: paths/customers@{id}@edd-search-results.yaml\n\nx-webhooks:\n  application-instance-disabled:\n    post:\n      $ref: ./webhooks/application-instance-disabled.yaml\n  application-instance-enabled:\n    post:\n      $ref: ./webhooks/application-instance-enabled.yaml\n  aml-list-possibly-matched:\n    post:\n      $ref: ./webhooks/aml-list-possibly-matched.yaml\n  balance-transaction-settled:\n    post:\n      $ref: ./webhooks/balance-transaction-settled.yaml\n  credit-memo-applied:\n    post:\n      $ref: ./webhooks/credit-memo-applied.yaml\n  credit-memo-created:\n    post:\n      $ref: ./webhooks/credit-memo-created.yaml\n  credit-memo-modified:\n    post:\n      $ref: ./webhooks/credit-memo-modified.yaml\n  credit-memo-partially-applied:\n    post:\n      $ref: ./webhooks/credit-memo-partially-applied.yaml\n  credit-memo-voided:\n    post:\n      $ref: ./webhooks/credit-memo-voided.yaml\n  customer-created:\n    post:\n      $ref: ./webhooks/customer-created.yaml\n  customer-merged:\n    post:\n      $ref: ./webhooks/customer-merged.yaml\n  customer-one-time-password-requested:\n    post:\n      $ref: ./webhooks/customer-one-time-password-requested.yaml\n  customer-redirected-offsite:\n    post:\n      $ref: ./webhooks/customer-redirected-offsite.yaml\n  customer-returned:\n    post:\n      $ref: ./webhooks/customer-returned.yaml\n  customer-updated:\n    post:\n      $ref: ./webhooks/customer-updated.yaml\n  dispute-created:\n    post:\n      $ref: ./webhooks/dispute-created.yaml\n  dispute-modified:\n    post:\n      $ref: ./webhooks/dispute-modified.yaml\n  experian-check-performed:\n    post:\n      $ref: ./webhooks/experian-check-performed.yaml\n  invoice-tax-calculation-failed:\n    post:\n      $ref: ./webhooks/invoice-tax-calculation-failed.yaml\n  gateway-account-downtime-ended:\n    post:\n      $ref: ./webhooks/gateway-account-downtime-ended.yaml\n  gateway-account-downtime-started:\n    post:\n      $ref: ./webhooks/gateway-account-downtime-started.yaml\n  gateway-account-limit-reached:\n    post:\n      $ref: ./webhooks/gateway-account-limit-reached.yaml\n  gateway-account-requested:\n    post:\n      $ref: ./webhooks/gateway-account-requested.yaml\n  invoice-abandoned:\n    post:\n      $ref: ./webhooks/invoice-abandoned.yaml\n  invoice-created:\n    post:\n      $ref: ./webhooks/invoice-created.yaml\n  invoice-issued:\n    post:\n      $ref: ./webhooks/invoice-issued.yaml\n  invoice-modified:\n    post:\n      $ref: ./webhooks/invoice-modified.yaml\n  invoice-paid:\n    post:\n      $ref: ./webhooks/invoice-paid.yaml\n  invoice-partially-paid:\n    post:\n      $ref: ./webhooks/invoice-partially-paid.yaml\n  invoice-refunded:\n    post:\n      $ref: ./webhooks/invoice-refunded.yaml\n  invoice-partially-refunded:\n    post:\n      $ref: ./webhooks/invoice-partially-refunded.yaml\n  invoice-past-due:\n    post:\n      $ref: ./webhooks/invoice-past-due.yaml\n  invoice-past-due-reminder:\n    post:\n      $ref: ./webhooks/invoice-past-due-reminder.yaml\n  invoice-reissued:\n    post:\n      $ref: ./webhooks/invoice-reissued.yaml\n  invoice-voided:\n    post:\n      $ref: ./webhooks/invoice-voided.yaml\n  kyc-document-accepted:\n    post:\n      $ref: ./webhooks/kyc-document-accepted.yaml\n  kyc-document-modified:\n    post:\n      $ref: ./webhooks/kyc-document-modified.yaml\n  kyc-document-rejected:\n    post:\n      $ref: ./webhooks/kyc-document-rejected.yaml\n  kyc-document-reviewed:\n    post:\n      $ref: ./webhooks/kyc-document-reviewed.yaml\n  kyc-document-archived:\n    post:\n      $ref: ./webhooks/kyc-document-archived.yaml\n  kyc-request-attempted:\n    post:\n      $ref: ./webhooks/kyc-request-attempted.yaml\n  kyc-request-failed:\n    post:\n      $ref: ./webhooks/kyc-request-failed.yaml\n  kyc-request-fulfilled:\n    post:\n      $ref: ./webhooks/kyc-request-fulfilled.yaml\n  kyc-request-partially-fulfilled:\n    post:\n      $ref: ./webhooks/kyc-request-partially-fulfilled.yaml\n  nsf-response-received:\n    post:\n      $ref: ./webhooks/nsf-response-received.yaml\n  offsite-payment-completed:\n    post:\n      $ref: ./webhooks/offsite-payment-completed.yaml\n  order-completed:\n    post:\n      $ref: ./webhooks/order-completed.yaml\n  payment-card-created:\n    post:\n      $ref: ./webhooks/payment-card-created.yaml\n  payment-card-expiration-reminder:\n    post:\n      $ref: ./webhooks/payment-card-expiration-reminder.yaml\n  payment-card-expired:\n    post:\n      $ref: ./webhooks/payment-card-expired.yaml\n  renewal-invoice-issued:\n    post:\n      $ref: ./webhooks/renewal-invoice-issued.yaml\n  renewal-invoice-payment-canceled:\n    post:\n      $ref: ./webhooks/renewal-invoice-payment-canceled.yaml\n  renewal-invoice-payment-declined:\n    post:\n      $ref: ./webhooks/renewal-invoice-payment-declined.yaml\n  risk-score-changed:\n    post:\n      $ref: ./webhooks/risk-score-changed.yaml\n  subscription-activated:\n    post:\n      $ref: ./webhooks/subscription-activated.yaml\n  subscription-canceled:\n    post:\n      $ref: ./webhooks/subscription-canceled.yaml\n  subscription-downgraded:\n    post:\n      $ref: ./webhooks/subscription-downgraded.yaml\n  subscription-modified:\n    post:\n      $ref: ./webhooks/subscription-modified.yaml\n  subscription-reactivated:\n    post:\n      $ref: ./webhooks/subscription-reactivated.yaml\n  subscription-renewal-reminder:\n    post:\n      $ref: ./webhooks/subscription-renewal-reminder.yaml\n  subscription-renewed:\n    post:\n      $ref: ./webhooks/subscription-renewed.yaml\n  subscription-trial-converted:\n    post:\n      $ref: ./webhooks/subscription-trial-converted.yaml\n  subscription-trial-end-reminder:\n    post:\n      $ref: ./webhooks/subscription-trial-end-reminder.yaml\n  subscription-trial-ended:\n    post:\n      $ref: ./webhooks/subscription-trial-ended.yaml\n  subscription-trial-end-changed:\n    post:\n      $ref: ./webhooks/subscription-trial-end-changed.yaml\n  subscription-upgraded:\n    post:\n      $ref: ./webhooks/subscription-upgraded.yaml\n  subscription-paused:\n    post:\n      $ref: ./webhooks/subscription-paused.yaml\n  subscription-pause-created:\n    post:\n      $ref: ./webhooks/subscription-pause-created.yaml\n  subscription-pause-modified:\n    post:\n      $ref: ./webhooks/subscription-pause-modified.yaml\n  subscription-pause-revoked:\n    post:\n      $ref: ./webhooks/subscription-pause-revoked.yaml\n  subscription-resumed:\n    post:\n      $ref: ./webhooks/subscription-resumed.yaml\n  transaction-amount-discrepancy-found:\n    post:\n      $ref: ./webhooks/transaction-amount-discrepancy-found.yaml\n  transaction-declined:\n    post:\n      $ref: ./webhooks/transaction-declined.yaml\n  transaction-discrepancy-found:\n    post:\n      $ref: ./webhooks/transaction-discrepancy-found.yaml\n  transaction-process-requested:\n    post:\n      $ref: ./webhooks/transaction-process-requested.yaml\n  transaction-processed:\n    post:\n      $ref: ./webhooks/transaction-processed.yaml\n  transaction-timeout-resolved:\n    post:\n      $ref: ./webhooks/transaction-timeout-resolved.yaml\n  waiting-gateway-transaction-completed:\n    post:\n      $ref: ./webhooks/waiting-gateway-transaction-completed.yaml\n",
			"canonicalURL": "/github.com/Rebilly/api-definitions@0ca34343d7b720f1693c948718d1234cd10a60db/-/blob/openapi/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Rebilly/api-definitions/blob/0ca34343d7b720f1693c948718d1234cd10a60db/openapi/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 1: cannot unmarshal !!map into string"
}