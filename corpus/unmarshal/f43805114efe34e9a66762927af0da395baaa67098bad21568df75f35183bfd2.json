{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/georocket/georocket"
		},
		"file": {
			"name": "api.yaml",
			"size": 0,
			"path": "src/main/resources/io/georocket/ogcapifeatures/api.yaml",
			"byteSize": 13943,
			"content": "openapi: 3.0.1\ninfo:\n  title: GeoRocket - OGC API Features\n  version: {{ version }}\nservers:\n  - url: {{ path }}\npaths:\n  '/':\n    get:\n      summary: landing page of this API\n      description: \u003e-\n        The landing page provides links to the API definition, the Conformance\n        statements and the metadata about the feature data in this dataset.\n      operationId: getLandingPage\n      tags:\n        - Capabilities\n      responses:\n        '200':\n          description: links to the API capabilities\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/root'\n            text/html:\n              schema:\n                type: string\n  '/conformance':\n    get:\n      summary: information about standards that this API conforms to\n      description: \u003e-\n        list all requirements classes specified in a standard (e.g., WFS 3.0\n        Part 1: Core) that the server conforms to\n      operationId: getRequirementsClasses\n      tags:\n        - Capabilities\n      responses:\n        '200':\n          description: the URIs of all requirements classes supported by the server\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/req-classes'\n        default:\n          description: An error occurred.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/exception'\n  '/collections':\n    get:\n      summary: describe the feature collections in the dataset\n      operationId: describeCollections\n      tags:\n        - Capabilities\n      responses:\n        '200':\n          description: Metdata about the feature collections shared by this API.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/content'\n            text/html:\n              schema:\n                type: string\n        default:\n          description: An error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/exception'\n            text/html:\n              schema:\n                type: string\n  '/collections/{collectionId}':\n    get:\n      summary: 'describe the {collectionId} feature collection'\n      operationId: describeCollection\n      tags:\n        - Capabilities\n      parameters:\n      - $ref: '#/components/parameters/collectionId'\n      responses:\n        '200':\n          description: 'Metadata about the {collectionId} collection shared by this API.'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/collectionInfo'\n            text/html:\n              schema:\n                type: string\n        default:\n          description: An error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/exception'\n            text/html:\n              schema:\n                type: string\n  '/collections/{collectionId}/items':\n    get:\n      summary: 'retrieve features of feature collection {collectionId}'\n      description: \u003e-\n        Every feature in a dataset belongs to a collection. A dataset may\n        consist of multiple feature collections. A feature collection is often a\n        collection of features of a similar type, based on a common schema.\n      operationId: getFeatures\n      tags:\n        - Features\n      parameters:\n      - $ref: '#/components/parameters/collectionId'\n      - $ref: '#/components/parameters/limit'\n      - $ref: '#/components/parameters/bbox'\n      - $ref: '#/components/parameters/datetime'\n      - $ref: '#/components/parameters/freeform'\n      responses:\n        '200':\n          description: \u003e-\n            Information about the feature collection plus the first features\n            matching the selection parameters.\n          content:\n            application/geo+json:\n              schema:\n                $ref: '#/components/schemas/featureCollectionGeoJSON'\n            text/html:\n              schema:\n                type: string\n        default:\n          description: An error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/exception'\n            text/html:\n              schema:\n                type: string\n  '/collections/{collectionId}/items/{featureId}':\n    get:\n      summary: retrieve a feature\n      operationId: getFeature\n      tags:\n        - Features\n      parameters:\n      - $ref: '#/components/parameters/collectionId'\n      - $ref: '#/components/parameters/featureId'\n      responses:\n        '200':\n          description: A feature.\n          content:\n            application/geo+json:\n              schema:\n                $ref: '#/components/schemas/featureGeoJSON'\n            text/html:\n              schema:\n                type: string\n        default:\n          description: An error occurred.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/exception'\n            text/html:\n              schema:\n                type: string\ncomponents:\n  parameters:\n    freeform:\n      name: queryField\n      in: query\n      schema:\n        type: object\n        additionalProperties: true\n      style: form\n    limit:\n      name: limit\n      in: query\n      description: |\n        The optional limit parameter limits the number of items that are\n        presented in the response document.\n\n        Only items are counted that are on the first level of the collection in\n        the response document. Nested objects contained within the explicitly\n        requested items shall not be counted.\n\n        * Minimum = 1\n        * Maximum = 10000\n        * Default = 10\n      required: false\n      schema:\n        type: integer\n        minimum: 1\n        maximum: 10000\n        default: 10\n      style: form\n      explode: false\n    bbox:\n      name: bbox\n      in: query\n      description: \u003e\n        Only features that have a geometry that intersects the bounding box are selected.\n        The bounding box is provided as four or six numbers, depending on whether the\n        coordinate reference system includes a vertical axis (elevation or depth):\n\n        * Lower left corner, coordinate axis 1\n        * Lower left corner, coordinate axis 2\n        * Lower left corner, coordinate axis 3 (optional)\n        * Upper right corner, coordinate axis 1\n        * Upper right corner, coordinate axis 2\n        * Upper right corner, coordinate axis 3 (optional)\n\n        The coordinate reference system of the values is WGS84 longitude/latitude\n        (http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless a different coordinate\n        reference system is specified in the parameter `bbox-crs`.\n\n        For WGS84 longitude/latitude the values are in most cases the sequence of\n        minimum longitude, minimum latitude, maximum longitude and maximum latitude.\n        However, in cases where the box spans the antimeridian the first value\n        (west-most box edge) is larger than the third value (east-most box edge).\n\n        If a feature has multiple spatial geometry properties, it is the decision of the\n        server whether only a single spatial geometry property is used to determine\n        the extent or all relevant geometries.\n      required: false\n      schema:\n        type: array\n        minItems: 4\n        maxItems: 6\n        items:\n          type: number\n      style: form\n      explode: false\n    datetime:\n      name: datetime\n      in: query\n      description: \u003e-\n        Either a date-time or a period string that adheres to RFC 3339. Examples:\n\n        * A date-time: \"2018-02-12T23:20:50Z\"\n        * A period: \"2018-02-12T00:00:00Z/2018-03-18T12:31:12Z\" or \"2018-02-12T00:00:00Z/P1M6DT12H31M12S\"\n\n        Only features that have a temporal property that intersects the value of\n        `time` are selected.\n\n        If a feature has multiple temporal properties, it is the decision of the\n        server whether only a single temporal property is used to determine\n        the extent or all relevant temporal properties.\n      required: false\n      schema:\n        type: string\n      style: form\n      explode: false\n    collectionId:\n      name: collectionId\n      in: path\n      required: true\n      description: Identifier (name) of a specific collection\n      schema:\n        type: string\n    featureId:\n      name: featureId\n      in: path\n      description: Local identifier of a specific feature\n      required: true\n      schema:\n        type: string\n  schemas:\n    exception:\n      type: object\n      required:\n        - code\n      properties:\n        code:\n          type: string\n        description:\n          type: string\n    root:\n      type: object\n      required:\n        - links\n      properties:\n        links:\n          type: array\n          items:\n            $ref: '#/components/schemas/link'\n    req-classes:\n      type: object\n      required:\n        - conformsTo\n      properties:\n        conformsTo:\n          type: array\n          items:\n            type: string\n    link:\n      type: object\n      required:\n        - href\n      properties:\n        href:\n          type: string\n        rel:\n          type: string\n        type:\n          type: string\n        hreflang:\n          type: string\n    content:\n      type: object\n      required:\n        - links\n        - collections\n      properties:\n        links:\n          type: array\n          items:\n            $ref: '#/components/schemas/link'\n        collections:\n          type: array\n          items:\n            $ref: '#/components/schemas/collectionInfo'\n    collectionInfo:\n      type: object\n      required:\n        - name\n        - links\n      properties:\n        name:\n          description: 'identifier of the collection used, for example, in URIs'\n          type: string\n        title:\n          description: 'human readable title of the collection'\n          type: string\n        description:\n          description: 'a description of the features in the collection'\n          type: string\n        links:\n          type: array\n          items:\n            $ref: '#/components/schemas/link'\n        extent:\n          $ref: '#/components/schemas/extent'\n        crs:\n          description: \u003e-\n            The coordinate reference systems in which geometries\n            may be retrieved. Coordinate reference systems are identified\n            by a URI. The first coordinate reference system is the\n            coordinate reference system that is used by default. This\n            is always \"http://www.opengis.net/def/crs/OGC/1.3/CRS84\", i.e.\n            WGS84 longitude/latitude.\n          type: array\n          items:\n            type: string\n          default:\n            - 'http://www.opengis.net/def/crs/OGC/1.3/CRS84'\n    extent:\n      type: object\n      properties:\n        crs:\n          description: \u003e-\n            Coordinate reference system of the coordinates in the spatial extent (property `spatial`).\n            In the Core, only WGS84 longitude/latitude is supported. Extensions may support additional\n            coordinate reference systems.\n          type: string\n          enum:\n            - 'http://www.opengis.net/def/crs/OGC/1.3/CRS84'\n          default: 'http://www.opengis.net/def/crs/OGC/1.3/CRS84'\n        spatial:\n          description: \u003e-\n            West, north, east, south edges of the spatial extent. The minimum and\n            maximum values apply to the coordinate reference system WGS84 longitude/latitude\n            that is supported in the Core. If, for example, a projected coordinate reference\n            system is used, the minimum and maximum values need to be adjusted.\n          type: array\n          minItems: 4\n          maxItems: 6\n          items:\n            type: number\n        trs:\n          description: \u003e-\n            Temporal reference system of the coordinates in the temporal extent (property `temporal`).\n            In the Core, only the Gregorian calendar is supported. Extensions may support additional\n            temporal reference systems.\n          type: string\n          enum:\n            - 'http://www.opengis.net/def/uom/ISO-8601/0/Gregorian'\n          default: 'http://www.opengis.net/def/uom/ISO-8601/0/Gregorian'\n        temporal:\n          description: Begin and end times of the temporal extent.\n          type: array\n          minItems: 2\n          maxItems: 2\n          items:\n            type: string\n            format: dateTime\n    featureCollectionGeoJSON:\n      type: object\n      required:\n        - type\n        - features\n      properties:\n        type:\n          type: string\n          enum:\n            - FeatureCollection\n        features:\n          type: array\n          items:\n            $ref: '#/components/schemas/featureGeoJSON'\n        links:\n          type: array\n          items:\n            $ref: '#/components/schemas/link'\n        timeStamp:\n          type: string\n          format: dateTime\n        numberMatched:\n          type: integer\n          minimum: 0\n        numberReturned:\n          type: integer\n          minimum: 0\n    featureGeoJSON:\n      type: object\n      required:\n        - type\n        - geometry\n        - properties\n      properties:\n        type:\n          type: string\n          enum:\n            - Feature\n        geometry:\n          $ref: '#/components/schemas/geometryGeoJSON'\n        properties:\n          type: object\n          nullable: true\n        id:\n          oneOf:\n            - type: string\n            - type: integer\n    geometryGeoJSON:\n      type: object\n      required:\n        - type\n      properties:\n        type:\n          type: string\n          enum:\n            - Point\n            - MultiPoint\n            - LineString\n            - MultiLineString\n            - Polygon\n            - MultiPolygon\n            - GeometryCollection\n",
			"canonicalURL": "/github.com/georocket/georocket@b02c996bc4147b667759fa2765c6032e8e84f4ea/-/blob/src/main/resources/io/georocket/ogcapifeatures/api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/georocket/georocket/blob/b02c996bc4147b667759fa2765c6032e8e84f4ea/src/main/resources/io/georocket/ogcapifeatures/api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 4: cannot unmarshal !!map into string; yaml: line 6: cannot unmarshal !!map into string"
}