{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "gitlab.com/open-reviews/mangrove"
		},
		"file": {
			"name": "mangrove_openapi.yml",
			"size": 0,
			"path": "servers/reviewer/docs/mangrove_openapi.yml",
			"byteSize": 14212,
			"content": "openapi: 3.0.0\ninfo:\n  title: Mangrove Server API\n  description: Submit and retrieve reviews,\n    as well as aggregate statistics about reviews.\n    More information about the values and types can be found in the\n    [Open Reviews Standard](https://mangrove.reviews/standard).\n    For more description and example usage see [Mangrove Demo UI](https://mangrove.reviews)\n    and [Mangrove Client JS Library](https://js.mangrove.reviews/)\n    for a JavaScript wrapper of this API.\n  version: 0.1.1\n\nservers:\n  - url: https://api.mangrove.reviews\n\npaths:\n  /submit/{jwt_review}:\n    put:\n      description: Submit a new review.\n      parameters:\n        - name: jwt_review\n          description:\n            Mangrove Review in JSON Web Token format as described in the [Open Reviews Standard](https://mangrove.reviews/standard).\n            Please use `https://example.com` or `geo:0,0?q=*\u0026u=*` in subject `sub` field for test reviews which should be removed later.\n          in: path\n          required: true\n          schema:\n            type: string\n            format: jwt\n          example: eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Ii0tLS0tQkVHSU4gUFVCTElDIEtFWS0tLS0tTUZrd0V3WUhLb1p\n            JemowQ0FRWUlLb1pJemowREFRY0RRZ0FFcDc4Zms1eUNqYmlZYXZ5UjZGQ2xxcTlBRkJUaXpBSG1ZdU9rcTR3cy9aYmdleG41SVQ2b\n            i83NGt2YlZ0UGxNc3A5Z2luTysxMVZ4ZUorbVFJQ1pZamc9PS0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLSIsImp3ayI6IntcImNydlw\n            iOlwiUC0yNTZcIixcImV4dFwiOnRydWUsXCJrZXlfb3BzXCI6W1widmVyaWZ5XCJdLFwia3R5XCI6XCJFQ1wiLFwieFwiOlwicDc4Z\n            ms1eUNqYmlZYXZ5UjZGQ2xxcTlBRkJUaXpBSG1ZdU9rcTR3c19aWVwiLFwieVwiOlwiNEhzWi1TRS1wXy0tSkwyMWJUNVRMS2ZZSXB\n            6dnRkVmNYaWZwa0NBbVdJNFwifSJ9.eyJpYXQiOjE1ODA5MTAwMjIsInN1YiI6Imh0dHBzOi8vbWFuZ3JvdmUucmV2aWV3cyIsInJh\n            dGluZyI6NzUsIm9waW5pb24iOiJHcmVhdCB3ZWJzaXRlIGZvciByZXZpZXdzLiIsIm1ldGFkYXRhIjp7Im5pY2tuYW1lIjoiam9obj\n            EyMyIsImNsaWVudF9pZCI6Imh0dHA6Ly9sb2NhbGhvc3Q6MzAwMCJ9fQ.7xQtIlHuDdCVioyztj8i3zJ8dk3oCSfKr6VCR5RtBn6sB\n            cqvpfyvs13PlKGJoamKzx8xUgQTQJjRPv5s91-VLQ\n      responses:\n        '200':\n          description: Review is in the database.\n          content:\n            text/plain:\n              schema:\n                type: boolean\n        '400':\n          $ref: '#/components/responses/BadRequest' \n        '500':\n          $ref: '#/components/responses/InternalServerError' \n  /reviews:\n    get:\n      description: Request reviews matching the provided query.\n      parameters:\n        - in: query\n          name: q\n          schema:\n            type: string\n          description: Search for reviews that have this string in `sub` or `opinion` field.\n          example: restaurants in zurich\n        - in: query\n          name: signature\n          schema:\n            type: string\n          description: Review with this `signature` value.\n        - in: query\n          name: kid\n          schema:\n            type: string\n          description: Reviews by issuer with the following PEM public key.\n          example: -----BEGIN PUBLIC KEY-----MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEDo6mN4kY6YFhpvF0u3hfVWD1RnDElPweX3U3KiUAx0dVeFLPAmeKdQY3J5agY3VspnHo1p/wH9hbZ63qPbCr6g==-----END PUBLIC KEY-----\n        - in: query\n          name: iat\n          schema:\n            type: number\n          description: Reviews issued at this UNIX time.\n        - in: query\n          name: gt_iat\n          schema:\n            type: number\n          description: Reviews with UNIX timestamp greater than this.\n        - in: query\n          name: sub\n          schema:\n            type: string\n            format: uri\n          description: Reviews of the given subject URI.\n        - in: query\n          name: rating\n          schema:\n            type: number\n            minimum: 0\n            maximum: 100\n          description: Reviews with the given rating.\n        - in: query\n          name: opinion\n          schema:\n            type: string\n          description: Reviews with the given opinion.\n        - in: query\n          name: limit\n          schema:\n            type: number\n          description: Maximum number of reviews that will be returned.\n        - in: query\n          name: opinionated\n          schema:\n            type: boolean\n          description: Only reviews which either contain or do not contain an opinion.\n        - in: query\n          name: examples\n          schema:\n            type: boolean\n          description: Include reviews left for example subjects `https://example.com` and `geo:0,0?q=*u=*`.\n        - in: query\n          name: issuers\n          schema:\n            type: boolean\n          description: Include aggregate information about review issuers.\n        - in: query\n          name: maresi_subjects\n          schema:\n            type: boolean\n          description: Include aggregate information about reviews of returned reviews.\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Reviews'\n            application/n-triples:\n              schema: string\n            text/csv:\n              schema: string\n        '400':\n          $ref: '#/components/responses/BadRequest' \n        '500':\n          $ref: '#/components/responses/InternalServerError' \n  /review/{signature}:\n    get:\n      description: Request review with the specified signature.\n      parameters:\n        - name: signature\n          description: Signature of the review being requested.\n          in: path\n          required: true\n          schema:\n            type: string\n          example: PDSpnKtHioXykdBCMA15y5cLuYrRbSexscvySt_ryjppDWaW1I1AijjWercZE6K-cbS18bCwSmgIPqRIuL-cow\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Review'\n            application/n-triples:\n              schema: string\n        '400':\n          $ref: '#/components/responses/BadRequest' \n        '500':\n          $ref: '#/components/responses/InternalServerError' \n  /subject/{sub}:\n    get:\n      description: Request aggregate information about the subject.\n      parameters:\n        - name: sub\n          description: Unique subject identifying URI.\n          in: path\n          required: true\n          schema:\n            type: string\n          example: https://nytimes.com\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Subject'\n        '400':\n          $ref: '#/components/responses/BadRequest' \n        '500':\n          $ref: '#/components/responses/InternalServerError' \n  /issuer/{pem}:\n    get:\n      description: Request aggregate information about the reviewer.\n      parameters:\n        - name: pem\n          in: path\n          required: true\n          schema:\n            type: string\n          example: -----BEGIN PUBLIC KEY-----MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEDo6mN4kY6YFhpvF0u3hfVWD1RnDElPweX3U3KiUAx0dVeFLPAmeKdQY3J5agY3VspnHo1p/wH9hbZ63qPbCr6g==-----END PUBLIC KEY-----\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Issuer'\n        '400':\n          $ref: '#/components/responses/BadRequest' \n        '500':\n          $ref: '#/components/responses/InternalServerError' \n  /batch:\n    post:\n      description: Retrieve aggregates for multiple subjects or issuers.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BatchQuery'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BatchReturn'\n        '400':\n          $ref: '#/components/responses/BadRequest' \n        '500':\n          $ref: '#/components/responses/InternalServerError' \ncomponents:\n  responses:\n    BadRequest:\n      description: Provided request has incorrect format.\n      content:\n        text/plain:\n          schema:\n            type: string\n    InternalServerError:\n      description: Server encountered an error when processing the request.\n      content:\n        text/plain:\n          schema:\n            type: string\n\n  schemas:\n    Review:\n      description: Mangrove Review in encoded JWT form and with decoded fields.\n      type: object\n      required:\n        - jwt\n        - kid\n        - payload\n        - signature\n      properties:\n        jwt:\n          description: Review in JWT format.\n          type: string\n        kid:\n          description: Public key of the reviewer in PEM format.\n          type: string\n        payload:\n          description: Primary content of the review.\n          allOf:\n            - $ref: '#/components/schemas/Payload'\n        signature:\n          description: JWT signature by the review issuer.\n          type: string\n    Payload:\n      description: 'Primary content of the review, this is what gets serialized for signing.'\n      type: object\n      required:\n        - iat\n        - images\n        - metadata\n        - opinion\n        - rating\n        - sub\n      properties:\n        iat:\n          description: Unix Time at which the review was signed.\n          type: integer\n          format: int64\n        sub:\n          description: URI of the subject that is being reviewed.\n          type: string\n          format: uri\n        rating:\n          description: Rating indicating how likely the issuer is to\n            recommend the subject.\n          type: integer\n          format: int16\n          nullable: true\n          minimum: 0\n          maximum: 100\n        opinion:\n          description: Text of an opinion that the issuer had about the subject.\n          type: string\n          nullable: true\n          maxLength: 1000\n        images:\n          description: Images to be included in the review, contain URLs and optional labels.\n          nullable: true\n          type: array\n          items:\n            type: object\n            properties:\n              src:\n                type: string\n                format: url\n              label:\n                type: string\n        metadata:\n          description: Any data relating to the issuer or circumstances of leaving review.\n          nullable: true\n          type: object\n          properties:\n            client_id:\n              type: string\n            nickname:\n              type: string\n    Subject:\n      description: Information about a subject of reviews.\n      type: object\n      required:\n        - confirmed_count\n        - count\n        - opinion_count\n        - positive_count\n        - quality\n        - sub\n      properties:\n        confirmed_count:\n          description: \u003e-\n            Number of reviews with rating above 50 and `is_personal_experience`\n            flag given to this subject.\n          type: integer\n          format: uint\n          minimum: 0\n        count:\n          description: Number of reviews given to this subject.\n          type: integer\n          format: uint\n          minimum: 0\n        opinion_count:\n          description: Number of reviews which included an opinion.\n          type: integer\n          format: uint\n          minimum: 0\n        positive_count:\n          description: Number of reviews with rating above 50 given to this subject.\n          type: integer\n          format: uint\n          minimum: 0\n        quality:\n          description: Aggregate number representing quality of the subject.\n          type: integer\n          format: int16\n          nullable: true\n        sub:\n          description: URI uniquely identifying the subject.\n          type: string\n          format: uri\n    Issuer:\n      description: Information about a review issuer.\n      type: object\n      required:\n        - count\n      properties:\n        count:\n          description: Number of reviews written by this issuer.\n          type: integer\n          format: uint\n          minimum: 0\n        neutrality:\n          description: How likely is it for this reviewer to be fair.\n          type: number\n          format: float\n          minimum: 0\n          maximum: 1\n    Reviews:\n      description: Return type used to provide `Review`s and any associated data.\n      type: object\n      required:\n        - issuers\n        - maresi_subjects\n        - reviews\n      properties:\n        issuers:\n          description: A map from public keys to information about issuers.\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/Issuer'\n          nullable: true\n        maresi_subjects:\n          description: A map from Review identifiers (`urn:maresi:\u003csignature\u003e`) to\n            information about the reviews of that review.\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/Subject'\n          nullable: true\n        reviews:\n          description: A list of reviews satisfying the query.\n          type: array\n          items:\n            $ref: '#/components/schemas/Review'\n    BatchQuery:\n      description: Query allowing for retrieval of information about multiple subjects or\n        issuers.\n      type: object\n      required:\n        - pems\n        - subs\n      properties:\n        pems:\n          description: List of issuer public keys to get information about.\n          type: array\n          items:\n            type: string\n          nullable: true\n        subs:\n          description: List of subject URIs to get information about.\n          type: array\n          items:\n            type: string\n            format: uri\n          nullable: true\n    BatchReturn:\n      type: object\n      required:\n        - issuers\n        - subjects\n      properties:\n        issuers:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/Issuer'\n          nullable: true\n        subjects:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/Subject'\n          nullable: true\n"
		}
	},
	"Error": "unmarshal: json: line 1:6776: json: cannot unmarshal string into Go struct field Media.paths.get.responses.content.schema of type ogen.Schema"
}