{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/RepreZen/GenFlow"
		},
		"file": {
			"name": "beamup_path_estimates_time.yaml",
			"size": 0,
			"path": "modules/genflow-tests/src/main/resources/models/openapiv3/examples/Multi-File Beamup/pathItems/beamup_path_estimates_time.yaml",
			"byteSize": 3149,
			"content": "---\nopenapi: \"3.0.0\"\ninfo:\n  version: \"1.0.0\"\n  title: BeamUp API\n\npaths:\n\n  # Note the use of a simplified name for the path item object.  \n  # The actual URI, assigned by the top-level Swagger spec, is \n  # /estimates/time. But a JSON pointer to this would require a \n  # '~1' token to substitute for each forward slash, and % url \n  # encoding sequences for the curly braces.\n  # \n  # The leading slash is required by Swagger, so a reference to \n  # this item will include a leading '~1'. But we can avoid \n  # further escape sequences by using a simplified name.     \n\n  /time:\n    get:\n      \n      summary: Time Estimates\n      description: |\n        The Time Estimates endpoint returns ETAs for all products offered at a given \n        location, with the responses expressed as integers in seconds. We recommend \n        that this endpoint be called every minute to provide the most accurate, \n        up-to-date ETAs.\n      parameters:\n        - $ref: \"../components/beamup_parameters.yaml#/components/parameters/start_latitude\"\n        - $ref: \"../components/beamup_parameters.yaml#/components/parameters/start_longitude\"\n        - $ref: \"../components/beamup_parameters.yaml#/components/parameters/customer_uuid\"\n        - $ref: \"../components/beamup_parameters.yaml#/components/parameters/product_id\"\n      tags: \n        - Estimates\n      responses:  \n        200:\n          description: An array of products\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  # Reference to a Schema Object described in beamup_schemas.yaml\n                  $ref: \"../components/beamup_schemas.yaml#/components/schemas/Product\"\n        default:\n          # Defaults to an unexpected error response, defined in beamup_responses.yaml.\n          $ref: \"../components/beamup_responses.yaml#/components/responses/ErrorResponse\"\n      callbacks:\n        status:\n          $ref: \"#/components/callbacks/statusCallback\"\n\ncomponents:\n  callbacks:\n    statusCallback:\n      /statusUpdate:\n        summary: Posts the current status of a requested trip.\n        \n        post:\n          operationId: StatusUpdateCallback\n          description: |\n            POST method to be implemented by the client. BeamUp will \n            call this method to advise on the status of a requested, in-progress,\n            or completed trip.\n          requestBody:\n            description: content of the status update notification.\n            content: \n              \"application/json\":\n                schema:\n                  type: object\n                  properties:\n                    tripId: \n                      type: string\n                    tripStatusCode:\n                      type: string\n                      enum:\n                      - REQUESTED\n                      - IN_PROGRESS\n                      - COMPLETED\n                      - CANCELLED\n                    eta:\n                      type: string\n                      format: date-time\n          responses:\n            200: \n              description: Normal response to acknowledge a status update.\n",
			"canonicalURL": "/github.com/RepreZen/GenFlow@0125c77e1f8c4224459ae11e5a4c18dd7e9ac934/-/blob/modules/genflow-tests/src/main/resources/models/openapiv3/examples/Multi-File%20Beamup/pathItems/beamup_path_estimates_time.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/RepreZen/GenFlow/blob/0125c77e1f8c4224459ae11e5a4c18dd7e9ac934/modules/genflow-tests/src/main/resources/models/openapiv3/examples/Multi-File Beamup/pathItems/beamup_path_estimates_time.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 50: cannot unmarshal !!str `#/compo...` into ogen.PathItem"
}