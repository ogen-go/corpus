{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/svix/svix-webhooks"
		},
		"file": {
			"name": "openapi.json",
			"size": 0,
			"path": "openapi.json",
			"byteSize": 451855,
			"content": "{\n    \"components\": {\n        \"schemas\": {\n            \"ApplicationIn\": {\n                \"properties\": {\n                    \"name\": {\n                        \"example\": \"My first application\",\n                        \"title\": \"Name\",\n                        \"type\": \"string\"\n                    },\n                    \"rateLimit\": {\n                        \"example\": 1000,\n                        \"exclusiveMinimum\": 0.0,\n                        \"title\": \"Ratelimit\",\n                        \"type\": \"integer\"\n                    },\n                    \"uid\": {\n                        \"description\": \"Optional unique identifier for the application\",\n                        \"example\": \"unique-app-identifier\",\n                        \"maxLength\": 256,\n                        \"minLength\": 1,\n                        \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                        \"title\": \"Uid\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"name\"\n                ],\n                \"title\": \"ApplicationIn\",\n                \"type\": \"object\"\n            },\n            \"ApplicationOut\": {\n                \"properties\": {\n                    \"createdAt\": {\n                        \"format\": \"date-time\",\n                        \"title\": \"Createdat\",\n                        \"type\": \"string\"\n                    },\n                    \"id\": {\n                        \"example\": \"app_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                        \"title\": \"Id\",\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"example\": \"My first application\",\n                        \"title\": \"Name\",\n                        \"type\": \"string\"\n                    },\n                    \"rateLimit\": {\n                        \"example\": 1000,\n                        \"exclusiveMinimum\": 0.0,\n                        \"title\": \"Ratelimit\",\n                        \"type\": \"integer\"\n                    },\n                    \"uid\": {\n                        \"description\": \"Optional unique identifier for the application\",\n                        \"example\": \"unique-app-identifier\",\n                        \"maxLength\": 256,\n                        \"minLength\": 1,\n                        \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                        \"title\": \"Uid\",\n                        \"type\": \"string\"\n                    },\n                    \"updatedAt\": {\n                        \"format\": \"date-time\",\n                        \"title\": \"Updatedat\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"id\",\n                    \"createdAt\",\n                    \"updatedAt\"\n                ],\n                \"title\": \"ApplicationOut\",\n                \"type\": \"object\"\n            },\n            \"AttemptStatisticsData\": {\n                \"properties\": {\n                    \"failureCount\": {\n                        \"items\": {\n                            \"type\": \"integer\"\n                        },\n                        \"title\": \"Failurecount\",\n                        \"type\": \"array\"\n                    },\n                    \"successCount\": {\n                        \"items\": {\n                            \"type\": \"integer\"\n                        },\n                        \"title\": \"Successcount\",\n                        \"type\": \"array\"\n                    }\n                },\n                \"title\": \"AttemptStatisticsData\",\n                \"type\": \"object\"\n            },\n            \"AttemptStatisticsResponse\": {\n                \"properties\": {\n                    \"data\": {\n                        \"$ref\": \"#/components/schemas/AttemptStatisticsData\"\n                    },\n                    \"endDate\": {\n                        \"format\": \"date-time\",\n                        \"title\": \"Enddate\",\n                        \"type\": \"string\"\n                    },\n                    \"period\": {\n                        \"$ref\": \"#/components/schemas/StatisticsPeriod\"\n                    },\n                    \"startDate\": {\n                        \"format\": \"date-time\",\n                        \"title\": \"Startdate\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"startDate\",\n                    \"endDate\",\n                    \"period\",\n                    \"data\"\n                ],\n                \"title\": \"AttemptStatisticsResponse\",\n                \"type\": \"object\"\n            },\n            \"BorderRadiusConfig\": {\n                \"properties\": {\n                    \"button\": {\n                        \"$ref\": \"#/components/schemas/BorderRadiusEnum\"\n                    },\n                    \"card\": {\n                        \"$ref\": \"#/components/schemas/BorderRadiusEnum\"\n                    },\n                    \"input\": {\n                        \"$ref\": \"#/components/schemas/BorderRadiusEnum\"\n                    }\n                },\n                \"title\": \"BorderRadiusConfig\",\n                \"type\": \"object\"\n            },\n            \"BorderRadiusEnum\": {\n                \"description\": \"An enumeration.\",\n                \"enum\": [\n                    \"none\",\n                    \"lg\",\n                    \"md\",\n                    \"sm\",\n                    \"full\"\n                ],\n                \"title\": \"BorderRadiusEnum\",\n                \"type\": \"string\"\n            },\n            \"CustomThemeOverride\": {\n                \"properties\": {\n                    \"borderRadius\": {\n                        \"$ref\": \"#/components/schemas/BorderRadiusConfig\"\n                    },\n                    \"fontSize\": {\n                        \"$ref\": \"#/components/schemas/FontSizeConfig\"\n                    }\n                },\n                \"title\": \"CustomThemeOverride\",\n                \"type\": \"object\"\n            },\n            \"DashboardAccessOut\": {\n                \"properties\": {\n                    \"token\": {\n                        \"example\": \"appsk_kV3ts5tKPNJN4Dl25cMTfUNdmabxbX0O\",\n                        \"title\": \"Token\",\n                        \"type\": \"string\"\n                    },\n                    \"url\": {\n                        \"example\": \"https://app.svix.com/login#key=eyJhcHBJZCI6ICJhcHBfMXRSdFl\",\n                        \"format\": \"uri\",\n                        \"maxLength\": 65536,\n                        \"minLength\": 1,\n                        \"title\": \"Url\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"url\",\n                    \"token\"\n                ],\n                \"title\": \"DashboardAccessOut\",\n                \"type\": \"object\"\n            },\n            \"EndpointCreatedEvent\": {\n                \"description\": \"Sent when an endpoint is created.\",\n                \"example\": {\n                    \"data\": {\n                        \"appId\": \"app_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                        \"appUid\": \"unique-app-identifier\",\n                        \"endpointId\": \"ep_1srOrx2ZWZBpBUvZwXKQmoEYga2\"\n                    },\n                    \"type\": \"endpoint.created\"\n                },\n                \"properties\": {\n                    \"data\": {\n                        \"$ref\": \"#/components/schemas/EndpointCreatedEventData\"\n                    },\n                    \"type\": {\n                        \"default\": \"endpoint.created\",\n                        \"enum\": [\n                            \"endpoint.created\"\n                        ],\n                        \"title\": \"Type\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"data\"\n                ],\n                \"title\": \"EndpointCreatedEvent\",\n                \"type\": \"object\"\n            },\n            \"EndpointCreatedEventData\": {\n                \"properties\": {\n                    \"appId\": {\n                        \"example\": \"app_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                        \"title\": \"Appid\",\n                        \"type\": \"string\"\n                    },\n                    \"appUid\": {\n                        \"description\": \"Optional unique identifier for the application\",\n                        \"example\": \"unique-app-identifier\",\n                        \"maxLength\": 256,\n                        \"minLength\": 1,\n                        \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                        \"title\": \"Appuid\",\n                        \"type\": \"string\"\n                    },\n                    \"endpointId\": {\n                        \"example\": \"ep_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                        \"title\": \"Endpointid\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"appId\",\n                    \"endpointId\"\n                ],\n                \"title\": \"EndpointCreatedEventData\",\n                \"type\": \"object\"\n            },\n            \"EndpointDeletedEvent\": {\n                \"description\": \"Sent when an endpoint is deleted.\",\n                \"example\": {\n                    \"data\": {\n                        \"appId\": \"app_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                        \"appUid\": \"unique-app-identifier\",\n                        \"endpointId\": \"ep_1srOrx2ZWZBpBUvZwXKQmoEYga2\"\n                    },\n                    \"type\": \"endpoint.deleted\"\n                },\n                \"properties\": {\n                    \"data\": {\n                        \"$ref\": \"#/components/schemas/EndpointDeletedEventData\"\n                    },\n                    \"type\": {\n                        \"default\": \"endpoint.deleted\",\n                        \"enum\": [\n                            \"endpoint.deleted\"\n                        ],\n                        \"title\": \"Type\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"data\"\n                ],\n                \"title\": \"EndpointDeletedEvent\",\n                \"type\": \"object\"\n            },\n            \"EndpointDeletedEventData\": {\n                \"properties\": {\n                    \"appId\": {\n                        \"example\": \"app_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                        \"title\": \"Appid\",\n                        \"type\": \"string\"\n                    },\n                    \"appUid\": {\n                        \"description\": \"Optional unique identifier for the application\",\n                        \"example\": \"unique-app-identifier\",\n                        \"maxLength\": 256,\n                        \"minLength\": 1,\n                        \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                        \"title\": \"Appuid\",\n                        \"type\": \"string\"\n                    },\n                    \"endpointId\": {\n                        \"example\": \"ep_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                        \"title\": \"Endpointid\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"appId\",\n                    \"endpointId\"\n                ],\n                \"title\": \"EndpointDeletedEventData\",\n                \"type\": \"object\"\n            },\n            \"EndpointDisabledEvent\": {\n                \"description\": \"Sent when an endpoint has been automatically disabled after continuous failures.\",\n                \"example\": {\n                    \"data\": {\n                        \"appId\": \"app_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                        \"appUid\": \"unique-app-identifier\",\n                        \"endpointId\": \"ep_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                        \"failSince\": \"1970-01-01T00:00:00\"\n                    },\n                    \"type\": \"endpoint.disabled\"\n                },\n                \"properties\": {\n                    \"data\": {\n                        \"$ref\": \"#/components/schemas/EndpointDisabledEventData\"\n                    },\n                    \"type\": {\n                        \"default\": \"endpoint.disabled\",\n                        \"enum\": [\n                            \"endpoint.disabled\"\n                        ],\n                        \"title\": \"Type\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"data\"\n                ],\n                \"title\": \"EndpointDisabledEvent\",\n                \"type\": \"object\"\n            },\n            \"EndpointDisabledEventData\": {\n                \"properties\": {\n                    \"appId\": {\n                        \"example\": \"app_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                        \"title\": \"Appid\",\n                        \"type\": \"string\"\n                    },\n                    \"appUid\": {\n                        \"description\": \"Optional unique identifier for the application\",\n                        \"example\": \"unique-app-identifier\",\n                        \"maxLength\": 256,\n                        \"minLength\": 1,\n                        \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                        \"title\": \"Appuid\",\n                        \"type\": \"string\"\n                    },\n                    \"endpointId\": {\n                        \"example\": \"ep_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                        \"title\": \"Endpointid\",\n                        \"type\": \"string\"\n                    },\n                    \"failSince\": {\n                        \"format\": \"date-time\",\n                        \"title\": \"Failsince\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"appId\",\n                    \"endpointId\",\n                    \"failSince\"\n                ],\n                \"title\": \"EndpointDisabledEventData\",\n                \"type\": \"object\"\n            },\n            \"EndpointHeadersIn\": {\n                \"properties\": {\n                    \"headers\": {\n                        \"additionalProperties\": {\n                            \"type\": \"string\"\n                        },\n                        \"example\": {\n                            \"X-Example\": \"123\",\n                            \"X-Foobar\": \"Bar\"\n                        },\n                        \"title\": \"Headers\",\n                        \"type\": \"object\"\n                    }\n                },\n                \"required\": [\n                    \"headers\"\n                ],\n                \"title\": \"EndpointHeadersIn\",\n                \"type\": \"object\"\n            },\n            \"EndpointHeadersOut\": {\n                \"description\": \"The value of the headers is returned in the `headers` field.\\n\\nSensitive headers that have been redacted are returned in the sensitive field.\",\n                \"properties\": {\n                    \"headers\": {\n                        \"additionalProperties\": {\n                            \"type\": \"string\"\n                        },\n                        \"example\": {\n                            \"X-Example\": \"123\",\n                            \"X-Foobar\": \"Bar\"\n                        },\n                        \"title\": \"Headers\",\n                        \"type\": \"object\"\n                    },\n                    \"sensitive\": {\n                        \"example\": [\n                            \"Authorization\"\n                        ],\n                        \"items\": {\n                            \"example\": \"X-Foobar\",\n                            \"type\": \"string\"\n                        },\n                        \"title\": \"Sensitive\",\n                        \"type\": \"array\",\n                        \"uniqueItems\": true\n                    }\n                },\n                \"required\": [\n                    \"headers\",\n                    \"sensitive\"\n                ],\n                \"title\": \"EndpointHeadersOut\",\n                \"type\": \"object\"\n            },\n            \"EndpointIn\": {\n                \"properties\": {\n                    \"channels\": {\n                        \"description\": \"List of message channels this endpoint listens to (omit for all)\",\n                        \"example\": [\n                            \"project_123\",\n                            \"group_2\"\n                        ],\n                        \"items\": {\n                            \"example\": \"project_1337\",\n                            \"maxLength\": 128,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"type\": \"string\"\n                        },\n                        \"maxItems\": 10,\n                        \"minItems\": 1,\n                        \"title\": \"Channels\",\n                        \"type\": \"array\",\n                        \"uniqueItems\": true\n                    },\n                    \"description\": {\n                        \"default\": \"\",\n                        \"example\": \"An example endpoint name\",\n                        \"title\": \"Description\",\n                        \"type\": \"string\"\n                    },\n                    \"disabled\": {\n                        \"default\": false,\n                        \"example\": false,\n                        \"title\": \"Disabled\",\n                        \"type\": \"boolean\"\n                    },\n                    \"filterTypes\": {\n                        \"example\": [\n                            \"user.signup\",\n                            \"user.deleted\"\n                        ],\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"minItems\": 1,\n                        \"title\": \"Filtertypes\",\n                        \"type\": \"array\",\n                        \"uniqueItems\": true\n                    },\n                    \"rateLimit\": {\n                        \"example\": 1000,\n                        \"exclusiveMinimum\": 0.0,\n                        \"title\": \"Ratelimit\",\n                        \"type\": \"integer\"\n                    },\n                    \"secret\": {\n                        \"description\": \"The endpoint's verification secret. If `null` is passed, a secret is automatically generated.\",\n                        \"example\": \"whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD\",\n                        \"pattern\": \"^whsec_[a-zA-Z0-9+/]{32}$\",\n                        \"title\": \"Secret\",\n                        \"type\": \"string\"\n                    },\n                    \"uid\": {\n                        \"description\": \"Optional unique identifier for the endpoint\",\n                        \"example\": \"unique-endpoint-identifier\",\n                        \"maxLength\": 256,\n                        \"minLength\": 1,\n                        \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                        \"title\": \"Uid\",\n                        \"type\": \"string\"\n                    },\n                    \"url\": {\n                        \"example\": \"https://example.com/webhook/\",\n                        \"format\": \"uri\",\n                        \"maxLength\": 65536,\n                        \"minLength\": 1,\n                        \"title\": \"Url\",\n                        \"type\": \"string\"\n                    },\n                    \"version\": {\n                        \"example\": 1,\n                        \"exclusiveMinimum\": 0.0,\n                        \"title\": \"Version\",\n                        \"type\": \"integer\"\n                    }\n                },\n                \"required\": [\n                    \"url\",\n                    \"version\"\n                ],\n                \"title\": \"EndpointIn\",\n                \"type\": \"object\"\n            },\n            \"EndpointMessageOut\": {\n                \"properties\": {\n                    \"channels\": {\n                        \"description\": \"List of free-form identifiers that endpoints can filter by\",\n                        \"example\": [\n                            \"project_123\",\n                            \"group_2\"\n                        ],\n                        \"items\": {\n                            \"example\": \"project_1337\",\n                            \"maxLength\": 128,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"type\": \"string\"\n                        },\n                        \"maxItems\": 5,\n                        \"minItems\": 1,\n                        \"title\": \"Channels\",\n                        \"type\": \"array\",\n                        \"uniqueItems\": true\n                    },\n                    \"eventId\": {\n                        \"description\": \"Optional unique identifier for the message\",\n                        \"example\": \"evt_pNZKtWg8Azow\",\n                        \"maxLength\": 256,\n                        \"minLength\": 1,\n                        \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                        \"title\": \"Eventid\",\n                        \"type\": \"string\"\n                    },\n                    \"eventType\": {\n                        \"example\": \"user.signup\",\n                        \"maxLength\": 256,\n                        \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                        \"title\": \"Eventtype\",\n                        \"type\": \"string\"\n                    },\n                    \"id\": {\n                        \"example\": \"msg_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                        \"title\": \"Id\",\n                        \"type\": \"string\"\n                    },\n                    \"nextAttempt\": {\n                        \"format\": \"date-time\",\n                        \"title\": \"Nextattempt\",\n                        \"type\": \"string\"\n                    },\n                    \"payload\": {\n                        \"example\": {\n                            \"email\": \"test@example.com\",\n                            \"username\": \"test_user\"\n                        },\n                        \"title\": \"Payload\",\n                        \"type\": \"object\"\n                    },\n                    \"status\": {\n                        \"$ref\": \"#/components/schemas/MessageStatus\"\n                    },\n                    \"timestamp\": {\n                        \"format\": \"date-time\",\n                        \"title\": \"Timestamp\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"eventType\",\n                    \"payload\",\n                    \"id\",\n                    \"timestamp\",\n                    \"status\"\n                ],\n                \"title\": \"EndpointMessageOut\",\n                \"type\": \"object\"\n            },\n            \"EndpointOut\": {\n                \"properties\": {\n                    \"channels\": {\n                        \"description\": \"List of message channels this endpoint listens to (omit for all)\",\n                        \"example\": [\n                            \"project_123\",\n                            \"group_2\"\n                        ],\n                        \"items\": {\n                            \"example\": \"project_1337\",\n                            \"maxLength\": 128,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"type\": \"string\"\n                        },\n                        \"maxItems\": 10,\n                        \"minItems\": 1,\n                        \"title\": \"Channels\",\n                        \"type\": \"array\",\n                        \"uniqueItems\": true\n                    },\n                    \"createdAt\": {\n                        \"format\": \"date-time\",\n                        \"title\": \"Createdat\",\n                        \"type\": \"string\"\n                    },\n                    \"description\": {\n                        \"default\": \"\",\n                        \"example\": \"An example endpoint name\",\n                        \"title\": \"Description\",\n                        \"type\": \"string\"\n                    },\n                    \"disabled\": {\n                        \"default\": false,\n                        \"example\": false,\n                        \"title\": \"Disabled\",\n                        \"type\": \"boolean\"\n                    },\n                    \"filterTypes\": {\n                        \"example\": [\n                            \"user.signup\",\n                            \"user.deleted\"\n                        ],\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"minItems\": 1,\n                        \"title\": \"Filtertypes\",\n                        \"type\": \"array\",\n                        \"uniqueItems\": true\n                    },\n                    \"id\": {\n                        \"example\": \"ep_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                        \"title\": \"Id\",\n                        \"type\": \"string\"\n                    },\n                    \"rateLimit\": {\n                        \"example\": 1000,\n                        \"exclusiveMinimum\": 0.0,\n                        \"title\": \"Ratelimit\",\n                        \"type\": \"integer\"\n                    },\n                    \"uid\": {\n                        \"description\": \"Optional unique identifier for the endpoint\",\n                        \"example\": \"unique-endpoint-identifier\",\n                        \"maxLength\": 256,\n                        \"minLength\": 1,\n                        \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                        \"title\": \"Uid\",\n                        \"type\": \"string\"\n                    },\n                    \"updatedAt\": {\n                        \"format\": \"date-time\",\n                        \"title\": \"Updatedat\",\n                        \"type\": \"string\"\n                    },\n                    \"url\": {\n                        \"example\": \"https://example.com/webhook/\",\n                        \"format\": \"uri\",\n                        \"maxLength\": 65536,\n                        \"minLength\": 1,\n                        \"title\": \"Url\",\n                        \"type\": \"string\"\n                    },\n                    \"version\": {\n                        \"example\": 1,\n                        \"exclusiveMinimum\": 0.0,\n                        \"title\": \"Version\",\n                        \"type\": \"integer\"\n                    }\n                },\n                \"required\": [\n                    \"url\",\n                    \"version\",\n                    \"id\",\n                    \"createdAt\",\n                    \"updatedAt\"\n                ],\n                \"title\": \"EndpointOut\",\n                \"type\": \"object\"\n            },\n            \"EndpointSecretOut\": {\n                \"properties\": {\n                    \"key\": {\n                        \"description\": \"The endpoint's verification secret. If `null` is passed, a secret is automatically generated.\",\n                        \"example\": \"whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD\",\n                        \"pattern\": \"^whsec_[a-zA-Z0-9+/]{32}$\",\n                        \"title\": \"Key\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"key\"\n                ],\n                \"title\": \"EndpointSecretOut\",\n                \"type\": \"object\"\n            },\n            \"EndpointSecretRotateIn\": {\n                \"properties\": {\n                    \"key\": {\n                        \"description\": \"The endpoint's verification secret. If `null` is passed, a secret is automatically generated.\",\n                        \"example\": \"whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD\",\n                        \"pattern\": \"^whsec_[a-zA-Z0-9+/]{32}$\",\n                        \"title\": \"Key\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"title\": \"EndpointSecretRotateIn\",\n                \"type\": \"object\"\n            },\n            \"EndpointStats\": {\n                \"properties\": {\n                    \"fail\": {\n                        \"title\": \"Fail\",\n                        \"type\": \"integer\"\n                    },\n                    \"pending\": {\n                        \"title\": \"Pending\",\n                        \"type\": \"integer\"\n                    },\n                    \"sending\": {\n                        \"title\": \"Sending\",\n                        \"type\": \"integer\"\n                    },\n                    \"success\": {\n                        \"title\": \"Success\",\n                        \"type\": \"integer\"\n                    }\n                },\n                \"required\": [\n                    \"sending\",\n                    \"success\",\n                    \"pending\",\n                    \"fail\"\n                ],\n                \"title\": \"EndpointStats\",\n                \"type\": \"object\"\n            },\n            \"EndpointUpdate\": {\n                \"properties\": {\n                    \"channels\": {\n                        \"description\": \"List of message channels this endpoint listens to (omit for all)\",\n                        \"example\": [\n                            \"project_123\",\n                            \"group_2\"\n                        ],\n                        \"items\": {\n                            \"example\": \"project_1337\",\n                            \"maxLength\": 128,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"type\": \"string\"\n                        },\n                        \"maxItems\": 10,\n                        \"minItems\": 1,\n                        \"title\": \"Channels\",\n                        \"type\": \"array\",\n                        \"uniqueItems\": true\n                    },\n                    \"description\": {\n                        \"default\": \"\",\n                        \"example\": \"An example endpoint name\",\n                        \"title\": \"Description\",\n                        \"type\": \"string\"\n                    },\n                    \"disabled\": {\n                        \"default\": false,\n                        \"example\": false,\n                        \"title\": \"Disabled\",\n                        \"type\": \"boolean\"\n                    },\n                    \"filterTypes\": {\n                        \"example\": [\n                            \"user.signup\",\n                            \"user.deleted\"\n                        ],\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"minItems\": 1,\n                        \"title\": \"Filtertypes\",\n                        \"type\": \"array\",\n                        \"uniqueItems\": true\n                    },\n                    \"rateLimit\": {\n                        \"example\": 1000,\n                        \"exclusiveMinimum\": 0.0,\n                        \"title\": \"Ratelimit\",\n                        \"type\": \"integer\"\n                    },\n                    \"uid\": {\n                        \"description\": \"Optional unique identifier for the endpoint\",\n                        \"example\": \"unique-endpoint-identifier\",\n                        \"maxLength\": 256,\n                        \"minLength\": 1,\n                        \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                        \"title\": \"Uid\",\n                        \"type\": \"string\"\n                    },\n                    \"url\": {\n                        \"example\": \"https://example.com/webhook/\",\n                        \"format\": \"uri\",\n                        \"maxLength\": 65536,\n                        \"minLength\": 1,\n                        \"title\": \"Url\",\n                        \"type\": \"string\"\n                    },\n                    \"version\": {\n                        \"example\": 1,\n                        \"exclusiveMinimum\": 0.0,\n                        \"title\": \"Version\",\n                        \"type\": \"integer\"\n                    }\n                },\n                \"required\": [\n                    \"url\",\n                    \"version\"\n                ],\n                \"title\": \"EndpointUpdate\",\n                \"type\": \"object\"\n            },\n            \"EndpointUpdatedEvent\": {\n                \"description\": \"Sent when an endpoint is updated.\",\n                \"example\": {\n                    \"data\": {\n                        \"appId\": \"app_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                        \"appUid\": \"unique-app-identifier\",\n                        \"endpointId\": \"ep_1srOrx2ZWZBpBUvZwXKQmoEYga2\"\n                    },\n                    \"type\": \"endpoint.updated\"\n                },\n                \"properties\": {\n                    \"data\": {\n                        \"$ref\": \"#/components/schemas/EndpointUpdatedEventData\"\n                    },\n                    \"type\": {\n                        \"default\": \"endpoint.updated\",\n                        \"enum\": [\n                            \"endpoint.updated\"\n                        ],\n                        \"title\": \"Type\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"data\"\n                ],\n                \"title\": \"EndpointUpdatedEvent\",\n                \"type\": \"object\"\n            },\n            \"EndpointUpdatedEventData\": {\n                \"properties\": {\n                    \"appId\": {\n                        \"example\": \"app_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                        \"title\": \"Appid\",\n                        \"type\": \"string\"\n                    },\n                    \"appUid\": {\n                        \"description\": \"Optional unique identifier for the application\",\n                        \"example\": \"unique-app-identifier\",\n                        \"maxLength\": 256,\n                        \"minLength\": 1,\n                        \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                        \"title\": \"Appuid\",\n                        \"type\": \"string\"\n                    },\n                    \"endpointId\": {\n                        \"example\": \"ep_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                        \"title\": \"Endpointid\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"appId\",\n                    \"endpointId\"\n                ],\n                \"title\": \"EndpointUpdatedEventData\",\n                \"type\": \"object\"\n            },\n            \"EnvironmentIn\": {\n                \"properties\": {\n                    \"createdAt\": {\n                        \"format\": \"date-time\",\n                        \"title\": \"Createdat\",\n                        \"type\": \"string\"\n                    },\n                    \"eventTypes\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/EventTypeIn\"\n                        },\n                        \"title\": \"Eventtypes\",\n                        \"type\": \"array\"\n                    },\n                    \"settings\": {\n                        \"$ref\": \"#/components/schemas/SettingsIn\"\n                    },\n                    \"version\": {\n                        \"title\": \"Version\",\n                        \"type\": \"integer\"\n                    }\n                },\n                \"required\": [\n                    \"version\",\n                    \"createdAt\"\n                ],\n                \"title\": \"EnvironmentIn\",\n                \"type\": \"object\"\n            },\n            \"EnvironmentOut\": {\n                \"properties\": {\n                    \"createdAt\": {\n                        \"format\": \"date-time\",\n                        \"title\": \"Createdat\",\n                        \"type\": \"string\"\n                    },\n                    \"eventTypes\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/EventTypeOut\"\n                        },\n                        \"title\": \"Eventtypes\",\n                        \"type\": \"array\"\n                    },\n                    \"settings\": {\n                        \"$ref\": \"#/components/schemas/SettingsOut\"\n                    },\n                    \"version\": {\n                        \"default\": 1,\n                        \"title\": \"Version\",\n                        \"type\": \"integer\"\n                    }\n                },\n                \"required\": [\n                    \"createdAt\",\n                    \"eventTypes\"\n                ],\n                \"title\": \"EnvironmentOut\",\n                \"type\": \"object\"\n            },\n            \"EnvironmentSettingsOut\": {\n                \"properties\": {\n                    \"customColor\": {\n                        \"format\": \"color\",\n                        \"title\": \"Customcolor\",\n                        \"type\": \"string\"\n                    },\n                    \"customFontFamily\": {\n                        \"example\": \"Open Sans\",\n                        \"pattern\": \"^[a-zA-Z0-9\\\\-_ ]+$\",\n                        \"title\": \"Customfontfamily\",\n                        \"type\": \"string\"\n                    },\n                    \"customLogoUrl\": {\n                        \"format\": \"uri\",\n                        \"maxLength\": 65536,\n                        \"minLength\": 1,\n                        \"title\": \"Customlogourl\",\n                        \"type\": \"string\"\n                    },\n                    \"customThemeOverride\": {\n                        \"$ref\": \"#/components/schemas/CustomThemeOverride\"\n                    },\n                    \"enableChannels\": {\n                        \"default\": false,\n                        \"title\": \"Enablechannels\",\n                        \"type\": \"boolean\"\n                    },\n                    \"enableIntegrationManagement\": {\n                        \"default\": false,\n                        \"title\": \"Enableintegrationmanagement\",\n                        \"type\": \"boolean\"\n                    }\n                },\n                \"title\": \"EnvironmentSettingsOut\",\n                \"type\": \"object\"\n            },\n            \"EventExampleIn\": {\n                \"properties\": {\n                    \"eventType\": {\n                        \"example\": \"user.signup\",\n                        \"maxLength\": 256,\n                        \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                        \"title\": \"Eventtype\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"eventType\"\n                ],\n                \"title\": \"EventExampleIn\",\n                \"type\": \"object\"\n            },\n            \"EventTypeExampleOut\": {\n                \"properties\": {\n                    \"example\": {\n                        \"example\": {\n                            \"data\": {\n                                \"email\": \"test@example.com\",\n                                \"username\": \"test_user\"\n                            },\n                            \"type\": \"user.created\"\n                        },\n                        \"title\": \"Example\",\n                        \"type\": \"object\"\n                    }\n                },\n                \"required\": [\n                    \"example\"\n                ],\n                \"title\": \"EventTypeExampleOut\",\n                \"type\": \"object\"\n            },\n            \"EventTypeIn\": {\n                \"properties\": {\n                    \"archived\": {\n                        \"default\": false,\n                        \"example\": false,\n                        \"title\": \"Archived\",\n                        \"type\": \"boolean\"\n                    },\n                    \"description\": {\n                        \"example\": \"A user has signed up\",\n                        \"title\": \"Description\",\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"example\": \"user.signup\",\n                        \"maxLength\": 256,\n                        \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                        \"title\": \"Name\",\n                        \"type\": \"string\"\n                    },\n                    \"schemas\": {\n                        \"additionalProperties\": {\n                            \"example\": {\n                                \"description\": \"An invoice was paid by a user\",\n                                \"properties\": {\n                                    \"invoiceId\": {\n                                        \"description\": \"The invoice id\",\n                                        \"type\": \"string\"\n                                    },\n                                    \"userId\": {\n                                        \"description\": \"The user id\",\n                                        \"type\": \"string\"\n                                    }\n                                },\n                                \"required\": [\n                                    \"invoiceId\",\n                                    \"userId\"\n                                ],\n                                \"title\": \"Invoice Paid Event\",\n                                \"type\": \"object\"\n                            },\n                            \"type\": \"object\"\n                        },\n                        \"description\": \"The schema for the event type for a specific version as a JSON schema.\",\n                        \"example\": {\n                            \"1\": {\n                                \"description\": \"An invoice was paid by a user\",\n                                \"properties\": {\n                                    \"invoiceId\": {\n                                        \"description\": \"The invoice id\",\n                                        \"type\": \"string\"\n                                    },\n                                    \"userId\": {\n                                        \"description\": \"The user id\",\n                                        \"type\": \"string\"\n                                    }\n                                },\n                                \"required\": [\n                                    \"invoiceId\",\n                                    \"userId\"\n                                ],\n                                \"title\": \"Invoice Paid Event\",\n                                \"type\": \"object\"\n                            }\n                        },\n                        \"title\": \"Schemas\",\n                        \"type\": \"object\"\n                    }\n                },\n                \"required\": [\n                    \"description\",\n                    \"name\"\n                ],\n                \"title\": \"EventTypeIn\",\n                \"type\": \"object\"\n            },\n            \"EventTypeOut\": {\n                \"properties\": {\n                    \"archived\": {\n                        \"default\": false,\n                        \"example\": false,\n                        \"title\": \"Archived\",\n                        \"type\": \"boolean\"\n                    },\n                    \"createdAt\": {\n                        \"format\": \"date-time\",\n                        \"title\": \"Createdat\",\n                        \"type\": \"string\"\n                    },\n                    \"description\": {\n                        \"example\": \"A user has signed up\",\n                        \"title\": \"Description\",\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"example\": \"user.signup\",\n                        \"maxLength\": 256,\n                        \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                        \"title\": \"Name\",\n                        \"type\": \"string\"\n                    },\n                    \"schemas\": {\n                        \"additionalProperties\": {\n                            \"example\": {\n                                \"description\": \"An invoice was paid by a user\",\n                                \"properties\": {\n                                    \"invoiceId\": {\n                                        \"description\": \"The invoice id\",\n                                        \"type\": \"string\"\n                                    },\n                                    \"userId\": {\n                                        \"description\": \"The user id\",\n                                        \"type\": \"string\"\n                                    }\n                                },\n                                \"required\": [\n                                    \"invoiceId\",\n                                    \"userId\"\n                                ],\n                                \"title\": \"Invoice Paid Event\",\n                                \"type\": \"object\"\n                            },\n                            \"type\": \"object\"\n                        },\n                        \"description\": \"The schema for the event type for a specific version as a JSON schema.\",\n                        \"example\": {\n                            \"1\": {\n                                \"description\": \"An invoice was paid by a user\",\n                                \"properties\": {\n                                    \"invoiceId\": {\n                                        \"description\": \"The invoice id\",\n                                        \"type\": \"string\"\n                                    },\n                                    \"userId\": {\n                                        \"description\": \"The user id\",\n                                        \"type\": \"string\"\n                                    }\n                                },\n                                \"required\": [\n                                    \"invoiceId\",\n                                    \"userId\"\n                                ],\n                                \"title\": \"Invoice Paid Event\",\n                                \"type\": \"object\"\n                            }\n                        },\n                        \"title\": \"Schemas\",\n                        \"type\": \"object\"\n                    },\n                    \"updatedAt\": {\n                        \"format\": \"date-time\",\n                        \"title\": \"Updatedat\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"description\",\n                    \"name\",\n                    \"createdAt\",\n                    \"updatedAt\"\n                ],\n                \"title\": \"EventTypeOut\",\n                \"type\": \"object\"\n            },\n            \"EventTypeSchemaIn\": {\n                \"properties\": {\n                    \"schema\": {\n                        \"description\": \"The schema for an event type\",\n                        \"example\": {\n                            \"description\": \"An invoice was paid by a user\",\n                            \"properties\": {\n                                \"invoiceId\": {\n                                    \"description\": \"The invoice id\",\n                                    \"type\": \"string\"\n                                },\n                                \"userId\": {\n                                    \"description\": \"The user id\",\n                                    \"type\": \"string\"\n                                }\n                            },\n                            \"required\": [\n                                \"invoiceId\",\n                                \"userId\"\n                            ],\n                            \"title\": \"Invoice Paid Event\",\n                            \"type\": \"object\"\n                        },\n                        \"title\": \"Schema\",\n                        \"type\": \"object\"\n                    }\n                },\n                \"required\": [\n                    \"schema\"\n                ],\n                \"title\": \"EventTypeSchemaIn\",\n                \"type\": \"object\"\n            },\n            \"EventTypeUpdate\": {\n                \"properties\": {\n                    \"archived\": {\n                        \"default\": false,\n                        \"example\": false,\n                        \"title\": \"Archived\",\n                        \"type\": \"boolean\"\n                    },\n                    \"description\": {\n                        \"example\": \"A user has signed up\",\n                        \"title\": \"Description\",\n                        \"type\": \"string\"\n                    },\n                    \"schemas\": {\n                        \"additionalProperties\": {\n                            \"example\": {\n                                \"description\": \"An invoice was paid by a user\",\n                                \"properties\": {\n                                    \"invoiceId\": {\n                                        \"description\": \"The invoice id\",\n                                        \"type\": \"string\"\n                                    },\n                                    \"userId\": {\n                                        \"description\": \"The user id\",\n                                        \"type\": \"string\"\n                                    }\n                                },\n                                \"required\": [\n                                    \"invoiceId\",\n                                    \"userId\"\n                                ],\n                                \"title\": \"Invoice Paid Event\",\n                                \"type\": \"object\"\n                            },\n                            \"type\": \"object\"\n                        },\n                        \"description\": \"The schema for the event type for a specific version as a JSON schema.\",\n                        \"example\": {\n                            \"1\": {\n                                \"description\": \"An invoice was paid by a user\",\n                                \"properties\": {\n                                    \"invoiceId\": {\n                                        \"description\": \"The invoice id\",\n                                        \"type\": \"string\"\n                                    },\n                                    \"userId\": {\n                                        \"description\": \"The user id\",\n                                        \"type\": \"string\"\n                                    }\n                                },\n                                \"required\": [\n                                    \"invoiceId\",\n                                    \"userId\"\n                                ],\n                                \"title\": \"Invoice Paid Event\",\n                                \"type\": \"object\"\n                            }\n                        },\n                        \"title\": \"Schemas\",\n                        \"type\": \"object\"\n                    }\n                },\n                \"required\": [\n                    \"description\"\n                ],\n                \"title\": \"EventTypeUpdate\",\n                \"type\": \"object\"\n            },\n            \"ExportEnvironmentIn\": {\n                \"properties\": {},\n                \"title\": \"ExportEnvironmentIn\",\n                \"type\": \"object\"\n            },\n            \"FontSizeConfig\": {\n                \"properties\": {\n                    \"base\": {\n                        \"title\": \"Base\",\n                        \"type\": \"integer\"\n                    }\n                },\n                \"title\": \"FontSizeConfig\",\n                \"type\": \"object\"\n            },\n            \"HTTPValidationError\": {\n                \"properties\": {\n                    \"detail\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/ValidationError\"\n                        },\n                        \"title\": \"Detail\",\n                        \"type\": \"array\"\n                    }\n                },\n                \"title\": \"HTTPValidationError\",\n                \"type\": \"object\"\n            },\n            \"HttpErrorOut\": {\n                \"properties\": {\n                    \"code\": {\n                        \"title\": \"Code\",\n                        \"type\": \"string\"\n                    },\n                    \"detail\": {\n                        \"title\": \"Detail\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"code\",\n                    \"detail\"\n                ],\n                \"title\": \"HttpError\",\n                \"type\": \"object\"\n            },\n            \"IntegrationIn\": {\n                \"properties\": {\n                    \"name\": {\n                        \"example\": \"Example Integration\",\n                        \"title\": \"Name\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"name\"\n                ],\n                \"title\": \"IntegrationIn\",\n                \"type\": \"object\"\n            },\n            \"IntegrationKeyOut\": {\n                \"properties\": {\n                    \"key\": {\n                        \"example\": \"integsk_kV3ts5tKPNJN4Dl25cMTfUNdmabxbX0O\",\n                        \"title\": \"Key\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"key\"\n                ],\n                \"title\": \"IntegrationKeyOut\",\n                \"type\": \"object\"\n            },\n            \"IntegrationOut\": {\n                \"properties\": {\n                    \"createdAt\": {\n                        \"format\": \"date-time\",\n                        \"title\": \"Createdat\",\n                        \"type\": \"string\"\n                    },\n                    \"id\": {\n                        \"example\": \"integ_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                        \"title\": \"Id\",\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"example\": \"Example Integration\",\n                        \"title\": \"Name\",\n                        \"type\": \"string\"\n                    },\n                    \"updatedAt\": {\n                        \"format\": \"date-time\",\n                        \"title\": \"Updatedat\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"id\",\n                    \"createdAt\",\n                    \"updatedAt\"\n                ],\n                \"title\": \"IntegrationOut\",\n                \"type\": \"object\"\n            },\n            \"IntegrationUpdate\": {\n                \"properties\": {\n                    \"name\": {\n                        \"example\": \"Example Integration\",\n                        \"title\": \"Name\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"name\"\n                ],\n                \"title\": \"IntegrationUpdate\",\n                \"type\": \"object\"\n            },\n            \"ListResponse_ApplicationOut_\": {\n                \"properties\": {\n                    \"data\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/ApplicationOut\"\n                        },\n                        \"title\": \"Data\",\n                        \"type\": \"array\"\n                    },\n                    \"done\": {\n                        \"title\": \"Done\",\n                        \"type\": \"boolean\"\n                    },\n                    \"iterator\": {\n                        \"example\": \"iterator\",\n                        \"title\": \"Iterator\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"data\",\n                    \"done\"\n                ],\n                \"title\": \"ListResponse[ApplicationOut]\",\n                \"type\": \"object\"\n            },\n            \"ListResponse_EndpointMessageOut_\": {\n                \"properties\": {\n                    \"data\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/EndpointMessageOut\"\n                        },\n                        \"title\": \"Data\",\n                        \"type\": \"array\"\n                    },\n                    \"done\": {\n                        \"title\": \"Done\",\n                        \"type\": \"boolean\"\n                    },\n                    \"iterator\": {\n                        \"example\": \"iterator\",\n                        \"title\": \"Iterator\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"data\",\n                    \"done\"\n                ],\n                \"title\": \"ListResponse[EndpointMessageOut]\",\n                \"type\": \"object\"\n            },\n            \"ListResponse_EndpointOut_\": {\n                \"properties\": {\n                    \"data\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/EndpointOut\"\n                        },\n                        \"title\": \"Data\",\n                        \"type\": \"array\"\n                    },\n                    \"done\": {\n                        \"title\": \"Done\",\n                        \"type\": \"boolean\"\n                    },\n                    \"iterator\": {\n                        \"example\": \"iterator\",\n                        \"title\": \"Iterator\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"data\",\n                    \"done\"\n                ],\n                \"title\": \"ListResponse[EndpointOut]\",\n                \"type\": \"object\"\n            },\n            \"ListResponse_EventTypeOut_\": {\n                \"properties\": {\n                    \"data\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/EventTypeOut\"\n                        },\n                        \"title\": \"Data\",\n                        \"type\": \"array\"\n                    },\n                    \"done\": {\n                        \"title\": \"Done\",\n                        \"type\": \"boolean\"\n                    },\n                    \"iterator\": {\n                        \"example\": \"iterator\",\n                        \"title\": \"Iterator\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"data\",\n                    \"done\"\n                ],\n                \"title\": \"ListResponse[EventTypeOut]\",\n                \"type\": \"object\"\n            },\n            \"ListResponse_IntegrationOut_\": {\n                \"properties\": {\n                    \"data\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/IntegrationOut\"\n                        },\n                        \"title\": \"Data\",\n                        \"type\": \"array\"\n                    },\n                    \"done\": {\n                        \"title\": \"Done\",\n                        \"type\": \"boolean\"\n                    },\n                    \"iterator\": {\n                        \"example\": \"iterator\",\n                        \"title\": \"Iterator\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"data\",\n                    \"done\"\n                ],\n                \"title\": \"ListResponse[IntegrationOut]\",\n                \"type\": \"object\"\n            },\n            \"ListResponse_MessageAttemptEndpointOut_\": {\n                \"properties\": {\n                    \"data\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/MessageAttemptEndpointOut\"\n                        },\n                        \"title\": \"Data\",\n                        \"type\": \"array\"\n                    },\n                    \"done\": {\n                        \"title\": \"Done\",\n                        \"type\": \"boolean\"\n                    },\n                    \"iterator\": {\n                        \"example\": \"iterator\",\n                        \"title\": \"Iterator\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"data\",\n                    \"done\"\n                ],\n                \"title\": \"ListResponse[MessageAttemptEndpointOut]\",\n                \"type\": \"object\"\n            },\n            \"ListResponse_MessageAttemptOut_\": {\n                \"properties\": {\n                    \"data\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/MessageAttemptOut\"\n                        },\n                        \"title\": \"Data\",\n                        \"type\": \"array\"\n                    },\n                    \"done\": {\n                        \"title\": \"Done\",\n                        \"type\": \"boolean\"\n                    },\n                    \"iterator\": {\n                        \"example\": \"iterator\",\n                        \"title\": \"Iterator\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"data\",\n                    \"done\"\n                ],\n                \"title\": \"ListResponse[MessageAttemptOut]\",\n                \"type\": \"object\"\n            },\n            \"ListResponse_MessageEndpointOut_\": {\n                \"properties\": {\n                    \"data\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/MessageEndpointOut\"\n                        },\n                        \"title\": \"Data\",\n                        \"type\": \"array\"\n                    },\n                    \"done\": {\n                        \"title\": \"Done\",\n                        \"type\": \"boolean\"\n                    },\n                    \"iterator\": {\n                        \"example\": \"iterator\",\n                        \"title\": \"Iterator\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"data\",\n                    \"done\"\n                ],\n                \"title\": \"ListResponse[MessageEndpointOut]\",\n                \"type\": \"object\"\n            },\n            \"ListResponse_MessageOut_\": {\n                \"properties\": {\n                    \"data\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/MessageOut\"\n                        },\n                        \"title\": \"Data\",\n                        \"type\": \"array\"\n                    },\n                    \"done\": {\n                        \"title\": \"Done\",\n                        \"type\": \"boolean\"\n                    },\n                    \"iterator\": {\n                        \"example\": \"iterator\",\n                        \"title\": \"Iterator\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"data\",\n                    \"done\"\n                ],\n                \"title\": \"ListResponse[MessageOut]\",\n                \"type\": \"object\"\n            },\n            \"MessageAttemptEndpointOut\": {\n                \"properties\": {\n                    \"id\": {\n                        \"example\": \"atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                        \"title\": \"Id\",\n                        \"type\": \"string\"\n                    },\n                    \"response\": {\n                        \"example\": \"{}\",\n                        \"title\": \"Response\",\n                        \"type\": \"string\"\n                    },\n                    \"responseStatusCode\": {\n                        \"example\": 200,\n                        \"title\": \"Responsestatuscode\",\n                        \"type\": \"integer\"\n                    },\n                    \"status\": {\n                        \"$ref\": \"#/components/schemas/MessageStatus\"\n                    },\n                    \"timestamp\": {\n                        \"format\": \"date-time\",\n                        \"title\": \"Timestamp\",\n                        \"type\": \"string\"\n                    },\n                    \"triggerType\": {\n                        \"$ref\": \"#/components/schemas/MessageAttemptTriggerType\"\n                    }\n                },\n                \"required\": [\n                    \"id\",\n                    \"response\",\n                    \"responseStatusCode\",\n                    \"timestamp\",\n                    \"status\",\n                    \"triggerType\"\n                ],\n                \"title\": \"MessageAttemptEndpointOut\",\n                \"type\": \"object\"\n            },\n            \"MessageAttemptExhaustedEvent\": {\n                \"description\": \"Sent when a message delivery has failed (all of the retry attempts have been exhausted).\",\n                \"example\": {\n                    \"data\": {\n                        \"appId\": \"app_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                        \"appUid\": \"unique-app-identifier\",\n                        \"endpointId\": \"ep_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                        \"lastAttempt\": {\n                            \"id\": \"atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"responseStatusCode\": 500,\n                            \"timestamp\": \"1970-01-01T00:00:00\"\n                        },\n                        \"msgId\": \"msg_1srOrx2ZWZBpBUvZwXKQmoEYga2\"\n                    },\n                    \"type\": \"message.attempt.exhausted\"\n                },\n                \"properties\": {\n                    \"data\": {\n                        \"$ref\": \"#/components/schemas/MessageAttemptExhaustedEventData\"\n                    },\n                    \"type\": {\n                        \"default\": \"message.attempt.exhausted\",\n                        \"enum\": [\n                            \"message.attempt.exhausted\"\n                        ],\n                        \"title\": \"Type\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"data\"\n                ],\n                \"title\": \"MessageAttemptExhaustedEvent\",\n                \"type\": \"object\"\n            },\n            \"MessageAttemptExhaustedEventData\": {\n                \"properties\": {\n                    \"appId\": {\n                        \"example\": \"app_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                        \"title\": \"Appid\",\n                        \"type\": \"string\"\n                    },\n                    \"appUid\": {\n                        \"description\": \"Optional unique identifier for the application\",\n                        \"example\": \"unique-app-identifier\",\n                        \"maxLength\": 256,\n                        \"minLength\": 1,\n                        \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                        \"title\": \"Appuid\",\n                        \"type\": \"string\"\n                    },\n                    \"endpointId\": {\n                        \"example\": \"ep_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                        \"title\": \"Endpointid\",\n                        \"type\": \"string\"\n                    },\n                    \"lastAttempt\": {\n                        \"$ref\": \"#/components/schemas/MessageAttemptFailedEvent\"\n                    },\n                    \"msgId\": {\n                        \"example\": \"msg_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                        \"title\": \"Msgid\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"appId\",\n                    \"msgId\",\n                    \"endpointId\",\n                    \"lastAttempt\"\n                ],\n                \"title\": \"MessageAttemptExhaustedEventData\",\n                \"type\": \"object\"\n            },\n            \"MessageAttemptFailedEvent\": {\n                \"properties\": {\n                    \"id\": {\n                        \"example\": \"atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                        \"title\": \"Id\",\n                        \"type\": \"string\"\n                    },\n                    \"responseStatusCode\": {\n                        \"example\": 500,\n                        \"title\": \"Responsestatuscode\",\n                        \"type\": \"integer\"\n                    },\n                    \"timestamp\": {\n                        \"format\": \"date-time\",\n                        \"title\": \"Timestamp\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"id\",\n                    \"responseStatusCode\",\n                    \"timestamp\"\n                ],\n                \"title\": \"MessageAttemptFailedEvent\",\n                \"type\": \"object\"\n            },\n            \"MessageAttemptOut\": {\n                \"properties\": {\n                    \"endpointId\": {\n                        \"example\": \"ep_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                        \"title\": \"Endpointid\",\n                        \"type\": \"string\"\n                    },\n                    \"id\": {\n                        \"example\": \"atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                        \"title\": \"Id\",\n                        \"type\": \"string\"\n                    },\n                    \"response\": {\n                        \"example\": \"{}\",\n                        \"title\": \"Response\",\n                        \"type\": \"string\"\n                    },\n                    \"responseStatusCode\": {\n                        \"example\": 200,\n                        \"title\": \"Responsestatuscode\",\n                        \"type\": \"integer\"\n                    },\n                    \"status\": {\n                        \"$ref\": \"#/components/schemas/MessageStatus\"\n                    },\n                    \"timestamp\": {\n                        \"format\": \"date-time\",\n                        \"title\": \"Timestamp\",\n                        \"type\": \"string\"\n                    },\n                    \"triggerType\": {\n                        \"$ref\": \"#/components/schemas/MessageAttemptTriggerType\"\n                    }\n                },\n                \"required\": [\n                    \"id\",\n                    \"response\",\n                    \"responseStatusCode\",\n                    \"timestamp\",\n                    \"status\",\n                    \"triggerType\",\n                    \"endpointId\"\n                ],\n                \"title\": \"MessageAttemptOut\",\n                \"type\": \"object\"\n            },\n            \"MessageAttemptTriggerType\": {\n                \"description\": \"The reason an attempt was made:\\n- Scheduled = 0\\n- Manual = 1\",\n                \"enum\": [\n                    0,\n                    1\n                ],\n                \"title\": \"MessageAttemptTriggerType\",\n                \"type\": \"integer\",\n                \"x-enum-varnames\": [\n                    \"Scheduled\",\n                    \"Manual\"\n                ]\n            },\n            \"MessageEndpointOut\": {\n                \"properties\": {\n                    \"channels\": {\n                        \"description\": \"List of message channels this endpoint listens to (omit for all)\",\n                        \"example\": [\n                            \"project_123\",\n                            \"group_2\"\n                        ],\n                        \"items\": {\n                            \"example\": \"project_1337\",\n                            \"maxLength\": 128,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"type\": \"string\"\n                        },\n                        \"maxItems\": 10,\n                        \"minItems\": 1,\n                        \"title\": \"Channels\",\n                        \"type\": \"array\",\n                        \"uniqueItems\": true\n                    },\n                    \"createdAt\": {\n                        \"format\": \"date-time\",\n                        \"title\": \"Createdat\",\n                        \"type\": \"string\"\n                    },\n                    \"description\": {\n                        \"default\": \"\",\n                        \"example\": \"An example endpoint name\",\n                        \"title\": \"Description\",\n                        \"type\": \"string\"\n                    },\n                    \"disabled\": {\n                        \"default\": false,\n                        \"example\": false,\n                        \"title\": \"Disabled\",\n                        \"type\": \"boolean\"\n                    },\n                    \"filterTypes\": {\n                        \"example\": [\n                            \"user.signup\",\n                            \"user.deleted\"\n                        ],\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"minItems\": 1,\n                        \"title\": \"Filtertypes\",\n                        \"type\": \"array\",\n                        \"uniqueItems\": true\n                    },\n                    \"id\": {\n                        \"example\": \"ep_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                        \"title\": \"Id\",\n                        \"type\": \"string\"\n                    },\n                    \"nextAttempt\": {\n                        \"format\": \"date-time\",\n                        \"title\": \"Nextattempt\",\n                        \"type\": \"string\"\n                    },\n                    \"rateLimit\": {\n                        \"example\": 1000,\n                        \"exclusiveMinimum\": 0.0,\n                        \"title\": \"Ratelimit\",\n                        \"type\": \"integer\"\n                    },\n                    \"status\": {\n                        \"$ref\": \"#/components/schemas/MessageStatus\"\n                    },\n                    \"uid\": {\n                        \"description\": \"Optional unique identifier for the endpoint\",\n                        \"example\": \"unique-endpoint-identifier\",\n                        \"maxLength\": 256,\n                        \"minLength\": 1,\n                        \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                        \"title\": \"Uid\",\n                        \"type\": \"string\"\n                    },\n                    \"url\": {\n                        \"example\": \"https://example.com/webhook/\",\n                        \"format\": \"uri\",\n                        \"maxLength\": 65536,\n                        \"minLength\": 1,\n                        \"title\": \"Url\",\n                        \"type\": \"string\"\n                    },\n                    \"version\": {\n                        \"example\": 1,\n                        \"exclusiveMinimum\": 0.0,\n                        \"title\": \"Version\",\n                        \"type\": \"integer\"\n                    }\n                },\n                \"required\": [\n                    \"url\",\n                    \"version\",\n                    \"id\",\n                    \"createdAt\",\n                    \"status\"\n                ],\n                \"title\": \"MessageEndpointOut\",\n                \"type\": \"object\"\n            },\n            \"MessageIn\": {\n                \"properties\": {\n                    \"channels\": {\n                        \"description\": \"List of free-form identifiers that endpoints can filter by\",\n                        \"example\": [\n                            \"project_123\",\n                            \"group_2\"\n                        ],\n                        \"items\": {\n                            \"example\": \"project_1337\",\n                            \"maxLength\": 128,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"type\": \"string\"\n                        },\n                        \"maxItems\": 5,\n                        \"minItems\": 1,\n                        \"title\": \"Channels\",\n                        \"type\": \"array\",\n                        \"uniqueItems\": true\n                    },\n                    \"eventId\": {\n                        \"description\": \"Optional unique identifier for the message\",\n                        \"example\": \"evt_pNZKtWg8Azow\",\n                        \"maxLength\": 256,\n                        \"minLength\": 1,\n                        \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                        \"title\": \"Eventid\",\n                        \"type\": \"string\"\n                    },\n                    \"eventType\": {\n                        \"example\": \"user.signup\",\n                        \"maxLength\": 256,\n                        \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                        \"title\": \"Eventtype\",\n                        \"type\": \"string\"\n                    },\n                    \"payload\": {\n                        \"example\": {\n                            \"email\": \"test@example.com\",\n                            \"username\": \"test_user\"\n                        },\n                        \"title\": \"Payload\",\n                        \"type\": \"object\"\n                    },\n                    \"payloadRetentionPeriod\": {\n                        \"default\": 90,\n                        \"description\": \"The retention period for the payload (in days).\",\n                        \"example\": 90,\n                        \"maximum\": 90.0,\n                        \"minimum\": 5.0,\n                        \"title\": \"Payloadretentionperiod\",\n                        \"type\": \"integer\"\n                    }\n                },\n                \"required\": [\n                    \"eventType\",\n                    \"payload\"\n                ],\n                \"title\": \"MessageIn\",\n                \"type\": \"object\"\n            },\n            \"MessageOut\": {\n                \"properties\": {\n                    \"channels\": {\n                        \"description\": \"List of free-form identifiers that endpoints can filter by\",\n                        \"example\": [\n                            \"project_123\",\n                            \"group_2\"\n                        ],\n                        \"items\": {\n                            \"example\": \"project_1337\",\n                            \"maxLength\": 128,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"type\": \"string\"\n                        },\n                        \"maxItems\": 5,\n                        \"minItems\": 1,\n                        \"title\": \"Channels\",\n                        \"type\": \"array\",\n                        \"uniqueItems\": true\n                    },\n                    \"eventId\": {\n                        \"description\": \"Optional unique identifier for the message\",\n                        \"example\": \"evt_pNZKtWg8Azow\",\n                        \"maxLength\": 256,\n                        \"minLength\": 1,\n                        \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                        \"title\": \"Eventid\",\n                        \"type\": \"string\"\n                    },\n                    \"eventType\": {\n                        \"example\": \"user.signup\",\n                        \"maxLength\": 256,\n                        \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                        \"title\": \"Eventtype\",\n                        \"type\": \"string\"\n                    },\n                    \"id\": {\n                        \"example\": \"msg_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                        \"title\": \"Id\",\n                        \"type\": \"string\"\n                    },\n                    \"payload\": {\n                        \"example\": {\n                            \"email\": \"test@example.com\",\n                            \"username\": \"test_user\"\n                        },\n                        \"title\": \"Payload\",\n                        \"type\": \"object\"\n                    },\n                    \"timestamp\": {\n                        \"format\": \"date-time\",\n                        \"title\": \"Timestamp\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"eventType\",\n                    \"payload\",\n                    \"id\",\n                    \"timestamp\"\n                ],\n                \"title\": \"MessageOut\",\n                \"type\": \"object\"\n            },\n            \"MessageStatus\": {\n                \"description\": \"The sending status of the message:\\n- Success = 0\\n- Pending = 1\\n- Fail = 2\\n- Sending = 3\",\n                \"enum\": [\n                    0,\n                    1,\n                    2,\n                    3\n                ],\n                \"title\": \"MessageStatus\",\n                \"type\": \"integer\",\n                \"x-enum-varnames\": [\n                    \"Success\",\n                    \"Pending\",\n                    \"Fail\",\n                    \"Sending\"\n                ]\n            },\n            \"RecoverIn\": {\n                \"properties\": {\n                    \"since\": {\n                        \"format\": \"date-time\",\n                        \"title\": \"Since\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"since\"\n                ],\n                \"title\": \"RecoverIn\",\n                \"type\": \"object\"\n            },\n            \"RecoverOut\": {\n                \"properties\": {},\n                \"title\": \"RecoverOut\",\n                \"type\": \"object\"\n            },\n            \"SettingsIn\": {\n                \"properties\": {\n                    \"customBaseFontSize\": {\n                        \"title\": \"Custombasefontsize\",\n                        \"type\": \"integer\"\n                    },\n                    \"customColor\": {\n                        \"format\": \"color\",\n                        \"title\": \"Customcolor\",\n                        \"type\": \"string\"\n                    },\n                    \"customFontFamily\": {\n                        \"example\": \"Open Sans\",\n                        \"pattern\": \"^[a-zA-Z0-9\\\\-_ ]+$\",\n                        \"title\": \"Customfontfamily\",\n                        \"type\": \"string\"\n                    },\n                    \"customLogoUrl\": {\n                        \"format\": \"uri\",\n                        \"maxLength\": 65536,\n                        \"minLength\": 1,\n                        \"title\": \"Customlogourl\",\n                        \"type\": \"string\"\n                    },\n                    \"customThemeOverride\": {\n                        \"$ref\": \"#/components/schemas/CustomThemeOverride\"\n                    },\n                    \"disableEndpointOnFailure\": {\n                        \"default\": true,\n                        \"title\": \"Disableendpointonfailure\",\n                        \"type\": \"boolean\"\n                    },\n                    \"enableChannels\": {\n                        \"default\": false,\n                        \"title\": \"Enablechannels\",\n                        \"type\": \"boolean\"\n                    },\n                    \"enableIntegrationManagement\": {\n                        \"default\": false,\n                        \"title\": \"Enableintegrationmanagement\",\n                        \"type\": \"boolean\"\n                    },\n                    \"enforceHttps\": {\n                        \"default\": true,\n                        \"title\": \"Enforcehttps\",\n                        \"type\": \"boolean\"\n                    }\n                },\n                \"title\": \"SettingsIn\",\n                \"type\": \"object\"\n            },\n            \"SettingsOut\": {\n                \"properties\": {\n                    \"customBaseFontSize\": {\n                        \"title\": \"Custombasefontsize\",\n                        \"type\": \"integer\"\n                    },\n                    \"customColor\": {\n                        \"format\": \"color\",\n                        \"title\": \"Customcolor\",\n                        \"type\": \"string\"\n                    },\n                    \"customFontFamily\": {\n                        \"example\": \"Open Sans\",\n                        \"pattern\": \"^[a-zA-Z0-9\\\\-_ ]+$\",\n                        \"title\": \"Customfontfamily\",\n                        \"type\": \"string\"\n                    },\n                    \"customLogoUrl\": {\n                        \"format\": \"uri\",\n                        \"maxLength\": 65536,\n                        \"minLength\": 1,\n                        \"title\": \"Customlogourl\",\n                        \"type\": \"string\"\n                    },\n                    \"customThemeOverride\": {\n                        \"$ref\": \"#/components/schemas/CustomThemeOverride\"\n                    },\n                    \"disableEndpointOnFailure\": {\n                        \"default\": true,\n                        \"title\": \"Disableendpointonfailure\",\n                        \"type\": \"boolean\"\n                    },\n                    \"enableChannels\": {\n                        \"default\": false,\n                        \"title\": \"Enablechannels\",\n                        \"type\": \"boolean\"\n                    },\n                    \"enableIntegrationManagement\": {\n                        \"default\": false,\n                        \"title\": \"Enableintegrationmanagement\",\n                        \"type\": \"boolean\"\n                    },\n                    \"enforceHttps\": {\n                        \"default\": true,\n                        \"title\": \"Enforcehttps\",\n                        \"type\": \"boolean\"\n                    }\n                },\n                \"title\": \"SettingsOut\",\n                \"type\": \"object\"\n            },\n            \"StatisticsPeriod\": {\n                \"description\": \"Period length for a statistics data point\",\n                \"enum\": [\n                    \"OneDay\",\n                    \"FiveMinutes\"\n                ],\n                \"title\": \"StatisticsPeriod\",\n                \"type\": \"string\"\n            },\n            \"ValidationError\": {\n                \"properties\": {\n                    \"loc\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"title\": \"Location\",\n                        \"type\": \"array\"\n                    },\n                    \"msg\": {\n                        \"title\": \"Message\",\n                        \"type\": \"string\"\n                    },\n                    \"type\": {\n                        \"title\": \"Error Type\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"loc\",\n                    \"msg\",\n                    \"type\"\n                ],\n                \"title\": \"ValidationError\",\n                \"type\": \"object\"\n            },\n            \"WebhookTypes\": {\n                \"description\": \"All of the webhook types that we support\",\n                \"properties\": {\n                    \"a\": {\n                        \"$ref\": \"#/components/schemas/EndpointDisabledEvent\"\n                    },\n                    \"b\": {\n                        \"$ref\": \"#/components/schemas/EndpointCreatedEvent\"\n                    },\n                    \"c\": {\n                        \"$ref\": \"#/components/schemas/EndpointUpdatedEvent\"\n                    },\n                    \"d\": {\n                        \"$ref\": \"#/components/schemas/EndpointDeletedEvent\"\n                    },\n                    \"e\": {\n                        \"$ref\": \"#/components/schemas/MessageAttemptExhaustedEvent\"\n                    }\n                },\n                \"required\": [\n                    \"a\",\n                    \"b\",\n                    \"c\",\n                    \"d\",\n                    \"e\"\n                ],\n                \"title\": \"WebhookTypes\",\n                \"type\": \"object\"\n            }\n        },\n        \"securitySchemes\": {\n            \"HTTPBearer\": {\n                \"scheme\": \"bearer\",\n                \"type\": \"http\"\n            }\n        }\n    },\n    \"info\": {\n        \"description\": \"Welcome to the Svix API documentation!\\n\\nUseful links: [Homepage](https://www.svix.com) | [Support email](mailto:support+docs@svix.com) | [Blog](https://www.svix.com/blog/) | [Slack Community](https://www.svix.com/slack/)\\n\\n# Introduction\\n\\nThis is the reference documentation and schemas for the [Svix webhook service](https://www.svix.com) API. For tutorials and other documentation please refer to [the documentation](https://docs.svix.com).\\n\\n## Main concepts\\n\\nIn Svix you have four important entities you will be interacting with:\\n\\n- `messages`: these are the webhooks being sent. They can have contents and a few other properties.\\n- `application`: this is where `messages` are sent to. Usually you want to create one application for each user on your platform.\\n- `endpoint`: endpoints are the URLs messages will be sent to. Each application can have multiple `endpoints` and each message sent to that application will be sent to all of them (unless they are not subscribed to the sent event type).\\n- `event-type`: event types are identifiers denoting the type of the message being sent. Event types are primarily used to decide which events are sent to which endpoint.\\n\\n\\n## Authentication\\n\\nGet your authentication token (`AUTH_TOKEN`) from the [Svix dashboard](https://dashboard.svix.com) and use it as part of the `Authorization` header as such: `Authorization: Bearer ${AUTH_TOKEN}`.\\n\\n\u003cSecurityDefinitions /\u003e\\n\\n\\n## Code samples\\n\\nThe code samples assume you already have the respective libraries installed and you know how to use them. For the latest information on how to do that, please refer to [the documentation](https://docs.svix.com/).\\n\\n\\n## Idempotency\\n\\nSvix supports [idempotency](https://en.wikipedia.org/wiki/Idempotence) for safely retrying requests without accidentally performing the same operation twice. This is useful when an API call is disrupted in transit and you do not receive a response.\\n\\nTo perform an idempotent request, pass the idempotency key in the `Idempotency-Key` header to the request. The idempotency key should be a unique value generated by the client. You can create the key in however way you like, though we suggest using UUID v4, or any other string with enough entropy to avoid collisions.\\n\\nSvix's idempotency works by saving the resulting status code and body of the first request made for any given idempotency key for any successful request. Subsequent requests with the same key return the same result.\\n\\nPlease note that idempotency is only supported for `POST` requests.\\n\\n\\n## Cross-Origin Resource Sharing\\n\\nThis API features Cross-Origin Resource Sharing (CORS) implemented in compliance with [W3C spec](https://www.w3.org/TR/cors/). And that allows cross-domain communication from the browser. All responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.\\n\",\n        \"title\": \"Svix API\",\n        \"version\": \"1.4\",\n        \"x-logo\": {\n            \"altText\": \"Svix Logo\",\n            \"url\": \"https://www.svix.com/static/img/brand-padded.svg\"\n        }\n    },\n    \"openapi\": \"3.0.2\",\n    \"paths\": {\n        \"/api/v1/app/\": {\n            \"get\": {\n                \"description\": \"List of all the organization's applications.\",\n                \"operationId\": \"list_applications_api_v1_app__get\",\n                \"parameters\": [\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"iterator\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"example\": \"app_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"title\": \"Iterator\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"limit\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"default\": 50,\n                            \"maximum\": 250.0,\n                            \"title\": \"Limit\",\n                            \"type\": \"integer\"\n                        }\n                    },\n                    {\n                        \"description\": \"The request's idempotency key\",\n                        \"in\": \"header\",\n                        \"name\": \"idempotency-key\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"description\": \"The request's idempotency key\",\n                            \"title\": \"Idempotency-Key\",\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ListResponse_ApplicationOut_\"\n                                }\n                            }\n                        },\n                        \"description\": \"Successful Response\"\n                    },\n                    \"401\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Not Found\"\n                    },\n                    \"409\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Conflict\"\n                    },\n                    \"422\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        },\n                        \"description\": \"Validation Error\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"HTTPBearer\": []\n                    }\n                ],\n                \"summary\": \"List Applications\",\n                \"tags\": [\n                    \"Application\"\n                ],\n                \"x-codeSamples\": [\n                    {\n                        \"label\": \"JavaScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"const listResponseApplicationOut = await svix.application.list();\"\n                    },\n                    {\n                        \"label\": \"TypeScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"const listResponseApplicationOut = await svix.application.list();\"\n                    },\n                    {\n                        \"label\": \"Python\",\n                        \"lang\": \"Python\",\n                        \"source\": \"list_response_application_out = svix.application.list()\"\n                    },\n                    {\n                        \"label\": \"Go\",\n                        \"lang\": \"Go\",\n                        \"source\": \"listResponseApplicationOut, err := svixClient.Application.List(nil)\"\n                    },\n                    {\n                        \"label\": \"Kotlin\",\n                        \"lang\": \"Kotlin\",\n                        \"source\": \"val listResponseApplicationOut = svix.application.list(FetchOptions())\"\n                    },\n                    {\n                        \"label\": \"Java\",\n                        \"lang\": \"Java\",\n                        \"source\": \"ListResponseApplicationOut listResponseApplicationOut = svix.getApplication().list(new FetchOptions())\"\n                    },\n                    {\n                        \"label\": \"Ruby\",\n                        \"lang\": \"Ruby\",\n                        \"source\": \"list_response_application_out = svix.application.list\"\n                    },\n                    {\n                        \"label\": \"CLI\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"svix application list \"\n                    },\n                    {\n                        \"label\": \"cURL\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"curl -X 'GET' \\\\\\n  'https://api.svix.com/api/v1/app/' \\\\\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\\\\n  -H 'accept: application/json' \\\\\\n  -H 'Content-Type: application/json'\"\n                    }\n                ]\n            },\n            \"post\": {\n                \"description\": \"Create a new application.\",\n                \"operationId\": \"create_application_api_v1_app__post\",\n                \"parameters\": [\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"get_if_exists\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"default\": false,\n                            \"title\": \"Get If Exists\",\n                            \"type\": \"boolean\"\n                        }\n                    },\n                    {\n                        \"description\": \"The request's idempotency key\",\n                        \"in\": \"header\",\n                        \"name\": \"idempotency-key\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"description\": \"The request's idempotency key\",\n                            \"title\": \"Idempotency-Key\",\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/ApplicationIn\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ApplicationOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"OK\"\n                    },\n                    \"201\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ApplicationOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Successful Response\"\n                    },\n                    \"401\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Not Found\"\n                    },\n                    \"409\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Conflict\"\n                    },\n                    \"422\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        },\n                        \"description\": \"Validation Error\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"HTTPBearer\": []\n                    }\n                ],\n                \"summary\": \"Create Application\",\n                \"tags\": [\n                    \"Application\"\n                ],\n                \"x-codeSamples\": [\n                    {\n                        \"label\": \"JavaScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"const applicationOut = await svix.application.create({\\n    uid: \\\"unique-app-identifier\\\",\\n    name: \\\"My first application\\\",\\n    rateLimit: 1000\\n});\"\n                    },\n                    {\n                        \"label\": \"TypeScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"const applicationOut = await svix.application.create({\\n    uid: \\\"unique-app-identifier\\\",\\n    name: \\\"My first application\\\",\\n    rateLimit: 1000\\n});\"\n                    },\n                    {\n                        \"label\": \"Python\",\n                        \"lang\": \"Python\",\n                        \"source\": \"application_out = svix.application.create(ApplicationIn(\\n    uid=\\\"unique-app-identifier\\\",\\n    name=\\\"My first application\\\",\\n    rate_limit=1000\\n))\\n# Or \\napplication_out = svix.application.get_or_create(ApplicationIn(\\n    uid=\\\"unique-app-identifier\\\",\\n    name=\\\"My first application\\\",\\n    rate_limit=1000\\n))\"\n                    },\n                    {\n                        \"label\": \"Go\",\n                        \"lang\": \"Go\",\n                        \"source\": \"applicationOut, err := svixClient.Application.Create(\u0026svix.ApplicationIn{\\n    Uid: \\\"unique-app-identifier\\\",\\n    Name: \\\"My first application\\\",\\n    RateLimit: 1000\\n})\"\n                    },\n                    {\n                        \"label\": \"Kotlin\",\n                        \"lang\": \"Kotlin\",\n                        \"source\": \"val applicationOut = svix.application.create(ApplicationIn()\\n    .uid(\\\"unique-app-identifier\\\"),\\n    .name(\\\"My first application\\\"),\\n    .rateLimit(1000)\\n)\"\n                    },\n                    {\n                        \"label\": \"Java\",\n                        \"lang\": \"Java\",\n                        \"source\": \"ApplicationOut applicationOut = svix.getApplication().create(new ApplicationIn()\\n    .uid(\\\"unique-app-identifier\\\"),\\n    .name(\\\"My first application\\\"),\\n    .rateLimit(1000)\\n)\"\n                    },\n                    {\n                        \"label\": \"Ruby\",\n                        \"lang\": \"Ruby\",\n                        \"source\": \"application_out = svix.application.create(Svix::ApplicationIn.new({\\n    \\\"uid\\\": \\\"unique-app-identifier\\\",\\n    \\\"name\\\": \\\"My first application\\\",\\n    \\\"rate_limit\\\": 1000\\n}))\"\n                    },\n                    {\n                        \"label\": \"CLI\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"svix application create '{\\n    \\\"uid\\\": \\\"unique-app-identifier\\\",\\n    \\\"name\\\": \\\"My first application\\\",\\n    \\\"rateLimit\\\": 1000\\n}'\"\n                    },\n                    {\n                        \"label\": \"cURL\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"curl -X 'POST' \\\\\\n  'https://api.svix.com/api/v1/app/' \\\\\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\\\\n  -H 'accept: application/json' \\\\\\n  -H 'Content-Type: application/json' \\\\\\n  -d '{\\n    \\\"uid\\\": \\\"unique-app-identifier\\\",\\n    \\\"name\\\": \\\"My first application\\\",\\n    \\\"rateLimit\\\": 1000\\n}'\"\n                    }\n                ]\n            }\n        },\n        \"/api/v1/app/{app_id}/\": {\n            \"delete\": {\n                \"description\": \"Delete an application.\",\n                \"operationId\": \"delete_application_api_v1_app__app_id___delete\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"app_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"description\": \"The application's ID or UID\",\n                            \"example\": \"app_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"maxLength\": 256,\n                            \"minLength\": 1,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"App Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"The request's idempotency key\",\n                        \"in\": \"header\",\n                        \"name\": \"idempotency-key\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"description\": \"The request's idempotency key\",\n                            \"title\": \"Idempotency-Key\",\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"Successful Response\"\n                    },\n                    \"401\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Not Found\"\n                    },\n                    \"409\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Conflict\"\n                    },\n                    \"422\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        },\n                        \"description\": \"Validation Error\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"HTTPBearer\": []\n                    }\n                ],\n                \"summary\": \"Delete Application\",\n                \"tags\": [\n                    \"Application\"\n                ],\n                \"x-codeSamples\": [\n                    {\n                        \"label\": \"JavaScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"await svix.application.delete('app_id');\"\n                    },\n                    {\n                        \"label\": \"TypeScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"await svix.application.delete('app_id');\"\n                    },\n                    {\n                        \"label\": \"Python\",\n                        \"lang\": \"Python\",\n                        \"source\": \"svix.application.delete('app_id')\"\n                    },\n                    {\n                        \"label\": \"Go\",\n                        \"lang\": \"Go\",\n                        \"source\": \"err := svixClient.Application.Delete(\\\"app_id\\\")\"\n                    },\n                    {\n                        \"label\": \"Kotlin\",\n                        \"lang\": \"Kotlin\",\n                        \"source\": \"svix.application.delete('app_id')\"\n                    },\n                    {\n                        \"label\": \"Java\",\n                        \"lang\": \"Java\",\n                        \"source\": \"svix.getApplication().delete('app_id')\"\n                    },\n                    {\n                        \"label\": \"Ruby\",\n                        \"lang\": \"Ruby\",\n                        \"source\": \"svix.application.delete('app_id')\"\n                    },\n                    {\n                        \"label\": \"CLI\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"svix application delete 'app_id'\"\n                    },\n                    {\n                        \"label\": \"cURL\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"curl -X 'DELETE' \\\\\\n  'https://api.svix.com/api/v1/app/{app_id}/' \\\\\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\\\\n  -H 'accept: application/json' \\\\\\n  -H 'Content-Type: application/json'\"\n                    }\n                ]\n            },\n            \"get\": {\n                \"description\": \"Get an application.\",\n                \"operationId\": \"get_application_api_v1_app__app_id___get\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"app_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"description\": \"The application's ID or UID\",\n                            \"example\": \"app_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"maxLength\": 256,\n                            \"minLength\": 1,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"App Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"The request's idempotency key\",\n                        \"in\": \"header\",\n                        \"name\": \"idempotency-key\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"description\": \"The request's idempotency key\",\n                            \"title\": \"Idempotency-Key\",\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ApplicationOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Successful Response\"\n                    },\n                    \"401\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Not Found\"\n                    },\n                    \"409\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Conflict\"\n                    },\n                    \"422\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        },\n                        \"description\": \"Validation Error\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"HTTPBearer\": []\n                    }\n                ],\n                \"summary\": \"Get Application\",\n                \"tags\": [\n                    \"Application\"\n                ],\n                \"x-codeSamples\": [\n                    {\n                        \"label\": \"JavaScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"const applicationOut = await svix.application.get('app_id');\"\n                    },\n                    {\n                        \"label\": \"TypeScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"const applicationOut = await svix.application.get('app_id');\"\n                    },\n                    {\n                        \"label\": \"Python\",\n                        \"lang\": \"Python\",\n                        \"source\": \"application_out = svix.application.get('app_id')\"\n                    },\n                    {\n                        \"label\": \"Go\",\n                        \"lang\": \"Go\",\n                        \"source\": \"applicationOut, err := svixClient.Application.Get(\\\"app_id\\\")\"\n                    },\n                    {\n                        \"label\": \"Kotlin\",\n                        \"lang\": \"Kotlin\",\n                        \"source\": \"val applicationOut = svix.application.get('app_id')\"\n                    },\n                    {\n                        \"label\": \"Java\",\n                        \"lang\": \"Java\",\n                        \"source\": \"ApplicationOut applicationOut = svix.getApplication().get('app_id')\"\n                    },\n                    {\n                        \"label\": \"Ruby\",\n                        \"lang\": \"Ruby\",\n                        \"source\": \"application_out = svix.application.get('app_id')\"\n                    },\n                    {\n                        \"label\": \"CLI\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"svix application get 'app_id'\"\n                    },\n                    {\n                        \"label\": \"cURL\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"curl -X 'GET' \\\\\\n  'https://api.svix.com/api/v1/app/{app_id}/' \\\\\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\\\\n  -H 'accept: application/json' \\\\\\n  -H 'Content-Type: application/json'\"\n                    }\n                ]\n            },\n            \"put\": {\n                \"description\": \"Update an application.\",\n                \"operationId\": \"update_application_api_v1_app__app_id___put\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"app_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"description\": \"The application's ID or UID\",\n                            \"example\": \"app_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"maxLength\": 256,\n                            \"minLength\": 1,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"App Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"The request's idempotency key\",\n                        \"in\": \"header\",\n                        \"name\": \"idempotency-key\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"description\": \"The request's idempotency key\",\n                            \"title\": \"Idempotency-Key\",\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/ApplicationIn\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ApplicationOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Successful Response\"\n                    },\n                    \"401\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Not Found\"\n                    },\n                    \"409\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Conflict\"\n                    },\n                    \"422\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        },\n                        \"description\": \"Validation Error\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"HTTPBearer\": []\n                    }\n                ],\n                \"summary\": \"Update Application\",\n                \"tags\": [\n                    \"Application\"\n                ],\n                \"x-codeSamples\": [\n                    {\n                        \"label\": \"JavaScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"const applicationOut = await svix.application.update('app_id', {\\n    uid: \\\"unique-app-identifier\\\",\\n    name: \\\"My first application\\\",\\n    rateLimit: 1000\\n});\"\n                    },\n                    {\n                        \"label\": \"TypeScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"const applicationOut = await svix.application.update('app_id', {\\n    uid: \\\"unique-app-identifier\\\",\\n    name: \\\"My first application\\\",\\n    rateLimit: 1000\\n});\"\n                    },\n                    {\n                        \"label\": \"Python\",\n                        \"lang\": \"Python\",\n                        \"source\": \"application_out = svix.application.update('app_id', ApplicationIn(\\n    uid=\\\"unique-app-identifier\\\",\\n    name=\\\"My first application\\\",\\n    rate_limit=1000\\n))\"\n                    },\n                    {\n                        \"label\": \"Go\",\n                        \"lang\": \"Go\",\n                        \"source\": \"applicationOut, err := svixClient.Application.Update(\\\"app_id\\\", \u0026svix.ApplicationIn{\\n    Uid: \\\"unique-app-identifier\\\",\\n    Name: \\\"My first application\\\",\\n    RateLimit: 1000\\n})\"\n                    },\n                    {\n                        \"label\": \"Kotlin\",\n                        \"lang\": \"Kotlin\",\n                        \"source\": \"val applicationOut = svix.application.update('app_id', ApplicationIn()\\n    .uid(\\\"unique-app-identifier\\\"),\\n    .name(\\\"My first application\\\"),\\n    .rateLimit(1000)\\n)\"\n                    },\n                    {\n                        \"label\": \"Java\",\n                        \"lang\": \"Java\",\n                        \"source\": \"ApplicationOut applicationOut = svix.getApplication().update('app_id', new ApplicationIn()\\n    .uid(\\\"unique-app-identifier\\\"),\\n    .name(\\\"My first application\\\"),\\n    .rateLimit(1000)\\n)\"\n                    },\n                    {\n                        \"label\": \"Ruby\",\n                        \"lang\": \"Ruby\",\n                        \"source\": \"application_out = svix.application.update('app_id', Svix::ApplicationIn.new({\\n    \\\"uid\\\": \\\"unique-app-identifier\\\",\\n    \\\"name\\\": \\\"My first application\\\",\\n    \\\"rate_limit\\\": 1000\\n}))\"\n                    },\n                    {\n                        \"label\": \"CLI\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"svix application update 'app_id' '{\\n    \\\"uid\\\": \\\"unique-app-identifier\\\",\\n    \\\"name\\\": \\\"My first application\\\",\\n    \\\"rateLimit\\\": 1000\\n}'\"\n                    },\n                    {\n                        \"label\": \"cURL\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"curl -X 'PUT' \\\\\\n  'https://api.svix.com/api/v1/app/{app_id}/' \\\\\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\\\\n  -H 'accept: application/json' \\\\\\n  -H 'Content-Type: application/json' \\\\\\n  -d '{\\n    \\\"uid\\\": \\\"unique-app-identifier\\\",\\n    \\\"name\\\": \\\"My first application\\\",\\n    \\\"rateLimit\\\": 1000\\n}'\"\n                    }\n                ]\n            }\n        },\n        \"/api/v1/app/{app_id}/endpoint/\": {\n            \"get\": {\n                \"description\": \"List the application's endpoints.\",\n                \"operationId\": \"list_endpoints_api_v1_app__app_id__endpoint__get\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"app_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"description\": \"The application's ID or UID\",\n                            \"example\": \"app_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"maxLength\": 256,\n                            \"minLength\": 1,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"App Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"iterator\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"example\": \"ep_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"title\": \"Iterator\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"limit\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"default\": 50,\n                            \"maximum\": 250.0,\n                            \"title\": \"Limit\",\n                            \"type\": \"integer\"\n                        }\n                    },\n                    {\n                        \"description\": \"The request's idempotency key\",\n                        \"in\": \"header\",\n                        \"name\": \"idempotency-key\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"description\": \"The request's idempotency key\",\n                            \"title\": \"Idempotency-Key\",\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ListResponse_EndpointOut_\"\n                                }\n                            }\n                        },\n                        \"description\": \"Successful Response\"\n                    },\n                    \"401\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Not Found\"\n                    },\n                    \"409\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Conflict\"\n                    },\n                    \"422\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        },\n                        \"description\": \"Validation Error\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"HTTPBearer\": []\n                    }\n                ],\n                \"summary\": \"List Endpoints\",\n                \"tags\": [\n                    \"Endpoint\"\n                ],\n                \"x-codeSamples\": [\n                    {\n                        \"label\": \"JavaScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"const listResponseEndpointOut = await svix.endpoint.list('app_id');\"\n                    },\n                    {\n                        \"label\": \"TypeScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"const listResponseEndpointOut = await svix.endpoint.list('app_id');\"\n                    },\n                    {\n                        \"label\": \"Python\",\n                        \"lang\": \"Python\",\n                        \"source\": \"list_response_endpoint_out = svix.endpoint.list('app_id')\"\n                    },\n                    {\n                        \"label\": \"Go\",\n                        \"lang\": \"Go\",\n                        \"source\": \"listResponseEndpointOut, err := svixClient.Endpoint.List(\\\"app_id\\\", nil)\"\n                    },\n                    {\n                        \"label\": \"Kotlin\",\n                        \"lang\": \"Kotlin\",\n                        \"source\": \"val listResponseEndpointOut = svix.endpoint.list('app_id', FetchOptions())\"\n                    },\n                    {\n                        \"label\": \"Java\",\n                        \"lang\": \"Java\",\n                        \"source\": \"ListResponseEndpointOut listResponseEndpointOut = svix.getEndpoint().list('app_id', new FetchOptions())\"\n                    },\n                    {\n                        \"label\": \"Ruby\",\n                        \"lang\": \"Ruby\",\n                        \"source\": \"list_response_endpoint_out = svix.endpoint.list('app_id')\"\n                    },\n                    {\n                        \"label\": \"CLI\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"svix endpoint list 'app_id'\"\n                    },\n                    {\n                        \"label\": \"cURL\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"curl -X 'GET' \\\\\\n  'https://api.svix.com/api/v1/app/{app_id}/endpoint/' \\\\\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\\\\n  -H 'accept: application/json' \\\\\\n  -H 'Content-Type: application/json'\"\n                    }\n                ]\n            },\n            \"post\": {\n                \"description\": \"Create a new endpoint for the application.\\n\\nWhen `secret` is `null` the secret is automatically generated (recommended)\",\n                \"operationId\": \"create_endpoint_api_v1_app__app_id__endpoint__post\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"app_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"description\": \"The application's ID or UID\",\n                            \"example\": \"app_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"maxLength\": 256,\n                            \"minLength\": 1,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"App Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"The request's idempotency key\",\n                        \"in\": \"header\",\n                        \"name\": \"idempotency-key\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"description\": \"The request's idempotency key\",\n                            \"title\": \"Idempotency-Key\",\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/EndpointIn\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"201\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/EndpointOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Successful Response\"\n                    },\n                    \"401\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Not Found\"\n                    },\n                    \"409\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Conflict\"\n                    },\n                    \"422\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        },\n                        \"description\": \"Validation Error\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"HTTPBearer\": []\n                    }\n                ],\n                \"summary\": \"Create Endpoint\",\n                \"tags\": [\n                    \"Endpoint\"\n                ],\n                \"x-codeSamples\": [\n                    {\n                        \"label\": \"JavaScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"const endpointOut = await svix.endpoint.create('app_id', {\\n    uid: \\\"unique-endpoint-identifier\\\",\\n    url: \\\"https://example.com/webhook/\\\",\\n    version: 1,\\n    description: \\\"An example endpoint name\\\",\\n    filterTypes: [\\n        \\\"user.signup\\\",\\n        \\\"user.deleted\\\"\\n    ],\\n    channels: [\\n        \\\"project_123\\\",\\n        \\\"group_2\\\"\\n    ],\\n    disabled: false,\\n    rateLimit: 1000,\\n    secret: \\\"whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD\\\"\\n});\"\n                    },\n                    {\n                        \"label\": \"TypeScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"const endpointOut = await svix.endpoint.create('app_id', {\\n    uid: \\\"unique-endpoint-identifier\\\",\\n    url: \\\"https://example.com/webhook/\\\",\\n    version: 1,\\n    description: \\\"An example endpoint name\\\",\\n    filterTypes: [\\n        \\\"user.signup\\\",\\n        \\\"user.deleted\\\"\\n    ],\\n    channels: [\\n        \\\"project_123\\\",\\n        \\\"group_2\\\"\\n    ],\\n    disabled: false,\\n    rateLimit: 1000,\\n    secret: \\\"whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD\\\"\\n});\"\n                    },\n                    {\n                        \"label\": \"Python\",\n                        \"lang\": \"Python\",\n                        \"source\": \"endpoint_out = svix.endpoint.create('app_id', EndpointIn(\\n    uid=\\\"unique-endpoint-identifier\\\",\\n    url=\\\"https://example.com/webhook/\\\",\\n    version=1,\\n    description=\\\"An example endpoint name\\\",\\n    filter_types=['user.signup', 'user.deleted'],\\n    channels=['project_123', 'group_2'],\\n    disabled=False,\\n    rate_limit=1000,\\n    secret=\\\"whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD\\\"\\n))\"\n                    },\n                    {\n                        \"label\": \"Go\",\n                        \"lang\": \"Go\",\n                        \"source\": \"endpointOut, err := svixClient.Endpoint.Create(\\\"app_id\\\", \u0026svix.EndpointIn{\\n    Uid: \\\"unique-endpoint-identifier\\\",\\n    Url: \\\"https://example.com/webhook/\\\",\\n    Version: 1,\\n    Description: \\\"An example endpoint name\\\",\\n    FilterTypes: [...]string{\\\"user.signup\\\", \\\"user.deleted\\\"},\\n    Channels: [...]string{\\\"project_123\\\", \\\"group_2\\\"},\\n    Disabled: False,\\n    RateLimit: 1000,\\n    Secret: \\\"whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD\\\"\\n})\"\n                    },\n                    {\n                        \"label\": \"Kotlin\",\n                        \"lang\": \"Kotlin\",\n                        \"source\": \"val endpointOut = svix.endpoint.create('app_id', EndpointIn()\\n    .uid(\\\"unique-endpoint-identifier\\\"),\\n    .url(\\\"https://example.com/webhook/\\\"),\\n    .version(1),\\n    .description(\\\"An example endpoint name\\\"),\\n    .filterTypes(arrayOf(\\\"user.signup\\\", \\\"user.deleted\\\")),\\n    .channels(arrayOf(\\\"project_123\\\", \\\"group_2\\\")),\\n    .disabled(False),\\n    .rateLimit(1000),\\n    .secret(\\\"whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD\\\")\\n)\"\n                    },\n                    {\n                        \"label\": \"Java\",\n                        \"lang\": \"Java\",\n                        \"source\": \"EndpointOut endpointOut = svix.getEndpoint().create('app_id', new EndpointIn()\\n    .uid(\\\"unique-endpoint-identifier\\\"),\\n    .url(\\\"https://example.com/webhook/\\\"),\\n    .version(1),\\n    .description(\\\"An example endpoint name\\\"),\\n    .filterTypes(new String[]{\\\"user.signup\\\", \\\"user.deleted\\\"}),\\n    .channels(new String[]{\\\"project_123\\\", \\\"group_2\\\"}),\\n    .disabled(False),\\n    .rateLimit(1000),\\n    .secret(\\\"whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD\\\")\\n)\"\n                    },\n                    {\n                        \"label\": \"Ruby\",\n                        \"lang\": \"Ruby\",\n                        \"source\": \"endpoint_out = svix.endpoint.create('app_id', Svix::EndpointIn.new({\\n    \\\"uid\\\": \\\"unique-endpoint-identifier\\\",\\n    \\\"url\\\": \\\"https://example.com/webhook/\\\",\\n    \\\"version\\\": 1,\\n    \\\"description\\\": \\\"An example endpoint name\\\",\\n    \\\"filter_types\\\": [\\n        \\\"user.signup\\\",\\n        \\\"user.deleted\\\"\\n    ],\\n    \\\"channels\\\": [\\n        \\\"project_123\\\",\\n        \\\"group_2\\\"\\n    ],\\n    \\\"disabled\\\": false,\\n    \\\"rate_limit\\\": 1000,\\n    \\\"secret\\\": \\\"whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD\\\"\\n}))\"\n                    },\n                    {\n                        \"label\": \"CLI\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"svix endpoint create 'app_id' '{\\n    \\\"uid\\\": \\\"unique-endpoint-identifier\\\",\\n    \\\"url\\\": \\\"https://example.com/webhook/\\\",\\n    \\\"version\\\": 1,\\n    \\\"description\\\": \\\"An example endpoint name\\\",\\n    \\\"filterTypes\\\": [\\n        \\\"user.signup\\\",\\n        \\\"user.deleted\\\"\\n    ],\\n    \\\"channels\\\": [\\n        \\\"project_123\\\",\\n        \\\"group_2\\\"\\n    ],\\n    \\\"disabled\\\": false,\\n    \\\"rateLimit\\\": 1000,\\n    \\\"secret\\\": \\\"whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD\\\"\\n}'\"\n                    },\n                    {\n                        \"label\": \"cURL\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"curl -X 'POST' \\\\\\n  'https://api.svix.com/api/v1/app/{app_id}/endpoint/' \\\\\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\\\\n  -H 'accept: application/json' \\\\\\n  -H 'Content-Type: application/json' \\\\\\n  -d '{\\n    \\\"uid\\\": \\\"unique-endpoint-identifier\\\",\\n    \\\"url\\\": \\\"https://example.com/webhook/\\\",\\n    \\\"version\\\": 1,\\n    \\\"description\\\": \\\"An example endpoint name\\\",\\n    \\\"filterTypes\\\": [\\n        \\\"user.signup\\\",\\n        \\\"user.deleted\\\"\\n    ],\\n    \\\"channels\\\": [\\n        \\\"project_123\\\",\\n        \\\"group_2\\\"\\n    ],\\n    \\\"disabled\\\": false,\\n    \\\"rateLimit\\\": 1000,\\n    \\\"secret\\\": \\\"whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD\\\"\\n}'\"\n                    }\n                ]\n            }\n        },\n        \"/api/v1/app/{app_id}/endpoint/{endpoint_id}/\": {\n            \"delete\": {\n                \"description\": \"Delete an endpoint.\",\n                \"operationId\": \"delete_endpoint_api_v1_app__app_id__endpoint__endpoint_id___delete\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"endpoint_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"description\": \"The endpoint's ID or UID\",\n                            \"example\": \"ep_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"maxLength\": 256,\n                            \"minLength\": 1,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"Endpoint Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"app_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"description\": \"The application's ID or UID\",\n                            \"example\": \"app_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"maxLength\": 256,\n                            \"minLength\": 1,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"App Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"The request's idempotency key\",\n                        \"in\": \"header\",\n                        \"name\": \"idempotency-key\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"description\": \"The request's idempotency key\",\n                            \"title\": \"Idempotency-Key\",\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"Successful Response\"\n                    },\n                    \"401\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Not Found\"\n                    },\n                    \"409\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Conflict\"\n                    },\n                    \"422\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        },\n                        \"description\": \"Validation Error\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"HTTPBearer\": []\n                    }\n                ],\n                \"summary\": \"Delete Endpoint\",\n                \"tags\": [\n                    \"Endpoint\"\n                ],\n                \"x-codeSamples\": [\n                    {\n                        \"label\": \"JavaScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"await svix.endpoint.delete('app_id', 'endpoint_id');\"\n                    },\n                    {\n                        \"label\": \"TypeScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"await svix.endpoint.delete('app_id', 'endpoint_id');\"\n                    },\n                    {\n                        \"label\": \"Python\",\n                        \"lang\": \"Python\",\n                        \"source\": \"svix.endpoint.delete('app_id', 'endpoint_id')\"\n                    },\n                    {\n                        \"label\": \"Go\",\n                        \"lang\": \"Go\",\n                        \"source\": \"err := svixClient.Endpoint.Delete(\\\"app_id\\\", \\\"endpoint_id\\\")\"\n                    },\n                    {\n                        \"label\": \"Kotlin\",\n                        \"lang\": \"Kotlin\",\n                        \"source\": \"svix.endpoint.delete('app_id', 'endpoint_id')\"\n                    },\n                    {\n                        \"label\": \"Java\",\n                        \"lang\": \"Java\",\n                        \"source\": \"svix.getEndpoint().delete('app_id', 'endpoint_id')\"\n                    },\n                    {\n                        \"label\": \"Ruby\",\n                        \"lang\": \"Ruby\",\n                        \"source\": \"svix.endpoint.delete('app_id', 'endpoint_id')\"\n                    },\n                    {\n                        \"label\": \"CLI\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"svix endpoint delete 'app_id' 'endpoint_id'\"\n                    },\n                    {\n                        \"label\": \"cURL\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"curl -X 'DELETE' \\\\\\n  'https://api.svix.com/api/v1/app/{app_id}/endpoint/{endpoint_id}/' \\\\\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\\\\n  -H 'accept: application/json' \\\\\\n  -H 'Content-Type: application/json'\"\n                    }\n                ]\n            },\n            \"get\": {\n                \"description\": \"Get an application.\",\n                \"operationId\": \"get_endpoint_api_v1_app__app_id__endpoint__endpoint_id___get\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"endpoint_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"description\": \"The endpoint's ID or UID\",\n                            \"example\": \"ep_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"maxLength\": 256,\n                            \"minLength\": 1,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"Endpoint Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"app_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"description\": \"The application's ID or UID\",\n                            \"example\": \"app_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"maxLength\": 256,\n                            \"minLength\": 1,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"App Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"The request's idempotency key\",\n                        \"in\": \"header\",\n                        \"name\": \"idempotency-key\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"description\": \"The request's idempotency key\",\n                            \"title\": \"Idempotency-Key\",\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/EndpointOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Successful Response\"\n                    },\n                    \"401\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Not Found\"\n                    },\n                    \"409\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Conflict\"\n                    },\n                    \"422\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        },\n                        \"description\": \"Validation Error\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"HTTPBearer\": []\n                    }\n                ],\n                \"summary\": \"Get Endpoint\",\n                \"tags\": [\n                    \"Endpoint\"\n                ],\n                \"x-codeSamples\": [\n                    {\n                        \"label\": \"JavaScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"const endpointOut = await svix.endpoint.get('app_id', 'endpoint_id');\"\n                    },\n                    {\n                        \"label\": \"TypeScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"const endpointOut = await svix.endpoint.get('app_id', 'endpoint_id');\"\n                    },\n                    {\n                        \"label\": \"Python\",\n                        \"lang\": \"Python\",\n                        \"source\": \"endpoint_out = svix.endpoint.get('app_id', 'endpoint_id')\"\n                    },\n                    {\n                        \"label\": \"Go\",\n                        \"lang\": \"Go\",\n                        \"source\": \"endpointOut, err := svixClient.Endpoint.Get(\\\"app_id\\\", \\\"endpoint_id\\\")\"\n                    },\n                    {\n                        \"label\": \"Kotlin\",\n                        \"lang\": \"Kotlin\",\n                        \"source\": \"val endpointOut = svix.endpoint.get('app_id', 'endpoint_id')\"\n                    },\n                    {\n                        \"label\": \"Java\",\n                        \"lang\": \"Java\",\n                        \"source\": \"EndpointOut endpointOut = svix.getEndpoint().get('app_id', 'endpoint_id')\"\n                    },\n                    {\n                        \"label\": \"Ruby\",\n                        \"lang\": \"Ruby\",\n                        \"source\": \"endpoint_out = svix.endpoint.get('app_id', 'endpoint_id')\"\n                    },\n                    {\n                        \"label\": \"CLI\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"svix endpoint get 'app_id' 'endpoint_id'\"\n                    },\n                    {\n                        \"label\": \"cURL\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"curl -X 'GET' \\\\\\n  'https://api.svix.com/api/v1/app/{app_id}/endpoint/{endpoint_id}/' \\\\\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\\\\n  -H 'accept: application/json' \\\\\\n  -H 'Content-Type: application/json'\"\n                    }\n                ]\n            },\n            \"put\": {\n                \"description\": \"Update an endpoint.\",\n                \"operationId\": \"update_endpoint_api_v1_app__app_id__endpoint__endpoint_id___put\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"endpoint_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"description\": \"The endpoint's ID or UID\",\n                            \"example\": \"ep_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"maxLength\": 256,\n                            \"minLength\": 1,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"Endpoint Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"app_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"description\": \"The application's ID or UID\",\n                            \"example\": \"app_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"maxLength\": 256,\n                            \"minLength\": 1,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"App Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"The request's idempotency key\",\n                        \"in\": \"header\",\n                        \"name\": \"idempotency-key\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"description\": \"The request's idempotency key\",\n                            \"title\": \"Idempotency-Key\",\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/EndpointUpdate\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/EndpointOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Successful Response\"\n                    },\n                    \"401\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Not Found\"\n                    },\n                    \"409\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Conflict\"\n                    },\n                    \"422\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        },\n                        \"description\": \"Validation Error\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"HTTPBearer\": []\n                    }\n                ],\n                \"summary\": \"Update Endpoint\",\n                \"tags\": [\n                    \"Endpoint\"\n                ],\n                \"x-codeSamples\": [\n                    {\n                        \"label\": \"JavaScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"const endpointOut = await svix.endpoint.update('app_id', 'endpoint_id', {\\n    uid: \\\"unique-endpoint-identifier\\\",\\n    url: \\\"https://example.com/webhook/\\\",\\n    version: 1,\\n    description: \\\"An example endpoint name\\\",\\n    filterTypes: [\\n        \\\"user.signup\\\",\\n        \\\"user.deleted\\\"\\n    ],\\n    channels: [\\n        \\\"project_123\\\",\\n        \\\"group_2\\\"\\n    ],\\n    disabled: false,\\n    rateLimit: 1000\\n});\"\n                    },\n                    {\n                        \"label\": \"TypeScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"const endpointOut = await svix.endpoint.update('app_id', 'endpoint_id', {\\n    uid: \\\"unique-endpoint-identifier\\\",\\n    url: \\\"https://example.com/webhook/\\\",\\n    version: 1,\\n    description: \\\"An example endpoint name\\\",\\n    filterTypes: [\\n        \\\"user.signup\\\",\\n        \\\"user.deleted\\\"\\n    ],\\n    channels: [\\n        \\\"project_123\\\",\\n        \\\"group_2\\\"\\n    ],\\n    disabled: false,\\n    rateLimit: 1000\\n});\"\n                    },\n                    {\n                        \"label\": \"Python\",\n                        \"lang\": \"Python\",\n                        \"source\": \"endpoint_out = svix.endpoint.update('app_id', 'endpoint_id', EndpointUpdate(\\n    uid=\\\"unique-endpoint-identifier\\\",\\n    url=\\\"https://example.com/webhook/\\\",\\n    version=1,\\n    description=\\\"An example endpoint name\\\",\\n    filter_types=['user.signup', 'user.deleted'],\\n    channels=['project_123', 'group_2'],\\n    disabled=False,\\n    rate_limit=1000\\n))\"\n                    },\n                    {\n                        \"label\": \"Go\",\n                        \"lang\": \"Go\",\n                        \"source\": \"endpointOut, err := svixClient.Endpoint.Update(\\\"app_id\\\", \\\"endpoint_id\\\", \u0026svix.EndpointUpdate{\\n    Uid: \\\"unique-endpoint-identifier\\\",\\n    Url: \\\"https://example.com/webhook/\\\",\\n    Version: 1,\\n    Description: \\\"An example endpoint name\\\",\\n    FilterTypes: [...]string{\\\"user.signup\\\", \\\"user.deleted\\\"},\\n    Channels: [...]string{\\\"project_123\\\", \\\"group_2\\\"},\\n    Disabled: False,\\n    RateLimit: 1000\\n})\"\n                    },\n                    {\n                        \"label\": \"Kotlin\",\n                        \"lang\": \"Kotlin\",\n                        \"source\": \"val endpointOut = svix.endpoint.update('app_id', 'endpoint_id', EndpointUpdate()\\n    .uid(\\\"unique-endpoint-identifier\\\"),\\n    .url(\\\"https://example.com/webhook/\\\"),\\n    .version(1),\\n    .description(\\\"An example endpoint name\\\"),\\n    .filterTypes(arrayOf(\\\"user.signup\\\", \\\"user.deleted\\\")),\\n    .channels(arrayOf(\\\"project_123\\\", \\\"group_2\\\")),\\n    .disabled(False),\\n    .rateLimit(1000)\\n)\"\n                    },\n                    {\n                        \"label\": \"Java\",\n                        \"lang\": \"Java\",\n                        \"source\": \"EndpointOut endpointOut = svix.getEndpoint().update('app_id', 'endpoint_id', new EndpointUpdate()\\n    .uid(\\\"unique-endpoint-identifier\\\"),\\n    .url(\\\"https://example.com/webhook/\\\"),\\n    .version(1),\\n    .description(\\\"An example endpoint name\\\"),\\n    .filterTypes(new String[]{\\\"user.signup\\\", \\\"user.deleted\\\"}),\\n    .channels(new String[]{\\\"project_123\\\", \\\"group_2\\\"}),\\n    .disabled(False),\\n    .rateLimit(1000)\\n)\"\n                    },\n                    {\n                        \"label\": \"Ruby\",\n                        \"lang\": \"Ruby\",\n                        \"source\": \"endpoint_out = svix.endpoint.update('app_id', 'endpoint_id', Svix::EndpointUpdate.new({\\n    \\\"uid\\\": \\\"unique-endpoint-identifier\\\",\\n    \\\"url\\\": \\\"https://example.com/webhook/\\\",\\n    \\\"version\\\": 1,\\n    \\\"description\\\": \\\"An example endpoint name\\\",\\n    \\\"filter_types\\\": [\\n        \\\"user.signup\\\",\\n        \\\"user.deleted\\\"\\n    ],\\n    \\\"channels\\\": [\\n        \\\"project_123\\\",\\n        \\\"group_2\\\"\\n    ],\\n    \\\"disabled\\\": false,\\n    \\\"rate_limit\\\": 1000\\n}))\"\n                    },\n                    {\n                        \"label\": \"CLI\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"svix endpoint update 'app_id' 'endpoint_id' '{\\n    \\\"uid\\\": \\\"unique-endpoint-identifier\\\",\\n    \\\"url\\\": \\\"https://example.com/webhook/\\\",\\n    \\\"version\\\": 1,\\n    \\\"description\\\": \\\"An example endpoint name\\\",\\n    \\\"filterTypes\\\": [\\n        \\\"user.signup\\\",\\n        \\\"user.deleted\\\"\\n    ],\\n    \\\"channels\\\": [\\n        \\\"project_123\\\",\\n        \\\"group_2\\\"\\n    ],\\n    \\\"disabled\\\": false,\\n    \\\"rateLimit\\\": 1000\\n}'\"\n                    },\n                    {\n                        \"label\": \"cURL\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"curl -X 'PUT' \\\\\\n  'https://api.svix.com/api/v1/app/{app_id}/endpoint/{endpoint_id}/' \\\\\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\\\\n  -H 'accept: application/json' \\\\\\n  -H 'Content-Type: application/json' \\\\\\n  -d '{\\n    \\\"uid\\\": \\\"unique-endpoint-identifier\\\",\\n    \\\"url\\\": \\\"https://example.com/webhook/\\\",\\n    \\\"version\\\": 1,\\n    \\\"description\\\": \\\"An example endpoint name\\\",\\n    \\\"filterTypes\\\": [\\n        \\\"user.signup\\\",\\n        \\\"user.deleted\\\"\\n    ],\\n    \\\"channels\\\": [\\n        \\\"project_123\\\",\\n        \\\"group_2\\\"\\n    ],\\n    \\\"disabled\\\": false,\\n    \\\"rateLimit\\\": 1000\\n}'\"\n                    }\n                ]\n            }\n        },\n        \"/api/v1/app/{app_id}/endpoint/{endpoint_id}/headers/\": {\n            \"get\": {\n                \"description\": \"Get the additional headers to be sent with the webhook\",\n                \"operationId\": \"get_endpoint_headers_api_v1_app__app_id__endpoint__endpoint_id__headers__get\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"endpoint_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"description\": \"The endpoint's ID or UID\",\n                            \"example\": \"ep_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"maxLength\": 256,\n                            \"minLength\": 1,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"Endpoint Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"app_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"description\": \"The application's ID or UID\",\n                            \"example\": \"app_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"maxLength\": 256,\n                            \"minLength\": 1,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"App Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"The request's idempotency key\",\n                        \"in\": \"header\",\n                        \"name\": \"idempotency-key\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"description\": \"The request's idempotency key\",\n                            \"title\": \"Idempotency-Key\",\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/EndpointHeadersOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Successful Response\"\n                    },\n                    \"401\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Not Found\"\n                    },\n                    \"409\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Conflict\"\n                    },\n                    \"422\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        },\n                        \"description\": \"Validation Error\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"HTTPBearer\": []\n                    }\n                ],\n                \"summary\": \"Get Endpoint Headers\",\n                \"tags\": [\n                    \"Endpoint\"\n                ],\n                \"x-codeSamples\": [\n                    {\n                        \"label\": \"JavaScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"const endpointHeadersOut = await svix.endpoint.getHeaders('app_id', 'endpoint_id');\"\n                    },\n                    {\n                        \"label\": \"TypeScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"const endpointHeadersOut = await svix.endpoint.getHeaders('app_id', 'endpoint_id');\"\n                    },\n                    {\n                        \"label\": \"Python\",\n                        \"lang\": \"Python\",\n                        \"source\": \"endpoint_headers_out = svix.endpoint.get_headers('app_id', 'endpoint_id')\"\n                    },\n                    {\n                        \"label\": \"Go\",\n                        \"lang\": \"Go\",\n                        \"source\": \"endpointHeadersOut, err := svixClient.Endpoint.GetHeaders(\\\"app_id\\\", \\\"endpoint_id\\\")\"\n                    },\n                    {\n                        \"label\": \"Kotlin\",\n                        \"lang\": \"Kotlin\",\n                        \"source\": \"val endpointHeadersOut = svix.endpoint.getHeaders('app_id', 'endpoint_id')\"\n                    },\n                    {\n                        \"label\": \"Java\",\n                        \"lang\": \"Java\",\n                        \"source\": \"EndpointHeadersOut endpointHeadersOut = svix.getEndpoint().getHeaders('app_id', 'endpoint_id')\"\n                    },\n                    {\n                        \"label\": \"Ruby\",\n                        \"lang\": \"Ruby\",\n                        \"source\": \"endpoint_headers_out = svix.endpoint.get_headers('app_id', 'endpoint_id')\"\n                    },\n                    {\n                        \"label\": \"CLI\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"svix endpoint get-headers 'app_id' 'endpoint_id'\"\n                    },\n                    {\n                        \"label\": \"cURL\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"curl -X 'GET' \\\\\\n  'https://api.svix.com/api/v1/app/{app_id}/endpoint/{endpoint_id}/headers/' \\\\\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\\\\n  -H 'accept: application/json' \\\\\\n  -H 'Content-Type: application/json'\"\n                    }\n                ]\n            },\n            \"patch\": {\n                \"description\": \"Partially set the additional headers to be sent with the webhook\",\n                \"operationId\": \"patch_endpoint_headers_api_v1_app__app_id__endpoint__endpoint_id__headers__patch\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"app_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"description\": \"The application's ID or UID\",\n                            \"example\": \"app_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"maxLength\": 256,\n                            \"minLength\": 1,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"App Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"endpoint_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"description\": \"The endpoint's ID or UID\",\n                            \"example\": \"ep_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"maxLength\": 256,\n                            \"minLength\": 1,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"Endpoint Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"The request's idempotency key\",\n                        \"in\": \"header\",\n                        \"name\": \"idempotency-key\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"description\": \"The request's idempotency key\",\n                            \"title\": \"Idempotency-Key\",\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/EndpointHeadersIn\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"Successful Response\"\n                    },\n                    \"401\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Not Found\"\n                    },\n                    \"409\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Conflict\"\n                    },\n                    \"422\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        },\n                        \"description\": \"Validation Error\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"HTTPBearer\": []\n                    }\n                ],\n                \"summary\": \"Patch Endpoint Headers\",\n                \"tags\": [\n                    \"Endpoint\"\n                ],\n                \"x-codeSamples\": [\n                    {\n                        \"label\": \"JavaScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"await svix.endpoint.patchHeaders('app_id', 'endpoint_id', {\\n    headers: {\\n        \\\"X-Foobar\\\": \\\"Bar\\\",\\n        \\\"X-Example\\\": \\\"123\\\"\\n    }\\n});\"\n                    },\n                    {\n                        \"label\": \"TypeScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"await svix.endpoint.patchHeaders('app_id', 'endpoint_id', {\\n    headers: {\\n        \\\"X-Foobar\\\": \\\"Bar\\\",\\n        \\\"X-Example\\\": \\\"123\\\"\\n    }\\n});\"\n                    },\n                    {\n                        \"label\": \"Python\",\n                        \"lang\": \"Python\",\n                        \"source\": \"svix.endpoint.patch_headers('app_id', 'endpoint_id', EndpointHeadersIn(\\n    headers={'X-Foobar': 'Bar', 'X-Example': '123'}\\n))\"\n                    },\n                    {\n                        \"label\": \"Go\",\n                        \"lang\": \"Go\",\n                        \"source\": \"err := svixClient.Endpoint.PatchHeaders(\\\"app_id\\\", \\\"endpoint_id\\\", \u0026svix.EndpointHeadersIn{\\n    Headers: map[string]string{\\n        \\\"X-Foobar\\\": \\\"Bar\\\",\\n        \\\"X-Example\\\": \\\"123\\\"\\n    }\\n})\"\n                    },\n                    {\n                        \"label\": \"Kotlin\",\n                        \"lang\": \"Kotlin\",\n                        \"source\": \"svix.endpoint.patchHeaders('app_id', 'endpoint_id', EndpointHeadersIn()\\n    .headers(\\\"\\\"\\\"{\\n        \\\"X-Foobar\\\": \\\"Bar\\\",\\n        \\\"X-Example\\\": \\\"123\\\"\\n    }\\\"\\\"\\\")\\n)\"\n                    },\n                    {\n                        \"label\": \"Java\",\n                        \"lang\": \"Java\",\n                        \"source\": \"svix.getEndpoint().patchHeaders('app_id', 'endpoint_id', new EndpointHeadersIn()\\n    .headers(\\\"{\\\" +\\n        \\\"\\\\\\\"X-Foobar\\\\\\\": \\\\\\\"Bar\\\\\\\",\\\" +\\n        \\\"\\\\\\\"X-Example\\\\\\\": \\\\\\\"123\\\\\\\"\\\" +\\n    \\\"}\\\")\\n)\"\n                    },\n                    {\n                        \"label\": \"Ruby\",\n                        \"lang\": \"Ruby\",\n                        \"source\": \"svix.endpoint.patch_headers('app_id', 'endpoint_id', Svix::EndpointHeadersIn.new({\\n    \\\"headers\\\": {\\n        \\\"X-Foobar\\\": \\\"Bar\\\",\\n        \\\"X-Example\\\": \\\"123\\\"\\n    }\\n}))\"\n                    },\n                    {\n                        \"label\": \"CLI\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"svix endpoint patch-headers 'app_id' 'endpoint_id' '{\\n    \\\"headers\\\": {\\n        \\\"X-Foobar\\\": \\\"Bar\\\",\\n        \\\"X-Example\\\": \\\"123\\\"\\n    }\\n}'\"\n                    },\n                    {\n                        \"label\": \"cURL\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"curl -X 'PATCH' \\\\\\n  'https://api.svix.com/api/v1/app/{app_id}/endpoint/{endpoint_id}/headers/' \\\\\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\\\\n  -H 'accept: application/json' \\\\\\n  -H 'Content-Type: application/json' \\\\\\n  -d '{\\n    \\\"headers\\\": {\\n        \\\"X-Foobar\\\": \\\"Bar\\\",\\n        \\\"X-Example\\\": \\\"123\\\"\\n    }\\n}'\"\n                    }\n                ]\n            },\n            \"put\": {\n                \"description\": \"Set the additional headers to be sent with the webhook\",\n                \"operationId\": \"update_endpoint_headers_api_v1_app__app_id__endpoint__endpoint_id__headers__put\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"app_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"description\": \"The application's ID or UID\",\n                            \"example\": \"app_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"maxLength\": 256,\n                            \"minLength\": 1,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"App Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"endpoint_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"description\": \"The endpoint's ID or UID\",\n                            \"example\": \"ep_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"maxLength\": 256,\n                            \"minLength\": 1,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"Endpoint Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"The request's idempotency key\",\n                        \"in\": \"header\",\n                        \"name\": \"idempotency-key\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"description\": \"The request's idempotency key\",\n                            \"title\": \"Idempotency-Key\",\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/EndpointHeadersIn\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"Successful Response\"\n                    },\n                    \"401\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Not Found\"\n                    },\n                    \"409\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Conflict\"\n                    },\n                    \"422\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        },\n                        \"description\": \"Validation Error\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"HTTPBearer\": []\n                    }\n                ],\n                \"summary\": \"Update Endpoint Headers\",\n                \"tags\": [\n                    \"Endpoint\"\n                ],\n                \"x-codeSamples\": [\n                    {\n                        \"label\": \"JavaScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"await svix.endpoint.updateHeaders('app_id', 'endpoint_id', {\\n    headers: {\\n        \\\"X-Foobar\\\": \\\"Bar\\\",\\n        \\\"X-Example\\\": \\\"123\\\"\\n    }\\n});\"\n                    },\n                    {\n                        \"label\": \"TypeScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"await svix.endpoint.updateHeaders('app_id', 'endpoint_id', {\\n    headers: {\\n        \\\"X-Foobar\\\": \\\"Bar\\\",\\n        \\\"X-Example\\\": \\\"123\\\"\\n    }\\n});\"\n                    },\n                    {\n                        \"label\": \"Python\",\n                        \"lang\": \"Python\",\n                        \"source\": \"svix.endpoint.update_headers('app_id', 'endpoint_id', EndpointHeadersIn(\\n    headers={'X-Foobar': 'Bar', 'X-Example': '123'}\\n))\"\n                    },\n                    {\n                        \"label\": \"Go\",\n                        \"lang\": \"Go\",\n                        \"source\": \"err := svixClient.Endpoint.UpdateHeaders(\\\"app_id\\\", \\\"endpoint_id\\\", \u0026svix.EndpointHeadersIn{\\n    Headers: map[string]string{\\n        \\\"X-Foobar\\\": \\\"Bar\\\",\\n        \\\"X-Example\\\": \\\"123\\\"\\n    }\\n})\"\n                    },\n                    {\n                        \"label\": \"Kotlin\",\n                        \"lang\": \"Kotlin\",\n                        \"source\": \"svix.endpoint.updateHeaders('app_id', 'endpoint_id', EndpointHeadersIn()\\n    .headers(\\\"\\\"\\\"{\\n        \\\"X-Foobar\\\": \\\"Bar\\\",\\n        \\\"X-Example\\\": \\\"123\\\"\\n    }\\\"\\\"\\\")\\n)\"\n                    },\n                    {\n                        \"label\": \"Java\",\n                        \"lang\": \"Java\",\n                        \"source\": \"svix.getEndpoint().updateHeaders('app_id', 'endpoint_id', new EndpointHeadersIn()\\n    .headers(\\\"{\\\" +\\n        \\\"\\\\\\\"X-Foobar\\\\\\\": \\\\\\\"Bar\\\\\\\",\\\" +\\n        \\\"\\\\\\\"X-Example\\\\\\\": \\\\\\\"123\\\\\\\"\\\" +\\n    \\\"}\\\")\\n)\"\n                    },\n                    {\n                        \"label\": \"Ruby\",\n                        \"lang\": \"Ruby\",\n                        \"source\": \"svix.endpoint.update_headers('app_id', 'endpoint_id', Svix::EndpointHeadersIn.new({\\n    \\\"headers\\\": {\\n        \\\"X-Foobar\\\": \\\"Bar\\\",\\n        \\\"X-Example\\\": \\\"123\\\"\\n    }\\n}))\"\n                    },\n                    {\n                        \"label\": \"CLI\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"svix endpoint update-headers 'app_id' 'endpoint_id' '{\\n    \\\"headers\\\": {\\n        \\\"X-Foobar\\\": \\\"Bar\\\",\\n        \\\"X-Example\\\": \\\"123\\\"\\n    }\\n}'\"\n                    },\n                    {\n                        \"label\": \"cURL\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"curl -X 'PUT' \\\\\\n  'https://api.svix.com/api/v1/app/{app_id}/endpoint/{endpoint_id}/headers/' \\\\\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\\\\n  -H 'accept: application/json' \\\\\\n  -H 'Content-Type: application/json' \\\\\\n  -d '{\\n    \\\"headers\\\": {\\n        \\\"X-Foobar\\\": \\\"Bar\\\",\\n        \\\"X-Example\\\": \\\"123\\\"\\n    }\\n}'\"\n                    }\n                ]\n            }\n        },\n        \"/api/v1/app/{app_id}/endpoint/{endpoint_id}/msg/\": {\n            \"get\": {\n                \"description\": \"List messages for a particular endpoint. Additionally includes metadata about the latest message attempt.\\n\\nThe `before` parameter lets you filter all items created before a certain date and is ignored if an iterator is passed.\",\n                \"operationId\": \"list_attempted_messages_api_v1_app__app_id__endpoint__endpoint_id__msg__get\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"endpoint_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"description\": \"The endpoint's ID or UID\",\n                            \"example\": \"ep_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"maxLength\": 256,\n                            \"minLength\": 1,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"Endpoint Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"app_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"description\": \"The application's ID or UID\",\n                            \"example\": \"app_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"maxLength\": 256,\n                            \"minLength\": 1,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"App Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"iterator\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"example\": \"msg_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"title\": \"Iterator\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"limit\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"default\": 50,\n                            \"maximum\": 250.0,\n                            \"title\": \"Limit\",\n                            \"type\": \"integer\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"status\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/MessageStatus\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"before\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"format\": \"date-time\",\n                            \"title\": \"Before\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"The request's idempotency key\",\n                        \"in\": \"header\",\n                        \"name\": \"idempotency-key\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"description\": \"The request's idempotency key\",\n                            \"title\": \"Idempotency-Key\",\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ListResponse_EndpointMessageOut_\"\n                                }\n                            }\n                        },\n                        \"description\": \"Successful Response\"\n                    },\n                    \"401\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Not Found\"\n                    },\n                    \"409\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Conflict\"\n                    },\n                    \"422\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        },\n                        \"description\": \"Validation Error\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"HTTPBearer\": []\n                    }\n                ],\n                \"summary\": \"List Attempted Messages\",\n                \"tags\": [\n                    \"Message Attempt\"\n                ],\n                \"x-codeSamples\": [\n                    {\n                        \"label\": \"cURL\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"curl -X 'GET' \\\\\\n  'https://api.svix.com/api/v1/app/{app_id}/endpoint/{endpoint_id}/msg/' \\\\\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\\\\n  -H 'accept: application/json' \\\\\\n  -H 'Content-Type: application/json'\"\n                    }\n                ]\n            }\n        },\n        \"/api/v1/app/{app_id}/endpoint/{endpoint_id}/recover/\": {\n            \"post\": {\n                \"description\": \"Resend all failed messages since a given time.\",\n                \"operationId\": \"recover_failed_webhooks_api_v1_app__app_id__endpoint__endpoint_id__recover__post\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"app_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"description\": \"The application's ID or UID\",\n                            \"example\": \"app_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"maxLength\": 256,\n                            \"minLength\": 1,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"App Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"endpoint_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"description\": \"The endpoint's ID or UID\",\n                            \"example\": \"ep_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"maxLength\": 256,\n                            \"minLength\": 1,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"Endpoint Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"The request's idempotency key\",\n                        \"in\": \"header\",\n                        \"name\": \"idempotency-key\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"description\": \"The request's idempotency key\",\n                            \"title\": \"Idempotency-Key\",\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/RecoverIn\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"202\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/RecoverOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Successful Response\"\n                    },\n                    \"401\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Not Found\"\n                    },\n                    \"409\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Conflict\"\n                    },\n                    \"422\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        },\n                        \"description\": \"Validation Error\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"HTTPBearer\": []\n                    }\n                ],\n                \"summary\": \"Recover Failed Webhooks\",\n                \"tags\": [\n                    \"Endpoint\"\n                ],\n                \"x-codeSamples\": [\n                    {\n                        \"label\": \"JavaScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"const recoverOut = await svix.endpoint.recover('app_id', 'endpoint_id', {\\n    since: new Date(\\\"2019-08-24T14:15:22Z\\\")\\n});\"\n                    },\n                    {\n                        \"label\": \"TypeScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"const recoverOut = await svix.endpoint.recover('app_id', 'endpoint_id', {\\n    since: new Date(\\\"2019-08-24T14:15:22Z\\\")\\n});\"\n                    },\n                    {\n                        \"label\": \"Python\",\n                        \"lang\": \"Python\",\n                        \"source\": \"recover_out = svix.endpoint.recover('app_id', 'endpoint_id', RecoverIn(\\n    since=datetime.datetime(2019, 8, 24, 14, 15, 22, timezone.utc)\\n))\"\n                    },\n                    {\n                        \"label\": \"Go\",\n                        \"lang\": \"Go\",\n                        \"source\": \"recoverOut, err := svixClient.Endpoint.Recover(\\\"app_id\\\", \\\"endpoint_id\\\", \u0026svix.RecoverIn{\\n    Since: \\\"2019-08-24T14:15:22Z\\\"\\n})\"\n                    },\n                    {\n                        \"label\": \"Kotlin\",\n                        \"lang\": \"Kotlin\",\n                        \"source\": \"val recoverOut = svix.endpoint.recover('app_id', 'endpoint_id', RecoverIn()\\n    .since(\\\"2019-08-24T14:15:22Z\\\")\\n)\"\n                    },\n                    {\n                        \"label\": \"Java\",\n                        \"lang\": \"Java\",\n                        \"source\": \"RecoverOut recoverOut = svix.getEndpoint().recover('app_id', 'endpoint_id', new RecoverIn()\\n    .since(\\\"2019-08-24T14:15:22Z\\\")\\n)\"\n                    },\n                    {\n                        \"label\": \"Ruby\",\n                        \"lang\": \"Ruby\",\n                        \"source\": \"recover_out = svix.endpoint.recover('app_id', 'endpoint_id', Svix::RecoverIn.new({\\n    \\\"since\\\": \\\"2019-08-24T14:15:22Z\\\"\\n}))\"\n                    },\n                    {\n                        \"label\": \"CLI\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"svix endpoint recover 'app_id' 'endpoint_id' '{\\n    \\\"since\\\": \\\"2019-08-24T14:15:22Z\\\"\\n}'\"\n                    },\n                    {\n                        \"label\": \"cURL\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"curl -X 'POST' \\\\\\n  'https://api.svix.com/api/v1/app/{app_id}/endpoint/{endpoint_id}/recover/' \\\\\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\\\\n  -H 'accept: application/json' \\\\\\n  -H 'Content-Type: application/json' \\\\\\n  -d '{\\n    \\\"since\\\": \\\"2019-08-24T14:15:22Z\\\"\\n}'\"\n                    }\n                ]\n            }\n        },\n        \"/api/v1/app/{app_id}/endpoint/{endpoint_id}/secret/\": {\n            \"get\": {\n                \"description\": \"Get the endpoint's signing secret.\\n\\nThis is used to verify the authenticity of the webhook.\\nFor more information please refer to [the consuming webhooks docs](https://docs.svix.com/consuming-webhooks/).\",\n                \"operationId\": \"get_endpoint_secret_api_v1_app__app_id__endpoint__endpoint_id__secret__get\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"endpoint_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"description\": \"The endpoint's ID or UID\",\n                            \"example\": \"ep_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"maxLength\": 256,\n                            \"minLength\": 1,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"Endpoint Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"app_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"description\": \"The application's ID or UID\",\n                            \"example\": \"app_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"maxLength\": 256,\n                            \"minLength\": 1,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"App Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"The request's idempotency key\",\n                        \"in\": \"header\",\n                        \"name\": \"idempotency-key\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"description\": \"The request's idempotency key\",\n                            \"title\": \"Idempotency-Key\",\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/EndpointSecretOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Successful Response\"\n                    },\n                    \"401\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Not Found\"\n                    },\n                    \"409\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Conflict\"\n                    },\n                    \"422\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        },\n                        \"description\": \"Validation Error\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"HTTPBearer\": []\n                    }\n                ],\n                \"summary\": \"Get Endpoint Secret\",\n                \"tags\": [\n                    \"Endpoint\"\n                ],\n                \"x-codeSamples\": [\n                    {\n                        \"label\": \"JavaScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"const endpointSecretOut = await svix.endpoint.secret('app_id', 'endpoint_id');\"\n                    },\n                    {\n                        \"label\": \"TypeScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"const endpointSecretOut = await svix.endpoint.secret('app_id', 'endpoint_id');\"\n                    },\n                    {\n                        \"label\": \"Python\",\n                        \"lang\": \"Python\",\n                        \"source\": \"endpoint_secret_out = svix.endpoint.secret('app_id', 'endpoint_id')\"\n                    },\n                    {\n                        \"label\": \"Go\",\n                        \"lang\": \"Go\",\n                        \"source\": \"endpointSecretOut, err := svixClient.Endpoint.Secret(\\\"app_id\\\", \\\"endpoint_id\\\")\"\n                    },\n                    {\n                        \"label\": \"Kotlin\",\n                        \"lang\": \"Kotlin\",\n                        \"source\": \"val endpointSecretOut = svix.endpoint.secret('app_id', 'endpoint_id')\"\n                    },\n                    {\n                        \"label\": \"Java\",\n                        \"lang\": \"Java\",\n                        \"source\": \"EndpointSecretOut endpointSecretOut = svix.getEndpoint().secret('app_id', 'endpoint_id')\"\n                    },\n                    {\n                        \"label\": \"Ruby\",\n                        \"lang\": \"Ruby\",\n                        \"source\": \"endpoint_secret_out = svix.endpoint.secret('app_id', 'endpoint_id')\"\n                    },\n                    {\n                        \"label\": \"CLI\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"svix endpoint secret 'app_id' 'endpoint_id'\"\n                    },\n                    {\n                        \"label\": \"cURL\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"curl -X 'GET' \\\\\\n  'https://api.svix.com/api/v1/app/{app_id}/endpoint/{endpoint_id}/secret/' \\\\\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\\\\n  -H 'accept: application/json' \\\\\\n  -H 'Content-Type: application/json'\"\n                    }\n                ]\n            }\n        },\n        \"/api/v1/app/{app_id}/endpoint/{endpoint_id}/secret/rotate/\": {\n            \"post\": {\n                \"description\": \"Rotates the endpoint's signing secret.  The previous secret will be valid for the next 24 hours.\",\n                \"operationId\": \"rotate_endpoint_secret_api_v1_app__app_id__endpoint__endpoint_id__secret_rotate__post\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"endpoint_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"description\": \"The endpoint's ID or UID\",\n                            \"example\": \"ep_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"maxLength\": 256,\n                            \"minLength\": 1,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"Endpoint Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"app_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"description\": \"The application's ID or UID\",\n                            \"example\": \"app_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"maxLength\": 256,\n                            \"minLength\": 1,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"App Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"The request's idempotency key\",\n                        \"in\": \"header\",\n                        \"name\": \"idempotency-key\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"description\": \"The request's idempotency key\",\n                            \"title\": \"Idempotency-Key\",\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/EndpointSecretRotateIn\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"Successful Response\"\n                    },\n                    \"400\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Bad Request\"\n                    },\n                    \"401\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Not Found\"\n                    },\n                    \"409\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Conflict\"\n                    },\n                    \"422\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        },\n                        \"description\": \"Validation Error\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"HTTPBearer\": []\n                    }\n                ],\n                \"summary\": \"Rotate Endpoint Secret\",\n                \"tags\": [\n                    \"Endpoint\"\n                ],\n                \"x-codeSamples\": [\n                    {\n                        \"label\": \"JavaScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"await svix.endpoint.rotate('app_id', 'endpoint_id', {\\n    key: \\\"whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD\\\"\\n});\"\n                    },\n                    {\n                        \"label\": \"TypeScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"await svix.endpoint.rotate('app_id', 'endpoint_id', {\\n    key: \\\"whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD\\\"\\n});\"\n                    },\n                    {\n                        \"label\": \"Python\",\n                        \"lang\": \"Python\",\n                        \"source\": \"svix.endpoint.rotate('app_id', 'endpoint_id', EndpointSecretRotateIn(\\n    key=\\\"whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD\\\"\\n))\"\n                    },\n                    {\n                        \"label\": \"Go\",\n                        \"lang\": \"Go\",\n                        \"source\": \"err := svixClient.Endpoint.Rotate(\\\"app_id\\\", \\\"endpoint_id\\\", \u0026svix.EndpointSecretRotateIn{\\n    Key: \\\"whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD\\\"\\n})\"\n                    },\n                    {\n                        \"label\": \"Kotlin\",\n                        \"lang\": \"Kotlin\",\n                        \"source\": \"svix.endpoint.rotate('app_id', 'endpoint_id', EndpointSecretRotateIn()\\n    .key(\\\"whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD\\\")\\n)\"\n                    },\n                    {\n                        \"label\": \"Java\",\n                        \"lang\": \"Java\",\n                        \"source\": \"svix.getEndpoint().rotate('app_id', 'endpoint_id', new EndpointSecretRotateIn()\\n    .key(\\\"whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD\\\")\\n)\"\n                    },\n                    {\n                        \"label\": \"Ruby\",\n                        \"lang\": \"Ruby\",\n                        \"source\": \"svix.endpoint.rotate('app_id', 'endpoint_id', Svix::EndpointSecretRotateIn.new({\\n    \\\"key\\\": \\\"whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD\\\"\\n}))\"\n                    },\n                    {\n                        \"label\": \"CLI\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"svix endpoint rotate 'app_id' 'endpoint_id' '{\\n    \\\"key\\\": \\\"whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD\\\"\\n}'\"\n                    },\n                    {\n                        \"label\": \"cURL\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"curl -X 'POST' \\\\\\n  'https://api.svix.com/api/v1/app/{app_id}/endpoint/{endpoint_id}/secret/rotate/' \\\\\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\\\\n  -H 'accept: application/json' \\\\\\n  -H 'Content-Type: application/json' \\\\\\n  -d '{\\n    \\\"key\\\": \\\"whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD\\\"\\n}'\"\n                    }\n                ]\n            }\n        },\n        \"/api/v1/app/{app_id}/endpoint/{endpoint_id}/send-example/\": {\n            \"post\": {\n                \"description\": \"Send an example message for event\",\n                \"operationId\": \"send_event_type_example_message_api_v1_app__app_id__endpoint__endpoint_id__send_example__post\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"app_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"description\": \"The application's ID or UID\",\n                            \"example\": \"app_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"maxLength\": 256,\n                            \"minLength\": 1,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"App Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"endpoint_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"description\": \"The endpoint's ID or UID\",\n                            \"example\": \"ep_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"maxLength\": 256,\n                            \"minLength\": 1,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"Endpoint Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"The request's idempotency key\",\n                        \"in\": \"header\",\n                        \"name\": \"idempotency-key\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"description\": \"The request's idempotency key\",\n                            \"title\": \"Idempotency-Key\",\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/EventExampleIn\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"202\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/MessageOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Successful Response\"\n                    },\n                    \"400\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Bad Request\"\n                    },\n                    \"401\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Not Found\"\n                    },\n                    \"409\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Conflict\"\n                    },\n                    \"422\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        },\n                        \"description\": \"Validation Error\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"HTTPBearer\": []\n                    }\n                ],\n                \"summary\": \"Send Event Type Example Message\",\n                \"tags\": [\n                    \"Endpoint\"\n                ],\n                \"x-codeSamples\": [\n                    {\n                        \"label\": \"JavaScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"const messageOut = await svix.endpoint.send('app_id', 'endpoint_id', {\\n    eventType: \\\"user.signup\\\"\\n});\"\n                    },\n                    {\n                        \"label\": \"TypeScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"const messageOut = await svix.endpoint.send('app_id', 'endpoint_id', {\\n    eventType: \\\"user.signup\\\"\\n});\"\n                    },\n                    {\n                        \"label\": \"Python\",\n                        \"lang\": \"Python\",\n                        \"source\": \"message_out = svix.endpoint.send('app_id', 'endpoint_id', EventExampleIn(\\n    event_type=\\\"user.signup\\\"\\n))\"\n                    },\n                    {\n                        \"label\": \"Go\",\n                        \"lang\": \"Go\",\n                        \"source\": \"messageOut, err := svixClient.Endpoint.Send(\\\"app_id\\\", \\\"endpoint_id\\\", \u0026svix.EventExampleIn{\\n    EventType: \\\"user.signup\\\"\\n})\"\n                    },\n                    {\n                        \"label\": \"Kotlin\",\n                        \"lang\": \"Kotlin\",\n                        \"source\": \"val messageOut = svix.endpoint.send('app_id', 'endpoint_id', EventExampleIn()\\n    .eventType(\\\"user.signup\\\")\\n)\"\n                    },\n                    {\n                        \"label\": \"Java\",\n                        \"lang\": \"Java\",\n                        \"source\": \"MessageOut messageOut = svix.getEndpoint().send('app_id', 'endpoint_id', new EventExampleIn()\\n    .eventType(\\\"user.signup\\\")\\n)\"\n                    },\n                    {\n                        \"label\": \"Ruby\",\n                        \"lang\": \"Ruby\",\n                        \"source\": \"message_out = svix.endpoint.send('app_id', 'endpoint_id', Svix::EventExampleIn.new({\\n    \\\"event_type\\\": \\\"user.signup\\\"\\n}))\"\n                    },\n                    {\n                        \"label\": \"CLI\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"svix endpoint send 'app_id' 'endpoint_id' '{\\n    \\\"eventType\\\": \\\"user.signup\\\"\\n}'\"\n                    },\n                    {\n                        \"label\": \"cURL\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"curl -X 'POST' \\\\\\n  'https://api.svix.com/api/v1/app/{app_id}/endpoint/{endpoint_id}/send-example/' \\\\\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\\\\n  -H 'accept: application/json' \\\\\\n  -H 'Content-Type: application/json' \\\\\\n  -d '{\\n    \\\"eventType\\\": \\\"user.signup\\\"\\n}'\"\n                    }\n                ]\n            }\n        },\n        \"/api/v1/app/{app_id}/endpoint/{endpoint_id}/stats/\": {\n            \"get\": {\n                \"description\": \"Get basic statistics for the endpoint.\",\n                \"operationId\": \"get_endpoint_stats_api_v1_app__app_id__endpoint__endpoint_id__stats__get\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"endpoint_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"description\": \"The endpoint's ID or UID\",\n                            \"example\": \"ep_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"maxLength\": 256,\n                            \"minLength\": 1,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"Endpoint Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"app_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"description\": \"The application's ID or UID\",\n                            \"example\": \"app_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"maxLength\": 256,\n                            \"minLength\": 1,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"App Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"The request's idempotency key\",\n                        \"in\": \"header\",\n                        \"name\": \"idempotency-key\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"description\": \"The request's idempotency key\",\n                            \"title\": \"Idempotency-Key\",\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/EndpointStats\"\n                                }\n                            }\n                        },\n                        \"description\": \"Successful Response\"\n                    },\n                    \"401\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Not Found\"\n                    },\n                    \"409\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Conflict\"\n                    },\n                    \"422\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        },\n                        \"description\": \"Validation Error\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"HTTPBearer\": []\n                    }\n                ],\n                \"summary\": \"Get Endpoint Stats\",\n                \"tags\": [\n                    \"Endpoint\"\n                ],\n                \"x-codeSamples\": [\n                    {\n                        \"label\": \"cURL\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"curl -X 'GET' \\\\\\n  'https://api.svix.com/api/v1/app/{app_id}/endpoint/{endpoint_id}/stats/' \\\\\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\\\\n  -H 'accept: application/json' \\\\\\n  -H 'Content-Type: application/json'\"\n                    }\n                ]\n            }\n        },\n        \"/api/v1/app/{app_id}/integration/\": {\n            \"get\": {\n                \"description\": \"List the application's integrations.\",\n                \"operationId\": \"list_integrations_api_v1_app__app_id__integration__get\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"app_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"description\": \"The application's ID or UID\",\n                            \"example\": \"app_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"maxLength\": 256,\n                            \"minLength\": 1,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"App Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"iterator\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"example\": \"integ_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"title\": \"Iterator\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"limit\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"default\": 50,\n                            \"title\": \"Limit\",\n                            \"type\": \"integer\"\n                        }\n                    },\n                    {\n                        \"description\": \"The request's idempotency key\",\n                        \"in\": \"header\",\n                        \"name\": \"idempotency-key\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"description\": \"The request's idempotency key\",\n                            \"title\": \"Idempotency-Key\",\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ListResponse_IntegrationOut_\"\n                                }\n                            }\n                        },\n                        \"description\": \"Successful Response\"\n                    },\n                    \"401\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Not Found\"\n                    },\n                    \"409\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Conflict\"\n                    },\n                    \"422\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        },\n                        \"description\": \"Validation Error\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"HTTPBearer\": []\n                    }\n                ],\n                \"summary\": \"List Integrations\",\n                \"tags\": [\n                    \"Integration\"\n                ],\n                \"x-codeSamples\": [\n                    {\n                        \"label\": \"JavaScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"const listResponseIntegrationOut = await svix.integration.list('app_id');\"\n                    },\n                    {\n                        \"label\": \"TypeScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"const listResponseIntegrationOut = await svix.integration.list('app_id');\"\n                    },\n                    {\n                        \"label\": \"Python\",\n                        \"lang\": \"Python\",\n                        \"source\": \"list_response_integration_out = svix.integration.list('app_id')\"\n                    },\n                    {\n                        \"label\": \"Go\",\n                        \"lang\": \"Go\",\n                        \"source\": \"listResponseIntegrationOut, err := svixClient.Integration.List(\\\"app_id\\\", nil)\"\n                    },\n                    {\n                        \"label\": \"Kotlin\",\n                        \"lang\": \"Kotlin\",\n                        \"source\": \"val listResponseIntegrationOut = svix.integration.list('app_id', FetchOptions())\"\n                    },\n                    {\n                        \"label\": \"Java\",\n                        \"lang\": \"Java\",\n                        \"source\": \"ListResponseIntegrationOut listResponseIntegrationOut = svix.getIntegration().list('app_id', new FetchOptions())\"\n                    },\n                    {\n                        \"label\": \"Ruby\",\n                        \"lang\": \"Ruby\",\n                        \"source\": \"list_response_integration_out = svix.integration.list('app_id')\"\n                    },\n                    {\n                        \"label\": \"CLI\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"svix integration list 'app_id'\"\n                    },\n                    {\n                        \"label\": \"cURL\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"curl -X 'GET' \\\\\\n  'https://api.svix.com/api/v1/app/{app_id}/integration/' \\\\\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\\\\n  -H 'accept: application/json' \\\\\\n  -H 'Content-Type: application/json'\"\n                    }\n                ]\n            },\n            \"post\": {\n                \"description\": \"Create an integration.\",\n                \"operationId\": \"create_integration_api_v1_app__app_id__integration__post\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"app_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"description\": \"The application's ID or UID\",\n                            \"example\": \"app_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"maxLength\": 256,\n                            \"minLength\": 1,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"App Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"The request's idempotency key\",\n                        \"in\": \"header\",\n                        \"name\": \"idempotency-key\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"description\": \"The request's idempotency key\",\n                            \"title\": \"Idempotency-Key\",\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/IntegrationIn\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"201\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/IntegrationOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Successful Response\"\n                    },\n                    \"401\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Not Found\"\n                    },\n                    \"409\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Conflict\"\n                    },\n                    \"422\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        },\n                        \"description\": \"Validation Error\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"HTTPBearer\": []\n                    }\n                ],\n                \"summary\": \"Create Integration\",\n                \"tags\": [\n                    \"Integration\"\n                ],\n                \"x-codeSamples\": [\n                    {\n                        \"label\": \"JavaScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"const integrationOut = await svix.integration.create('app_id', {\\n    name: \\\"Example Integration\\\"\\n});\"\n                    },\n                    {\n                        \"label\": \"TypeScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"const integrationOut = await svix.integration.create('app_id', {\\n    name: \\\"Example Integration\\\"\\n});\"\n                    },\n                    {\n                        \"label\": \"Python\",\n                        \"lang\": \"Python\",\n                        \"source\": \"integration_out = svix.integration.create('app_id', IntegrationIn(\\n    name=\\\"Example Integration\\\"\\n))\"\n                    },\n                    {\n                        \"label\": \"Go\",\n                        \"lang\": \"Go\",\n                        \"source\": \"integrationOut, err := svixClient.Integration.Create(\\\"app_id\\\", \u0026svix.IntegrationIn{\\n    Name: \\\"Example Integration\\\"\\n})\"\n                    },\n                    {\n                        \"label\": \"Kotlin\",\n                        \"lang\": \"Kotlin\",\n                        \"source\": \"val integrationOut = svix.integration.create('app_id', IntegrationIn()\\n    .name(\\\"Example Integration\\\")\\n)\"\n                    },\n                    {\n                        \"label\": \"Java\",\n                        \"lang\": \"Java\",\n                        \"source\": \"IntegrationOut integrationOut = svix.getIntegration().create('app_id', new IntegrationIn()\\n    .name(\\\"Example Integration\\\")\\n)\"\n                    },\n                    {\n                        \"label\": \"Ruby\",\n                        \"lang\": \"Ruby\",\n                        \"source\": \"integration_out = svix.integration.create('app_id', Svix::IntegrationIn.new({\\n    \\\"name\\\": \\\"Example Integration\\\"\\n}))\"\n                    },\n                    {\n                        \"label\": \"CLI\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"svix integration create 'app_id' '{\\n    \\\"name\\\": \\\"Example Integration\\\"\\n}'\"\n                    },\n                    {\n                        \"label\": \"cURL\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"curl -X 'POST' \\\\\\n  'https://api.svix.com/api/v1/app/{app_id}/integration/' \\\\\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\\\\n  -H 'accept: application/json' \\\\\\n  -H 'Content-Type: application/json' \\\\\\n  -d '{\\n    \\\"name\\\": \\\"Example Integration\\\"\\n}'\"\n                    }\n                ]\n            }\n        },\n        \"/api/v1/app/{app_id}/integration/{integ_id}/\": {\n            \"delete\": {\n                \"description\": \"Delete an integration and revoke it's key.\",\n                \"operationId\": \"delete_integration_api_v1_app__app_id__integration__integ_id___delete\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"integ_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"example\": \"integ_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"title\": \"Integ Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"app_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"description\": \"The application's ID or UID\",\n                            \"example\": \"app_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"maxLength\": 256,\n                            \"minLength\": 1,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"App Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"The request's idempotency key\",\n                        \"in\": \"header\",\n                        \"name\": \"idempotency-key\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"description\": \"The request's idempotency key\",\n                            \"title\": \"Idempotency-Key\",\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"Successful Response\"\n                    },\n                    \"401\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Not Found\"\n                    },\n                    \"409\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Conflict\"\n                    },\n                    \"422\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        },\n                        \"description\": \"Validation Error\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"HTTPBearer\": []\n                    }\n                ],\n                \"summary\": \"Delete Integration\",\n                \"tags\": [\n                    \"Integration\"\n                ],\n                \"x-codeSamples\": [\n                    {\n                        \"label\": \"JavaScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"await svix.integration.delete('app_id', 'integ_id');\"\n                    },\n                    {\n                        \"label\": \"TypeScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"await svix.integration.delete('app_id', 'integ_id');\"\n                    },\n                    {\n                        \"label\": \"Python\",\n                        \"lang\": \"Python\",\n                        \"source\": \"svix.integration.delete('app_id', 'integ_id')\"\n                    },\n                    {\n                        \"label\": \"Go\",\n                        \"lang\": \"Go\",\n                        \"source\": \"err := svixClient.Integration.Delete(\\\"app_id\\\", \\\"integ_id\\\")\"\n                    },\n                    {\n                        \"label\": \"Kotlin\",\n                        \"lang\": \"Kotlin\",\n                        \"source\": \"svix.integration.delete('app_id', 'integ_id')\"\n                    },\n                    {\n                        \"label\": \"Java\",\n                        \"lang\": \"Java\",\n                        \"source\": \"svix.getIntegration().delete('app_id', 'integ_id')\"\n                    },\n                    {\n                        \"label\": \"Ruby\",\n                        \"lang\": \"Ruby\",\n                        \"source\": \"svix.integration.delete('app_id', 'integ_id')\"\n                    },\n                    {\n                        \"label\": \"CLI\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"svix integration delete 'app_id' 'integ_id'\"\n                    },\n                    {\n                        \"label\": \"cURL\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"curl -X 'DELETE' \\\\\\n  'https://api.svix.com/api/v1/app/{app_id}/integration/{integ_id}/' \\\\\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\\\\n  -H 'accept: application/json' \\\\\\n  -H 'Content-Type: application/json'\"\n                    }\n                ]\n            },\n            \"get\": {\n                \"description\": \"Get an integration.\",\n                \"operationId\": \"get_integration_api_v1_app__app_id__integration__integ_id___get\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"integ_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"example\": \"integ_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"title\": \"Integ Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"app_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"description\": \"The application's ID or UID\",\n                            \"example\": \"app_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"maxLength\": 256,\n                            \"minLength\": 1,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"App Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"The request's idempotency key\",\n                        \"in\": \"header\",\n                        \"name\": \"idempotency-key\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"description\": \"The request's idempotency key\",\n                            \"title\": \"Idempotency-Key\",\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/IntegrationOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Successful Response\"\n                    },\n                    \"401\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Not Found\"\n                    },\n                    \"409\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Conflict\"\n                    },\n                    \"422\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        },\n                        \"description\": \"Validation Error\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"HTTPBearer\": []\n                    }\n                ],\n                \"summary\": \"Get Integration\",\n                \"tags\": [\n                    \"Integration\"\n                ],\n                \"x-codeSamples\": [\n                    {\n                        \"label\": \"JavaScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"const integrationOut = await svix.integration.get('app_id', 'integ_id');\"\n                    },\n                    {\n                        \"label\": \"TypeScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"const integrationOut = await svix.integration.get('app_id', 'integ_id');\"\n                    },\n                    {\n                        \"label\": \"Python\",\n                        \"lang\": \"Python\",\n                        \"source\": \"integration_out = svix.integration.get('app_id', 'integ_id')\"\n                    },\n                    {\n                        \"label\": \"Go\",\n                        \"lang\": \"Go\",\n                        \"source\": \"integrationOut, err := svixClient.Integration.Get(\\\"app_id\\\", \\\"integ_id\\\")\"\n                    },\n                    {\n                        \"label\": \"Kotlin\",\n                        \"lang\": \"Kotlin\",\n                        \"source\": \"val integrationOut = svix.integration.get('app_id', 'integ_id')\"\n                    },\n                    {\n                        \"label\": \"Java\",\n                        \"lang\": \"Java\",\n                        \"source\": \"IntegrationOut integrationOut = svix.getIntegration().get('app_id', 'integ_id')\"\n                    },\n                    {\n                        \"label\": \"Ruby\",\n                        \"lang\": \"Ruby\",\n                        \"source\": \"integration_out = svix.integration.get('app_id', 'integ_id')\"\n                    },\n                    {\n                        \"label\": \"CLI\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"svix integration get 'app_id' 'integ_id'\"\n                    },\n                    {\n                        \"label\": \"cURL\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"curl -X 'GET' \\\\\\n  'https://api.svix.com/api/v1/app/{app_id}/integration/{integ_id}/' \\\\\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\\\\n  -H 'accept: application/json' \\\\\\n  -H 'Content-Type: application/json'\"\n                    }\n                ]\n            },\n            \"put\": {\n                \"description\": \"Update an integration.\",\n                \"operationId\": \"update_integration_api_v1_app__app_id__integration__integ_id___put\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"integ_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"example\": \"integ_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"title\": \"Integ Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"app_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"description\": \"The application's ID or UID\",\n                            \"example\": \"app_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"maxLength\": 256,\n                            \"minLength\": 1,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"App Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"The request's idempotency key\",\n                        \"in\": \"header\",\n                        \"name\": \"idempotency-key\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"description\": \"The request's idempotency key\",\n                            \"title\": \"Idempotency-Key\",\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/IntegrationUpdate\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/IntegrationOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Successful Response\"\n                    },\n                    \"401\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Not Found\"\n                    },\n                    \"409\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Conflict\"\n                    },\n                    \"422\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        },\n                        \"description\": \"Validation Error\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"HTTPBearer\": []\n                    }\n                ],\n                \"summary\": \"Update Integration\",\n                \"tags\": [\n                    \"Integration\"\n                ],\n                \"x-codeSamples\": [\n                    {\n                        \"label\": \"JavaScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"const integrationOut = await svix.integration.update('app_id', 'integ_id', {\\n    name: \\\"Example Integration\\\"\\n});\"\n                    },\n                    {\n                        \"label\": \"TypeScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"const integrationOut = await svix.integration.update('app_id', 'integ_id', {\\n    name: \\\"Example Integration\\\"\\n});\"\n                    },\n                    {\n                        \"label\": \"Python\",\n                        \"lang\": \"Python\",\n                        \"source\": \"integration_out = svix.integration.update('app_id', 'integ_id', IntegrationUpdate(\\n    name=\\\"Example Integration\\\"\\n))\"\n                    },\n                    {\n                        \"label\": \"Go\",\n                        \"lang\": \"Go\",\n                        \"source\": \"integrationOut, err := svixClient.Integration.Update(\\\"app_id\\\", \\\"integ_id\\\", \u0026svix.IntegrationUpdate{\\n    Name: \\\"Example Integration\\\"\\n})\"\n                    },\n                    {\n                        \"label\": \"Kotlin\",\n                        \"lang\": \"Kotlin\",\n                        \"source\": \"val integrationOut = svix.integration.update('app_id', 'integ_id', IntegrationUpdate()\\n    .name(\\\"Example Integration\\\")\\n)\"\n                    },\n                    {\n                        \"label\": \"Java\",\n                        \"lang\": \"Java\",\n                        \"source\": \"IntegrationOut integrationOut = svix.getIntegration().update('app_id', 'integ_id', new IntegrationUpdate()\\n    .name(\\\"Example Integration\\\")\\n)\"\n                    },\n                    {\n                        \"label\": \"Ruby\",\n                        \"lang\": \"Ruby\",\n                        \"source\": \"integration_out = svix.integration.update('app_id', 'integ_id', Svix::IntegrationUpdate.new({\\n    \\\"name\\\": \\\"Example Integration\\\"\\n}))\"\n                    },\n                    {\n                        \"label\": \"CLI\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"svix integration update 'app_id' 'integ_id' '{\\n    \\\"name\\\": \\\"Example Integration\\\"\\n}'\"\n                    },\n                    {\n                        \"label\": \"cURL\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"curl -X 'PUT' \\\\\\n  'https://api.svix.com/api/v1/app/{app_id}/integration/{integ_id}/' \\\\\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\\\\n  -H 'accept: application/json' \\\\\\n  -H 'Content-Type: application/json' \\\\\\n  -d '{\\n    \\\"name\\\": \\\"Example Integration\\\"\\n}'\"\n                    }\n                ]\n            }\n        },\n        \"/api/v1/app/{app_id}/integration/{integ_id}/key/\": {\n            \"get\": {\n                \"description\": \"Get an integration's key.\",\n                \"operationId\": \"get_integration_key_api_v1_app__app_id__integration__integ_id__key__get\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"integ_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"example\": \"integ_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"title\": \"Integ Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"app_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"description\": \"The application's ID or UID\",\n                            \"example\": \"app_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"maxLength\": 256,\n                            \"minLength\": 1,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"App Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"The request's idempotency key\",\n                        \"in\": \"header\",\n                        \"name\": \"idempotency-key\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"description\": \"The request's idempotency key\",\n                            \"title\": \"Idempotency-Key\",\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/IntegrationKeyOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Successful Response\"\n                    },\n                    \"401\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Not Found\"\n                    },\n                    \"409\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Conflict\"\n                    },\n                    \"422\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        },\n                        \"description\": \"Validation Error\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"HTTPBearer\": []\n                    }\n                ],\n                \"summary\": \"Get Integration Key\",\n                \"tags\": [\n                    \"Integration\"\n                ],\n                \"x-codeSamples\": [\n                    {\n                        \"label\": \"JavaScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"const integrationKeyOut = await svix.integration.getKey('app_id', 'integ_id');\"\n                    },\n                    {\n                        \"label\": \"TypeScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"const integrationKeyOut = await svix.integration.getKey('app_id', 'integ_id');\"\n                    },\n                    {\n                        \"label\": \"Python\",\n                        \"lang\": \"Python\",\n                        \"source\": \"integration_key_out = svix.integration.get_key('app_id', 'integ_id')\"\n                    },\n                    {\n                        \"label\": \"Go\",\n                        \"lang\": \"Go\",\n                        \"source\": \"integrationKeyOut, err := svixClient.Integration.GetKey(\\\"app_id\\\", \\\"integ_id\\\")\"\n                    },\n                    {\n                        \"label\": \"Kotlin\",\n                        \"lang\": \"Kotlin\",\n                        \"source\": \"val integrationKeyOut = svix.integration.getKey('app_id', 'integ_id')\"\n                    },\n                    {\n                        \"label\": \"Java\",\n                        \"lang\": \"Java\",\n                        \"source\": \"IntegrationKeyOut integrationKeyOut = svix.getIntegration().getKey('app_id', 'integ_id')\"\n                    },\n                    {\n                        \"label\": \"Ruby\",\n                        \"lang\": \"Ruby\",\n                        \"source\": \"integration_key_out = svix.integration.get_key('app_id', 'integ_id')\"\n                    },\n                    {\n                        \"label\": \"CLI\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"svix integration get-key 'app_id' 'integ_id'\"\n                    },\n                    {\n                        \"label\": \"cURL\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"curl -X 'GET' \\\\\\n  'https://api.svix.com/api/v1/app/{app_id}/integration/{integ_id}/key/' \\\\\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\\\\n  -H 'accept: application/json' \\\\\\n  -H 'Content-Type: application/json'\"\n                    }\n                ]\n            }\n        },\n        \"/api/v1/app/{app_id}/integration/{integ_id}/key/rotate/\": {\n            \"post\": {\n                \"description\": \"Rotate the integration's key. The previous key will be immediately revoked.\",\n                \"operationId\": \"rotate_integration_key_api_v1_app__app_id__integration__integ_id__key_rotate__post\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"integ_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"example\": \"integ_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"title\": \"Integ Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"app_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"description\": \"The application's ID or UID\",\n                            \"example\": \"app_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"maxLength\": 256,\n                            \"minLength\": 1,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"App Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"The request's idempotency key\",\n                        \"in\": \"header\",\n                        \"name\": \"idempotency-key\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"description\": \"The request's idempotency key\",\n                            \"title\": \"Idempotency-Key\",\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/IntegrationKeyOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Successful Response\"\n                    },\n                    \"401\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Not Found\"\n                    },\n                    \"409\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Conflict\"\n                    },\n                    \"422\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        },\n                        \"description\": \"Validation Error\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"HTTPBearer\": []\n                    }\n                ],\n                \"summary\": \"Rotate Integration Key\",\n                \"tags\": [\n                    \"Integration\"\n                ],\n                \"x-codeSamples\": [\n                    {\n                        \"label\": \"JavaScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"const integrationKeyOut = await svix.integration.rotateKey('app_id', 'integ_id');\"\n                    },\n                    {\n                        \"label\": \"TypeScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"const integrationKeyOut = await svix.integration.rotateKey('app_id', 'integ_id');\"\n                    },\n                    {\n                        \"label\": \"Python\",\n                        \"lang\": \"Python\",\n                        \"source\": \"integration_key_out = svix.integration.rotate_key('app_id', 'integ_id')\"\n                    },\n                    {\n                        \"label\": \"Go\",\n                        \"lang\": \"Go\",\n                        \"source\": \"integrationKeyOut, err := svixClient.Integration.RotateKey(\\\"app_id\\\", \\\"integ_id\\\")\"\n                    },\n                    {\n                        \"label\": \"Kotlin\",\n                        \"lang\": \"Kotlin\",\n                        \"source\": \"val integrationKeyOut = svix.integration.rotateKey('app_id', 'integ_id')\"\n                    },\n                    {\n                        \"label\": \"Java\",\n                        \"lang\": \"Java\",\n                        \"source\": \"IntegrationKeyOut integrationKeyOut = svix.getIntegration().rotateKey('app_id', 'integ_id')\"\n                    },\n                    {\n                        \"label\": \"Ruby\",\n                        \"lang\": \"Ruby\",\n                        \"source\": \"integration_key_out = svix.integration.rotate_key('app_id', 'integ_id')\"\n                    },\n                    {\n                        \"label\": \"CLI\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"svix integration rotate-key 'app_id' 'integ_id'\"\n                    },\n                    {\n                        \"label\": \"cURL\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"curl -X 'POST' \\\\\\n  'https://api.svix.com/api/v1/app/{app_id}/integration/{integ_id}/key/rotate/' \\\\\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\\\\n  -H 'accept: application/json' \\\\\\n  -H 'Content-Type: application/json'\"\n                    }\n                ]\n            }\n        },\n        \"/api/v1/app/{app_id}/msg/\": {\n            \"get\": {\n                \"description\": \"List all of the application's messages.\\n\\nThe `before` parameter lets you filter all items created before a certain date and is ignored if an iterator is passed.\",\n                \"operationId\": \"list_messages_api_v1_app__app_id__msg__get\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"app_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"description\": \"The application's ID or UID\",\n                            \"example\": \"app_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"maxLength\": 256,\n                            \"minLength\": 1,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"App Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"iterator\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"example\": \"msg_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"title\": \"Iterator\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"limit\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"default\": 50,\n                            \"maximum\": 250.0,\n                            \"title\": \"Limit\",\n                            \"type\": \"integer\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"event_types\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"items\": {\n                                \"example\": \"user.signup\",\n                                \"maxLength\": 256,\n                                \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                                \"type\": \"string\"\n                            },\n                            \"title\": \"Event Types\",\n                            \"type\": \"array\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"channel\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"example\": \"project_1337\",\n                            \"maxLength\": 128,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"Channel\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"before\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"format\": \"date-time\",\n                            \"title\": \"Before\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"The request's idempotency key\",\n                        \"in\": \"header\",\n                        \"name\": \"idempotency-key\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"description\": \"The request's idempotency key\",\n                            \"title\": \"Idempotency-Key\",\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ListResponse_MessageOut_\"\n                                }\n                            }\n                        },\n                        \"description\": \"Successful Response\"\n                    },\n                    \"401\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Not Found\"\n                    },\n                    \"409\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Conflict\"\n                    },\n                    \"422\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        },\n                        \"description\": \"Validation Error\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"HTTPBearer\": []\n                    }\n                ],\n                \"summary\": \"List Messages\",\n                \"tags\": [\n                    \"Message\"\n                ],\n                \"x-codeSamples\": [\n                    {\n                        \"label\": \"JavaScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"const listResponseMessageOut = await svix.message.list('app_id');\"\n                    },\n                    {\n                        \"label\": \"TypeScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"const listResponseMessageOut = await svix.message.list('app_id');\"\n                    },\n                    {\n                        \"label\": \"Python\",\n                        \"lang\": \"Python\",\n                        \"source\": \"list_response_message_out = svix.message.list('app_id')\"\n                    },\n                    {\n                        \"label\": \"Go\",\n                        \"lang\": \"Go\",\n                        \"source\": \"listResponseMessageOut, err := svixClient.Message.List(\\\"app_id\\\", nil)\"\n                    },\n                    {\n                        \"label\": \"Kotlin\",\n                        \"lang\": \"Kotlin\",\n                        \"source\": \"val listResponseMessageOut = svix.message.list('app_id', FetchOptions())\"\n                    },\n                    {\n                        \"label\": \"Java\",\n                        \"lang\": \"Java\",\n                        \"source\": \"ListResponseMessageOut listResponseMessageOut = svix.getMessage().list('app_id', new FetchOptions())\"\n                    },\n                    {\n                        \"label\": \"Ruby\",\n                        \"lang\": \"Ruby\",\n                        \"source\": \"list_response_message_out = svix.message.list('app_id')\"\n                    },\n                    {\n                        \"label\": \"CLI\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"svix message list 'app_id'\"\n                    },\n                    {\n                        \"label\": \"cURL\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"curl -X 'GET' \\\\\\n  'https://api.svix.com/api/v1/app/{app_id}/msg/' \\\\\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\\\\n  -H 'accept: application/json' \\\\\\n  -H 'Content-Type: application/json'\"\n                    }\n                ]\n            },\n            \"post\": {\n                \"description\": \"Creates a new message and dispatches it to all of the application's endpoints.\\n\\nThe `eventId` is an optional custom unique ID. It's verified to be unique only up to a day, after that no verification will be made.\\nIf a message with the same `eventId` already exists for any application in your environment, a 409 conflict error will be returned.\\n\\nThe `eventType` indicates the type and schema of the event. All messages of a certain `eventType` are expected to have the same schema. Endpoints can choose to only listen to specific event types.\\nMessages can also have `channels`, which similar to event types let endpoints filter by them. Unlike event types, messages can have multiple channels, and channels don't imply a specific message content or schema.\",\n                \"operationId\": \"create_message_api_v1_app__app_id__msg__post\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"app_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"description\": \"The application's ID or UID\",\n                            \"example\": \"app_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"maxLength\": 256,\n                            \"minLength\": 1,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"App Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"with_content\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"default\": true,\n                            \"title\": \"With Content\",\n                            \"type\": \"boolean\"\n                        }\n                    },\n                    {\n                        \"description\": \"The request's idempotency key\",\n                        \"in\": \"header\",\n                        \"name\": \"idempotency-key\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"description\": \"The request's idempotency key\",\n                            \"title\": \"Idempotency-Key\",\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/MessageIn\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"202\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/MessageOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Successful Response\"\n                    },\n                    \"401\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Not Found\"\n                    },\n                    \"409\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Conflict\"\n                    },\n                    \"413\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Request Entity Too Large\"\n                    },\n                    \"422\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        },\n                        \"description\": \"Validation Error\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"HTTPBearer\": []\n                    }\n                ],\n                \"summary\": \"Create Message\",\n                \"tags\": [\n                    \"Message\"\n                ],\n                \"x-codeSamples\": [\n                    {\n                        \"label\": \"JavaScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"const messageOut = await svix.message.create('app_id', {\\n    eventType: \\\"user.signup\\\",\\n    eventId: \\\"evt_pNZKtWg8Azow\\\",\\n    channels: [\\n        \\\"project_123\\\",\\n        \\\"group_2\\\"\\n    ],\\n    payload: {\\n        \\\"username\\\": \\\"test_user\\\",\\n        \\\"email\\\": \\\"test@example.com\\\"\\n    },\\n    payloadRetentionPeriod: 90\\n});\"\n                    },\n                    {\n                        \"label\": \"TypeScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"const messageOut = await svix.message.create('app_id', {\\n    eventType: \\\"user.signup\\\",\\n    eventId: \\\"evt_pNZKtWg8Azow\\\",\\n    channels: [\\n        \\\"project_123\\\",\\n        \\\"group_2\\\"\\n    ],\\n    payload: {\\n        \\\"username\\\": \\\"test_user\\\",\\n        \\\"email\\\": \\\"test@example.com\\\"\\n    },\\n    payloadRetentionPeriod: 90\\n});\"\n                    },\n                    {\n                        \"label\": \"Python\",\n                        \"lang\": \"Python\",\n                        \"source\": \"message_out = svix.message.create('app_id', MessageIn(\\n    event_type=\\\"user.signup\\\",\\n    event_id=\\\"evt_pNZKtWg8Azow\\\",\\n    channels=['project_123', 'group_2'],\\n    payload={'username': 'test_user', 'email': 'test@example.com'},\\n    payload_retention_period=90\\n))\"\n                    },\n                    {\n                        \"label\": \"Go\",\n                        \"lang\": \"Go\",\n                        \"source\": \"messageOut, err := svixClient.Message.Create(\\\"app_id\\\", \u0026svix.MessageIn{\\n    EventType: \\\"user.signup\\\",\\n    EventId: \\\"evt_pNZKtWg8Azow\\\",\\n    Channels: [...]string{\\\"project_123\\\", \\\"group_2\\\"},\\n    Payload: map[string]interface{}{\\n        \\\"username\\\": \\\"test_user\\\",\\n        \\\"email\\\": \\\"test@example.com\\\"\\n    },\\n    PayloadRetentionPeriod: 90\\n})\"\n                    },\n                    {\n                        \"label\": \"Kotlin\",\n                        \"lang\": \"Kotlin\",\n                        \"source\": \"val messageOut = svix.message.create('app_id', MessageIn()\\n    .eventType(\\\"user.signup\\\"),\\n    .eventId(\\\"evt_pNZKtWg8Azow\\\"),\\n    .channels(arrayOf(\\\"project_123\\\", \\\"group_2\\\")),\\n    .payload(\\\"\\\"\\\"{\\n        \\\"username\\\": \\\"test_user\\\",\\n        \\\"email\\\": \\\"test@example.com\\\"\\n    }\\\"\\\"\\\"),\\n    .payloadRetentionPeriod(90)\\n)\"\n                    },\n                    {\n                        \"label\": \"Java\",\n                        \"lang\": \"Java\",\n                        \"source\": \"MessageOut messageOut = svix.getMessage().create('app_id', new MessageIn()\\n    .eventType(\\\"user.signup\\\"),\\n    .eventId(\\\"evt_pNZKtWg8Azow\\\"),\\n    .channels(new String[]{\\\"project_123\\\", \\\"group_2\\\"}),\\n    .payload(\\\"{\\\" +\\n        \\\"\\\\\\\"username\\\\\\\": \\\\\\\"test_user\\\\\\\",\\\" +\\n        \\\"\\\\\\\"email\\\\\\\": \\\\\\\"test@example.com\\\\\\\"\\\" +\\n    \\\"}\\\"),\\n    .payloadRetentionPeriod(90)\\n)\"\n                    },\n                    {\n                        \"label\": \"Ruby\",\n                        \"lang\": \"Ruby\",\n                        \"source\": \"message_out = svix.message.create('app_id', Svix::MessageIn.new({\\n    \\\"event_type\\\": \\\"user.signup\\\",\\n    \\\"event_id\\\": \\\"evt_pNZKtWg8Azow\\\",\\n    \\\"channels\\\": [\\n        \\\"project_123\\\",\\n        \\\"group_2\\\"\\n    ],\\n    \\\"payload\\\": {\\n        \\\"username\\\": \\\"test_user\\\",\\n        \\\"email\\\": \\\"test@example.com\\\"\\n    },\\n    \\\"payload_retention_period\\\": 90\\n}))\"\n                    },\n                    {\n                        \"label\": \"CLI\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"svix message create 'app_id' '{\\n    \\\"eventType\\\": \\\"user.signup\\\",\\n    \\\"eventId\\\": \\\"evt_pNZKtWg8Azow\\\",\\n    \\\"channels\\\": [\\n        \\\"project_123\\\",\\n        \\\"group_2\\\"\\n    ],\\n    \\\"payload\\\": {\\n        \\\"username\\\": \\\"test_user\\\",\\n        \\\"email\\\": \\\"test@example.com\\\"\\n    },\\n    \\\"payloadRetentionPeriod\\\": 90\\n}'\"\n                    },\n                    {\n                        \"label\": \"cURL\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"curl -X 'POST' \\\\\\n  'https://api.svix.com/api/v1/app/{app_id}/msg/' \\\\\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\\\\n  -H 'accept: application/json' \\\\\\n  -H 'Content-Type: application/json' \\\\\\n  -d '{\\n    \\\"eventType\\\": \\\"user.signup\\\",\\n    \\\"eventId\\\": \\\"evt_pNZKtWg8Azow\\\",\\n    \\\"channels\\\": [\\n        \\\"project_123\\\",\\n        \\\"group_2\\\"\\n    ],\\n    \\\"payload\\\": {\\n        \\\"username\\\": \\\"test_user\\\",\\n        \\\"email\\\": \\\"test@example.com\\\"\\n    },\\n    \\\"payloadRetentionPeriod\\\": 90\\n}'\"\n                    }\n                ]\n            }\n        },\n        \"/api/v1/app/{app_id}/msg/{msg_id}/\": {\n            \"get\": {\n                \"description\": \"Get a message by its ID or eventID.\",\n                \"operationId\": \"get_message_api_v1_app__app_id__msg__msg_id___get\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"msg_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"description\": \"The message's ID or eventID\",\n                            \"example\": \"msg_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"maxLength\": 256,\n                            \"minLength\": 1,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"Msg Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"app_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"description\": \"The application's ID or UID\",\n                            \"example\": \"app_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"maxLength\": 256,\n                            \"minLength\": 1,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"App Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"The request's idempotency key\",\n                        \"in\": \"header\",\n                        \"name\": \"idempotency-key\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"description\": \"The request's idempotency key\",\n                            \"title\": \"Idempotency-Key\",\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/MessageOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Successful Response\"\n                    },\n                    \"401\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Not Found\"\n                    },\n                    \"409\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Conflict\"\n                    },\n                    \"422\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        },\n                        \"description\": \"Validation Error\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"HTTPBearer\": []\n                    }\n                ],\n                \"summary\": \"Get Message\",\n                \"tags\": [\n                    \"Message\"\n                ],\n                \"x-codeSamples\": [\n                    {\n                        \"label\": \"JavaScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"const messageOut = await svix.message.get('app_id', 'msg_id');\"\n                    },\n                    {\n                        \"label\": \"TypeScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"const messageOut = await svix.message.get('app_id', 'msg_id');\"\n                    },\n                    {\n                        \"label\": \"Python\",\n                        \"lang\": \"Python\",\n                        \"source\": \"message_out = svix.message.get('app_id', 'msg_id')\"\n                    },\n                    {\n                        \"label\": \"Go\",\n                        \"lang\": \"Go\",\n                        \"source\": \"messageOut, err := svixClient.Message.Get(\\\"app_id\\\", \\\"msg_id\\\")\"\n                    },\n                    {\n                        \"label\": \"Kotlin\",\n                        \"lang\": \"Kotlin\",\n                        \"source\": \"val messageOut = svix.message.get('app_id', 'msg_id')\"\n                    },\n                    {\n                        \"label\": \"Java\",\n                        \"lang\": \"Java\",\n                        \"source\": \"MessageOut messageOut = svix.getMessage().get('app_id', 'msg_id')\"\n                    },\n                    {\n                        \"label\": \"Ruby\",\n                        \"lang\": \"Ruby\",\n                        \"source\": \"message_out = svix.message.get('app_id', 'msg_id')\"\n                    },\n                    {\n                        \"label\": \"CLI\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"svix message get 'app_id' 'msg_id'\"\n                    },\n                    {\n                        \"label\": \"cURL\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"curl -X 'GET' \\\\\\n  'https://api.svix.com/api/v1/app/{app_id}/msg/{msg_id}/' \\\\\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\\\\n  -H 'accept: application/json' \\\\\\n  -H 'Content-Type: application/json'\"\n                    }\n                ]\n            }\n        },\n        \"/api/v1/app/{app_id}/msg/{msg_id}/attempt/\": {\n            \"get\": {\n                \"description\": \"`msg_id`: Use a message id or a message `eventId`\",\n                \"operationId\": \"list_attempts_api_v1_app__app_id__msg__msg_id__attempt__get\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"app_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"description\": \"The application's ID or UID\",\n                            \"example\": \"app_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"maxLength\": 256,\n                            \"minLength\": 1,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"App Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"msg_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"description\": \"The message's ID or eventID\",\n                            \"example\": \"msg_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"maxLength\": 256,\n                            \"minLength\": 1,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"Msg Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"iterator\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"example\": \"atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"title\": \"Iterator\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"limit\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"default\": 50,\n                            \"maximum\": 250.0,\n                            \"title\": \"Limit\",\n                            \"type\": \"integer\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"status\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/MessageStatus\"\n                        }\n                    },\n                    {\n                        \"description\": \"The request's idempotency key\",\n                        \"in\": \"header\",\n                        \"name\": \"idempotency-key\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"description\": \"The request's idempotency key\",\n                            \"title\": \"Idempotency-Key\",\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ListResponse_MessageAttemptOut_\"\n                                }\n                            }\n                        },\n                        \"description\": \"Successful Response\"\n                    },\n                    \"401\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Not Found\"\n                    },\n                    \"409\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Conflict\"\n                    },\n                    \"422\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        },\n                        \"description\": \"Validation Error\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"HTTPBearer\": []\n                    }\n                ],\n                \"summary\": \"List Attempts\",\n                \"tags\": [\n                    \"Message Attempt\"\n                ],\n                \"x-codeSamples\": [\n                    {\n                        \"label\": \"JavaScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"const listResponseMessageAttemptOut = await svix.messageAttempt.list('app_id', 'msg_id');\"\n                    },\n                    {\n                        \"label\": \"TypeScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"const listResponseMessageAttemptOut = await svix.messageAttempt.list('app_id', 'msg_id');\"\n                    },\n                    {\n                        \"label\": \"Python\",\n                        \"lang\": \"Python\",\n                        \"source\": \"list_response_message_attempt_out = svix.message_attempt.list('app_id', 'msg_id')\"\n                    },\n                    {\n                        \"label\": \"Go\",\n                        \"lang\": \"Go\",\n                        \"source\": \"listResponseMessageAttemptOut, err := svixClient.MessageAttempt.List(\\\"app_id\\\", \\\"msg_id\\\", nil)\"\n                    },\n                    {\n                        \"label\": \"Kotlin\",\n                        \"lang\": \"Kotlin\",\n                        \"source\": \"val listResponseMessageAttemptOut = svix.messageAttempt.list('app_id', 'msg_id', FetchOptionsMessageAttempt())\"\n                    },\n                    {\n                        \"label\": \"Java\",\n                        \"lang\": \"Java\",\n                        \"source\": \"ListResponseMessageAttemptOut listResponseMessageAttemptOut = svix.getMessageAttempt().list('app_id', 'msg_id', new FetchOptionsMessageAttempt())\"\n                    },\n                    {\n                        \"label\": \"Ruby\",\n                        \"lang\": \"Ruby\",\n                        \"source\": \"list_response_message_attempt_out = svix.message_attempt.list('app_id', 'msg_id')\"\n                    },\n                    {\n                        \"label\": \"CLI\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"svix message-attempt list 'app_id' 'msg_id'\"\n                    },\n                    {\n                        \"label\": \"cURL\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"curl -X 'GET' \\\\\\n  'https://api.svix.com/api/v1/app/{app_id}/msg/{msg_id}/attempt/' \\\\\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\\\\n  -H 'accept: application/json' \\\\\\n  -H 'Content-Type: application/json'\"\n                    }\n                ]\n            }\n        },\n        \"/api/v1/app/{app_id}/msg/{msg_id}/attempt/{attempt_id}/\": {\n            \"get\": {\n                \"description\": \"`msg_id`: Use a message id or a message `eventId`\",\n                \"operationId\": \"get_attempt_api_v1_app__app_id__msg__msg_id__attempt__attempt_id___get\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"attempt_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"example\": \"atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"title\": \"Attempt Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"msg_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"description\": \"The message's ID or eventID\",\n                            \"example\": \"msg_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"maxLength\": 256,\n                            \"minLength\": 1,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"Msg Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"app_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"description\": \"The application's ID or UID\",\n                            \"example\": \"app_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"maxLength\": 256,\n                            \"minLength\": 1,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"App Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"The request's idempotency key\",\n                        \"in\": \"header\",\n                        \"name\": \"idempotency-key\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"description\": \"The request's idempotency key\",\n                            \"title\": \"Idempotency-Key\",\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/MessageAttemptOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Successful Response\"\n                    },\n                    \"401\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Not Found\"\n                    },\n                    \"409\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Conflict\"\n                    },\n                    \"422\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        },\n                        \"description\": \"Validation Error\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"HTTPBearer\": []\n                    }\n                ],\n                \"summary\": \"Get Attempt\",\n                \"tags\": [\n                    \"Message Attempt\"\n                ],\n                \"x-codeSamples\": [\n                    {\n                        \"label\": \"JavaScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"const messageAttemptOut = await svix.messageAttempt.get('app_id', 'msg_id', 'attempt_id');\"\n                    },\n                    {\n                        \"label\": \"TypeScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"const messageAttemptOut = await svix.messageAttempt.get('app_id', 'msg_id', 'attempt_id');\"\n                    },\n                    {\n                        \"label\": \"Python\",\n                        \"lang\": \"Python\",\n                        \"source\": \"message_attempt_out = svix.message_attempt.get('app_id', 'msg_id', 'attempt_id')\"\n                    },\n                    {\n                        \"label\": \"Go\",\n                        \"lang\": \"Go\",\n                        \"source\": \"messageAttemptOut, err := svixClient.MessageAttempt.Get(\\\"app_id\\\", \\\"msg_id\\\", \\\"attempt_id\\\")\"\n                    },\n                    {\n                        \"label\": \"Kotlin\",\n                        \"lang\": \"Kotlin\",\n                        \"source\": \"val messageAttemptOut = svix.messageAttempt.get('app_id', 'msg_id', 'attempt_id')\"\n                    },\n                    {\n                        \"label\": \"Java\",\n                        \"lang\": \"Java\",\n                        \"source\": \"MessageAttemptOut messageAttemptOut = svix.getMessageAttempt().get('app_id', 'msg_id', 'attempt_id')\"\n                    },\n                    {\n                        \"label\": \"Ruby\",\n                        \"lang\": \"Ruby\",\n                        \"source\": \"message_attempt_out = svix.message_attempt.get('app_id', 'msg_id', 'attempt_id')\"\n                    },\n                    {\n                        \"label\": \"CLI\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"svix message-attempt get 'app_id' 'msg_id' 'attempt_id'\"\n                    },\n                    {\n                        \"label\": \"cURL\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"curl -X 'GET' \\\\\\n  'https://api.svix.com/api/v1/app/{app_id}/msg/{msg_id}/attempt/{attempt_id}/' \\\\\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\\\\n  -H 'accept: application/json' \\\\\\n  -H 'Content-Type: application/json'\"\n                    }\n                ]\n            }\n        },\n        \"/api/v1/app/{app_id}/msg/{msg_id}/endpoint/\": {\n            \"get\": {\n                \"description\": \"`msg_id`: Use a message id or a message `eventId`\",\n                \"operationId\": \"list_attempted_destinations_api_v1_app__app_id__msg__msg_id__endpoint__get\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"msg_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"description\": \"The message's ID or eventID\",\n                            \"example\": \"msg_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"maxLength\": 256,\n                            \"minLength\": 1,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"Msg Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"app_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"description\": \"The application's ID or UID\",\n                            \"example\": \"app_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"maxLength\": 256,\n                            \"minLength\": 1,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"App Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"iterator\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"example\": \"msgep_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"title\": \"Iterator\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"limit\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"default\": 50,\n                            \"maximum\": 250.0,\n                            \"title\": \"Limit\",\n                            \"type\": \"integer\"\n                        }\n                    },\n                    {\n                        \"description\": \"The request's idempotency key\",\n                        \"in\": \"header\",\n                        \"name\": \"idempotency-key\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"description\": \"The request's idempotency key\",\n                            \"title\": \"Idempotency-Key\",\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ListResponse_MessageEndpointOut_\"\n                                }\n                            }\n                        },\n                        \"description\": \"Successful Response\"\n                    },\n                    \"401\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Not Found\"\n                    },\n                    \"409\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Conflict\"\n                    },\n                    \"422\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        },\n                        \"description\": \"Validation Error\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"HTTPBearer\": []\n                    }\n                ],\n                \"summary\": \"List Attempted Destinations\",\n                \"tags\": [\n                    \"Message Attempt\"\n                ],\n                \"x-codeSamples\": [\n                    {\n                        \"label\": \"cURL\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"curl -X 'GET' \\\\\\n  'https://api.svix.com/api/v1/app/{app_id}/msg/{msg_id}/endpoint/' \\\\\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\\\\n  -H 'accept: application/json' \\\\\\n  -H 'Content-Type: application/json'\"\n                    }\n                ]\n            }\n        },\n        \"/api/v1/app/{app_id}/msg/{msg_id}/endpoint/{endpoint_id}/attempt/\": {\n            \"get\": {\n                \"description\": \"List the message attempts for a particular endpoint.\\n\\nReturning the endpoint.\\n\\nThe `before` parameter lets you filter all items created before a certain date and is ignored if an iterator is passed.\",\n                \"operationId\": \"list_attempts_for_endpoint_api_v1_app__app_id__msg__msg_id__endpoint__endpoint_id__attempt__get\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"msg_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"description\": \"The message's ID or eventID\",\n                            \"example\": \"msg_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"maxLength\": 256,\n                            \"minLength\": 1,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"Msg Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"app_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"description\": \"The application's ID or UID\",\n                            \"example\": \"app_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"maxLength\": 256,\n                            \"minLength\": 1,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"App Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"endpoint_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"description\": \"The endpoint's ID or UID\",\n                            \"example\": \"ep_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"maxLength\": 256,\n                            \"minLength\": 1,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"Endpoint Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"iterator\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"example\": \"atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"title\": \"Iterator\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"limit\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"default\": 50,\n                            \"maximum\": 250.0,\n                            \"title\": \"Limit\",\n                            \"type\": \"integer\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"event_types\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"items\": {\n                                \"example\": \"user.signup\",\n                                \"maxLength\": 256,\n                                \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                                \"type\": \"string\"\n                            },\n                            \"title\": \"Event Types\",\n                            \"type\": \"array\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"channel\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"example\": \"project_1337\",\n                            \"maxLength\": 128,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"Channel\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"status\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/MessageStatus\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"before\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"format\": \"date-time\",\n                            \"title\": \"Before\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"The request's idempotency key\",\n                        \"in\": \"header\",\n                        \"name\": \"idempotency-key\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"description\": \"The request's idempotency key\",\n                            \"title\": \"Idempotency-Key\",\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ListResponse_MessageAttemptEndpointOut_\"\n                                }\n                            }\n                        },\n                        \"description\": \"Successful Response\"\n                    },\n                    \"401\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Not Found\"\n                    },\n                    \"409\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Conflict\"\n                    },\n                    \"422\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        },\n                        \"description\": \"Validation Error\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"HTTPBearer\": []\n                    }\n                ],\n                \"summary\": \"List Attempts For Endpoint\",\n                \"tags\": [\n                    \"Message Attempt\"\n                ],\n                \"x-codeSamples\": [\n                    {\n                        \"label\": \"cURL\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"curl -X 'GET' \\\\\\n  'https://api.svix.com/api/v1/app/{app_id}/msg/{msg_id}/endpoint/{endpoint_id}/attempt/' \\\\\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\\\\n  -H 'accept: application/json' \\\\\\n  -H 'Content-Type: application/json'\"\n                    }\n                ]\n            }\n        },\n        \"/api/v1/app/{app_id}/msg/{msg_id}/endpoint/{endpoint_id}/resend/\": {\n            \"post\": {\n                \"description\": \"Resend a message to the specified endpoint.\",\n                \"operationId\": \"resend_webhook_api_v1_app__app_id__msg__msg_id__endpoint__endpoint_id__resend__post\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"endpoint_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"description\": \"The endpoint's ID or UID\",\n                            \"example\": \"ep_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"maxLength\": 256,\n                            \"minLength\": 1,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"Endpoint Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"msg_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"description\": \"The message's ID or eventID\",\n                            \"example\": \"msg_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"maxLength\": 256,\n                            \"minLength\": 1,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"Msg Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"app_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"description\": \"The application's ID or UID\",\n                            \"example\": \"app_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"maxLength\": 256,\n                            \"minLength\": 1,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"App Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"The request's idempotency key\",\n                        \"in\": \"header\",\n                        \"name\": \"idempotency-key\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"description\": \"The request's idempotency key\",\n                            \"title\": \"Idempotency-Key\",\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"202\": {\n                        \"description\": \"Successful Response\"\n                    },\n                    \"401\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Not Found\"\n                    },\n                    \"409\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Conflict\"\n                    },\n                    \"422\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        },\n                        \"description\": \"Validation Error\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"HTTPBearer\": []\n                    }\n                ],\n                \"summary\": \"Resend Webhook\",\n                \"tags\": [\n                    \"Message Attempt\"\n                ],\n                \"x-codeSamples\": [\n                    {\n                        \"label\": \"JavaScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"await svix.messageAttempt.resend('app_id', 'msg_id', 'endpoint_id');\"\n                    },\n                    {\n                        \"label\": \"TypeScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"await svix.messageAttempt.resend('app_id', 'msg_id', 'endpoint_id');\"\n                    },\n                    {\n                        \"label\": \"Python\",\n                        \"lang\": \"Python\",\n                        \"source\": \"svix.message_attempt.resend('app_id', 'msg_id', 'endpoint_id')\"\n                    },\n                    {\n                        \"label\": \"Go\",\n                        \"lang\": \"Go\",\n                        \"source\": \"err := svixClient.MessageAttempt.Resend(\\\"app_id\\\", \\\"msg_id\\\", \\\"endpoint_id\\\")\"\n                    },\n                    {\n                        \"label\": \"Kotlin\",\n                        \"lang\": \"Kotlin\",\n                        \"source\": \"svix.messageAttempt.resend('app_id', 'msg_id', 'endpoint_id')\"\n                    },\n                    {\n                        \"label\": \"Java\",\n                        \"lang\": \"Java\",\n                        \"source\": \"svix.getMessageAttempt().resend('app_id', 'msg_id', 'endpoint_id')\"\n                    },\n                    {\n                        \"label\": \"Ruby\",\n                        \"lang\": \"Ruby\",\n                        \"source\": \"svix.message_attempt.resend('app_id', 'msg_id', 'endpoint_id')\"\n                    },\n                    {\n                        \"label\": \"CLI\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"svix message-attempt resend 'app_id' 'msg_id' 'endpoint_id'\"\n                    },\n                    {\n                        \"label\": \"cURL\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"curl -X 'POST' \\\\\\n  'https://api.svix.com/api/v1/app/{app_id}/msg/{msg_id}/endpoint/{endpoint_id}/resend/' \\\\\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\\\\n  -H 'accept: application/json' \\\\\\n  -H 'Content-Type: application/json'\"\n                    }\n                ]\n            }\n        },\n        \"/api/v1/auth/dashboard-access/{app_id}/\": {\n            \"post\": {\n                \"description\": \"Use this function to get magic links (and authentication codes) for connecting your users to the management UIs.\",\n                \"operationId\": \"get_dashboard_access_api_v1_auth_dashboard_access__app_id___post\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"app_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"description\": \"The application's ID or UID\",\n                            \"example\": \"app_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"maxLength\": 256,\n                            \"minLength\": 1,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"App Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"The request's idempotency key\",\n                        \"in\": \"header\",\n                        \"name\": \"idempotency-key\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"description\": \"The request's idempotency key\",\n                            \"title\": \"Idempotency-Key\",\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/DashboardAccessOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Successful Response\"\n                    },\n                    \"401\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Not Found\"\n                    },\n                    \"409\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Conflict\"\n                    },\n                    \"422\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        },\n                        \"description\": \"Validation Error\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"HTTPBearer\": []\n                    }\n                ],\n                \"summary\": \"Get Dashboard Access\",\n                \"tags\": [\n                    \"Authentication\"\n                ],\n                \"x-codeSamples\": [\n                    {\n                        \"label\": \"JavaScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"const dashboardAccessOut = await svix.authentication.dashboardAccess('app_id');\"\n                    },\n                    {\n                        \"label\": \"TypeScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"const dashboardAccessOut = await svix.authentication.dashboardAccess('app_id');\"\n                    },\n                    {\n                        \"label\": \"Python\",\n                        \"lang\": \"Python\",\n                        \"source\": \"dashboard_access_out = svix.authentication.dashboard_access('app_id')\"\n                    },\n                    {\n                        \"label\": \"Go\",\n                        \"lang\": \"Go\",\n                        \"source\": \"dashboardAccessOut, err := svixClient.Authentication.DashboardAccess(\\\"app_id\\\")\"\n                    },\n                    {\n                        \"label\": \"Kotlin\",\n                        \"lang\": \"Kotlin\",\n                        \"source\": \"val dashboardAccessOut = svix.authentication.dashboardAccess('app_id')\"\n                    },\n                    {\n                        \"label\": \"Java\",\n                        \"lang\": \"Java\",\n                        \"source\": \"DashboardAccessOut dashboardAccessOut = svix.getAuthentication().dashboardAccess('app_id')\"\n                    },\n                    {\n                        \"label\": \"Ruby\",\n                        \"lang\": \"Ruby\",\n                        \"source\": \"dashboard_access_out = svix.authentication.dashboard_access('app_id')\"\n                    },\n                    {\n                        \"label\": \"CLI\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"svix authentication dashboard-access 'app_id'\"\n                    },\n                    {\n                        \"label\": \"cURL\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"curl -X 'POST' \\\\\\n  'https://api.svix.com/api/v1/auth/dashboard-access/{app_id}/' \\\\\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\\\\n  -H 'accept: application/json' \\\\\\n  -H 'Content-Type: application/json'\"\n                    }\n                ]\n            }\n        },\n        \"/api/v1/auth/logout/\": {\n            \"post\": {\n                \"description\": \"Logout an app token.\\n\\nTrying to log out other tokens will fail.\",\n                \"operationId\": \"logout_api_v1_auth_logout__post\",\n                \"parameters\": [\n                    {\n                        \"description\": \"The request's idempotency key\",\n                        \"in\": \"header\",\n                        \"name\": \"idempotency-key\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"description\": \"The request's idempotency key\",\n                            \"title\": \"Idempotency-Key\",\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"Successful Response\"\n                    },\n                    \"401\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Not Found\"\n                    },\n                    \"409\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Conflict\"\n                    },\n                    \"422\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        },\n                        \"description\": \"Validation Error\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"HTTPBearer\": []\n                    }\n                ],\n                \"summary\": \"Logout\",\n                \"tags\": [\n                    \"Authentication\"\n                ],\n                \"x-codeSamples\": [\n                    {\n                        \"label\": \"JavaScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"await svix.authentication.logout();\"\n                    },\n                    {\n                        \"label\": \"TypeScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"await svix.authentication.logout();\"\n                    },\n                    {\n                        \"label\": \"Python\",\n                        \"lang\": \"Python\",\n                        \"source\": \"svix.authentication.logout()\"\n                    },\n                    {\n                        \"label\": \"Go\",\n                        \"lang\": \"Go\",\n                        \"source\": \"err := svixClient.Authentication.Logout()\"\n                    },\n                    {\n                        \"label\": \"Kotlin\",\n                        \"lang\": \"Kotlin\",\n                        \"source\": \"svix.authentication.logout()\"\n                    },\n                    {\n                        \"label\": \"Java\",\n                        \"lang\": \"Java\",\n                        \"source\": \"svix.getAuthentication().logout()\"\n                    },\n                    {\n                        \"label\": \"Ruby\",\n                        \"lang\": \"Ruby\",\n                        \"source\": \"svix.authentication.logout\"\n                    },\n                    {\n                        \"label\": \"CLI\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"svix authentication logout \"\n                    },\n                    {\n                        \"label\": \"cURL\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"curl -X 'POST' \\\\\\n  'https://api.svix.com/api/v1/auth/logout/' \\\\\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\\\\n  -H 'accept: application/json' \\\\\\n  -H 'Content-Type: application/json'\"\n                    }\n                ]\n            }\n        },\n        \"/api/v1/environment/export/\": {\n            \"post\": {\n                \"description\": \"Download a JSON file containing all org-settings and event types\",\n                \"operationId\": \"export_environment_configuration_api_v1_environment_export__post\",\n                \"parameters\": [\n                    {\n                        \"description\": \"The request's idempotency key\",\n                        \"in\": \"header\",\n                        \"name\": \"idempotency-key\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"description\": \"The request's idempotency key\",\n                            \"title\": \"Idempotency-Key\",\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/ExportEnvironmentIn\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/EnvironmentOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Successful Response\"\n                    },\n                    \"401\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Not Found\"\n                    },\n                    \"409\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Conflict\"\n                    },\n                    \"422\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        },\n                        \"description\": \"Validation Error\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"HTTPBearer\": []\n                    }\n                ],\n                \"summary\": \"Export Environment Configuration\",\n                \"tags\": [\n                    \"Environment\"\n                ],\n                \"x-codeSamples\": [\n                    {\n                        \"label\": \"cURL\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"curl -X 'POST' \\\\\\n  'https://api.svix.com/api/v1/environment/export/' \\\\\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\\\\n  -H 'accept: application/json' \\\\\\n  -H 'Content-Type: application/json' \\\\\\n  -d '{}'\"\n                    }\n                ]\n            }\n        },\n        \"/api/v1/environment/import/\": {\n            \"post\": {\n                \"description\": \"Import a configuration into the active organization.\\nIt doesn't delete anything, only adds/updates what was passed to it.\",\n                \"operationId\": \"import_environment_configuration_api_v1_environment_import__post\",\n                \"parameters\": [\n                    {\n                        \"description\": \"The request's idempotency key\",\n                        \"in\": \"header\",\n                        \"name\": \"idempotency-key\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"description\": \"The request's idempotency key\",\n                            \"title\": \"Idempotency-Key\",\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/EnvironmentIn\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"Successful Response\"\n                    },\n                    \"401\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Not Found\"\n                    },\n                    \"409\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Conflict\"\n                    },\n                    \"422\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        },\n                        \"description\": \"Validation Error\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"HTTPBearer\": []\n                    }\n                ],\n                \"summary\": \"Import Environment Configuration\",\n                \"tags\": [\n                    \"Environment\"\n                ],\n                \"x-codeSamples\": [\n                    {\n                        \"label\": \"cURL\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"curl -X 'POST' \\\\\\n  'https://api.svix.com/api/v1/environment/import/' \\\\\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\\\\n  -H 'accept: application/json' \\\\\\n  -H 'Content-Type: application/json' \\\\\\n  -d '{\\n    \\\"version\\\": null,\\n    \\\"createdAt\\\": \\\"2019-08-24T14:15:22Z\\\",\\n    \\\"eventTypes\\\": null,\\n    \\\"settings\\\": null\\n}'\"\n                    }\n                ]\n            }\n        },\n        \"/api/v1/environment/settings/\": {\n            \"get\": {\n                \"description\": \"Get the environment's settings\",\n                \"operationId\": \"get_org_settings_api_v1_environment_settings__get\",\n                \"parameters\": [\n                    {\n                        \"description\": \"The request's idempotency key\",\n                        \"in\": \"header\",\n                        \"name\": \"idempotency-key\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"description\": \"The request's idempotency key\",\n                            \"title\": \"Idempotency-Key\",\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/EnvironmentSettingsOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Successful Response\"\n                    },\n                    \"401\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Not Found\"\n                    },\n                    \"409\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Conflict\"\n                    },\n                    \"422\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        },\n                        \"description\": \"Validation Error\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"HTTPBearer\": []\n                    }\n                ],\n                \"summary\": \"Get Org Settings\",\n                \"tags\": [\n                    \"Environment-Settings\"\n                ],\n                \"x-codeSamples\": [\n                    {\n                        \"label\": \"cURL\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"curl -X 'GET' \\\\\\n  'https://api.svix.com/api/v1/environment/settings/' \\\\\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\\\\n  -H 'accept: application/json' \\\\\\n  -H 'Content-Type: application/json'\"\n                    }\n                ]\n            }\n        },\n        \"/api/v1/event-type/\": {\n            \"get\": {\n                \"description\": \"Return the list of event types.\",\n                \"operationId\": \"list_event_types_api_v1_event_type__get\",\n                \"parameters\": [\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"iterator\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"example\": \"user.signup\",\n                            \"maxLength\": 256,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"Iterator\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"limit\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"default\": 50,\n                            \"maximum\": 250.0,\n                            \"title\": \"Limit\",\n                            \"type\": \"integer\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"with_content\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"default\": false,\n                            \"title\": \"With Content\",\n                            \"type\": \"boolean\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"include_archived\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"default\": false,\n                            \"title\": \"Include Archived\",\n                            \"type\": \"boolean\"\n                        }\n                    },\n                    {\n                        \"description\": \"The request's idempotency key\",\n                        \"in\": \"header\",\n                        \"name\": \"idempotency-key\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"description\": \"The request's idempotency key\",\n                            \"title\": \"Idempotency-Key\",\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ListResponse_EventTypeOut_\"\n                                }\n                            }\n                        },\n                        \"description\": \"Successful Response\"\n                    },\n                    \"401\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Not Found\"\n                    },\n                    \"409\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Conflict\"\n                    },\n                    \"422\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        },\n                        \"description\": \"Validation Error\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"HTTPBearer\": []\n                    }\n                ],\n                \"summary\": \"List Event Types\",\n                \"tags\": [\n                    \"Event Type\"\n                ],\n                \"x-codeSamples\": [\n                    {\n                        \"label\": \"JavaScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"const listResponseEventTypeOut = await svix.eventType.list();\"\n                    },\n                    {\n                        \"label\": \"TypeScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"const listResponseEventTypeOut = await svix.eventType.list();\"\n                    },\n                    {\n                        \"label\": \"Python\",\n                        \"lang\": \"Python\",\n                        \"source\": \"list_response_event_type_out = svix.event_type.list()\"\n                    },\n                    {\n                        \"label\": \"Go\",\n                        \"lang\": \"Go\",\n                        \"source\": \"listResponseEventTypeOut, err := svixClient.EventType.List(nil)\"\n                    },\n                    {\n                        \"label\": \"Kotlin\",\n                        \"lang\": \"Kotlin\",\n                        \"source\": \"val listResponseEventTypeOut = svix.eventType.list(FetchOptions())\"\n                    },\n                    {\n                        \"label\": \"Java\",\n                        \"lang\": \"Java\",\n                        \"source\": \"ListResponseEventTypeOut listResponseEventTypeOut = svix.getEventType().list(new FetchOptions())\"\n                    },\n                    {\n                        \"label\": \"Ruby\",\n                        \"lang\": \"Ruby\",\n                        \"source\": \"list_response_event_type_out = svix.event_type.list\"\n                    },\n                    {\n                        \"label\": \"CLI\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"svix event-type list \"\n                    },\n                    {\n                        \"label\": \"cURL\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"curl -X 'GET' \\\\\\n  'https://api.svix.com/api/v1/event-type/' \\\\\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\\\\n  -H 'accept: application/json' \\\\\\n  -H 'Content-Type: application/json'\"\n                    }\n                ]\n            },\n            \"post\": {\n                \"description\": \"Create new or unarchive existing event type.\\n\\nUnarchiving an event type will allow endpoints to filter on it and messages to be sent with it.\\nEndpoints filtering on the event type before archival will continue to filter on it.\\nThis operation does not preserve the description and schemas.\",\n                \"operationId\": \"create_event_type_api_v1_event_type__post\",\n                \"parameters\": [\n                    {\n                        \"description\": \"The request's idempotency key\",\n                        \"in\": \"header\",\n                        \"name\": \"idempotency-key\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"description\": \"The request's idempotency key\",\n                            \"title\": \"Idempotency-Key\",\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/EventTypeIn\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"201\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/EventTypeOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Successful Response\"\n                    },\n                    \"401\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Not Found\"\n                    },\n                    \"409\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Conflict\"\n                    },\n                    \"422\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        },\n                        \"description\": \"Validation Error\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"HTTPBearer\": []\n                    }\n                ],\n                \"summary\": \"Create Event Type\",\n                \"tags\": [\n                    \"Event Type\"\n                ],\n                \"x-codeSamples\": [\n                    {\n                        \"label\": \"JavaScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"const eventTypeOut = await svix.eventType.create({\\n    description: \\\"A user has signed up\\\",\\n    schemas: {\\n        \\\"1\\\": {\\n                \\\"title\\\": \\\"Invoice Paid Event\\\",\\n                \\\"description\\\": \\\"An invoice was paid by a user\\\",\\n                \\\"type\\\": \\\"object\\\",\\n                \\\"properties\\\": {\\n                        \\\"invoiceId\\\": {\\n                                \\\"description\\\": \\\"The invoice id\\\",\\n                                \\\"type\\\": \\\"string\\\"\\n                        },\\n                        \\\"userId\\\": {\\n                                \\\"description\\\": \\\"The user id\\\",\\n                                \\\"type\\\": \\\"string\\\"\\n                        }\\n                },\\n                \\\"required\\\": [\\n                        \\\"invoiceId\\\",\\n                        \\\"userId\\\"\\n                ]\\n        }\\n    },\\n    archived: false,\\n    name: \\\"user.signup\\\"\\n});\"\n                    },\n                    {\n                        \"label\": \"TypeScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"const eventTypeOut = await svix.eventType.create({\\n    description: \\\"A user has signed up\\\",\\n    schemas: {\\n        \\\"1\\\": {\\n                \\\"title\\\": \\\"Invoice Paid Event\\\",\\n                \\\"description\\\": \\\"An invoice was paid by a user\\\",\\n                \\\"type\\\": \\\"object\\\",\\n                \\\"properties\\\": {\\n                        \\\"invoiceId\\\": {\\n                                \\\"description\\\": \\\"The invoice id\\\",\\n                                \\\"type\\\": \\\"string\\\"\\n                        },\\n                        \\\"userId\\\": {\\n                                \\\"description\\\": \\\"The user id\\\",\\n                                \\\"type\\\": \\\"string\\\"\\n                        }\\n                },\\n                \\\"required\\\": [\\n                        \\\"invoiceId\\\",\\n                        \\\"userId\\\"\\n                ]\\n        }\\n    },\\n    archived: false,\\n    name: \\\"user.signup\\\"\\n});\"\n                    },\n                    {\n                        \"label\": \"Python\",\n                        \"lang\": \"Python\",\n                        \"source\": \"event_type_out = svix.event_type.create(EventTypeIn(\\n    description=\\\"A user has signed up\\\",\\n    schemas={'1': {'title': 'Invoice Paid Event', 'description': 'An invoice was paid by a user', 'type': 'object', 'properties': {'invoiceId': {'description': 'The invoice id', 'type': 'string'}, 'userId': {'description': 'The user id', 'type': 'string'}}, 'required': ['invoiceId', 'userId']}},\\n    archived=False,\\n    name=\\\"user.signup\\\"\\n))\"\n                    },\n                    {\n                        \"label\": \"Go\",\n                        \"lang\": \"Go\",\n                        \"source\": \"eventTypeOut, err := svixClient.EventType.Create(\u0026svix.EventTypeIn{\\n    Description: \\\"A user has signed up\\\",\\n    Schemas: map[string]interface{}{\\n        \\\"1\\\": {\\n                \\\"title\\\": \\\"Invoice Paid Event\\\",\\n                \\\"description\\\": \\\"An invoice was paid by a user\\\",\\n                \\\"type\\\": \\\"object\\\",\\n                \\\"properties\\\": {\\n                        \\\"invoiceId\\\": {\\n                                \\\"description\\\": \\\"The invoice id\\\",\\n                                \\\"type\\\": \\\"string\\\"\\n                        },\\n                        \\\"userId\\\": {\\n                                \\\"description\\\": \\\"The user id\\\",\\n                                \\\"type\\\": \\\"string\\\"\\n                        }\\n                },\\n                \\\"required\\\": [\\n                        \\\"invoiceId\\\",\\n                        \\\"userId\\\"\\n                ]\\n        }\\n    },\\n    Archived: False,\\n    Name: \\\"user.signup\\\"\\n})\"\n                    },\n                    {\n                        \"label\": \"Kotlin\",\n                        \"lang\": \"Kotlin\",\n                        \"source\": \"val eventTypeOut = svix.eventType.create(EventTypeIn()\\n    .description(\\\"A user has signed up\\\"),\\n    .schemas(\\\"\\\"\\\"{\\n        \\\"1\\\": {\\n                \\\"title\\\": \\\"Invoice Paid Event\\\",\\n                \\\"description\\\": \\\"An invoice was paid by a user\\\",\\n                \\\"type\\\": \\\"object\\\",\\n                \\\"properties\\\": {\\n                        \\\"invoiceId\\\": {\\n                                \\\"description\\\": \\\"The invoice id\\\",\\n                                \\\"type\\\": \\\"string\\\"\\n                        },\\n                        \\\"userId\\\": {\\n                                \\\"description\\\": \\\"The user id\\\",\\n                                \\\"type\\\": \\\"string\\\"\\n                        }\\n                },\\n                \\\"required\\\": [\\n                        \\\"invoiceId\\\",\\n                        \\\"userId\\\"\\n                ]\\n        }\\n    }\\\"\\\"\\\"),\\n    .archived(False),\\n    .name(\\\"user.signup\\\")\\n)\"\n                    },\n                    {\n                        \"label\": \"Java\",\n                        \"lang\": \"Java\",\n                        \"source\": \"EventTypeOut eventTypeOut = svix.getEventType().create(new EventTypeIn()\\n    .description(\\\"A user has signed up\\\"),\\n    .schemas(\\\"{\\\" +\\n        \\\"\\\\\\\"1\\\\\\\": {\\\" +\\n                \\\"\\\\\\\"title\\\\\\\": \\\\\\\"Invoice Paid Event\\\\\\\",\\\" +\\n                \\\"\\\\\\\"description\\\\\\\": \\\\\\\"An invoice was paid by a user\\\\\\\",\\\" +\\n                \\\"\\\\\\\"type\\\\\\\": \\\\\\\"object\\\\\\\",\\\" +\\n                \\\"\\\\\\\"properties\\\\\\\": {\\\" +\\n                        \\\"\\\\\\\"invoiceId\\\\\\\": {\\\" +\\n                                \\\"\\\\\\\"description\\\\\\\": \\\\\\\"The invoice id\\\\\\\",\\\" +\\n                                \\\"\\\\\\\"type\\\\\\\": \\\\\\\"string\\\\\\\"\\\" +\\n                        \\\"},\\\" +\\n                        \\\"\\\\\\\"userId\\\\\\\": {\\\" +\\n                                \\\"\\\\\\\"description\\\\\\\": \\\\\\\"The user id\\\\\\\",\\\" +\\n                                \\\"\\\\\\\"type\\\\\\\": \\\\\\\"string\\\\\\\"\\\" +\\n                        \\\"}\\\" +\\n                \\\"},\\\" +\\n                \\\"\\\\\\\"required\\\\\\\": [\\\" +\\n                        \\\"\\\\\\\"invoiceId\\\\\\\",\\\" +\\n                        \\\"\\\\\\\"userId\\\\\\\"\\\" +\\n                \\\"]\\\" +\\n        \\\"}\\\" +\\n    \\\"}\\\"),\\n    .archived(False),\\n    .name(\\\"user.signup\\\")\\n)\"\n                    },\n                    {\n                        \"label\": \"Ruby\",\n                        \"lang\": \"Ruby\",\n                        \"source\": \"event_type_out = svix.event_type.create(Svix::EventTypeIn.new({\\n    \\\"description\\\": \\\"A user has signed up\\\",\\n    \\\"schemas\\\": {\\n        \\\"1\\\": {\\n            \\\"title\\\": \\\"Invoice Paid Event\\\",\\n            \\\"description\\\": \\\"An invoice was paid by a user\\\",\\n            \\\"type\\\": \\\"object\\\",\\n            \\\"properties\\\": {\\n                \\\"invoiceId\\\": {\\n                    \\\"description\\\": \\\"The invoice id\\\",\\n                    \\\"type\\\": \\\"string\\\"\\n                },\\n                \\\"userId\\\": {\\n                    \\\"description\\\": \\\"The user id\\\",\\n                    \\\"type\\\": \\\"string\\\"\\n                }\\n            },\\n            \\\"required\\\": [\\n                \\\"invoiceId\\\",\\n                \\\"userId\\\"\\n            ]\\n        }\\n    },\\n    \\\"archived\\\": false,\\n    \\\"name\\\": \\\"user.signup\\\"\\n}))\"\n                    },\n                    {\n                        \"label\": \"CLI\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"svix event-type create '{\\n    \\\"description\\\": \\\"A user has signed up\\\",\\n    \\\"schemas\\\": {\\n        \\\"1\\\": {\\n            \\\"title\\\": \\\"Invoice Paid Event\\\",\\n            \\\"description\\\": \\\"An invoice was paid by a user\\\",\\n            \\\"type\\\": \\\"object\\\",\\n            \\\"properties\\\": {\\n                \\\"invoiceId\\\": {\\n                    \\\"description\\\": \\\"The invoice id\\\",\\n                    \\\"type\\\": \\\"string\\\"\\n                },\\n                \\\"userId\\\": {\\n                    \\\"description\\\": \\\"The user id\\\",\\n                    \\\"type\\\": \\\"string\\\"\\n                }\\n            },\\n            \\\"required\\\": [\\n                \\\"invoiceId\\\",\\n                \\\"userId\\\"\\n            ]\\n        }\\n    },\\n    \\\"archived\\\": false,\\n    \\\"name\\\": \\\"user.signup\\\"\\n}'\"\n                    },\n                    {\n                        \"label\": \"cURL\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"curl -X 'POST' \\\\\\n  'https://api.svix.com/api/v1/event-type/' \\\\\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\\\\n  -H 'accept: application/json' \\\\\\n  -H 'Content-Type: application/json' \\\\\\n  -d '{\\n    \\\"description\\\": \\\"A user has signed up\\\",\\n    \\\"schemas\\\": {\\n        \\\"1\\\": {\\n            \\\"title\\\": \\\"Invoice Paid Event\\\",\\n            \\\"description\\\": \\\"An invoice was paid by a user\\\",\\n            \\\"type\\\": \\\"object\\\",\\n            \\\"properties\\\": {\\n                \\\"invoiceId\\\": {\\n                    \\\"description\\\": \\\"The invoice id\\\",\\n                    \\\"type\\\": \\\"string\\\"\\n                },\\n                \\\"userId\\\": {\\n                    \\\"description\\\": \\\"The user id\\\",\\n                    \\\"type\\\": \\\"string\\\"\\n                }\\n            },\\n            \\\"required\\\": [\\n                \\\"invoiceId\\\",\\n                \\\"userId\\\"\\n            ]\\n        }\\n    },\\n    \\\"archived\\\": false,\\n    \\\"name\\\": \\\"user.signup\\\"\\n}'\"\n                    }\n                ]\n            }\n        },\n        \"/api/v1/event-type/schema/generate-example/\": {\n            \"post\": {\n                \"description\": \"Generates a fake example from the given JSONSchema\",\n                \"operationId\": \"generate_schema_example_api_v1_event_type_schema_generate_example__post\",\n                \"parameters\": [\n                    {\n                        \"description\": \"The request's idempotency key\",\n                        \"in\": \"header\",\n                        \"name\": \"idempotency-key\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"description\": \"The request's idempotency key\",\n                            \"title\": \"Idempotency-Key\",\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/EventTypeSchemaIn\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/EventTypeExampleOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Successful Response\"\n                    },\n                    \"401\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Not Found\"\n                    },\n                    \"409\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Conflict\"\n                    },\n                    \"422\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        },\n                        \"description\": \"Validation Error\"\n                    }\n                },\n                \"summary\": \"Generate Schema Example\",\n                \"tags\": [\n                    \"Event Type\"\n                ],\n                \"x-codeSamples\": [\n                    {\n                        \"label\": \"JavaScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"const eventTypeExampleOut = await svix.eventType.generate({\\n    schema: {\\n        \\\"title\\\": \\\"Invoice Paid Event\\\",\\n        \\\"description\\\": \\\"An invoice was paid by a user\\\",\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"properties\\\": {\\n                \\\"invoiceId\\\": {\\n                        \\\"description\\\": \\\"The invoice id\\\",\\n                        \\\"type\\\": \\\"string\\\"\\n                },\\n                \\\"userId\\\": {\\n                        \\\"description\\\": \\\"The user id\\\",\\n                        \\\"type\\\": \\\"string\\\"\\n                }\\n        },\\n        \\\"required\\\": [\\n                \\\"invoiceId\\\",\\n                \\\"userId\\\"\\n        ]\\n    }\\n});\"\n                    },\n                    {\n                        \"label\": \"TypeScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"const eventTypeExampleOut = await svix.eventType.generate({\\n    schema: {\\n        \\\"title\\\": \\\"Invoice Paid Event\\\",\\n        \\\"description\\\": \\\"An invoice was paid by a user\\\",\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"properties\\\": {\\n                \\\"invoiceId\\\": {\\n                        \\\"description\\\": \\\"The invoice id\\\",\\n                        \\\"type\\\": \\\"string\\\"\\n                },\\n                \\\"userId\\\": {\\n                        \\\"description\\\": \\\"The user id\\\",\\n                        \\\"type\\\": \\\"string\\\"\\n                }\\n        },\\n        \\\"required\\\": [\\n                \\\"invoiceId\\\",\\n                \\\"userId\\\"\\n        ]\\n    }\\n});\"\n                    },\n                    {\n                        \"label\": \"Python\",\n                        \"lang\": \"Python\",\n                        \"source\": \"event_type_example_out = svix.event_type.generate(EventTypeSchemaIn(\\n    schema={'title': 'Invoice Paid Event', 'description': 'An invoice was paid by a user', 'type': 'object', 'properties': {'invoiceId': {'description': 'The invoice id', 'type': 'string'}, 'userId': {'description': 'The user id', 'type': 'string'}}, 'required': ['invoiceId', 'userId']}\\n))\"\n                    },\n                    {\n                        \"label\": \"Go\",\n                        \"lang\": \"Go\",\n                        \"source\": \"eventTypeExampleOut, err := svixClient.EventType.Generate(\u0026svix.EventTypeSchemaIn{\\n    Schema: map[string]interface{}{\\n        \\\"title\\\": \\\"Invoice Paid Event\\\",\\n        \\\"description\\\": \\\"An invoice was paid by a user\\\",\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"properties\\\": {\\n                \\\"invoiceId\\\": {\\n                        \\\"description\\\": \\\"The invoice id\\\",\\n                        \\\"type\\\": \\\"string\\\"\\n                },\\n                \\\"userId\\\": {\\n                        \\\"description\\\": \\\"The user id\\\",\\n                        \\\"type\\\": \\\"string\\\"\\n                }\\n        },\\n        \\\"required\\\": [\\n                \\\"invoiceId\\\",\\n                \\\"userId\\\"\\n        ]\\n    }\\n})\"\n                    },\n                    {\n                        \"label\": \"Kotlin\",\n                        \"lang\": \"Kotlin\",\n                        \"source\": \"val eventTypeExampleOut = svix.eventType.generate(EventTypeSchemaIn()\\n    .schema(\\\"\\\"\\\"{\\n        \\\"title\\\": \\\"Invoice Paid Event\\\",\\n        \\\"description\\\": \\\"An invoice was paid by a user\\\",\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"properties\\\": {\\n                \\\"invoiceId\\\": {\\n                        \\\"description\\\": \\\"The invoice id\\\",\\n                        \\\"type\\\": \\\"string\\\"\\n                },\\n                \\\"userId\\\": {\\n                        \\\"description\\\": \\\"The user id\\\",\\n                        \\\"type\\\": \\\"string\\\"\\n                }\\n        },\\n        \\\"required\\\": [\\n                \\\"invoiceId\\\",\\n                \\\"userId\\\"\\n        ]\\n    }\\\"\\\"\\\")\\n)\"\n                    },\n                    {\n                        \"label\": \"Java\",\n                        \"lang\": \"Java\",\n                        \"source\": \"EventTypeExampleOut eventTypeExampleOut = svix.getEventType().generate(new EventTypeSchemaIn()\\n    .schema(\\\"{\\\" +\\n        \\\"\\\\\\\"title\\\\\\\": \\\\\\\"Invoice Paid Event\\\\\\\",\\\" +\\n        \\\"\\\\\\\"description\\\\\\\": \\\\\\\"An invoice was paid by a user\\\\\\\",\\\" +\\n        \\\"\\\\\\\"type\\\\\\\": \\\\\\\"object\\\\\\\",\\\" +\\n        \\\"\\\\\\\"properties\\\\\\\": {\\\" +\\n                \\\"\\\\\\\"invoiceId\\\\\\\": {\\\" +\\n                        \\\"\\\\\\\"description\\\\\\\": \\\\\\\"The invoice id\\\\\\\",\\\" +\\n                        \\\"\\\\\\\"type\\\\\\\": \\\\\\\"string\\\\\\\"\\\" +\\n                \\\"},\\\" +\\n                \\\"\\\\\\\"userId\\\\\\\": {\\\" +\\n                        \\\"\\\\\\\"description\\\\\\\": \\\\\\\"The user id\\\\\\\",\\\" +\\n                        \\\"\\\\\\\"type\\\\\\\": \\\\\\\"string\\\\\\\"\\\" +\\n                \\\"}\\\" +\\n        \\\"},\\\" +\\n        \\\"\\\\\\\"required\\\\\\\": [\\\" +\\n                \\\"\\\\\\\"invoiceId\\\\\\\",\\\" +\\n                \\\"\\\\\\\"userId\\\\\\\"\\\" +\\n        \\\"]\\\" +\\n    \\\"}\\\")\\n)\"\n                    },\n                    {\n                        \"label\": \"Ruby\",\n                        \"lang\": \"Ruby\",\n                        \"source\": \"event_type_example_out = svix.event_type.generate(Svix::EventTypeSchemaIn.new({\\n    \\\"schema\\\": {\\n        \\\"title\\\": \\\"Invoice Paid Event\\\",\\n        \\\"description\\\": \\\"An invoice was paid by a user\\\",\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"properties\\\": {\\n            \\\"invoiceId\\\": {\\n                \\\"description\\\": \\\"The invoice id\\\",\\n                \\\"type\\\": \\\"string\\\"\\n            },\\n            \\\"userId\\\": {\\n                \\\"description\\\": \\\"The user id\\\",\\n                \\\"type\\\": \\\"string\\\"\\n            }\\n        },\\n        \\\"required\\\": [\\n            \\\"invoiceId\\\",\\n            \\\"userId\\\"\\n        ]\\n    }\\n}))\"\n                    },\n                    {\n                        \"label\": \"CLI\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"svix event-type generate '{\\n    \\\"schema\\\": {\\n        \\\"title\\\": \\\"Invoice Paid Event\\\",\\n        \\\"description\\\": \\\"An invoice was paid by a user\\\",\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"properties\\\": {\\n            \\\"invoiceId\\\": {\\n                \\\"description\\\": \\\"The invoice id\\\",\\n                \\\"type\\\": \\\"string\\\"\\n            },\\n            \\\"userId\\\": {\\n                \\\"description\\\": \\\"The user id\\\",\\n                \\\"type\\\": \\\"string\\\"\\n            }\\n        },\\n        \\\"required\\\": [\\n            \\\"invoiceId\\\",\\n            \\\"userId\\\"\\n        ]\\n    }\\n}'\"\n                    },\n                    {\n                        \"label\": \"cURL\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"curl -X 'POST' \\\\\\n  'https://api.svix.com/api/v1/event-type/schema/generate-example/' \\\\\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\\\\n  -H 'accept: application/json' \\\\\\n  -H 'Content-Type: application/json' \\\\\\n  -d '{\\n    \\\"schema\\\": {\\n        \\\"title\\\": \\\"Invoice Paid Event\\\",\\n        \\\"description\\\": \\\"An invoice was paid by a user\\\",\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"properties\\\": {\\n            \\\"invoiceId\\\": {\\n                \\\"description\\\": \\\"The invoice id\\\",\\n                \\\"type\\\": \\\"string\\\"\\n            },\\n            \\\"userId\\\": {\\n                \\\"description\\\": \\\"The user id\\\",\\n                \\\"type\\\": \\\"string\\\"\\n            }\\n        },\\n        \\\"required\\\": [\\n            \\\"invoiceId\\\",\\n            \\\"userId\\\"\\n        ]\\n    }\\n}'\"\n                    }\n                ]\n            }\n        },\n        \"/api/v1/event-type/{event_type_name}/\": {\n            \"delete\": {\n                \"description\": \"Archive an event type.\\n\\nEndpoints already configured to filter on an event type will continue to do so after archival.\\nHowever, new messages can not be sent with it and endpoints can not filter on it.\\nAn event type can be unarchived with the\\n[create operation](#operation/create_event_type_api_v1_event_type__post).\",\n                \"operationId\": \"delete_event_type_api_v1_event_type__event_type_name___delete\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"event_type_name\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"example\": \"user.signup\",\n                            \"maxLength\": 256,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"Event Type Name\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"The request's idempotency key\",\n                        \"in\": \"header\",\n                        \"name\": \"idempotency-key\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"description\": \"The request's idempotency key\",\n                            \"title\": \"Idempotency-Key\",\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"Successful Response\"\n                    },\n                    \"401\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Not Found\"\n                    },\n                    \"409\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Conflict\"\n                    },\n                    \"422\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        },\n                        \"description\": \"Validation Error\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"HTTPBearer\": []\n                    }\n                ],\n                \"summary\": \"Archive Event Type\",\n                \"tags\": [\n                    \"Event Type\"\n                ],\n                \"x-codeSamples\": [\n                    {\n                        \"label\": \"JavaScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"await svix.eventType.delete('event_type_name');\"\n                    },\n                    {\n                        \"label\": \"TypeScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"await svix.eventType.delete('event_type_name');\"\n                    },\n                    {\n                        \"label\": \"Python\",\n                        \"lang\": \"Python\",\n                        \"source\": \"svix.event_type.delete('event_type_name')\"\n                    },\n                    {\n                        \"label\": \"Go\",\n                        \"lang\": \"Go\",\n                        \"source\": \"err := svixClient.EventType.Delete(\\\"event_type_name\\\")\"\n                    },\n                    {\n                        \"label\": \"Kotlin\",\n                        \"lang\": \"Kotlin\",\n                        \"source\": \"svix.eventType.delete('event_type_name')\"\n                    },\n                    {\n                        \"label\": \"Java\",\n                        \"lang\": \"Java\",\n                        \"source\": \"svix.getEventType().delete('event_type_name')\"\n                    },\n                    {\n                        \"label\": \"Ruby\",\n                        \"lang\": \"Ruby\",\n                        \"source\": \"svix.event_type.delete('event_type_name')\"\n                    },\n                    {\n                        \"label\": \"CLI\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"svix event-type delete 'event_type_name'\"\n                    },\n                    {\n                        \"label\": \"cURL\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"curl -X 'DELETE' \\\\\\n  'https://api.svix.com/api/v1/event-type/{event_type_name}/' \\\\\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\\\\n  -H 'accept: application/json' \\\\\\n  -H 'Content-Type: application/json'\"\n                    }\n                ]\n            },\n            \"get\": {\n                \"description\": \"Get an event type.\",\n                \"operationId\": \"get_event_type_api_v1_event_type__event_type_name___get\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"event_type_name\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"example\": \"user.signup\",\n                            \"maxLength\": 256,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"Event Type Name\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"The request's idempotency key\",\n                        \"in\": \"header\",\n                        \"name\": \"idempotency-key\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"description\": \"The request's idempotency key\",\n                            \"title\": \"Idempotency-Key\",\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/EventTypeOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Successful Response\"\n                    },\n                    \"401\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Not Found\"\n                    },\n                    \"409\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Conflict\"\n                    },\n                    \"422\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        },\n                        \"description\": \"Validation Error\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"HTTPBearer\": []\n                    }\n                ],\n                \"summary\": \"Get Event Type\",\n                \"tags\": [\n                    \"Event Type\"\n                ],\n                \"x-codeSamples\": [\n                    {\n                        \"label\": \"JavaScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"const eventTypeOut = await svix.eventType.get('event_type_name');\"\n                    },\n                    {\n                        \"label\": \"TypeScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"const eventTypeOut = await svix.eventType.get('event_type_name');\"\n                    },\n                    {\n                        \"label\": \"Python\",\n                        \"lang\": \"Python\",\n                        \"source\": \"event_type_out = svix.event_type.get('event_type_name')\"\n                    },\n                    {\n                        \"label\": \"Go\",\n                        \"lang\": \"Go\",\n                        \"source\": \"eventTypeOut, err := svixClient.EventType.Get(\\\"event_type_name\\\")\"\n                    },\n                    {\n                        \"label\": \"Kotlin\",\n                        \"lang\": \"Kotlin\",\n                        \"source\": \"val eventTypeOut = svix.eventType.get('event_type_name')\"\n                    },\n                    {\n                        \"label\": \"Java\",\n                        \"lang\": \"Java\",\n                        \"source\": \"EventTypeOut eventTypeOut = svix.getEventType().get('event_type_name')\"\n                    },\n                    {\n                        \"label\": \"Ruby\",\n                        \"lang\": \"Ruby\",\n                        \"source\": \"event_type_out = svix.event_type.get('event_type_name')\"\n                    },\n                    {\n                        \"label\": \"CLI\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"svix event-type get 'event_type_name'\"\n                    },\n                    {\n                        \"label\": \"cURL\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"curl -X 'GET' \\\\\\n  'https://api.svix.com/api/v1/event-type/{event_type_name}/' \\\\\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\\\\n  -H 'accept: application/json' \\\\\\n  -H 'Content-Type: application/json'\"\n                    }\n                ]\n            },\n            \"put\": {\n                \"description\": \"Update an event type.\",\n                \"operationId\": \"update_event_type_api_v1_event_type__event_type_name___put\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"event_type_name\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"example\": \"user.signup\",\n                            \"maxLength\": 256,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"Event Type Name\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"The request's idempotency key\",\n                        \"in\": \"header\",\n                        \"name\": \"idempotency-key\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"description\": \"The request's idempotency key\",\n                            \"title\": \"Idempotency-Key\",\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/EventTypeUpdate\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/EventTypeOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Successful Response\"\n                    },\n                    \"401\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Not Found\"\n                    },\n                    \"409\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Conflict\"\n                    },\n                    \"422\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        },\n                        \"description\": \"Validation Error\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"HTTPBearer\": []\n                    }\n                ],\n                \"summary\": \"Update Event Type\",\n                \"tags\": [\n                    \"Event Type\"\n                ],\n                \"x-codeSamples\": [\n                    {\n                        \"label\": \"JavaScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"const eventTypeOut = await svix.eventType.update('event_type_name', {\\n    description: \\\"A user has signed up\\\",\\n    schemas: {\\n        \\\"1\\\": {\\n                \\\"title\\\": \\\"Invoice Paid Event\\\",\\n                \\\"description\\\": \\\"An invoice was paid by a user\\\",\\n                \\\"type\\\": \\\"object\\\",\\n                \\\"properties\\\": {\\n                        \\\"invoiceId\\\": {\\n                                \\\"description\\\": \\\"The invoice id\\\",\\n                                \\\"type\\\": \\\"string\\\"\\n                        },\\n                        \\\"userId\\\": {\\n                                \\\"description\\\": \\\"The user id\\\",\\n                                \\\"type\\\": \\\"string\\\"\\n                        }\\n                },\\n                \\\"required\\\": [\\n                        \\\"invoiceId\\\",\\n                        \\\"userId\\\"\\n                ]\\n        }\\n    },\\n    archived: false\\n});\"\n                    },\n                    {\n                        \"label\": \"TypeScript\",\n                        \"lang\": \"JavaScript\",\n                        \"source\": \"const eventTypeOut = await svix.eventType.update('event_type_name', {\\n    description: \\\"A user has signed up\\\",\\n    schemas: {\\n        \\\"1\\\": {\\n                \\\"title\\\": \\\"Invoice Paid Event\\\",\\n                \\\"description\\\": \\\"An invoice was paid by a user\\\",\\n                \\\"type\\\": \\\"object\\\",\\n                \\\"properties\\\": {\\n                        \\\"invoiceId\\\": {\\n                                \\\"description\\\": \\\"The invoice id\\\",\\n                                \\\"type\\\": \\\"string\\\"\\n                        },\\n                        \\\"userId\\\": {\\n                                \\\"description\\\": \\\"The user id\\\",\\n                                \\\"type\\\": \\\"string\\\"\\n                        }\\n                },\\n                \\\"required\\\": [\\n                        \\\"invoiceId\\\",\\n                        \\\"userId\\\"\\n                ]\\n        }\\n    },\\n    archived: false\\n});\"\n                    },\n                    {\n                        \"label\": \"Python\",\n                        \"lang\": \"Python\",\n                        \"source\": \"event_type_out = svix.event_type.update('event_type_name', EventTypeUpdate(\\n    description=\\\"A user has signed up\\\",\\n    schemas={'1': {'title': 'Invoice Paid Event', 'description': 'An invoice was paid by a user', 'type': 'object', 'properties': {'invoiceId': {'description': 'The invoice id', 'type': 'string'}, 'userId': {'description': 'The user id', 'type': 'string'}}, 'required': ['invoiceId', 'userId']}},\\n    archived=False\\n))\"\n                    },\n                    {\n                        \"label\": \"Go\",\n                        \"lang\": \"Go\",\n                        \"source\": \"eventTypeOut, err := svixClient.EventType.Update(\\\"event_type_name\\\", \u0026svix.EventTypeUpdate{\\n    Description: \\\"A user has signed up\\\",\\n    Schemas: map[string]interface{}{\\n        \\\"1\\\": {\\n                \\\"title\\\": \\\"Invoice Paid Event\\\",\\n                \\\"description\\\": \\\"An invoice was paid by a user\\\",\\n                \\\"type\\\": \\\"object\\\",\\n                \\\"properties\\\": {\\n                        \\\"invoiceId\\\": {\\n                                \\\"description\\\": \\\"The invoice id\\\",\\n                                \\\"type\\\": \\\"string\\\"\\n                        },\\n                        \\\"userId\\\": {\\n                                \\\"description\\\": \\\"The user id\\\",\\n                                \\\"type\\\": \\\"string\\\"\\n                        }\\n                },\\n                \\\"required\\\": [\\n                        \\\"invoiceId\\\",\\n                        \\\"userId\\\"\\n                ]\\n        }\\n    },\\n    Archived: False\\n})\"\n                    },\n                    {\n                        \"label\": \"Kotlin\",\n                        \"lang\": \"Kotlin\",\n                        \"source\": \"val eventTypeOut = svix.eventType.update('event_type_name', EventTypeUpdate()\\n    .description(\\\"A user has signed up\\\"),\\n    .schemas(\\\"\\\"\\\"{\\n        \\\"1\\\": {\\n                \\\"title\\\": \\\"Invoice Paid Event\\\",\\n                \\\"description\\\": \\\"An invoice was paid by a user\\\",\\n                \\\"type\\\": \\\"object\\\",\\n                \\\"properties\\\": {\\n                        \\\"invoiceId\\\": {\\n                                \\\"description\\\": \\\"The invoice id\\\",\\n                                \\\"type\\\": \\\"string\\\"\\n                        },\\n                        \\\"userId\\\": {\\n                                \\\"description\\\": \\\"The user id\\\",\\n                                \\\"type\\\": \\\"string\\\"\\n                        }\\n                },\\n                \\\"required\\\": [\\n                        \\\"invoiceId\\\",\\n                        \\\"userId\\\"\\n                ]\\n        }\\n    }\\\"\\\"\\\"),\\n    .archived(False)\\n)\"\n                    },\n                    {\n                        \"label\": \"Java\",\n                        \"lang\": \"Java\",\n                        \"source\": \"EventTypeOut eventTypeOut = svix.getEventType().update('event_type_name', new EventTypeUpdate()\\n    .description(\\\"A user has signed up\\\"),\\n    .schemas(\\\"{\\\" +\\n        \\\"\\\\\\\"1\\\\\\\": {\\\" +\\n                \\\"\\\\\\\"title\\\\\\\": \\\\\\\"Invoice Paid Event\\\\\\\",\\\" +\\n                \\\"\\\\\\\"description\\\\\\\": \\\\\\\"An invoice was paid by a user\\\\\\\",\\\" +\\n                \\\"\\\\\\\"type\\\\\\\": \\\\\\\"object\\\\\\\",\\\" +\\n                \\\"\\\\\\\"properties\\\\\\\": {\\\" +\\n                        \\\"\\\\\\\"invoiceId\\\\\\\": {\\\" +\\n                                \\\"\\\\\\\"description\\\\\\\": \\\\\\\"The invoice id\\\\\\\",\\\" +\\n                                \\\"\\\\\\\"type\\\\\\\": \\\\\\\"string\\\\\\\"\\\" +\\n                        \\\"},\\\" +\\n                        \\\"\\\\\\\"userId\\\\\\\": {\\\" +\\n                                \\\"\\\\\\\"description\\\\\\\": \\\\\\\"The user id\\\\\\\",\\\" +\\n                                \\\"\\\\\\\"type\\\\\\\": \\\\\\\"string\\\\\\\"\\\" +\\n                        \\\"}\\\" +\\n                \\\"},\\\" +\\n                \\\"\\\\\\\"required\\\\\\\": [\\\" +\\n                        \\\"\\\\\\\"invoiceId\\\\\\\",\\\" +\\n                        \\\"\\\\\\\"userId\\\\\\\"\\\" +\\n                \\\"]\\\" +\\n        \\\"}\\\" +\\n    \\\"}\\\"),\\n    .archived(False)\\n)\"\n                    },\n                    {\n                        \"label\": \"Ruby\",\n                        \"lang\": \"Ruby\",\n                        \"source\": \"event_type_out = svix.event_type.update('event_type_name', Svix::EventTypeUpdate.new({\\n    \\\"description\\\": \\\"A user has signed up\\\",\\n    \\\"schemas\\\": {\\n        \\\"1\\\": {\\n            \\\"title\\\": \\\"Invoice Paid Event\\\",\\n            \\\"description\\\": \\\"An invoice was paid by a user\\\",\\n            \\\"type\\\": \\\"object\\\",\\n            \\\"properties\\\": {\\n                \\\"invoiceId\\\": {\\n                    \\\"description\\\": \\\"The invoice id\\\",\\n                    \\\"type\\\": \\\"string\\\"\\n                },\\n                \\\"userId\\\": {\\n                    \\\"description\\\": \\\"The user id\\\",\\n                    \\\"type\\\": \\\"string\\\"\\n                }\\n            },\\n            \\\"required\\\": [\\n                \\\"invoiceId\\\",\\n                \\\"userId\\\"\\n            ]\\n        }\\n    },\\n    \\\"archived\\\": false\\n}))\"\n                    },\n                    {\n                        \"label\": \"CLI\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"svix event-type update 'event_type_name' '{\\n    \\\"description\\\": \\\"A user has signed up\\\",\\n    \\\"schemas\\\": {\\n        \\\"1\\\": {\\n            \\\"title\\\": \\\"Invoice Paid Event\\\",\\n            \\\"description\\\": \\\"An invoice was paid by a user\\\",\\n            \\\"type\\\": \\\"object\\\",\\n            \\\"properties\\\": {\\n                \\\"invoiceId\\\": {\\n                    \\\"description\\\": \\\"The invoice id\\\",\\n                    \\\"type\\\": \\\"string\\\"\\n                },\\n                \\\"userId\\\": {\\n                    \\\"description\\\": \\\"The user id\\\",\\n                    \\\"type\\\": \\\"string\\\"\\n                }\\n            },\\n            \\\"required\\\": [\\n                \\\"invoiceId\\\",\\n                \\\"userId\\\"\\n            ]\\n        }\\n    },\\n    \\\"archived\\\": false\\n}'\"\n                    },\n                    {\n                        \"label\": \"cURL\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"curl -X 'PUT' \\\\\\n  'https://api.svix.com/api/v1/event-type/{event_type_name}/' \\\\\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\\\\n  -H 'accept: application/json' \\\\\\n  -H 'Content-Type: application/json' \\\\\\n  -d '{\\n    \\\"description\\\": \\\"A user has signed up\\\",\\n    \\\"schemas\\\": {\\n        \\\"1\\\": {\\n            \\\"title\\\": \\\"Invoice Paid Event\\\",\\n            \\\"description\\\": \\\"An invoice was paid by a user\\\",\\n            \\\"type\\\": \\\"object\\\",\\n            \\\"properties\\\": {\\n                \\\"invoiceId\\\": {\\n                    \\\"description\\\": \\\"The invoice id\\\",\\n                    \\\"type\\\": \\\"string\\\"\\n                },\\n                \\\"userId\\\": {\\n                    \\\"description\\\": \\\"The user id\\\",\\n                    \\\"type\\\": \\\"string\\\"\\n                }\\n            },\\n            \\\"required\\\": [\\n                \\\"invoiceId\\\",\\n                \\\"userId\\\"\\n            ]\\n        }\\n    },\\n    \\\"archived\\\": false\\n}'\"\n                    }\n                ]\n            }\n        },\n        \"/api/v1/health/\": {\n            \"get\": {\n                \"description\": \"Verify the API server is up and running.\",\n                \"operationId\": \"health_api_v1_health__get\",\n                \"parameters\": [\n                    {\n                        \"description\": \"The request's idempotency key\",\n                        \"in\": \"header\",\n                        \"name\": \"idempotency-key\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"description\": \"The request's idempotency key\",\n                            \"title\": \"Idempotency-Key\",\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"Successful Response\"\n                    },\n                    \"422\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        },\n                        \"description\": \"Validation Error\"\n                    }\n                },\n                \"summary\": \"Health\",\n                \"tags\": [\n                    \"Health\"\n                ],\n                \"x-codeSamples\": [\n                    {\n                        \"label\": \"cURL\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"curl -X 'GET' \\\\\\n  'https://api.svix.com/api/v1/health/' \\\\\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\\\\n  -H 'accept: application/json' \\\\\\n  -H 'Content-Type: application/json'\"\n                    }\n                ]\n            }\n        },\n        \"/api/v1/stats/app/{app_id}/attempt/\": {\n            \"get\": {\n                \"description\": \"Returns application-level statistics on message attempts\",\n                \"operationId\": \"get_app_attempt_stats_api_v1_stats_app__app_id__attempt__get\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"app_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"description\": \"The application's ID or UID\",\n                            \"example\": \"app_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"maxLength\": 256,\n                            \"minLength\": 1,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"App Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"startDate\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"format\": \"date-time\",\n                            \"title\": \"Startdate\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"endDate\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"format\": \"date-time\",\n                            \"title\": \"Enddate\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"The request's idempotency key\",\n                        \"in\": \"header\",\n                        \"name\": \"idempotency-key\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"description\": \"The request's idempotency key\",\n                            \"title\": \"Idempotency-Key\",\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AttemptStatisticsResponse\"\n                                }\n                            }\n                        },\n                        \"description\": \"Successful Response\"\n                    },\n                    \"401\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Not Found\"\n                    },\n                    \"409\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Conflict\"\n                    },\n                    \"422\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        },\n                        \"description\": \"Validation Error\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"HTTPBearer\": []\n                    }\n                ],\n                \"summary\": \"Get App Attempt Stats\",\n                \"tags\": [\n                    \"Statistics\"\n                ],\n                \"x-codeSamples\": [\n                    {\n                        \"label\": \"cURL\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"curl -X 'GET' \\\\\\n  'https://api.svix.com/api/v1/stats/app/{app_id}/attempt/' \\\\\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\\\\n  -H 'accept: application/json' \\\\\\n  -H 'Content-Type: application/json'\"\n                    }\n                ]\n            }\n        },\n        \"/api/v1/stats/app/{app_id}/ep/{endpoint_id}/attempt/\": {\n            \"get\": {\n                \"description\": \"Returns endpoint-level statistics on message attempts\",\n                \"operationId\": \"get_ep_stats_api_v1_stats_app__app_id__ep__endpoint_id__attempt__get\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"endpoint_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"description\": \"The endpoint's ID or UID\",\n                            \"example\": \"ep_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"maxLength\": 256,\n                            \"minLength\": 1,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"Endpoint Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"app_id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"description\": \"The application's ID or UID\",\n                            \"example\": \"app_1srOrx2ZWZBpBUvZwXKQmoEYga2\",\n                            \"maxLength\": 256,\n                            \"minLength\": 1,\n                            \"pattern\": \"^[a-zA-Z0-9\\\\-_.]+$\",\n                            \"title\": \"App Id\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"startDate\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"format\": \"date-time\",\n                            \"title\": \"Startdate\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"endDate\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"format\": \"date-time\",\n                            \"title\": \"Enddate\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"The request's idempotency key\",\n                        \"in\": \"header\",\n                        \"name\": \"idempotency-key\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"description\": \"The request's idempotency key\",\n                            \"title\": \"Idempotency-Key\",\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AttemptStatisticsResponse\"\n                                }\n                            }\n                        },\n                        \"description\": \"Successful Response\"\n                    },\n                    \"401\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Not Found\"\n                    },\n                    \"409\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HttpErrorOut\"\n                                }\n                            }\n                        },\n                        \"description\": \"Conflict\"\n                    },\n                    \"422\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        },\n                        \"description\": \"Validation Error\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"HTTPBearer\": []\n                    }\n                ],\n                \"summary\": \"Get Ep Stats\",\n                \"tags\": [\n                    \"Statistics\"\n                ],\n                \"x-codeSamples\": [\n                    {\n                        \"label\": \"cURL\",\n                        \"lang\": \"Shell\",\n                        \"source\": \"curl -X 'GET' \\\\\\n  'https://api.svix.com/api/v1/stats/app/{app_id}/ep/{endpoint_id}/attempt/' \\\\\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\\\\n  -H 'accept: application/json' \\\\\\n  -H 'Content-Type: application/json'\"\n                    }\n                ]\n            }\n        }\n    },\n    \"tags\": [\n        {\n            \"description\": \"Applications are where messages are sent to. In most cases you would wantto have one application for each of your users.\",\n            \"name\": \"Application\"\n        },\n        {\n            \"description\": \"Messages are the webhook events being sent.\",\n            \"name\": \"Message\"\n        },\n        {\n            \"description\": \"Attempts to deliver `Message`s to `Endpoint`s.\",\n            \"name\": \"Message Attempt\"\n        },\n        {\n            \"description\": \"Endpoints are the URLs messages will be sent to. Each application can have multiple endpoints and each message sent to that application will be sent to all of them (unless they are not subscribed to the sent event type).\",\n            \"name\": \"Endpoint\"\n        },\n        {\n            \"description\": \"Integrations are services your users connect an application to. An integration can manage the application and it's endpoints.\",\n            \"name\": \"Integration\"\n        },\n        {\n            \"description\": \"Event types are identifiers denoting the type of message being sent. Event types are primarily used to decide which events are sent to which endpoint.\",\n            \"name\": \"Event Type\"\n        },\n        {\n            \"description\": \"Easily give your users access to our pre-built management UI.\",\n            \"name\": \"Authentication\"\n        },\n        {\n            \"description\": \"Health checks for the API.\",\n            \"name\": \"Health\"\n        },\n        {\n            \"description\": \"The webhooks the Svix service sends to notify you of events.\",\n            \"name\": \"Webhooks\"\n        }\n    ],\n    \"x-tagGroups\": [\n        {\n            \"name\": \"General\",\n            \"tags\": [\n                \"Application\",\n                \"Event Type\"\n            ]\n        },\n        {\n            \"name\": \"Application specific\",\n            \"tags\": [\n                \"Authentication\",\n                \"Endpoint\",\n                \"Message\",\n                \"Message Attempt\",\n                \"Integration\"\n            ]\n        },\n        {\n            \"name\": \"Utility\",\n            \"tags\": [\n                \"Health\"\n            ]\n        },\n        {\n            \"name\": \"Webhooks\",\n            \"tags\": [\n                \"Webhooks\"\n            ]\n        }\n    ],\n    \"x-webhooks\": {\n        \"EndpointCreatedEvent\": {\n            \"post\": {\n                \"description\": \"Sent when an endpoint is created.\",\n                \"operationId\": \"EndpointCreatedEvent\",\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/EndpointCreatedEvent\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"2XX\": {\n                        \"description\": \"Return any 2XX status to indicate that the data was received successfully\"\n                    }\n                },\n                \"summary\": \"EndpointCreatedEvent\",\n                \"tags\": [\n                    \"Webhooks\"\n                ]\n            }\n        },\n        \"EndpointDeletedEvent\": {\n            \"post\": {\n                \"description\": \"Sent when an endpoint is deleted.\",\n                \"operationId\": \"EndpointDeletedEvent\",\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/EndpointDeletedEvent\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"2XX\": {\n                        \"description\": \"Return any 2XX status to indicate that the data was received successfully\"\n                    }\n                },\n                \"summary\": \"EndpointDeletedEvent\",\n                \"tags\": [\n                    \"Webhooks\"\n                ]\n            }\n        },\n        \"EndpointDisabledEvent\": {\n            \"post\": {\n                \"description\": \"Sent when an endpoint has been automatically disabled after continuous failures.\",\n                \"operationId\": \"EndpointDisabledEvent\",\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/EndpointDisabledEvent\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"2XX\": {\n                        \"description\": \"Return any 2XX status to indicate that the data was received successfully\"\n                    }\n                },\n                \"summary\": \"EndpointDisabledEvent\",\n                \"tags\": [\n                    \"Webhooks\"\n                ]\n            }\n        },\n        \"EndpointUpdatedEvent\": {\n            \"post\": {\n                \"description\": \"Sent when an endpoint is updated.\",\n                \"operationId\": \"EndpointUpdatedEvent\",\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/EndpointUpdatedEvent\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"2XX\": {\n                        \"description\": \"Return any 2XX status to indicate that the data was received successfully\"\n                    }\n                },\n                \"summary\": \"EndpointUpdatedEvent\",\n                \"tags\": [\n                    \"Webhooks\"\n                ]\n            }\n        },\n        \"MessageAttemptExhaustedEvent\": {\n            \"post\": {\n                \"description\": \"Sent when a message delivery has failed (all of the retry attempts have been exhausted).\",\n                \"operationId\": \"MessageAttemptExhaustedEvent\",\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/MessageAttemptExhaustedEvent\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"2XX\": {\n                        \"description\": \"Return any 2XX status to indicate that the data was received successfully\"\n                    }\n                },\n                \"summary\": \"MessageAttemptExhaustedEvent\",\n                \"tags\": [\n                    \"Webhooks\"\n                ]\n            }\n        }\n    }\n}"
		}
	},
	"Error": "unmarshal: callback: json: cannot unmarshal number into Go struct field Schema.exclusiveMinimum of type bool"
}