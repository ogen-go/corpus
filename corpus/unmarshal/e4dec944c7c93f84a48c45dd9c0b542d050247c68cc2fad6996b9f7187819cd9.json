{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/PrefectHQ/prefect-databricks"
		},
		"file": {
			"name": "jobs-2.1-aws.yaml",
			"size": 0,
			"path": "prefect_databricks/schemas/jobs-2.1-aws.yaml",
			"byteSize": 174576,
			"content": "components:\n  responses:\n    BadRequest:\n      content:\n        application/json:\n          example:\n            error_code: INVALID_PARAMETER_VALUE\n            message: Invalid value for parameter job_id\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: The request was malformed. See JSON response for error details.\n    InternalError:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: The request was not handled correctly due to a server error.\n    NotFound:\n      content:\n        application/json:\n          examples:\n            resource_does_not_exist:\n              value:\n                error_code: ENDPOINT_NOT_FOUND\n                message: No API endpoint found\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: The requested resource does not exist.\n    Unauthorized:\n      content:\n        application/json:\n          example:\n            error_code: PERMISSION_DENIED\n            message: Unauthorized access.\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: The request was unauthorized.\n  schemas:\n    AccessControlList:\n      properties:\n        access_control_list:\n          description: List of permissions to set on the job.\n          items:\n            $ref: '#/components/schemas/AccessControlRequest'\n          type: array\n      type: object\n    AccessControlRequest:\n      oneOf:\n      - $ref: '#/components/schemas/AccessControlRequestForUser'\n      - $ref: '#/components/schemas/AccessControlRequestForGroup'\n    AccessControlRequestForGroup:\n      properties:\n        group_name:\n          $ref: '#/components/schemas/GroupName'\n        permission_level:\n          $ref: '#/components/schemas/PermissionLevelForGroup'\n      type: object\n    AccessControlRequestForServicePrincipal:\n      properties:\n        permission_level:\n          $ref: '#/components/schemas/PermissionLevel'\n        service_principal_name:\n          $ref: '#/components/schemas/ServicePrincipalName'\n      type: object\n    AccessControlRequestForUser:\n      properties:\n        permission_level:\n          $ref: '#/components/schemas/PermissionLevel'\n        user_name:\n          $ref: '#/components/schemas/UserName'\n      type: object\n    AutoScale:\n      properties:\n        max_workers:\n          description: The maximum number of workers to which the cluster can scale\n            up when overloaded. max_workers must be strictly greater than min_workers.\n          format: int32\n          type: integer\n        min_workers:\n          description: The minimum number of workers to which the cluster can scale\n            down when underutilized. It is also the initial number of workers the\n            cluster has after creation.\n          format: int32\n          type: integer\n    AwsAttributes:\n      properties:\n        availability:\n          description: 'Availability type used for all subsequent nodes past the `first_on_demand`\n            ones. **Note:** If `first_on_demand` is zero, this availability type is\n            used for the entire cluster.\n\n\n            `SPOT`: use spot instances.\n\n            `ON_DEMAND`: use on-demand instances.\n\n            `SPOT_WITH_FALLBACK`: preferably use spot instances, but fall back to\n            on-demand instances if spot instances cannot be acquired (for example,\n            if AWS spot prices are too high).'\n          enum:\n          - SPOT\n          - ON_DEMAND\n          - SPOT_WITH_FALLBACK\n          type: string\n        ebs_volume_count:\n          description: 'The number of volumes launched for each instance. You can\n            choose up to 10 volumes. This feature is only enabled for supported node\n            types. Legacy node types cannot specify custom EBS volumes. For node types\n            with no instance store, at least one EBS volume needs to be specified;\n            otherwise, cluster creation fails.\n\n\n            These EBS volumes are mounted at `/ebs0`, `/ebs1`, and etc. Instance store\n            volumes are mounted at `/local_disk0`, `/local_disk1`, and etc.\n\n\n            If EBS volumes are attached, Databricks configures Spark to use only the\n            EBS volumes for scratch storage because heterogeneously sized scratch\n            devices can lead to inefficient disk utilization. If no EBS volumes are\n            attached, Databricks configures Spark to use instance store volumes.\n\n\n            If EBS volumes are specified, then the Spark configuration `spark.local.dir`\n            is overridden.'\n          format: int32\n          type: integer\n        ebs_volume_iops:\n          description: 'The number of IOPS per EBS gp3 volume.\n\n\n            This value must be between 3000 and 16000.\n\n\n            The value of IOPS and throughput is calculated based on AWS documentation\n            to match the maximum performance of a gp2 volume with the same volume\n            size.\n\n\n            For more information, see the [EBS volume limit calculator](https://github.com/awslabs/aws-support-tools/tree/master/EBS/VolumeLimitCalculator).'\n          format: int32\n          type: integer\n        ebs_volume_size:\n          description: The size of each EBS volume (in GiB) launched for each instance.\n            For general purpose SSD, this value must be within the range 100 - 4096\\.\n            For throughput optimized HDD, this value must be within the range 500\n            - 4096\\. Custom EBS volumes cannot be specified for the legacy node types\n            (_memory-optimized_ and _compute-optimized_).\n          format: int32\n          type: integer\n        ebs_volume_throughput:\n          description: 'The throughput per EBS gp3 volume, in MiB per second.\n\n\n            This value must be between 125 and 1000.'\n          format: int32\n          type: integer\n        ebs_volume_type:\n          description: 'The type of EBS volume that is launched with this cluster.\n\n\n            `GENERAL_PURPOSE_SSD`: provision extra storage using AWS gp2 EBS volumes.\n\n            `THROUGHPUT_OPTIMIZED_HDD`: provision extra storage using AWS st1 volumes.'\n          enum:\n          - GENERAL_PURPOSE_SSD\n          - THROUGHPUT_OPTIMIZED_HDD\n          type: string\n        first_on_demand:\n          description: The first first_on_demand nodes of the cluster are placed on\n            on-demand instances. If this value is greater than 0, the cluster driver\n            node is placed on an on-demand instance. If this value is greater than\n            or equal to the current cluster size, all nodes are placed on on-demand\n            instances. If this value is less than the current cluster size, first_on_demand\n            nodes are placed on on-demand instances and the remainder are placed on\n            `availability` instances. This value does not affect cluster size and\n            cannot be mutated over the lifetime of a cluster.\n          format: int32\n          type: integer\n        instance_profile_arn:\n          description: 'Nodes for this cluster are only be placed on AWS instances\n            with this instance profile. If omitted, nodes are placed on instances\n            without an instance profile. The instance profile must have previously\n            been added to the Databricks environment by an account administrator.\n\n\n            This feature may only be available to certain customer plans.'\n          type: string\n        spot_bid_price_percent:\n          description: \"The max price for AWS spot instances, as a percentage of the\\\n            \\ corresponding instance type\\u2019s on-demand price. For example, if\\\n            \\ this field is set to 50, and the cluster needs a new `i3.xlarge` spot\\\n            \\ instance, then the max price is half of the price of on-demand `i3.xlarge`\\\n            \\ instances. Similarly, if this field is set to 200, the max price is\\\n            \\ twice the price of on-demand `i3.xlarge` instances. If not specified,\\\n            \\ the default value is 100\\\\. When spot instances are requested for this\\\n            \\ cluster, only spot instances whose max price percentage matches this\\\n            \\ field is considered. For safety, we enforce this field to be no more\\\n            \\ than 10000.\"\n          format: int32\n          type: integer\n        zone_id:\n          description: \"Identifier for the availability zone/datacenter in which the\\\n            \\ cluster resides. You have three options:\\n\\n**Specify an availability\\\n            \\ zone as a string**, for example: \\u201Cus-west-2a\\u201D. The provided\\\n            \\ availability zone must be in the same region as the Databricks deployment.\\\n            \\ For example, \\u201Cus-west-2a\\u201D is not a valid zone ID if the Databricks\\\n            \\ deployment resides in the \\u201Cus-east-1\\u201D region.\\n\\n**Enable\\\n            \\ automatic availability zone selection (\\u201CAuto-AZ\\u201D)**, by setting\\\n            \\ the value \\u201Cauto\\u201D. Databricks selects the AZ based on available\\\n            \\ IPs in the workspace subnets and retries in other availability zones\\\n            \\ if AWS returns insufficient capacity errors.\\n\\n**Do not specify a value**.\\\n            \\ If not specified, a default zone is used.\\n\\nThe list of available zones\\\n            \\ as well as the default value can be found by using the [List zones](https://docs.databricks.com/dev-tools/api/latest/clusters.html#list-zones)\\\n            \\ API.\"\n          type: string\n    CanManage:\n      description: Permission to manage the job.\n      enum:\n      - CAN_MANAGE\n      type: string\n    CanManageRun:\n      description: Permission to run and/or manage runs for the job.\n      enum:\n      - CAN_MANAGE_RUN\n      type: string\n    CanView:\n      description: Permission to view the settings of the job.\n      enum:\n      - CAN_VIEW\n      type: string\n    ClusterAttributes:\n      properties:\n        autotermination_minutes:\n          description: Automatically terminates the cluster after it is inactive for\n            this time in minutes. If not set, this cluster is not be automatically\n            terminated. If specified, the threshold must be between 10 and 10000 minutes.\n            You can also set this value to 0 to explicitly disable automatic termination.\n          format: int32\n          type: integer\n        aws_attributes:\n          $ref: '#/components/schemas/AwsAttributes'\n          description: Attributes related to clusters running on Amazon Web Services.\n            If not specified at cluster creation, a set of default values are used.\n        cluster_log_conf:\n          $ref: '#/components/schemas/ClusterLogConf'\n          description: The configuration for delivering Spark logs to a long-term\n            storage destination. Only one destination can be specified for one cluster.\n            If the conf is given, the logs is delivered to the destination every `5\n            mins`. The destination of driver logs is `\u003cdestination\u003e/\u003ccluster-ID\u003e/driver`,\n            while the destination of executor logs is `\u003cdestination\u003e/\u003ccluster-ID\u003e/executor`.\n        cluster_name:\n          description: \"Cluster name requested by the user. This doesn\\u2019t have\\\n            \\ to be unique. If not specified at creation, the cluster name is an empty\\\n            \\ string.\"\n          type: string\n        cluster_source:\n          $ref: '#/components/schemas/ClusterSource'\n          description: Determines whether the cluster was created by a user through\n            the UI, created by the Databricks Jobs scheduler, or through an API request.\n        custom_tags:\n          $ref: '#/components/schemas/ClusterTag'\n          description: 'An object containing a set of tags for cluster resources.\n            Databricks tags all cluster resources (such as AWS instances and EBS volumes)\n            with these tags in addition to default_tags.\n\n\n            **Note**:\n\n\n            * Tags are not supported on legacy node types such as compute-optimized\n            and memory-optimized\n\n            * Databricks allows at most 45 custom tags'\n        docker_image:\n          $ref: '#/components/schemas/DockerImage'\n          description: Docker image for a [custom container](https://docs.databricks.com/clusters/custom-containers.html).\n        driver_node_type_id:\n          description: The node type of the Spark driver. This field is optional;\n            if unset, the driver node type is set as the same value as `node_type_id`\n            defined above.\n          type: string\n        enable_elastic_disk:\n          description: 'Autoscaling Local Storage: when enabled, this cluster dynamically\n            acquires additional disk space when its Spark workers are running low\n            on disk space. This feature requires specific AWS permissions to function\n            correctly. Refer to [Autoscaling local storage](https://docs.databricks.com/clusters/configure.html#autoscaling-local-storage)\n            for details.'\n          type: boolean\n        init_scripts:\n          description: The configuration for storing init scripts. Any number of destinations\n            can be specified. The scripts are executed sequentially in the order provided.\n            If `cluster_log_conf` is specified, init script logs are sent to `\u003cdestination\u003e/\u003ccluster-ID\u003e/init_scripts`.\n          items:\n            $ref: '#/components/schemas/InitScriptInfo'\n          type: array\n        instance_pool_id:\n          description: The optional ID of the instance pool to which the cluster belongs.\n            Refer to [Pools](https://docs.databricks.com/clusters/instance-pools/index.html)\n            for details.\n          type: string\n        node_type_id:\n          description: This field encodes, through a single value, the resources available\n            to each of the Spark nodes in this cluster. For example, the Spark nodes\n            can be provisioned and optimized for memory or compute intensive workloads\n            A list of available node types can be retrieved by using the [List node\n            types](https://docs.databricks.com/dev-tools/api/latest/clusters.html#list-node-types)\n            API call.\n          type: string\n        policy_id:\n          description: A [cluster policy](https://docs.databricks.com/dev-tools/api/latest/policies.html)\n            ID.\n          type: string\n        spark_conf:\n          $ref: '#/components/schemas/SparkConfPair'\n          description: 'An object containing a set of optional, user-specified Spark\n            configuration key-value pairs. You can also pass in a string of extra\n            JVM options to the driver and the executors via `spark.driver.extraJavaOptions`\n            and `spark.executor.extraJavaOptions` respectively.\n\n\n            Example Spark confs: `{\"spark.speculation\": true, \"spark.streaming.ui.retainedBatches\":\n            5}` or `{\"spark.driver.extraJavaOptions\": \"-verbose:gc -XX:+PrintGCDetails\"}`'\n        spark_env_vars:\n          $ref: '#/components/schemas/SparkEnvPair'\n          description: 'An object containing a set of optional, user-specified environment\n            variable key-value pairs. Key-value pairs of the form (X,Y) are exported\n            as is (that is, `export X=''Y''`) while launching the driver and workers.\n\n\n            In order to specify an additional set of `SPARK_DAEMON_JAVA_OPTS`, we\n            recommend appending them to `$SPARK_DAEMON_JAVA_OPTS` as shown in the\n            following example. This ensures that all default databricks managed environmental\n            variables are included as well.\n\n\n            Example Spark environment variables: `{\"SPARK_WORKER_MEMORY\": \"28000m\",\n            \"SPARK_LOCAL_DIRS\": \"/local_disk0\"}` or `{\"SPARK_DAEMON_JAVA_OPTS\": \"$SPARK_DAEMON_JAVA_OPTS\n            -Dspark.shuffle.service.enabled=true\"}`'\n        spark_version:\n          description: \"The runtime version of the cluster, for example \\u201C5.0.x-scala2.11\\u201D\\\n            . You can retrieve a list of available runtime versions by using the [Runtime\\\n            \\ versions](https://docs.databricks.com/dev-tools/api/latest/clusters.html#runtime-versions)\\\n            \\ API call.\"\n          type: string\n        ssh_public_keys:\n          description: SSH public key contents that is added to each Spark node in\n            this cluster. The corresponding private keys can be used to login with\n            the user name `ubuntu` on port `2200`. Up to 10 keys can be specified.\n          items:\n            type: string\n          type: array\n    ClusterCloudProviderNodeInfo:\n      properties:\n        available_core_quota:\n          description: Available CPU core quota.\n          format: int32\n          type: integer\n        status:\n          $ref: '#/components/schemas/ClusterCloudProviderNodeStatus'\n          description: Status as reported by the cloud provider.\n        total_core_quota:\n          description: Total CPU core quota.\n          format: int32\n          type: integer\n    ClusterCloudProviderNodeStatus:\n      description: '* NotEnabledOnSubscription: Node type not available for subscription.\n\n        * NotAvailableInRegion: Node type not available in region.\n\n        '\n      enum:\n      - NotEnabledOnSubscription\n      - NotAvailableInRegion\n      type: string\n    ClusterEvent:\n      properties:\n        cluster_id:\n          description: Canonical identifier for the cluster. This field is required.\n          type: string\n        details:\n          $ref: '#/components/schemas/EventDetails'\n          description: The event details. This field is required.\n        timestamp:\n          description: The timestamp when the event occurred, stored as the number\n            of milliseconds since the unix epoch. Assigned by the Timeline service.\n          format: int64\n          type: integer\n        type:\n          $ref: '#/components/schemas/ClusterEventType'\n          description: The event type. This field is required.\n      required:\n      - cluster_id\n      - type\n      - details\n    ClusterEventType:\n      description: '* `CREATING`: Indicates that the cluster is being created.\n\n        * `DID_NOT_EXPAND_DISK`: Indicates that a disk is low on space, but adding\n        disks would put it over the max capacity.\n\n        * `EXPANDED_DISK`: Indicates that a disk was low on space and the disks were\n        expanded.\n\n        * `FAILED_TO_EXPAND_DISK`: Indicates that a disk was low on space and disk\n        space could not be expanded.\n\n        * `INIT_SCRIPTS_STARTING`: Indicates that the cluster scoped init script has\n        started.\n\n        * `INIT_SCRIPTS_FINISHED`: Indicates that the cluster scoped init script has\n        finished.\n\n        * `STARTING`: Indicates that the cluster is being started.\n\n        * `RESTARTING`: Indicates that the cluster is being started.\n\n        * `TERMINATING`: Indicates that the cluster is being terminated.\n\n        * `EDITED`: Indicates that the cluster has been edited.\n\n        * `RUNNING`: Indicates the cluster has finished being created. Includes the\n        number of nodes in the cluster and a failure reason if some nodes could not\n        be acquired.\n\n        * `RESIZING`: Indicates a change in the target size of the cluster (upsize\n        or downsize).\n\n        * `UPSIZE_COMPLETED`: Indicates that nodes finished being added to the cluster.\n        Includes the number of nodes in the cluster and a failure reason if some nodes\n        could not be acquired.\n\n        * `NODES_LOST`: Indicates that some nodes were lost from the cluster.\n\n        * `DRIVER_HEALTHY`: Indicates that the driver is healthy and the cluster is\n        ready for use.\n\n        * `DRIVER_UNAVAILABLE`: Indicates that the driver is unavailable.\n\n        * `SPARK_EXCEPTION`: Indicates that a Spark exception was thrown from the\n        driver.\n\n        * `DRIVER_NOT_RESPONDING`: Indicates that the driver is up but is not responsive,\n        likely due to GC.\n\n        * `DBFS_DOWN`: Indicates that the driver is up but DBFS is down.\n\n        * `METASTORE_DOWN`: Indicates that the driver is up but the metastore is down.\n\n        * `NODE_BLACKLISTED`: Indicates that a node is not allowed by Spark.\n\n        * `PINNED`: Indicates that the cluster was pinned.\n\n        * `UNPINNED`: Indicates that the cluster was unpinned.'\n      enum:\n      - CREATING\n      - DID_NOT_EXPAND_DISK\n      - EXPANDED_DISK\n      - FAILED_TO_EXPAND_DISK\n      - INIT_SCRIPTS_STARTING\n      - INIT_SCRIPTS_FINISHED\n      - STARTING\n      - RESTARTING\n      - TERMINATING\n      - EDITED\n      - RUNNING\n      - RESIZING\n      - UPSIZE_COMPLETED\n      - NODES_LOST\n      - DRIVER_HEALTHY\n      - DRIVER_UNAVAILABLE\n      - SPARK_EXCEPTION\n      - DRIVER_NOT_RESPONDING\n      - DBFS_DOWN\n      - METASTORE_DOWN\n      - NODE_BLACKLISTED\n      - PINNED\n      - UNPINNED\n      type: string\n    ClusterInfo:\n      properties:\n        autoscale:\n          $ref: '#/components/schemas/AutoScale'\n          description: If autoscale, parameters needed in order to automatically scale\n            clusters up and down based on load.\n        autotermination_minutes:\n          description: Automatically terminates the cluster after it is inactive for\n            this time in minutes. If not set, this cluster is not be automatically\n            terminated. If specified, the threshold must be between 10 and 10000 minutes.\n            You can also set this value to 0 to explicitly disable automatic termination.\n          format: int32\n          type: integer\n        aws_attributes:\n          $ref: '#/components/schemas/AwsAttributes'\n          description: Attributes related to clusters running on Amazon Web Services.\n            If not specified at cluster creation, a set of default values is used.\n        cluster_cores:\n          description: Number of CPU cores available for this cluster. This can be\n            fractional since certain node types are configured to share cores between\n            Spark nodes on the same instance.\n          format: float\n          type: number\n        cluster_id:\n          description: Canonical identifier for the cluster. This ID is retained during\n            cluster restarts and resizes, while each new cluster has a globally unique\n            ID.\n          type: string\n        cluster_log_conf:\n          $ref: '#/components/schemas/ClusterLogConf'\n          description: The configuration for delivering Spark logs to a long-term\n            storage destination. Only one destination can be specified for one cluster.\n            If the conf is given, the logs are delivered to the destination every\n            `5 mins`. The destination of driver logs is `\u003cdestination\u003e/\u003ccluster-ID\u003e/driver`,\n            while the destination of executor logs is `\u003cdestination\u003e/\u003ccluster-ID\u003e/executor`.\n        cluster_log_status:\n          $ref: '#/components/schemas/LogSyncStatus'\n          description: Cluster log delivery status.\n        cluster_memory_mb:\n          description: Total amount of cluster memory, in megabytes.\n          format: int64\n          type: integer\n        cluster_name:\n          description: \"Cluster name requested by the user. This doesn\\u2019t have\\\n            \\ to be unique. If not specified at creation, the cluster name is an empty\\\n            \\ string.\"\n          type: string\n        cluster_source:\n          $ref: '#/components/schemas/ClusterSource'\n          description: Determines whether the cluster was created by a user through\n            the UI, by the Databricks Jobs scheduler, or through an API request.\n        creator_user_name:\n          description: \"Creator user name. The field won\\u2019t be included in the\\\n            \\ response if the user has already been deleted.\"\n          type: string\n        custom_tags:\n          description: 'An object containing a set of tags for cluster resources.\n            Databricks tags all cluster resources (such as AWS instances and EBS volumes)\n            with these tags in addition to default_tags.\n\n\n            **Note**:\n\n\n            * Tags are not supported on legacy node types such as compute-optimized\n            and memory-optimized\n\n            * Databricks allows at most 45 custom tags'\n          items:\n            $ref: '#/components/schemas/ClusterTag'\n          type: array\n        default_tags:\n          $ref: '#/components/schemas/ClusterTag'\n          description: \"An object containing a set of tags that are added by Databricks\\\n            \\ regardless of any custom_tags, including:\\n\\n* Vendor: Databricks\\n\\\n            * Creator: \u003cusername-of-creator\u003e\\n* ClusterName: \u003cname-of-cluster\u003e\\n*\\\n            \\ ClusterId: \u003cid-of-cluster\u003e\\n* Name: \u003cDatabricks internal use\u003e  \\nOn\\\n            \\ job clusters:\\n* RunName: \u003cname-of-job\u003e\\n* JobId: \u003cid-of-job\u003e  \\nOn\\\n            \\ resources used by Databricks SQL:\\n* SqlEndpointId: \u003cid-of-endpoint\u003e\"\n        docker_image:\n          $ref: '#/components/schemas/DockerImage'\n          description: Docker image for a [custom container](https://docs.databricks.com/clusters/custom-containers.html).\n        driver:\n          $ref: '#/components/schemas/SparkNode'\n          description: Node on which the Spark driver resides. The driver node contains\n            the Spark master and the Databricks application that manages the per-notebook\n            Spark REPLs.\n        driver_node_type_id:\n          description: The node type of the Spark driver. This field is optional;\n            if unset, the driver node type is set as the same value as `node_type_id`\n            defined above.\n          type: string\n        enable_elastic_disk:\n          description: 'Autoscaling Local Storage: when enabled, this cluster dynamically\n            acquires additional disk space when its Spark workers are running low\n            on disk space. This feature requires specific AWS permissions to function\n            correctly - refer to [Autoscaling local storage](https://docs.databricks.com/clusters/configure.html#autoscaling-local-storage)\n            for details.'\n          type: boolean\n        executors:\n          description: Nodes on which the Spark executors reside.\n          items:\n            $ref: '#/components/schemas/SparkNode'\n          type: array\n        init_scripts:\n          description: The configuration for storing init scripts. Any number of destinations\n            can be specified. The scripts are executed sequentially in the order provided.\n            If `cluster_log_conf` is specified, init script logs are sent to `\u003cdestination\u003e/\u003ccluster-ID\u003e/init_scripts`.\n          items:\n            $ref: '#/components/schemas/InitScriptInfo'\n          type: array\n        instance_pool_id:\n          description: The optional ID of the instance pool to which the cluster belongs.\n            Refer to [Pools](https://docs.databricks.com/clusters/instance-pools/index.html)\n            for details.\n          type: string\n        jdbc_port:\n          description: Port on which Spark JDBC server is listening in the driver\n            node. No service listens on this port in executor nodes.\n          format: int32\n          type: integer\n        last_activity_time:\n          description: Time (in epoch milliseconds) when the cluster was last active.\n            A cluster is active if there is at least one command that has not finished\n            on the cluster. This field is available after the cluster has reached\n            a `RUNNING` state. Updates to this field are made as best-effort attempts.\n            Certain versions of Spark do not support reporting of cluster activity.\n            Refer to [Automatic termination](https://docs.databricks.com/clusters/clusters-manage.html#automatic-termination)\n            for details.\n          format: int64\n          type: integer\n        last_state_loss_time:\n          description: Time when the cluster driver last lost its state (due to a\n            restart or driver failure).\n          format: int64\n          type: integer\n        node_type_id:\n          description: This field encodes, through a single value, the resources available\n            to each of the Spark nodes in this cluster. For example, the Spark nodes\n            can be provisioned and optimized for memory or compute intensive workloads.\n            A list of available node types can be retrieved by using the [List node\n            types](https://docs.databricks.com/dev-tools/api/latest/clusters.html#list-node-types)\n            API call.\n          type: string\n        num_workers:\n          description: If num_workers, number of worker nodes that this cluster must\n            have. A cluster has one Spark driver and num_workers executors for a total\n            of num_workers + 1 Spark nodes. **Note:** When reading the properties\n            of a cluster, this field reflects the desired number of workers rather\n            than the actual number of workers. For instance, if a cluster is resized\n            from 5 to 10 workers, this field is immediately updated to reflect the\n            target size of 10 workers, whereas the workers listed in `executors` gradually\n            increase from 5 to 10 as the new nodes are provisioned.\n          format: int32\n          type: integer\n        spark_conf:\n          $ref: '#/components/schemas/SparkConfPair'\n          description: 'An object containing a set of optional, user-specified Spark\n            configuration key-value pairs. You can also pass in a string of extra\n            JVM options to the driver and the executors via `spark.driver.extraJavaOptions`\n            and `spark.executor.extraJavaOptions` respectively.\n\n\n            Example Spark confs: `{\"spark.speculation\": true, \"spark.streaming.ui.retainedBatches\":\n            5}` or `{\"spark.driver.extraJavaOptions\": \"-verbose:gc -XX:+PrintGCDetails\"}`'\n        spark_context_id:\n          description: A canonical SparkContext identifier. This value _does_ change\n            when the Spark driver restarts. The pair `(cluster_id, spark_context_id)`\n            is a globally unique identifier over all Spark contexts.\n          format: int64\n          type: integer\n        spark_env_vars:\n          $ref: '#/components/schemas/SparkEnvPair'\n          description: 'An object containing a set of optional, user-specified environment\n            variable key-value pairs. Key-value pairs of the form (X,Y) are exported\n            as is (that is, `export X=''Y''`) while launching the driver and workers.\n\n\n            To specify an additional set of `SPARK_DAEMON_JAVA_OPTS`, we recommend\n            appending them to `$SPARK_DAEMON_JAVA_OPTS` as shown in the following\n            example. This ensures that all default databricks managed environmental\n            variables are included as well.\n\n\n            Example Spark environment variables: `{\"SPARK_WORKER_MEMORY\": \"28000m\",\n            \"SPARK_LOCAL_DIRS\": \"/local_disk0\"}` or `{\"SPARK_DAEMON_JAVA_OPTS\": \"$SPARK_DAEMON_JAVA_OPTS\n            -Dspark.shuffle.service.enabled=true\"}`'\n        spark_version:\n          description: The runtime version of the cluster. You can retrieve a list\n            of available runtime versions by using the [Runtime versions](https://docs.databricks.com/dev-tools/api/latest/clusters.html#runtime-versions)\n            API call.\n          type: string\n        ssh_public_keys:\n          description: SSH public key contents that are added to each Spark node in\n            this cluster. The corresponding private keys can be used to login with\n            the user name `ubuntu` on port `2200`. Up to 10 keys can be specified.\n          items:\n            type: string\n          type: array\n        start_time:\n          description: Time (in epoch milliseconds) when the cluster creation request\n            was received (when the cluster entered a `PENDING` state).\n          format: int64\n          type: integer\n        state:\n          $ref: '#/components/schemas/ClusterState'\n          description: State of the cluster.\n        state_message:\n          description: A message associated with the most recent state transition\n            (for example, the reason why the cluster entered a `TERMINATED` state).\n            This field is unstructured, and its exact format is subject to change.\n          type: string\n        terminated_time:\n          description: Time (in epoch milliseconds) when the cluster was terminated,\n            if applicable.\n          format: int64\n          type: integer\n        termination_reason:\n          $ref: '#/components/schemas/TerminationReason'\n          description: Information about why the cluster was terminated. This field\n            only appears when the cluster is in a `TERMINATING` or `TERMINATED` state.\n    ClusterInstance:\n      properties:\n        cluster_id:\n          description: \"The canonical identifier for the cluster used by a run. This\\\n            \\ field is always available for runs on existing clusters. For runs on\\\n            \\ new clusters, it becomes available once the cluster is created. This\\\n            \\ value can be used to view logs by browsing to `/#setting/sparkui/$cluster_id/driver-logs`.\\\n            \\ The logs continue to be available after the run completes.\\n\\nThe response\\\n            \\ won\\u2019t include this field if the identifier is not available yet.\"\n          example: 0923-164208-meows279\n          type: string\n        spark_context_id:\n          description: \"The canonical identifier for the Spark context used by a run.\\\n            \\ This field is filled in once the run begins execution. This value can\\\n            \\ be used to view the Spark UI by browsing to `/#setting/sparkui/$cluster_id/$spark_context_id`.\\\n            \\ The Spark UI continues to be available after the run has completed.\\n\\\n            \\nThe response won\\u2019t include this field if the identifier is not\\\n            \\ available yet.\"\n          type: string\n    ClusterLibraryStatuses:\n      properties:\n        cluster_id:\n          description: Unique identifier for the cluster.\n          type: string\n        library_statuses:\n          description: Status of all libraries on the cluster.\n          items:\n            $ref: '#/components/schemas/LibraryFullStatus'\n          type: array\n    ClusterLogConf:\n      properties:\n        dbfs:\n          $ref: '#/components/schemas/DbfsStorageInfo'\n          description: 'DBFS location of cluster log. Destination must be provided.\n            For example, `{ \"dbfs\" : { \"destination\" : \"dbfs:/home/cluster_log\" }\n            }`'\n        s3:\n          $ref: '#/components/schemas/S3StorageInfo'\n          description: 'S3 location of cluster log. `destination` and either `region`\n            or `endpoint` must be provided. For example, `{ \"s3\": { \"destination\"\n            : \"s3://cluster_log_bucket/prefix\", \"region\" : \"us-west-2\" } }`'\n    ClusterSize:\n      properties:\n        autoscale:\n          $ref: '#/components/schemas/AutoScale'\n          description: If autoscale, parameters needed in order to automatically scale\n            clusters up and down based on load.\n        num_workers:\n          description: If num_workers, number of worker nodes that this cluster must\n            have. A cluster has one Spark driver and num_workers executors for a total\n            of num_workers + 1 Spark nodes. When reading the properties of a cluster,\n            this field reflects the desired number of workers rather than the actual\n            number of workers. For instance, if a cluster is resized from 5 to 10\n            workers, this field is updated to reflect the target size of 10 workers,\n            whereas the workers listed in executors gradually increase from 5 to 10\n            as the new nodes are provisioned.\n          format: int32\n          type: integer\n    ClusterSource:\n      description: '* UI: Cluster created through the UI.\n\n        * JOB: Cluster created by the Databricks job scheduler.\n\n        * API: Cluster created through an API call.\n\n        '\n      enum:\n      - UI\n      - JOB\n      - API\n      type: string\n    ClusterSpec:\n      properties:\n        existing_cluster_id:\n          description: If existing_cluster_id, the ID of an existing cluster that\n            is used for all runs of this job. When running jobs on an existing cluster,\n            you may need to manually restart the cluster if it stops responding. We\n            suggest running jobs on new clusters for greater reliability.\n          example: 0923-164208-meows279\n          type: string\n        libraries:\n          description: An optional list of libraries to be installed on the cluster\n            that executes the job. The default value is an empty list.\n          items:\n            $ref: '#/components/schemas/Library'\n          type: array\n        new_cluster:\n          $ref: '#/components/schemas/NewCluster'\n          description: If new_cluster, a description of a cluster that is created\n            for each run.\n          example: null\n    ClusterState:\n      description: '* PENDING: Indicates that a cluster is in the process of being\n        created.\n\n        * RUNNING: Indicates that a cluster has been started and is ready for use.\n\n        * RESTARTING: Indicates that a cluster is in the process of restarting.\n\n        * RESIZING: Indicates that a cluster is in the process of adding or removing\n        nodes.\n\n        * TERMINATING: Indicates that a cluster is in the process of being destroyed.\n\n        * TERMINATED: Indicates that a cluster has been successfully destroyed.\n\n        * ERROR: This state is no longer used. It was used to indicate a cluster that\n        failed to be created. `TERMINATING` and `TERMINATED` are used instead.\n\n        * UNKNOWN: Indicates that a cluster is in an unknown state. A cluster should\n        never be in this state.\n\n        '\n      enum:\n      - PENDING\n      - RUNNING\n      - RESTARTING\n      - RESIZING\n      - TERMINATING\n      - TERMINATED\n      - ERROR\n      - UNKNOWN\n      type: string\n    ClusterTag:\n      additionalProperties:\n        type: string\n      description: 'An object with key value pairs. The key length must be between\n        1 and 127 UTF-8 characters, inclusive. The value length must be less than\n        or equal to 255 UTF-8 characters. For a list of all restrictions, see AWS\n        Tag Restrictions: \u003chttps://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html#tag-restrictions\u003e'\n      type: object\n    CronSchedule:\n      properties:\n        pause_status:\n          description: Indicate whether this schedule is paused or not.\n          enum:\n          - PAUSED\n          - UNPAUSED\n          example: PAUSED\n          type: string\n        quartz_cron_expression:\n          description: A Cron expression using Quartz syntax that describes the schedule\n            for a job. See [Cron Trigger](http://www.quartz-scheduler.org/documentation/quartz-2.3.0/tutorials/crontrigger.html)\n            for details. This field is required.\n          example: 20 30 * * * ?\n          type: string\n        timezone_id:\n          description: A Java timezone ID. The schedule for a job is resolved with\n            respect to this timezone. See [Java TimeZone](https://docs.oracle.com/javase/7/docs/api/java/util/TimeZone.html)\n            for details. This field is required.\n          example: Europe/London\n          type: string\n      required:\n      - quartz_cron_expression\n      - timezone_id\n    DbfsStorageInfo:\n      properties:\n        destination:\n          description: 'DBFS destination. Example: `dbfs:/my/path`'\n          type: string\n    DbtOutput:\n      properties:\n        artifacts_headers:\n          description: An optional map of headers to send when retrieving the artifact\n            from the `artifacts_link`.\n          type: object\n        artifacts_link:\n          description: A pre-signed URL to download the (compressed) dbt artifacts.\n            This link is valid for a limited time (30 minutes). This information is\n            only available after the run has finished.\n          type: string\n    DbtTask:\n      properties:\n        commands:\n          description: A list of dbt commands to execute. All commands must start\n            with `dbt`. This parameter must not be empty. A maximum of up to 10 commands\n            can be provided.\n          example:\n          - dbt deps\n          - dbt seed\n          - dbt run --models 123\n          type: array\n        profiles_directory:\n          description: Optional (relative) path to the profiles directory. Can only\n            be specified if no warehouse_id is specified. If no warehouse_id is specified\n            and this folder is unset, the root directory is used.\n          type: string\n        project_directory:\n          description: Optional (relative) path to the project directory, if no value\n            is provided, the root of the git repository is used.\n          type: string\n        schema:\n          description: Optional schema to write to. This parameter is only used when\n            a warehouse_id is also provided. If not provided, the `default` schema\n            is used.\n          type: string\n        warehouse_id:\n          description: ID of the SQL warehouse to connect to. If provided, we automatically\n            generate and provide the profile and connection details to dbt. It can\n            be overridden on a per-command basis by using the `--profiles-dir` command\n            line argument.\n          example: 30dade0507d960d1\n          type: string\n      required:\n      - commands\n    DockerBasicAuth:\n      properties:\n        password:\n          description: Password for the Docker repository.\n          type: string\n        username:\n          description: User name for the Docker repository.\n          type: string\n    DockerImage:\n      properties:\n        basic_auth:\n          $ref: '#/components/schemas/DockerBasicAuth'\n          description: Basic authentication information for Docker repository.\n        url:\n          description: URL for the Docker image.\n          type: string\n    Error:\n      properties:\n        error_code:\n          description: Error code\n          example: INTERNAL_ERROR\n          type: string\n        message:\n          description: Human-readable error message that describes the cause of the\n            error.\n          example: Unexpected error.\n          type: string\n      type: object\n    EventDetails:\n      properties:\n        attributes:\n          $ref: '#/components/schemas/AwsAttributes'\n          description: '* For created clusters, the attributes of the cluster.\n\n            * For edited clusters, the new attributes of the cluster.'\n        cause:\n          $ref: '#/components/schemas/ResizeCause'\n          description: The cause of a change in target size.\n        cluster_size:\n          $ref: '#/components/schemas/ClusterSize'\n          description: The cluster size that was set in the cluster creation or edit.\n        current_num_workers:\n          description: The number of nodes in the cluster.\n          format: int32\n          type: integer\n        previous_attributes:\n          $ref: '#/components/schemas/AwsAttributes'\n          description: The cluster attributes before a cluster was edited.\n        previous_cluster_size:\n          $ref: '#/components/schemas/ClusterSize'\n          description: The size of the cluster before an edit or resize.\n        reason:\n          $ref: '#/components/schemas/TerminationReason'\n          description: 'A termination reason:\n\n\n            * On a `TERMINATED` event, the reason for the termination.\n\n            * On a `RESIZE_COMPLETE` event, indicates the reason that we failed to\n            acquire some nodes.'\n        target_num_workers:\n          description: The targeted number of nodes in the cluster.\n          format: int32\n          type: integer\n        user:\n          description: The user that caused the event to occur. (Empty if it was done\n            by Databricks.)\n          type: string\n    FileStorageInfo:\n      properties:\n        destination:\n          description: 'File destination. Example: `file:/my/file.sh`'\n          type: string\n    GitSnapshot:\n      description: Read-only state of the remote repository at the time the job was\n        run. This field is only included on job runs.\n      properties:\n        used_commit:\n          description: Commit that was used to execute the run. If git_branch was\n            specified, this points to the HEAD of the branch at the time of the run;\n            if git_tag was specified, this points to the commit the tag points to.\n          example: 4506fdf41e9fa98090570a34df7a5bce163ff15f\n          type: string\n      readOnly: true\n    GitSource:\n      description: 'This functionality is in Public Preview.\n\n\n        An optional specification for a remote repository containing the notebooks\n        used by this job''s notebook tasks.'\n      example:\n        git_branch: main\n        git_provider: gitHub\n        git_url: https://github.com/databricks/databricks-cli\n      oneOf:\n      - required:\n        - git_url\n        - git_provider\n        - git_branch\n      - required:\n        - git_url\n        - git_provider\n        - git_tag\n      - required:\n        - git_url\n        - git_provider\n        - git_commit\n      properties:\n        git_branch:\n          description: 'Name of the branch to be checked out and used by this job.\n            This field cannot be specified in conjunction with git_tag or git_commit.\n\n            The maximum length is 255 characters.'\n          example: main\n          type: string\n        git_commit:\n          description: 'Commit to be checked out and used by this job. This field\n            cannot be specified in conjunction with git_branch or git_tag.\n\n            The maximum length is 64 characters.'\n          example: e0056d01\n          type: string\n        git_provider:\n          description: Unique identifier of the service used to host the Git repository.\n            The value is case insensitive.\n          enum:\n          - gitHub\n          - bitbucketCloud\n          - azureDevOpsServices\n          - gitHubEnterprise\n          - bitbucketServer\n          - gitLab\n          - gitLabEnterpriseEdition\n          - awsCodeCommit\n          example: github\n          required:\n          - true\n          type: string\n        git_snapshot:\n          $ref: '#/components/schemas/GitSnapshot'\n        git_tag:\n          description: 'Name of the tag to be checked out and used by this job. This\n            field cannot be specified in conjunction with git_branch or git_commit.\n\n            The maximum length is 255 characters.'\n          example: release-1.0.0\n          type: string\n        git_url:\n          description: 'URL of the repository to be cloned by this job.\n\n            The maximum length is 300 characters.'\n          example: https://github.com/databricks/databricks-cli\n          required:\n          - true\n          type: string\n    GroupName:\n      description: 'Group name. There are two built-in groups: `users` for all users,\n        and `admins` for administrators.'\n      example: users\n      type: string\n    InitScriptInfo:\n      properties:\n        S3:\n          $ref: '#/components/schemas/S3StorageInfo'\n          description: 'S3 location of init script. Destination and either region\n            or endpoint must be provided. For example, `{ \"s3\": { \"destination\" :\n            \"s3://init_script_bucket/prefix\", \"region\" : \"us-west-2\" } }`'\n        dbfs:\n          $ref: '#/components/schemas/DbfsStorageInfo'\n          description: 'DBFS location of init script. Destination must be provided.\n            For example, `{ \"dbfs\" : { \"destination\" : \"dbfs:/home/init_script\" }\n            }`'\n        file:\n          $ref: '#/components/schemas/FileStorageInfo'\n          description: 'File location of init script. Destination must be provided.\n            For example, `{ \"file\" : { \"destination\" : \"file:/my/local/file.sh\" }\n            }`'\n    IsOwner:\n      description: Perimssion that represents ownership of the job.\n      enum:\n      - IS_OWNER\n      type: string\n    Job:\n      properties:\n        created_time:\n          description: The time at which this job was created in epoch milliseconds\n            (milliseconds since 1/1/1970 UTC).\n          example: 1601370337343\n          format: int64\n          type: integer\n        creator_user_name:\n          description: \"The creator user name. This field won\\u2019t be included in\\\n            \\ the response if the user has already been deleted.\"\n          example: user.name@databricks.com\n          type: string\n        job_id:\n          description: The canonical identifier for this job.\n          example: 11223344\n          format: int64\n          type: integer\n        settings:\n          $ref: '#/components/schemas/JobSettings'\n          description: Settings for this job and all of its runs. These settings can\n            be updated using the `resetJob` method.\n    JobCluster:\n      properties:\n        job_cluster_key:\n          description: 'A unique name for the job cluster. This field is required\n            and must be unique within the job.\n\n            `JobTaskSettings` may refer to this field to determine which cluster to\n            launch for the task execution.'\n          example: auto_scaling_cluster\n          maxLength: 100\n          minLength: 1\n          pattern: ^[\\w\\-]+$\n          type: string\n        new_cluster:\n          $ref: '#/components/schemas/NewCluster'\n      required:\n      - job_cluster_key\n    JobEmailNotifications:\n      properties:\n        no_alert_for_skipped_runs:\n          description: If true, do not send email to recipients specified in `on_failure`\n            if the run is skipped.\n          example: false\n          type: boolean\n        on_failure:\n          description: A list of email addresses to be notified when a run unsuccessfully\n            completes. A run is considered to have completed unsuccessfully if it\n            ends with an `INTERNAL_ERROR` `life_cycle_state` or a `SKIPPED`, `FAILED`,\n            or `TIMED_OUT` result_state. If this is not specified on job creation,\n            reset, or update the list is empty, and notifications are not sent.\n          example:\n          - user.name@databricks.com\n          items:\n            type: string\n          type: array\n        on_start:\n          description: A list of email addresses to be notified when a run begins.\n            If not specified on job creation, reset, or update, the list is empty,\n            and notifications are not sent.\n          example:\n          - user.name@databricks.com\n          items:\n            type: string\n          type: array\n        on_success:\n          description: A list of email addresses to be notified when a run successfully\n            completes. A run is considered to have completed successfully if it ends\n            with a `TERMINATED` `life_cycle_state` and a `SUCCESSFUL` result_state.\n            If not specified on job creation, reset, or update, the list is empty,\n            and notifications are not sent.\n          example:\n          - user.name@databricks.com\n          items:\n            type: string\n          type: array\n    JobSettings:\n      properties:\n        email_notifications:\n          $ref: '#/components/schemas/JobEmailNotifications'\n          description: An optional set of email addresses that is notified when runs\n            of this job begin or complete as well as when this job is deleted. The\n            default behavior is to not send any emails.\n        format:\n          description: Used to tell what is the format of the job. This field is ignored\n            in Create/Update/Reset calls. When using the Jobs API 2.1 this value is\n            always set to `\"MULTI_TASK\"`.\n          enum:\n          - SINGLE_TASK\n          - MULTI_TASK\n          example: MULTI_TASK\n          type: string\n        git_source:\n          $ref: '#/components/schemas/GitSource'\n          description: 'This functionality is in Public Preview.\n\n\n            An optional specification for a remote repository containing the notebooks\n            used by this job''s notebook tasks.'\n          example:\n            git_branch: main\n            git_provider: gitHub\n            git_url: https://github.com/databricks/databricks-cli\n        job_clusters:\n          description: A list of job cluster specifications that can be shared and\n            reused by tasks of this job. Libraries cannot be declared in a shared\n            job cluster. You must declare dependent libraries in task settings.\n          example:\n          - job_cluster_key: auto_scaling_cluster\n            new_cluster:\n              autoscale:\n                max_workers: 16\n                min_workers: 2\n              aws_attributes:\n                availability: SPOT\n                zone_id: us-west-2a\n              node_type_id: i3.xlarge\n              spark_conf:\n                spark.speculation: true\n              spark_version: 7.3.x-scala2.12\n          items:\n            $ref: '#/components/schemas/JobCluster'\n          maxItems: 100\n          type: array\n        max_concurrent_runs:\n          description: \"An optional maximum allowed number of concurrent runs of the\\\n            \\ job.\\n\\nSet this value if you want to be able to execute multiple runs\\\n            \\ of the same job concurrently. This is useful for example if you trigger\\\n            \\ your job on a frequent schedule and want to allow consecutive runs to\\\n            \\ overlap with each other, or if you want to trigger multiple runs which\\\n            \\ differ by their input parameters.\\n\\nThis setting affects only new runs.\\\n            \\ For example, suppose the job\\u2019s concurrency is 4 and there are 4\\\n            \\ concurrent active runs. Then setting the concurrency to 3 won\\u2019\\\n            t kill any of the active runs. However, from then on, new runs are skipped\\\n            \\ unless there are fewer than 3 active runs.\\n\\nThis value cannot exceed\\\n            \\ 1000\\\\. Setting this value to 0 causes all new runs to be skipped. The\\\n            \\ default behavior is to allow only 1 concurrent run.\"\n          example: 10\n          format: int32\n          type: integer\n        name:\n          default: Untitled\n          description: An optional name for the job.\n          example: A multitask job\n          type: string\n        schedule:\n          $ref: '#/components/schemas/CronSchedule'\n          description: \"An optional periodic schedule for this job. The default behavior\\\n            \\ is that the job only runs when triggered by clicking \\u201CRun Now\\u201D\\\n            \\ in the Jobs UI or sending an API request to `runNow`.\"\n        tags:\n          default: '{}'\n          description: A map of tags associated with the job. These are forwarded\n            to the cluster as cluster tags for jobs clusters, and are subject to the\n            same limitations as cluster tags. A maximum of 25 tags can be added to\n            the job.\n          example:\n            cost-center: engineering\n            team: jobs\n          type: object\n        tasks:\n          description: A list of task specifications to be executed by this job.\n          example:\n          - depends_on: []\n            description: Extracts session data from events\n            existing_cluster_id: 0923-164208-meows279\n            libraries:\n            - jar: dbfs:/mnt/databricks/Sessionize.jar\n            max_retries: 3\n            min_retry_interval_millis: 2000\n            retry_on_timeout: false\n            spark_jar_task:\n              main_class_name: com.databricks.Sessionize\n              parameters:\n              - --data\n              - dbfs:/path/to/data.json\n            task_key: Sessionize\n            timeout_seconds: 86400\n          - depends_on: []\n            description: Ingests order data\n            job_cluster_key: auto_scaling_cluster\n            libraries:\n            - jar: dbfs:/mnt/databricks/OrderIngest.jar\n            max_retries: 3\n            min_retry_interval_millis: 2000\n            retry_on_timeout: false\n            spark_jar_task:\n              main_class_name: com.databricks.OrdersIngest\n              parameters:\n              - --data\n              - dbfs:/path/to/order-data.json\n            task_key: Orders_Ingest\n            timeout_seconds: 86400\n          - depends_on:\n            - task_key: Orders_Ingest\n            - task_key: Sessionize\n            description: Matches orders with user sessions\n            max_retries: 3\n            min_retry_interval_millis: 2000\n            new_cluster:\n              autoscale:\n                max_workers: 16\n                min_workers: 2\n              aws_attributes:\n                availability: SPOT\n                zone_id: us-west-2a\n              node_type_id: i3.xlarge\n              spark_conf:\n                spark.speculation: true\n              spark_version: 7.3.x-scala2.12\n            notebook_task:\n              base_parameters:\n                age: '35'\n                name: John Doe\n              notebook_path: /Users/user.name@databricks.com/Match\n              source: WORKSPACE\n            retry_on_timeout: false\n            task_key: Match\n            timeout_seconds: 86400\n          items:\n            $ref: '#/components/schemas/JobTaskSettings'\n          maxItems: 100\n          type: array\n        timeout_seconds:\n          description: An optional timeout applied to each run of this job. The default\n            behavior is to have no timeout.\n          example: 86400\n          format: int32\n          type: integer\n    JobTask:\n      properties:\n        notebook_task:\n          $ref: '#/components/schemas/NotebookTask'\n          description: If notebook_task, indicates that this job must run a notebook.\n            This field may not be specified in conjunction with spark_jar_task.\n        pipeline_task:\n          $ref: '#/components/schemas/PipelineTask'\n          description: If pipeline_task, indicates that this job must execute a Pipeline.\n        python_wheel_task:\n          $ref: '#/components/schemas/PythonWheelTask'\n          description: If python_wheel_task, indicates that this job must execute\n            a PythonWheel.\n        spark_jar_task:\n          $ref: '#/components/schemas/SparkJarTask'\n          description: If spark_jar_task, indicates that this job must run a JAR.\n          example: ''\n        spark_python_task:\n          $ref: '#/components/schemas/SparkPythonTask'\n          description: If spark_python_task, indicates that this job must run a Python\n            file.\n        spark_submit_task:\n          $ref: '#/components/schemas/SparkSubmitTask'\n          description: If spark_submit_task, indicates that this job must be launched\n            by the spark submit script.\n        sql_task:\n          $ref: '#/components/schemas/SqlTask'\n          description: If sql_task, indicates that this job must execute a SQL task.\n            It requires both Databricks SQL and a Serverless SQL warehouse.\n    JobTaskSettings:\n      properties:\n        dbt_task:\n          $ref: '#/components/schemas/DbtTask'\n          description: If dbt_task, indicates that this must execute a dbt task. It\n            requires both Databricks SQL and the ability to use a Serverless SQL warehouse.\n        depends_on:\n          $ref: '#/components/schemas/TaskDependencies'\n        description:\n          $ref: '#/components/schemas/TaskDescription'\n        email_notifications:\n          $ref: '#/components/schemas/JobEmailNotifications'\n          description: An optional set of email addresses that is notified when runs\n            of this task begin or complete as well as when this task is deleted. The\n            default behavior is to not send any emails.\n        existing_cluster_id:\n          description: If existing_cluster_id, the ID of an existing cluster that\n            is used for all runs of this task. When running tasks on an existing cluster,\n            you may need to manually restart the cluster if it stops responding. We\n            suggest running jobs on new clusters for greater reliability.\n          example: 0923-164208-meows279\n          type: string\n        job_cluster_key:\n          description: If job_cluster_key, this task is executed reusing the cluster\n            specified in `job.settings.job_clusters`.\n          maxLength: 100\n          minLength: 1\n          pattern: ^[\\w\\-]+$\n          type: string\n        libraries:\n          description: An optional list of libraries to be installed on the cluster\n            that executes the task. The default value is an empty list.\n          items:\n            $ref: '#/components/schemas/Library'\n          type: array\n        max_retries:\n          description: An optional maximum number of times to retry an unsuccessful\n            run. A run is considered to be unsuccessful if it completes with the `FAILED`\n            result_state or `INTERNAL_ERROR` `life_cycle_state`. The value -1 means\n            to retry indefinitely and the value 0 means to never retry. The default\n            behavior is to never retry.\n          example: 10\n          format: int32\n          type: integer\n        min_retry_interval_millis:\n          description: An optional minimal interval in milliseconds between the start\n            of the failed run and the subsequent retry run. The default behavior is\n            that unsuccessful runs are immediately retried.\n          example: 2000\n          format: int32\n          type: integer\n        new_cluster:\n          $ref: '#/components/schemas/NewCluster'\n          description: If new_cluster, a description of a cluster that is created\n            for each run.\n          example: null\n        notebook_task:\n          $ref: '#/components/schemas/NotebookTask'\n          description: If notebook_task, indicates that this task must run a notebook.\n            This field may not be specified in conjunction with spark_jar_task.\n        pipeline_task:\n          $ref: '#/components/schemas/PipelineTask'\n          description: If pipeline_task, indicates that this task must execute a Pipeline.\n        python_wheel_task:\n          $ref: '#/components/schemas/PythonWheelTask'\n          description: If python_wheel_task, indicates that this job must execute\n            a PythonWheel.\n        retry_on_timeout:\n          description: An optional policy to specify whether to retry a task when\n            it times out. The default behavior is to not retry on timeout.\n          example: true\n          type: boolean\n        spark_jar_task:\n          $ref: '#/components/schemas/SparkJarTask'\n          description: If spark_jar_task, indicates that this task must run a JAR.\n        spark_python_task:\n          $ref: '#/components/schemas/SparkPythonTask'\n          description: If spark_python_task, indicates that this task must run a Python\n            file.\n        spark_submit_task:\n          $ref: '#/components/schemas/SparkSubmitTask'\n          description: If spark_submit_task, indicates that this task must be launched\n            by the spark submit script.\n        sql_task:\n          $ref: '#/components/schemas/SqlTask'\n          description: If sql_task, indicates that this job must execute a SQL task.\n            It requires both Databricks SQL and a Serverless SQL warehouse.\n        task_key:\n          $ref: '#/components/schemas/TaskKey'\n        timeout_seconds:\n          description: An optional timeout applied to each run of this job task. The\n            default behavior is to have no timeout.\n          example: 86400\n          format: int32\n          type: integer\n      required:\n      - task_key\n    Library:\n      properties:\n        cran:\n          $ref: '#/components/schemas/RCranLibrary'\n          description: If cran, specification of a CRAN library to be installed.\n        egg:\n          description: 'If egg, URI of the egg to be installed. DBFS and S3 URIs are\n            supported. For example: `{ \"egg\": \"dbfs:/my/egg\" }` or `{ \"egg\": \"s3://my-bucket/egg\"\n            }`. If S3 is used, make sure the cluster has read access on the library.\n            You may need to launch the cluster with an instance profile to access\n            the S3 URI.'\n          example: dbfs:/my/egg\n          type: string\n        jar:\n          description: 'If jar, URI of the JAR to be installed. DBFS and S3 URIs are\n            supported. For example: `{ \"jar\": \"dbfs:/mnt/databricks/library.jar\" }`\n            or `{ \"jar\": \"s3://my-bucket/library.jar\" }`. If S3 is used, make sure\n            the cluster has read access on the library. You may need to launch the\n            cluster with an instance profile to access the S3 URI.'\n          example: dbfs:/my-jar.jar\n          type: string\n        maven:\n          $ref: '#/components/schemas/MavenLibrary'\n          description: 'If maven, specification of a Maven library to be installed.\n            For example: `{ \"coordinates\": \"org.jsoup:jsoup:1.7.2\" }`'\n        pypi:\n          $ref: '#/components/schemas/PythonPyPiLibrary'\n          description: 'If pypi, specification of a PyPI library to be installed.\n            Specifying the `repo` field is optional and if not specified, the default\n            pip index is used. For example: `{ \"package\": \"simplejson\", \"repo\": \"https://my-repo.com\"\n            }`'\n        whl:\n          description: 'If whl, URI of the wheel or zipped wheels to be installed.\n            DBFS and S3 URIs are supported. For example: `{ \"whl\": \"dbfs:/my/whl\"\n            }` or `{ \"whl\": \"s3://my-bucket/whl\" }`. If S3 is used, make sure the\n            cluster has read access on the library. You may need to launch the cluster\n            with an instance profile to access the S3 URI. Also the wheel file name\n            needs to use the [correct convention](https://www.python.org/dev/peps/pep-0427/#file-format).\n            If zipped wheels are to be installed, the file name suffix should be `.wheelhouse.zip`.'\n          example: dbfs:/my/whl\n          type: string\n    LibraryFullStatus:\n      properties:\n        is_library_for_all_clusters:\n          description: Whether the library was set to be installed on all clusters\n            via the libraries UI.\n          type: boolean\n        library:\n          $ref: '#/components/schemas/Library'\n          description: Unique identifier for the library.\n        messages:\n          description: All the info and warning messages that have occurred so far\n            for this library.\n          items:\n            type: string\n          type: array\n        status:\n          $ref: '#/components/schemas/LibraryInstallStatus'\n          description: Status of installing the library on the cluster.\n    LibraryInstallStatus:\n      description: '* `PENDING`: No action has yet been taken to install the library.\n        This state should be very short lived.\n\n        * `RESOLVING`: Metadata necessary to install the library is being retrieved\n        from the provided repository. For Jar, Egg, and Whl libraries, this step is\n        a no-op.\n\n        * `INSTALLING`: The library is actively being installed, either by adding\n        resources to Spark or executing system commands inside the Spark nodes.\n\n        * `INSTALLED`: The library has been successfully instally.\n\n        * `SKIPPED`: Installation on a Databricks Runtime 7.0 or above cluster was\n        skipped due to Scala version incompatibility.\n\n        * `FAILED`: Some step in installation failed. More information can be found\n        in the messages field.\n\n        * `UNINSTALL_ON_RESTART`: The library has been marked for removal. Libraries\n        can be removed only when clusters are restarted, so libraries that enter this\n        state remains until the cluster is restarted.'\n      enum:\n      - PENDING\n      - RESOLVING\n      - INSTALLING\n      - INSTALLED\n      - SKIPPED\n      - FAILED\n      - UNINSTALL_ON_RESTART\n      type: string\n    ListOrder:\n      description: '* `DESC`: Descending order.\n\n        * `ASC`: Ascending order.'\n      enum:\n      - DESC\n      - ASC\n      type: string\n    LogSyncStatus:\n      properties:\n        last_attempted:\n          description: The timestamp of last attempt. If the last attempt fails, last_exception\n            contains the exception in the last attempt.\n          format: int64\n          type: integer\n        last_exception:\n          description: The exception thrown in the last attempt, it would be null\n            (omitted in the response) if there is no exception in last attempted.\n          type: string\n    MavenLibrary:\n      properties:\n        coordinates:\n          description: 'Gradle-style Maven coordinates. For example: `org.jsoup:jsoup:1.7.2`.\n            This field is required.'\n          example: org.jsoup:jsoup:1.7.2\n          type: string\n        exclusions:\n          description: 'List of dependences to exclude. For example: `[\"slf4j:slf4j\",\n            \"*:hadoop-client\"]`.\n\n\n            Maven dependency exclusions: \u003chttps://maven.apache.org/guides/introduction/introduction-to-optional-and-excludes-dependencies.html\u003e.'\n          example:\n          - slf4j:slf4j\n          - '*:hadoop-client'\n          items:\n            type: string\n          type: array\n        repo:\n          description: Maven repo to install the Maven package from. If omitted, both\n            Maven Central Repository and Spark Packages are searched.\n          example: https://my-repo.com\n          type: string\n      required:\n      - coordinates\n    NewCluster:\n      properties:\n        autoscale:\n          $ref: '#/components/schemas/AutoScale'\n          description: If autoscale, the required parameters to automatically scale\n            clusters up and down based on load.\n        aws_attributes:\n          $ref: '#/components/schemas/AwsAttributes'\n          description: Attributes related to clusters running on Amazon Web Services.\n            If not specified at cluster creation, a set of default values is used.\n        cluster_log_conf:\n          $ref: '#/components/schemas/ClusterLogConf'\n          description: The configuration for delivering Spark logs to a long-term\n            storage destination. Only one destination can be specified for one cluster.\n            If the conf is given, the logs are delivered to the destination every\n            `5 mins`. The destination of driver logs is `\u003cdestination\u003e/\u003ccluster-id\u003e/driver`,\n            while the destination of executor logs is `\u003cdestination\u003e/\u003ccluster-id\u003e/executor`.\n        custom_tags:\n          $ref: '#/components/schemas/ClusterTag'\n          description: 'An object containing a set of tags for cluster resources.\n            Databricks tags all cluster resources (such as AWS instances and EBS volumes)\n            with these tags in addition to default_tags.\n\n\n            **Note**:\n\n\n            * Tags are not supported on legacy node types such as compute-optimized\n            and memory-optimized\n\n            * Databricks allows at most 45 custom tags'\n        driver_instance_pool_id:\n          description: The optional ID of the instance pool to use for the driver\n            node. You must also specify `instance_pool_id`. Refer to [Instance Pools\n            API](https://docs.databricks.com/dev-tools/api/latest/instance-pools.html)\n            for details.\n          type: string\n        driver_node_type_id:\n          description: The node type of the Spark driver. This field is optional;\n            if unset, the driver node type is set as the same value as `node_type_id`\n            defined above.\n          type: string\n        enable_elastic_disk:\n          description: 'Autoscaling Local Storage: when enabled, this cluster dynamically\n            acquires additional disk space when its Spark workers are running low\n            on disk space. This feature requires specific AWS permissions to function\n            correctly - refer to [Autoscaling local storage](https://docs.databricks.com/clusters/configure.html#autoscaling-local-storage)\n            for details.'\n          type: boolean\n        init_scripts:\n          description: The configuration for storing init scripts. Any number of scripts\n            can be specified. The scripts are executed sequentially in the order provided.\n            If `cluster_log_conf` is specified, init script logs are sent to `\u003cdestination\u003e/\u003ccluster-id\u003e/init_scripts`.\n          items:\n            $ref: '#/components/schemas/InitScriptInfo'\n          type: array\n        instance_pool_id:\n          description: The optional ID of the instance pool to use for cluster nodes.\n            If `driver_instance_pool_id` is present, `instance_pool_id` is used for\n            worker nodes only. Otherwise, it is used for both the driver node and\n            worker nodes. Refer to [Instance Pools API](https://docs.databricks.com/dev-tools/api/latest/instance-pools.html)\n            for details.\n          type: string\n        node_type_id:\n          description: This field encodes, through a single value, the resources available\n            to each of the Spark nodes in this cluster. For example, the Spark nodes\n            can be provisioned and optimized for memory or compute intensive workloads\n            A list of available node types can be retrieved by using the [List node\n            types](https://docs.databricks.com/dev-tools/api/latest/clusters.html#list-node-types)\n            API call. This field is required, unless `instance_pool_id` is specified.\n          type: string\n        num_workers:\n          description: If num_workers, number of worker nodes that this cluster must\n            have. A cluster has one Spark driver and num_workers executors for a total\n            of num_workers + 1 Spark nodes. When reading the properties of a cluster,\n            this field reflects the desired number of workers rather than the actual\n            current number of workers. For example, if a cluster is resized from 5\n            to 10 workers, this field immediately updates to reflect the target size\n            of 10 workers, whereas the workers listed in `spark_info` gradually increase\n            from 5 to 10 as the new nodes are provisioned.\n          format: int32\n          type: integer\n        policy_id:\n          description: A [cluster policy](https://docs.databricks.com/dev-tools/api/latest/policies.html)\n            ID.\n          type: string\n        spark_conf:\n          $ref: '#/components/schemas/SparkConfPair'\n          description: 'An object containing a set of optional, user-specified Spark\n            configuration key-value pairs. You can also pass in a string of extra\n            JVM options to the driver and the executors via `spark.driver.extraJavaOptions`\n            and `spark.executor.extraJavaOptions` respectively.\n\n\n            Example Spark confs: `{\"spark.speculation\": true, \"spark.streaming.ui.retainedBatches\":\n            5}` or `{\"spark.driver.extraJavaOptions\": \"-verbose:gc -XX:+PrintGCDetails\"}`'\n        spark_env_vars:\n          $ref: '#/components/schemas/SparkEnvPair'\n          description: 'An object containing a set of optional, user-specified environment\n            variable key-value pairs. Key-value pair of the form (X,Y) are exported\n            as is (for example, `export X=''Y''`) while launching the driver and workers.\n\n\n            To specify an additional set of `SPARK_DAEMON_JAVA_OPTS`, we recommend\n            appending them to `$SPARK_DAEMON_JAVA_OPTS` as shown in the following\n            example. This ensures that all default databricks managed environmental\n            variables are included as well.\n\n\n            Example Spark environment variables: `{\"SPARK_WORKER_MEMORY\": \"28000m\",\n            \"SPARK_LOCAL_DIRS\": \"/local_disk0\"}` or `{\"SPARK_DAEMON_JAVA_OPTS\": \"$SPARK_DAEMON_JAVA_OPTS\n            -Dspark.shuffle.service.enabled=true\"}`'\n        spark_version:\n          description: The Spark version of the cluster. A list of available Spark\n            versions can be retrieved by using the [Runtime versions](https://docs.databricks.com/dev-tools/api/latest/clusters.html#runtime-versions)\n            API call. This field is required.\n          type: string\n        ssh_public_keys:\n          description: SSH public key contents that are added to each Spark node in\n            this cluster. The corresponding private keys can be used to login with\n            the user name `ubuntu` on port `2200`. Up to 10 keys can be specified.\n          items:\n            type: string\n          type: array\n      required:\n      - spark_version\n    NodeType:\n      properties:\n        description:\n          description: A string description associated with this node type. This field\n            is required.\n          type: string\n        instance_type_id:\n          description: An identifier for the type of hardware that this node runs\n            on. This field is required.\n          type: string\n        is_deprecated:\n          description: Whether the node type is deprecated. Non-deprecated node types\n            offer greater performance.\n          type: boolean\n        memory_mb:\n          description: Memory (in MB) available for this node type. This field is\n            required.\n          format: int32\n          type: integer\n        node_info:\n          $ref: '#/components/schemas/ClusterCloudProviderNodeInfo'\n          description: Node type info reported by the cloud provider.\n        node_type_id:\n          description: Unique identifier for this node type. This field is required.\n          type: string\n        num_cores:\n          description: Number of CPU cores available for this node type. This can\n            be fractional if the number of cores on a machine instance is not divisible\n            by the number of Spark nodes on that machine. This field is required.\n          format: float\n          type: number\n      required:\n      - node_type_id\n      - memory_mb\n      - description\n      - instance_type_id\n    NotebookOutput:\n      properties:\n        result:\n          description: The value passed to [dbutils.notebook.exit()](https://docs.databricks.com/notebooks/notebook-workflows.html#notebook-workflows-exit).\n            Databricks restricts this API to return the first 5 MB of the value. For\n            a larger result, your job can store the results in a cloud storage service.\n            This field is absent if `dbutils.notebook.exit()` was never called.\n          example: An arbitrary string passed by calling dbutils.notebook.exit(...)\n          type: string\n        truncated:\n          description: Whether or not the result was truncated.\n          example: false\n          type: boolean\n    NotebookTask:\n      properties:\n        base_parameters:\n          additionalProperties: true\n          description: \"Base parameters to be used for each run of this job. If the\\\n            \\ run is initiated by a call to [`run-now`](https://docs.databricks.com/dev-tools/api/latest/jobs.html#operation/JobsRunNow)\\\n            \\ with parameters specified, the two parameters maps are merged. If the\\\n            \\ same key is specified in `base_parameters` and in `run-now`, the value\\\n            \\ from `run-now` is used.\\n\\nUse [Task parameter variables](https://docs.databricks.com/jobs.html#parameter-variables)\\\n            \\ to set parameters containing information about job runs.\\n\\nIf the notebook\\\n            \\ takes a parameter that is not specified in the job\\u2019s `base_parameters`\\\n            \\ or the `run-now` override parameters, the default value from the notebook\\\n            \\ is used.\\n\\nRetrieve these parameters in a notebook using [dbutils.widgets.get](https://docs.databricks.com/dev-tools/databricks-utils.html#dbutils-widgets).\"\n          example:\n            age: 35\n            name: John Doe\n          type: object\n        notebook_path:\n          description: The path of the notebook to be run in the Databricks workspace\n            or remote repository. For notebooks stored in the Databricks workspace,\n            the path must be absolute and begin with a slash. For notebooks stored\n            in a remote repository, the path must be relative. This field is required.\n          example: /Users/user.name@databricks.com/notebook_to_run\n          required:\n          - true\n          type: string\n        source:\n          description: Optional location type of the notebook. When set to `WORKSPACE`,\n            the notebook will be retrieved from the local Databricks workspace. When\n            set to `GIT`, the notebook will be retrieved from a Git repository defined\n            in `git_source`. If the value is empty, the task will use `GIT` if `git_source`\n            is defined and `WORKSPACE` otherwise.\n          enum:\n          - WORKSPACE\n          - GIT\n          example: WORKSPACE\n          required:\n          - false\n          type: string\n      required:\n      - notebook_path\n    ParameterPair:\n      additionalProperties: true\n      description: An object with additional information about why a cluster was terminated.\n        The object keys are one of `TerminationParameter` and the value is the termination\n        information.\n      type: object\n    PermissionLevel:\n      description: Permission level to grant.\n      oneOf:\n      - $ref: '#/components/schemas/CanManage'\n      - $ref: '#/components/schemas/CanManageRun'\n      - $ref: '#/components/schemas/CanView'\n      - $ref: '#/components/schemas/IsOwner'\n    PermissionLevelForGroup:\n      description: Permission level to grant.\n      oneOf:\n      - $ref: '#/components/schemas/CanManage'\n      - $ref: '#/components/schemas/CanManageRun'\n      - $ref: '#/components/schemas/CanView'\n    PipelineTask:\n      properties:\n        full_refresh:\n          default: false\n          description: If true, a full refresh will be triggered on the delta live\n            table.\n          type: boolean\n        pipeline_id:\n          description: The full name of the pipeline task to execute.\n          example: a12cd3e4-0ab1-1abc-1a2b-1a2bcd3e4fg5\n          type: string\n    PoolClusterTerminationCode:\n      description: \"* INSTANCE_POOL_MAX_CAPACITY_FAILURE: The pool max capacity has\\\n        \\ been reached.\\n* INSTANCE_POOL_NOT_FOUND_FAILURE: The pool specified by\\\n        \\ the cluster is no longer active or doesn\\u2019t exist.\"\n      enum:\n      - INSTANCE_POOL_MAX_CAPACITY_FAILURE\n      - INSTANCE_POOL_NOT_FOUND_FAILURE\n      type: string\n    PythonPyPiLibrary:\n      properties:\n        package:\n          description: 'The name of the PyPI package to install. An optional exact\n            version specification is also supported. Examples: `simplejson` and `simplejson==3.8.0`.\n            This field is required.'\n          example: simplejson==3.8.0\n          type: string\n        repo:\n          description: The repository where the package can be found. If not specified,\n            the default pip index is used.\n          example: https://my-repo.com\n          type: string\n      required:\n      - package\n    PythonWheelTask:\n      properties:\n        entry_point:\n          description: Named entry point to use, if it does not exist in the metadata\n            of the package it executes the function from the package directly using\n            `$packageName.$entryPoint()`\n          type: string\n        named_parameters:\n          description: Command-line parameters passed to Python wheel task in the\n            form of `[\"--name=task\", \"--data=dbfs:/path/to/data.json\"]`. Leave it\n            empty if `parameters` is not null.\n          example:\n            data: dbfs:/path/to/data.json\n            name: task\n          type: object\n        package_name:\n          description: Name of the package to execute\n          type: string\n        parameters:\n          description: Command-line parameters passed to Python wheel task. Leave\n            it empty if `named_parameters` is not null.\n          example:\n          - --name=task\n          - one\n          - two\n          items:\n            type: string\n          type: array\n    RCranLibrary:\n      properties:\n        package:\n          description: The name of the CRAN package to install. This field is required.\n          example: geojson\n          type: string\n        repo:\n          description: The repository where the package can be found. If not specified,\n            the default CRAN repo is used.\n          example: https://my-repo.com\n          type: string\n      required:\n      - package\n    RepairHistory:\n      properties:\n        repair_history:\n          description: The repair history of the run.\n          items:\n            $ref: '#/components/schemas/RepairHistoryItem'\n          type: array\n      type: object\n    RepairHistoryItem:\n      properties:\n        end_time:\n          description: The end time of the (repaired) run.\n          example: 1625060863413\n          format: int64\n          type: integer\n        id:\n          description: The ID of the repair. Only returned for the items that represent\n            a repair in `repair_history`.\n          example: 734650698524280\n          format: int64\n          type: integer\n        start_time:\n          description: The start time of the (repaired) run.\n          example: 1625060460483\n          format: int64\n          type: integer\n        state:\n          $ref: '#/components/schemas/RunState'\n        task_run_ids:\n          description: The run IDs of the task runs that ran as part of this repair\n            history item.\n          example:\n          - 1106460542112844\n          - 988297789683452\n          items:\n            format: int64\n            type: integer\n          type: array\n        type:\n          description: The repair history item type. Indicates whether a run is the\n            original run or a repair run.\n          enum:\n          - ORIGINAL\n          - REPAIR\n          type: string\n      type: object\n    RepairRunInput:\n      properties:\n        latest_repair_id:\n          description: The ID of the latest repair. This parameter is not required\n            when repairing a run for the first time, but must be provided on subsequent\n            requests to repair the same run.\n          example: 734650698524280\n          format: int64\n          type: integer\n        rerun_tasks:\n          description: The task keys of the task runs to repair.\n          example:\n          - task0\n          - task1\n          items:\n            type: string\n          type: array\n        run_id:\n          description: The job run ID of the run to repair. The run must not be in\n            progress.\n          example: 455644833\n          format: int64\n          type: integer\n      type: object\n    ResizeCause:\n      description: '* `AUTOSCALE`: Automatically resized based on load.\n\n        * `USER_REQUEST`: User requested a new size.\n\n        * `AUTORECOVERY`: Autorecovery monitor resized the cluster after it lost a\n        node.'\n      enum:\n      - AUTOSCALE\n      - USER_REQUEST\n      - AUTORECOVERY\n      type: string\n    Run:\n      properties:\n        attempt_number:\n          description: \"The sequence number of this run attempt for a triggered job\\\n            \\ run. The initial attempt of a run has an attempt_number of 0\\\\. If the\\\n            \\ initial run attempt fails, and the job has a retry policy (`max_retries`\\\n            \\ \\\\\u003e 0), subsequent runs are created with an `original_attempt_run_id`\\\n            \\ of the original attempt\\u2019s ID and an incrementing `attempt_number`.\\\n            \\ Runs are retried only until they succeed, and the maximum `attempt_number`\\\n            \\ is the same as the `max_retries` value for the job.\"\n          example: 0\n          format: int32\n          type: integer\n        cleanup_duration:\n          description: The time in milliseconds it took to terminate the cluster and\n            clean up any associated artifacts. The total duration of the run is the\n            sum of the setup_duration, the execution_duration, and the cleanup_duration.\n          example: 0\n          format: int64\n          type: integer\n        cluster_instance:\n          $ref: '#/components/schemas/ClusterInstance'\n          description: The cluster used for this run. If the run is specified to use\n            a new cluster, this field is set once the Jobs service has requested a\n            cluster for the run.\n        cluster_spec:\n          $ref: '#/components/schemas/ClusterSpec'\n          description: \"A snapshot of the job\\u2019s cluster specification when this\\\n            \\ run was created.\"\n        creator_user_name:\n          description: \"The creator user name. This field won\\u2019t be included in\\\n            \\ the response if the user has already been deleted.\"\n          example: user.name@databricks.com\n          type: string\n        end_time:\n          description: The time at which this run ended in epoch milliseconds (milliseconds\n            since 1/1/1970 UTC). This field is set to 0 if the job is still running.\n          example: 1625060863413\n          format: int64\n          type: integer\n        execution_duration:\n          description: The time in milliseconds it took to execute the commands in\n            the JAR or notebook until they completed, failed, timed out, were cancelled,\n            or encountered an unexpected error.\n          example: 0\n          format: int64\n          type: integer\n        git_source:\n          $ref: '#/components/schemas/GitSource'\n          description: 'This functionality is in Public Preview.\n\n\n            An optional specification for a remote repository containing the notebooks\n            used by this job''s notebook tasks.'\n          example:\n            git_branch: main\n            git_provider: gitHub\n            git_url: https://github.com/databricks/databricks-cli\n        job_clusters:\n          description: A list of job cluster specifications that can be shared and\n            reused by tasks of this job. Libraries cannot be declared in a shared\n            job cluster. You must declare dependent libraries in task settings.\n          example:\n          - job_cluster_key: auto_scaling_cluster\n            new_cluster:\n              autoscale:\n                max_workers: 16\n                min_workers: 2\n              aws_attributes:\n                availability: SPOT\n                zone_id: us-west-2a\n              node_type_id: i3.xlarge\n              spark_conf:\n                spark.speculation: true\n              spark_version: 7.3.x-scala2.12\n          items:\n            $ref: '#/components/schemas/JobCluster'\n          maxItems: 100\n          type: array\n        job_id:\n          description: The canonical identifier of the job that contains this run.\n          example: 11223344\n          format: int64\n          type: integer\n        number_in_job:\n          deprecated: true\n          description: A unique identifier for this job run. This is set to the same\n            value as `run_id`.\n          example: 455644833\n          format: int64\n          type: integer\n        original_attempt_run_id:\n          description: If this run is a retry of a prior run attempt, this field contains\n            the run_id of the original attempt; otherwise, it is the same as the run_id.\n          example: 455644833\n          format: int64\n          type: integer\n        overriding_parameters:\n          $ref: '#/components/schemas/RunParameters'\n          description: The parameters used for this run.\n        run_id:\n          description: The canonical identifier of the run. This ID is unique across\n            all runs of all jobs.\n          example: 455644833\n          format: int64\n          type: integer\n        run_name:\n          default: Untitled\n          description: An optional name for the run. The maximum allowed length is\n            4096 bytes in UTF-8 encoding.\n          example: A multitask job run\n          type: string\n        run_page_url:\n          description: The URL to the detail page of the run.\n          example: https://my-workspace.cloud.databricks.com/#job/11223344/run/123\n          type: string\n        run_type:\n          $ref: '#/components/schemas/RunType'\n        schedule:\n          $ref: '#/components/schemas/CronSchedule'\n          description: The cron schedule that triggered this run if it was triggered\n            by the periodic scheduler.\n        setup_duration:\n          description: The time it took to set up the cluster in milliseconds. For\n            runs that run on new clusters this is the cluster creation time, for runs\n            that run on existing clusters this time should be very short.\n          example: 0\n          format: int64\n          type: integer\n        start_time:\n          description: The time at which this run was started in epoch milliseconds\n            (milliseconds since 1/1/1970 UTC). This may not be the time when the job\n            task starts executing, for example, if the job is scheduled to run on\n            a new cluster, this is the time the cluster creation call is issued.\n          example: 1625060460483\n          format: int64\n          type: integer\n        state:\n          $ref: '#/components/schemas/RunState'\n          description: The result and lifecycle states of the run.\n        tasks:\n          description: The list of tasks performed by the run. Each task has its own\n            `run_id` which you can use to call `JobsGetOutput` to retrieve the run\n            resutls.\n          example:\n          - attempt_number: 0\n            cleanup_duration: 0\n            cluster_instance:\n              cluster_id: 0923-164208-meows279\n              spark_context_id: '4348585301701786933'\n            description: Ingests order data\n            end_time: 1629989930171\n            execution_duration: 0\n            job_cluster_key: auto_scaling_cluster\n            libraries:\n            - jar: dbfs:/mnt/databricks/OrderIngest.jar\n            run_id: 2112892\n            run_page_url: https://my-workspace.cloud.databricks.com/#job/39832/run/20\n            setup_duration: 0\n            spark_jar_task:\n              main_class_name: com.databricks.OrdersIngest\n              run_as_repl: true\n            start_time: 1629989929660\n            state:\n              life_cycle_state: INTERNAL_ERROR\n              result_state: FAILED\n              state_message: 'Library installation failed for library due to user\n                error. Error messages:\n\n                ''Manage'' permissions are required to install libraries on a cluster'\n              user_cancelled_or_timedout: false\n            task_key: Orders_Ingest\n          - attempt_number: 0\n            cleanup_duration: 0\n            cluster_instance:\n              cluster_id: 0923-164208-meows279\n            depends_on:\n            - task_key: Orders_Ingest\n            - task_key: Sessionize\n            description: Matches orders with user sessions\n            end_time: 1629989930238\n            execution_duration: 0\n            new_cluster:\n              autoscale:\n                max_workers: 16\n                min_workers: 2\n              aws_attributes:\n                availability: SPOT\n                zone_id: us-west-2a\n              node_type_id: i3.xlarge\n              spark_conf:\n                spark.speculation: true\n              spark_version: 7.3.x-scala2.12\n            notebook_task:\n              notebook_path: /Users/user.name@databricks.com/Match\n              source: WORKSPACE\n            run_id: 2112897\n            run_page_url: https://my-workspace.cloud.databricks.com/#job/39832/run/21\n            setup_duration: 0\n            start_time: 0\n            state:\n              life_cycle_state: SKIPPED\n              state_message: An upstream task failed.\n              user_cancelled_or_timedout: false\n            task_key: Match\n          - attempt_number: 0\n            cleanup_duration: 0\n            cluster_instance:\n              cluster_id: 0923-164208-meows279\n              spark_context_id: '4348585301701786933'\n            description: Extracts session data from events\n            end_time: 1629989930144\n            execution_duration: 0\n            existing_cluster_id: 0923-164208-meows279\n            libraries:\n            - jar: dbfs:/mnt/databricks/Sessionize.jar\n            run_id: 2112902\n            run_page_url: https://my-workspace.cloud.databricks.com/#job/39832/run/22\n            setup_duration: 0\n            spark_jar_task:\n              main_class_name: com.databricks.Sessionize\n              run_as_repl: true\n            start_time: 1629989929668\n            state:\n              life_cycle_state: INTERNAL_ERROR\n              result_state: FAILED\n              state_message: 'Library installation failed for library due to user\n                error. Error messages:\n\n                ''Manage'' permissions are required to install libraries on a cluster'\n              user_cancelled_or_timedout: false\n            task_key: Sessionize\n          items:\n            $ref: '#/components/schemas/RunTask'\n          maxItems: 100\n          type: array\n        trigger:\n          $ref: '#/components/schemas/TriggerType'\n          description: The type of trigger that fired this run.\n    RunLifeCycleState:\n      description: '* `PENDING`: The run has been triggered. If there is not already\n        an active run of the same job, the cluster and execution context are being\n        prepared. If there is already an active run of the same job, the run immediately\n        transitions into the `SKIPPED` state without preparing any resources.\n\n        * `RUNNING`: The task of this run is being executed.\n\n        * `TERMINATING`: The task of this run has completed, and the cluster and execution\n        context are being cleaned up.\n\n        * `TERMINATED`: The task of this run has completed, and the cluster and execution\n        context have been cleaned up. This state is terminal.\n\n        * `SKIPPED`: This run was aborted because a previous run of the same job was\n        already active. This state is terminal.\n\n        * `INTERNAL_ERROR`: An exceptional state that indicates a failure in the Jobs\n        service, such as network failure over a long period. If a run on a new cluster\n        ends in the `INTERNAL_ERROR` state, the Jobs service terminates the cluster\n        as soon as possible. This state is terminal.'\n      enum:\n      - TERMINATED\n      - PENDING\n      - RUNNING\n      - TERMINATING\n      - SKIPPED\n      - INTERNAL_ERROR\n      type: string\n    RunNowInput:\n      properties:\n        idempotency_token:\n          description: 'An optional token to guarantee the idempotency of job run\n            requests. If a run with the provided token already exists, the request\n            does not create a new run but returns the ID of the existing run instead.\n            If a run with the provided token is deleted, an error is returned.\n\n\n            If you specify the idempotency token, upon failure you can retry until\n            the request succeeds. Databricks guarantees that exactly one run is launched\n            with that idempotency token.\n\n\n            This token must have at most 64 characters.\n\n\n            For more information, see [How to ensure idempotency for jobs](https://kb.databricks.com/jobs/jobs-idempotency.html).'\n          example: 8f018174-4792-40d5-bcbc-3e6a527352c8\n          type: string\n        job_id:\n          description: The ID of the job to be executed\n          example: 11223344\n          format: int64\n          type: integer\n      type: object\n    RunParameters:\n      properties:\n        dbt_commands:\n          description: 'An array of commands to execute for jobs with the dbt task,\n            for example `\"dbt_commands\": [\"dbt deps\", \"dbt seed\", \"dbt run\"]`'\n          example:\n          - dbt deps\n          - dbt seed\n          - dbt run\n          type: array\n        jar_params:\n          description: 'A list of parameters for jobs with Spark JAR tasks, for example\n            `\"jar_params\": [\"john doe\", \"35\"]`. The parameters are used to invoke\n            the main function of the main class specified in the Spark JAR task. If\n            not specified upon `run-now`, it defaults to an empty list. jar_params\n            cannot be specified in conjunction with notebook_params. The JSON representation\n            of this field (for example `{\"jar_params\":[\"john doe\",\"35\"]}`) cannot\n            exceed 10,000 bytes.\n\n\n            Use [Task parameter variables](https://docs.databricks.com/jobs.html#parameter-variables)\n            to set parameters containing information about job runs.'\n          example:\n          - john\n          - doe\n          - '35'\n          items:\n            type: string\n          type: array\n        notebook_params:\n          additionalProperties: true\n          description: \"A map from keys to values for jobs with notebook task, for\\\n            \\ example `\\\"notebook_params\\\": {\\\"name\\\": \\\"john doe\\\", \\\"age\\\": \\\"35\\\"\\\n            }`. The map is passed to the notebook and is accessible through the [dbutils.widgets.get](https://docs.databricks.com/dev-tools/databricks-utils.html#dbutils-widgets)\\\n            \\ function.\\n\\nIf not specified upon `run-now`, the triggered run uses\\\n            \\ the job\\u2019s base parameters.\\n\\nnotebook_params cannot be specified\\\n            \\ in conjunction with jar_params.\\n\\nUse [Task parameter variables](https://docs.databricks.com/jobs.html#parameter-variables)\\\n            \\ to set parameters containing information about job runs.\\n\\nThe JSON\\\n            \\ representation of this field (for example `{\\\"notebook_params\\\":{\\\"\\\n            name\\\":\\\"john doe\\\",\\\"age\\\":\\\"35\\\"}}`) cannot exceed 10,000 bytes.\"\n          example:\n            age: '35'\n            name: john doe\n          type: object\n        pipeline_params:\n          properties:\n            full_refresh:\n              description: If true, triggers a full refresh on the delta live table.\n              type: boolean\n        python_named_params:\n          description: 'A map from keys to values for jobs with Python wheel task,\n            for example `\"python_named_params\": {\"name\": \"task\", \"data\": \"dbfs:/path/to/data.json\"}`.'\n          example:\n            data: dbfs:/path/to/data.json\n            name: task\n          type: object\n        python_params:\n          description: 'A list of parameters for jobs with Python tasks, for example\n            `\"python_params\": [\"john doe\", \"35\"]`. The parameters are passed to Python\n            file as command-line parameters. If specified upon `run-now`, it would\n            overwrite the parameters specified in job setting. The JSON representation\n            of this field (for example `{\"python_params\":[\"john doe\",\"35\"]}`) cannot\n            exceed 10,000 bytes.\n\n\n            Use [Task parameter variables](https://docs.databricks.com/jobs.html#parameter-variables)\n            to set parameters containing information about job runs.\n\n\n            Important\n\n\n            These parameters accept only Latin characters (ASCII character set). Using\n            non-ASCII characters returns an error. Examples of invalid, non-ASCII\n            characters are Chinese, Japanese kanjis, and emojis.'\n          example:\n          - john doe\n          - '35'\n          items:\n            type: string\n          type: array\n        spark_submit_params:\n          description: 'A list of parameters for jobs with spark submit task, for\n            example `\"spark_submit_params\": [\"--class\", \"org.apache.spark.examples.SparkPi\"]`.\n            The parameters are passed to spark-submit script as command-line parameters.\n            If specified upon `run-now`, it would overwrite the parameters specified\n            in job setting. The JSON representation of this field (for example `{\"python_params\":[\"john\n            doe\",\"35\"]}`) cannot exceed 10,000 bytes.\n\n\n            Use [Task parameter variables](https://docs.databricks.com/jobs.html#parameter-variables)\n            to set parameters containing information about job runs.\n\n\n            Important\n\n\n            These parameters accept only Latin characters (ASCII character set). Using\n            non-ASCII characters returns an error. Examples of invalid, non-ASCII\n            characters are Chinese, Japanese kanjis, and emojis.'\n          example:\n          - --class\n          - org.apache.spark.examples.SparkPi\n          items:\n            type: string\n          type: array\n        sql_params:\n          description: 'A map from keys to values for SQL tasks, for example `\"sql_params\":\n            {\"name\": \"john doe\", \"age\": \"35\"}`. The SQL alert task does not support\n            custom parameters.'\n          example:\n            age: '35'\n            name: john doe\n          type: object\n    RunResultState:\n      description: '* `SUCCESS`: The task completed successfully.\n\n        * `FAILED`: The task completed with an error.\n\n        * `TIMEDOUT`: The run was stopped after reaching the timeout.\n\n        * `CANCELED`: The run was canceled at user request.'\n      enum:\n      - SUCCESS\n      - FAILED\n      - TIMEDOUT\n      - CANCELED\n      type: string\n    RunState:\n      description: The result and lifecycle state of the run.\n      properties:\n        life_cycle_state:\n          $ref: '#/components/schemas/RunLifeCycleState'\n          description: \"A description of a run\\u2019s current location in the run\\\n            \\ lifecycle. This field is always available in the response.\"\n        result_state:\n          $ref: '#/components/schemas/RunResultState'\n        state_message:\n          description: A descriptive message for the current state. This field is\n            unstructured, and its exact format is subject to change.\n          example: ''\n          type: string\n        user_cancelled_or_timedout:\n          description: Whether a run was canceled manually by a user or by the scheduler\n            because the run timed out.\n          example: false\n          type: boolean\n    RunSubmitSettings:\n      properties:\n        git_source:\n          $ref: '#/components/schemas/GitSource'\n          description: 'This functionality is in Public Preview.\n\n\n            An optional specification for a remote repository containing the notebooks\n            used by this job''s notebook tasks.'\n          example:\n            git_branch: main\n            git_provider: gitHub\n            git_url: https://github.com/databricks/databricks-cli\n        idempotency_token:\n          description: 'An optional token that can be used to guarantee the idempotency\n            of job run requests. If a run with the provided token already exists,\n            the request does not create a new run but returns the ID of the existing\n            run instead. If a run with the provided token is deleted, an error is\n            returned.\n\n\n            If you specify the idempotency token, upon failure you can retry until\n            the request succeeds. Databricks guarantees that exactly one run is launched\n            with that idempotency token.\n\n\n            This token must have at most 64 characters.\n\n\n            For more information, see [How to ensure idempotency for jobs](https://kb.databricks.com/jobs/jobs-idempotency.html).'\n          example: 8f018174-4792-40d5-bcbc-3e6a527352c8\n          type: string\n        run_name:\n          description: An optional name for the run. The default value is `Untitled`.\n          example: A multitask job run\n          type: string\n        tasks:\n          example:\n          - depends_on: []\n            description: Extracts session data from events\n            existing_cluster_id: 0923-164208-meows279\n            libraries:\n            - jar: dbfs:/mnt/databricks/Sessionize.jar\n            spark_jar_task:\n              main_class_name: com.databricks.Sessionize\n              parameters:\n              - --data\n              - dbfs:/path/to/data.json\n            task_key: Sessionize\n            timeout_seconds: 86400\n          - depends_on: []\n            description: Ingests order data\n            existing_cluster_id: 0923-164208-meows279\n            libraries:\n            - jar: dbfs:/mnt/databricks/OrderIngest.jar\n            spark_jar_task:\n              main_class_name: com.databricks.OrdersIngest\n              parameters:\n              - --data\n              - dbfs:/path/to/order-data.json\n            task_key: Orders_Ingest\n            timeout_seconds: 86400\n          - depends_on:\n            - task_key: Orders_Ingest\n            - task_key: Sessionize\n            description: Matches orders with user sessions\n            new_cluster:\n              autoscale:\n                max_workers: 16\n                min_workers: 2\n              aws_attributes:\n                availability: SPOT\n                zone_id: us-west-2a\n              node_type_id: i3.xlarge\n              spark_conf:\n                spark.speculation: true\n              spark_version: 7.3.x-scala2.12\n            notebook_task:\n              base_parameters:\n                age: '35'\n                name: John Doe\n              notebook_path: /Users/user.name@databricks.com/Match\n              source: WORKSPACE\n            task_key: Match\n            timeout_seconds: 86400\n          items:\n            $ref: '#/components/schemas/RunSubmitTaskSettings'\n          maxItems: 100\n          type: array\n        timeout_seconds:\n          description: An optional timeout applied to each run of this job. The default\n            behavior is to have no timeout.\n          example: 86400\n          format: int32\n          type: integer\n      type: object\n    RunSubmitTaskSettings:\n      properties:\n        depends_on:\n          $ref: '#/components/schemas/TaskDependencies'\n        existing_cluster_id:\n          description: If existing_cluster_id, the ID of an existing cluster that\n            is used for all runs of this task. When running tasks on an existing cluster,\n            you may need to manually restart the cluster if it stops responding. We\n            suggest running jobs on new clusters for greater reliability.\n          example: 0923-164208-meows279\n          type: string\n        libraries:\n          description: An optional list of libraries to be installed on the cluster\n            that executes the task. The default value is an empty list.\n          items:\n            $ref: '#/components/schemas/Library'\n          type: array\n        new_cluster:\n          $ref: '#/components/schemas/NewCluster'\n          description: If new_cluster, a description of a cluster that is created\n            for each run.\n          example: null\n        notebook_task:\n          $ref: '#/components/schemas/NotebookTask'\n          description: If notebook_task, indicates that this task must run a notebook.\n            This field may not be specified in conjunction with spark_jar_task.\n        pipeline_task:\n          $ref: '#/components/schemas/PipelineTask'\n          description: If pipeline_task, indicates that this task must execute a Pipeline.\n        python_wheel_task:\n          $ref: '#/components/schemas/PythonWheelTask'\n          description: If python_wheel_task, indicates that this job must execute\n            a PythonWheel.\n        spark_jar_task:\n          $ref: '#/components/schemas/SparkJarTask'\n          description: If spark_jar_task, indicates that this task must run a JAR.\n        spark_python_task:\n          $ref: '#/components/schemas/SparkPythonTask'\n          description: If spark_python_task, indicates that this task must run a Python\n            file.\n        spark_submit_task:\n          $ref: '#/components/schemas/SparkSubmitTask'\n          description: If spark_submit_task, indicates that this task must be launched\n            by the spark submit script.\n        sql_task:\n          $ref: '#/components/schemas/SqlTask'\n          description: If sql_task, indicates that this job must execute a SQL task.\n            It requires both Databricks SQL and a Serverless SQL warehouse.\n        task_key:\n          $ref: '#/components/schemas/TaskKey'\n        timeout_seconds:\n          description: An optional timeout applied to each run of this job task. The\n            default behavior is to have no timeout.\n          example: 86400\n          format: int32\n          type: integer\n      required:\n      - task_key\n    RunTask:\n      properties:\n        attempt_number:\n          description: \"The sequence number of this run attempt for a triggered job\\\n            \\ run. The initial attempt of a run has an attempt_number of 0\\\\. If the\\\n            \\ initial run attempt fails, and the job has a retry policy (`max_retries`\\\n            \\ \\\\\u003e 0), subsequent runs are created with an `original_attempt_run_id`\\\n            \\ of the original attempt\\u2019s ID and an incrementing `attempt_number`.\\\n            \\ Runs are retried only until they succeed, and the maximum `attempt_number`\\\n            \\ is the same as the `max_retries` value for the job.\"\n          example: 0\n          format: int32\n          type: integer\n        cleanup_duration:\n          description: The time in milliseconds it took to terminate the cluster and\n            clean up any associated artifacts. The total duration of the run is the\n            sum of the setup_duration, the execution_duration, and the cleanup_duration.\n          example: 0\n          format: int64\n          type: integer\n        cluster_instance:\n          $ref: '#/components/schemas/ClusterInstance'\n          description: The cluster used for this run. If the run is specified to use\n            a new cluster, this field is set once the Jobs service has requested a\n            cluster for the run.\n        dbt_task:\n          $ref: '#/components/schemas/DbtTask'\n          description: If dbt_task, indicates that this must execute a dbt task. It\n            requires both Databricks SQL and the ability to use a Serverless SQL warehouse.\n        depends_on:\n          $ref: '#/components/schemas/TaskDependencies'\n        description:\n          $ref: '#/components/schemas/TaskDescription'\n        end_time:\n          description: The time at which this run ended in epoch milliseconds (milliseconds\n            since 1/1/1970 UTC). This field is set to 0 if the job is still running.\n          example: 1625060863413\n          format: int64\n          type: integer\n        execution_duration:\n          description: The time in milliseconds it took to execute the commands in\n            the JAR or notebook until they completed, failed, timed out, were cancelled,\n            or encountered an unexpected error.\n          example: 0\n          format: int64\n          type: integer\n        existing_cluster_id:\n          description: If existing_cluster_id, the ID of an existing cluster that\n            is used for all runs of this job. When running jobs on an existing cluster,\n            you may need to manually restart the cluster if it stops responding. We\n            suggest running jobs on new clusters for greater reliability.\n          type: string\n        git_source:\n          $ref: '#/components/schemas/GitSource'\n          description: 'This functionality is in Public Preview.\n\n\n            An optional specification for a remote repository containing the notebooks\n            used by this job''s notebook tasks.'\n          example:\n            git_branch: main\n            git_provider: gitHub\n            git_url: https://github.com/databricks/databricks-cli\n        libraries:\n          description: An optional list of libraries to be installed on the cluster\n            that executes the job. The default value is an empty list.\n          items:\n            $ref: '#/components/schemas/Library'\n          type: array\n        new_cluster:\n          $ref: '#/components/schemas/NewCluster'\n          description: If new_cluster, a description of a cluster that is created\n            for each run.\n          example: null\n        notebook_task:\n          $ref: '#/components/schemas/NotebookTask'\n          description: If notebook_task, indicates that this job must run a notebook.\n            This field may not be specified in conjunction with spark_jar_task.\n        pipeline_task:\n          $ref: '#/components/schemas/PipelineTask'\n          description: If pipeline_task, indicates that this job must execute a Pipeline.\n        python_wheel_task:\n          $ref: '#/components/schemas/PythonWheelTask'\n          description: If python_wheel_task, indicates that this job must execute\n            a PythonWheel.\n        run_id:\n          description: The ID of the task run.\n          example: 99887766\n          format: int64\n          type: integer\n        setup_duration:\n          description: The time it took to set up the cluster in milliseconds. For\n            runs that run on new clusters this is the cluster creation time, for runs\n            that run on existing clusters this time should be very short.\n          example: 0\n          format: int64\n          type: integer\n        spark_jar_task:\n          $ref: '#/components/schemas/SparkJarTask'\n          description: If spark_jar_task, indicates that this job must run a JAR.\n        spark_python_task:\n          $ref: '#/components/schemas/SparkPythonTask'\n          description: If spark_python_task, indicates that this job must run a Python\n            file.\n        spark_submit_task:\n          $ref: '#/components/schemas/SparkSubmitTask'\n          description: If spark_submit_task, indicates that this job must be launched\n            by the spark submit script.\n        sql_task:\n          $ref: '#/components/schemas/SqlTask'\n          description: If sql_task, indicates that this job must execute a SQL task.\n            It requires both Databricks SQL and a Serverless SQL warehouse.\n        start_time:\n          description: The time at which this run was started in epoch milliseconds\n            (milliseconds since 1/1/1970 UTC). This may not be the time when the job\n            task starts executing, for example, if the job is scheduled to run on\n            a new cluster, this is the time the cluster creation call is issued.\n          example: 1625060460483\n          format: int64\n          type: integer\n        state:\n          $ref: '#/components/schemas/RunState'\n          description: The result and lifecycle states of the run.\n        task_key:\n          $ref: '#/components/schemas/TaskKey'\n    RunType:\n      description: \"The type of the run.\\n* `JOB_RUN` \\\\- Normal job run. A run created\\\n        \\ with [Run now](https://docs.databricks.com/dev-tools/api/latest/jobs.html#operation/JobsRunNow).\\\n        \\  \\n* `WORKFLOW_RUN` \\\\- Workflow run. A run created with [dbutils.notebook.run](https://docs.databricks.com/dev-tools/databricks-utils.html#dbutils-workflow).\\n\\\n        * `SUBMIT_RUN` \\\\- Submit run. A run created with [Run now](https://docs.databricks.com/dev-tools/api/latest/jobs.html#operation/JobsRunNow).\"\n      enum:\n      - JOB_RUN\n      - WORKFLOW_RUN\n      - SUBMIT_RUN\n      example: JOB_RUN\n      type: string\n    S3StorageInfo:\n      properties:\n        canned_acl:\n          description: '(Optional) Set canned access control list. For example: `bucket-owner-full-control`.\n            If canned_acl is set, the cluster instance profile must have `s3:PutObjectAcl`\n            permission on the destination bucket and prefix. The full list of possible\n            canned ACLs can be found at \u003chttps://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl\u003e.\n            By default only the object owner gets full control. If you are using cross\n            account role for writing data, you may want to set `bucket-owner-full-control`\n            to make bucket owner able to read the logs.'\n          type: string\n        destination:\n          description: 'S3 destination. For example: `s3://my-bucket/some-prefix`\n            You must configure the cluster with an instance profile and the instance\n            profile must have write access to the destination. You _cannot_ use AWS\n            keys.'\n          type: string\n        enable_encryption:\n          description: (Optional)Enable server side encryption, `false` by default.\n          type: boolean\n        encryption_type:\n          description: (Optional) The encryption type, it could be `sse-s3` or `sse-kms`.\n            It is used only when encryption is enabled and the default type is `sse-s3`.\n          type: string\n        endpoint:\n          description: 'S3 endpoint. For example: `https://s3-us-west-2.amazonaws.com`.\n            Either region or endpoint must be set. If both are set, endpoint is used.'\n          type: string\n        kms_key:\n          description: (Optional) KMS key used if encryption is enabled and encryption\n            type is set to `sse-kms`.\n          type: string\n        region:\n          description: 'S3 region. For example: `us-west-2`. Either region or endpoint\n            must be set. If both are set, endpoint is used.'\n          type: string\n    ServicePrincipalName:\n      description: Name of an Azure service principal.\n      example: 9f0621ee-b52b-11ea-b3de-0242ac130004\n      type: string\n    SparkConfPair:\n      additionalProperties: true\n      description: An arbitrary object where the object key is a configuration propery\n        name and the value is a configuration property value.\n      type: object\n    SparkEnvPair:\n      additionalProperties: true\n      description: An arbitrary object where the object key is an environment variable\n        name and the value is an environment variable value.\n      type: object\n    SparkJarTask:\n      properties:\n        jar_uri:\n          deprecated: true\n          description: Deprecated since 04/2016\\. Provide a `jar` through the `libraries`\n            field instead. For an example, see [Create](https://docs.databricks.com/dev-tools/api/latest/jobs.html#operation/JobsCreate).\n          type: string\n        main_class_name:\n          description: 'The full name of the class containing the main method to be\n            executed. This class must be contained in a JAR provided as a library.\n\n\n            The code must use `SparkContext.getOrCreate` to obtain a Spark context;\n            otherwise, runs of the job fail.'\n          example: com.databricks.ComputeModels\n          type: string\n        parameters:\n          description: 'Parameters passed to the main method.\n\n\n            Use [Task parameter variables](https://docs.databricks.com/jobs.html#parameter-variables)\n            to set parameters containing information about job runs.'\n          example:\n          - --data\n          - dbfs:/path/to/data.json\n          items:\n            type: string\n          type: array\n    SparkNode:\n      properties:\n        host_private_ip:\n          description: The private IP address of the host instance.\n          type: string\n        instance_id:\n          description: Globally unique identifier for the host instance from the cloud\n            provider.\n          type: string\n        node_aws_attributes:\n          $ref: '#/components/schemas/SparkNodeAwsAttributes'\n          description: Attributes specific to AWS for a Spark node.\n        node_id:\n          description: Globally unique identifier for this node.\n          type: string\n        private_ip:\n          description: Private IP address (typically a 10.x.x.x address) of the Spark\n            node. This is different from the private IP address of the host instance.\n          type: string\n        public_dns:\n          description: \"Public DNS address of this node. This address can be used\\\n            \\ to access the Spark JDBC server on the driver node. To communicate with\\\n            \\ the JDBC server, traffic must be manually authorized by adding security\\\n            \\ group rules to the \\u201Cworker-unmanaged\\u201D security group via the\\\n            \\ AWS console.\"\n          type: string\n        start_timestamp:\n          description: The timestamp (in millisecond) when the Spark node is launched.\n          format: int64\n          type: integer\n    SparkNodeAwsAttributes:\n      properties:\n        is_spot:\n          description: Whether this node is on an Amazon spot instance.\n          type: boolean\n    SparkPythonTask:\n      properties:\n        parameters:\n          description: 'Command line parameters passed to the Python file.\n\n\n            Use [Task parameter variables](https://docs.databricks.com/jobs.html#parameter-variables)\n            to set parameters containing information about job runs.'\n          example:\n          - --data\n          - dbfs:/path/to/data.json\n          items:\n            type: string\n          type: array\n        python_file:\n          description: The Python file to be executed. Cloud file URIs (such as dbfs:/,\n            s3:/, adls:/, gcs:/) and workspace paths are supported. For python files\n            stored in the Databricks workspace, the path must be absolute and begin\n            with `/Repos`. This field is required.\n          example: dbfs:/path/to/file.py\n          type: string\n      required:\n      - python_file\n    SparkSubmitTask:\n      properties:\n        parameters:\n          description: 'Command-line parameters passed to spark submit.\n\n\n            Use [Task parameter variables](https://docs.databricks.com/jobs.html#parameter-variables)\n            to set parameters containing information about job runs.'\n          example:\n          - --class\n          - org.apache.spark.examples.SparkPi\n          - dbfs:/path/to/examples.jar\n          - '10'\n          items:\n            type: string\n          type: array\n    SparkVersion:\n      properties:\n        key:\n          description: \"[Databricks Runtime version](https://docs.databricks.com/dev-tools/api/latest/index.html#programmatic-version)\\\n            \\ key, for example `7.3.x-scala2.12`. The value that must be provided\\\n            \\ as the `spark_version` when creating a new cluster. The exact runtime\\\n            \\ version may change over time for a \\u201Cwildcard\\u201D version (that\\\n            \\ is, `7.3.x-scala2.12` is a \\u201Cwildcard\\u201D version) with minor\\\n            \\ bug fixes.\"\n          type: string\n        name:\n          description: \"A descriptive name for the runtime version, for example \\u201C\\\n            Databricks Runtime 7.3 LTS\\u201D.\"\n          type: string\n    SqlAlertOutput:\n      properties:\n        output_link:\n          description: The link to find the output results.\n          type: string\n        query_text:\n          description: The text of the SQL query. Can Run permission of the SQL query\n            associated with the SQL alert is required to view this field.\n          type: string\n        sql_statements:\n          $ref: '#/components/schemas/SqlStatementOutput'\n          description: Information about SQL statements executed in the run.\n        warehouse_id:\n          description: The canonical identifier of the SQL warehouse.\n          type: string\n    SqlDashboardOutput:\n      properties:\n        widgets:\n          $ref: '#/components/schemas/SqlDashboardWidgetOutput'\n          description: Widgets executed in the run. Only SQL query based widgets are\n            listed.\n    SqlDashboardWidgetOutput:\n      properties:\n        end_time:\n          description: Time (in epoch milliseconds) when execution of the SQL widget\n            ends.\n          format: int64\n          type: integer\n        error:\n          $ref: '#/components/schemas/SqlOutputError'\n          description: The information about the error when execution fails.\n        output_link:\n          description: The link to find the output results.\n          type: string\n        start_time:\n          description: Time (in epoch milliseconds) when execution of the SQL widget\n            starts.\n          format: int64\n          type: integer\n        status:\n          description: The execution status of the SQL widget.\n          enum:\n          - PENDING\n          - RUNNING\n          - SUCCESS\n          - FAILED\n          - CANCELLED\n          type: string\n        widget_id:\n          description: The canonical identifier of the SQL widget.\n          type: string\n        widget_title:\n          description: The title of the SQL widget.\n          type: string\n    SqlOutput:\n      properties:\n        alert_output:\n          $ref: '#/components/schemas/SqlAlertOutput'\n          description: The output of a SQL alert task, if available.\n        dashboard_output:\n          $ref: '#/components/schemas/SqlDashboardOutput'\n          description: The output of a SQL dashboard task, if available.\n        query_output:\n          $ref: '#/components/schemas/SqlQueryOutput'\n          description: The output of a SQL query task, if available.\n    SqlOutputError:\n      properties:\n        message:\n          description: The error message when execution fails.\n          type: string\n    SqlQueryOutput:\n      properties:\n        output_link:\n          description: The link to find the output results.\n          type: string\n        query_text:\n          description: The text of the SQL query. Can Run permission of the SQL query\n            is required to view this field.\n          type: string\n        sql_statements:\n          $ref: '#/components/schemas/SqlStatementOutput'\n          description: Information about SQL statements executed in the run.\n        warehouse_id:\n          description: The canonical identifier of the SQL warehouse.\n          type: string\n    SqlStatementOutput:\n      properties:\n        lookup_key:\n          description: A key that can be used to look up query details.\n          type: string\n    SqlTask:\n      properties:\n        alert:\n          $ref: '#/components/schemas/SqlTaskAlert'\n          description: If alert, indicates that this job must refresh a SQL alert.\n        dashboard:\n          $ref: '#/components/schemas/SqlTaskDashboard'\n          description: If dashboard, indicates that this job must refresh a SQL dashboard.\n        parameters:\n          description: Parameters to be used for each run of this job. The SQL alert\n            task does not support custom parameters.\n          example:\n            age: 35\n            name: John Doe\n          type: object\n        query:\n          $ref: '#/components/schemas/SqlTaskQuery'\n          description: If query, indicates that this job must execute a SQL query.\n        warehouse_id:\n          description: The canonical identifier of the SQL warehouse. Only serverless\n            warehouse is supported.\n          type: string\n      required:\n      - warehouse_id\n    SqlTaskAlert:\n      properties:\n        alert_id:\n          description: The canonical identifier of the SQL alert.\n          type: string\n      required:\n      - alert_id\n    SqlTaskDashboard:\n      properties:\n        dashboard_id:\n          description: The canonical identifier of the SQL dashboard.\n          type: string\n      required:\n      - dashboard_id\n    SqlTaskQuery:\n      properties:\n        query_id:\n          description: The canonical identifier of the SQL query.\n          type: string\n      required:\n      - query_id\n    TaskDependencies:\n      description: 'An optional array of objects specifying the dependency graph of\n        the task. All tasks specified in this field must complete successfully before\n        executing this task.\n\n        The key is `task_key`, and the value is the name assigned to the dependent\n        task.\n\n        This field is required when a job consists of more than one task.'\n      example:\n      - task_key: Previous_Task_Key\n      - task_key: Other_Task_Key\n      items:\n        properties:\n          task_key:\n            type: string\n        type: object\n      type: array\n    TaskDescription:\n      description: 'An optional description for this task.\n\n        The maximum length is 4096 bytes.'\n      example: This is the description for this task.\n      maxLength: 4096\n      type: string\n    TaskKey:\n      description: 'A unique name for the task. This field is used to refer to this\n        task from other tasks.\n\n        This field is required and must be unique within its parent job.\n\n        On Update or Reset, this field is used to reference the tasks to be updated\n        or reset.\n\n        The maximum length is 100 characters.'\n      example: Task_Key\n      maxLength: 100\n      minLength: 1\n      pattern: ^[\\w\\-]+$\n      type: string\n    TerminationCode:\n      description: \"* USER_REQUEST: A user terminated the cluster directly. Parameters\\\n        \\ should include a `username` field that indicates the specific user who terminated\\\n        \\ the cluster.\\n* JOB_FINISHED: The cluster was launched by a job, and terminated\\\n        \\ when the job completed.\\n* INACTIVITY: The cluster was terminated since\\\n        \\ it was idle.\\n* CLOUD_PROVIDER_SHUTDOWN: The instance that hosted the Spark\\\n        \\ driver was terminated by the cloud provider. In AWS, for example, AWS may\\\n        \\ retire instances and directly shut them down. Parameters should include\\\n        \\ an `aws_instance_state_reason` field indicating the AWS-provided reason\\\n        \\ why the instance was terminated.\\n* COMMUNICATION_LOST: Databricks lost\\\n        \\ connection to services on the driver instance. For example, this can happen\\\n        \\ when problems arise in cloud networking infrastructure, or when the instance\\\n        \\ itself becomes unhealthy.\\n* CLOUD_PROVIDER_LAUNCH_FAILURE: Databricks experienced\\\n        \\ a cloud provider failure when requesting instances to launch clusters. For\\\n        \\ example, AWS limits the number of running instances and EBS volumes. If\\\n        \\ you ask Databricks to launch a cluster that requires instances or EBS volumes\\\n        \\ that exceed your AWS limit, the cluster fails with this status code. Parameters\\\n        \\ should include one of `aws_api_error_code`, `aws_instance_state_reason`,\\\n        \\ or `aws_spot_request_status` to indicate the AWS-provided reason why Databricks\\\n        \\ could not request the required instances for the cluster.\\n* SPARK_STARTUP_FAILURE:\\\n        \\ The cluster failed to initialize. Possible reasons may include failure to\\\n        \\ create the environment for Spark or issues launching the Spark master and\\\n        \\ worker processes.\\n* INVALID_ARGUMENT: Cannot launch the cluster because\\\n        \\ the user specified an invalid argument. For example, the user might specify\\\n        \\ an invalid runtime version for the cluster.\\n* UNEXPECTED_LAUNCH_FAILURE:\\\n        \\ While launching this cluster, Databricks failed to complete critical setup\\\n        \\ steps, terminating the cluster.\\n* INTERNAL_ERROR: Databricks encountered\\\n        \\ an unexpected error that forced the running cluster to be terminated. Contact\\\n        \\ Databricks support for additional details.\\n* SPARK_ERROR: The Spark driver\\\n        \\ failed to start. Possible reasons may include incompatible libraries and\\\n        \\ initialization scripts that corrupted the Spark container.\\n* METASTORE_COMPONENT_UNHEALTHY:\\\n        \\ The cluster failed to start because the external metastore could not be\\\n        \\ reached. Refer to [Troubleshooting](https://docs.databricks.com/data/metastores/external-hive-metastore.html#troubleshooting).\\n\\\n        * DBFS_COMPONENT_UNHEALTHY: The cluster failed to start because Databricks\\\n        \\ File System (DBFS) could not be reached. \\n* DRIVER_UNREACHABLE: Databricks\\\n        \\ was not able to access the Spark driver, because it was not reachable.\\n\\\n        * DRIVER_UNRESPONSIVE: Databricks was not able to access the Spark driver,\\\n        \\ because it was unresponsive.\\n* INSTANCE_UNREACHABLE: Databricks was not\\\n        \\ able to access instances in order to start the cluster. This can be a transient\\\n        \\ networking issue. If the problem persists, this usually indicates a networking\\\n        \\ environment misconfiguration.\\n* CONTAINER_LAUNCH_FAILURE: Databricks was\\\n        \\ unable to launch containers on worker nodes for the cluster. Have your admin\\\n        \\ check your network configuration.\\n* INSTANCE_POOL_CLUSTER_FAILURE: Pool\\\n        \\ backed cluster specific failure. Refer to [Pools](https://docs.databricks.com/clusters/instance-pools/index.html)\\\n        \\ for details.\\n* REQUEST_REJECTED: Databricks cannot handle the request at\\\n        \\ this moment. Try again later and contact Databricks if the problem persists.\\n\\\n        * INIT_SCRIPT_FAILURE: Databricks cannot load and run a cluster-scoped init\\\n        \\ script on one of the cluster\\u2019s nodes, or the init script terminates\\\n        \\ with a non-zero exit code. Refer to [Init script logs](https://docs.databricks.com/clusters/init-scripts.html#init-script-log).\\n\\\n        * TRIAL_EXPIRED: The Databricks trial subscription expired.\"\n      enum:\n      - USER_REQUEST\n      - JOB_FINISHED\n      - INACTIVITY\n      - CLOUD_PROVIDER_SHUTDOWN\n      - COMMUNICATION_LOST\n      - CLOUD_PROVIDER_LAUNCH_FAILURE\n      - SPARK_STARTUP_FAILURE\n      - INVALID_ARGUMENT\n      - UNEXPECTED_LAUNCH_FAILURE\n      - INTERNAL_ERROR\n      - SPARK_ERROR\n      - METASTORE_COMPONENT_UNHEALTHY\n      - DBFS_COMPONENT_UNHEALTHY\n      - DRIVER_UNREACHABLE\n      - DRIVER_UNRESPONSIVE\n      - INSTANCE_UNREACHABLE\n      - CONTAINER_LAUNCH_FAILURE\n      - INSTANCE_POOL_CLUSTER_FAILURE\n      - REQUEST_REJECTED\n      - INIT_SCRIPT_FAILURE\n      - TRIAL_EXPIRED\n      type: string\n    TerminationParameter:\n      properties:\n        aws_api_error_code:\n          description: 'The AWS provided error code describing why cluster nodes could\n            not be provisioned. For example, `InstanceLimitExceeded` indicates that\n            the limit of EC2 instances for a specific instance type has been exceeded.\n            For reference, see: \u003chttps://docs.aws.amazon.com/AWSEC2/latest/APIReference/query-api-troubleshooting.html\u003e.'\n          type: string\n        aws_error_message:\n          description: Human-readable context of various failures from AWS. This field\n            is unstructured, and its exact format is subject to change.\n          type: string\n        aws_impaired_status_details:\n          description: The AWS provided status check which failed and induced a node\n            loss. This status may correspond to a failed instance or system check.\n            For reference, see \u003chttps://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-system-instance-status-check.html\u003e.\n          type: string\n        aws_instance_state_reason:\n          description: The AWS provided state reason describing why the driver node\n            was terminated. For example, `Client.VolumeLimitExceeded` indicates that\n            the limit of EBS volumes or total EBS volume storage has been exceeded.\n            For reference, see \u003chttps://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_StateReason.html\u003e.\n          type: string\n        aws_instance_status_event:\n          description: The AWS provided scheduled event (for example reboot) which\n            induced a node loss. For reference, see \u003chttps://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-instances-status-check_sched.html\u003e.\n          type: string\n        aws_spot_request_fault_code:\n          description: Provides additional details when a spot request fails. For\n            example `InsufficientFreeAddressesInSubnet` indicates the subnet does\n            not have free IP addresses to accommodate the new instance. For reference,\n            see \u003chttps://docs.aws.amazon.com/cli/latest/reference/ec2/describe-spot-instance-requests.html\u003e.\n          type: string\n        aws_spot_request_status:\n          description: 'Describes why a spot request could not be fulfilled. For example,\n            `price-too-low` indicates that the max price was lower than the current\n            spot price. For reference, see: \u003chttps://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-bid-status.html#spot-instance-bid-status-understand\u003e.'\n          type: string\n        databricks_error_message:\n          description: Additional context that may explain the reason for cluster\n            termination. This field is unstructured, and its exact format is subject\n            to change.\n          type: string\n        inactivity_duration_min:\n          description: An idle cluster was shut down after being inactive for this\n            duration.\n          type: string\n        instance_id:\n          description: The ID of the instance that was hosting the Spark driver.\n          type: string\n        instance_pool_error_code:\n          description: The [error code](https://docs.databricks.com/dev-tools/api/latest/clusters.html#clusterterminationreasonpoolclusterterminationcode)\n            for cluster failures specific to a pool.\n          type: string\n        instance_pool_id:\n          description: The ID of the instance pool the cluster is using.\n          type: string\n        username:\n          description: The username of the user who terminated the cluster.\n          type: string\n    TerminationReason:\n      properties:\n        code:\n          $ref: '#/components/schemas/TerminationCode'\n          description: Status code indicating why a cluster was terminated.\n        parameters:\n          $ref: '#/components/schemas/ParameterPair'\n          description: Object containing a set of parameters that provide information\n            about why a cluster was terminated.\n        type:\n          $ref: '#/components/schemas/TerminationType'\n          description: Reason indicating why a cluster was terminated.\n    TerminationType:\n      description: '* SUCCESS: Termination succeeded.\n\n        * CLIENT_ERROR: Non-retriable. Client must fix parameters before reattempting\n        the cluster creation.\n\n        * SERVICE_FAULT: Databricks service issue. Client can retry.\n\n        * CLOUD_FAILURECloud provider infrastructure issue. Client can retry after\n        the underlying issue is resolved.\n\n        '\n      enum:\n      - SUCCESS\n      - CLIENT_ERROR\n      - SERVICE_FAULT\n      - CLOUD_FAILURE\n      type: string\n    TriggerType:\n      description: '* `PERIODIC`: Schedules that periodically trigger runs, such as\n        a cron scheduler.\n\n        * `ONE_TIME`: One time triggers that fire a single run. This occurs you triggered\n        a single run on demand through the UI or the API.\n\n        * `RETRY`: Indicates a run that is triggered as a retry of a previously failed\n        run. This occurs when you request to re-run the job in case of failures.'\n      enum:\n      - PERIODIC\n      - ONE_TIME\n      - RETRY\n      type: string\n    UserName:\n      description: Email address for the user.\n      example: jsmith@example.com\n      type: string\n    ViewItem:\n      properties:\n        content:\n          description: Content of the view.\n          type: string\n        name:\n          description: \"Name of the view item. In the case of code view, it would\\\n            \\ be the notebook\\u2019s name. In the case of dashboard view, it would\\\n            \\ be the dashboard\\u2019s name.\"\n          type: string\n        type:\n          $ref: '#/components/schemas/ViewType'\n          description: Type of the view item.\n    ViewType:\n      description: '* `NOTEBOOK`: Notebook view item.\n\n        * `DASHBOARD`: Dashboard view item.'\n      enum:\n      - NOTEBOOK\n      - DASHBOARD\n      type: string\n    ViewsToExport:\n      default: CODE\n      description: '* `CODE`: Code view of the notebook.\n\n        * `DASHBOARDS`: All dashboard views of the notebook.\n\n        * `ALL`: All views of the notebook.'\n      enum:\n      - CODE\n      - DASHBOARDS\n      - ALL\n      type: string\n  securitySchemes:\n    bearerAuth:\n      bearerFormat: api_token\n      scheme: bearer\n      type: http\ninfo:\n  description: 'The Jobs API allows you to create, edit, and delete jobs.\n\n    You should never hard code secrets or store them in plain text. Use the [Secrets\n    API](https://docs.databricks.com/dev-tools/api/latest/secrets.html) to manage\n    secrets in the [Databricks CLI](https://docs.databricks.com/dev-tools/cli/index.html).\n    Use the [Secrets utility](https://docs.databricks.com/dev-tools/databricks-utils.html#dbutils-secrets)\n    to reference secrets in notebooks and jobs.'\n  title: Jobs API 2.1\n  version: '2.1'\nopenapi: 3.0.0\npaths:\n  /2.0/jobs/runs/export:\n    get:\n      description: Export and retrieve the job run task.\n      operationId: JobsRunsExport\n      parameters:\n      - description: The canonical identifier for the run. This field is required.\n        in: query\n        name: run_id\n        required: true\n        schema:\n          example: 455644833\n          format: int64\n          type: integer\n      - description: Which views to export (CODE, DASHBOARDS, or ALL). Defaults to\n          CODE.\n        in: query\n        name: views_to_export\n        schema:\n          $ref: '#/components/schemas/ViewsToExport'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                properties:\n                  views:\n                    description: The exported content in HTML format (one for every\n                      view item).\n                    items:\n                      $ref: '#/components/schemas/ViewItem'\n                    type: array\n                type: object\n          description: Run was exported successfully.\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/InternalError'\n      security:\n      - bearerAuth: []\n      summary: Export and retrieve a job run\n  /2.1/jobs/create:\n    post:\n      description: Create a new job.\n      operationId: JobsCreate\n      requestBody:\n        content:\n          application/json:\n            schema:\n              allOf:\n              - $ref: '#/components/schemas/JobSettings'\n              - $ref: '#/components/schemas/AccessControlList'\n        required:\n        - true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                properties:\n                  job_id:\n                    description: The canonical identifier for the newly created job.\n                    example: 11223344\n                    format: int64\n                    type: integer\n                type: object\n          description: Job was created successfully\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/InternalError'\n      security:\n      - bearerAuth: []\n      summary: Create a new job\n  /2.1/jobs/delete:\n    post:\n      description: Deletes a job.\n      operationId: JobsDelete\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                job_id:\n                  description: The canonical identifier of the job to delete. This\n                    field is required.\n                  example: 11223344\n                  format: int64\n                  type: integer\n              required:\n              - job_id\n              type: object\n        required:\n        - true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                properties: {}\n                type: object\n          description: Job was deleted successfully.\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/InternalError'\n      security:\n      - bearerAuth: []\n      summary: Delete a job\n  /2.1/jobs/get:\n    get:\n      description: Retrieves the details for a single job.\n      operationId: JobsGet\n      parameters:\n      - description: The canonical identifier of the job to retrieve information about.\n          This field is required.\n        in: query\n        name: job_id\n        required: true\n        schema:\n          example: 11223344\n          format: int64\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                properties:\n                  created_time:\n                    description: The time at which this job was created in epoch milliseconds\n                      (milliseconds since 1/1/1970 UTC).\n                    example: 1601370337343\n                    format: int64\n                    type: integer\n                  creator_user_name:\n                    description: \"The creator user name. This field won\\u2019t be\\\n                      \\ included in the response if the user has been deleted.\"\n                    example: user.name@databricks.com\n                    type: string\n                  job_id:\n                    description: The canonical identifier for this job.\n                    example: 11223344\n                    format: int64\n                    type: integer\n                  run_as_user_name:\n                    description: The user name that the job runs as. `run_as_user_name`\n                      is based on the current job settings, and is set to the creator\n                      of the job if job access control is disabled, or the `is_owner`\n                      permission if job access control is enabled.\n                    example: user.name@databricks.com\n                    type: string\n                  settings:\n                    $ref: '#/components/schemas/JobSettings'\n                    description: Settings for this job and all of its runs. These\n                      settings can be updated using the [Reset](https://docs.databricks.com/dev-tools/api/latest/jobs.html#operation/JobsReset)\n                      or [Update](https://docs.databricks.com/dev-tools/api/latest/jobs.html#operation/JobsUpdate)\n                      endpoints.\n                type: object\n          description: Job was retrieved successfully.\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/InternalError'\n      security:\n      - bearerAuth: []\n      summary: Get a single job\n  /2.1/jobs/list:\n    get:\n      description: Retrieves a list of jobs.\n      operationId: JobsList\n      parameters:\n      - description: The number of jobs to return. This value must be greater than\n          0 and less or equal to 25. The default value is 20.\n        in: query\n        name: limit\n        required: false\n        schema:\n          default: 20\n          example: 25\n          maximum: 25\n          minimum: 1\n          type: integer\n      - description: The offset of the first job to return, relative to the most recently\n          created job.\n        in: query\n        name: offset\n        required: false\n        schema:\n          default: 0\n          example: 0\n          minimum: 0\n          type: integer\n      - description: Whether to include task and cluster details in the response.\n        in: query\n        name: expand_tasks\n        required: false\n        schema:\n          default: false\n          example: false\n          type: boolean\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                properties:\n                  has_more:\n                    example: false\n                    type: boolean\n                  jobs:\n                    description: The list of jobs.\n                    items:\n                      $ref: '#/components/schemas/Job'\n                    type: array\n                type: object\n          description: List of jobs was retrieved successfully.\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/InternalError'\n      security:\n      - bearerAuth: []\n      summary: List all jobs\n  /2.1/jobs/reset:\n    post:\n      description: Overwrites all the settings for a specific job. Use the Update\n        endpoint to update job settings partially.\n      operationId: JobsReset\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                job_id:\n                  description: The canonical identifier of the job to reset. This\n                    field is required.\n                  example: 11223344\n                  format: int64\n                  type: integer\n                new_settings:\n                  $ref: '#/components/schemas/JobSettings'\n                  description: 'The new settings of the job. These settings completely\n                    replace the old settings.\n\n\n                    Changes to the field `JobSettings.timeout_seconds` are applied\n                    to active runs. Changes to other fields are applied to future\n                    runs only.'\n              required:\n              - job_id\n              type: object\n        required:\n        - true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                properties: {}\n                type: object\n          description: Job was overwritten successfully.\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/InternalError'\n      security:\n      - bearerAuth: []\n      summary: Overwrites all settings for a job\n  /2.1/jobs/run-now:\n    post:\n      description: Run a job and return the `run_id` of the triggered run.\n      operationId: JobsRunNow\n      requestBody:\n        content:\n          application/json:\n            schema:\n              allOf:\n              - $ref: '#/components/schemas/RunNowInput'\n              - $ref: '#/components/schemas/RunParameters'\n        required:\n        - true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                properties:\n                  number_in_job:\n                    deprecated: true\n                    description: A unique identifier for this job run. This is set\n                      to the same value as `run_id`.\n                    example: 455644833\n                    format: int64\n                    type: integer\n                  run_id:\n                    description: The globally unique ID of the newly triggered run.\n                    example: 455644833\n                    format: int64\n                    type: integer\n                type: object\n          description: Run was started successfully.\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/InternalError'\n      security:\n      - bearerAuth: []\n      summary: Trigger a new job run\n  /2.1/jobs/runs/cancel:\n    post:\n      description: Cancels a job run. The run is canceled asynchronously, so it may\n        still be running when this request completes.\n      operationId: JobsRunsCancel\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                run_id:\n                  description: This field is required.\n                  example: 455644833\n                  format: int64\n                  type: integer\n              required:\n              - run_id\n              type: object\n        required:\n        - true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                properties: {}\n                type: object\n          description: Run was cancelled successfully.\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/InternalError'\n      security:\n      - bearerAuth: []\n      summary: Cancel a job run\n  /2.1/jobs/runs/cancel-all:\n    post:\n      description: Cancels all active runs of a job. The runs are canceled asynchronously,\n        so it doesn't prevent new runs from being started.\n      operationId: JobsRunsCancelAll\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                job_id:\n                  description: The canonical identifier of the job to cancel all runs\n                    of. This field is required.\n                  example: 11223344\n                  format: int64\n                  type: integer\n              required:\n              - job_id\n              type: object\n        required:\n        - true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                properties: {}\n                type: object\n          description: All runs were cancelled successfully.\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/InternalError'\n      security:\n      - bearerAuth: []\n      summary: Cancel all runs of a job\n  /2.1/jobs/runs/delete:\n    post:\n      description: Deletes a non-active run. Returns an error if the run is active.\n      operationId: JobsRunsDelete\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                run_id:\n                  description: The canonical identifier of the run for which to retrieve\n                    the metadata.\n                  example: 455644833\n                  format: int64\n                  type: integer\n              type: object\n        required:\n        - true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                properties: {}\n                type: object\n          description: Run was deleted successfully.\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/InternalError'\n      security:\n      - bearerAuth: []\n      summary: Delete a job run\n  /2.1/jobs/runs/get:\n    get:\n      description: Retrieve the metadata of a run.\n      operationId: JobsRunsGet\n      parameters:\n      - description: The canonical identifier of the run for which to retrieve the\n          metadata. This field is required.\n        in: query\n        name: run_id\n        required: true\n        schema:\n          example: 455644833\n          format: int64\n          type: integer\n      - description: Whether to include the repair history in the response.\n        in: query\n        name: include_history\n        required: false\n        schema:\n          example: true\n          type: boolean\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/Run'\n                - $ref: '#/components/schemas/RepairHistory'\n          description: Run was retrieved successfully\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/InternalError'\n      security:\n      - bearerAuth: []\n      summary: Get a single job run\n  /2.1/jobs/runs/get-output:\n    get:\n      description: 'Retrieve the output and metadata of a single task run. When a\n        notebook task returns a value through the dbutils.notebook.exit() call, you\n        can use this endpoint to retrieve that value. Databricks restricts this API\n        to return the first 5 MB of the output. To return a larger result, you can\n        store job results in a cloud storage service.\n\n        This endpoint validates that the run_id parameter is valid and returns an\n        HTTP status code 400 if the run_id parameter is invalid.\n\n        Runs are automatically removed after 60 days. If you to want to reference\n        them beyond 60 days, you must save old run results before they expire. To\n        export using the UI, see Export job run results. To export using the Jobs\n        API, see Runs export.'\n      operationId: JobsRunsGetOutput\n      parameters:\n      - description: The canonical identifier for the run. This field is required.\n        in: query\n        name: run_id\n        required: true\n        schema:\n          example: 455644833\n          format: int64\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                properties:\n                  dbt_output:\n                    $ref: '#/components/schemas/DbtOutput'\n                    description: The output of a dbt task, if available.\n                    example: ''\n                  error:\n                    description: An error message indicating why a task failed or\n                      why output is not available. The message is unstructured, and\n                      its exact format is subject to change.\n                    example: 'ZeroDivisionError: integer division or modulo by zero'\n                    type: string\n                  error_trace:\n                    description: If there was an error executing the run, this field\n                      contains any available stack traces.\n                    example: \"---------------------------------------------------------------------------\\n\\\n                      Exception                                 Traceback (most recent\\\n                      \\ call last)\\n      1 numerator = 42\\n      2 denominator =\\\n                      \\ 0\\n----\u003e 3 return numerator / denominator\\n\\nZeroDivisionError:\\\n                      \\ integer division or modulo by zero\"\n                    type: string\n                  logs:\n                    description: The output from tasks that write to standard streams\n                      (stdout/stderr) such as [SparkJarTask](https://docs.databricks.com/dev-tools/api/latest/jobs.html#/components/schemas/SparkJarTask),\n                      [SparkPythonTask](https://docs.databricks.com/dev-tools/api/latest/jobs.html#/components/schemas/SparkPythonTask,\n                      [PythonWheelTask](https://docs.databricks.com/dev-tools/api/latest/jobs.html#/components/schemas/PythonWheelTask.\n                      It's not supported for the [NotebookTask](https://docs.databricks.com/dev-tools/api/latest/jobs.html#/components/schemas/NotebookTask,\n                      [PipelineTask](https://docs.databricks.com/dev-tools/api/latest/jobs.html#/components/schemas/PipelineTask,\n                      or [SparkSubmitTask](https://docs.databricks.com/dev-tools/api/latest/jobs.html#/components/schemas/SparkSubmitTask.\n                      Databricks restricts this API to return the last 5 MB of these\n                      logs.\n                    example: Hello World!\n                    type: string\n                  logs_truncated:\n                    description: Whether the logs are truncated.\n                    example: true\n                    type: boolean\n                  metadata:\n                    $ref: '#/components/schemas/Run'\n                    description: All details of the run except for its output.\n                  notebook_output:\n                    $ref: '#/components/schemas/NotebookOutput'\n                    description: The output of a notebook task, if available. A notebook\n                      task that terminates (either successfully or with a failure)\n                      without calling `dbutils.notebook.exit()` is considered to have\n                      an empty output. This field is set but its result value is empty.\n                      Databricks restricts this API to return the first 5 MB of the\n                      output. To return a larger result, use the [ClusterLogConf](https://docs.databricks.com/dev-tools/api/latest/clusters.html#clusterlogconf)\n                      field to configure log storage for the job cluster.\n                    example: ''\n                  sql_output:\n                    $ref: '#/components/schemas/SqlOutput'\n                    description: The output of a SQL task, if available.\n                    example: ''\n                type: object\n          description: Run output was retrieved successfully.\n        '400':\n          content:\n            application/json:\n              example:\n                error_code: INVALID_PARAMETER_VALUE\n                message: Retrieving the output of runs with multiple tasks is not\n                  supported. You must retrieve the output of each individual task\n                  run instead.\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: A job run with multiple tasks was provided.\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/InternalError'\n      security:\n      - bearerAuth: []\n      summary: Get the output for a single run\n  /2.1/jobs/runs/list:\n    get:\n      description: List runs in descending order by start time.\n      operationId: JobsRunsList\n      parameters:\n      - description: If active_only is `true`, only active runs are included in the\n          results; otherwise, lists both active and completed runs. An active run\n          is a run in the `PENDING`, `RUNNING`, or `TERMINATING`. This field cannot\n          be `true` when completed_only is `true`.\n        in: query\n        name: active_only\n        schema:\n          default: false\n          example: false\n          type: boolean\n      - description: If completed_only is `true`, only completed runs are included\n          in the results; otherwise, lists both active and completed runs. This field\n          cannot be `true` when active_only is `true`.\n        in: query\n        name: completed_only\n        schema:\n          default: false\n          example: false\n          type: boolean\n      - description: The job for which to list runs. If omitted, the Jobs service\n          lists runs from all jobs.\n        in: query\n        name: job_id\n        schema:\n          example: 11223344\n          format: int64\n          type: integer\n      - description: The offset of the first run to return, relative to the most recent\n          run.\n        in: query\n        name: offset\n        schema:\n          default: 0\n          example: 0\n          format: int32\n          type: integer\n      - description: The number of runs to return. This value must be greater than\n          0 and less than 25\\. The default value is 25\\. If a request specifies a\n          limit of 0, the service instead uses the maximum limit.\n        in: query\n        name: limit\n        schema:\n          default: 25\n          example: 25\n          format: int32\n          maximum: 25\n          minimum: 1\n          type: integer\n      - description: The type of runs to return. For a description of run types, see\n          [Run](https://docs.databricks.com/dev-tools/api/latest/jobs.html#operation/JobsRunsGet).\n        in: query\n        name: run_type\n        schema:\n          enum:\n          - JOB_RUN\n          - WORKFLOW_RUN\n          - SUBMIT_RUN\n          example: JOB_RUN\n          type: string\n      - description: Whether to include task and cluster details in the response.\n        in: query\n        name: expand_tasks\n        required: false\n        schema:\n          default: false\n          example: false\n          type: boolean\n      - description: Show runs that started _at or after_ this value. The value must\n          be a UTC timestamp in milliseconds. Can be combined with _start_time_to_\n          to filter by a time range.\n        in: query\n        name: start_time_from\n        required: false\n        schema:\n          example: 1642521600000\n          type: integer\n      - description: Show runs that started _at or before_ this value. The value must\n          be a UTC timestamp in milliseconds. Can be combined with _start_time_from_\n          to filter by a time range.\n        in: query\n        name: start_time_to\n        required: false\n        schema:\n          example: 1642608000000\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                properties:\n                  has_more:\n                    description: If true, additional runs matching the provided filter\n                      are available for listing.\n                    type: boolean\n                  runs:\n                    description: A list of runs, from most recently started to least.\n                    items:\n                      $ref: '#/components/schemas/Run'\n                    type: array\n                type: object\n          description: List of runs was retrieved successfully.\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/InternalError'\n      security:\n      - bearerAuth: []\n      summary: List runs for a job\n  /2.1/jobs/runs/repair:\n    post:\n      description: Re-run one or more tasks. Tasks are re-run as part of the original\n        job run, use the current job and task settings, and can be viewed in the history\n        for the original job run.\n      operationId: JobsRunsRepair\n      requestBody:\n        content:\n          application/json:\n            schema:\n              allOf:\n              - $ref: '#/components/schemas/RepairRunInput'\n              - $ref: '#/components/schemas/RunParameters'\n        required:\n        - true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                properties:\n                  repair_id:\n                    description: The ID of the repair.\n                    example: 734650698524280\n                    format: int64\n                    type: integer\n                type: object\n          description: Run repair was initiated.\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/InternalError'\n      security:\n      - bearerAuth: []\n      summary: Repair a job run\n  /2.1/jobs/runs/submit:\n    post:\n      description: \"Submit a one-time run. This endpoint allows you to submit a workload\\\n        \\ directly without creating a job. Runs submitted using this endpoint don\\u2019\\\n        t display in the UI. Use the `jobs/runs/get` API to check the run state after\\\n        \\ the job is submitted.\"\n      operationId: JobsRunsSubmit\n      requestBody:\n        content:\n          application/json:\n            schema:\n              allOf:\n              - $ref: '#/components/schemas/RunSubmitSettings'\n              - $ref: '#/components/schemas/AccessControlList'\n        required:\n        - true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                properties:\n                  run_id:\n                    description: The canonical identifier for the newly submitted\n                      run.\n                    example: 455644833\n                    format: int64\n                    type: integer\n                type: object\n          description: Run was created and started successfully.\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/InternalError'\n      security:\n      - bearerAuth: []\n      summary: Create and trigger a one-time run\n  /2.1/jobs/update:\n    post:\n      description: Add, update, or remove specific settings of an existing job. Use\n        the Reset endpoint to overwrite all job settings.\n      operationId: JobsUpdate\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                fields_to_remove:\n                  description: Remove top-level fields in the job settings. Removing\n                    nested fields is not supported. This field is optional.\n                  example:\n                  - libraries\n                  - schedule\n                  items:\n                    type: string\n                  type: array\n                job_id:\n                  description: The canonical identifier of the job to update. This\n                    field is required.\n                  example: 11223344\n                  format: int64\n                  type: integer\n                new_settings:\n                  $ref: '#/components/schemas/JobSettings'\n                  description: 'The new settings for the job. Any top-level fields\n                    specified in `new_settings` are completely replaced. Partially\n                    updating nested fields is not supported.\n\n\n                    Changes to the field `JobSettings.timeout_seconds` are applied\n                    to active runs. Changes to other fields are applied to future\n                    runs only.'\n              required:\n              - job_id\n              type: object\n        required:\n        - true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                properties: {}\n                type: object\n          description: Job was updated successfully.\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/InternalError'\n      security:\n      - bearerAuth: []\n      summary: Partially updates a job\nservers:\n- description: In the URL, substitute `\u003cdatabricks-instance\u003e` with the domain name\n    of your deployment. Use the form `\u003caccount\u003e.cloud.databricks.com`.\n  url: https://\u003cdatabricks-instance\u003e/api/\n",
			"canonicalURL": "/github.com/PrefectHQ/prefect-databricks@7cbb5f05550e2218010f8b3a4b0339c94b702c95/-/blob/prefect_databricks/schemas/jobs-2.1-aws.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/PrefectHQ/prefect-databricks/blob/7cbb5f05550e2218010f8b3a4b0339c94b702c95/prefect_databricks/schemas/jobs-2.1-aws.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 3327: cannot unmarshal !!seq into bool; yaml: line 3369: cannot unmarshal !!seq into bool; yaml: line 3535: cannot unmarshal !!seq into bool; yaml: line 3565: cannot unmarshal !!seq into bool; yaml: line 3614: cannot unmarshal !!seq into bool; yaml: line 3652: cannot unmarshal !!seq into bool; yaml: line 3687: cannot unmarshal !!seq into bool; yaml: line 3977: cannot unmarshal !!seq into bool; yaml: line 4015: cannot unmarshal !!seq into bool; yaml: line 4078: cannot unmarshal !!seq into bool"
}