{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/postmanlabs/openapi-to-postman"
		},
		"file": {
			"name": "suggestAvailableFixesSpec.yaml",
			"size": 0,
			"path": "test/data/31CollectionTransactions/validateOptions/suggestAvailableFixesSpec.yaml",
			"byteSize": 2395,
			"content": "openapi: \"3.1.0\"\ninfo:\n  version: 1.0.0\n  title: \n  license:\n    name: MIT\nservers:\n  - url: http://petstore.swagger.io/v1\npaths:\n  /pets/{petId}:\n    post:\n      summary: Info for a specific pet\n      operationId: showPetById\n      tags:\n        - pets\n      parameters:\n        - name: petId\n          in: path\n          required: true\n          description: The id of the pet to retrieve\n          schema:\n            type: \n              - integer\n            examples: \n              - 'Not an Integer'\n        - name: limit\n          in: query\n          required: true\n          schema:\n            type: \n              - number\n            examples: \n              - 'Not a Number'\n        - name: pet-quantity\n          in: header\n          description: Quantity of pets available\n          required: true\n          schema:\n            type: \n              - boolean\n            examples: \n              - 'Not a Boolean'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Pet\"\n      responses:\n        default:\n          description: unexpected error\n          headers:\n            X-Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: \n                  - integer\n                examples: \n                  - '\u003cstring\u003e'\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\ncomponents:\n  schemas:\n    Pet:\n      type: \n        - object\n      required:\n      - petId\n      - name\n      - tag\n      - breeds\n      properties:\n        petId:\n          type: \n            - integer\n          format: int64\n        name:\n          type: \n            - string\n          minLength: 30\n        tag:\n          type: \n            - string\n        breeds:\n          type: \n            - array\n          minItems: 3\n          maxItems: 3\n          items:\n            type: \n              - string\n            enum: [\"Bulldog\", \"Retriever\", \"Timberwolf\", \"Grizzly\", \"Husky\"]\n    Error:\n      type: \n        - object\n      properties:\n        code:\n          type: \n            - integer\n          format: int32\n          multipleOf: 7\n        message:\n          type: \n            - string\n      examples:\n        - code: '{{codeVar}}'\n          message: 123.456\n"
		}
	},
	"Error": "unmarshal: callback: json: cannot unmarshal array into Go struct field Schema.type of type string"
}