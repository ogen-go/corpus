{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/YetiForceCompany/UpdatePackages"
		},
		"file": {
			"name": "Portal.yaml",
			"size": 0,
			"path": "YetiForce CRM 5.x.x/5.2.0_to_5.3.0/updates/files/public_html/api/Portal.yaml",
			"byteSize": 25204,
			"content": "openapi: 3.0.0\ninfo:\n  title: 'YetiForce API for Webservice App. Type: Portal'\n  termsOfService: 'https://yetiforce.com/'\n  contact:\n    name: 'Devs API Team'\n    url: 'https://yetiforce.com/'\n    email: devs@yetiforce.com\n  license:\n    name: 'YetiForce Public License v3'\n    url: 'https://yetiforce.com/en/yetiforce/license'\n  version: '0.1'\npaths:\n  /webservice/Install:\n    put:\n      tags:\n        - BaseAction\n      summary: 'Install the system'\n      operationId: 'Api\\Portal\\BaseAction\\Install::put'\n      parameters:\n        -\n          name: X-ENCRYPTED\n          in: header\n          required: true\n          schema:\n            $ref: '#/components/schemas/X-ENCRYPTED'\n      requestBody:\n        description: 'Base action install request body'\n        required: false\n      responses:\n        '200':\n          description: 'Base action details'\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/BaseActionInstallResponseBody'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BaseActionInstallResponseBody'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/BaseActionInstallResponseBody'\n      security:\n        -\n          basicAuth: ''\n          ApiKeyAuth: ''\n  /webservice/BaseAction/Menu:\n    get:\n      tags:\n        - BaseAction\n      summary: 'Base action menu into the system'\n      operationId: 'Api\\Portal\\BaseAction\\Menu::get'\n      parameters:\n        -\n          name: X-ENCRYPTED\n          in: header\n          required: true\n          schema:\n            $ref: '#/components/schemas/X-ENCRYPTED'\n      requestBody:\n        description: 'Request body does not occur'\n        required: false\n      responses:\n        '200':\n          description: 'Menu details'\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/BaseActionMenuResponseBody'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BaseActionMenuResponseBody'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/BaseActionMenuResponseBody'\n      security:\n        -\n          basicAuth: ''\n          ApiKeyAuth: ''\n          token: ''\n  /webservice/Modules:\n    get:\n      tags:\n        - BaseAction\n      summary: 'Gets the module list action, along with their translated action'\n      operationId: 'Api\\Portal\\BaseAction\\Modules::get'\n      parameters:\n        -\n          name: X-ENCRYPTED\n          in: header\n          required: true\n          schema:\n            $ref: '#/components/schemas/X-ENCRYPTED'\n      requestBody:\n        description: 'The content of the request is empty'\n        required: false\n      responses:\n        '200':\n          description: 'List of active modules'\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/BaseActionModulesResponseBody'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BaseActionModulesResponseBody'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/BaseActionModulesResponseBody'\n        '401':\n          description: 'No sent token OR Invalid token'\n        '403':\n          description: 'No permissions for module'\n      security:\n        -\n          basicAuth: ''\n          ApiKeyAuth: ''\n          token: ''\n  '/webservice/{moduleName}/Record/{recordId}':\n    get:\n      tags:\n        - BaseModule\n      summary: 'Gets data for the record'\n      operationId: 'Api\\Portal\\BaseModule\\Record::get'\n      parameters:\n        -\n          name: moduleName\n          in: path\n          description: 'Module name'\n          required: true\n          schema:\n            type: string\n          example: Contacts\n        -\n          name: recordId\n          in: path\n          description: 'Record id'\n          required: true\n          schema:\n            type: integer\n            format: int64\n          example: 116\n        -\n          name: X-ENCRYPTED\n          in: header\n          required: true\n          schema:\n            $ref: '#/components/schemas/X-ENCRYPTED'\n        -\n          name: x-raw-data\n          in: header\n          description: 'Gets raw data'\n          required: false\n          schema:\n            type: integer\n            format: int64\n          example: 1\n        -\n          name: x-parent-id\n          in: header\n          description: 'Gets parent id'\n          required: false\n          schema:\n            type: integer\n            format: int64\n          example: 1\n      requestBody:\n        description: 'The content of the request is empty.'\n        required: false\n      responses:\n        '200':\n          description: 'Gets data for the record'\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/BaseModule_Get_Record_Response'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BaseModule_Get_Record_Response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/BaseModule_Get_Record_Response'\n        '403':\n          description: 'No permissions to remove record OR No permissions to view record OR No permissions to edit record'\n        '404':\n          description: 'Record doesn''t exist'\n      security:\n        -\n          basicAuth: ''\n          ApiKeyAuth: ''\n          token: ''\n    put:\n      tags:\n        - BaseModule\n      summary: 'Edit record'\n      operationId: 'Api\\Portal\\BaseModule\\Record::put'\n      parameters:\n        -\n          name: moduleName\n          in: path\n          description: 'Module name'\n          required: true\n          schema:\n            type: string\n          example: Contacts\n        -\n          name: recordId\n          in: path\n          description: 'Record id'\n          required: true\n          schema:\n            type: integer\n            format: int64\n          example: 116\n        -\n          name: X-ENCRYPTED\n          in: header\n          required: true\n          schema:\n            $ref: '#/components/schemas/X-ENCRYPTED'\n      requestBody:\n        description: 'The content of the request is empty.'\n        required: false\n      responses:\n        '200':\n          description: 'Gets data for the record'\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/BaseModule_Put_Record_Response'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BaseModule_Put_Record_Response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/BaseModule_Put_Record_Response'\n      security:\n        -\n          basicAuth: ''\n          ApiKeyAuth: ''\n          token: ''\n    delete:\n      tags:\n        - BaseModule\n      summary: 'Delete record (move to the trash)'\n      operationId: 'Api\\Portal\\BaseModule\\Record::delete'\n      parameters:\n        -\n          name: moduleName\n          in: path\n          description: 'Module name'\n          required: true\n          schema:\n            type: string\n          example: Contacts\n        -\n          name: recordId\n          in: path\n          description: 'Record id'\n          required: true\n          schema:\n            type: integer\n            format: int64\n          example: 116\n        -\n          name: X-ENCRYPTED\n          in: header\n          required: true\n          schema:\n            $ref: '#/components/schemas/X-ENCRYPTED'\n      requestBody:\n        description: 'The content of the request is empty.'\n        required: false\n      responses:\n        '200':\n          description: 'List of records moved to the trash'\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/BaseModule_Delete_Record_Response'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BaseModule_Delete_Record_Response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/BaseModule_Delete_Record_Response'\n      security:\n        -\n          basicAuth: ''\n          ApiKeyAuth: ''\n          token: ''\n  '/webservice/{moduleName}/Record':\n    post:\n      tags:\n        - BaseModule\n      summary: 'Create record'\n      operationId: 'Api\\Portal\\BaseModule\\Record::post'\n      parameters:\n        -\n          name: moduleName\n          in: path\n          description: 'Module name'\n          required: true\n          schema:\n            type: string\n          example: Contacts\n        -\n          name: X-ENCRYPTED\n          in: header\n          required: true\n          schema:\n            $ref: '#/components/schemas/X-ENCRYPTED'\n      requestBody:\n        description: 'The content of the request is empty.'\n        required: false\n      responses:\n        '200':\n          description: 'List of records created'\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/BaseModule_Post_Record_Response'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BaseModule_Post_Record_Response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/BaseModule_Post_Record_Response'\n      security:\n        -\n          basicAuth: ''\n          ApiKeyAuth: ''\n          token: ''\n  /webservice/Users/Login:\n    post:\n      tags:\n        - Users\n      summary: 'Logs user into the system'\n      operationId: 'Api\\Portal\\Users\\Login::post'\n      parameters:\n        -\n          name: X-ENCRYPTED\n          in: header\n          required: true\n          schema:\n            $ref: '#/components/schemas/X-ENCRYPTED'\n      requestBody:\n        description: 'Input data format'\n        required: true\n        content:\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/UsersLoginRequestBody'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/UsersLoginRequestBody'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UsersLoginRequestBody'\n      responses:\n        '200':\n          description: 'User details'\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/UsersLoginResponseBody'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UsersLoginResponseBody'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/UsersLoginResponseBody'\n        '401':\n          description: 'Invalid data access OR Invalid user password OR No crmid'\n        '405':\n          description: 'Invalid method'\n      security:\n        -\n          basicAuth: ''\n          ApiKeyAuth: ''\n  /webservice/Users/Logout:\n    put:\n      tags:\n        - Users\n      summary: 'Logout user out the system'\n      operationId: 'Api\\Portal\\Users\\Logout::put'\n      parameters:\n        -\n          name: X-ENCRYPTED\n          in: header\n          required: true\n          schema:\n            $ref: '#/components/schemas/X-ENCRYPTED'\n      requestBody:\n        description: 'Users logout request body'\n        required: false\n      responses:\n        '200':\n          description: 'User details'\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/UsersLogoutResponseBody'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UsersLogoutResponseBody'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/UsersLogoutResponseBody'\n      security:\n        -\n          basicAuth: ''\n          ApiKeyAuth: ''\n          token: ''\ncomponents:\n  schemas:\n    BaseActionInstallResponseBody:\n      title: 'Base action install'\n      description: 'The representation of a base action install'\n      properties:\n        status:\n          description: 'A numeric value of 0 or 1 that indicates whether the communication is valid. 1 - success , 0 - error'\n          type: integer\n          enum:\n            - '0'\n            - '1'\n        result:\n          description: 'Content of responses from a given method'\n          type: object\n      type: object\n    BaseActionMenuResponseBody:\n      title: 'Base action menu'\n      description: 'Base action menu response body'\n      properties:\n        status:\n          description: 'A numeric value of 0 or 1 that indicates whether the communication is valid. 1 - success , 0 - error'\n          type: integer\n          enum:\n            - '0'\n            - '1'\n        result:\n          description: 'Menu items selected in the system, consists of parents and children'\n          properties:\n            items:\n              title: 'Parent parameters'\n              description: 'Get method.'\n              properties:\n                id:\n                  description: 'Get method.'\n                  type: integer\n                tabid:\n                  description: 'Get method.'\n                  type: integer\n                mod:\n                  description: 'Get method.'\n                  type: string\n                name:\n                  description: 'Get method.'\n                  type: string\n                type:\n                  description: 'Get method.'\n                  type: string\n                sequence:\n                  description: 'Get method.'\n                  type: integer\n                newwindow:\n                  description: 'Get method.'\n                  type: integer\n                dataurl:\n                  description: 'Get method.'\n                  type: string\n                icon:\n                  description: 'Get method.'\n                  type: string\n                parent:\n                  description: 'Get method.'\n                  type: integer\n                hotkey:\n                  description: 'Get method.'\n                  type: string\n                filters:\n                  description: 'Get method.'\n                  type: string\n                childs:\n                  title: 'Children parameters'\n                  description: 'Get method.'\n                  type: object\n              type: object\n          type: object\n      type: object\n    BaseActionModulesResponseBody:\n      title: 'List items'\n      description: 'List of obtained items'\n      properties:\n        status:\n          description: 'A numeric value of 0 or 1 that indicates whether the communication is valid. 1 - success , 0 - error'\n          type: integer\n          enum:\n            - '0'\n            - '1'\n        result:\n          description: 'List of modules accessed'\n          properties:\n            items:\n              description: 'Module name'\n              type: string\n              example: Accounts\n          type: object\n      type: object\n    BaseModule_Get_Record_Response:\n      title: 'Response body for Record'\n      properties:\n        status:\n          description: 'A numeric value of 0 or 1 that indicates whether the communication is valid. 1 - success , 0 - error'\n          type: integer\n          enum:\n            - 0\n            - 1\n          example: 1\n        result:\n          description: 'Record data'\n          properties:\n            name:\n              description: 'Record name'\n              type: string\n              example: 'Driving school'\n            id:\n              description: 'Record Id'\n              type: integer\n              example: '152'\n            fields:\n              description: 'Field name items'\n              type: array\n              items:\n                description: 'Field name'\n                type: string\n                items: 'Contractor''s name'\n                example: 'Contractor''s name'\n            data:\n              description: 'Record data'\n              type: array\n              items:\n                description: 'Field value'\n                type: string\n                items: 'Contractor''s name'\n                example: Kowalski\n            privileges:\n              description: 'Parameters determining checking of editing rights and moving to the trash'\n              type: array\n              items:\n                description: 'Check if record is editable'\n                type: boolean\n                items: isEditable\n                example: 'true'\n            inventory:\n              description: 'Value inventory data'\n              type: array\n              items:\n                description: 'Field value inventory'\n                type: string\n                items: unitPrice\n                example: '250'\n            summaryInventory:\n              description: 'Value summary inventory data'\n              type: array\n              items:\n                description: 'Sum of field values'\n                type: string\n                items: unitPrice\n            rawData:\n              description: 'Tax selected in inventory'\n              type: object\n            rawInventory:\n              description: 'Inventory data'\n              type: object\n          type: object\n      type: object\n    BaseModule_Delete_Record_Response:\n      title: 'Transfer to the trash'\n      description: 'List of records moved to the trash'\n      properties:\n        status:\n          description: 'A numeric value of 0 or 1 that indicates whether the communication is valid. 1 - success , 0 - error'\n          type: integer\n          enum:\n            - '0'\n            - '1'\n        result:\n          description: 'Status of successful transfer of the record to the recycle bin'\n          type: boolean\n      type: object\n    BaseModule_Put_Record_Response:\n      title: 'Response body for Record'\n      description: 'List of edited records'\n      properties:\n        status:\n          description: 'A numeric value of 0 or 1 that indicates whether the communication is valid. 1 - success , 0 - error'\n          type: integer\n          enum:\n            - '0'\n            - '1'\n        result:\n          title: 'Parameters record'\n          description: 'Parameters the edited record.'\n          type: array\n          items:\n            description: 'Id the edited record'\n            type: integer\n            items: id\n      type: object\n    BaseModule_Post_Record_Response:\n      title: 'Created records'\n      description: 'List of records created'\n      properties:\n        status:\n          description: 'A numeric value of 0 or 1 that indicates whether the communication is valid. 1 - success , 0 - error'\n          type: integer\n          enum:\n            - '0'\n            - '1'\n        result:\n          title: 'Gets data for the record'\n          description: 'Parameters the saved record.'\n          type: array\n          items:\n            description: 'Id of the newly created record'\n            type: integer\n            items: id\n      type: object\n    X-ENCRYPTED:\n      description: 'Is the content request is encrypted'\n      type: string\n      default: 0\n      enum:\n        - 0\n        - 1\n    UsersLoginRequestBody:\n      title: 'Users login request body'\n      description: 'JSON or form-data'\n      properties:\n        userName:\n          description: 'Webservice user name'\n          type: string\n        password:\n          description: 'Webservice user password'\n          type: string\n        params:\n          description: 'Additional parameters sent by the user, extending the current settings, e.g. language'\n          type: array\n          items:\n            type: string\n      type: object\n    UsersLoginResponseBody:\n      title: 'Users login response body'\n      description: 'Users login response body'\n      properties:\n        status:\n          description: 'A numeric value of 0 or 1 that indicates whether the communication is valid. 1 - success , 0 - error'\n          type: integer\n          enum:\n            - 0\n            - 1\n          example: 1\n        result:\n          description: 'Content of responses from a given method'\n          properties:\n            token:\n              description: 'Post method.'\n              type: string\n              maxLength: 40\n              minLength: 40\n            name:\n              description: 'Post method.'\n              type: string\n            parentName:\n              description: 'Post method.'\n              type: string\n            lastLoginTime:\n              description: 'Post method.'\n              type: string\n              format: date-time\n              example: '2019-10-07 08:32:38'\n            lastLogoutTime:\n              description: 'Post method.'\n              type: string\n              format: date-time\n              example: 'null'\n            language:\n              description: 'Post method.'\n              type: string\n              example: pl-PL\n            type:\n              description: 'Post method.'\n              type: integer\n            companyId:\n              description: 'Post method.'\n              type: integer\n            companyDetails:\n              title: 'Company details, optional parameter depending on the user type'\n              description: 'Post method.'\n              properties:\n                check_stock_levels:\n                  description: 'Post method.'\n                  type: boolean\n                sum_open_orders:\n                  description: 'Post method.'\n                  type: integer\n                creditlimit:\n                  description: 'Post method.'\n                  type: integer\n              type: object\n            logged:\n              description: 'Post method.'\n              type: boolean\n            preferences:\n              description: 'Post method.'\n              properties:\n                activity_view:\n                  description: 'Post method.'\n                  type: string\n                hour_format:\n                  description: 'Post method.'\n                  type: integer\n                start_hour:\n                  description: 'Post method.'\n                  type: string\n                date_format:\n                  description: 'Post method.'\n                  type: string\n                date_format_js:\n                  description: 'Post method.'\n                  type: string\n                dayoftheweek:\n                  description: 'Post method.'\n                  type: string\n                time_zone:\n                  description: 'Post method.'\n                  type: string\n                currency_id:\n                  description: 'Post method.'\n                  type: integer\n                currency_grouping_pattern:\n                  description: 'Post method.'\n                  type: string\n                currency_decimal_separator:\n                  description: 'Post method.'\n                  type: string\n                currency_grouping_separator:\n                  description: 'Post method.'\n                  type: string\n                currency_symbol_placement:\n                  description: 'Post method.'\n                  type: string\n                no_of_currency_decimals:\n                  description: 'Post method.'\n                  type: integer\n                truncate_trailing_zeros:\n                  description: 'Post method.'\n                  type: integer\n                end_hour:\n                  description: 'Post method.'\n                  type: string\n                currency_name:\n                  description: 'Post method.'\n                  type: string\n                currency_code:\n                  description: 'Post method.'\n                  type: string\n                currency_symbol:\n                  description: 'Post method.'\n                  type: string\n                conv_rate:\n                  description: 'Post method.'\n                  type: number\n                  format: float\n              type: object\n          type: object\n      type: object\n    UsersLogoutResponseBody:\n      title: 'Users logout response body'\n      description: 'JSON data'\n      properties:\n        status:\n          description: 'A numeric value of 0 or 1 that indicates whether the communication is valid. 1 - success , 0 - error'\n          type: integer\n          enum:\n            - 0\n            - 1\n          example: 1\n        result:\n          description: 'Content of responses from a given method'\n          type: boolean\n      type: object\n  securitySchemes:\n    basicAuth:\n      type: http\n      in: header\n      scheme: basic\n    ApiKeyAuth:\n      type: apiKey\n      description: 'Webservice api key'\n      name: X-API-KEY\n      in: header\n    token:\n      type: apiKey\n      description: 'Webservice api token, generated when logging into the system, required for communication'\n      name: X-TOKEN\n      in: header\ntags:\n  -\n    name: BaseAction\n    description: 'Access to user methods'\n  -\n    name: BaseModule\n    description: 'Access to record methods'\n  -\n    name: Users\n    description: 'Access to user methods'\n",
			"canonicalURL": "/github.com/YetiForceCompany/UpdatePackages@a193fc95e157726242023e3d146f624d5dd64059/-/blob/YetiForce%20CRM%205.x.x/5.2.0_to_5.3.0/updates/files/public_html/api/Portal.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/YetiForceCompany/UpdatePackages/blob/a193fc95e157726242023e3d146f624d5dd64059/YetiForce CRM 5.x.x/5.2.0_to_5.3.0/updates/files/public_html/api/Portal.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: json: line 1:2760: json: cannot unmarshal Go value of type ogen.Spec: spec: json: cannot unmarshal Go value of type ogen.Properties: json: unable to unmarshal Go value of type ogen.Properties: json: unable to unmarshal JSON string into Go value of type ogen.Schema"
}