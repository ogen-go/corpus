{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Digitaler-Impfnachweis/certification-apis"
		},
		"file": {
			"name": "dcc-reissue-api.yaml",
			"size": 0,
			"path": "dcc-reissue-api.yaml",
			"byteSize": 10820,
			"content": "openapi: 3.0.1\nservers:\n  - url: https://api.reissue.demo.ubirch.com/\n    description: STAGING re-issue api server\n  - url: https://api.reissue.ubirch.com/\n    description: PRODUCTION re-issue api server\ninfo:\n  title: Re-issue Service API\n  description: |\n    The re-issue service API generates signed\n    [Digital Green Certificate (DGC)](https://github.com/ehn-digital-green-development/ehn-dgc-schema)\n    conforming certificates with the short validity and based on current regulations. It is mainly used by Apps\n    to re-issue validation certificates.\n\n    ```\n    Copyright (C) 2021 IBM Deutschland GmbH\n    Copyright (C) 2021 ubirch GmbH\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n    ```\n\n  version: 2.0.0\n  license:\n    name: 'Apache License, Version 2.0'\n    url: 'https://www.apache.org/licenses/LICENSE-2.0'\n  contact:\n    name: UBIRCH GmbH\n    url: https://ubirch.com\n    email: mailto:support@ubirch.com\npaths:\n  # ===========================================================\n  # Available API endpoints\n  # ===========================================================\n  /api/certify/v2/reissue:\n    post:\n      tags:\n        - Re-issuing\n      summary: Re-issue a new certificate based on an existing valid certificate.\n      description: |\n        # Description\n\n        Re-issue a new certificate based on an existing valid certificate. This operation verifies the authenticity and\n        the integrity of the certificate, checks some formal rules of the content of the certificate and re-issues\n        a new certificate with a different validity and/or re-encoded specifics (i.e. series encoding) than the original\n        certificate.\n        \n        All certificates in a single request must adhere to same-person rule. Each request operates on certificates \n        of one person.\n\n        *Applications:* mobile applications, wallet apps\n      requestBody:\n        description: |\n          A list of valid Digital Green Certificate(s) (DGC) signed in Germany (DE) that are needed for re-issue.\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                action:\n                  description: |\n                    The operation to execute on the input certificate(s). All certificates in a single request\n                    must adhere to same-person rule. Each request operates on certificates of one person.\n                    \n                    - `renew` - replace a certificate with a new version, i.e. booster recoding 2/2 -\u003e 2/1\n                    - `extend` - extend the technical validity of a certificate\n                    - `combine` - combine multiple certificates (not used yet)\n                  type: string\n                  required: true\n                  enum:\n                    - renew\n                    - extend\n                    - combine\n                certificates:\n                  description: One or more certificates required for the operation.\n                  type: array\n                  required: true\n                  minItems: 1\n                  items:\n                    '$ref': 'dcc-certify-api.yaml#/components/schemas/CertificateEncoded'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                description: |\n                  The result of the operation, which may be one or more certificates. For each certificate the \n                  executed operation is indicated.\n                type: array\n                items:\n                  '$ref': '#/components/schemas/CertificateReissueResponse'\n        '400':\n          description: Invalid Request\n          content:\n            application/json:\n              schema:\n                '$ref': '#/components/schemas/ErrorResponse'\n              examples:\n                BodyTooLarge:\n                  description: The request is too large and considered unacceptable.\n                  value:\n                    error: RI400-0100\n                    message: body too large\n                InvalidRequest:\n                  description: The body does not contain parsable json or is missing required fields.\n                  value:\n                    error: RI400-0200\n                    message: invalid request\n                ActionNotAcceptable:\n                  description: The action field contains none of the accepted values.\n                  value:\n                    error: RI400-0300\n                    message: action not acceptable\n                WrongNumberOfCertificates:\n                  description: The number of certificates provided does not match the expected number for the case.\n                  value:\n                    error: RI400-0400\n                    message: wrong number of certificates\n                InvalidCertificateFormat:\n                  description: |\n                    One or more certificats does not conform to the DCC serialization format,\n                    i.e. missing the 'HC1:' prefix.\n                  value:\n                    error: RI400-0500\n                    message: invalid certificate format\n                InvalidCertificateEncoding:\n                  description: One or more certificates cannot be decoded.\n                  value:\n                    error: RI400-0600\n                    message: invalid certificate encoding\n                InvalidCertificateCompression:\n                  description: One of the certificates cannot be decompressed.\n                  value:\n                    error: RI400-0700\n                    message: invalid certificate encoding\n                InvalidCOSEEncoding:\n                  description: One of the certificates cannot be decoded to COSE/CBOR.\n                  value:\n                    error: RI400-0800\n                    message: invalid certificate format\n                UnknownSigner:\n                  description: One of the certificates has a signature from an unknown signer.\n                  value:\n                    error: RI400-0900\n                    message: a certificate could not be verified\n                NameMismatch:\n                  description: The certificates do not belong together due to a name mismatch.\n                  value:\n                    error: RI400-1000\n                    message: certificates not acceptable for action\n                BirthDateMismatch:\n                  description: The certificates do not belong together due to a birth date mismatch.\n                  value:\n                    error: RI400-1100\n                    message: certificates not acceptable for action\n                ConditionFailed:\n                  description: The certificates fail to meet the condition for reissuing.\n                  value:\n                    error: RI400-1200\n                    message: certificate not acceptable for action\n                InvalidSignature:\n                  description: One of the certificates fails the signature verification.\n                  value:\n                    error: RI400-1300\n                    message: invalid signature\n                RuleValidationError:\n                  description: One or more certificates are not valid.\n                  value:\n                    error: RI400-1400\n                    message: certificates not acceptable for action\n                InvalidCountry:\n                  description: One or more certificates cannot be used for reissuing because of country restrictions.\n                  value:\n                    error: RI400-1500\n                    message: certificates not acceptable for action\n                TooOldExpirationDate:\n                  description: The expiration date of the last issued cert is too old.\n                  value:\n                    error: RI400-1600\n                    message: expiration date too old to become extended\n                TooEarlyExpirationDate:\n                  description: The expiration date of the last issued cert is too early.\n                  value:\n                    error: RI400-1700\n                    message: expiration date too young to become extended\n                DateConflict:\n                  description: Two or more certificates reference the same date.\n                  value:\n                    error: RI400-1800\n                    message: at least two DCCs have the same date (dt and/or fr)\n                InvalidUVCI:\n                  description: The UVCI of the last issued cert is invalid.\n                  value:\n                    error: RI400-1900\n                    message: invalid unique certificate identifier\n        '411':\n          description: Length Required\n          content:\n            application/json:\n              schema:\n                '$ref': '#/components/schemas/ErrorResponse'\n              example:\n                LengthRequired:\n                  value:\n                    error: RI411-0100\n                    message: length required\n        '429':\n          description: Too Many Requests\n        '500':\n          description: Internal Server Error\n\ncomponents:\n  schemas:\n    CertificateReissueResponse:\n      type: object\n      properties:\n        certificate:\n          '$ref': 'dcc-certify-api.yaml#/components/schemas/CertificateEncoded'\n        relations:\n          description: Array of certificates related to this new certificate indicating the action.\n          type: array\n          items:\n            '$ref': '#/components/schemas/CertificateReissueRelation'\n\n    CertificateReissueRelation:\n      type: object\n      properties:\n        index:\n          description: The index of the related certificate from the request.\n          type: number\n        action:\n          description: |\n            The operational relation to the new certificate.\n            (The nop action will be removed on production.)\n          type: string\n          enum:\n            - replace\n            - nop\n\n    ErrorResponse:\n      type: object\n      properties:\n        error:\n          type: string\n          description: A machine readable error code.\n        message:\n          type: string\n          description: Human readable description of the error.\n      required:\n        - error\n\n\n",
			"canonicalURL": "/github.com/Digitaler-Impfnachweis/certification-apis@d4c1fa137c60b89d5beb4ce2239d1e0e90f264a7/-/blob/dcc-reissue-api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Digitaler-Impfnachweis/certification-apis/blob/d4c1fa137c60b89d5beb4ce2239d1e0e90f264a7/dcc-reissue-api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 1: cannot unmarshal !!bool `true` into []string"
}