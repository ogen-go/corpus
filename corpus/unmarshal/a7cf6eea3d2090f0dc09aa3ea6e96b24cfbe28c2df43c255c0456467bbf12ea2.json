{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/bigcommerce/api-specs"
		},
		"file": {
			"name": "pages.v3.yml",
			"size": 0,
			"path": "reference/pages.v3.yml",
			"byteSize": 44913,
			"content": "openapi: 3.0.0\r\ninfo:\r\n  title: Pages V3\r\n  version: '3.0'\r\n  description: 'Manage content pages, such as contact forms, rss feeds, and custom HTML pages. All endpoints without a `pageId` path parameter support bulk operations.'\r\n  termsOfService: 'http://www.bigcommerce.com/terms'\r\ntags:\r\n  - name: Pages\r\nsecurity:\r\n- X-Auth-Token: []\r\npaths:\r\n  '/stores/{store_hash}/v3/content/pages':\r\n    get:\r\n      operationId: content-pages-get\r\n      tags:\r\n        - Pages\r\n      description: Returns one or more content pages. This endpoint supports bulk operations.\r\n      responses:\r\n        '200':\r\n          description: ''\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/PagesCollectionResponse'\r\n              examples:\r\n                example-1:\r\n                  value:\r\n                    data:\r\n                      - id: 1\r\n                        channel_id: 1\r\n                        name: Content page\r\n                        meta_title: Content page\r\n                        email: ''\r\n                        is_visible: false\r\n                        parent_id: 0\r\n                        sort_order: 0\r\n                        type: page\r\n                        meta_keywords: ''\r\n                        meta_description: string\r\n                        is_homepage: false\r\n                        is_customers_only: false\r\n                        search_keywords: string\r\n                        content_type: text/html\r\n                        url: /my-content-page\r\n                      - id: 2\r\n                        channel_id: 1\r\n                        name: Feed page\r\n                        meta_title: string\r\n                        email: ''\r\n                        is_visible: false\r\n                        parent_id: 0\r\n                        sort_order: 3\r\n                        feed: 'https://bigcommerce.com/feed/'\r\n                        type: feed\r\n                        meta_keywords: ''\r\n                        meta_description: string\r\n                        is_homepage: false\r\n                        is_customers_only: true\r\n                        search_keywords: string\r\n                        content_type: text/html\r\n                        url: /rss-feed-page\r\n                      - id: 3\r\n                        channel_id: 1\r\n                        name: Link page\r\n                        meta_title: ''\r\n                        email: ''\r\n                        is_visible: false\r\n                        parent_id: 0\r\n                        sort_order: 0\r\n                        link: '1'\r\n                        type: link\r\n                        meta_keywords: ''\r\n                        meta_description: ''\r\n                        is_homepage: false\r\n                        is_customers_only: false\r\n                        search_keywords: ''\r\n                        content_type: text/html\r\n                    meta:\r\n                      pagination:\r\n                        total: 3\r\n                        count: 3\r\n                        per_page: 50\r\n                        current_page: 1\r\n                        total_pages: 1\r\n                        links:\r\n                          current: '?page=1\u0026limit=50'\r\n        '400':\r\n          description: 'Bad Request; reasons for failure include passing query parameters that are not support on this endpoint, but are common on other BigCommerce endpoints.'\r\n          content:\r\n            application/problem+json:\r\n              schema:\r\n                $ref: '#/components/schemas/DetailedErrorResponse'\r\n        '404':\r\n          description: Not Found\r\n          content:\r\n            application/problem+json:\r\n              schema:\r\n                $ref: '#/components/schemas/ErrorResponse'\r\n        '422':\r\n          description: Invalid input. Reasons for failure include passing supported parameters with values that have the incorrect datatype.\r\n          content:\r\n            application/problem+json:\r\n              schema:\r\n                $ref: '#/components/schemas/ListedErrorResponse'\r\n      parameters:\r\n        - schema:\r\n            type: integer\r\n          in: query\r\n          name: channel_id\r\n          description: Return only pages associated with the specified channel.\r\n        - schema:\r\n            type: string\r\n          in: query\r\n          name: 'id:in'\r\n          description: 'A comma-separated string of page IDs to fetch. Supports bulk operations. If none of the page IDs passed exist, the query will return an empty `data` array.'\r\n        - schema:\r\n            type: string\r\n          in: query\r\n          name: name\r\n          description: Name of the page.\r\n        - schema:\r\n            type: string\r\n          in: query\r\n          name: 'name:like'\r\n          description: One word from the name of the page. Does not search substrings. Does not return pages with names that match exactly. Does not support fuzzy search.\r\n        - schema:\r\n            type: integer\r\n          in: query\r\n          name: limit\r\n          description: The number of results to return per request. See `meta.pagination.per_page` in the response body.\r\n        - schema:\r\n            type: integer\r\n          in: query\r\n          name: page\r\n          description: The ordered grouping of results to return. See `meta.pagination.current_page` in the response body.\r\n      summary: Get Pages\r\n    post:\r\n      operationId: content-pages-post\r\n      description: Creates one or more content pages. This endpoint supports bulk operations.\r\n      tags:\r\n        - Pages\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/Page'\r\n            examples:\r\n              example-1:\r\n                value:\r\n                  channel_id: 1\r\n                  name: Content Page\r\n                  is_visible: false\r\n                  parent_id: 0\r\n                  sort_order: 0\r\n                  type: page\r\n                  body: \u003cdiv\u003eHello World!\u003c/div\u003e\r\n                  is_homepage: false\r\n                  meta_title: My Content page\r\n                  meta_keywords: string\r\n                  meta_description: string\r\n                  search_keywords: string\r\n                  url: /my-content-page\r\n        description: ''\r\n        required: true\r\n      responses:\r\n        '201':\r\n          description: |-\r\n            Created.\r\n\r\n            Response.data will inherit the datatype of the request. A single entry passed as an object will return an object for the data property. Any number of entries passed in an array will return an array for the data property.\r\n\r\n            Properties associated with a page `type` that are not required to create an entry will be created with default values. \r\n\r\n            When making bulk requests, an invalid input in any one entry will return 422. The entries that are valid will still be created.\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  data:\r\n                    oneOf:\r\n                      - type: object\r\n                        properties:\r\n                          data:\r\n                            $ref: '#/components/schemas/Page'\r\n                      - type: array\r\n                        items:\r\n                          type: object\r\n                          properties:\r\n                            data:\r\n                              $ref: '#/components/schemas/PageBase'\r\n                  meta:\r\n                    $ref: '#/components/schemas/CollectionMeta'\r\n        '207':\r\n          $ref: '#/components/responses/HTTP207Response'\r\n        '422':\r\n          description: |-\r\n            The input was not valid. This is the result of missing required fields or other invalid arguments. See the response for more details.\r\n\r\n            When making bulk requests, an invalid input in any one entry will cause the whole request to return 422. The entries that are valid will still be created.\r\n          content:\r\n            application/problem+json:\r\n              schema:\r\n                $ref: '#/components/schemas/DetailedErrorResponse'\r\n      summary: Create Pages\r\n    put:\r\n      operationId: content-pages-put\r\n      description: Updates one or more content pages. This endpoint supports bulk operations.\r\n      tags:\r\n        - Pages\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              oneOf:\r\n                - $ref: '#/components/schemas/PagePutBulk'\r\n                - type: array\r\n                  items:\r\n                    $ref: '#/components/schemas/PagePutBulk'\r\n      responses:\r\n        '200':\r\n          description: |\r\n            Updated.\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/PagesCollectionResponse'\r\n              examples:\r\n                update meta descriptions for two  pages:\r\n                  value:\r\n                    data:\r\n                      - id: 20\r\n                        channel_id: 1\r\n                        name: all about powder detergents\r\n                        meta_title: ''\r\n                        is_visible: false\r\n                        parent_id: 0\r\n                        sort_order: 0\r\n                        meta_keywords: null\r\n                        type: page\r\n                        meta_description: cornpone\r\n                        is_homepage: false\r\n                        is_customers_only: false\r\n                        search_keywords: ''\r\n                      - id: 19\r\n                        channel_id: 1\r\n                        name: sign up to dream big\r\n                        meta_title: ''\r\n                        email: ''\r\n                        is_visible: false\r\n                        parent_id: 0\r\n                        sort_order: 0\r\n                        meta_keywords: null\r\n                        contact_fields: ''\r\n                        type: contact_form\r\n                        meta_description: arugula\r\n                        is_homepage: false\r\n                        is_customers_only: false\r\n                        search_keywords: ''\r\n                    meta: {}\r\n        '207':\r\n          $ref: '#/components/responses/HTTP207Response'\r\n        '404':\r\n          description: Not Found\r\n          content:\r\n            application/problem+json:\r\n              schema:\r\n                $ref: '#/components/schemas/ErrorResponse'\r\n              examples:\r\n                example-1:\r\n                  value:\r\n                    status: 0\r\n                    title: string\r\n                    type: string\r\n        '422':\r\n          description: The input was not valid. This is the result of missing required fields or other invalid arguments. See the response for more details.\r\n          content:\r\n            application/problem+json:\r\n              schema:\r\n                $ref: '#/components/schemas/DetailedErrorResponse'\r\n              examples:\r\n                missing required field for type raw:\r\n                  value:\r\n                    status: 422\r\n                    title: Input is invalid\r\n                    type: 'https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes'\r\n                    detail: 'missing the required field: body'\r\n      summary: Update Pages\r\n    delete:\r\n      operationId: content-pages-delete\r\n      tags:\r\n        - Pages\r\n      description: |-\r\n        Deletes one or more content pages. This endpoint supports bulk operations.\r\n\r\n        \u003c!-- theme: warning --\u003e\r\n        \u003e #### Mind query parameters\r\n        \u003e If you attempt to delete multiple pages by passing more than one pageId to `id:in` and one or more of them does not exist, you will receive a 404 response. However, the pages corresponding to the pagesIds that do exist will still be deleted.\r\n      responses:\r\n        '204':\r\n          description: No content. A 204 response with no payload indicates successful deletion of all specified pages.\r\n        '404':\r\n          description: Not Found. One of more of the pages specified for deletion did not exist. Specified pages that did exist were successfully deleted.\r\n          content:\r\n            application/problem+json:\r\n              schema:\r\n                $ref: '#/components/schemas/ErrorResponse'\r\n              examples:\r\n                Page not found:\r\n                  value:\r\n                    status: 404\r\n                    title: A Page was not found with an id of 100\r\n                    type: 'https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes'\r\n        '422':\r\n          description: Invalid input. See response for details.\r\n          content:\r\n            application/problem+json:\r\n              schema:\r\n                $ref: '#/components/schemas/DetailedErrorResponse'\r\n              examples:\r\n                Missing ID:\r\n                  value:\r\n                    status: 422\r\n                    title: Input is invalid\r\n                    type: 'https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes'\r\n                    detail: 'missing the required field: id'\r\n      parameters:\r\n        - schema:\r\n            type: string\r\n          in: query\r\n          name: 'id:in'\r\n          description: 'Request deletion of multiple pages by passing a comma-separated string of corresponding page IDs. Supports bulk operations. '\r\n          required: true\r\n      summary: Delete Pages\r\n    parameters:\r\n      - schema:\r\n          type: string\r\n        name: store_hash\r\n        in: path\r\n        required: true\r\n        description: The merchant's store hash. Also called a store id.\r\n  '/stores/{store_hash}/v3/content/pages/{pageId}':\r\n    get:\r\n      operationId: content-page-get\r\n      tags:\r\n        - Pages\r\n      description: |-\r\n        Returns one content page.\r\n\r\n        \u003c!-- theme: warning --\u003e\r\n        \u003e #### Mind query parameters\r\n        \u003e This endpoint recognizes the same query parameters as [Get Multiple Pages](/api-reference/store-management/pages/pages/getpages). If the requested page does not meet the query parameters you specify, you will receive a 404 response even if the requested pageId does exist.\r\n      responses:\r\n        '200':\r\n          description: ''\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/PageResponse'\r\n              examples:\r\n                several data types:\r\n                  value:\r\n                    data:\r\n                      - id: 3\r\n                        channel_id: 1\r\n                        name: Blog\r\n                        meta_title: Blog\r\n                        is_visible: false\r\n                        parent_id: 0\r\n                        sort_order: 4\r\n                        meta_keywords: ''\r\n                        type: blog\r\n                        meta_description: ''\r\n                        is_homepage: false\r\n                        is_customers_only: false\r\n                        search_keywords: '0'\r\n                        url: /blog/\r\n                      - id: 5\r\n                        channel_id: 1\r\n                        name: Contact Us\r\n                        meta_title: ''\r\n                        email: ''\r\n                        is_visible: true\r\n                        parent_id: 0\r\n                        sort_order: 3\r\n                        meta_keywords: contact keyword\r\n                        contact_fields: 'fullname,companyname,phone,orderno,rma'\r\n                        type: contact_form\r\n                        meta_description: contact meta desc\r\n                        is_homepage: false\r\n                        is_customers_only: true\r\n                        search_keywords: contact search keyword\r\n                      - id: 16\r\n                        channel_id: 1\r\n                        name: all about powder detergents 2\r\n                        meta_title: ''\r\n                        is_visible: false\r\n                        parent_id: 0\r\n                        sort_order: 0\r\n                        meta_keywords: null\r\n                        type: page\r\n                        meta_description: ''\r\n                        is_homepage: false\r\n                        is_customers_only: false\r\n                        search_keywords: ''\r\n                      - id: 17\r\n                        channel_id: 1\r\n                        name: one hundred million red balloons 3\r\n                        is_visible: false\r\n                        parent_id: 0\r\n                        sort_order: 0\r\n                        type: raw\r\n                        is_homepage: false\r\n                        is_customers_only: false\r\n                        search_keywords: ''\r\n                        content_type: text/html\r\n                      - id: 18\r\n                        channel_id: 1\r\n                        name: diaper pin purveyors 3\r\n                        is_visible: false\r\n                        parent_id: 0\r\n                        sort_order: 0\r\n                        link: 'https://example.com/diaper-pins'\r\n                        type: link\r\n                        is_homepage: false\r\n                        is_customers_only: false\r\n                      - id: 19\r\n                        channel_id: 1\r\n                        name: sign up to crush dreams 3\r\n                        meta_title: ''\r\n                        email: ''\r\n                        is_visible: false\r\n                        parent_id: 0\r\n                        sort_order: 0\r\n                        meta_keywords: null\r\n                        contact_fields: ''\r\n                        type: contact_form\r\n                        meta_description: ''\r\n                        is_homepage: false\r\n                        is_customers_only: false\r\n                        search_keywords: ''\r\n                      - id: 20\r\n                        channel_id: 1\r\n                        name: all about powder detergents 3\r\n                        meta_title: ''\r\n                        is_visible: false\r\n                        parent_id: 0\r\n                        sort_order: 0\r\n                        meta_keywords: null\r\n                        type: page\r\n                        meta_description: ''\r\n                        is_homepage: false\r\n                        is_customers_only: false\r\n                        search_keywords: ''\r\n                      - id: 21\r\n                        channel_id: 1\r\n                        name: feed monsters 3\r\n                        meta_title: ''\r\n                        is_visible: false\r\n                        parent_id: 0\r\n                        sort_order: 0\r\n                        meta_keywords: null\r\n                        feed: /rss/monsters\r\n                        type: feed\r\n                        meta_description: ''\r\n                        is_homepage: false\r\n                        is_customers_only: false\r\n                        search_keywords: ''\r\n                      - id: 22\r\n                        channel_id: 1\r\n                        name: one hundred million red balloons 4\r\n                        is_visible: false\r\n                        parent_id: 0\r\n                        sort_order: 0\r\n                        type: raw\r\n                        is_homepage: false\r\n                        is_customers_only: false\r\n                        search_keywords: ''\r\n                        content_type: text/html\r\n                      - id: 23\r\n                        channel_id: 1\r\n                        name: diaper pin purveyors 4\r\n                        is_visible: false\r\n                        parent_id: 0\r\n                        sort_order: 0\r\n                        link: 'https://example.com/diaper-pins'\r\n                        type: link\r\n                        is_homepage: false\r\n                        is_customers_only: false\r\n                    meta:\r\n                      pagination:\r\n                        total: 6\r\n                        count: 6\r\n                        per_page: 50\r\n                        current_page: 1\r\n                        total_pages: 1\r\n                        links:\r\n                          current: '?page=1\u0026limit=50'\r\n        '404':\r\n          description: Not Found.\r\n          content:\r\n            application/problem+json:\r\n              schema:\r\n                $ref: '#/components/schemas/ErrorResponse'\r\n              examples:\r\n                pageId does not exist:\r\n                  value:\r\n                    status: 404\r\n                    title: A Page was not found with an id of 99\r\n                    type: 'https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes'\r\n        '422':\r\n          description: Invalid input. One or more path parameter(s) did not have the incorrect datatype.\r\n          content:\r\n            application/problem+json:\r\n              schema:\r\n                $ref: '#/components/schemas/ListedErrorResponse'\r\n              examples:\r\n                pageId is bar:\r\n                  value:\r\n                    status: 422\r\n                    title: Invalid Input.\r\n                    type: 'https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes'\r\n                    errors:\r\n                      - bar\r\n      parameters: []\r\n      summary: Get a Page\r\n    put:\r\n      operationId: content-page-put\r\n      description: Updates one content page.\r\n      tags:\r\n        - Pages\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/PagePut'\r\n        description: ''\r\n        required: true\r\n      responses:\r\n        '200':\r\n          description: |+\r\n\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/PageResponse'\r\n        '207':\r\n          $ref: '#/components/responses/HTTP207Response'\r\n        '400':\r\n          description: Bad Request; reasons for failure include invalid query parameters. See the response for more details.\r\n          content:\r\n            application/problem+json:\r\n              schema:\r\n                $ref: '#/components/schemas/DetailedErrorResponse'\r\n        '404':\r\n          description: Not Found\r\n          content:\r\n            application/problem+json:\r\n              schema:\r\n                $ref: '#/components/schemas/ErrorResponse'\r\n              examples:\r\n                not found:\r\n                  value:\r\n                    status: 404\r\n                    title: A Page was not found with an id of 99\r\n                    type: 'https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes'\r\n        '422':\r\n          description: The input was not valid. This is the result of missing required fields or other invalid arguments. See the response for more details.\r\n          content:\r\n            application/problem+json:\r\n              schema:\r\n                $ref: '#/components/schemas/DetailedErrorResponse'\r\n      summary: Update a Page\r\n    delete:\r\n      operationId: content-page-delete\r\n      tags:\r\n        - Pages\r\n      description: |-\r\n        Deletes one content page.\r\n\r\n        \u003c!-- theme: info --\u003e\r\n        \u003e #### Query parameters\r\n        \u003e This endpoint does not recognize query parameters.\r\n      responses:\r\n        '204':\r\n          description: No content. A 204 response with no payload indicates successful deletion.\r\n        '404':\r\n          description: The page specified for deletion did not exist.\r\n          content:\r\n            application/problem+json:\r\n              schema:\r\n                $ref: '#/components/schemas/ErrorResponse'\r\n              examples:\r\n                example-1:\r\n                  value:\r\n                    status: 404\r\n                    title: A Page was not found with an id of 99\r\n                    type: 'https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes'\r\n      parameters: []\r\n      summary: Delete a Page\r\n    parameters:\r\n      - schema:\r\n          type: string\r\n        name: store_hash\r\n        in: path\r\n        required: true\r\n        description: The merchant's store hash. Also called a store id.\r\n      - schema:\r\n          type: string\r\n        name: pageId\r\n        in: path\r\n        required: true\r\n        description: The id of the page to be operated on.\r\nservers:\r\n  - url: 'https://api.bigcommerce.com'\r\n    description: Pages API Gateway\r\n    variables:\r\n      store_hash:\r\n        default: abc123\r\n        description: Store hash used to identify the store.\r\nx-stoplight:\r\n  docs:\r\n    includeDownloadLink: true\r\n    showModels: false\r\ncomponents:\r\n  schemas:\r\n    BaseError:\r\n      type: object\r\n      description: |\r\n        Error payload for the BigCommerce API.\r\n      properties:\r\n        status:\r\n          description: |\r\n            The HTTP status code.\r\n          type: integer\r\n        title:\r\n          description: |\r\n            The error title describing the particular error.\r\n          type: string\r\n        type:\r\n          type: string\r\n      required:\r\n        - status\r\n    DetailedError:\r\n      type: object\r\n      description: |\r\n        Error payload for the BigCommerce API.\r\n      properties:\r\n        status:\r\n          description: |\r\n            The HTTP status code.\r\n          type: integer\r\n        title:\r\n          description: |\r\n            The error title describing the particular error.\r\n          type: string\r\n        type:\r\n          type: string\r\n        detail:\r\n          type: string\r\n      required:\r\n        - status\r\n    ListedError:\r\n      type: object\r\n      description: |\r\n        Error payload for the BigCommerce API.\r\n      title: ListedError\r\n      properties:\r\n        status:\r\n          description: |\r\n            The HTTP status code.\r\n          type: integer\r\n        title:\r\n          description: |\r\n            The error title describing the particular error.\r\n          type: string\r\n        type:\r\n          type: string\r\n        errors:\r\n          type: array\r\n          items:\r\n            type: string\r\n      required:\r\n        - status\r\n    ErrorResponse:\r\n      allOf:\r\n        - $ref: '#/components/schemas/BaseError'\r\n      title: ListedErrorResponse\r\n    ListedErrorResponse:\r\n      allOf:\r\n        - $ref: '#/components/schemas/ListedError'\r\n    DetailedErrorResponse:\r\n      allOf:\r\n        - $ref: '#/components/schemas/DetailedError'\r\n    CollectionMeta:\r\n      type: object\r\n      description: |\r\n        Data about the response, including pagination and collection totals.\r\n      properties:\r\n        pagination:\r\n          $ref: '#/components/schemas/Pagination'\r\n    PagesCollectionResponse:\r\n      description: |\r\n        Response payload for the BigCommerce API.\r\n      type: object\r\n      title: ''\r\n      properties:\r\n        data:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/Page'\r\n        meta:\r\n          $ref: '#/components/schemas/CollectionMeta'\r\n    PageResponse:\r\n      description: |\r\n        Response payload for the BigCommerce API.\r\n      x-examples: {}\r\n      allOf:\r\n        - properties:\r\n            data:\r\n              type: array\r\n              items:\r\n                $ref: '#/components/schemas/Page'\r\n            meta:\r\n              $ref: '#/components/schemas/CollectionMeta'\r\n      title: PageResponseObject\r\n      type: object\r\n    ContactFields:\r\n      allOf:\r\n        - properties:\r\n            fullname:\r\n              type: string\r\n              description: Full name of the customer submitting the form.\r\n            phone:\r\n              type: string\r\n              description: 'Customer’s phone number, as submitted on the form.'\r\n            companyname:\r\n              type: string\r\n              description: Customer’s submitted company name.\r\n            orderno:\r\n              type: string\r\n              description: Customer’s submitted order number.\r\n            rma:\r\n              type: string\r\n              description: Customer’s submitted RMA (Return Merchandise Authorization) number.\r\n      type: object\r\n    PagePutBulk:\r\n      type: object\r\n      description: Page modification request body properties.\r\n      properties:\r\n        name:\r\n          type: string\r\n          description: |\r\n            The name of the page. Must be unique.\r\n          minLength: 1\r\n          maxLength: 100\r\n          example: My Store Page\r\n        is_visible:\r\n          type: boolean\r\n          description: |\r\n            Determines the visibility of the page in the storefront’s navigation menu.\r\n        parent_id:\r\n          type: integer\r\n          description: |\r\n            ID of any parent Web page.\r\n          example: 0\r\n          default: 0\r\n        sort_order:\r\n          type: integer\r\n          description: |\r\n            Determines the order in which the page is displayed on the storefront. (Lower integers specify earlier display.)\r\n          example: 0\r\n          default: 0\r\n        type:\r\n          type: string\r\n          description: |-\r\n            Determines the type of the page.\r\n\r\n            |Value|Description|\r\n            |-|-|\r\n            | `blog` | blog page. Read-only; blog pages can only be created in the store control panel. |\r\n            |`contact_form`|hosts the store's contact form|\r\n            |`link`|link to another absolute URL|\r\n            |`page`|user-defined plain-text page|\r\n            |`raw`|page that contains markup, such as HTML.|\r\n            |`rss_feed`|contains syndicated content from an RSS feed|\r\n          example: page\r\n          enum:\r\n            - page\r\n            - raw\r\n            - contact_form\r\n            - feed\r\n            - link\r\n            - blog\r\n        is_homepage:\r\n          type: boolean\r\n          description: |\r\n            Determines whether this page is the storefront’s home page.\r\n        is_customers_only:\r\n          type: boolean\r\n          description: |\r\n            If `true`, this page will not be visible when logged in to the store control panel.\r\n        id:\r\n          type: integer\r\n          description: The id of the target page\r\n        email:\r\n          type: string\r\n          description: 'Where the page’s type is a contact form: contact email address that receives messages sent via the form. Must be unique.'\r\n          maxLength: 255\r\n        meta_title:\r\n          type: string\r\n        body:\r\n          type: string\r\n          description: |\r\n            HTML or variable that populates this page’s  element, in default/desktop view. Required in a `POST` request if the page type is `raw`.\r\n          example: \u003cdiv\u003eHello World!\u003c/div\u003e\r\n          writeOnly: true\r\n        feed:\r\n          type: string\r\n          description: |\r\n            The URL of the RSS feed. Required in a `POST` request if the page type is `rss_feed`.\r\n        link:\r\n          type: string\r\n          description: |\r\n            Required in a `POST` request to create a link if the page type is `link`.\r\n        contact_fields:\r\n          type: string\r\n          description: |\r\n            Where the page’s type is `contact_form`: comma-separated list of keywords representing the fields enabled in the control panel for storefront display. Possible fields include:\r\n\r\n            |Field|Description|\r\n            |-|-|\r\n            |`fullname`|Full name of the customer submitting the form|\r\n            |`phone`|Customer’s phone number, as submitted on the form|\r\n            |`companyname`|Customer’s submitted company name|\r\n            |`orderno`|Customer’s submitted order number|\r\n            |`rma`|Customer’s submitted RMA (Return Merchandise Authorization) number|\r\n          example: 'fullname,companyname,phone,orderno,rma'\r\n          enum:\r\n            - fullname\r\n            - phone\r\n            - companyname\r\n            - phone\r\n            - orderno\r\n        meta_keywords:\r\n          type: string\r\n          description: |\r\n            Comma-separated list of SEO-relevant keywords to include in the page’s  element.\r\n        meta_description:\r\n          type: string\r\n          description: |\r\n            Description contained within this page’s  element.\r\n        search_keywords:\r\n          type: string\r\n          description: |\r\n            Comma-separated list of keywords that shoppers can use to locate this page when searching the store.\r\n          example: 'trousers,pockets,luxury'\r\n        url:\r\n          type: string\r\n          description: |\r\n            Relative URL on the storefront for this page.\r\n          example: /my-store-page\r\n        channel_id:\r\n          type: integer\r\n          description: |\r\n            The Id of the channel where this page should be shown.\r\n          example: 12\r\n          default: 0\r\n      required:\r\n        - id\r\n    PagePut:\r\n      type: object\r\n      description: Page modification request body properties.\r\n      properties:\r\n        name:\r\n          type: string\r\n          description: |\r\n            The name of the page. Must be unique.\r\n          minLength: 1\r\n          maxLength: 100\r\n          example: My Store Page\r\n        is_visible:\r\n          type: boolean\r\n          description: |\r\n            Determines the visibility of the page in the storefront’s navigation menu.\r\n        parent_id:\r\n          type: integer\r\n          description: |\r\n            ID of any parent Web page.\r\n          example: 0\r\n          default: 0\r\n        sort_order:\r\n          type: integer\r\n          description: |\r\n            Determines the order in which the page is displayed on the storefront. (Lower integers specify earlier display.)\r\n          example: 0\r\n          default: 0\r\n        type:\r\n          type: string\r\n          description: |-\r\n            Determines the type of the page.\r\n\r\n            |Value|Description|\r\n            |-|-|\r\n            | `blog` | blog page. Read-only; blog pages can only be created in the store control panel. |\r\n            |`contact_form`|hosts the store's contact form|\r\n            |`link`|link to another absolute URL|\r\n            |`page`|user-defined plain-text page|\r\n            |`raw`|page that contains markup, such as HTML.|\r\n            |`rss_feed`|contains syndicated content from an RSS feed|\r\n          example: page\r\n          enum:\r\n            - page\r\n            - raw\r\n            - contact_form\r\n            - feed\r\n            - link\r\n            - blog\r\n        is_homepage:\r\n          type: boolean\r\n          description: |\r\n            Determines whether this page is the storefront’s home page.\r\n        is_customers_only:\r\n          type: boolean\r\n          description: |\r\n            If `true`, this page will not be visible when logged in to the store control panel.\r\n        email:\r\n          type: string\r\n          description: 'Where the page’s type is a contact form: contact email address that receives messages sent via the form. Must be unique.'\r\n          maxLength: 255\r\n        meta_title:\r\n          type: string\r\n        body:\r\n          type: string\r\n          description: |\r\n            HTML or variable that populates this page’s  element, in default/desktop view. Required in a `POST` request if the page type is `raw`.\r\n          example: \u003cdiv\u003eHello World!\u003c/div\u003e\r\n          writeOnly: true\r\n        feed:\r\n          type: string\r\n          description: |\r\n            The URL of the RSS feed. Required in a `POST` request if the page type is `rss_feed`.\r\n        link:\r\n          type: string\r\n          description: |\r\n            Required in a `POST` request to create a link if the page type is `link`.\r\n        contact_fields:\r\n          type: string\r\n          description: |\r\n            Where the page’s type is `contact_form`: comma-separated list of keywords representing the fields enabled in the control panel for storefront display. Possible fields include:\r\n\r\n            |Field|Description|\r\n            |-|-|\r\n            |`fullname`|Full name of the customer submitting the form|\r\n            |`phone`|Customer’s phone number, as submitted on the form|\r\n            |`companyname`|Customer’s submitted company name|\r\n            |`orderno`|Customer’s submitted order number|\r\n            |`rma`|Customer’s submitted RMA (Return Merchandise Authorization) number|\r\n          example: 'fullname,companyname,phone,orderno,rma'\r\n          enum:\r\n            - fullname\r\n            - phone\r\n            - companyname\r\n            - phone\r\n            - orderno\r\n        meta_keywords:\r\n          type: string\r\n          description: |\r\n            Comma-separated list of SEO-relevant keywords to include in the page’s  element.\r\n        meta_description:\r\n          type: string\r\n          description: |\r\n            Description contained within this page’s  element.\r\n        search_keywords:\r\n          type: string\r\n          description: |\r\n            Comma-separated list of keywords that shoppers can use to locate this page when searching the store.\r\n          example: 'trousers,pockets,luxury'\r\n        url:\r\n          type: string\r\n          description: |\r\n            Relative URL on the storefront for this page.\r\n          example: /my-store-page\r\n        channel_id:\r\n          type: integer\r\n          description: |\r\n            The Id of the channel where this page should be shown.\r\n          example: 12\r\n          default: 0\r\n      required:\r\n        - id\r\n    Page:\r\n      allOf:\r\n        - type: object\r\n          properties:\r\n            email:\r\n              type: string\r\n              description: 'Where the page’s type is a contact form: contact email address that receives messages sent via the form. Must be unique.'\r\n              maxLength: 255\r\n              default: ''\r\n            meta_title:\r\n              type: string\r\n              default: ''\r\n            body:\r\n              type: string\r\n              description: |\r\n                HTML or variable that populates this page’s  element, in default/desktop view. Required in a `POST` request if the page type is `raw`.\r\n              example: \u003cdiv\u003eHello World!\u003c/div\u003e\r\n              writeOnly: true\r\n            feed:\r\n              type: string\r\n              description: |\r\n                The URL of the RSS feed. Required in a `POST` request if the page type is `rss_feed`.\r\n            link:\r\n              type: string\r\n              description: |\r\n                Required in a `POST` request to create a link if the page type is `link`.\r\n            contact_fields:\r\n              type: string\r\n              description: |\r\n                Where the page’s type is `contact_form`: comma-separated list of keywords representing the fields enabled in the control panel for storefront display. Possible fields include:\r\n\r\n                |Field|Description|\r\n                |-|-|\r\n                |`fullname`|Full name of the customer submitting the form|\r\n                |`phone`|Customer’s phone number, as submitted on the form|\r\n                |`companyname`|Customer’s submitted company name|\r\n                |`orderno`|Customer’s submitted order number|\r\n                |`rma`|Customer’s submitted RMA (Return Merchandise Authorization) number|\r\n              example: 'fullname,companyname,phone,orderno,rma'\r\n              default: ''\r\n              enum:\r\n                - fullname\r\n                - phone\r\n                - companyname\r\n                - phone\r\n                - orderno\r\n            meta_keywords:\r\n              type: string\r\n              description: |\r\n                Comma-separated list of SEO-relevant keywords to include in the page’s  element.\r\n              default: ''\r\n            meta_description:\r\n              type: string\r\n              description: |\r\n                Description contained within this page’s  element.\r\n              default: ''\r\n            search_keywords:\r\n              type: string\r\n              description: |\r\n                Comma-separated list of keywords that shoppers can use to locate this page when searching the store.\r\n              example: 'trousers,pockets,luxury'\r\n              default: ''\r\n            url:\r\n              type: string\r\n              description: |\r\n                Relative URL on the storefront for this page.\r\n              example: /my-store-page\r\n            channel_id:\r\n              type: integer\r\n              description: |\r\n                The Id of the channel where this page should be shown.\r\n              example: 12\r\n              default: 1\r\n        - $ref: '#/components/schemas/PageBase'\r\n      title: ''\r\n      description: ''\r\n    PageBase:\r\n      type: object\r\n      description: Common Page properties.\r\n      properties:\r\n        name:\r\n          type: string\r\n          description: |\r\n            The name of the page. Must be unique.\r\n          minLength: 1\r\n          maxLength: 100\r\n          example: My Store Page\r\n        is_visible:\r\n          type: boolean\r\n          description: |\r\n            Determines the visibility of the page in the storefront’s navigation menu.\r\n        parent_id:\r\n          type: integer\r\n          description: |\r\n            ID of any parent Web page.\r\n          example: 0\r\n          default: 0\r\n        sort_order:\r\n          type: integer\r\n          description: |\r\n            Determines the order in which the page is displayed on the storefront. (Lower integers specify earlier display.)\r\n          example: 0\r\n          default: 0\r\n        type:\r\n          type: string\r\n          description: |-\r\n            Determines the type of the page.\r\n\r\n            |Value|Description|\r\n            |-|-|\r\n            | `blog` | blog page. Read-only; blog pages can only be created in the store control panel. |\r\n            |`contact_form`|hosts the store's contact form|\r\n            |`link`|link to another absolute URL|\r\n            |`page`|user-defined plain-text page|\r\n            |`raw`|page that contains markup, such as HTML.|\r\n            |`rss_feed`|contains syndicated content from an RSS feed|\r\n          example: page\r\n          enum:\r\n            - page\r\n            - raw\r\n            - contact_form\r\n            - feed\r\n            - link\r\n            - blog\r\n        is_homepage:\r\n          type: boolean\r\n          description: |\r\n            Determines whether this page is the storefront’s home page.\r\n        is_customers_only:\r\n          type: boolean\r\n          description: |\r\n            If `true`, this page will only be visible to customers that are logged in to the store.\r\n      required:\r\n        - name\r\n        - type\r\n    Pagination:\r\n      type: object\r\n      description: |\r\n        Data about the response, including pagination and collection totals.\r\n      properties:\r\n        total:\r\n          type: integer\r\n          description: |\r\n            Total number of items in the result set.\r\n        count:\r\n          type: integer\r\n          description: |\r\n            Total number of items in the collection response.\r\n        per_page:\r\n          type: integer\r\n          description: |\r\n            The amount of items returned in the collection per page, controlled by the limit parameter.\r\n        current_page:\r\n          type: integer\r\n          description: |\r\n            The page you are currently on within the collection.\r\n        total_pages:\r\n          type: integer\r\n          description: |\r\n            The total number of pages in the collection.\r\n        links:\r\n          type: object\r\n          description: |\r\n            Pagination links for the previous and next parts of the whole collection.\r\n          properties:\r\n            previous:\r\n              type: string\r\n              description: |\r\n                Link to the previous page returned in the response.\r\n            current:\r\n              type: string\r\n              description: |\r\n                Link to the current page returned in the response.\r\n            next:\r\n              type: string\r\n              description: |\r\n                Link to the next page returned in the response.\r\n    PageFull:\r\n      title: PageFull\r\n      allOf:\r\n        - $ref: '#/components/schemas/Page'\r\n  securitySchemes:\r\n    X-Auth-Token:\r\n      name: X-Auth-Token\r\n      type: apiKey\r\n      in: header\r\n  responses:\r\n    HTTP207Response:\r\n      description: 'Multiple operations have taken place and the status for each operation can be viewed in the body of the response. Typically indicates that a partial failure has occured, such as when a `POST` or `PUT` request is successful, but saving the URL has failed.'\r\n      content:\r\n        application/json:\r\n          schema: {}\r\n"
		}
	},
	"Error": "unmarshal: callback: callback: value \"\\\"phone\\\"\" is duplicated"
}