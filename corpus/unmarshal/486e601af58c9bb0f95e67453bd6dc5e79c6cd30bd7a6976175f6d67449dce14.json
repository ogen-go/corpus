{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "omdbapi.com-1-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/omdbapi.com-1-swagger.yaml",
			"byteSize": 5942,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    email: bfritz@fadingsignal.com\n    name: Open Movie Database\n    url: http://omdbapi.com\n  description: The Open Movie Database. The OMDb API is a free web service to obtain movie\n    information, all content and images on the site are contributed and\n    maintained by our users.\n  license:\n    name: CC BY-NC 4.0\n    url: https://creativecommons.org/licenses/by-nc/4.0/\n  termsOfService: http://www.omdbapi.com/legal.htm\n  title: OMDb\n  version: \"1\"\n  x-apisguru-categories:\n    - media\n    - open_data\n  x-logo:\n    backgroundColor: \"#FFFFFF\"\n    url: http://raw.githubusercontent.com/Mermade/open_api_specifications/master/OMDb/OMDb.png\n  x-origin:\n    - format: swagger\n      url: https://raw.githubusercontent.com/Mermade/open_api_specifications/master/OMDb/swagger.json\n      version: \"2.0\"\n  x-providerName: omdbapi.com\n  x-unofficialSpec: true\nexternalDocs:\n  description: OMDb Usage\n  url: http://www.omdbapi.com/#usage\npaths:\n  /:\n    get:\n      description: Find a movie, series or episode from the OMDb by title, IMDb-id or by\n        free-text search\n      operationId: Get_OMDb Search\n      parameters:\n        - description: Movie title to search for. One of t, i or s is required.\n          in: query\n          name: t\n          required: false\n          schema:\n            type: string\n        - description: A valid IMDb ID (e.g. tt1285016). One of t, i or s is required.\n          in: query\n          name: i\n          required: false\n          schema:\n            type: string\n        - description: Movie title to search for. One of t, i or s is required.\n          in: query\n          name: s\n          required: false\n          schema:\n            type: string\n        - description: Year of release.\n          in: query\n          name: y\n          required: false\n          schema:\n            type: integer\n        - description: Type of result to return.\n          in: query\n          name: type\n          required: false\n          schema:\n            type: string\n            enum:\n              - movie\n              - series\n              - episode\n        - description: Return short or full plot.\n          in: query\n          name: plot\n          required: false\n          schema:\n            type: string\n            enum:\n              - short\n              - full\n            default: short\n        - description: Include Rotten Tomatoes ratings.\n          in: query\n          name: tomatoes\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: The data type to return.\n          in: query\n          name: r\n          required: true\n          schema:\n            type: string\n            enum:\n              - json\n              - xml\n            default: json\n        - description: API version (reserved for future use).\n          in: query\n          name: v\n          required: false\n          schema:\n            type: integer\n            default: 1\n        - description: Page number to return.\n          in: query\n          name: page\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 1\n        - description: JSONP callback name.\n          in: query\n          name: callback\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Default response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/combinedResult\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/combinedResult\"\n      security: []\n      summary: OMDb Search\nservers:\n  - url: http://www.omdbapi.com/\n  - url: https://www.omdbapi.com/\ncomponents:\n  schemas:\n    combinedResult:\n      properties:\n        Actors:\n          type: string\n        Awards:\n          type: string\n        BoxOffice:\n          type: string\n        Country:\n          type: string\n        DVD:\n          type: string\n        Director:\n          type: string\n        Genre:\n          type: string\n        Language:\n          type: string\n        Metascore:\n          type: string\n        Plot:\n          type: string\n        Poster:\n          type: string\n        Production:\n          type: string\n        Rated:\n          type: string\n        Released:\n          type: string\n        Response:\n          type: string\n        Runtime:\n          type: string\n        Search:\n          items:\n            properties:\n              Poster:\n                type: string\n              Title:\n                type: string\n              Type:\n                type: string\n              Year:\n                type: string\n              imdbID:\n                type: string\n            required:\n              - Title\n              - Year\n              - imdbID\n              - Type\n              - Poster\n            type: object\n          type: array\n        Title:\n          type: string\n        Type:\n          type: string\n        Website:\n          type: string\n        Writer:\n          type: string\n        Year:\n          type: string\n        imdbID:\n          type: string\n        imdbRating:\n          type: string\n        imdbVotes:\n          type: string\n        tomatoConsensus:\n          type: string\n        tomatoFresh:\n          type: string\n        tomatoImage:\n          type: string\n        tomatoMeter:\n          type: string\n        tomatoRating:\n          type: string\n        tomatoReviews:\n          type: string\n        tomatoRotten:\n          type: string\n        tomatoURL:\n          type: string\n        tomatoUserMeter:\n          type: string\n        tomatoUserRating:\n          type: string\n        tomatoUserReviews:\n          type: string\n        totalResults:\n          type: string\n        totalSeasons:\n          type: string\n      required:\n        - Response\n      type: object\n"
		}
	},
	"Error": "unmarshal: json: cannot unmarshal bool into Go struct field Parameter.paths.get.parameters.name of type string"
}