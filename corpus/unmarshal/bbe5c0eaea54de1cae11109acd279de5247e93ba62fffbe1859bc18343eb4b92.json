{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/deepmipt/dp-agent"
		},
		"file": {
			"name": "agent_v0.9.1.yml",
			"size": 0,
			"path": "docs/source/_static/apispec/agent_v0.9.1.yml",
			"byteSize": 21513,
			"content": "openapi: \"3.0.1\"\n\ninfo:\n  title: \"DeepPavlov Skills REST API\"\n  version: \"0.9.1\"\n  description: >-\n    Agents built with DeepPavlov communicate with their Skills\n    via HTTP, so endpoints should be specified.\n\nservers:\n  - url: \"http://localhost:{port}/\"\n    description: \"Local development server\"\n    variables:\n      port:\n        default: 3978\n\npaths:\n  /:\n    get:\n      responses:\n        200:\n          description: Go to /apidocs/ to see graphical web UI for this API.\n\n  /api/v0/{skill_endpoint}/:\n    post:\n      parameters:\n        - name: skill_endpoint\n          in: path\n          required: true\n          schema:\n            enum:\n              - news\n              - currencies\n              - news_currencies\n      summary: Generic description of a skill endpoint\n      description: >-\n        An agent built with DeepPavlov sends requests to the skill endpoints\n        in order to retrieve the answers.\n      requestBody:\n        description: >-\n          Description of the request to be executed\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RequestBodySchema\"\n      responses:\n        200:\n          description: Request finished succesfully.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ODQAChitChatResponse200Schema\"\n        404:\n          description: This skill doesn't exsits.\n\n  /api/v0/news_currencies/:\n    post:\n      requestBody:\n        description: >-\n          Describe the request to be executed\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RequestBodySchema\"\n            example:\n              $ref: \"#/components/examples/GenericRequestBody/value\"\n      responses:\n        200:\n          description: News retrieved successfully.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ODQAChitChatResponse200Schema\"\n              example:\n                $ref: \"#/components/examples/NewsCurrenciesResponse/value\"\n\ncomponents:\n  schemas:\n    RequestBodySchema:\n      type: object\n      properties:\n        version:\n          description: Версия API.\n          type: string\n        dialogs:\n          description: >-\n            Батч независимых диалогов от разных пользователей.\n            В одном батче не могут находиться диалоги от одного и того же пользователя.\n            Размер батча нефиксированный, но ограничен сверху.\n            В одном диалоге могут принимать участие только два пользователя: человек и бот.\n          type: array\n          items:\n            $ref: \"#/components/schemas/Dialog\"\n    Dialog:\n      type: object\n      properties:\n        id:\n          description: Уникальный  id диалога.\n          type: string\n        location:\n          description: Город, в котором начался диалог.\n          type: string\n        utterances:\n          description: Список всех реплик данного диалога. Последняя реплика всегда принадлежит пользователю, и скилу нужно прислать ответ именно на эту реплику.\n          type: array\n          items:\n            $ref: \"#/components/schemas/Utterance\"\n        user:\n          $ref: \"#/components/schemas/User\"\n        bot:\n          $ref: \"#/components/schemas/Bot\"\n        channel_type:\n          description: Канал связи, по которому происходит общение. В данной версии API всегда “telegram”.\n          type: string\n    User:\n      description: Человек, принимающий участие в диалоге.\n      type: object\n      properties:\n        id:\n          description: Уникальный  id пользователя.\n          type: string\n        user_telegram_id:\n          description: Уникальный Telegram id пользователя.\n          type: string\n        user_type:\n          description: Тип пользователя. Всегда “human”.\n          type: string\n        device_type:\n          description: Кодовое название устройства, с которого пользователь написал первую реплику в диалоге. Может быть “iphone” или “android”.\n          type: string\n        personality:\n          description: Не имлементировано.\n          type: object\n        profile:\n          description: Персональная информация о пользователе.\n          type: object\n    Bot:\n      description: Бот, принимающий участие в диалоге. Бот - это конкретный агент с определенным набором скилов.\n      type: object\n      properties:\n        id:\n          description: Уникальный  id бота.\n          type: string\n        user_type:\n          description: Тип пользователя. Всегда “bot”.\n          type: string\n        personality:\n          description: Не имлементировано.\n          type: object\n    Profile:\n      description: Персональная информация о пользователе.\n      type: object\n      properties:\n        gender:\n          description: Пол человека. Может принимать значения “male”, “female”, “other”\n          type: string\n        birthdate:\n          description: Дата рождения человека. Может принимать строковые значения в формате YYYY-MM-DD.\n          type: string\n        name:\n          description: Имя человека.\n          type: string\n        location:\n          description: Местонахождение человека.\n          type: object\n        home_coordinates:\n          description: Координаты дома человека.\n          type: object\n        work_coordinates:\n          description: Координаты места работы человека.\n          type: object\n        occupation:\n          description: Профессия человека.\n          type: string\n        income_per_year:\n          description: Доход человека в год, в рублях.\n          type: number\n    Utterance:\n      type: object\n      properties:\n        id:\n          type: string\n          description: Уникальный ID реплики.\n        text:\n          type: string\n          description: >-\n            Текст реплики. Либо текст, написанный пользователем, либо ответ, присланный одним из скилов.\n            В случае, если это начальная реплика диалога, имеет значение \"/start\".\n        user_id:\n          type: string\n          description: Уникальный id пользователя, сказавшего данную реплику.\n        annotations:\n          $ref: \"#/components/schemas/Annotations\"\n        date_time:\n          type: string\n          description: Время получения реплики сервером.\n        confidece:\n          type: number\n          description: Уверенность скила в своем ответе.\n        active_skill:\n          type: string\n          description: Кодовое название скила, который был ответственным за формирование данной реплики.\n    Annotations:\n      description: >-\n        Разметка реплик входящими в препроцессор моделями.\n        Дефолтная аннотация: {'ner': {}, 'coref': {}, 'sentiment': {}}\n        Начальная реплика диалога, если это команда \"/start\", имеет дефолтную аннотацию.\n      type: object\n      properties:\n        ner:\n          $ref: \"#/components/schemas/NER\"\n        coref:\n          $ref: \"#/components/schemas/Coref\"\n        sentiment:\n          $ref: \"#/components/schemas/Sentiment\"\n    NER:\n      description: По умолчанию пустой словарь.\n      type: object\n      properties:\n        tokens:\n          description: Список токенов, пришедших от компонента ner.\n          type: array\n          items:\n            type: string\n        tags:\n          description: >-\n            Список тэгов. Количество тэгов соответствует количеству токенов. Тэги имеют формат BIO-разметки. Поддерживаются следующие классы:\n            ‘PER’ - имя (и/или фамилия) человека\n            ‘ORG’ - название организации\n            ‘LOC’ - местонахождение\n          type: array\n          items:\n            type: string\n    Coref:\n      description: Не имплементировано. Всегда пустой словарь.\n      type: object\n    Sentiment:\n      description: >-\n        По умолчанию пустой словарь. Если sentiment определился, то возвращает строку с значением sentiment. Может принимать значения:\n        'neutral'\n        'positive'\n        'skip'\n        'speech'\n        'negative'\n      type: object\n    ODQAChitChatResponse200Unit:\n      description: Батч возвращаемых скилом ответов. Количество ответов соответствует количеству диалогов в запросе агента.\n      type: object\n      properties:\n        text:\n          description: Реплика-ответ скила.\n          type: string\n        confidence:\n          description: Уверенность скила в своем ответе. Для руловых скилов можно выставлять '1.0'.\n          type: number\n    ODQAChitChatResponse200Schema:\n      type: object\n      properties:\n        responses:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ODQAChitChatResponse200Unit\"\n  examples:\n    GenericRequestBody:\n      description: one exaustive example of a request body from external json-file\n      value: '{\n        \"version\": \"0.9.1\",\n        \"dialogs\": [\n        {\n          \"id\": \"5c65706b0110b377e17eba41\",\n          \"location\": null,\n          \"utterances\": [\n          {\n            \"id\": \"5c65706b0110b377e17eba39\",\n            \"text\": \"Привет!\",\n            \"user_id\": \"5c65706b0110b377e17eba37\",\n            \"annotations\": {\n              \"ner\": {\n                \"tokens\": [\n                  \"Привет\",\n                  \"!\"\n                ],\n                \"tags\": [\n                  \"O\",\n                  \"O\"\n                ]\n              },\n              \"coref\": [\n\n              ],\n              \"sentiment\": \"speech\"\n            },\n            \"date_time\": \"2019-02-14 13:43:07.594000\"\n          },\n          {\n            \"id\": \"5c65706b0110b377e17eba3a\",\n            \"active_skill\": \"chitchat\",\n            \"confidence\": 0.85,\n            \"text\": \"Привет, я бот!\",\n            \"user_id\": \"5c65706b0110b377e17eba38\",\n            \"annotations\": {\n              \"ner\": {\n                \"tokens\": [\n                  \"Привет\",\n                  \",\",\n                  \"я\",\n                  \"бот\",\n                  \"!\"\n                ],\n                \"tags\": [\n                  \"O\",\n                  \"O\",\n                  \"O\",\n                  \"O\",\n                  \"O\"\n                ]\n              },\n              \"coref\": [\n\n              ],\n              \"sentiment\": \"speech\"\n            },\n            \"date_time\": \"2019-02-14 13:43:07.595000\"\n          },\n          {\n            \"id\": \"5c65706b0110b377e17eba3b\",\n            \"text\": \"Как дела?\",\n            \"user_id\": \"5c65706b0110b377e17eba37\",\n            \"annotations\": {\n              \"ner\": {\n                \"tokens\": [\n                  \"Как\",\n                  \"дела\",\n                  \"?\"\n                ],\n                \"tags\": [\n                  \"O\",\n                  \"O\",\n                  \"O\"\n                ]\n              },\n              \"coref\": [\n\n              ],\n              \"sentiment\": \"speech\"\n            },\n            \"date_time\": \"2019-02-14 13:43:07.595000\"\n          },\n          {\n            \"id\": \"5c65706b0110b377e17eba3c\",\n            \"active_skill\": \"chitchat\",\n            \"confidence\": 0.9333,\n            \"text\": \"Хорошо, а у тебя как?\",\n            \"user_id\": \"5c65706b0110b377e17eba38\",\n            \"annotations\": {\n              \"ner\": {\n                \"tokens\": [\n                  \"Хорошо\",\n                  \",\",\n                  \"а\",\n                  \"у\",\n                  \"тебя\",\n                  \"как\",\n                  \"?\"\n                ],\n                \"tags\": [\n                  \"O\",\n                  \"O\",\n                  \"O\",\n                  \"O\",\n                  \"O\",\n                  \"O\",\n                  \"O\"\n                ]\n              },\n              \"coref\": [\n\n              ],\n              \"sentiment\": \"speech\"\n            },\n            \"date_time\": \"2019-02-14 13:43:07.595000\"\n          },\n          {\n            \"id\": \"5c65706b0110b377e17eba3d\",\n            \"text\": \"И у меня нормально. Когда родился Петр Первый?\",\n            \"user_id\": \"5c65706b0110b377e17eba37\",\n            \"annotations\": {\n              \"ner\": {\n                \"tokens\": [\n                  \"И\",\n                  \"у\",\n                  \"меня\",\n                  \"нормально\",\n                  \".\",\n                  \"Когда\",\n                  \"родился\",\n                  \"Петр\",\n                  \"Первый\",\n                  \"?\"\n                ],\n                \"tags\": [\n                  \"O\",\n                  \"O\",\n                  \"O\",\n                  \"O\",\n                  \"O\",\n                  \"O\",\n                  \"O\",\n                  \"B-PER\",\n                  \"I-PER\",\n                  \"O\"\n                ]\n              },\n              \"coref\": [\n\n              ],\n              \"sentiment\": \"neutral\"\n            },\n            \"date_time\": \"2019-02-14 13:43:07.595000\"\n          },\n          {\n            \"id\": \"5c65706b0110b377e17eba3e\",\n            \"active_skill\": \"odqa\",\n            \"confidence\": 0.74,\n            \"text\": \"в 1672 году\",\n            \"user_id\": \"5c65706b0110b377e17eba38\",\n            \"annotations\": {\n              \"ner\": {\n                \"tokens\": [\n                  \"в\",\n                  \"1672\",\n                  \"году\"\n                ],\n                \"tags\": [\n                  \"O\",\n                  \"O\",\n                  \"O\"\n                ]\n              },\n              \"coref\": [\n\n              ],\n              \"sentiment\": \"neutral\"\n            },\n            \"date_time\": \"2019-02-14 13:43:07.595000\"\n          },\n          {\n            \"id\": \"5c65706b0110b377e17eba3f\",\n            \"text\": \"спасибо\",\n            \"user_id\": \"5c65706b0110b377e17eba37\",\n            \"annotations\": {\n              \"ner\": {\n                \"tokens\": [\n                  \"спасибо\"\n                ],\n                \"tags\": [\n                  \"O\"\n                ]\n              },\n              \"coref\": [\n\n              ],\n              \"sentiment\": \"speech\"\n            },\n            \"date_time\": \"2019-02-14 13:43:07.595000\"\n          }\n          ],\n          \"user\": {\n            \"id\": \"5c65706b0110b377e17eba37\",\n            \"user_telegram_id\": \"0801e781-0b76-43fa-9002-fcdc147d35af\",\n            \"user_type\": \"human\",\n            \"device_type\": null,\n            \"personality\": null,\n            \"profile\": {\n              \"name\": \"Джо Неуловимый\",\n              \"gender\": \"male\",\n              \"birthdate\": \"2000-02-15\",\n              \"location\": null,\n              \"home_coordinates\": null,\n              \"work_coordinates\": null,\n              \"occupation\": \"data scientist\",\n              \"income_per_year\": 1000000000.0\n            }\n          },\n          \"bot\": {\n            \"id\": \"5c65706b0110b377e17eba38\",\n            \"user_type\": \"bot\",\n            \"personality\": null\n          },\n          \"channel_type\": \"telegram\"\n        },\n        {\n          \"id\": \"5c65706b0110b377e17eba47\",\n          \"location\": null,\n          \"utterances\": [\n          {\n            \"id\": \"5c65706b0110b377e17eba43\",\n            \"text\": \"Когда началась Вторая Мировая?\",\n            \"user_id\": \"5c65706b0110b377e17eba37\",\n            \"annotations\": {\n              \"ner\": {\n                \"tokens\": [\n                  \"Когда\",\n                  \"началась\",\n                  \"Вторая\",\n                  \"Мировая\",\n                  \"?\"\n                ],\n                \"tags\": [\n                  \"O\",\n                  \"O\",\n                  \"O\",\n                  \"O\",\n                  \"O\"\n                ]\n              },\n              \"coref\": [\n\n              ],\n              \"sentiment\": \"neutral\"\n            },\n            \"date_time\": \"2019-02-14 13:43:07.601000\"\n          },\n          {\n            \"id\": \"5c65706b0110b377e17eba44\",\n            \"active_skill\": \"odqa\",\n            \"confidence\": 0.99,\n            \"text\": \"1939\",\n            \"user_id\": \"5c65706b0110b377e17eba38\",\n            \"annotations\": {\n              \"ner\": {\n                \"tokens\": [\n                  \"1939\"\n                ],\n                \"tags\": [\n                  \"O\"\n                ]\n              },\n              \"coref\": [\n\n              ],\n              \"sentiment\": \"neutral\"\n            },\n            \"date_time\": \"2019-02-14 13:43:07.601000\"\n          },\n          {\n            \"id\": \"5c65706b0110b377e17eba45\",\n            \"text\": \"Спасибо, бот!\",\n            \"user_id\": \"5c65706b0110b377e17eba37\",\n            \"annotations\": {\n              \"ner\": {\n                \"tokens\": [\n                  \"Спасибо\",\n                  \",\",\n                  \"бот\",\n                  \"!\"\n                ],\n                \"tags\": [\n                  \"O\",\n                  \"O\",\n                  \"O\",\n                  \"O\"\n                ]\n              },\n              \"coref\": [\n\n              ],\n              \"sentiment\": \"speech\"\n            },\n            \"date_time\": \"2019-02-14 13:43:07.601000\"\n          }\n          ],\n          \"user\": {\n            \"id\": \"5c65706b0110b377e17eba42\",\n            \"user_telegram_id\": \"a27a94b6-2b9d-4802-8eb6-6581e6f8cd8c\",\n            \"user_type\": \"human\",\n            \"device_type\": null,\n            \"personality\": null\n          },\n          \"bot\": {\n            \"id\": \"5c65706b0110b377e17eba38\",\n            \"user_type\": \"bot\",\n            \"personality\": null\n          },\n          \"channel_type\": \"telegram\"\n        }\n        ]\n      }'\n    ChitChatResponse:\n      description: Пример JSON-ответа сервера chitchat скила\n      value:\n        responses:\n          - text: \"привет, я бот!\"\n            confidence: 0.947\n          - text: \"как дела?\"\n            confidence\": 0.3333\n    ODQAResponse:\n      description: Пример JSON-ответа сервера odqa скила\n      value:\n        responses:\n          - text: \"Петр Первый родился в 1672 году.\"\n            confidence: 0.947\n          - text: \"На Земле живет 7 миллиардов людей.\"\n            confidence\": 0.3333\n    PersonalInfoResponse:\n      description: Пример JSON-ответа сервера personal-info скила\n      value:\n        responses:\n          - text: \"Скажите, пожалуйста, как к Вам обращаться.\"\n            confidence: 1.0\n            gender: \"male\"\n            birthdate: 2019-02-14\n            name: null\n            location: null\n            home_coordinates: null\n            work_coordinates”: null\n            occupation: \"data scientist\"\n            income_per_year”: 100000000000\n          - text: \"А где Вы живете?\"\n            confidence\": 1.0\n            gender: \"male\"\n            birthdate: 2019-02-14\n            name: \"Джо Неуловимый\"\n            location: null\n            home_coordinates: null\n            work_coordinates: null\n            occupation”: \"data scientist\"\n            income_per_year: 100000000000\n    NewsCurrenciesResponse:\n      summary: Example answer from the NewsCurrency skill\n      value:\n        responses:\n          - text: \"Some news (with titles, bodies, etc.) or currencies info as plain text\"\n            confidence: 1.0\n          - text: \"Another news (with titles, bodies, etc.) or currencies info as plain text\"\n            confidence: 1.0",
			"canonicalURL": "/github.com/deepmipt/dp-agent@74b5b993a451ac54efd9a5086ff507a9520ad0c6/-/blob/docs/source/_static/apispec/agent_v0.9.1.yml",
			"externalURLs": [
				{
					"url": "https://github.com/deepmipt/dp-agent/blob/74b5b993a451ac54efd9a5086ff507a9520ad0c6/docs/source/_static/apispec/agent_v0.9.1.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: json: line 1:15763: json: cannot unmarshal Go value of type ogen.Spec: spec: json: cannot unmarshal JSON number into Go value of type string"
}