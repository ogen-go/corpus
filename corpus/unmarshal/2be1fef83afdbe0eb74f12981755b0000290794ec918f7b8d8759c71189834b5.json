{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/YetiForceCompany/UpdatePackages"
		},
		"file": {
			"name": "Portal.yaml",
			"size": 0,
			"path": "YetiForce CRM 5.x.x/5.3.0_to_6.0.0/updates/files/public_html/api/Portal.yaml",
			"byteSize": 62099,
			"content": "openapi: 3.0.0\ninfo:\n  title: 'YetiForce API for Webservice App. Type: Portal'\n  termsOfService: 'https://yetiforce.com/'\n  contact:\n    name: 'Devs API Team'\n    url: 'https://yetiforce.com/'\n    email: devs@yetiforce.com\n  license:\n    name: 'YetiForce Public License v3'\n    url: 'https://yetiforce.com/en/yetiforce/license'\n  version: '0.1'\npaths:\n  /webservice/Files:\n    put:\n      tags:\n        - BaseAction\n      summary: 'Download files from the system'\n      operationId: 'Api\\Portal\\BaseAction\\Files::put'\n      parameters:\n        -\n          name: X-ENCRYPTED\n          in: header\n          required: true\n          schema:\n            $ref: '#/components/schemas/X-ENCRYPTED'\n      requestBody:\n        description: 'Action parameters to download the file'\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BaseAction_Files_Request'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/BaseAction_Files_Request'\n      responses:\n        '200':\n          description: 'File content, mediaType is dynamic depending on the type of file being downloaded'\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n        '403':\n          description: 'No permissions'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Exception'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Exception'\n        '404':\n          description: 'File not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Exception'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Exception'\n        '405':\n          description: 'Invalid method'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Exception'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Exception'\n        '406':\n          description: 'Not Acceptable'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Exception'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Exception'\n      security:\n        -\n          basicAuth: ''\n          ApiKeyAuth: ''\n          token: ''\n  /webservice/Install:\n    put:\n      tags:\n        - BaseAction\n      summary: 'Install the system'\n      operationId: 'Api\\Portal\\BaseAction\\Install::put'\n      parameters:\n        -\n          name: X-ENCRYPTED\n          in: header\n          required: true\n          schema:\n            $ref: '#/components/schemas/X-ENCRYPTED'\n      requestBody:\n        description: 'Base action install request body'\n        required: false\n      responses:\n        '200':\n          description: 'Base action details'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BaseActionInstallResponseBody'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/BaseActionInstallResponseBody'\n      security:\n        -\n          basicAuth: ''\n          ApiKeyAuth: ''\n  /webservice/Menu:\n    get:\n      tags:\n        - BaseAction\n      summary: 'Get menu into the system'\n      operationId: 'Api\\Portal\\BaseAction\\Menu::get'\n      parameters:\n        -\n          name: X-ENCRYPTED\n          in: header\n          required: true\n          schema:\n            $ref: '#/components/schemas/X-ENCRYPTED'\n      requestBody:\n        description: 'Request body does not occur'\n        required: false\n      responses:\n        '200':\n          description: 'Menu details'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BaseActionMenuResponseBody'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/BaseActionMenuResponseBody'\n      security:\n        -\n          basicAuth: ''\n          ApiKeyAuth: ''\n          token: ''\n  /webservice/Modules:\n    get:\n      tags:\n        - BaseAction\n      summary: 'Get the module list action, along with their translated action'\n      operationId: 'Api\\Portal\\BaseAction\\Modules::get'\n      parameters:\n        -\n          name: X-ENCRYPTED\n          in: header\n          required: true\n          schema:\n            $ref: '#/components/schemas/X-ENCRYPTED'\n      requestBody:\n        description: 'The content of the request is empty'\n        required: false\n      responses:\n        '200':\n          description: 'List of active modules'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BaseActionModulesResponseBody'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/BaseActionModulesResponseBody'\n        '401':\n          description: 'No sent token OR Invalid token'\n        '403':\n          description: 'No permissions for module'\n      security:\n        -\n          basicAuth: ''\n          ApiKeyAuth: ''\n          token: ''\n  '/webservice/{moduleName}/Fields':\n    get:\n      tags:\n        - BaseModule\n      summary: 'Get data about fields'\n      operationId: 'Api\\Portal\\BaseModule\\Fields::get'\n      parameters:\n        -\n          name: moduleName\n          in: path\n          description: 'Module name'\n          required: true\n          schema:\n            type: string\n          example: Contacts\n        -\n          name: X-ENCRYPTED\n          in: header\n          required: true\n          schema:\n            $ref: '#/components/schemas/X-ENCRYPTED'\n      requestBody:\n        description: 'Request body does not occur'\n        required: false\n      responses:\n        '200':\n          description: 'Fields details'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BaseModule_Fields_ResponseBody'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/BaseModule_Fields_ResponseBody'\n      security:\n        -\n          basicAuth: ''\n          ApiKeyAuth: ''\n          token: ''\n  '/webservice/{moduleName}/Record/{recordId}':\n    get:\n      tags:\n        - BaseModule\n      summary: 'Get data for the record'\n      operationId: 'Api\\Portal\\BaseModule\\Record::get'\n      parameters:\n        -\n          name: moduleName\n          in: path\n          description: 'Module name'\n          required: true\n          schema:\n            type: string\n          example: Contacts\n        -\n          name: recordId\n          in: path\n          description: 'Record id'\n          required: true\n          schema:\n            type: integer\n          example: 116\n        -\n          name: X-ENCRYPTED\n          in: header\n          required: true\n          schema:\n            $ref: '#/components/schemas/X-ENCRYPTED'\n        -\n          name: x-raw-data\n          in: header\n          description: 'Gets raw data'\n          required: false\n          schema:\n            type: integer\n            enum:\n              - 0\n              - 1\n          example: 1\n        -\n          name: x-parent-id\n          in: header\n          description: 'Gets parent id'\n          required: false\n          schema:\n            type: integer\n      requestBody:\n        description: 'The content of the request is empty.'\n        required: false\n      responses:\n        '200':\n          description: 'Gets data for the record'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BaseModule_Get_Record_Response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/BaseModule_Get_Record_Response'\n        '403':\n          description: 'No permissions to remove record OR No permissions to view record OR No permissions to edit record'\n        '404':\n          description: 'Record doesn''t exist'\n      security:\n        -\n          basicAuth: ''\n          ApiKeyAuth: ''\n          token: ''\n    put:\n      tags:\n        - BaseModule\n      summary: 'Edit record'\n      operationId: 'Api\\Portal\\BaseModule\\Record::put'\n      parameters:\n        -\n          name: moduleName\n          in: path\n          description: 'Module name'\n          required: true\n          schema:\n            type: string\n          example: Contacts\n        -\n          name: recordId\n          in: path\n          description: 'Record id'\n          required: true\n          schema:\n            type: integer\n          example: 116\n        -\n          name: X-ENCRYPTED\n          in: header\n          required: true\n          schema:\n            $ref: '#/components/schemas/X-ENCRYPTED'\n      requestBody:\n        description: 'Contents of the request contains an associative array with the data record.'\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BaseModule_Record_Request'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/BaseModule_Record_Request'\n      responses:\n        '200':\n          description: 'Contents of the response contains only id'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BaseModule_Put_Record_Response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/BaseModule_Put_Record_Response'\n      security:\n        -\n          basicAuth: ''\n          ApiKeyAuth: ''\n          token: ''\n    delete:\n      tags:\n        - BaseModule\n      summary: 'Delete record (move to the trash)'\n      operationId: 'Api\\Portal\\BaseModule\\Record::delete'\n      parameters:\n        -\n          name: moduleName\n          in: path\n          description: 'Module name'\n          required: true\n          schema:\n            type: string\n          example: Contacts\n        -\n          name: recordId\n          in: path\n          description: 'Record id'\n          required: true\n          schema:\n            type: integer\n          example: 116\n        -\n          name: X-ENCRYPTED\n          in: header\n          required: true\n          schema:\n            $ref: '#/components/schemas/X-ENCRYPTED'\n      requestBody:\n        description: 'The content of the request is empty.'\n        required: false\n      responses:\n        '200':\n          description: 'List of records moved to the trash'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BaseModule_Delete_Record_Response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/BaseModule_Delete_Record_Response'\n      security:\n        -\n          basicAuth: ''\n          ApiKeyAuth: ''\n          token: ''\n  '/webservice/{moduleName}/Record':\n    post:\n      tags:\n        - BaseModule\n      summary: 'Create record'\n      operationId: 'Api\\Portal\\BaseModule\\Record::post'\n      parameters:\n        -\n          name: moduleName\n          in: path\n          description: 'Module name'\n          required: true\n          schema:\n            type: string\n          example: Contacts\n        -\n          name: X-ENCRYPTED\n          in: header\n          required: true\n          schema:\n            $ref: '#/components/schemas/X-ENCRYPTED'\n      requestBody:\n        description: 'Contents of the request contains an associative array with the data record.'\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BaseModule_Record_Request'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/BaseModule_Record_Request'\n      responses:\n        '200':\n          description: 'Contents of the response contains only id'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BaseModule_Post_Record_Response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/BaseModule_Post_Record_Response'\n      security:\n        -\n          basicAuth: ''\n          ApiKeyAuth: ''\n          token: ''\n  '/webservice/{moduleName}/RecordHistory/{recordId}':\n    get:\n      tags:\n        - BaseModule\n      summary: 'Get record history'\n      operationId: 'Api\\Portal\\BaseModule\\RecordHistory::get'\n      parameters:\n        -\n          name: moduleName\n          in: path\n          description: 'Module name'\n          required: true\n          schema:\n            type: string\n          example: Contacts\n        -\n          name: recordId\n          in: path\n          description: 'Record id'\n          required: true\n          schema:\n            type: integer\n          example: 116\n        -\n          name: x-row-limit\n          in: header\n          description: 'Get rows limit, default: 1000'\n          required: false\n          schema:\n            type: integer\n          example: 1000\n        -\n          name: x-row-offset\n          in: header\n          description: 'Offset, default: 0'\n          required: false\n          schema:\n            type: integer\n          example: 0\n        -\n          name: x-start-with\n          in: header\n          description: 'Show history from given ID'\n          required: false\n          schema:\n            type: integer\n          example: 5972\n        -\n          name: X-ENCRYPTED\n          in: header\n          required: true\n          schema:\n            $ref: '#/components/schemas/X-ENCRYPTED'\n      requestBody:\n        description: 'Request body does not occur'\n        required: false\n      responses:\n        '200':\n          description: 'Recent activities detail'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BaseModule_RecordHistory_ResponseBody'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/BaseModule_RecordHistory_ResponseBody'\n      security:\n        -\n          basicAuth: ''\n          ApiKeyAuth: ''\n          token: ''\n  '/webservice/{moduleName}/RecordRelatedList/{recordId}/{relatedModuleName}':\n    get:\n      tags:\n        - BaseModule\n      summary: 'Get the related list of records'\n      operationId: 'Api\\Portal\\BaseModule\\RecordRelatedList::get'\n      parameters:\n        -\n          name: moduleName\n          in: path\n          description: 'Module name'\n          required: true\n          schema:\n            type: string\n          example: Contacts\n        -\n          name: recordId\n          in: path\n          description: 'Record id'\n          required: true\n          schema:\n            type: integer\n          example: 116\n        -\n          name: relatedModuleName\n          in: path\n          description: 'Related module name'\n          required: true\n          schema:\n            type: string\n          example: Contacts\n        -\n          name: x-raw-data\n          in: header\n          description: 'Get rows limit, default: 0'\n          required: false\n          schema:\n            type: integer\n            enum:\n              - 0\n              - 1\n          example: 1\n        -\n          name: x-row-limit\n          in: header\n          description: 'Get rows limit, default: 1000'\n          required: false\n          schema:\n            type: integer\n          example: 1000\n        -\n          name: x-row-offset\n          in: header\n          description: 'Offset, default: 0'\n          required: false\n          schema:\n            type: integer\n          example: 0\n        -\n          name: x-fields\n          in: header\n          description: 'JSON array in the list of fields to be returned in response'\n          required: false\n          example: []\n          content:\n            application/json:\n              mediaType: application/json\n              schema:\n                type: array\n                items:\n                  type: string\n        -\n          name: x-condition\n          in: header\n          description: 'Conditions [Json format]'\n          required: false\n          content:\n            application/json:\n              mediaType: application/json\n              schema:\n                description: 'Conditions details'\n                properties:\n                  fieldName: { description: 'Field name', type: string, example: lastname }\n                  value: { description: 'Search value', type: string, example: Kowalski }\n                  operator: { description: 'Field operator', type: string, example: e }\n                  group: { description: 'Condition group if true is AND', type: boolean, example: true }\n                type: object\n      requestBody:\n        description: 'The content of the request is empty'\n        required: false\n      responses:\n        '200':\n          description: 'List of consents'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BaseModule_RecordRelatedList_ResponseBody'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/BaseModule_RecordRelatedList_ResponseBody'\n        '400':\n          description: 'Incorrect json syntax'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Exception'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Exception'\n        '401':\n          description: 'No sent token, Invalid token, Token has expired'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Exception'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Exception'\n        '403':\n          description: 'No permissions for module'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Exception'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Exception'\n        '405':\n          description: 'Invalid method'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Exception'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Exception'\n      security:\n        -\n          basicAuth: ''\n          ApiKeyAuth: ''\n          token: ''\n  '/webservice/{moduleName}/RecordsList':\n    get:\n      tags:\n        - BaseModule\n      summary: 'Get the list of records'\n      operationId: 'Api\\Portal\\BaseModule\\RecordsList::get'\n      parameters:\n        -\n          name: moduleName\n          in: path\n          description: 'Module name'\n          required: true\n          schema:\n            type: string\n          example: Contacts\n        -\n          name: x-raw-data\n          in: header\n          description: 'Get rows limit, default: 0'\n          required: false\n          schema:\n            type: integer\n            enum:\n              - 0\n              - 1\n          example: 1\n        -\n          name: x-row-limit\n          in: header\n          description: 'Get rows limit, default: 1000'\n          required: false\n          schema:\n            type: integer\n          example: 1000\n        -\n          name: x-row-offset\n          in: header\n          description: 'Offset, default: 0'\n          required: false\n          schema:\n            type: integer\n          example: 0\n        -\n          name: x-row-order-field\n          in: header\n          description: 'Sets the ORDER BY part of the query record list'\n          required: false\n          schema:\n            type: string\n          example: lastname\n        -\n          name: x-row-order\n          in: header\n          description: 'Sorting direction'\n          required: false\n          schema:\n            type: string\n            enum:\n              - ASC\n              - DESC\n          example: DESC\n        -\n          name: x-fields\n          in: header\n          description: 'JSON array in the list of fields to be returned in response'\n          required: false\n          example: []\n          content:\n            application/json:\n              mediaType: application/json\n              schema:\n                type: array\n                items:\n                  type: string\n        -\n          name: x-condition\n          in: header\n          description: 'Conditions [Json format]'\n          required: false\n          content:\n            application/json:\n              mediaType: application/json\n              schema:\n                description: 'Conditions details'\n                properties:\n                  fieldName: { description: 'Field name', type: string, example: lastname }\n                  value: { description: 'Search value', type: string, example: Kowalski }\n                  operator: { description: 'Field operator', type: string, example: e }\n                  group: { description: 'Condition group if true is AND', type: boolean, example: true }\n                type: object\n        -\n          name: x-parent-id\n          in: header\n          description: 'Parent record id'\n          required: false\n          schema:\n            type: integer\n          example: 5\n      requestBody:\n        description: 'The content of the request is empty'\n        required: false\n      responses:\n        '200':\n          description: 'List of consents'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BaseModule_RecordsList_ResponseBody'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/BaseModule_RecordsList_ResponseBody'\n        '400':\n          description: 'Incorrect json syntax'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Exception'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Exception'\n        '401':\n          description: 'No sent token, Invalid token, Token has expired'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Exception'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Exception'\n        '403':\n          description: 'No permissions for module'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Exception'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Exception'\n        '405':\n          description: 'Invalid method'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Exception'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Exception'\n      security:\n        -\n          basicAuth: ''\n          ApiKeyAuth: ''\n          token: ''\n  /webservice/Users/Login:\n    post:\n      tags:\n        - Users\n      summary: 'Logs user into the system'\n      operationId: 'Api\\Portal\\Users\\Login::post'\n      parameters:\n        -\n          name: X-ENCRYPTED\n          in: header\n          required: true\n          schema:\n            $ref: '#/components/schemas/X-ENCRYPTED'\n      requestBody:\n        description: 'Input data format'\n        required: true\n        content:\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/UsersLoginRequestBody'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/UsersLoginRequestBody'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UsersLoginRequestBody'\n      responses:\n        '200':\n          description: 'User details'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UsersLoginResponseBody'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/UsersLoginResponseBody'\n        '401':\n          description: 'Invalid data access OR Invalid user password OR No crmid'\n        '405':\n          description: 'Invalid method'\n      security:\n        -\n          basicAuth: ''\n          ApiKeyAuth: ''\n  /webservice/Users/Logout:\n    put:\n      tags:\n        - Users\n      summary: 'Logout user out the system'\n      operationId: 'Api\\Portal\\Users\\Logout::put'\n      parameters:\n        -\n          name: X-ENCRYPTED\n          in: header\n          required: true\n          schema:\n            $ref: '#/components/schemas/X-ENCRYPTED'\n      requestBody:\n        description: 'Users logout request body'\n        required: false\n      responses:\n        '200':\n          description: 'User details'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UsersLogoutResponseBody'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/UsersLogoutResponseBody'\n      security:\n        -\n          basicAuth: ''\n          ApiKeyAuth: ''\n          token: ''\n  '/webservice/Users/Record/{userId}':\n    get:\n      tags:\n        - Users\n      summary: 'Get data for the user'\n      operationId: 'Api\\Portal\\Users\\Record::get'\n      parameters:\n        -\n          name: userId\n          in: path\n          description: 'User id'\n          required: true\n          schema:\n            type: integer\n          example: 116\n        -\n          name: X-ENCRYPTED\n          in: header\n          required: true\n          schema:\n            $ref: '#/components/schemas/X-ENCRYPTED'\n        -\n          name: x-raw-data\n          in: header\n          description: 'Gets raw data'\n          required: false\n          schema:\n            type: integer\n            enum:\n              - 0\n              - 1\n          example: 1\n      requestBody:\n        description: 'The content of the request is empty.'\n        required: false\n      responses:\n        '200':\n          description: 'Gets data for the user'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Users_Get_Record_Response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Users_Get_Record_Response'\n        '403':\n          description: 'Access denied, access for administrators only'\n        '404':\n          description: 'User doesn''t exist'\n      security:\n        -\n          basicAuth: ''\n          ApiKeyAuth: ''\n          token: ''\n  /webservice/Users/RecordsList:\n    get:\n      tags:\n        - Users\n      summary: 'Get the list of users'\n      operationId: 'Api\\Portal\\Users\\RecordsList::get'\n      parameters:\n        -\n          name: x-raw-data\n          in: header\n          description: 'Get rows limit, default: 0'\n          required: false\n          schema:\n            type: integer\n            enum:\n              - 0\n              - 1\n          example: 1\n        -\n          name: x-row-limit\n          in: header\n          description: 'Get rows limit, default: 1000'\n          required: false\n          schema:\n            type: integer\n          example: 1000\n        -\n          name: x-row-offset\n          in: header\n          description: 'Offset, default: 0'\n          required: false\n          schema:\n            type: integer\n          example: 0\n        -\n          name: x-row-order-field\n          in: header\n          description: 'Sets the ORDER BY part of the query record list'\n          required: false\n          schema:\n            type: string\n          example: lastname\n        -\n          name: x-row-order\n          in: header\n          description: 'Sorting direction'\n          required: false\n          schema:\n            type: string\n            enum:\n              - ASC\n              - DESC\n          example: DESC\n        -\n          name: x-fields\n          in: header\n          description: 'JSON array in the list of fields to be returned in response'\n          required: false\n          example: []\n          content:\n            application/json:\n              mediaType: application/json\n              schema:\n                type: array\n                items:\n                  type: string\n        -\n          name: x-condition\n          in: header\n          description: 'Conditions [Json format]'\n          required: false\n          content:\n            application/json:\n              mediaType: application/json\n              schema:\n                description: 'Conditions details'\n                properties:\n                  fieldName: { description: 'Field name', type: string, example: lastname }\n                  value: { description: 'Search value', type: string, example: Kowalski }\n                  operator: { description: 'Field operator', type: string, example: e }\n                  group: { description: 'Condition group if true is AND', type: boolean, example: true }\n                type: object\n        -\n          name: x-parent-id\n          in: header\n          description: 'Parent record id'\n          required: false\n          schema:\n            type: integer\n          example: 5\n      requestBody:\n        description: 'The content of the request is empty'\n        required: false\n      responses:\n        '200':\n          description: 'List of consents'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Users_RecordsList_ResponseBody'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Users_RecordsList_ResponseBody'\n        '400':\n          description: 'Incorrect json syntax'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Exception'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Exception'\n        '401':\n          description: 'No sent token, Invalid token, Token has expired'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Exception'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Exception'\n        '403':\n          description: 'No permissions for module'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Exception'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Exception'\n        '405':\n          description: 'Invalid method'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Exception'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Exception'\n      security:\n        -\n          basicAuth: ''\n          ApiKeyAuth: ''\n          token: ''\ncomponents:\n  schemas:\n    BaseAction_Files_Request:\n      title: 'Base action - Files request'\n      description: 'Action parameters to download the file'\n      type: object\n      example:\n        module: Documents\n        actionName: DownloadFile\n        record: 1111\n        fileid: 333\n    BaseActionInstallResponseBody:\n      title: 'Base action - Install'\n      description: 'The representation of a base action install'\n      properties:\n        status:\n          description: 'A numeric value of 0 or 1 that indicates whether the communication is valid. 1 - success , 0 - error'\n          type: integer\n          enum:\n            - '0'\n            - '1'\n        result:\n          description: 'Content of responses from a given method'\n          type: object\n      type: object\n    BaseActionMenuResponseBody:\n      title: 'Base action - Menu'\n      description: 'Base action menu response body'\n      properties:\n        status:\n          description: 'A numeric value of 0 or 1 that indicates whether the communication is valid. 1 - success , 0 - error'\n          type: integer\n          enum:\n            - '0'\n            - '1'\n        result:\n          description: 'Menu items selected in the system, consists of parents and children'\n          properties:\n            items:\n              title: 'Parent parameters'\n              description: 'Get method.'\n              properties:\n                id:\n                  description: 'Get method.'\n                  type: integer\n                tabid:\n                  description: 'Get method.'\n                  type: integer\n                mod:\n                  description: 'Get method.'\n                  type: string\n                name:\n                  description: 'Get method.'\n                  type: string\n                type:\n                  description: 'Get method.'\n                  type: string\n                sequence:\n                  description: 'Get method.'\n                  type: integer\n                newwindow:\n                  description: 'Get method.'\n                  type: integer\n                dataurl:\n                  description: 'Get method.'\n                  type: string\n                icon:\n                  description: 'Get method.'\n                  type: string\n                parent:\n                  description: 'Get method.'\n                  type: integer\n                hotkey:\n                  description: 'Get method.'\n                  type: string\n                filters:\n                  description: 'Get method.'\n                  type: string\n                childs:\n                  title: 'Children parameters'\n                  description: 'Get method.'\n                  type: object\n              type: object\n          type: object\n      type: object\n    BaseActionModulesResponseBody:\n      title: 'Base action - List of modules'\n      description: 'List of available modules'\n      properties:\n        status:\n          description: 'A numeric value of 0 or 1 that indicates whether the communication is valid. 1 - success , 0 - error'\n          type: integer\n          enum:\n            - '0'\n            - '1'\n        result:\n          description: 'List of modules accessed'\n          type: object\n          additionalProperties:\n            description: 'Module name'\n            type: string\n            example: Accounts\n      type: object\n    BaseModule_Fields_ResponseBody:\n      title: 'Base module - Response action fields'\n      description: 'Module action fields response body'\n      properties:\n        status:\n          description: 'A numeric value of 0 or 1 that indicates whether the communication is valid. 1 - success , 0 - error'\n          type: integer\n          enum:\n            - '0'\n            - '1'\n        result:\n          description: 'Fields parameters'\n          properties:\n            fields:\n              description: 'List of all available fields in the module'\n              properties:\n                blocks:\n                  description: 'Fields blocks'\n                  type: object\n                  additionalProperties: { description: 'Field block details', properties: { id: { description: 'Block id', type: integer, example: 195 }, tabid: { description: 'Module id', type: integer, example: 9 }, label: { description: 'Block label', type: string, example: 'Account details' }, sequence: { description: 'Block sequence', type: integer, example: 1 }, showtitle: { description: 'Specifies whether the title should be visible', type: integer, example: 0 }, visible: { description: 'Determines the visibility', type: integer, example: 0 }, increateview: { description: 'Determines the visibility in creat view', type: integer, example: 0 }, ineditview: { description: 'Determines the visibility in edit view', type: integer, example: 0 }, indetailview: { description: 'Determines the visibility in detail view', type: integer, example: 0 }, display_status: { description: 'Determines whether the block should be expanded', type: integer, example: 2 }, iscustom: { description: 'Determines if the block has been added by the user', type: integer, example: 0 }, icon: { description: 'Block icon class', type: string, example: 'far fa-calendar-alt' }, name: { description: 'Block name translated into the user''s language', type: string, example: 'Informacje podstawowe o firmie' } }, type: object }\n                inventory:\n                  description: 'Inventory field group'\n                  properties: { '1': { description: 'Inventory field list', type: object, additionalProperties: { description: 'Inventory field details', properties: { label: { description: 'Field label translated into the user''s language', type: string, example: 'Unit price' }, type: { description: 'Field type', type: string, example: UnitPrice }, columnname: { description: 'Field column name in db', type: string, example: price }, isSummary: { description: 'Is the field contains summary', type: boolean, example: false }, isVisibleInDetail: { description: 'Check if field is visible in detail view', type: boolean, example: true } }, type: object } } }\n                  type: object\n              type: object\n              additionalProperties:\n                properties:\n                  name: { description: 'Field name', type: string, example: subject }\n                  label: { description: 'Field label translated into the user''s language', type: string, example: Subject }\n                  type: { description: 'Field type', type: string, example: string }\n                  mandatory: { description: 'Check if field is mandatory', type: boolean, example: true }\n                  defaultvalue: { description: 'Default field value', type: string, example: '' }\n                  presence: { description: 'Check if field is active', type: boolean, example: true }\n                  quickcreate: { description: 'Check if field is active', type: boolean, example: true }\n                  masseditable: { description: 'Check if field is quick create enabled', type: boolean, example: true }\n                  header_field: { description: 'Field configuration available in the header', properties: { type: { description: Type, type: string, example: value }, class: { description: 'Gui class', type: string, example: badge-info } }, type: object }\n                  maxlengthtext: { description: 'Max length text', type: integer, example: 0 }\n                  maximumlength: { description: 'Maximum field range', type: string, example: '-2147483648,2147483647' }\n                  maxwidthcolumn: { description: 'Max width column', type: integer, example: 0 }\n                  tabindex: { description: 'Field tab index', type: integer, example: 0 }\n                  fieldtype: { description: 'Field short data type', type: string, example: V }\n                  picklistvalues: { description: 'Picklist values, available only for type of field: picklist, multipicklist, multiowner, multiReferenceValue, inventoryLimit, languages, currencyList, fileLocationType, taxes, multiListFields, mailScannerFields, country, modules, sharedOwner, categoryMultipicklist, tree', type: object }\n                  date-format: { description: 'Date format, available only for type of field: date, datetime', type: string }\n                  time-format: { description: 'Time format, available only for type of field: time', type: string }\n                  currency_symbol: { description: 'Currency symbol, available only for type of field: currency', type: string }\n                  decimal_separator: { description: 'Currency decimal separator, available only for type of field: currency', type: string }\n                  group_separator: { description: 'Currency group separator, available only for type of field: currency', type: string }\n                  restrictedDomains: { description: 'Email restricted domains, available only for type of field: email', properties: { yeti.com: { description: 'List of domains reserved by email', example: yeti.com } }, type: object }\n                  limit: { description: 'Limit the amount of images, available only for type of field: multiImage, image', type: integer }\n                  formats: { description: 'File Format, available only for type of field: multiImage, image', properties: { jpg: { description: 'List of file data formats', example: jpg } }, type: object }\n                  id: { description: 'Check if record is editable', type: integer, example: 24862 }\n                  isEditable: { description: 'Check if record is editable', type: boolean, example: true }\n                  isViewable: { description: 'Check if record is viewable', type: boolean, example: true }\n                  isEditableReadOnly: { description: 'Check if record is editable or read only', type: boolean, example: false }\n                  sequence: { description: 'Sequence field', type: integer, example: 24862 }\n                  fieldparams: { description: 'Field params', type: object }\n                  blockId: { description: 'Field block id', type: integer, example: 280 }\n                  helpInfo: { description: 'Additional field description', type: string, example: 'x y z' }\n                  dbStructure: { description: 'Info about field structure in database', type: object }\n                  queryOperators: { description: 'Field query operators', type: object }\n                  isEmptyPicklistOptionAllowed: { description: 'Defines empty picklist element availability', type: boolean, example: false }\n                  referenceList: { description: 'List of related modules, available only for reference field', properties: { treeValues: { description: 'Tree items, available only for tree field', type: object, additionalProperties: { description: 'Tree item', properties: { id: { description: 'Number tree without prefix', type: integer, example: 1 }, tree: { description: 'Tree id', type: string, example: T10 }, parent: { description: 'Parent tree id', type: string, example: T1 }, text: { description: 'Tree value', type: string, example: 'Tree value' } }, type: object } } }, type: object, additionalProperties: { properties: { name: { description: 'Field name', type: string, example: subject } }, type: object } }\n                type: object\n          type: object\n      type: object\n    BaseModule_Get_Record_Response:\n      title: 'Base module - Response body for Record'\n      properties:\n        status:\n          description: 'A numeric value of 0 or 1 that indicates whether the communication is valid. 1 - success , 0 - error'\n          type: integer\n          enum:\n            - 0\n            - 1\n          example: 1\n        result:\n          description: 'Record data'\n          properties:\n            name:\n              description: 'Record name'\n              type: string\n              example: 'Driving school'\n            id:\n              description: 'Record Id'\n              type: integer\n              example: 152\n            fields:\n              description: 'Field name items'\n              type: object\n            data:\n              description: 'Record data'\n              type: object\n            privileges:\n              description: 'Parameters determining checking of editing rights and moving to the trash'\n              properties:\n                isEditable:\n                  description: 'Check if record is editable'\n                  type: boolean\n                  example: true\n                moveToTrash:\n                  description: 'Permission to delete'\n                  type: boolean\n                  example: false\n              type: object\n            inventory:\n              description: 'Value inventory data'\n              type: object\n            summaryInventory:\n              description: 'Value summary inventory data'\n              type: object\n            rawData:\n              description: 'Raw record data'\n              type: object\n            rawInventory:\n              description: 'Inventory data'\n              type: object\n          type: object\n      type: object\n    BaseModule_Delete_Record_Response:\n      title: 'Base module - Transfer to the trash'\n      description: 'List of records moved to the trash'\n      properties:\n        status:\n          description: 'A numeric value of 0 or 1 that indicates whether the communication is valid. 1 - success , 0 - error'\n          type: integer\n          enum:\n            - '0'\n            - '1'\n        result:\n          description: 'Status of successful transfer of the record to the recycle bin'\n          type: boolean\n      type: object\n    BaseModule_Put_Record_Response:\n      title: 'Base module - Response body for Record'\n      description: 'Contents of the response contains only id'\n      properties:\n        status:\n          description: 'A numeric value of 0 or 1 that indicates whether the communication is valid. 1 - success , 0 - error'\n          type: integer\n          enum:\n            - '0'\n            - '1'\n        result:\n          title: 'Gets data for the record'\n          description: 'Updated record id.'\n          properties:\n            id:\n              description: 'Id of the newly created record'\n              type: integer\n              example: 22\n            skippedData:\n              description: 'List of parameters passed in the request that were skipped in the write process'\n              type: object\n          type: object\n      type: object\n    BaseModule_Record_Request:\n      title: 'Base module - Request body for record create or update'\n      description: 'Contents of the request contains an associative array with the data record.'\n      type: object\n      example:\n        firstname: Tom\n        lastname: Kowalski\n    BaseModule_Post_Record_Response:\n      title: 'Base module - Created records'\n      description: 'Contents of the response contains only id'\n      properties:\n        status:\n          description: 'A numeric value of 0 or 1 that indicates whether the communication is valid. 1 - success , 0 - error'\n          type: integer\n          enum:\n            - '0'\n            - '1'\n        result:\n          title: 'Gets data for the record'\n          description: 'Created record id.'\n          properties:\n            id:\n              description: 'Id of the newly created record'\n              type: integer\n              example: 22\n            skippedData:\n              description: 'List of parameters passed in the request that were skipped in the write process'\n              type: object\n          type: object\n      type: object\n    BaseModule_RecordHistory_ResponseBody:\n      title: 'Base module - Response action history record'\n      description: 'Action module for recent activities in CRM'\n      properties:\n        status:\n          description: 'A numeric value of 0 or 1 that indicates whether the communication is valid. 1 - success , 0 - error'\n          type: integer\n          enum:\n            - '0'\n            - '1'\n          example: 1\n        result:\n          description: 'Returns recent activities that took place in CRM'\n          properties:\n            response:\n              description: 'Contains what actions have been performed and returns the data that has changed'\n              type: object\n              additionalProperties:\n                description: 'Key indicating the number of changes made to a given record'\n                properties:\n                  time: { description: 'Showing the exact date on which the change took place', type: string, format: date-time, example: '2019-10-07 08:32:38' }\n                  owner: { description: 'Username of the user who made the change', type: string, example: 'System Admin' }\n                  status: { description: 'Name of the action that was carried out', type: string, example: changed }\n                  rawOwner: { description: 'User ID of the user who made the change', type: integer, example: 1 }\n                  rawStatus: { description: 'The name of the untranslated label', type: string, example: LBL_UPDATED }\n                  data: { description: 'Field system name', type: object, additionalProperties: { properties: { from: { description: 'Value before change, dynamically collected value - the data type depends on the field type', type: string, example: 'Jan Kowalski' }, to: { description: 'Value after change, dynamically collected value - the data type depends on the field type', type: string, example: 'Jan Nowak' }, rawFrom: { description: 'Value before change', type: string, example: 'Jan Kowalski' }, rawTo: { description: 'Value after change', type: string, example: 'Jan Nowak' }, targetModule: { description: 'The name of the target related module', type: string, example: Contacts }, targetLabel: { description: 'The label name of the target related module', type: string, example: 'Jan Kowalski' }, targetId: { description: 'Id of the target related module', type: integer, example: 394 } }, type: object } }\n                type: object\n          type: object\n      type: object\n    BaseModule_RecordRelatedList_ResponseBody:\n      title: 'Base module - Response action related record list'\n      description: 'Module action related record list response body'\n      properties:\n        status:\n          description: 'A numeric value of 0 or 1 that indicates whether the communication is valid. 1 - success , 0 - error'\n          type: integer\n          enum:\n            - '0'\n            - '1'\n        result:\n          description: 'List of modules accessed'\n          properties:\n            headers:\n              description: 'Column names'\n              type: object\n              additionalProperties: {  }\n            records:\n              description: 'List of modules accessed'\n              type: object\n              additionalProperties:\n                description: 'Column data'\n                type: object\n            rawData:\n              description: 'Raw data'\n              type: object\n              additionalProperties:\n                description: 'Column data to display'\n                type: object\n            count:\n              description: 'Get related record list method.'\n              type: string\n              example: 54\n            isMorePages:\n              description: 'Get related record list method.'\n              type: boolean\n              example: true\n          type: object\n      type: object\n    BaseModule_RecordsList_ResponseBody:\n      title: 'Base module - Response action record list'\n      description: 'Module action record list response body'\n      properties:\n        status:\n          description: 'A numeric value of 0 or 1 that indicates whether the communication is valid. 1 - success , 0 - error'\n          type: integer\n          enum:\n            - '0'\n            - '1'\n        result:\n          description: 'List of modules accessed'\n          properties:\n            headers:\n              description: 'Column names'\n              type: object\n              additionalProperties: {  }\n            records:\n              description: 'List of modules accessed'\n              type: object\n              additionalProperties:\n                description: 'Column data'\n                type: object\n            rawData:\n              description: 'Raw data'\n              type: object\n              additionalProperties:\n                description: 'Column data to display'\n                type: object\n            count:\n              description: 'Get record list method.'\n              type: string\n              example: 54\n            isMorePages:\n              description: 'Get record list method.'\n              type: boolean\n              example: true\n          type: object\n      type: object\n    X-ENCRYPTED:\n      description: 'Is the content request is encrypted'\n      type: string\n      default: 0\n      enum:\n        - 0\n        - 1\n    UsersLoginRequestBody:\n      title: 'Users module - Users login request body'\n      description: 'JSON or form-data'\n      properties:\n        userName:\n          description: 'Webservice user name'\n          type: string\n        password:\n          description: 'Webservice user password'\n          type: string\n        params:\n          description: 'Additional parameters sent by the user, extending the current settings, e.g. language'\n          type: array\n          items:\n            type: string\n      type: object\n    UsersLoginResponseBody:\n      title: 'Users module - Users login response body'\n      description: 'Users login response body'\n      properties:\n        status:\n          description: 'A numeric value of 0 or 1 that indicates whether the communication is valid. 1 - success , 0 - error'\n          type: integer\n          enum:\n            - 0\n            - 1\n          example: 1\n        result:\n          description: 'Content of responses from a given method'\n          properties:\n            token:\n              description: 'Post method.'\n              type: string\n              maxLength: 40\n              minLength: 40\n            name:\n              description: 'Post method.'\n              type: string\n            parentName:\n              description: 'Post method.'\n              type: string\n            lastLoginTime:\n              description: 'Post method.'\n              type: string\n              format: date-time\n              example: '2019-10-07 08:32:38'\n            lastLogoutTime:\n              description: 'Post method.'\n              type: string\n              format: date-time\n              example: 'null'\n            language:\n              description: 'Post method.'\n              type: string\n              example: pl-PL\n            type:\n              description: 'Post method.'\n              type: integer\n            companyId:\n              description: 'Post method.'\n              type: integer\n            companyDetails:\n              title: 'Company details, optional parameter depending on the user type'\n              description: 'Post method.'\n              properties:\n                check_stock_levels:\n                  description: 'Post method.'\n                  type: boolean\n                sum_open_orders:\n                  description: 'Post method.'\n                  type: integer\n                creditlimit:\n                  description: 'Post method.'\n                  type: integer\n              type: object\n            logged:\n              description: 'Post method.'\n              type: boolean\n            preferences:\n              description: 'Post method.'\n              properties:\n                activity_view:\n                  description: 'Post method.'\n                  type: string\n                hour_format:\n                  description: 'Post method.'\n                  type: integer\n                start_hour:\n                  description: 'Post method.'\n                  type: string\n                date_format:\n                  description: 'Post method.'\n                  type: string\n                date_format_js:\n                  description: 'Post method.'\n                  type: string\n                dayoftheweek:\n                  description: 'Post method.'\n                  type: string\n                time_zone:\n                  description: 'Post method.'\n                  type: string\n                currency_id:\n                  description: 'Post method.'\n                  type: integer\n                currency_grouping_pattern:\n                  description: 'Post method.'\n                  type: string\n                currency_decimal_separator:\n                  description: 'Post method.'\n                  type: string\n                currency_grouping_separator:\n                  description: 'Post method.'\n                  type: string\n                currency_symbol_placement:\n                  description: 'Post method.'\n                  type: string\n                no_of_currency_decimals:\n                  description: 'Post method.'\n                  type: integer\n                truncate_trailing_zeros:\n                  description: 'Post method.'\n                  type: integer\n                end_hour:\n                  description: 'Post method.'\n                  type: string\n                currency_name:\n                  description: 'Post method.'\n                  type: string\n                currency_code:\n                  description: 'Post method.'\n                  type: string\n                currency_symbol:\n                  description: 'Post method.'\n                  type: string\n                conv_rate:\n                  description: 'Post method.'\n                  type: number\n                  format: float\n              type: object\n          type: object\n      type: object\n    Exception:\n      title: Exception\n      description: 'Is the content request is encrypted'\n      properties:\n        status:\n          description: '0 - error'\n          type: integer\n          enum:\n            - 0\n          example: 0\n        error:\n          description: 'Error  details'\n          properties:\n            message:\n              description: 'Post method.'\n              type: string\n              example: 'Invalid method'\n            code:\n              description: 'Post method.'\n              type: integer\n              example: 405\n            file:\n              description: 'Post method.'\n              type: string\n              example: api\\webservice\\Portal\\BaseAction\\Files.php\n            line:\n              description: 'Post method.'\n              type: integer\n              example: 101\n            backtrace:\n              description: 'Post method.'\n              type: string\n              example: '#0 api\\\\webservice\\\\Portal\\\\BaseAction\\\\Files.php (101) ....'\n          type: object\n      type: object\n    UsersLogoutResponseBody:\n      title: 'Users module - Users logout response body'\n      description: 'JSON data'\n      properties:\n        status:\n          description: 'A numeric value of 0 or 1 that indicates whether the communication is valid. 1 - success , 0 - error'\n          type: integer\n          enum:\n            - 0\n            - 1\n          example: 1\n        result:\n          description: 'Content of responses from a given method'\n          type: boolean\n      type: object\n    Users_Get_Record_Response:\n      title: 'Users - Response body for user'\n      properties:\n        status:\n          description: 'A numeric value of 0 or 1 that indicates whether the communication is valid. 1 - success , 0 - error'\n          type: integer\n          enum:\n            - 0\n            - 1\n          example: 1\n        result:\n          description: 'User data'\n          properties:\n            name:\n              description: 'User label'\n              type: string\n              example: 'System Admin'\n            id:\n              description: 'User Id'\n              type: integer\n              example: 1\n            fields:\n              description: 'Field name items'\n              type: object\n            data:\n              description: 'User data'\n              type: object\n            privileges:\n              description: 'Parameters determining checking of editing rights and moving to the trash'\n              properties:\n                isEditable:\n                  description: 'Check if user is editable'\n                  type: boolean\n                  example: true\n                moveToTrash:\n                  description: 'Permission to delete'\n                  type: boolean\n                  example: false\n              type: object\n            rawData:\n              description: 'Raw user data'\n              type: object\n          type: object\n      type: object\n    Users_RecordsList_ResponseBody:\n      title: 'Users - Response action users list'\n      description: 'Module action record list response body'\n      properties:\n        status:\n          description: 'A numeric value of 0 or 1 that indicates whether the communication is valid. 1 - success , 0 - error'\n          type: integer\n          enum:\n            - '0'\n            - '1'\n        result:\n          description: 'List of modules accessed'\n          properties:\n            headers:\n              description: 'Column names'\n              type: object\n              additionalProperties: {  }\n            records:\n              description: 'List of modules accessed'\n              type: object\n              additionalProperties:\n                description: 'Column data'\n                type: object\n            rawData:\n              description: 'Raw data'\n              type: object\n              additionalProperties:\n                description: 'Column data to display, administrator access only'\n                type: object\n            count:\n              description: 'Get users list method.'\n              type: string\n              example: 54\n            isMorePages:\n              description: 'Get users list method.'\n              type: boolean\n              example: true\n          type: object\n      type: object\n  securitySchemes:\n    basicAuth:\n      type: http\n      in: header\n      scheme: basic\n    ApiKeyAuth:\n      type: apiKey\n      description: 'Webservice api key'\n      name: X-API-KEY\n      in: header\n    token:\n      type: apiKey\n      description: 'Webservice api token, generated when logging into the system, required for communication'\n      name: X-TOKEN\n      in: header\ntags:\n  -\n    name: BaseAction\n    description: 'Access to user methods'\n  -\n    name: BaseModule\n    description: 'Access to record methods'\n  -\n    name: Users\n    description: 'Access to user methods'\n"
		}
	},
	"Error": "unmarshal: json: cannot unmarshal string into Go struct field Operation.paths.put.security of type []string"
}