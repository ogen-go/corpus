{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "azure.com-containerregistry-2019-08-15-preview-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/azure.com-containerregistry-2019-08-15-preview-swagger.yaml",
			"byteSize": 84610,
			"content": "openapi: 3.0.0\ninfo:\n  description: Metadata API definition for the Azure Container Registry runtime\n  title: Azure Container Registry\n  version: 2019-08-15-preview\n  x-apisguru-categories:\n    - cloud\n  x-logo:\n    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png\n  x-origin:\n    - format: swagger\n      url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/containerregistry/data-plane/Microsoft.ContainerRegistry/preview/2019-08-15/containerregistry.json\n      version: \"2.0\"\n  x-preferred: false\n  x-providerName: azure.com\n  x-serviceName: containerregistry\n  x-tags:\n    - Azure\n    - Microsoft\nsecurity:\n  - registry_auth: []\n    registry_oauth2: []\ntags:\n  - description: Root API\n    name: v2\n  - description: Everything about manifests\n    name: Manifest\n  - description: Everything about tags\n    name: Tag\n  - description: Everything about layers\n    name: Layer\n  - description: Everything about repository\n    name: Repository\n  - description: ACR APIs related to repositories\n    name: AcrRepository\n  - description: ACR APIs related to manifests\n    name: AcrManifest\n  - description: ACR APIs related to tags\n    name: AcrTag\npaths:\n  /acr/v1/_catalog:\n    get:\n      description: List repositories\n      operationId: Repository_GetList\n      parameters:\n        - $ref: \"#/components/parameters/QueryLast\"\n        - $ref: \"#/components/parameters/QueryNum\"\n      responses:\n        \"200\":\n          description: Returns a list of repositories\n          headers:\n            Link:\n              description: next paginated result\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Repositories\"\n              examples:\n                Get repositories in a registry:\n                  $ref: \"#/components/examples/Get_repositories_in_a_registry\"\n        default:\n          description: ACR error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AcrErrors\"\n      tags:\n        - AcrRepository\n  \"/acr/v1/{name}\":\n    delete:\n      description: Delete the repository identified by `name`\n      operationId: Repository_Delete\n      parameters:\n        - $ref: \"#/components/parameters/ImageName\"\n      responses:\n        \"202\":\n          description: The repository is deleted\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeletedRepository\"\n              examples:\n                Delete a repository:\n                  $ref: \"#/components/examples/Delete_a_repository\"\n        default:\n          description: ACR error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AcrErrors\"\n      tags:\n        - AcrRepository\n    get:\n      description: Get repository attributes\n      operationId: Repository_GetAttributes\n      parameters:\n        - $ref: \"#/components/parameters/ImageName\"\n      responses:\n        \"200\":\n          description: Returns a list of attributes\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryAttributes\"\n              examples:\n                Get details of repository:\n                  $ref: \"#/components/examples/Get_details_of_repository\"\n        default:\n          description: ACR error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AcrErrors\"\n      tags:\n        - AcrRepository\n        - AcrMetadata\n    patch:\n      description: Update the attribute identified by `name` where `reference` is the name\n        of the repository.\n      operationId: Repository_UpdateAttributes\n      parameters:\n        - $ref: \"#/components/parameters/ImageName\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ChangeableAttributes\"\n        description: Repository attribute value\n      responses:\n        \"200\":\n          description: The attributes are updated\n        default:\n          description: ACR error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AcrErrors\"\n      tags:\n        - AcrRepository\n        - AcrMetadata\n  \"/acr/v1/{name}/_manifests\":\n    get:\n      description: List manifests of a repository\n      operationId: Manifests_GetList\n      parameters:\n        - $ref: \"#/components/parameters/ImageName\"\n        - $ref: \"#/components/parameters/QueryLast\"\n        - $ref: \"#/components/parameters/QueryNum\"\n        - $ref: \"#/components/parameters/QueryOrderBy\"\n      responses:\n        \"200\":\n          description: Returns a list of manifests\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AcrManifests\"\n              examples:\n                Get list of available manifests:\n                  $ref: \"#/components/examples/Get_list_of_available_manifests\"\n        default:\n          description: ACR error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AcrErrors\"\n      tags:\n        - AcrManifest\n        - AcrMetadata\n  \"/acr/v1/{name}/_manifests/{reference}\":\n    get:\n      description: Get manifest attributes\n      operationId: Manifests_GetAttributes\n      parameters:\n        - $ref: \"#/components/parameters/ImageName\"\n        - $ref: \"#/components/parameters/ImageReference\"\n      responses:\n        \"200\":\n          description: List of attributes\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ManifestAttributes\"\n              examples:\n                Get manifest attributes:\n                  $ref: \"#/components/examples/Get_manifest_attributes\"\n        default:\n          description: ACR error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AcrErrors\"\n      tags:\n        - AcrManifest\n        - AcrMetadata\n    patch:\n      description: Update attributes of a manifest\n      operationId: Manifests_UpdateAttributes\n      parameters:\n        - $ref: \"#/components/parameters/ImageName\"\n        - $ref: \"#/components/parameters/ImageReference\"\n      requestBody:\n        $ref: \"#/components/requestBodies/ChangeableAttributes\"\n      responses:\n        \"200\":\n          description: The attributes are updated\n        default:\n          description: ACR error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AcrErrors\"\n      tags:\n        - AcrManifest\n        - AcrMetadata\n  \"/acr/v1/{name}/_tags\":\n    get:\n      description: List tags of a repository\n      operationId: Tag_GetList\n      parameters:\n        - $ref: \"#/components/parameters/ImageName\"\n        - $ref: \"#/components/parameters/QueryLast\"\n        - $ref: \"#/components/parameters/QueryNum\"\n        - $ref: \"#/components/parameters/QueryOrderBy\"\n        - $ref: \"#/components/parameters/QueryDigest\"\n      responses:\n        \"200\":\n          description: Tag details of a repository\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TagList\"\n              examples:\n                Get tags of a repository:\n                  $ref: \"#/components/examples/Get_tags_of_a_repository\"\n        default:\n          description: ACR error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AcrErrors\"\n      tags:\n        - AcrTag\n        - AcrMetadata\n  \"/acr/v1/{name}/_tags/{reference}\":\n    delete:\n      description: Delete tag\n      operationId: Tag_Delete\n      parameters:\n        - $ref: \"#/components/parameters/ImageName\"\n        - $ref: \"#/components/parameters/TagReference\"\n      responses:\n        \"202\":\n          description: The tag is deleted\n        default:\n          description: ACR error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AcrErrors\"\n      tags:\n        - AcrTag\n        - AcrMetadata\n    get:\n      description: Get tag attributes by tag\n      operationId: Tag_GetAttributes\n      parameters:\n        - $ref: \"#/components/parameters/ImageName\"\n        - $ref: \"#/components/parameters/TagReference\"\n      responses:\n        \"200\":\n          description: Tag attributes\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TagAttributes\"\n              examples:\n                Get tag attributes:\n                  $ref: \"#/components/examples/Get_tag_attributes\"\n        default:\n          description: ACR error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AcrErrors\"\n      tags:\n        - AcrTag\n        - AcrMetadata\n    patch:\n      description: Update tag attributes\n      operationId: Tag_UpdateAttributes\n      parameters:\n        - $ref: \"#/components/parameters/ImageName\"\n        - $ref: \"#/components/parameters/TagReference\"\n      requestBody:\n        $ref: \"#/components/requestBodies/ChangeableAttributes\"\n      responses:\n        \"200\":\n          description: The attributes are updated\n        default:\n          description: ACR error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AcrErrors\"\n      tags:\n        - AcrTag\n        - AcrMetadata\n  /oauth2/exchange:\n    post:\n      description: Exchange AAD tokens for an ACR refresh Token\n      operationId: RefreshTokens_GetFromExchange\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                grant_type:\n                  description: Can take a value of access_token_refresh_token, or\n                    access_token, or refresh_token\n                  type: string\n                  enum:\n                    - access_token_refresh_token\n                    - access_token\n                    - refresh_token\n                  x-ms-parameter-location: method\n                service:\n                  description: Indicates the name of your Azure container registry.\n                  type: string\n                  x-ms-parameter-location: method\n                tenant:\n                  description: AAD tenant associated to the AAD credentials.\n                  type: string\n                  x-ms-parameter-location: method\n                refresh_token:\n                  description: AAD refresh token, mandatory when grant_type is\n                    access_token_refresh_token or refresh_token\n                  type: string\n                  x-ms-parameter-location: method\n                access_token:\n                  description: AAD access token, mandatory when grant_type is\n                    access_token_refresh_token or access_token.\n                  type: string\n                  x-ms-parameter-location: method\n              required:\n                - grant_type\n                - service\n      responses:\n        \"200\":\n          description: Refresh token acquired\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RefreshToken\"\n              examples:\n                Exchange AAD Token for ACR Refresh:\n                  $ref: \"#/components/examples/Exchange_AAD_Token_for_ACR_Refresh\"\n        default:\n          description: ACR error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AcrErrors\"\n      security: []\n      tags:\n        - AcrToken\n        - RefreshToken\n  /oauth2/token:\n    get:\n      description: Exchange Username, Password and Scope an ACR Access Token\n      operationId: AccessTokens_GetFromLogin\n      parameters:\n        - description: Indicates the name of your Azure container registry.\n          in: query\n          name: service\n          required: true\n          schema:\n            type: string\n          examples:\n            Get Access Token with username and password:\n              value: someregistry.azurecr.io\n        - description: Expected to be a valid scope, and can be specified more than once\n            for multiple scope requests. You can obtain this from the\n            Www-Authenticate response header from the challenge.\n          in: query\n          name: scope\n          required: true\n          schema:\n            type: string\n          examples:\n            Get Access Token with username and password:\n              value: registry:catalog:*\n      responses:\n        \"200\":\n          description: Access token acquired\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccessToken\"\n              examples:\n                Get Access Token with username and password:\n                  $ref: \"#/components/examples/Get_Access_Token_with_username_and_p\\\n                    assword\"\n        default:\n          description: ACR error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AcrErrors\"\n      security:\n        - registry_auth: []\n      tags:\n        - AcrToken\n        - AccessToken\n        - userLogin\n    post:\n      description: Exchange ACR Refresh token for an ACR Access Token\n      operationId: AccessTokens_Get\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                grant_type:\n                  description: Grant type is expected to be refresh_token\n                  type: string\n                  enum:\n                    - refresh_token\n                service:\n                  description: Indicates the name of your Azure container registry.\n                  type: string\n                  x-ms-parameter-location: method\n                scope:\n                  description: Which is expected to be a valid scope, and can be specified\n                    more than once for multiple scope requests. You obtained\n                    this from the Www-Authenticate response header from the\n                    challenge.\n                  type: string\n                refresh_token:\n                  description: Must be a valid ACR refresh token\n                  type: string\n              required:\n                - grant_type\n                - service\n                - scope\n                - refresh_token\n      responses:\n        \"200\":\n          description: Access token acquired\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccessToken\"\n              examples:\n                Get Access Token with Refresh Token:\n                  $ref: \"#/components/examples/Get_Access_Token_with_Refresh_Token\"\n        default:\n          description: ACR error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AcrErrors\"\n      security: []\n      tags:\n        - AcrToken\n        - AccessToken\n  /v2/:\n    get:\n      description: Tells whether this Docker Registry instance supports Docker Registry\n        HTTP API v2\n      operationId: V2Support_Check\n      responses:\n        \"200\":\n          description: Successful response. API v2 supported\n        default:\n          description: ACR error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AcrErrors\"\n      tags:\n        - v2\n  \"/v2/{name}/blobs/uploads/\":\n    post:\n      description: Mount a blob identified by the `mount` parameter from another repository.\n      operationId: Blob_Mount\n      parameters:\n        - $ref: \"#/components/parameters/ImageName\"\n        - $ref: \"#/components/parameters/From\"\n        - $ref: \"#/components/parameters/Mount\"\n      responses:\n        \"201\":\n          description: The blob has been created in the registry and is available at the\n            provided location.\n          headers:\n            Docker-Content-Digest:\n              description: Digest of the targeted content for the request.\n              schema:\n                type: string\n              example: sha256:16463e0c481e161aabb735437d30b3c9c7391c2747cc564bb927e843b73dcb39\n            Docker-Upload-UUID:\n              description: Identifies the docker upload uuid for the current request.\n              schema:\n                type: string\n            Location:\n              description: Provided location for blob\n              schema:\n                type: string\n              example: /v2/somethingnew/blobs/sha256:16463e0c481e161aabb735437d30b3c9c7391c2747cc564bb927e843b73dcb39\n        default:\n          description: ACR error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AcrErrors\"\n      tags:\n        - Layer\n  \"/v2/{name}/blobs/{digest}\":\n    delete:\n      description: Removes an already uploaded blob.\n      operationId: Blob_Delete\n      parameters:\n        - $ref: \"#/components/parameters/ImageName\"\n        - $ref: \"#/components/parameters/Digest\"\n      responses:\n        \"202\":\n          description: The blob identified by digest is available. The blob content will be\n            present in the body of the response.\n          headers:\n            Docker-Content-Digest:\n              description: Digest of the targeted content for the request.\n              schema:\n                type: string\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n        default:\n          description: ACR error response describing why the operation failed.\n          content:\n            application/octet-stream:\n              schema:\n                $ref: \"#/components/schemas/AcrErrors\"\n      tags:\n        - Layer\n    get:\n      description: Retrieve the blob from the registry identified by digest.\n      operationId: Blob_Get\n      parameters:\n        - $ref: \"#/components/parameters/ImageName\"\n        - $ref: \"#/components/parameters/Digest\"\n      responses:\n        \"200\":\n          description: The blob identified by digest is available. The blob content will be\n            present in the body of the response.\n          headers:\n            Content-Length:\n              description: The length of the requested blob content.\n              schema:\n                type: integer\n                format: int64\n              example: 5635\n            Docker-Content-Digest:\n              description: Digest of the targeted content for the request.\n              schema:\n                type: string\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n              examples:\n                Get a blob from digest:\n                  $ref: \"#/components/examples/Get_a_blob_from_digest\"\n        \"307\":\n          description: The blob identified by digest is available at the provided location.\n          headers:\n            Location:\n              description: The location where the layer should be accessible.\n              schema:\n                type: string\n              example: https://csharpsdktest.azurecr.io/v2/prod/bash/blobs/sha256:3131d2b2b3352091117a3abe745d01a3fed472b7327c3183602247937800e3a6\n        default:\n          description: ACR error response describing why the operation failed.\n          content:\n            application/octet-stream:\n              schema:\n                $ref: \"#/components/schemas/AcrErrors\"\n      tags:\n        - Layer\n    head:\n      description: Same as GET, except only the headers are returned.\n      operationId: Blob_Check\n      parameters:\n        - $ref: \"#/components/parameters/ImageName\"\n        - $ref: \"#/components/parameters/Digest\"\n      responses:\n        \"200\":\n          description: The blob identified by digest is available. The blob content will be\n            present in the body of the response.\n          headers:\n            Content-Length:\n              description: The length of the requested blob content.\n              schema:\n                type: integer\n                format: int64\n              example: 5635\n            Docker-Content-Digest:\n              description: Digest of the targeted content for the request.\n              schema:\n                type: string\n        \"307\":\n          description: The blob identified by digest is available at the provided location.\n          headers:\n            Location:\n              description: The location where the layer should be accessible.\n              schema:\n                type: string\n              example: https://csharpsdktest.azurecr.io/v2/prod/bash/blobs/sha256:3131d2b2b3352091117a3abe745d01a3fed472b7327c3183602247937800e3a6\n        default:\n          description: ACR error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AcrErrors\"\n      tags:\n        - Layer\n  \"/v2/{name}/manifests/{reference}\":\n    delete:\n      description: Delete the manifest identified by `name` and `reference`. Note that a\n        manifest can _only_ be deleted by `digest`.\n      operationId: Manifests_Delete\n      parameters:\n        - $ref: \"#/components/parameters/ImageName\"\n        - $ref: \"#/components/parameters/ImageReference\"\n      responses:\n        \"202\":\n          description: The manifest has been deleted\n        default:\n          description: ACR error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AcrErrors\"\n      tags:\n        - Manifest\n    get:\n      description: Get the manifest identified by `name` and `reference` where `reference`\n        can be a tag or digest.\n      operationId: Manifests_Get\n      parameters:\n        - $ref: \"#/components/parameters/ImageName\"\n        - $ref: \"#/components/parameters/ImageReference\"\n        - description: Accept header string delimited by comma. For example,\n            application/vnd.docker.distribution.manifest.v2+json\n          in: header\n          name: accept\n          required: false\n          schema:\n            type: string\n          examples:\n            Get manifest:\n              value: application/vnd.docker.distribution.manifest.v2+json\n      responses:\n        \"200\":\n          description: Returns the requested manifest file in a larger combined group\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ManifestWrapper\"\n              examples:\n                Get manifest:\n                  $ref: \"#/components/examples/Get_manifest\"\n        default:\n          description: ACR error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AcrErrors\"\n      tags:\n        - Manifest\n    put:\n      description: Put the manifest identified by `name` and `reference` where `reference`\n        can be a tag or digest.\n      operationId: Manifests_Create\n      parameters:\n        - $ref: \"#/components/parameters/ImageName\"\n        - $ref: \"#/components/parameters/ImageReference\"\n      requestBody:\n        content:\n          application/vnd.docker.distribution.manifest.v2+json:\n            schema:\n              $ref: \"#/components/schemas/Manifest\"\n        description: Manifest body, can take v1 or v2 values depending on accept header\n        required: true\n        x-ms-parameter-location: method\n      responses:\n        \"201\":\n          description: The manifest is updated\n          headers:\n            Content-Length:\n              description: The length of the requested blob content.\n              schema:\n                type: integer\n                format: int64\n              example: 0\n            Docker-Content-Digest:\n              description: Identifies the docker upload uuid for the current request.\n              schema:\n                type: string\n              example: sha256:15685c48490175b7dde62e6bfcfb54d9420c6495ea6404776e2facca3da93cd8\n            Location:\n              description: The canonical location url of the uploaded manifest.\n              schema:\n                type: string\n              example: /v2/hello-world/manifests/sha256:15685c48490175b7dde62e6bfcfb54d9420c6495ea6404776e2facca3da93cd8\n          content:\n            application/json:\n              schema: {}\n              examples:\n                Put manifest:\n                  $ref: \"#/components/examples/Put_manifest\"\n        default:\n          description: ACR error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AcrErrors\"\n      tags:\n        - Manifest\n      x-ms-long-running-operation: false\n  \"/{nextBlobUuidLink}\":\n    delete:\n      description: Cancel outstanding upload processes, releasing associated resources. If\n        this is not called, the unfinished uploads will eventually timeout.\n      operationId: Blob_CancelUpload\n      parameters:\n        - $ref: \"#/components/parameters/NextLink\"\n      responses:\n        \"204\":\n          description: The upload has been successfully deleted.\n        default:\n          description: ACR error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AcrErrors\"\n      tags:\n        - Layer\n    get:\n      description: Retrieve status of upload identified by uuid. The primary purpose of\n        this endpoint is to resolve the current status of a resumable upload.\n      operationId: Blob_GetStatus\n      parameters:\n        - $ref: \"#/components/parameters/NextLink\"\n      responses:\n        \"204\":\n          description: The upload is known and in progress. The last received offset is\n            available in the Range header.\n          headers:\n            Docker-Upload-UUID:\n              description: Identifies the docker upload uuid for the current request.\n              schema:\n                type: string\n            Range:\n              description: Range indicating the current progress of the upload.\n              schema:\n                type: string\n              example: 0-0\n        default:\n          description: ACR error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AcrErrors\"\n      tags:\n        - Layer\n    patch:\n      description: Upload a stream of data without completing the upload.\n      operationId: Blob_Upload\n      parameters:\n        - $ref: \"#/components/parameters/NextLink\"\n      requestBody:\n        content:\n          application/octet-stream:\n            schema:\n              format: file\n              type: object\n        description: Raw data of blob\n        required: true\n        x-ms-parameter-location: method\n      responses:\n        \"202\":\n          description: The stream of data has been accepted and the current progress is\n            available in the range header. The updated upload location is\n            available in the Location header.\n          headers:\n            Docker-Upload-UUID:\n              description: Identifies the docker upload uuid for the current request.\n              schema:\n                type: string\n            Location:\n              description: Provided location for blob\n              schema:\n                type: string\n              example: /v2/blobland/blobs/uploads/f6d3451c-3352-43ff-b67c-fd0cfc793066?_nouploadcache=false\u0026_state=9G2t2KQOw-ANeo5TrnwVb5OeAUIe0NaEJ2jxwLT6Y1J7Ik5hbWUiOiJibG9ibGFuZCIsIlVVSUQiOiJmNmQzNDUxYy0zMzUyLTQzZmYtYjY3Yy1mZDBjZmM3OTMwNjYiLCJPZmZzZXQiOjEzLCJTdGFydGVkQXQiOiIyMDE5LTA4LTI3VDIzOjUyOjU0WiJ9\n            Range:\n              description: Range indicating the current progress of the upload.\n              schema:\n                type: string\n              example: 0-12\n        default:\n          description: ACR error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AcrErrors\"\n      security:\n        - registry_auth: []\n          registry_oauth2: []\n      tags:\n        - Layer\n    put:\n      description: Complete the upload, providing all the data in the body, if necessary. A\n        request without a body will just complete the upload with previously\n        uploaded content.\n      operationId: Blob_EndUpload\n      parameters:\n        - $ref: \"#/components/parameters/BlobQueryDigest\"\n        - $ref: \"#/components/parameters/NextLink\"\n      requestBody:\n        content:\n          application/octet-stream:\n            schema:\n              format: file\n              type: object\n        description: Optional raw data of blob\n        x-ms-parameter-location: method\n      responses:\n        \"201\":\n          description: The upload has been completed and accepted by the registry.\n          headers:\n            Docker-Content-Digest:\n              description: Digest of the targeted content for the request.\n              schema:\n                type: string\n              example: sha256:a05a7abc31b0caadd5058069eaa623cdd0538512dbddacc7ca5bad73c3957c5e\n            Location:\n              description: Provided location for blob\n              schema:\n                type: string\n              example: /v2/blobland/blobs/sha256:a05a7abc31b0caadd5058069eaa623cdd0538512dbddacc7ca5bad73c3957c5e\n            Range:\n              description: Range indicating the current progress of the upload.\n              schema:\n                type: string\n        default:\n          description: ACR error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AcrErrors\"\n      tags:\n        - Layer\nx-ms-paths:\n  \"/v2/{name}/blobs/uploads/?mode=resumable\":\n    post:\n      description: Initiate a resumable blob upload with an empty request body.\n      operationId: Blob_StartUpload\n      parameters:\n        - $ref: \"#/components/parameters/ImageName\"\n      responses:\n        \"202\":\n          description: The upload has been created. The Location header must be used to\n            complete the upload. The response should be identical to a GET\n            request on the contents of the returned Location header.\n          headers:\n            Docker-Upload-UUID:\n              description: Identifies the docker upload uuid for the current request.\n              schema:\n                type: string\n            Location:\n              description: Provided location for blob\n              schema:\n                type: string\n              example: /v2/blobland/blobs/uploads/f6d3451c-3352-43ff-b67c-fd0cfc793066?_nouploadcache=false\u0026_state=iWTaVpaWiz23JTt8ZsYFPEU5JwLOFgdumWOmqGxIYGt7Ik5hbWUiOiJibG9ibGFuZCIsIlVVSUQiOiJmNmQzNDUxYy0zMzUyLTQzZmYtYjY3Yy1mZDBjZmM3OTMwNjYiLCJPZmZzZXQiOjAsIlN0YXJ0ZWRBdCI6IjIwMTktMDgtMjdUMjM6NTI6NTQuNTM1MDQ5ODY1WiJ9\n            Range:\n              description: Range indicating the current progress of the upload.\n              schema:\n                type: string\n              example: 0-0\n        default:\n          description: ACR error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AcrErrors\"\n      tags:\n        - Layer\n  \"/v2/{name}/blobs/{digest}?mode=chunk\":\n    get:\n      description: \"Retrieve the blob from the registry identified by `digest`. This\n        endpoint may also support RFC7233 compliant range requests. Support can\n        be detected by issuing a HEAD request. If the header `Accept-Range:\n        bytes` is returned, range requests can be used to fetch partial\n        content.\"\n      operationId: Blob_GetChunk\n      parameters:\n        - $ref: \"#/components/parameters/ImageName\"\n        - $ref: \"#/components/parameters/Digest\"\n        - $ref: \"#/components/parameters/Range\"\n      responses:\n        \"206\":\n          description: The blob identified by digest is available. The specified chunk of\n            blob content will be present in the body of the request.\n          headers:\n            Content-Length:\n              description: The length of the requested blob content.\n              schema:\n                type: integer\n                format: int64\n              example: \"300\"\n            Content-Range:\n              description: Content range of blob chunk.\n              schema:\n                type: string\n              example: bytes 0-299/5635\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n              examples:\n                Get a blob Chunk:\n                  $ref: \"#/components/examples/Get_a_blob_Chunk\"\n        default:\n          description: ACR error response describing why the operation failed.\n          content:\n            application/octet-stream:\n              schema:\n                $ref: \"#/components/schemas/AcrErrors\"\n      tags:\n        - Layer\n    head:\n      description: Same as GET, except only the headers are returned.\n      operationId: Blob_CheckChunk\n      parameters:\n        - $ref: \"#/components/parameters/ImageName\"\n        - $ref: \"#/components/parameters/Digest\"\n        - $ref: \"#/components/parameters/Range\"\n      responses:\n        \"200\":\n          description: The blob identified by digest is available. The specified chunk of\n            blob content will be present in the body of the request.\n          headers:\n            Content-Length:\n              description: The length of the requested blob content.\n              schema:\n                type: integer\n                format: int64\n              example: \"300\"\n            Content-Range:\n              description: Content range of blob chunk.\n              schema:\n                type: string\n              example: bytes 0-299/5635\n        default:\n          description: ACR error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AcrErrors\"\n      tags:\n        - Layer\nservers:\n  - url: https://azure.local\n  - url: \"{url}\"\n    variables:\n      url:\n        description: Registry login URL\n        x-ms-client-name: loginUri\n        x-ms-parameter-location: client\n        x-ms-skip-url-encoding: true\n        default: \"\"\ncomponents:\n  examples:\n    Get_repositories_in_a_registry:\n      value:\n        repositories:\n          - production/alpine\n          - testing/alpine\n    Delete_a_repository:\n      value:\n        manifestsDeleted:\n          - sha256:e31831d63f77a0a6d74ef5b16df619a50808dac842190d07ae24e8b520d159fa\n        tagsDeleted:\n          - 4.7.2-20180814-windowsservercore-1709\n    Get_details_of_repository:\n      value:\n        changeableAttributes:\n          deleteEnabled: true\n          listEnabled: true\n          readEnabled: true\n          writeEnabled: true\n        createdTime: 2018-09-06T06:17:20.9531248Z\n        imageName: nanoserver\n        lastUpdateTime: 2018-09-07T16:30:46.6583219Z\n        manifestCount: 2\n        registry: acrapi.azurecr-test.io\n        tagCount: 2\n    Get_list_of_available_manifests:\n      value:\n        imageName: nanoserver\n        manifests:\n          - architecture: amd64\n            changeableAttributes:\n              deleteEnabled: true\n              listEnabled: true\n              readEnabled: true\n              writeEnabled: true\n            configMediaType: application/vnd.docker.container.image.v1+json\n            createdTime: 2018-09-06T06:17:20.9983915Z\n            digest: sha256:110d2b6c84592561338aa040b1b14b7ab81c2f9edbd564c2285dd7d70d777086\n            imageSize: 2401606\n            lastUpdateTime: 2018-09-06T06:17:20.9983915Z\n            mediaType: application/vnd.docker.distribution.manifest.v2+json\n            os: windows\n            tags:\n              - 4.7.2-20180905-nanoserver-1803\n          - architecture: amd64\n            changeableAttributes:\n              deleteEnabled: true\n              listEnabled: true\n              readEnabled: true\n              writeEnabled: true\n            configMediaType: application/vnd.docker.container.image.v1+json\n            createdTime: 2018-09-07T16:30:46.5651701Z\n            digest: sha256:7af5cd1dde3e8f5c2c9103860afa4ca871a6075373b6564b0e7b1b47866dab52\n            imageSize: 4135121\n            lastUpdateTime: 2018-09-07T16:30:46.5651701Z\n            mediaType: application/vnd.docker.distribution.manifest.v2+json\n            os: windows\n            tags:\n              - 4.7.2-20180906-nanoserver-1803\n        registry: acrapi.azurecr-test.io\n    Get_manifest_attributes:\n      value:\n        imageName: nanoserver\n        manifest:\n          architecture: amd64\n          changeableAttributes:\n            deleteEnabled: true\n            listEnabled: true\n            readEnabled: true\n            writeEnabled: true\n          configMediaType: application/vnd.docker.container.image.v1+json\n          createdTime: 2018-09-06T06:17:20.9983915Z\n          digest: sha256:110d2b6c84592561338aa040b1b14b7ab81c2f9edbd564c2285dd7d70d777086\n          imageSize: 2401606\n          lastUpdateTime: 2018-09-06T06:17:20.9983915Z\n          mediaType: application/vnd.docker.distribution.manifest.v2+json\n          os: windows\n          tags:\n            - 4.7.2-20180905-nanoserver-1803\n        registry: acrapi.azurecr-test.io\n    Get_tags_of_a_repository:\n      value:\n        imageName: nanoserver\n        registry: acrapi.azurecr-test.io\n        tags:\n          - changeableAttributes:\n              deleteEnabled: true\n              listEnabled: true\n              readEnabled: true\n              writeEnabled: true\n            createdTime: 2018-09-06T06:17:21.0856539Z\n            digest: sha256:110d2b6c84592561338aa040b1b14b7ab81c2f9edbd564c2285dd7d70d777086\n            lastUpdateTime: 2018-09-06T06:17:21.0856539Z\n            name: 4.7.2-20180905-nanoserver-1803\n            signed: false\n          - changeableAttributes:\n              deleteEnabled: true\n              listEnabled: true\n              readEnabled: true\n              writeEnabled: true\n            createdTime: 2018-09-06T16:30:43.3860166Z\n            digest: sha256:7af5cd1dde3e8f5c2c9103860afa4ca871a6075373b6564b0e7b1b47866dab52\n            lastUpdateTime: 2018-09-07T16:30:46.7022734Z\n            name: 4.7.2-20180906-nanoserver-1803\n            signed: false\n    Get_tag_attributes:\n      value:\n        imageName: test/bash\n        registry: acrapi.azurecr-test.io\n        tag:\n          changeableAttributes:\n            deleteEnabled: true\n            listEnabled: true\n            readEnabled: true\n            writeEnabled: false\n          createdTime: 2018-10-05T20:54:24.1286047Z\n          digest: sha256:eabe547f78d4c18c708dd97ec3166cf7464cc651f1cbb67e70d407405b7ad7b6\n          lastUpdateTime: 2018-10-05T20:54:24.1286047Z\n          name: tagName\n          signed: false\n    Exchange_AAD_Token_for_ACR_Refresh:\n      value:\n        refresh_token: eyJ0eXAiOiJKJhbGcigdCI6IkN0ZlFaOExlLTMejlnIiwidGlkIjoiNzbmOTgWItMmQ3Y2QwMTFkYjQ3Ii...\n    Get_Access_Token_with_username_and_password:\n      value:\n        access_token: eyJ0eXAiOiJKJhbGcigdCI6IkN0ZlFaOExlLTMejlnIiwidGlkIjoiNzbmOTgWItMmQ3Y2QwMTFkYjQ3Ii...\n    Get_Access_Token_with_Refresh_Token:\n      value:\n        access_token: eyJ0eXAiOiJKJhbGcigdCI6IkN0ZlFaOExlLTMejlnIiwidGlkIjoiNzbmOTgWItMmQ3Y2QwMTFkYjQ3Ii...\n    Get_a_blob_from_digest:\n      value: eyJhcmNoaXRlY3R1cmUiOiJhbWQ2NCIsImNvbmZpZyI6eyJIb3N0bmFtZSI6IiIsIkRvbWFpbm5hbWUiOiIiLCJVc2VyIjoiIiwiQXR0YWNoU3RkaW4iOmZhbHNlLCJBdHRhY2hTdGRvdXQiOmZhbHNlLCJBdHRhY2hTdGRlcnIiOmZhbHNlLCJUdHkiOmZhbHNlLCJPcGVuU3RkaW4iOmZhbHNlLCJTdGRpbk9uY2UiOmZhbHNlLCJFbnYiOlsiUEFUSD0vdXNyL2xvY2FsL3NiaW46L3Vzci9sb2NhbC9iaW46L3Vzci9zYmluOi91c3IvYmluOi9zYmluOi9iaW4iLCJfQkFTSF9HUEdfS0VZPTdDMDEzNUZCMDg4QUFGNkM2NkM2NTBCOUJCNTg2OUYwNjRFQTc0QUIiLCJfQkFTSF9WRVJTSU9OPTUuMCIsIl9CQVNIX1BBVENIX0xFVkVMPTAiLCJfQkFTSF9MQVRFU1RfUEFUQ0g9NyJdLCJDbWQiOlsiYmFzaCJdLCJBcmdzRXNjYXBlZCI6dHJ1ZSwiSW1hZ2UiOiJzaGEyNTY6MzhhZDJmYmM5ZjljMGE4N2RmZTBhMmIxOWJkY2E5NGJlNDVmNDY2M2Y3M2ZkMDlmZWZlZTQ5MmFmZDJjMDE0NCIsIlZvbHVtZXMiOm51bGwsIldvcmtpbmdEaXIiOiIiLCJFbnRyeXBvaW50IjpbImRvY2tlci1lbnRyeXBvaW50LnNoIl0sIk9uQnVpbGQiOm51bGwsIkxhYmVscyI6bnVsbH0sImNvbnRhaW5lciI6IjRiMDU0NmZhNDlkZjVkY2FlZDViNjYzNzE3ZjQ0MmNlZjcxYTFiOTVjMGZmYjQyYzhjNWNlNzIzMWI5MGMwMjYiLCJjb250YWluZXJfY29uZmlnIjp7Ikhvc3RuYW1lIjoiNGIwNTQ2ZmE0OWRmIiwiRG9tYWlubmFtZSI6IiIsIlVzZXIiOiIiLCJBdHRhY2hTdGRpbiI6ZmFsc2UsIkF0dGFjaFN0ZG91dCI6ZmFsc2UsIkF0dGFjaFN0ZGVyciI6ZmFsc2UsIlR0eSI6ZmFsc2UsIk9wZW5TdGRpbiI6ZmFsc2UsIlN0ZGluT25jZSI6ZmFsc2UsIkVudiI6WyJQQVRIPS91c3IvbG9jYWwvc2JpbjovdXNyL2xvY2FsL2JpbjovdXNyL3NiaW46L3Vzci9iaW46L3NiaW46L2JpbiIsIl9CQVNIX0dQR19LRVk9N0MwMTM1RkIwODhBQUY2QzY2QzY1MEI5QkI1ODY5RjA2NEVBNzRBQiIsIl9CQVNIX1ZFUlNJT049NS4wIiwiX0JBU0hfUEFUQ0hfTEVWRUw9MCIsIl9CQVNIX0xBVEVTVF9QQVRDSD03Il0sIkNtZCI6WyIvYmluL3NoIiwiLWMiLCIjKG5vcCkgIiwiQ01EIFtcImJhc2hcIl0iXSwiQXJnc0VzY2FwZWQiOnRydWUsIkltYWdlIjoic2hhMjU2OjM4YWQyZmJjOWY5YzBhODdkZmUwYTJiMTliZGNhOTRiZTQ1ZjQ2NjNmNzNmZDA5ZmVmZWU0OTJhZmQyYzAxNDQiLCJWb2x1bWVzIjpudWxsLCJXb3JraW5nRGlyIjoiIiwiRW50cnlwb2ludCI6WyJkb2NrZXItZW50cnlwb2ludC5zaCJdLCJPbkJ1aWxkIjpudWxsLCJMYWJlbHMiOnt9fSwiY3JlYXRlZCI6IjIwMTktMDctMTNUMDE6MTY6MDYuNTI3NTE1OTAyWiIsImRvY2tlcl92ZXJzaW9uIjoiMTguMDYuMS1jZSIsImhpc3RvcnkiOlt7ImNyZWF0ZWQiOiIyMDE5LTA3LTExVDIyOjIwOjUyLjEzOTcwOTM1NVoiLCJjcmVhdGVkX2J5IjoiL2Jpbi9zaCAtYyAjKG5vcCkgQUREIGZpbGU6MGViNWVhMzU3NDFkMjNmZTM5Y2JhYzI0NWIzYTVkODQ4NTZlZDYzODRmNGZmMDdkNDk2MzY5ZWU2ZDk2MGJhZCBpbiAvICJ9LHsiY3JlYXRlZCI6IjIwMTktMDctMTFUMjI6MjA6NTIuMzc1Mjg2NDA0WiIsImNyZWF0ZWRfYnkiOiIvYmluL3NoIC1jICMobm9wKSAgQ01EIFtcIi9iaW4vc2hcIl0iLCJlbXB0eV9sYXllciI6dHJ1ZX0seyJjcmVhdGVkIjoiMjAxOS0wNy0xM1QwMToxNToxMy41Njc2Njk4MTJaIiwiY3JlYXRlZF9ieSI6Ii9iaW4vc2ggLWMgIyhub3ApICBFTlYgX0JBU0hfR1BHX0tFWT03QzAxMzVGQjA4OEFBRjZDNjZDNjUwQjlCQjU4NjlGMDY0RUE3NEFCIiwiZW1wdHlfbGF5ZXIiOnRydWV9LHsiY3JlYXRlZCI6IjIwMTktMDctMTNUMDE6MTU6MTMuNzQ1NjUyMDk4WiIsImNyZWF0ZWRfYnkiOiIvYmluL3NoIC1jICMobm9wKSAgRU5WIF9CQVNIX1ZFUlNJT049NS4wIiwiZW1wdHlfbGF5ZXIiOnRydWV9LHsiY3JlYXRlZCI6IjIwMTktMDctMTNUMDE6MTU6MTMuOTQwNDU1NDE5WiIsImNyZWF0ZWRfYnkiOiIvYmluL3NoIC1jICMobm9wKSAgRU5WIF9CQVNIX1BBVENIX0xFVkVMPTAiLCJlbXB0eV9sYXllciI6dHJ1ZX0seyJjcmVhdGVkIjoiMjAxOS0wNy0xM1QwMToxNToxNC4wOTkzMDAwNzVaIiwiY3JlYXRlZF9ieSI6Ii9iaW4vc2ggLWMgIyhub3ApICBFTlYgX0JBU0hfTEFURVNUX1BBVENIPTciLCJlbXB0eV9sYXllciI6dHJ1ZX0seyJjcmVhdGVkIjoiMjAxOS0wNy0xM1QwMToxNjowNS45Mjg0MjkyNjJaIiwiY3JlYXRlZF9ieSI6Ii9iaW4vc2ggLWMgc2V0IC1ldXg7IFx0XHRhcGsgYWRkIC0tbm8tY2FjaGUgLS12aXJ0dWFsIC5idWlsZC1kZXBzIFx0XHRiaXNvbiBcdFx0Y29yZXV0aWxzIFx0XHRkcGtnLWRldiBkcGtnIFx0XHRnY2MgXHRcdGdudXBnIFx0XHRsaWJjLWRldiBcdFx0bWFrZSBcdFx0bmN1cnNlcy1kZXYgXHRcdHBhdGNoIFx0XHR0YXIgXHQ7IFx0XHR2ZXJzaW9uPVwiJF9CQVNIX1ZFUlNJT05cIjsgXHRpZiBbIFwiJF9CQVNIX1BBVENIX0xFVkVMXCIgLWd0IDAgXTsgdGhlbiBcdFx0dmVyc2lvbj1cIiR2ZXJzaW9uLiRfQkFTSF9QQVRDSF9MRVZFTFwiOyBcdGZpOyBcdHdnZXQgLU8gYmFzaC50YXIuZ3ogXCJodHRwczovL2Z0cC5nbnUub3JnL2dudS9iYXNoL2Jhc2gtJHZlcnNpb24udGFyLmd6XCI7IFx0d2dldCAtTyBiYXNoLnRhci5nei5zaWcgXCJodHRwczovL2Z0cC5nbnUub3JnL2dudS9iYXNoL2Jhc2gtJHZlcnNpb24udGFyLmd6LnNpZ1wiOyBcdFx0aWYgWyBcIiRfQkFTSF9MQVRFU1RfUEFUQ0hcIiAtZ3QgXCIkX0JBU0hfUEFUQ0hfTEVWRUxcIiBdOyB0aGVuIFx0XHRta2RpciAtcCBiYXNoLXBhdGNoZXM7IFx0XHRmaXJzdD1cIiQocHJpbnRmICclMDNkJyBcIiQoKCBfQkFTSF9QQVRDSF9MRVZFTCArIDEgKSlcIilcIjsgXHRcdGxhc3Q9XCIkKHByaW50ZiAnJTAzZCcgXCIkX0JBU0hfTEFURVNUX1BBVENIXCIpXCI7IFx0XHRmb3IgcGF0Y2ggaW4gJChzZXEgLXcgXCIkZmlyc3RcIiBcIiRsYXN0XCIpOyBkbyBcdFx0XHR1cmw9XCJodHRwczovL2Z0cC5nbnUub3JnL2dudS9iYXNoL2Jhc2gtJF9CQVNIX1ZFUlNJT04tcGF0Y2hlcy9iYXNoJHtfQkFTSF9WRVJTSU9OLy8uL30tJHBhdGNoXCI7IFx0XHRcdHdnZXQgLU8gXCJiYXNoLXBhdGNoZXMvJHBhdGNoXCIgXCIkdXJsXCI7IFx0XHRcdHdnZXQgLU8gXCJiYXNoLXBhdGNoZXMvJHBhdGNoLnNpZ1wiIFwiJHVybC5zaWdcIjsgXHRcdGRvbmU7IFx0Zmk7IFx0XHRleHBvcnQgR05VUEdIT01FPVwiJChta3RlbXAgLWQpXCI7IFx0Z3BnIC0tYmF0Y2ggLS1rZXlzZXJ2ZXIgaGEucG9vbC5za3Mta2V5c2VydmVycy5uZXQgLS1yZWN2LWtleXMgXCIkX0JBU0hfR1BHX0tFWVwiOyBcdGdwZyAtLWJhdGNoIC0tdmVyaWZ5IGJhc2gudGFyLmd6LnNpZyBiYXNoLnRhci5nejsgXHRncGdjb25mIC0ta2lsbCBhbGw7IFx0cm0gYmFzaC50YXIuZ3ouc2lnOyBcdGlmIFsgLWQgYmFzaC1wYXRjaGVzIF07IHRoZW4gXHRcdGZvciBzaWcgaW4gYmFzaC1wYXRjaGVzLyouc2lnOyBkbyBcdFx0XHRwPVwiJHtzaWclLnNpZ31cIjsgXHRcdFx0Z3BnIC0tYmF0Y2ggLS12ZXJpZnkgXCIkc2lnXCIgXCIkcFwiOyBcdFx0XHRybSBcIiRzaWdcIjsgXHRcdGRvbmU7IFx0Zmk7IFx0cm0gLXJmIFwiJEdOVVBHSE9NRVwiOyBcdFx0bWtkaXIgLXAgL3Vzci9zcmMvYmFzaDsgXHR0YXIgXHRcdC0tZXh0cmFjdCBcdFx0LS1maWxlPWJhc2gudGFyLmd6IFx0XHQtLXN0cmlwLWNvbXBvbmVudHM9MSBcdFx0LS1kaXJlY3Rvcnk9L3Vzci9zcmMvYmFzaCBcdDsgXHRybSBiYXNoLnRhci5nejsgXHRcdGlmIFsgLWQgYmFzaC1wYXRjaGVzIF07IHRoZW4gXHRcdGZvciBwIGluIGJhc2gtcGF0Y2hlcy8qOyBkbyBcdFx0XHRwYXRjaCBcdFx0XHRcdC0tZGlyZWN0b3J5PS91c3Ivc3JjL2Jhc2ggXHRcdFx0XHQtLWlucHV0PVwiJChyZWFkbGluayAtZiBcIiRwXCIpXCIgXHRcdFx0XHQtLXN0cmlwPTAgXHRcdFx0OyBcdFx0XHRybSBcIiRwXCI7IFx0XHRkb25lOyBcdFx0cm1kaXIgYmFzaC1wYXRjaGVzOyBcdGZpOyBcdFx0Y2QgL3Vzci9zcmMvYmFzaDsgXHRnbnVBcmNoPVwiJChkcGtnLWFyY2hpdGVjdHVyZSAtLXF1ZXJ5IERFQl9CVUlMRF9HTlVfVFlQRSlcIjsgXHQuL2NvbmZpZ3VyZSBcdFx0LS1idWlsZD1cIiRnbnVBcmNoXCIgXHRcdC0tZW5hYmxlLXJlYWRsaW5lIFx0XHQtLXdpdGgtY3Vyc2VzIFx0XHQtLXdpdGhvdXQtYmFzaC1tYWxsb2MgXHR8fCB7IFx0XHRjYXQgXHUwMDNlXHUwMDI2MiBjb25maWcubG9nOyBcdFx0ZmFsc2U7IFx0fTsgXHRtYWtlIC1qIFwiJChucHJvYylcIjsgXHRtYWtlIGluc3RhbGw7IFx0Y2QgLzsgXHRybSAtciAvdXNyL3NyYy9iYXNoOyBcdFx0cm0gLXIgXHRcdC91c3IvbG9jYWwvc2hhcmUvZG9jL2Jhc2gvKi5odG1sIFx0XHQvdXNyL2xvY2FsL3NoYXJlL2luZm8gXHRcdC91c3IvbG9jYWwvc2hhcmUvbG9jYWxlIFx0XHQvdXNyL2xvY2FsL3NoYXJlL21hbiBcdDsgXHRcdHJ1bkRlcHM9XCIkKCBcdFx0c2NhbmVsZiAtLW5lZWRlZCAtLW5vYmFubmVyIC0tZm9ybWF0ICclbiNwJyAtLXJlY3Vyc2l2ZSAvdXNyL2xvY2FsIFx0XHRcdHwgdHIgJywnICdcXG4nIFx0XHRcdHwgc29ydCAtdSBcdFx0XHR8IGF3ayAnc3lzdGVtKFwiWyAtZSAvdXNyL2xvY2FsL2xpYi9cIiAkMSBcIiBdXCIpID09IDAgeyBuZXh0IH0geyBwcmludCBcInNvOlwiICQxIH0nIFx0KVwiOyBcdGFwayBhZGQgLS1uby1jYWNoZSAtLXZpcnR1YWwgLmJhc2gtcnVuZGVwcyAkcnVuRGVwczsgXHRhcGsgZGVsIC5idWlsZC1kZXBzOyBcdFx0WyBcIiQod2hpY2ggYmFzaClcIiA9ICcvdXNyL2xvY2FsL2Jpbi9iYXNoJyBdOyBcdGJhc2ggLS12ZXJzaW9uOyBcdFsgXCIkKGJhc2ggLWMgJ2VjaG8gXCIke0JBU0hfVkVSU0lPTiUlW14wLTkuXSp9XCInKVwiID0gXCIke19CQVNIX1ZFUlNJT04lJS0qfS4kX0JBU0hfTEFURVNUX1BBVENIXCIgXTsifSx7ImNyZWF0ZWQiOiIyMDE5LTA3LTEzVDAxOjE2OjA2LjE2NDEyODQxMloiLCJjcmVhdGVkX2J5IjoiL2Jpbi9zaCAtYyAjKG5vcCkgQ09QWSBmaWxlOjY1MWIzYmViZWJhOGJlOTE2MmM1NmIzZWI1NjExOTk5MDUyMzVmM2UxYzc4MTEyMzJiNmM5ZjQ4YWMzMzM2NTEgaW4gL3Vzci9sb2NhbC9iaW4vICJ9LHsiY3JlYXRlZCI6IjIwMTktMDctMTNUMDE6MTY6MDYuMzE5Mzc1ODg0WiIsImNyZWF0ZWRfYnkiOiIvYmluL3NoIC1jICMobm9wKSAgRU5UUllQT0lOVCBbXCJkb2NrZXItZW50cnlwb2ludC5zaFwiXSIsImVtcHR5X2xheWVyIjp0cnVlfSx7ImNyZWF0ZWQiOiIyMDE5LTA3LTEzVDAxOjE2OjA2LjUyNzUxNTkwMloiLCJjcmVhdGVkX2J5IjoiL2Jpbi9zaCAtYyAjKG5vcCkgIENNRCBbXCJiYXNoXCJdIiwiZW1wdHlfbGF5ZXIiOnRydWV9XSwib3MiOiJsaW51eCIsInJvb3RmcyI6eyJ0eXBlIjoibGF5ZXJzIiwiZGlmZl9pZHMiOlsic2hhMjU2OjFiZmVlYmQ2NTMyM2I4ZGRmNWJkNmE1MWNjNzA5N2I3Mjc4OGJjOTgyZTlhYjMyODBkNTNkM2M2MTNhZGZmYTciLCJzaGEyNTY6NDgzYzk4MGFjNmFiZjYzZmM0ZDcyNjJiMTdhMTk1NGQ2MjI2NmRhYzMwMjliNWJlMzg0ZDAzYjM5MjI5ODAzZSIsInNoYTI1Njo1ZjVmOTNhOTMzMDUyMTBhOTZjYzQxN2Y1NzlkNzBhNDk2YmJmMGRiOGU4MGVhMWU5NDM2NjgyYzM3OWYyNWQ5Il19fQ==\n    Get_manifest:\n      value:\n        config:\n          digest: sha256:691fbc2d44fff48357bba69ab0505b9bf12b2b250a925a84a0b8e8e7eed390b2\n          mediaType: application/vnd.docker.container.image.v1+json\n          size: 5824\n        layers:\n          - digest: sha256:a073c86ecf9e0f29180e80e9638d4c741970695851ea48247276c32c57e40282\n            mediaType: application/vnd.docker.image.rootfs.diff.tar.gzip\n            size: 2014658\n          - digest: sha256:0e28711eb56d78f1e3dfde1807eba529d1346222bcd07d1cb1e436a18a0388bd\n            mediaType: application/vnd.docker.image.rootfs.diff.tar.gzip\n            size: 19778035\n          - digest: sha256:e460dd483fddb555911f7ed188c319fd97542c60e36843dcb1c5d753f733e1fa\n            mediaType: application/vnd.docker.image.rootfs.diff.tar.gzip\n            size: 1074044\n          - digest: sha256:6aa301222093bfb8cf424ccb387f59e2c9510c3a30cca7fbcf8c954f88e6600c\n            mediaType: application/vnd.docker.image.rootfs.diff.tar.gzip\n            size: 5827\n          - digest: sha256:9c5d80083a57d565f684e0155707204d497a5ad965279f92927452f15dae17e6\n            mediaType: application/vnd.docker.image.rootfs.diff.tar.gzip\n            size: 568\n        mediaType: application/vnd.docker.distribution.manifest.v2+json\n        schemaVersion: 2\n    Put_manifest:\n      value: {}\n    Get_a_blob_Chunk:\n      value: eyJhcmNoaXRlY3R1cmUiOiJhbWQ2NCIsImNvbmZpZyI6eyJIb3N0bmFtZSI6IiIsIkRvbWFpbm5hbWUiOiIiLCJVc2VyIjoiIiwiQXR0YWNoU3RkaW4iOmZhbHNlLCJBdHRhY2hTdGRvdXQiOmZhbHNlLCJBdHRhY2hTdGRlcnIiOmZhbHNlLCJUdHkiOmZhbHNlLCJPcGVuU3RkaW4iOmZhbHNlLCJTdGRpbk9uY2UiOmZhbHNlLCJFbnYiOlsiUEFUSD0vdXNyL2xvY2FsL3NiaW46L3Vzci9sb2NhbC9iaW46L3Vzci9zYmluOi91c3IvYmluOi9zYmluOi9iaW4iLCJfQkFTSF9HUEdfS0VZPTdDMDEzNUZCMDg4QUFGNkM2NkM2NTBCOUJC\n  parameters:\n    BlobQueryDigest:\n      description: Digest of a BLOB\n      in: query\n      name: digest\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n      examples:\n        End a blob upload:\n          value: sha256:a05a7abc31b0caadd5058069eaa623cdd0538512dbddacc7ca5bad73c3957c5e\n    Content-Range:\n      description: Range of bytes identifying the desired block of content represented by\n        the body. Start must the end offset retrieved via status check plus one.\n        Note that this is a non-standard use of the `Content-Range` header.\n      in: header\n      name: Content-Range\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n    Digest:\n      description: Digest of a BLOB\n      in: path\n      name: digest\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n      examples:\n        Delete a blob:\n          value: sha256:16463e0c481e161aabb735437d30b3c9c7391c2747cc564bb927e843b73dcb39\n        Get a blob from digest:\n          value: sha256:16463e0c481e161aabb735437d30b3c9c7391c2747cc564bb927e843b73dcb39\n        Head for a Blob Chunk:\n          value: sha256:16463e0c481e161aabb735437d30b3c9c7391c2747cc564bb927e843b73dcb39\n        Get a blob Chunk:\n          value: sha256:16463e0c481e161aabb735437d30b3c9c7391c2747cc564bb927e843b73dcb39\n        Get headers without blob Chunk:\n          value: sha256:16463e0c481e161aabb735437d30b3c9c7391c2747cc564bb927e843b73dcb39\n    From:\n      description: Name of the source repository.\n      in: query\n      name: from\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n      examples:\n        Mount a blob from repository:\n          value: sha256:16463e0c481e161aabb735437d30b3c9c7391c2747cc564bb927e843b73dcb39\n    ImageName:\n      description: Name of the image (including the namespace)\n      in: path\n      name: name\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n      examples:\n        Delete a repository:\n          value: nanoserver\n        Get details of repository:\n          value: nanoserver\n        Update repository attributes:\n          value: nanoserver\n        Get list of available manifests:\n          value: nanoserver\n        Get manifest attributes:\n          value: nanoserver\n        Update attributes of a manifest:\n          value: nanoserver\n        Get tags of a repository:\n          value: nanoserver\n        Delete a tag:\n          value: nanoserver\n        Get tag attributes:\n          value: test/bash\n        Update attributes of a tag:\n          value: nanoserver\n        Mount a blob from repository:\n          value: newimage\n        Delete a blob:\n          value: prod/bash\n        Get a blob from digest:\n          value: prod/bash\n        Head for a Blob Chunk:\n          value: prod/bash\n        Delete manifest:\n          value: alpine\n        Get manifest:\n          value: hello-world-dangling\n        Put manifest:\n          value: hello-world\n        Start a blob upload:\n          value: newimg\n        Get a blob Chunk:\n          value: prod/bash\n        Get headers without blob Chunk:\n          value: prod/bash\n    ImageReference:\n      description: A tag or a digest, pointing to a specific image\n      in: path\n      name: reference\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n      examples:\n        Get manifest attributes:\n          value: sha256:110d2b6c84592561338aa040b1b14b7ab81c2f9edbd564c2285dd7d70d777086\n        Update attributes of a manifest:\n          value: sha256:110d2b6c84592561338aa040b1b14b7ab81c2f9edbd564c2285dd7d70d777086\n        Delete manifest:\n          value: \"3.7\"\n        Get manifest:\n          value: 20190628-033033z\n        Put manifest:\n          value: a20190628-081044z\n    ManifestReference:\n      description: Tag or digest of the target manifest\n      in: path\n      name: reference\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n    Mount:\n      description: Digest of blob to mount from the source repository.\n      in: query\n      name: mount\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n      examples:\n        Mount a blob from repository:\n          value: prod/bash\n    NextLink:\n      description: Link acquired from upload start or previous chunk. Note, do not include\n        initial / (must do substring(1) )\n      in: path\n      name: nextBlobUuidLink\n      required: true\n      x-ms-client-name: location\n      x-ms-parameter-location: method\n      x-ms-skip-url-encoding: true\n      schema:\n        type: string\n      examples:\n        End a blob upload:\n          value: v2/blobland/blobs/uploads/2b28c60d-d296-44b7-b2b4-1f01c63195c6?_nouploadcache=false\u0026_state=VYABvUSCNW2yY5e5VabLHppXqwU0K7cvT0YUdq57KBt7Ik5hbWUiOiJibG9ibGFuZCIsIlVVSUQiOiIyYjI4YzYwZC1kMjk2LTQ0YjctYjJiNC0xZjAxYzYzMTk1YzYiLCJPZmZzZXQiOjAsIlN0YXJ0ZWRBdCI6IjIwMTktMDgtMjdUMjM6NTI6NDcuMDUzNjU2Mjg1WiJ9\n        Get blob status:\n          value: v2/blobland/blobs/uploads/2b28c60d-d296-44b7-b2b4-1f01c63195c6?_nouploadcache=false\u0026_state=VYABvUSCNW2yY5e5VabLHppXqwU0K7cvT0YUdq57KBt7Ik5hbWUiOiJibG9ibGFuZCIsIlVVSUQiOiIyYjI4YzYwZC1kMjk2LTQ0YjctYjJiNC0xZjAxYzYzMTk1YzYiLCJPZmZzZXQiOjAsIlN0YXJ0ZWRBdCI6IjIwMTktMDgtMjdUMjM6NTI6NDcuMDUzNjU2Mjg1WiJ9\n        Upload Blob:\n          value: v2/blobland/blobs/uploads/2b28c60d-d296-44b7-b2b4-1f01c63195c6?_nouploadcache=false\u0026_state=VYABvUSCNW2yY5e5VabLHppXqwU0K7cvT0YUdq57KBt7Ik5hbWUiOiJibG9ibGFuZCIsIlVVSUQiOiIyYjI4YzYwZC1kMjk2LTQ0YjctYjJiNC0xZjAxYzYzMTk1YzYiLCJPZmZzZXQiOjAsIlN0YXJ0ZWRBdCI6IjIwMTktMDgtMjdUMjM6NTI6NDcuMDUzNjU2Mjg1WiJ9\n    NoUploadCache:\n      description: Acquired from NextLink\n      in: query\n      name: _nouploadcache\n      required: false\n      x-ms-parameter-location: method\n      schema:\n        type: boolean\n    QueryDigest:\n      description: filter by digest\n      in: query\n      name: digest\n      required: false\n      x-ms-parameter-location: method\n      schema:\n        type: string\n    QueryLast:\n      description: Query parameter for the last item in previous query. Result set will\n        include values lexically after last.\n      in: query\n      name: last\n      required: false\n      x-ms-parameter-location: method\n      schema:\n        type: string\n    QueryNum:\n      description: query parameter for max number of items\n      in: query\n      name: n\n      required: false\n      x-ms-parameter-location: method\n      schema:\n        type: integer\n    QueryOrderBy:\n      description: orderby query parameter\n      in: query\n      name: orderby\n      required: false\n      x-ms-parameter-location: method\n      schema:\n        type: string\n    Range:\n      description: \"Format : bytes=\u003cstart\u003e-\u003cend\u003e,  HTTP Range header specifying blob chunk.\"\n      in: header\n      name: Range\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n      examples:\n        Get a blob Chunk:\n          value: bytes=0-299\n        Get headers without blob Chunk:\n          value: bytes=0-299\n    State:\n      description: Acquired from NextLink\n      in: query\n      name: _state\n      required: false\n      x-ms-parameter-location: method\n      schema:\n        type: string\n    TagReference:\n      description: Tag name\n      in: path\n      name: reference\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n      examples:\n        Delete a tag:\n          value: 4.7.2-20180905-nanoserver-1803\n        Get tag attributes:\n          value: sha256:eabe547f78d4c18c708dd97ec3166cf7464cc651f1cbb67e7afas407405b7ad7b6\n        Update attributes of a tag:\n          value: 4.7.2-20180905-nanoserver-1803\n    Url:\n      description: Registry login URL\n      in: path\n      name: url\n      required: true\n      x-ms-client-name: loginUri\n      x-ms-parameter-location: client\n      x-ms-skip-url-encoding: true\n      schema:\n        type: string\n    Uuid:\n      description: A uuid identifying the upload.\n      in: path\n      name: uuid\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n  requestBodies:\n    ChangeableAttributes:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ChangeableAttributes\"\n      description: Repository attribute value\n      x-ms-parameter-location: method\n  securitySchemes:\n    registry_auth:\n      type: http\n      scheme: basic\n    registry_oauth2:\n      in: header\n      name: Authorization\n      type: apiKey\n  schemas:\n    AccessToken:\n      properties:\n        access_token:\n          description: The access token for performing authenticated requests\n          type: string\n      type: object\n    AcrErrorInfo:\n      description: Error information\n      properties:\n        code:\n          description: Error code\n          type: string\n        detail:\n          description: Error details\n          type: object\n        message:\n          description: Error message\n          type: string\n    AcrErrors:\n      description: Acr error response describing why the operation failed\n      properties:\n        errors:\n          description: Array of detailed error\n          items:\n            $ref: \"#/components/schemas/AcrErrorInfo\"\n          type: array\n    AcrManifests:\n      description: Manifest attributes\n      example:\n        imageName: imageName\n        manifests:\n          - architecture: architecture\n            changeableAttributes:\n              deleteEnabled: true\n              listEnabled: true\n              quarantineDetails: quarantineDetails\n              quarantineState: quarantineState\n              readEnabled: true\n              writeEnabled: true\n            configMediaType: configMediaType\n            createdTime: createdTime\n            digest: digest\n            imageSize: 2401606\n            lastUpdateTime: lastUpdateTime\n            mediaType: mediaType\n            os: os\n            tags:\n              - tags\n              - tags\n          - architecture: architecture\n            changeableAttributes:\n              deleteEnabled: true\n              listEnabled: true\n              quarantineDetails: quarantineDetails\n              quarantineState: quarantineState\n              readEnabled: true\n              writeEnabled: true\n            configMediaType: configMediaType\n            createdTime: createdTime\n            digest: digest\n            imageSize: 2401606\n            lastUpdateTime: lastUpdateTime\n            mediaType: mediaType\n            os: os\n            tags:\n              - tags\n              - tags\n        registry: registry\n      properties:\n        imageName:\n          description: Image name\n          type: string\n        manifests:\n          description: List of manifests\n          items:\n            $ref: \"#/components/schemas/ManifestAttributesBase\"\n          type: array\n          x-ms-client-name: ManifestsAttributes\n        registry:\n          description: Registry name\n          type: string\n    Annotations:\n      additionalProperties:\n        type: object\n      description: Additional information provided through arbitrary metadata.\n      properties:\n        org.opencontainers.image.authors:\n          description: Contact details of the people or organization responsible for the\n            image.\n          type: string\n          x-ms-client-name: Authors\n        org.opencontainers.image.created:\n          description: Date and time on which the image was built (string, date-time as\n            defined by https://tools.ietf.org/html/rfc3339#section-5.6)\n          format: date-time\n          type: string\n          x-ms-client-name: Created\n        org.opencontainers.image.description:\n          description: Human-readable description of the software packaged in the image\n          type: string\n          x-ms-client-name: Description\n        org.opencontainers.image.documentation:\n          description: URL to get documentation on the image.\n          type: string\n          x-ms-client-name: Documentation\n        org.opencontainers.image.licenses:\n          description: License(s) under which contained software is distributed as an SPDX\n            License Expression.\n          type: string\n          x-ms-client-name: Licenses\n        org.opencontainers.image.ref.name:\n          description: Name of the reference for a target.\n          type: string\n          x-ms-client-name: Name\n        org.opencontainers.image.revision:\n          description: Source control revision identifier for the packaged software.\n          type: string\n          x-ms-client-name: Revision\n        org.opencontainers.image.source:\n          description: URL to get source code for building the image.\n          type: string\n          x-ms-client-name: Source\n        org.opencontainers.image.title:\n          description: Human-readable title of the image\n          type: string\n          x-ms-client-name: Title\n        org.opencontainers.image.url:\n          description: URL to find more information on the image.\n          type: string\n          x-ms-client-name: Url\n        org.opencontainers.image.vendor:\n          description: Name of the distributing entity, organization or individual.\n          type: string\n          x-ms-client-name: Vendor\n        org.opencontainers.image.version:\n          description: Version of the packaged software. The version MAY match a label or\n            tag in the source code repository, may also be Semantic\n            versioning-compatible\n          type: string\n          x-ms-client-name: Version\n      type: object\n      nullable: true\n    ChangeableAttributes:\n      example:\n        deleteEnabled: true\n        listEnabled: true\n        readEnabled: true\n        writeEnabled: true\n      properties:\n        deleteEnabled:\n          description: Delete enabled\n          type: boolean\n        listEnabled:\n          description: List enabled\n          type: boolean\n        readEnabled:\n          description: Read enabled\n          type: boolean\n        writeEnabled:\n          description: Write enabled\n          type: boolean\n    DeletedRepository:\n      description: Deleted repository\n      properties:\n        manifestsDeleted:\n          description: SHA of the deleted image\n          items:\n            type: string\n          type: array\n        tagsDeleted:\n          description: Tag of the deleted image\n          items:\n            type: string\n          type: array\n    Descriptor:\n      description: Docker V2 image layer descriptor including config and layers\n      example:\n        digest: sha256:5d20c808ce198565ff70b3ed23a991dd49afac45dece63474b27ce6ed036adc6\n        mediaType: application/vnd.docker.image.rootfs.diff.tar.gzip\n        size: 2107098\n      properties:\n        annotations:\n          $ref: \"#/components/schemas/Annotations\"\n        digest:\n          description: Layer digest\n          type: string\n        mediaType:\n          description: Layer media type\n          type: string\n        size:\n          description: Layer size\n          format: int64\n          type: integer\n        urls:\n          description: Specifies a list of URIs from which this object may be downloaded.\n          items:\n            description: Must conform to RFC 3986. Entries should use the http and https\n              schemes, as defined in RFC 7230.\n            type: string\n          type: array\n    FsLayer:\n      description: Image layer information\n      example:\n        blobSum: sha256:1f7d468f830cb0ed4beb8edc9438f18096e8c682e56a35242f60e6c61b718b30\n      properties:\n        blobSum:\n          description: SHA of an image layer\n          type: string\n    History:\n      description: A list of unstructured historical data for v1 compatibility\n      example:\n        v1Compatibility: v1 compatibility info\n      properties:\n        v1Compatibility:\n          description: The raw v1 compatibility information\n          type: string\n    ImageSignature:\n      description: Signature of a signed manifest\n      example:\n        header:\n          alg: ES256\n          jwk:\n            crv: P-256\n            kid: WGXM:EYWQ:DA53:LQUP:BCWG:5RDG:S3ZM:ETH7:VMQS:WWKZ:EWDG:V74Q\n            kty: EC\n            x: OxZ9k5BVjPZ7jb3BmBD4X0d8MVPJqfF4NeSe8reoqnY\n            y: EaCqTe4-vYwhk7qU6Bs2-AeLGOVtCe_-IY2MdE0Vfyc\n        protected: eyJmb3JtYXRMZW5ndGgiOjI5ODYsImZvcm1hdFRhaWwiOiJDbjAiLCJ0aW1lIjoiMjAxOC0wOS0yMFQyMzo0MTo1MloifQ\n        signature: p73LfotMGD8nNXz2g9YX2XtSllb4GI5-b3vjqP5N0nkv8QXg-r5z_omGiVbOZE2BYG1X_4TIN23l1KSEqsXxOg\n      properties:\n        header:\n          $ref: \"#/components/schemas/JWK\"\n        protected:\n          description: The signed protected header\n          type: string\n        signature:\n          description: A signature for the image manifest, signed by a libtrust private key\n          type: string\n    JWK:\n      description: A JSON web signature\n      properties:\n        alg:\n          description: The algorithm used to sign or encrypt the JWT\n          type: string\n        jwk:\n          $ref: \"#/components/schemas/JWKHeader\"\n    JWKHeader:\n      description: JSON web key parameter\n      properties:\n        crv:\n          description: crv value\n          type: string\n        kid:\n          description: kid value\n          type: string\n        kty:\n          description: kty value\n          type: string\n        x:\n          description: x value\n          type: string\n        y:\n          description: y value\n          type: string\n    Manifest:\n      description: Returns the requested manifest file\n      properties:\n        schemaVersion:\n          description: Schema version\n          type: integer\n    ManifestAttributes:\n      description: Manifest attributes details\n      example:\n        imageName: nanoserver\n        manifest:\n          architecture: amd64\n          changeableAttributes:\n            deleteEnabled: true\n            listEnabled: true\n            readEnabled: true\n            writeEnabled: true\n          configMediaType: application/vnd.docker.container.image.v1+json\n          createdTime: 2018-09-06T06:17:20.9983915Z\n          digest: sha256:110d2b6c84592561338aa040b1b14b7ab81c2f9edbd564c2285dd7d70d777086\n          imageSize: 2401606\n          lastUpdateTime: 2018-09-06T06:17:20.9983915Z\n          mediaType: application/vnd.docker.distribution.manifest.v2+json\n          os: windows\n          tags:\n            - 4.7.2-20180905-nanoserver-1803\n        registry: acrapi.azurecr-test.io\n      properties:\n        imageName:\n          description: Image name\n          type: string\n        manifest:\n          $ref: \"#/components/schemas/ManifestAttributesBase\"\n        registry:\n          description: Registry name\n          type: string\n    ManifestAttributesBase:\n      description: Manifest details\n      example:\n        architecture: architecture\n        changeableAttributes:\n          deleteEnabled: true\n          listEnabled: true\n          readEnabled: true\n          writeEnabled: true\n        configMediaType: configMediaType\n        createdTime: createdTime\n        digest: digest\n        imageSize: 2401606\n        lastUpdateTime: lastUpdateTime\n        mediaType: mediaType\n        os: os\n        tags:\n          - tags\n          - tags\n      properties:\n        architecture:\n          description: CPU architecture\n          type: string\n        changeableAttributes:\n          $ref: \"#/components/schemas/ChangeableAttributes\"\n        configMediaType:\n          description: Config blob media type\n          type: string\n        createdTime:\n          description: Created time\n          type: string\n        digest:\n          description: Manifest\n          type: string\n        imageSize:\n          description: Image size\n          format: int64\n          type: integer\n        lastUpdateTime:\n          description: Last update time\n          type: string\n        mediaType:\n          description: Media type\n          type: string\n        os:\n          description: Operating system\n          type: string\n        tags:\n          description: List of tags\n          items:\n            description: Tag name\n            type: string\n          type: array\n      type: object\n    ManifestAttributes_manifest:\n      description: List of manifest attributes\n      example:\n        quarantineTag: quarantineTag\n        references:\n          - architecture: architecture\n            digest: digest\n            os: os\n          - architecture: architecture\n            digest: digest\n            os: os\n      properties:\n        quarantineTag:\n          description: Quarantine tag name\n          type: string\n        references:\n          description: List of manifest attributes details\n          items:\n            $ref: \"#/components/schemas/ManifestAttributes_manifest_references\"\n          type: array\n    ManifestAttributes_manifest_references:\n      description: Manifest attributes details\n      example:\n        architecture: architecture\n        digest: digest\n        os: os\n      properties:\n        architecture:\n          description: CPU architecture\n          type: string\n        digest:\n          description: Manifest digest\n          type: string\n        os:\n          description: Operating system\n          type: string\n    ManifestChangeableAttributes:\n      description: Changeable attributes\n      example:\n        deleteEnabled: true\n        listEnabled: true\n        quarantineDetails: quarantineDetails\n        quarantineState: quarantineState\n        readEnabled: true\n        writeEnabled: true\n      properties:\n        deleteEnabled:\n          description: Delete enabled\n          type: boolean\n        listEnabled:\n          description: List enabled\n          type: boolean\n        quarantineDetails:\n          description: Quarantine details\n          type: string\n        quarantineState:\n          description: Quarantine state\n          type: string\n        readEnabled:\n          description: Read enabled\n          type: boolean\n        writeEnabled:\n          description: Write enabled\n          type: boolean\n    ManifestList:\n      allOf:\n        - $ref: \"#/components/schemas/Manifest\"\n      description: Returns the requested Docker multi-arch-manifest file\n      properties:\n        manifests:\n          description: List of V2 image layer information\n          items:\n            $ref: \"#/components/schemas/ManifestListAttributes\"\n          type: array\n        mediaType:\n          description: Media type for this Manifest\n          type: string\n      x-ms-discriminator-value: application/vnd.docker.distribution.manifest.list.v2+json\n    ManifestListAttributes:\n      properties:\n        digest:\n          description: The digest of the content, as defined by the Registry V2 HTTP API\n            Specification\n          type: string\n        mediaType:\n          description: The MIME type of the referenced object. This will generally be\n            application/vnd.docker.image.manifest.v2+json, but it could also be\n            application/vnd.docker.image.manifest.v1+json\n          type: string\n        platform:\n          $ref: \"#/components/schemas/Platform\"\n        size:\n          description: The size in bytes of the object\n          format: int64\n          type: integer\n    ManifestWrapper:\n      allOf:\n        - $ref: \"#/components/schemas/Manifest\"\n      description: Returns the requested manifest file\n      properties:\n        annotations:\n          $ref: \"#/components/schemas/Annotations\"\n        architecture:\n          description: (V1) CPU architecture\n          type: string\n        config:\n          $ref: \"#/components/schemas/Descriptor\"\n        fsLayers:\n          description: (V1) List of layer information\n          items:\n            $ref: \"#/components/schemas/FsLayer\"\n          type: array\n        history:\n          description: (V1) Image history\n          items:\n            $ref: \"#/components/schemas/History\"\n          type: array\n        layers:\n          description: (V2, OCI) List of V2 image layer information\n          items:\n            $ref: \"#/components/schemas/Descriptor\"\n          type: array\n        manifests:\n          description: (ManifestList, OCIIndex) List of V2 image layer information\n          items:\n            $ref: \"#/components/schemas/ManifestListAttributes\"\n          type: array\n        mediaType:\n          description: Media type for this Manifest\n          type: string\n        name:\n          description: (V1) Image name\n          type: string\n        signatures:\n          description: (V1) Image signature\n          items:\n            $ref: \"#/components/schemas/ImageSignature\"\n          type: array\n        tag:\n          description: (V1) Image tag\n          type: string\n    OCIIndex:\n      allOf:\n        - $ref: \"#/components/schemas/Manifest\"\n      description: Returns the requested OCI index file\n      properties:\n        annotations:\n          $ref: \"#/components/schemas/Annotations\"\n        manifests:\n          description: List of OCI image layer information\n          items:\n            $ref: \"#/components/schemas/ManifestListAttributes\"\n          type: array\n      x-ms-discriminator-value: application/vnd.oci.image.index.v1+json\n    OCIManifest:\n      allOf:\n        - $ref: \"#/components/schemas/Manifest\"\n      description: Returns the requested OCI Manifest file\n      properties:\n        annotations:\n          $ref: \"#/components/schemas/Annotations\"\n        config:\n          $ref: \"#/components/schemas/Descriptor\"\n        layers:\n          description: List of V2 image layer information\n          items:\n            $ref: \"#/components/schemas/Descriptor\"\n          type: array\n      x-ms-discriminator-value: application/vnd.oci.image.manifest.v1+json\n    Platform:\n      description: The platform object describes the platform which the image in the\n        manifest runs on. A full list of valid operating system and architecture\n        values are listed in the Go language documentation for $GOOS and $GOARCH\n      properties:\n        architecture:\n          description: Specifies the CPU architecture, for example amd64 or ppc64le.\n          type: string\n        features:\n          description: The optional features field specifies an array of strings, each\n            listing a required CPU feature (for example sse4 or aes\n          items:\n            type: string\n          type: array\n        os:\n          description: The os field specifies the operating system, for example linux or\n            windows.\n          type: string\n        os.features:\n          description: The optional os.features field specifies an array of strings, each\n            listing a required OS feature (for example on Windows win32k\n          items:\n            type: string\n          type: array\n        os.version:\n          description: The optional os.version field specifies the operating system\n            version, for example 10.0.10586.\n          type: string\n        variant:\n          description: The optional variant field specifies a variant of the CPU, for\n            example armv6l to specify a particular CPU variant of the ARM CPU.\n          type: string\n    RefreshToken:\n      properties:\n        refresh_token:\n          description: The refresh token to be used for generating access tokens\n          type: string\n      type: object\n    Repositories:\n      description: List of repositories\n      example:\n        repositories:\n          - production/alpine\n          - testing/alpine\n      properties:\n        repositories:\n          description: Repository names\n          items:\n            type: string\n          type: array\n          x-ms-client-name: Names\n    RepositoryAttributes:\n      description: Repository attributes\n      example:\n        changeableAttributes:\n          deleteEnabled: true\n          listEnabled: true\n          readEnabled: true\n          writeEnabled: true\n        createdTime: 2018-09-07T16:30:46.6583219Z\n        imageName: imageName\n        lastUpdateTime: 2018-09-07T16:30:46.6583219Z\n        manifestCount: 2\n        registry: registryname.azurecr.io\n        tagCount: 6\n      properties:\n        changeableAttributes:\n          $ref: \"#/components/schemas/ChangeableAttributes\"\n        createdTime:\n          description: Image created time\n          type: string\n        imageName:\n          description: Image name\n          type: string\n        lastUpdateTime:\n          description: Image last update time\n          type: string\n        manifestCount:\n          description: Number of the manifests\n          type: integer\n        registry:\n          description: Registry name\n          type: string\n        tagCount:\n          description: Number of the tags\n          type: integer\n      type: object\n    RepositoryTags:\n      description: Result of the request to list tags of the image\n      example:\n        name: name\n        tags:\n          - tags\n          - tags\n      properties:\n        name:\n          description: Name of the image\n          type: string\n        tags:\n          description: List of tags\n          items:\n            description: Tag name\n            type: string\n          type: array\n    TagAttributes:\n      description: Tag attributes\n      example:\n        imageName: imageName\n        registry: registry\n        tag:\n          changeableAttributes:\n            deleteEnabled: true\n            listEnabled: true\n            readEnabled: true\n            writeEnabled: true\n          createdTime: createdTime\n          digest: digest\n          lastUpdateTime: lastUpdateTime\n          name: name\n          signed: true\n      properties:\n        imageName:\n          description: Image name\n          type: string\n        registry:\n          description: Registry name\n          type: string\n        tag:\n          $ref: \"#/components/schemas/TagAttributesBase\"\n    TagAttributesBase:\n      description: Tag attribute details\n      example:\n        changeableAttributes:\n          deleteEnabled: true\n          listEnabled: true\n          readEnabled: true\n          writeEnabled: true\n        createdTime: 2018-08-10T17:28:44.1082945Z\n        digest: sha256:0873c923e00e0fd2ba78041bfb64a105e1ecb7678916d1f7776311e45bf5634b\n        lastUpdateTime: 2018-08-10T17:28:44.1082945Z\n        name: tagname\n        signed: true\n      properties:\n        changeableAttributes:\n          $ref: \"#/components/schemas/ChangeableAttributes\"\n        createdTime:\n          description: Tag created time\n          type: string\n        digest:\n          description: Tag digest\n          type: string\n        lastUpdateTime:\n          description: Tag last update time\n          type: string\n        name:\n          description: Tag name\n          type: string\n        signed:\n          description: Is signed\n          type: boolean\n    TagAttributes_tag:\n      description: Tag\n      example:\n        signatureRecord: signatureRecord\n      properties:\n        signatureRecord:\n          description: SignatureRecord value\n          type: string\n    TagList:\n      description: List of tag details\n      example:\n        imageName: imageName\n        registry: registry\n        tags:\n          - changeableAttributes:\n              deleteEnabled: true\n              listEnabled: true\n              readEnabled: true\n              writeEnabled: true\n            createdTime: createdTime\n            digest: digest\n            lastUpdateTime: lastUpdateTime\n            name: name\n            signed: true\n          - changeableAttributes:\n              deleteEnabled: true\n              listEnabled: true\n              readEnabled: true\n              writeEnabled: true\n            createdTime: createdTime\n            digest: digest\n            lastUpdateTime: lastUpdateTime\n            name: name\n            signed: true\n      properties:\n        imageName:\n          description: Image name\n          type: string\n        registry:\n          description: Registry name\n          type: string\n        tags:\n          description: List of tag attribute details\n          items:\n            $ref: \"#/components/schemas/TagAttributesBase\"\n          type: array\n    V1Manifest:\n      allOf:\n        - $ref: \"#/components/schemas/Manifest\"\n      description: Returns the requested V1 manifest file\n      properties:\n        architecture:\n          description: CPU architecture\n          type: string\n        fsLayers:\n          description: List of layer information\n          items:\n            $ref: \"#/components/schemas/FsLayer\"\n          type: array\n        history:\n          description: Image history\n          items:\n            $ref: \"#/components/schemas/History\"\n          type: array\n        name:\n          description: Image name\n          type: string\n        signatures:\n          description: Image signature\n          items:\n            $ref: \"#/components/schemas/ImageSignature\"\n          type: array\n        tag:\n          description: Image tag\n          type: string\n      x-ms-discriminator-value: application/vnd.oci.image.manifest.v1+json\n    V2Manifest:\n      allOf:\n        - $ref: \"#/components/schemas/Manifest\"\n      description: Returns the requested Docker V2 Manifest file\n      example:\n        config:\n          digest: sha256:6d1ef012b5674ad8a127ecfa9b5e6f5178d171b90ee462846974177fd9bdd39f\n          mediaType: application/vnd.docker.container.image.v1+json\n          size: 1512\n        layers:\n          - digest: sha256:5d20c808ce198565ff70b3ed23a991dd49afac45dece63474b27ce6ed036adc6\n            mediaType: application/vnd.docker.image.rootfs.diff.tar.gzip\n            size: 2107098\n        mediaType: application/vnd.docker.distribution.manifest.v2+json\n        schemaVersion: 2\n      properties:\n        config:\n          $ref: \"#/components/schemas/Descriptor\"\n        layers:\n          description: List of V2 image layer information\n          items:\n            $ref: \"#/components/schemas/Descriptor\"\n          type: array\n        mediaType:\n          description: Media type for this Manifest\n          type: string\n      x-ms-discriminator-value: application/vnd.docker.distribution.manifest.v2+json\n"
		}
	},
	"Error": "unmarshal: json: line 1:18946: json: cannot unmarshal bool into Go struct field Parameter.components.parameters.name of type string"
}