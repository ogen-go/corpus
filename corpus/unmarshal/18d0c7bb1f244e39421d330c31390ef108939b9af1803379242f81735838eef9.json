{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/SoliDry/api-generator"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "tests/functional/oas/openapi.yaml",
			"byteSize": 8409,
			"content": "openapi: 3.0.1\ninfo:\n  title: Articles\n  description: This api provides access to articles\n  version: v3\nservers:\n- url: https://{environment}.example.com:{port}/{basePath}\n  description: Production server\n  variables:\n    environment:\n      default: api\n      description: An api for devices at Google dot com\n    port:\n      enum:\n        - 80\n        - 443\n      defualt: 80\n    basePath:\n      default: v3\n# to declare globally which files to include with other components declarations\nuses:\n  topics: oas/topic.yaml\ncomponents:\n  schemas:\n    ID:\n      type: integer\n      required: true\n      maximum: 20\n    SID:\n      type: string\n      required: true\n      maxLength: 128\n    Type:\n      type: string\n      required: true\n      minLength: 1\n      maxLength: 255\n    DataObject:\n      type: object\n      required: true\n    DataArray:\n      type: array\n      required: true\n    RelationshipsDataItem:\n      type: object\n      properties:\n        id: ID\n        type: Type\n    RelationshipsDataItemSID:\n      type: object\n      properties:\n        id: SID\n        type: Type\n    Redis:\n      type: object\n    TagRelationships:\n      description: Tag relationship description\n      type: object\n      properties:\n        data:\n          type: DataArray\n          items:\n            type: RelationshipsDataItem\n    TagAttributes:\n      description: Always set attributes for object\n      type: object\n      properties:\n        title:\n          type: string\n          required: true\n          minLength: 3\n    Tag:\n      type: object\n      properties:\n        type: Type\n        id: ID\n        attributes: TagAttributes\n        relationships:\n          type: ArticleRelationships[]\n        cache:\n          type: Redis\n          properties:\n            stampede_xfetch:\n              type: boolean\n              default: true\n            stampede_beta:\n              type: number\n              default: 1.1\n            ttl:\n              type: integer\n              default: 3600\n    ArticleRelationships:\n      type: object\n      properties:\n        data:\n          type: DataArray\n          items:\n            type: RelationshipsDataItem\n    ArticleAttributes:\n      description: Article attributes description\n      type: object\n      properties:\n        title:\n          required: true\n          type: string\n          minLength: 16\n          maxLength: 256\n          facets:\n            index:\n              idx_title: index\n        description:\n          required: true\n          type: string\n          minLength: 32\n          maxLength: 1024\n          facets:\n            spell_check: true\n            spell_language: en\n        url:\n          required: false\n          type: string\n          minLength: 16\n          maxLength: 255\n          facets:\n            index:\n              idx_url: unique\n        show_in_top:\n          description: Show at the top of main page\n          required: false\n          type: boolean\n        status:\n          description: The state of an article\n          enum: [\"draft\", \"published\", \"postponed\", \"archived\"]\n          facets:\n            state_machine:\n              initial: ['draft']\n              draft: ['published']\n              published: ['archived', 'postponed']\n              postponed: ['published', 'archived']\n              archived: []\n        topic_id:\n          description: ManyToOne Topic relationship\n          required: true\n          type: integer\n          minimum: 1\n          maximum: 6\n          facets:\n            index:\n              idx_fk_topic_id: foreign\n              references: id\n              on: topic\n              onDelete: cascade\n              onUpdate: cascade\n        rate:\n          type: number\n          minimum: 3\n          maximum: 9\n          format: double\n        date_posted:\n          type: date-only\n        time_to_live:\n          type: time-only\n        deleted_at:\n          type: datetime\n    Article:\n      type: object\n      properties:\n        type: Type\n        id: SID\n        attributes: ArticleAttributes\n        relationships:\n          type: TagRelationships[] | TopicRelationships\n        cache:\n          type: Redis\n          properties:\n            stampede_xfetch:\n              type: boolean\n              default: true\n            stampede_beta:\n              type: number\n              default: 1.5\n            ttl:\n              type: integer\n              default: 300\n    TopicRelationships:\n      type: object\n      properties:\n        data:\n          type: DataArray\n          items:\n            type: RelationshipsDataItem\n    QueryParams:\n      type: object\n      properties:\n        page:\n          type: integer\n          required: false\n          description: page number\n        limit:\n          type: integer\n          required: false\n          default: 15\n          example: 15\n          description: elements per page\n        sort:\n          type: string\n          required: false\n          pattern: \"asc|desc\"\n          default: \"desc\"\n        access_token:\n          type: string\n          required: true\n          example: db7329d5a3f381875ea6ce7e28fe1ea536d0acaf\n          description: sha1 example\n          default: db7329d5a3f381875ea6ce7e28fe1ea536d0acaf\n    UserAttributes:\n      type: object\n      properties:\n        first_name:\n          required: true\n          type: string\n          minLength: 16\n          maxLength: 256\n        last_name:\n          required: false\n          type: string\n          minLength: 16\n          maxLength: 256\n          facets:\n            composite_index:\n              index: ['first_name', 'last_name'] # can be unique, primary\n        password:\n          description: user password to refresh JWT (encrypted with password_hash)\n          required: true\n          type: string\n          maxLength: 255\n        jwt:\n          description: Special field to run JWT Auth via requests\n          required: true\n          type: string\n          maxLength: 512\n          default: ' '\n        permissions:\n          type: integer\n          required: false\n          maximum: 20\n          facets:\n            bit_mask:\n              publisher: 1\n              editor: 2\n              manager: 4\n              photo_reporter: 8\n              admin: 16\n    User:\n      type: object\n      properties:\n        type: Type\n        id: ID\n        attributes: UserAttributes\n    Trees:\n      type: object\n      properties:\n        menu:\n          type: boolean\n          default: true\n    MenuAttributes:\n      type: object\n      properties:\n        title:\n          required: true\n          type: string\n        rfc:\n          type: string\n          default: /\n        parent_id:\n          description: mandatory field for building trees\n          type: integer\n          maximum: 10\n          default: 0\n    Menu:\n      type: object\n      properties:\n        type: Type\n        id: ID\n        attributes: MenuAttributes\n/article:\n  get:\n    queryParameters: QueryParams\n    responses:\n      200:\n        body:\n          application/json.vnd+json:\n            type: Article[]\n  post:\n    body:\n      application/json.vnd+json:\n        type: Article\n    responses:\n      200:\n        body:\n          application/json.vnd+json:\n            type: Article\n  /{id}:\n    get:\n      responses:\n        200:\n          body:\n            application/json.vnd+json:\n              type: Article\n    patch:\n      body:\n        application/json.vnd+json:\n          type: Article\n      responses:\n        200:\n          body:\n            application/json.vnd+json:\n              type: Article\n    delete:\n      responses:\n        204:\n    /relationships/tag:\n      get:\n        responses:\n          200:\n            body:\n              application/json.vnd+json:\n                type: TagRelationships\n      post:\n        body:\n          application/json.vnd+json:\n            type: TagRelationships\n        responses:\n          201:\n            body:\n              application/json.vnd+json:\n                type: TagRelationships\n      patch:\n        body:\n          application/json.vnd+json:\n            type: TagRelationships\n        responses:\n          200:\n            body:\n              application/json.vnd+json:\n                type: TagRelationships\n      delete:\n        responses:\n          204:\n    /tag:\n      get:\n        responses:\n          200:\n            body:\n              application/json.vnd+json:\n                type: Tag[]"
		}
	},
	"Error": "unmarshal: callback: json: cannot unmarshal string into Go value of type ogen.Schema"
}