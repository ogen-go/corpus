{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/gauss-project/aurorafs"
		},
		"file": {
			"name": "AuroraCommon.yaml",
			"size": 0,
			"path": "openapi/AuroraCommon.yaml",
			"byteSize": 16959,
			"content": "openapi: 3.0.3\ninfo:\n  version: 1.3.5\n  title: Common Data Types\n  description: |\n\nexternalDocs:\n  description: Browse the documentation @ the aurorafs Docs\n  url: \"\"\n\npaths: { }\ncomponents:\n  securitySchemes:\n    basicAuth:\n      type: http\n      scheme: basic\n\n    bearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: SecurityToken\n\n  schemas:\n    Address:\n      type: object\n      properties:\n        address:\n          $ref: \"#/components/schemas/BosonAddress\"\n\n    Addresses:\n      type: object\n      properties:\n        overlay:\n          $ref: \"#/components/schemas/BosonAddress\"\n        underlay:\n          type: array\n          items:\n            $ref: \"#/components/schemas/P2PUnderlay\"\n        nat_route:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ListenAddress\"\n        public_ip:\n          $ref: \"#/components/schemas/PublicIP\"\n        network_id:\n          type: integer\n        public_key:\n          $ref: \"#/components/schemas/PublicKey\"\n\n    PublicIP:\n      type: object\n      properties:\n        ipv4:\n          type: string\n        ipv6:\n          type: string\n\n    ConfigNodeGroup:\n      type: object\n      properties:\n        name:\n          type: string\n          description: \"group name\"\n        type:\n          type: number\n          description: \"0 join group, 1 observe group\"\n        keep-connected-peers:\n          type: number\n          required: true\n          description: \"the param must\"\n        keep-ping-peers:\n          type: number\n          required: true\n          description: \"the param must\"\n        nodes:\n          type: array\n          items:\n            - $ref: \"AuroraCommon.yaml#/components/schemas/BosonAddress\"\n\n    TopologyGroup:\n      type: object\n      properties:\n        connected:\n          type: integer\n        timestamp:\n          $ref: \"#/components/schemas/DateTime\"\n        groups:\n          type: array\n          items:\n            - properties:\n                gid:\n                  type: string\n                option:\n                  $ref: \"#/components/schemas/ConfigNodeGroup\"\n                keepPeers:\n                  type: array\n                knowPeers:\n                  type: array\n                connectedInfo:\n                  type: object\n                  properties:\n                      connected:\n                        type: integer\n                      connectedPeers:\n                        type: array\n                        items:\n                          - properties:\n                              address:\n                                $ref: \"#/components/schemas/BosonAddress\"\n                              metrics:\n                                $ref: \"#/components/schemas/PeerMetricsView\"\n\n    Topology:\n      type: object\n      properties:\n        baseAddr:\n          $ref: \"#/components/schemas/BosonAddress\"\n        population:\n          type: integer\n        connected:\n          type: integer\n        timestamp:\n          type: string\n        nnLowWatermark:\n          type: integer\n        depth:\n          type: integer\n        reachability:\n          type: string\n          enum:\n            - \"Unknown\"\n            - \"Public\"\n            - \"Private\"\n        networkAvailability:\n          type: string\n          enum:\n            - \"Unknown\"\n            - \"Available\"\n            - \"Unavailable\"\n        bins:\n          type: object\n          additionalProperties:\n            $ref: \"#/components/schemas/PeerInfo\"\n        lightNodes:\n          $ref: \"#/components/schemas/PeerInfo\"\n        bootNodes:\n          $ref: \"#/components/schemas/PeerInfo\"\n\n    PeerInfo:\n      type: object\n      properties:\n        population:\n          type: integer\n        connected:\n          type: integer\n        disconnectedPeers:\n          type: array\n          items:\n            type: object\n            properties:\n              address:\n                $ref: \"#/components/schemas/BosonAddress\"\n              metrics:\n                $ref: \"#/components/schemas/PeerMetricsView\"\n        connectedPeers:\n          type: array\n          items:\n            type: object\n            properties:\n              address:\n                $ref: \"#/components/schemas/BosonAddress\"\n              metrics:\n                $ref: \"#/components/schemas/PeerMetricsView\"\n\n    PeerMetricsView:\n      type: object\n      properties:\n        lastSeenTimestamp:\n          type: integer\n          nullable: false\n        sessionConnectionRetry:\n          type: integer\n          nullable: false\n        connectionTotalDuration:\n          type: number\n          nullable: false\n        sessionConnectionDuration:\n          type: number\n          nullable: false\n        sessionConnectionDirection:\n          type: string\n          nullable: false\n        latencyEWMA:\n          type: integer\n          nullable: false\n\n    DateTime:\n      type: string\n      format: date-time\n      #pattern: '^(\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{7}\\+\\d{2}:\\d{2})$'\n      example: \"2020-06-11T11:26:42.6969797+02:00\"\n\n    Duration:\n      description: Go time.Duration format\n      type: string\n      example: \"5.0018ms\"\n\n    FileName:\n      type: string\n\n    Hash:\n      type: object\n      properties:\n        hash:\n          $ref: \"#/components/schemas/BosonAddress\"\n\n    BitVector:\n      type: object\n      properties:\n        len:\n          type: integer\n        b:\n          type: string\n\n    NewFileResponse:\n      type: object\n      properties:\n        fileHash:\n          $ref: \"#/components/schemas/Hash\"\n        size:\n          type: integer\n        pinState:\n          type: boolean\n        bitVector:\n          $ref: \"#/components/schemas/BitVector\"\n\n    FileList:\n      type: object\n      properties:\n        tags:\n          type: array\n          nullable: true\n          items:\n            $ref: \"#/components/schemas/NewFileResponse\"\n\n    HexString:\n      type: string\n      pattern: \"^([A-Fa-f0-9]+)$\"\n      example: \"cf880b8eeac5093fa27b0825906c600685\"\n\n    LinkAddress:\n      type: string\n      pattern: \"^[A-Fa-f0-9]{40}$\"\n      example: \"36b7efd913ca4cf880b8eeac5093fa27b0825906\"\n\n    MultiAddress:\n      type: string\n\n    P2PUnderlay:\n      type: string\n      example: \"/ip4/127.0.0.1/tcp/1634/p2p/16Uiu2HAmTm17toLDaPYzRyjKn27iCB76yjKnJ5DjQXneFmifFvaX\"\n\n    ListenAddress:\n      type: string\n      example: \"172.12.0.111:15346\"\n\n    Peers:\n      type: object\n      properties:\n        peers:\n          type: array\n          items:\n            $ref: \"#/components/schemas/P2PAddress\"\n\n    BlockPeers:\n      type: object\n      properties:\n        peers:\n          type: array\n          items:\n            $ref: \"#/components/schemas/BlockAddress\"\n\n    P2PAddress:\n      type: object\n      properties:\n        address:\n          $ref: \"#/components/schemas/BosonAddress\"\n        fullNode:\n          type: boolean\n        direction:\n          type: string\n          example: \"inbound\"\n\n    BlockAddress:\n      type: object\n      properties:\n        address:\n          $ref: \"#/components/schemas/BosonAddress\"\n        timestamp:\n          type: string\n          format: date-time\n          example: \"2020-06-11T11:26:42+02:00\"\n        direction:\n          type: number\n          description: \"time of seconds\"\n          example: 3600\n\n    PinningState:\n      type: object\n      properties:\n        address:\n          $ref: \"#/components/schemas/BosonAddress\"\n        pinCounter:\n          type: integer\n\n    ProblemDetails:\n      type: string\n    DataCount:\n      type: integer\n      example: 2\n\n    ReferenceResponse:\n      type: object\n      properties:\n        reference:\n          $ref: \"#/components/schemas/BosonReference\"\n    HashResponse:\n      type: object\n      properties:\n        hash:\n          type: string\n          example: \"36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f\"\n\n    ManifestViewResponse:\n      type: object\n      properties:\n        type:\n          type: string\n        hash:\n          $ref: \"#/components/schemas/Hash\"\n        #          nullable: true\n        name:\n          type: string\n          nullable: true\n        size:\n          type: integer\n          nullable: true\n        ext:\n          type: string\n          nullable: true\n        mime:\n          type: string\n          nullable: true\n        sub:\n          $ref: \"#/components/schemas/ManifestViewResponse\"\n\n    AuroraResponse:\n      type: object\n      properties:\n        rootCid:\n          type: string\n        size:\n          type: integer\n        fileSize:\n          type: integer\n        pinState:\n          type: boolean\n        bitVector:\n          $ref: \"#/components/schemas/BitVector\"\n        register:\n          type: boolean\n        manifest:\n          $ref: \"#/components/schemas/ManifestViewResponse\"\n\n    AuroraPageResponse:\n      type: object\n      properties:\n        total:\n          type: integer\n        list:\n          type: array\n          items:\n            $ref: \"#/components/schemas/AuroraResponse\"\n\n    Response:\n      type: object\n      properties:\n        message:\n          type: string\n        code:\n          type: integer\n\n    ChunkResponse:\n      type: array\n      items:\n        type: object\n        properties:\n          overlay:\n            $ref: \"#/components/schemas/BosonAddress\"\n          bit:\n            type: string\n\n    ChunkInfoInitResponse:\n      type: object\n      properties:\n        msg:\n          type: boolean\n\n    ChunkSourceResponse:\n      type: object\n      properties:\n        pyramidSource:\n          $ref: \"#/components/schemas/BosonAddress\"\n        fileChunkCount:\n          $ref: \"#/components/schemas/DataCount\"\n        chunkSource:\n          type: array\n          nullable: true\n          items:\n            $ref: \"#/components/schemas/ChunkSourceReference\"\n\n    RoutePaths:\n      type: object\n      properties:\n        paths:\n          type: array\n          items:\n            - $ref: \"#/components/schemas/RoutePath\"\n\n    RoutePath:\n      type: object\n      properties:\n        sign:\n          type: string\n        bodys:\n          type: array\n        items:\n          type: array\n        createTime:\n          $ref: \"#/components/schemas/DateTime\"\n        usedTime:\n          $ref: \"#/components/schemas/DateTime\"\n\n    RttMs:\n      type: object\n      properties:\n        rtt:\n          $ref: \"#/components/schemas/Duration\"\n\n    Status:\n      type: object\n      properties:\n        status:\n          type: string\n\n    HealthStatus:\n      type: object\n      properties:\n        status:\n          type: string\n        version:\n          type: string\n        fullNode:\n          type: boolean\n        bootNodeMode:\n          type: boolean\n        auth:\n          type: boolean\n\n    ApiPort:\n      type: object\n      properties:\n        debugApiPort:\n          type: string\n        rpcWsPort:\n          type: string\n\n    BosonAddress:\n      type: string\n      pattern: \"^[A-Fa-f0-9]{64}$\"\n      example: \"36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f\"\n\n    PublicKey:\n      type: string\n      pattern: \"^[A-Fa-f0-9]{66}$\"\n      example: \"02ab7473879005929d10ce7d4f626412dad9fe56b0a6622038931d26bd79abf0a4\"\n\n    BosonEncryptedReference:\n      type: string\n      pattern: \"^[A-Fa-f0-9]{128}$\"\n      example: \"36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f2d2810619d29b5dbefd5d74abce25d58b81b251baddb9c3871cf0d6967deaae2\"\n\n    DomainName:\n      type: string\n      pattern: '^[A-Za-z0-9]+\\.[A-Za-z0-9]+$'\n      example: \"boson.eth\"\n\n    BosonOnlyReference:\n      oneOf:\n        - $ref: \"#/components/schemas/BosonAddress\"\n        - $ref: \"#/components/schemas/BosonEncryptedReference\"\n\n    BosonOnlyReferencesList:\n      type: object\n      properties:\n        addresses:\n          type: array\n          nullable: true\n          items:\n            $ref: \"#/components/schemas/BosonOnlyReference\"\n\n    BosonReference:\n      oneOf:\n        - $ref: \"#/components/schemas/BosonAddress\"\n        - $ref: \"#/components/schemas/BosonEncryptedReference\"\n        - $ref: \"#/components/schemas/DomainName\"\n\n    ChunkSourceReference:\n      type: object\n      properties:\n        overlay:\n          $ref: \"#/components/schemas/BosonAddress\"\n        chunkCount:\n          $ref: \"#/components/schemas/DataCount\"\n\n    ChequeTrafficInfo:\n      type: object\n      properties:\n        balance:\n          type: integer\n        availableBalance:\n          type: integer\n        totalSendTraffic:\n          type: integer\n        receivedTraffic:\n          type: integer\n\n    ChequeTrafficCheque:\n      type: object\n      properties:\n        peer:\n          $ref: \"#/components/schemas/BosonAddress\"\n        outstandingTraffic:\n          type: integer\n        sendTraffic:\n          type: integer\n        receivedTraffic:\n          type: integer\n        total:\n          type: integer\n        unCashed:\n          type: integer\n\n    ChequeTrafficHash:\n      type: object\n      properties:\n        hash:\n          $ref: \"#/components/schemas/BosonAddress\"\n\n    Uid:\n      type: integer\n\n    WelcomeMessage:\n      type: object\n      properties:\n        welcome_message:\n          type: string\n\n    SecurityTokenRequest:\n      type: object\n      properties:\n        Role:\n          type: string\n          nullable: false\n        Expiry:\n          type: integer\n          nullable: false\n\n    SecurityTokenResponse:\n      type: object\n      properties:\n        Key:\n          type: string\n          nullable: false\n\n  headers:\n    AuroraFeedIndex:\n      description: \"The index of the found update\"\n      schema:\n        $ref: \"#/components/schemas/HexString\"\n\n    AuroraFeedIndexNext:\n      description: \"The index of the next possible update\"\n      schema:\n        $ref: \"#/components/schemas/HexString\"\n\n    AuroraRecoveryTargets:\n      description: \"The targets provided for recovery\"\n      schema:\n        type: string\n\n    ETag:\n      description: |\n        The RFC7232 ETag header field in a response provides the current entity-\n        tag for the selected resource. An entity-tag is an opaque identifier for\n        different versions of a resource over time, regardless whether multiple\n        versions are valid at the same time. An entity-tag consists of an opaque\n        quoted string, possibly prefixed by a weakness indicator.\n      schema:\n        type: string\n\n  parameters:\n    AuroraRecoveryTargetsParameter:\n      in: query\n      name: targets\n      schema:\n        type: string\n      required: false\n      description: Global pinning targets prefix\n\n    AuroraPinParameter:\n      in: header\n      name: aurora-pin\n      schema:\n        type: boolean\n      required: false\n      description: Represents the pinning state of the chunk\n\n    AuroraEncryptParameter:\n      in: header\n      name: aurora-encrypt\n      schema:\n        type: boolean\n      required: false\n      description: Represents the encrypting state of the file\n\n    ContentTypePreserved:\n      in: header\n      name: content-type\n      schema:\n        type: string\n      description: The specified content-type is preserved for download of the asset\n\n    AuroraIndexDocumentParameter:\n      in: header\n      name: aurora-index-document\n      schema:\n        type: string\n        example: index.html\n      required: false\n      description: Default file to be referenced on path, if exists under that path\n\n    AuroraErrorDocumentParameter:\n      in: header\n      name: aurora-error-document\n      schema:\n        type: string\n        example: error.html\n      required: false\n      description: Configure custom error document to be returned when a specified path can not be found in collection\n\n    AuroraCollectionParameter:\n      in: header\n      name: aurora-collection\n      schema:\n        type: boolean\n      required: false\n      description: Upload file/files as a collection\n\n  responses:\n    \"204\":\n      description: The resource was deleted successfully.\n    \"400\":\n      description: Bad request\n      content:\n        application/problem+json:\n          schema:\n            $ref: \"#/components/schemas/ProblemDetails\"\n    \"401\":\n      description: Unauthorized\n      content:\n        application/problem+json:\n          schema:\n            $ref: \"#/components/schemas/ProblemDetails\"\n    \"403\":\n      description: Forbidden\n      content:\n        application/problem+json:\n          schema:\n            $ref: \"#/components/schemas/ProblemDetails\"\n    \"404\":\n      description: Not Found\n      content:\n        application/problem+json:\n          schema:\n            $ref: \"#/components/schemas/ProblemDetails\"\n    \"500\":\n      description: Internal Server Error\n      content:\n        application/problem+json:\n          schema:\n            $ref: \"#/components/schemas/ProblemDetails\"\n    \"GatewayForbidden\":\n      description: \"Endpoint or header (pinning or encryption headers) forbidden in Gateway mode\"\n      content:\n        application/problem+json:\n          schema:\n            $ref: \"#/components/schemas/ProblemDetails\"\n"
		}
	},
	"Error": "unmarshal: callback: json: cannot unmarshal bool into Go struct field Schema.required of type []string"
}