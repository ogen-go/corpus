{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/veracity/veracity-documentation"
		},
		"file": {
			"name": "ais-service-api.yaml",
			"size": 0,
			"path": "sections/aisoceandata/aisapi/ais-service-api.yaml",
			"byteSize": 45532,
			"content": "openapi: 3.0.1\ninfo:\n  title: AIS API\n  description:  \"Data Factory AIS API allows users to integrate with AIS data from different providers.\" \n  version: '1.0'\n  servers url: \"https://fa-prd-df-ais-api-we1.azurewebsites.net/api\"\n  contact:\n    name: DataFacory AIS API\n    url: https://dnv.sharepoint.com/teams/Data-Factory\n    email: OceanSpaceDataLake@dnv.onmicrosoft.com\n\npaths:\n  /api/vessellist: \n    get:\n      tags:\n      - api\n      summary: Simple function used to obtain key vessel identifiers required for the more detailed endpoints.\n      operationId: vessellist\n      parameters:\n      - name: vesselStatus.\n        in: query.\n        description: Current status of the vessel. \u003ci\u003ee.g. L,D\u003c/i\u003e See Appendix A.\n        required: true.\n        style: form.\n        explode: true.\n        schema:\n          type: array.\n          items: \n            type: string.\n      - name: vesselType.\n        in: query.\n        description: 3 letter LLI vessel type code. \u003ci\u003ee.g. BBU\u003c/i\u003e See Appendix B.\n        required: true.\n        style: form.\n        explode: true.\n        schema:\n          type: array.\n          items: \n            type: string.\n      - name: vesselFlag.\n        in: query.\n        description: Current flag of the vessel as per LLI vessel flag code. See Appendix C. \u003ci\u003ee.g. DEU\u003c/i\u003e.\n        required: true.\n        style: form.\n        explode: true.\n        schema:\n          type: array.\n          items: \n            type: string.\n      - name: grossTonnage.\n        in: query.\n        description: Range of the gross tonnages of vessels being requested. \u003ci\u003ee.g. 25000-100000\u003c/i\u003e.\n        required: false.\n        style: form.\n        explode: true.\n        schema:\n          type: string.\n      - name: dwtTonnage.\n        in: query.\n        description: Range of the deadweight tonnages of the vessels being requested. \u003ci\u003ee.g. 50000-120000\u003c/i\u003e.\n        required: false.\n        style: form.\n        explode: true.\n        schema:\n          type: string.\n      - name: classb.\n        in: query.\n        description: If supplied as ‘true’, known class B vessels will be included in the API response.\n        required: false.\n        style: form.\n        explode: true.\n        schema:\n          type: boolean.\n      - name: output.\n        in: query.\n        description: Can be used to request the format of data being returned.\n        required: true.\n        style: form.\n        explode: true.\n        schema:\n          type: string.\n          enum: json/xml.\n      - name: pageNumber.\n        in: query.\n        description: API response will list total pages. Can be used to fetch the page of data required.\n        required: false.\n        style: form.\n        explode: true.\n        schema:\n          type: integer. \n      responses:\n        200: \n          description: Success\n          content:  \n            application/json:\n              schema:  \n                $ref: \"#/components/schemas/vesselListResponse\"\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        405:\n          description: Invalid input\n        500:\n          description: Unexpected error\n  /api/aispositioncurrent_v2:\n    get: \n      tags:\n      - api\n      summary: Latest AIS position information used to track where vessels currently are.\n      operationId: aispositioncurrent_v2\n      parameters:\n      - name: vesselId\n        in: query\n        description: LLI unique vessel ID(s). Can be obtained using vesselList API. \u003ci\u003ee.g. 310462\u003c/i\u003e.\n        required: false.\n        style: form\n        explode: true.\n        schema:\n          type: array\n          items:\n            type: string\n      - name: vesselName\n        in: query\n        description: Current name of the vessel. Additional functionality available, see 'Standard Functionality'. \u003ci\u003ee.g. Queen Mary 2\u003c/i\u003e.\n        required: false.\n        style: form\n        explode: true.\n        schema:\n          type: string\n      - name: Mmsi\n        in: query\n        description: Mmsi number of the vessel(s) which you wish to track. \u003ci\u003ee.g. 422666000,422533000\u003c/i\u003e.\n        required: false.\n        style: form\n        explode: true.\n        schema:\n          type: array\n          items:\n            type: string\n      - name: vesselFlag\n        in: query\n        description: Current flag of the vessel as per LLI vessel flag code. See Appendix C. \u003ci\u003ee.g. DEU,TUR\u003c/i\u003e.\n        required: false.\n        style: form\n        explode: true.\n        schema:\n          type: array\n          items:\n            type: string\n      - name: vesselType\n        in: query\n        description: 3 letter LLI vessel type code. See Appendix B. \u003ci\u003ee.g. BBU\u003c/i\u003e.\n        required: false.\n        style: form\n        explode: true.\n        schema:\n          type: array\n          items:\n            type: string\n      - name: grossTonnage\n        in: query\n        description: Range of the gross tonnages of vessels being requested. \u003ci\u003ee.g. 25000-100000\u003c/i\u003e.\n        required: false.\n        style: form\n        explode: true.\n        schema:\n          type: string\n      - name: dwtTonnage\n        in: query\n        description: Range of the deadweight tonnages of the vessels being requested. \u003ci\u003ee.g. 50000-120000\u003c/i\u003e.\n        required: false.\n        style: form\n        explode: true.\n        schema:\n          type: string\n      - name: classb\n        in: query\n        description: If supplied as ‘true’, known class B vessels will be included in the API response.\n        required: false.\n        style: form\n        explode: true.\n        schema:\n          type: boolean\n      - name: includecallsign\n        in: query\n        description: If supplied as ‘true’, the vessels’ call sign will be included in the API response. \u003ci\u003ee.g. true\u003c/i\u003e.\n        required: false.\n        style: form\n        explode: true.\n        schema:\n          type: boolean\n      - name: receivedAfter\n        in: query\n        description: Can be used to get AIS positions received after the supplied date/time (UTC). \u003ci\u003ee.g. 2019-09-01T09:00:00\u003c/i\u003e.\n        required: false.\n        style: form\n        explode: true.\n        schema:\n          type: string\n      - name: scrollId\n        in: query\n        description: Used to retrieve data from a result cache when the total number of records from the API request exceeds the volume permitted for a single API call. See explanation below.\n        required: false.\n        style: form\n        explode: true.\n        schema:\n          type: string\n      - name: output.\n        in: query.\n        description: Can be used to request the format of data being returned.\n        required: true.\n        style: form.\n        explode: true.\n        schema:\n          type: string.\n          enum: json/xml.\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/aisPositionCurrent_v2Response\"\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        405:\n          description: Invalid input\n        500:\n          description: Unexpected error\n  /api/aispositionhistory:\n    get: \n      tags:\n      - api\n      summary: Historic AIS for tracking a vessels' location during a given time period.\n      operationId: aispositionhistory\n      parameters: \n      - name: vesselId\n        in: query\n        description: LLI unique vessel ID(s). Can be obtained using vesselList API. \u003ci\u003ee.g. 310462\u003c/i\u003e.\n        required: false.\n        style: form\n        explode: true.\n        schema:\n          type: array\n          items:\n            type: string\n      - name: vesselImo\n        in: query\n        description: IMO number of the vessel. \u003ci\u003ee.g. 9515802,9410026,8210699,5355632\u003c/i\u003e.\n        required: false.\n        style: form\n        explode: true.\n        schema:\n          type: array\n          items:\n            type: string\n      - name: vesselName\n        in: query\n        description: Current name of the vessel. Additional functionality available, see 'Standard Functionality'. \u003ci\u003ee.g. Queen Mary 2\u003c/i\u003e.\n        required: false.\n        style: form\n        explode: true.\n        schema:\n          type: string\n      - name: Mmsi\n        in: query\n        description: Mmsi number of the vessel(s) which you wish to track. \u003ci\u003ee.g. 422666000,422533000\u003c/i\u003e.\n        required: false.\n        style: form\n        explode: true.\n        schema:\n          type: array\n          items:\n            type: string\n      - name: dateRange\n        in: query\n        description: Date range required for AIS positions to be returned. Can accept either dates or date/times. If no dateRange supplied the API will default to the last 24 hours. Cannot exceed 30 days for a single vessel. Or 24 hours for multiple vessels. \u003ci\u003ee.g. 2020-12-01 – 2020-12-31\u003c/i\u003e.\n        required: false.\n        style: form\n        explode: true.\n        schema:\n          type: string\n      - name: classb\n        in: query\n        description: If supplied as ‘true’, known class B vessels will be included in the API response.\n        required: false.\n        style: form\n        explode: true.\n        schema:\n          type: boolean\n      - name: output.\n        in: query.\n        description: Can be used to request the format of data being returned.\n        required: true.\n        style: form.\n        explode: true.\n        schema:\n          type: string.\n          enum: json/xml.\n      - name: includeimo\n        in: query\n        description: If supplied as ‘true’, the vessels’ IMO number will be included in the API response. \u003ci\u003ee.g. true\u003c/i\u003e.\n        required: false.\n        style: form\n        explode: true.\n        schema:\n          type: boolean\n      - name: includecallsign\n        in: query\n        description: If supplied as ‘true’, the vessels’ call sign will be included in the API response. \u003ci\u003ee.g. true\u003c/i\u003e.\n        required: false.\n        style: form\n        explode: true.\n        schema:\n          type: boolean\n      responses:\n        200: \n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/aisPositionHistoryResponse\"\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        405:\n          description: Invalid input\n        500:\n          description: Unexpected error\n  /api/polygonsearch:\n    get: \n      tags:\n      - api\n      summary: Obtain either current or historic AIS positions by an area.\n      operationId: polygonsearch\n      parameters:\n      - name: coordinates\n        in: query\n        description: Sets of tuples [latitude,longitude] making up a geofence/polygon. See below rules on implementation. \u003ci\u003ee.g. [25.6900167,46.2176271], [23.0202812,55.1808944], [27.9403095,57.2856489], [31.02828295,48.15175907], [25.6900167,46.2176271]\u003c/i\u003e.\n        required: true.\n        style: form\n        explode: true.\n        schema:\n          type: array\n          items: \n            type: string\n      - name: recordType\n        in: query\n        description: Type of API request. For allowed values see the supporting documents. \u003ci\u003ee.g. Historic\u003c/i\u003e.\n        required: true.\n        style: form\n        explode: true.\n        schema:\n          type: array\n      - name: dateRange\n        in: query\n        description: Date range required for AIS positions to be returned. \u003ci\u003ee.g. 2020-12-01 – 2020-12-31\u003c/i\u003e.\n        required: false.\n        style: form\n        explode: true.\n        schema:\n          type: string\n      - name: latestPositionDateRange\n        in: query\n        description: Maximum age in days of latest AIS message for a vessel to be returned (recordType=Current only). \u003ci\u003ee.g. 1\u003c/i\u003e.\n        required: false.\n        style: form\n        explode: true.\n        schema:\n          type: number\n      - name: includeGhostVessels\n        in: query\n        description: If supplied as ‘true’, vessels which have not been matched to the LLI database will be included. \u003ci\u003ee.g. true\u003c/i\u003e.\n        required: false.\n        style: form\n        explode: true.\n        schema:\n          type: boolean\n      - name: classb.\n        in: query.\n        description: If supplied as ‘true’, known class B vessels will be included in the API response.\n        required: false.\n        style: form.\n        explode: true.\n        schema:\n          type: boolean.\n      - name: output.\n        in: query.\n        description: Can be used to request the format of data being returned.\n        required: true.\n        style: form.\n        explode: true.\n        schema:\n          type: string.\n          enum: json/xml.\n      - name: scrollId\n        in: query\n        description: Used to retrieve data from a result cache when the total number of records from the API request exceeds the volume permitted for a single API call. See explanation below.\n        required: false.\n        style: form\n        explode: true.\n        schema:\n          type: string\n      - name: includeimo\n        in: query\n        description: If supplied as ‘true’, the vessels’ IMO number will be included in the API response. \u003ci\u003ee.g. true\u003c/i\u003e.\n        required: false.\n        style: form\n        explode: true.\n        schema:\n          type: boolean\n      - name: includecallsign\n        in: query\n        description: If supplied as ‘true’, the vessels’ call sign will be included in the API response. \u003ci\u003ee.g. true\u003c/i\u003e.\n        required: false.\n        style: form\n        explode: true.\n        schema:\n          type: boolean\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n            schema:\n              $ref: \"#/components/schemas/polygonSearchResponse\"\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        405:\n          description: Invalid input\n        500:\n          description: Unexpected error\n  /api/vesseleta_v2:\n    get: \n      tags:\n      - api\n      summary: Historic and future ETA's e.g. where a vessel is due to arrive. You must provide either vesselId, vesselName, vesselImo or vesselMmsi.\n      operationId: vesseleta_v2\n      parameters:\n      - name: vesselId\n        in: query\n        description: LLI unique vessel ID(s). Can be obtained using vesselList API. \u003ci\u003ee.g. 310462\u003c/i\u003e.\n        required: false.\n        style: form\n        explode: true.\n        schema:\n          type: array\n          items:\n            type: string\n      - name: vesselImo\n        in: query\n        description: IMO number of the vessel. \u003ci\u003ee.g. 9515802,9410026,8210699,5355632\u003c/i\u003e.\n        required: false.\n        style: form\n        explode: true.\n        schema:\n          type: array\n          items:\n            type: string\n      - name: vesselName\n        in: query\n        description: Current name of the vessel. Additional functionality available, see 'Standard Functionality'. \u003ci\u003ee.g. Queen Mary 2\u003c/i\u003e.\n        required: false.\n        style: form\n        explode: true.\n        schema:\n          type: string\n      - name: vesselType\n        in: query\n        description: 3 letter LLI vessel type code. See Appendix B. \u003ci\u003ee.g. BBU\u003c/i\u003e.\n        required: false.\n        style: form\n        explode: true.\n        schema:\n          type: array\n          items:\n            type: string\n      - name: vesselMmsi\n        in: query\n        description: MMSI number currently used by the vessel. \u003ci\u003ee.g. 310627000\u003c/i\u003e.\n        required: false.\n        style: form\n        explode: true.\n        schema:\n          type: array\n          items:\n            type: string\n      - name: etaType\n        in: query\n        description: Specifies the type of ETA data being returned. For allowed values see below. Optional (default will provide ETA’s for the previous and next 30 days. \u003ci\u003ee.g. current\u003c/i\u003e.\n        required: false.\n        style: form\n        explode: true.\n        schema:\n          type: string\n      - name: dateRange\n        in: query\n        description: Level of vessel’s overall compliance risks score that is assigned to the vessel. For allowed values see below. At least one of the STS Pairing vessels should have this overall compliance risks score. \u003ci\u003ee.g. 2020-12-01 – 2020-12-31\u003c/i\u003e.\n        required: false.\n        style: form\n        explode: true.\n        schema:\n          type: string\n      - name: output.\n        in: query.\n        description: Can be used to request the format of data being returned.\n        required: true.\n        style: form.\n        explode: true.\n        schema:\n          type: string.\n          enum: json/xml.\n      - name: pageNumber.\n        in: query.\n        description: API response will list total pages. Can be used to fetch the page of data required.\n        required: false.\n        style: form.\n        explode: true.\n        schema:\n          type: integer. \n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n            schema:\n              $ref: \"#/components/schemas/vesselEtaResponse\"\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        405:\n          description: Invalid input\n        500:\n          description: Unexpected error\n  /api/vesselmovements_v3:\n    gets:\n      tags:\n      - api\n      summary: Historic vessel port calling, passing and AIS Sighting details.\n      operationId: vesselmovements_v3\n      parameters:\n      - name: vesselId\n        in: query\n        description: LLI unique vessel ID(s). Can be obtained using vesselList API. \u003ci\u003ee.g. 310462\u003c/i\u003e.\n        required: false.\n        style: form\n        explode: true.\n        schema:\n          type: array\n          items:\n            type: string\n      - name: vesselImo\n        in: query\n        description: IMO number of the vessel. \u003ci\u003ee.g. 9515802,9410026,8210699,5355632\u003c/i\u003e.\n        required: false.\n        style: form\n        explode: true.\n        schema:\n          type: array\n          items:\n            type: string\n      - name: vesselName\n        in: query\n        description: Current name of the vessel. Additional functionality available, see 'Standard Functionality'. \u003ci\u003ee.g. Queen Mary 2\u003c/i\u003e.\n        required: false.\n        style: form\n        explode: true.\n        schema:\n          type: string\n      - name: vesselMmsi\n        in: query\n        description: MMSI number currently used by the vessel. \u003ci\u003ee.g. 310627000\u003c/i\u003e.\n        required: false.\n        style: form\n        explode: true.\n        schema:\n          type: array\n          items:\n            type: string \n      - name: recordType\n        in: query\n        description: Type of API request. For allowed values see the supporting documents. \u003ci\u003ee.g. Historic\u003c/i\u003e.\n        required: true.\n        style: form\n        explode: true.\n        schema:\n          type: string\n      - name: movementType\n        in: query\n        description: Enables the user to exclude non-standard port calling records from the callings entity. For allowed values see below. Default 'all'. e.g. callings.\n        required: false.\n        style: form\n        explode: true.\n        schema:\n          type: string\n      - name: classb\n        in: query.\n        description: If supplied as ‘true’, known class B vessels will be included in the API response.\n        required: false.\n        style: form.\n        explode: true.\n        schema:\n          type: boolean.\n      - name: dateRange\n        in: query\n        description: Date range required for AIS positions to be returned. Can accept either dates or date/times. If no dateRange supplied the API will default to the last 24 hours. Cannot exceed 30 days for a single vessel. Or 24 hours for multiple vessels. \u003ci\u003ee.g. 2020-12-01 – 2020-12-31\u003c/i\u003e.\n        required: false.\n        style: form\n        explode: true.\n        schema:\n          type: string\n      - name: output.\n        in: query.\n        description: Can be used to request the format of data being returned.\n        required: true.\n        style: form.\n        explode: true.\n        schema:\n          type: string.\n          enum: json/xml.\n      - name: pageNumber.\n        in: query.\n        description: API response will list total pages. Can be used to fetch the page of data required.\n        required: false.\n        style: form.\n        explode: true.\n        schema:\n          type: integer. \n      responses: \n        200:\n          description: Success\n          content:\n            application/json:\n            schema:\n              $ref: \"#/components/schemas/vesselMovementsResponse\"\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        405:\n          description: Invalid input\n        500:\n          description: Unexpected error\ncomponents:\n  schemas:\n    vesselListResponse:\n      type: object\n      properties: \n        IsSuccess:\n          type: boolean\n        Data: \n          $ref: \"#/components/schemas/vesselData\"\n        Errors:\n          type: array\n          example: \n          items:\n    vesselData:\n      type: object\n      properties:\n        CurrentPage:\n          type: integer\n          example: 1\n        TotalPages:\n          type: integer\n          example: 1\n        TotalRecords:\n          type: integer\n          example: 2\n        Vessels:\n          type: array\n          items:  \n            $ref: \"#/components/schemas/vessel\"\n    vessel:\n      type: object\n      properties: \n        vesselId:\n          type: string\n          example: 9960389\n        vesselImo:\n          type: string\n          example: 9503861\n        vesselName:\n          type: string\n          example: Weilan 2\n        vesselStatus:\n          type: string\n          example: Live\n        vesselType:\n          type: string\n          example: bulk carrier\n    aisPositionCurrent_v2Response:\n      type: object\n      properties:\n        IsSuccess:\n          type: boolean\n        Data:\n          $ref: \"#/components/schemas/aisPositionCurrent_v2Data\"\n        Errors:\n          type: array\n          example:\n          items:\n    aisPositionCurrent_v2Data:\n      type: object\n      properties:\n        ScrollId: \n          type: string\n          example: DnF1ZXJ5VGhlbkZldGNoBQAAAACYv-EbFnVVc2cwQlBvU2MyMVdrZzNjdXVESHcAAAABQVE3-xZROTYyUkxDb1RBZXVKdVZoUW9ES29BAAAAAH3xx-wWNTAyLWU0ajVUY0NBTHZqRU9DakJEQQAAAACMs5BVFnEtcGdEa0E4UVFTNHdLRWVlMEtQencAAAAAjT6NQRZFNmltQ2N5ZFNDT0RHTm1tOG5UVzRB\n        TotalRecords:\n          type: number\n          example: 1\n        AisPositions:\n          type: array\n          items:\n            $ref: \"#/components/schemas/aisPositionCurrent_v2\"\n    aisPositionCurrent_v2:\n      type: object\n      properties:\n        vesselId:\n          type: string\n          example: 10998609\n        VesselImo: \n          type: string\n          example: 9624110\n        VesselName: \n          type: string\n          example: AM Buchanan\n        VesselMmsi: \n          type: string\n          example: 538005066\n        MessageTimestamp: \n          type: string\n          example: 2020-10-27T15:24:32\n        Latitude: \n          type: number\n          example: 46.1396533333333\n        Longitude: \n          type: number\n          example: -50.50392\n        Speed: \n          type: number\n          example: 9.2\n        Cog: \n          type: number\n          example: 90.5\n        Rot: \n          type: number\n          example: 0\n        Heading: \n          type: number\n          example: 91\n        NearestPlace: \n          type: string\n          example: Hibernia Field\n        NearestPlaceId: \n          type: string\n          example: 17998\n        NearestCountry: \n          type: string\n          example: Canada\n        Distance: \n          type: number\n          example: 83.7402730255961\n        Destination: \n          type: string\n          example: CAPCA\u003e\u003eFRDKK\n        Eta: \n          type: string\n          example: 2020-11-05T14:00:00\n        Draft: \n          type: number\n          example: 14.4\n        Dimensions: \n          type: string\n          example: A = 190 B = 39 C = 9 D = 23\n        NavStatus: \n          type: number\n          example: 0\n        TypeCargo: \n          type: number\n          example: 70\n        Source: \n          type: string\n          example: SAT\n        CallSign: \n          type: string\n          example: V7AT9\n    aisPositionHistoryResponse:\n      type: object\n      properties:\n        IsSuccess:\n          type: boolean\n          example: true.\n        Data:\n          type: array\n          items: \n            $ref: \"#/components/schemas/aisPositionHistoryResponse_Data\"\n        Errors:\n          type: array\n          example:\n          items:\n    aisPositionHistoryResponse_Data:\n      type: object\n      properties:\n        CurrentPage:\n          type: number\n          example: 1\n        TotalPages:\n          type: number\n          example: 1\n        totalRecords: \n          type: number\n          example: 3\n        items:\n          type: array\n          items:\n            $ref: \"#/components/schemas/aisPositionHistoryResponse_items\"\n    aisPositionHistoryResponse_items:\n      type: object\n      properties:\n        aisPositionHistory:\n          $ref: \"#/components/schemas/aisPositionHistoryResponse_aisPositionHistory\"\n    aisPositionHistoryResponse_aisPositionHistory:\n      type: object\n      properties: \n        vesselId: \n          type: string\n          example: 310462\n        mmsi: \n          type: string\n          example: 310627000          \n        messageTimestamp: \n          type: string\n          example: 2018-10-01T23:07:13         \n        latitude: \n          type: number\n          example: 46.813885         \n        longitude: \n          type: number\n          example: -71.1998133333333          \n        speed: \n          type: number\n          example: 0.3          \n        cog: \n          type: number\n          example: 178.3          \n        rot: \n          type: number\n          example: 5         \n        heading: \n          type: number\n          example: 186         \n        nearestPlace: \n          type: string\n          example: Quebec          \n        nearestPlaceId: \n          type: string\n          example: 15894       \n        nearestCountry: \n          type: string\n          example: Canada         \n        distance: \n          type: number\n          example: 0.22986830100720304         \n        destination: \n          type: string\n          example: CA QU          \n        eta: \n          type: string\n          example: 2018-09-29T12:30:00         \n        draft: \n          type: number\n          example: 10.1         \n        dimensions: \n          type: string\n          example:          \n        navStatus: \n          type: number\n          example: 0         \n        typeCargo: \n          type: string         \n        source: \n          type: string\n          example: LAND\n    polygonSearchResponse:\n      type: object\n      properties:\n        IsSuccess:\n          type: boolean\n          example: true.\n        Data:\n          type: array\n          items:\n             $ref: \"#/components/schemas/polygonSearchResponse_Data\"\n        Errors:\n          type: array\n          example:\n          items:\n    polygonSearchResponse_Data:\n      type: object\n      properties: \n        IsSuccess: \n          type: string\n          example: DnF1ZXJ5VGhlbkZldGNoBQAAAAAAgDVNFnBWdi1SQzlPVExPM1NEOVFxSEQ1TVEAAAAAAzvI8hZmX2ZTeVhoY1QtbXhtRDVxY2tZTDZRAAAAAAYMMI8WOVZiVDBqMDZRZGFWMUJsUTgyNEtFZwAAAAAIx5zvFjdmRjktb2FnU29TVXFPR18zY3BKUFEAAAAABgwGUxZhUVNiYUQxelFGR04wUWtiVHY4RGRn\n        totalRecords:\n          type: number\n          example: 4077\n        items:\n          type: array\n          items: \n            $ref: \"#/components/schemas/polygonSearchResponse_items\"\n    polygonSearchResponse_items:\n      type: object\n      properties: \n        polygonSearch:\n          $ref: \"#/components/schemas/polygonSearchResponse_polygonSearch\"\n    polygonSearchResponse_polygonSearch:\n      type: object\n      properties: \n        vesselId: \n          type: string\n          example: 310462\n        mmsi: \n          type: string\n          example: 310627000\n        messageTimestamp: \n          type: string\n          example: 2018-10-01T23:07:13\n        latitude: \n          type: number\n          example: 46.813885\n        longitude: \n          type: number\n          example: -71.1998133333333\n        speed: \n          type: number\n          example: 0.3\n        cog: \n          type: number\n          example: 178.3\n        rot: \n          type: number\n          example: 5\n        heading: \n          type: number\n          example: 186\n        nearestPlace: \n          type: string\n          example: Quebec\n        nearestCountry: \n          type: string\n          example: Canada\n        distance: \n          type: number\n          example: 0.22986830100720304\n        destination: \n          type: string\n          example: CA QU\n        eta: \n          type: string\n          example: 2018-09-29T12:30:00\n        draft: \n          type: number\n          example: 10.1\n        dimensions: \n          type: string\n          example: \n        navStatus: \n          type: number\n          example: 0\n        typeCargo: \n          type: string\n        source: \n          type: string\n          example: LAND\n    vesselEtaResponse:\n      type: object\n      properties:\n        IsSuccess:\n          type: boolean\n          example: true.\n        Data:\n          $ref: \"#/components/schemas/vesselEtaResponse_Data\"\n        Errors:\n          type: array\n          example:\n          items:\n    vesselEtaResponse_Data:\n      type: object\n      properties: \n        CurrentPage: \n          type: number\n          example: 1\n        TotalPages:\n          type: number\n          example: 1\n        TotalRecords: \n          type: number\n          example: 4077\n        Vessels: \n          type: array\n          items:\n            $ref: \"#/components/schemas/vesselEtaResponse_Data_Vessels\"\n    vesselEtaResponse_Data_Vessels:\n      type: object\n      properties:\n        vesselId:\n          type: string\n          example: 310462\n        vesselImo:\n          type: string\n          example: 9241061\n        vesselName: \n          type: string\n          example: Queen Mary 2\n        VesselMmsi:\n          type: string\n          example: 310627000\n        Etas:\n          type: array\n          items:\n            $ref: \"#/components/schemas/vesselEtaResponse_Data_Etas\"\n    vesselEtaResponse_Data_Etas:\n      type: object\n      properties: \n        placeName: \n          type: string\n          example: Torquay\n        placeCountry: \n          type: string\n          example: United Kingdom\n        eta: \n          type: string\n          example: 2020-10-14T13:00:00\n        terminal:\n          type: string\n          example: \n        voyage: \n          type: string\n          example: \n        etd:\n          type: string\n        nextPort: \n          type: string\n          example:         \n        source: \n          type: string\n          example: AIS\n    vesselMovementsResponse:\n      type: object\n      properties:\n        IsSuccess:\n          type: boolean\n          example: true.\n        Data:\n          $ref: \"#/components/schemas/vesselMovementsResponse_Data\"\n        Errors:\n          type: array\n          example:\n          items:\n    vesselMovementsResponse_Data:\n      type: object\n      properties:\n        CurrentPage:\n          type: number\n          example: 1\n        TotalPages:\n          type: number\n          example: 1\n        TotalRecords:\n          type: number\n          example: 4077\n        Vessels:\n          type: array\n          items: \n            $ref: \"#/components/schemas/vesselMovementsResponse_Data_Vessels\"\n    vesselMovementsResponse_Data_Vessels:\n      type: object\n      properties:\n        vessel:\n          $ref: \"#/components/schemas/vesselMovementsResponse_Data_vessel\" \n        sightings:\n          type: array\n          items:\n            $ref: \"#/components/schemas/vesselMovementsResponse_Data_sightings\"\n        callings:\n          items:\n            $ref: \"#/components/schemas/vesselMovementsResponse_Data_callings\"\n    vesselMovementsResponse_Data_Vessel:\n      type: object\n      properties:\n        vesselId:\n          type: string\n          example: 310462\n        VesselImo:\n          type: string\n          example: 9241061\n        vesselName: \n          type: string\n          example: Queen Mary 2\n        VesselMmsi:\n          type: string\n          example: 310627000\n    vesselMovementsResponse_Data_sightings:\n      type: object\n      properties:\n        VesselMmsi:\n          type: string\n          example: 310627000\n        type:\n          type: string\n          example: nearing\n        fromGmt:\n          type: string\n          example: 2020-05-07T22:56:32.000+0000\n        sog:\n          type: number\n          example: 17\n        cog:\n          type: number\n          example: 260.1\n        distance:\n          type: string\n          example: 19.6\n        destination:\n          type: string\n          example: WEYMOUTH\n        eta: \n          type: string\n          example: 2020-05-07T04:45:00.000+0000\n        draft:\n          type: number\n          example: 10.3\n        numberUpdates:\n          type: number\n          example: 13\n        nearestPlace:\n          $ref: \"#/components/schemas/vesselMovementsResponse_Data_nearestPlace\"\n    vesselMovementsResponse_Data_callings:\n      type: object\n      properties: \n        moveId:\n          type: string\n          example: 77952466\n        moveSequence:\n          type: number\n          example: 2113\n        arrivalDate:\n          type: string\n          example: 2020-05-07T07:42:00.000+0000\n        arrivalEstimated:\n          type: boolean\n          example: false.\n        arrivalQualifier:\n          type: string\n          example: \n        sailingDate:\n          type: string\n          example: 2020-05-07T16:36:00.000+0000\n        sailingEstimated:\n          type: boolean\n          example: false.\n        sailingQualifier:\n          type: string\n          example: \n        movementType:\n          type: string\n          example: calling\n        narrative:\n          type: string\n          example: \n        lastUpdated:\n          type: string\n          example: 2020-05-15T10:09:00.000+0000\n        place:\n          $ref: \"#/components/schemas/vesselMovementsResponse_Data_nearestPlace\"\n    vesselMovementsResponse_Data_nearestPlace:\n      type: object\n      properties: \n        name:\n          type: string\n          example: Majishan Anch.\n        placeId:\n          type: string\n          example: 111587\n        unlocode:\n          type: string\n          example: CN\n        latitude:\n          type: number\n          example: 30.416389\n        longitude:\n          type: number\n          example: 122.789444\n        countryCode:\n          type: string\n          example: CHN\n        countryIso:\n          type: string\n          example: CHN\n        countryName:\n          type: string\n          example: China\n        portNotes:\n          type: array\n          example: \n          items: \n  parameters:\n    etaType:\n      name: etaType\n      in: query\n      description: Specifies the type of ETA data being returned. For allowed values see below. Optional (default will provide ETA’s for the previous and next 30 days. \u003ci\u003ee.g. current\u003c/i\u003e.\n      required: false.\n      style: form\n      explode: true.\n      schema:\n        type: string\n    vesselStatus:\n      name: vesselStatus\n      in: query\n      description: Current status of the vessel. \u003ci\u003ee.g. L,D\u003c/i\u003e See Appendix A.\n      required: true.\n      style: form\n      explode: true.\n      schema:\n        type: array\n        items: \n          type: string\n    vesselType:\n      name: vesselType\n      in: query\n      description: 3 letter LLI vessel type code. \u003ci\u003ee.g. BBU\u003c/i\u003e See Appendix B.\n      required: true.\n      style: form\n      explode: true.\n      schema:\n        type: array\n        items: \n          type: string\n    coordinates:\n      name: coordinates\n      in: query\n      description: Sets of tuples [latitude,longitude] making up a geofence/polygon. See the supporting documents for rules on implementation. AIS Gap matches the coordinates if AIS Gap start tuple falls into set coordinates. \u003ci\u003ee.g. [25.6900167,46.2176271], [23.0202812,55.1808944], [27.9403095,57.2856489], [31.02828295,48.15175907], [25.6900167,46.2176271]\u003c/i\u003e.\n      required: false.\n      style: form\n      explode: true.\n      schema:\n        type: array\n        items: \n          type: string\n    coordinatesRequired:\n      name: coordinates\n      in: query\n      description: Sets of tuples [latitude,longitude] making up a geofence/polygon. See below rules on implementation. \u003ci\u003ee.g. [25.6900167,46.2176271], [23.0202812,55.1808944], [27.9403095,57.2856489], [31.02828295,48.15175907], [25.6900167,46.2176271]\u003c/i\u003e.\n      required: true.\n      style: form\n      explode: true.\n      schema:\n        type: array\n        items: \n          type: string\n    vesselTypeNotRequired:\n      name: vesselType\n      in: query\n      description: 3 letter LLI vessel type code. See Appendix B. \u003ci\u003ee.g. BBU\u003c/i\u003e.\n      required: false.\n      style: form\n      explode: true.\n      schema:\n        type: array\n        items: \n          type: string\n    vesselFlag:\n      name: vesselFlag\n      in: query\n      description: Current flag of the vessel as per LLI vessel flag code. See Appendix C. \u003ci\u003ee.g. DEU\u003c/i\u003e.\n      required: true.\n      style: form\n      explode: true.\n      schema:\n        type: array\n        items: \n          type: string\n    vesselFlagNotRequired:\n      name: vesselFlag\n      in: query\n      description: Current flag of the vessel as per LLI vessel flag code. See Appendix C. \u003ci\u003ee.g. DEU,TUR\u003c/i\u003e.\n      required: false.\n      style: form\n      explode: true.\n      schema:\n        type: array\n        items: \n          type: string\n    grossTonnage:\n      name: grossTonnage\n      in: query\n      description: Range of the gross tonnages of vessels being requested. \u003ci\u003ee.g. 25000-100000\u003c/i\u003e.\n      required: false.\n      style: form\n      explode: true.\n      schema:\n        type: string\n    dwtTonnage:\n      name: dwtTonnage\n      in: query\n      description: Range of the deadweight tonnages of the vessels being requested. \u003ci\u003ee.g. 50000-120000\u003c/i\u003e.\n      required: false.\n      style: form\n      explode: true.\n      schema:\n        type: string\n    classb:\n      name: classb\n      in: query\n      description: If supplied as ‘true’, known class B vessels will be included in the API response.\n      required: false.\n      style: form\n      explode: true.\n      schema:\n        type: boolean\n    output:\n      name: output\n      in: query\n      description: Can be used to request the format of data being returned.\n      required: true.\n      style: form\n      explode: true.\n      schema:\n        type: string\n        enum: json/xml.\n    pageNumber:\n      name: pageNumber\n      in: query\n      description: API response will list total pages. Can be used to fetch the page of data required.\n      required: false.\n      style: form\n      explode: true.\n      schema:\n        type: integer\n    vesselId:\n      name: vesselId\n      in: query\n      description: LLI unique vessel ID(s). Can be obtained using vesselList API. \u003ci\u003ee.g. 310462\u003c/i\u003e.\n      required: false.\n      style: form\n      explode: true.\n      schema:\n        type: array\n        items:\n          type: string\n    vesselImo:\n      name: vesselImo\n      in: query\n      description: IMO number of the vessel. \u003ci\u003ee.g. 9515802,9410026,8210699,5355632\u003c/i\u003e.\n      required: false.\n      style: form\n      explode: true.\n      schema:\n        type: array\n        items:\n          type: string\n    vesselImoNotRequired:\n      name: vesselImo\n      in: query\n      description: IMO number of the vessel. \u003ci\u003ee.g. 9515802,9410026,8210699,5355632\u003c/i\u003e.\n      required: false.\n      style: form\n      explode: true.\n      schema:\n        type: array\n        items:\n          type: string\n    vesselMmsi:\n      name: vesselMmsi\n      in: query\n      description: MMSI number currently used by the vessel. \u003ci\u003ee.g. 310627000\u003c/i\u003e.\n      required: false.\n      style: form\n      explode: true.\n      schema:\n        type: array\n        items:\n          type: string\n    Mmsi:\n      name: Mmsi\n      in: query\n      description: Mmsi number of the vessel(s) which you wish to track. \u003ci\u003ee.g. 422666000,422533000\u003c/i\u003e.\n      required: false.\n      style: form\n      explode: true.\n      schema:\n        type: array\n        items:\n          type: string\n    vesselName:\n      name: vesselName\n      in: query\n      description: Current name of the vessel. Additional functionality available, see 'Standard Functionality'. \u003ci\u003ee.g. Queen Mary 2\u003c/i\u003e.\n      required: false.\n      style: form\n      explode: true.\n      schema:\n        type: string\n    includecallsign:\n      name: includecallsign\n      in: query\n      description: If supplied as ‘true’, the vessels’ call sign will be included in the API response. \u003ci\u003ee.g. true\u003c/i\u003e.\n      required: false.\n      style: form\n      explode: true.\n      schema:\n        type: boolean\n    includeimo:\n      name: includeimo\n      in: query\n      description: If supplied as ‘true’, the vessels’ IMO number will be included in the API response. \u003ci\u003ee.g. true\u003c/i\u003e.\n      required: false.\n      style: form\n      explode: true.\n      schema:\n        type: boolean\n    receivedAfter:\n      name: receivedAfter\n      in: query\n      description: Can be used to get AIS positions received after the supplied date/time (UTC). \u003ci\u003ee.g. 2019-09-01T09:00:00\u003c/i\u003e.\n      required: false.\n      style: form\n      explode: true.\n      schema:\n        type: string\n    scrollId:\n      name: scrollId\n      in: query\n      description: Used to retrieve data from a result cache when the total number of records from the API request exceeds the volume permitted for a single API call. See explanation below.\n      required: false.\n      style: form\n      explode: true.\n      schema:\n        type: string\n    scrollSize:\n      name: scrollSize\n      in: query\n      description: Number of vessels per page response. Default 100. Maximum allowed value 300.\n      required: false.\n      style: form\n      explode: true.\n      schema:\n        type: number\n    dateRange:\n      name: dateRange\n      in: query\n      description: Obtain details of vessel-company relationships between 2 dates. For historyType ‘Historic’ only. \u003ci\u003ee.g. 2020-12-01 – 2020-12-31\u003c/i\u003e.\n      required: false.\n      style: form\n      explode: true.\n      schema:\n        type: string\n    dateRangeAis:\n      name: dateRange\n      in: query\n      description: Date range required for AIS positions to be returned. Can accept either dates or date/times. If no dateRange supplied the API will default to the last 24 hours. Cannot exceed 30 days for a single vessel. Or 24 hours for multiple vessels. \u003ci\u003ee.g. 2020-12-01 – 2020-12-31\u003c/i\u003e.\n      required: false.\n      style: form\n      explode: true.\n      schema:\n        type: string\n    dateRangeMovements:\n      name: dateRange\n      in: query\n      description: If no dateRange supplied the API will return the previous 7 days history. Maximum dateRange allowed is 31 days. \u003ci\u003ee.g. 2020-12-01 – 2020-12-31\u003c/i\u003e.\n      required: false.\n      style: form\n      explode: true.\n      schema:\n        type: string\n    dateRangeAisRequired:\n      name: dateRange\n      in: query\n      description: Date range required for AIS positions to be returned. \u003ci\u003ee.g. 2020-12-01 – 2020-12-31\u003c/i\u003e.\n      required: false.\n      style: form\n      explode: true.\n      schema:\n        type: string\n    latestPositionDateRange:\n      name: latestPositionDateRange\n      in: query\n      description: Maximum age in days of latest AIS message for a vessel to be returned (recordType=Current only). \u003ci\u003ee.g. 1\u003c/i\u003e.\n      required: false.\n      style: form\n      explode: true.\n      schema:\n        type: number\n    includeGhostVessels:\n      name: includeGhostVessels\n      in: query\n      description: If supplied as ‘true’, vessels which have not been matched to the LLI database will be included. \u003ci\u003ee.g. true\u003c/i\u003e.\n      required: false.\n      style: form\n      explode: true.\n      schema:\n        type: boolean\n    dateRangeLcrs:\n      name: dateRange\n      in: query\n      description: Used to return all LCRS messages published between a date range rather than vessel specific. Optional, can be used with or without a vessel parameter to obtain all reports during the date range. Maximum allowed range is 7 days when used without a vessel filter parameter. \u003ci\u003ee.g. 1997-01-01 – 2001-12-31\u003c/i\u003e.\n      required: false.\n      style: form\n      explode: true.\n      schema:\n        type: array\n        items:\n          type: string\n    recordType:\n      name: recordType\n      in: query\n      description: Type of API request. For allowed values see the supporting documents. \u003ci\u003ee.g. Historic\u003c/i\u003e.\n      required: true.\n      style: form\n      explode: true.\n      schema:\n        type: string\n    movementType:\n      name: movementType\n      in: query\n      description: Enables the user to exclude non-standard port calling records from the callings entity. For allowed values see below. Default 'all'. e.g. callings.\n      required: false.\n      style: form\n      explode: true.\n      schema:\n        type: string",
			"canonicalURL": "/github.com/veracity/veracity-documentation@927654095f7f87c6222574dad92c39fe7ea904fd/-/blob/sections/aisoceandata/aisapi/ais-service-api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/veracity/veracity-documentation/blob/927654095f7f87c6222574dad92c39fe7ea904fd/sections/aisoceandata/aisapi/ais-service-api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: unexpected tag !!str"
}