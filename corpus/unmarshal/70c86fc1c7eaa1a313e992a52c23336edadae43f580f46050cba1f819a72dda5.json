{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/redamoon/docker-mt-lamp"
		},
		"file": {
			"name": "openapi.json",
			"size": 0,
			"path": "api/redoc/openapi.json",
			"byteSize": 805420,
			"content": "{\n  \"components\": {\n    \"parameters\": {\n      \"asset_dateField\": {\n        \"description\": \"Specifies the field name to be used as a date field for filtering. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateField\",\n        \"schema\": {\n          \"default\": \"created_on\",\n          \"type\": \"string\"\n        }\n      },\n      \"asset_dateFrom\": {\n        \"description\": \"The start date to filtering. Specify in \\\"YYYY-MM-DD\\\" format. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateFrom\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"asset_dateTo\": {\n        \"description\": \"The end date to filtering. Specify in \\\"YYYY-MM-DD\\\" format. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateTo\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"asset_excludeIds\": {\n        \"description\": \"The comma separated ID list of assets to exclude from result.\",\n        \"in\": \"query\",\n        \"name\": \"excludeIds\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"asset_fields\": {\n        \"description\": \"The field list to retrieve as part of the asset resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.\",\n        \"in\": \"query\",\n        \"name\": \"fields\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"asset_includeIds\": {\n        \"description\": \"The comma separated ID list of assets to include to result.\",\n        \"in\": \"query\",\n        \"name\": \"includeIds\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"asset_limit\": {\n        \"description\": \"Maximum number of assets to retrieve.\\n\\n**Default**: 10\",\n        \"in\": \"query\",\n        \"name\": \"limit\",\n        \"schema\": {\n          \"default\": \"10\",\n          \"type\": \"integer\"\n        }\n      },\n      \"asset_offset\": {\n        \"description\": \"0-indexed offset.\\n\\n**Default**: 0\",\n        \"in\": \"query\",\n        \"name\": \"offset\",\n        \"schema\": {\n          \"default\": \"0\",\n          \"type\": \"integer\"\n        }\n      },\n      \"asset_search\": {\n        \"description\": \"Search query.\",\n        \"in\": \"query\",\n        \"name\": \"search\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"asset_searchFields\": {\n        \"description\": \"The comma separated field name list to search.\\n\\n**Default**: label\",\n        \"in\": \"query\",\n        \"name\": \"searchFields\",\n        \"schema\": {\n          \"default\": \"label\",\n          \"type\": \"string\"\n        }\n      },\n      \"asset_sortBy\": {\n        \"description\": \"\\n\\n**Default**: created_on\",\n        \"in\": \"query\",\n        \"name\": \"sortBy\",\n        \"schema\": {\n          \"default\": \"created_on\",\n          \"type\": \"string\"\n        }\n      },\n      \"asset_sortOrder\": {\n        \"description\": \"#### descend\\n\\nReturn assets in descending order.\\n\\n#### ascend\\n\\nReturn assets in ascending order.\\n\\n\\n\\n**Default**: descend\",\n        \"in\": \"query\",\n        \"name\": \"sortOrder\",\n        \"schema\": {\n          \"default\": \"descend\",\n          \"enum\": [\n            \"descend\",\n            \"ascend\"\n          ],\n          \"type\": \"string\"\n        }\n      },\n      \"category_dateField\": {\n        \"description\": \"Specifies the field name to be used as a date field for filtering. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateField\",\n        \"schema\": {\n          \"default\": \"created_on\",\n          \"type\": \"string\"\n        }\n      },\n      \"category_dateFrom\": {\n        \"description\": \"The start date to filtering. Specify in \\\"YYYY-MM-DD\\\" format. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateFrom\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"category_dateTo\": {\n        \"description\": \"The end date to filtering. Specify in \\\"YYYY-MM-DD\\\" format. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateTo\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"category_excludeIds\": {\n        \"description\": \"The comma separated ID list of categories to exclude from result.\",\n        \"in\": \"query\",\n        \"name\": \"excludeIds\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"category_fields\": {\n        \"description\": \"The field list to retrieve as part of the category resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.\",\n        \"in\": \"query\",\n        \"name\": \"fields\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"category_includeIds\": {\n        \"description\": \"The comma separated ID list of categories to include to result.\",\n        \"in\": \"query\",\n        \"name\": \"includeIds\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"category_limit\": {\n        \"description\": \"Maximum number of categories to retrieve.\\n\\n**Default**: 10\",\n        \"in\": \"query\",\n        \"name\": \"limit\",\n        \"schema\": {\n          \"default\": \"10\",\n          \"type\": \"integer\"\n        }\n      },\n      \"category_offset\": {\n        \"description\": \"0-indexed offset.\\n\\n**Default**: 0\",\n        \"in\": \"query\",\n        \"name\": \"offset\",\n        \"schema\": {\n          \"default\": \"0\",\n          \"type\": \"integer\"\n        }\n      },\n      \"category_search\": {\n        \"description\": \"Search query.\",\n        \"in\": \"query\",\n        \"name\": \"search\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"category_searchFields\": {\n        \"description\": \"The comma separated field name list to search.\\n\\n**Default**: label,basename\",\n        \"in\": \"query\",\n        \"name\": \"searchFields\",\n        \"schema\": {\n          \"default\": \"label,basename\",\n          \"type\": \"string\"\n        }\n      },\n      \"category_set_dateField\": {\n        \"description\": \"Specifies the field name to be used as a date field for filtering. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateField\",\n        \"schema\": {\n          \"default\": \"created_on\",\n          \"type\": \"string\"\n        }\n      },\n      \"category_set_dateFrom\": {\n        \"description\": \"The start date to filtering. Specify in \\\"YYYY-MM-DD\\\" format. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateFrom\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"category_set_dateTo\": {\n        \"description\": \"The end date to filtering. Specify in \\\"YYYY-MM-DD\\\" format. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateTo\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"category_set_excludeIds\": {\n        \"description\": \"The comma separated ID list of category_sets to exclude from result.\",\n        \"in\": \"query\",\n        \"name\": \"excludeIds\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"category_set_fields\": {\n        \"description\": \"The field list to retrieve as part of the category_set resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.\",\n        \"in\": \"query\",\n        \"name\": \"fields\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"category_set_includeIds\": {\n        \"description\": \"The comma separated ID list of category_sets to include to result.\",\n        \"in\": \"query\",\n        \"name\": \"includeIds\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"category_set_limit\": {\n        \"description\": \"Maximum number of category_sets to retrieve.\\n\\n**Default**: 25\",\n        \"in\": \"query\",\n        \"name\": \"limit\",\n        \"schema\": {\n          \"default\": \"25\",\n          \"type\": \"integer\"\n        }\n      },\n      \"category_set_offset\": {\n        \"description\": \"0-indexed offset.\\n\\n**Default**: 0\",\n        \"in\": \"query\",\n        \"name\": \"offset\",\n        \"schema\": {\n          \"default\": \"0\",\n          \"type\": \"integer\"\n        }\n      },\n      \"category_set_search\": {\n        \"description\": \"Search query.\",\n        \"in\": \"query\",\n        \"name\": \"search\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"category_set_searchFields\": {\n        \"description\": \"The comma separated field name list to search.\\n\\n**Default**: name\",\n        \"in\": \"query\",\n        \"name\": \"searchFields\",\n        \"schema\": {\n          \"default\": \"name\",\n          \"type\": \"string\"\n        }\n      },\n      \"category_set_sortBy\": {\n        \"description\": \"\\n\\n**Default**: name\",\n        \"in\": \"query\",\n        \"name\": \"sortBy\",\n        \"schema\": {\n          \"default\": \"name\",\n          \"type\": \"string\"\n        }\n      },\n      \"category_set_sortOrder\": {\n        \"description\": \"#### descend\\n\\nReturn category_sets in descending order.\\n\\n#### ascend\\n\\nReturn category_sets in ascending order.\\n\\n\\n\\n**Default**: ascend\",\n        \"in\": \"query\",\n        \"name\": \"sortOrder\",\n        \"schema\": {\n          \"default\": \"ascend\",\n          \"enum\": [\n            \"descend\",\n            \"ascend\"\n          ],\n          \"type\": \"string\"\n        }\n      },\n      \"category_sortBy\": {\n        \"description\": \"\\n\\n**Default**: user_custom\",\n        \"in\": \"query\",\n        \"name\": \"sortBy\",\n        \"schema\": {\n          \"default\": \"user_custom\",\n          \"type\": \"string\"\n        }\n      },\n      \"category_sortOrder\": {\n        \"description\": \"#### descend\\n\\nReturn categories in descending order.\\n\\n#### ascend\\n\\nReturn categories in ascending order.\\n\\n\\n\\n**Default**: descend\",\n        \"in\": \"query\",\n        \"name\": \"sortOrder\",\n        \"schema\": {\n          \"default\": \"descend\",\n          \"enum\": [\n            \"descend\",\n            \"ascend\"\n          ],\n          \"type\": \"string\"\n        }\n      },\n      \"comment_dateField\": {\n        \"description\": \"Specifies the field name to be used as a date field for filtering. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateField\",\n        \"schema\": {\n          \"default\": \"created_on\",\n          \"type\": \"string\"\n        }\n      },\n      \"comment_dateFrom\": {\n        \"description\": \"The start date to filtering. Specify in \\\"YYYY-MM-DD\\\" format. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateFrom\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"comment_dateTo\": {\n        \"description\": \"The end date to filtering. Specify in \\\"YYYY-MM-DD\\\" format. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateTo\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"comment_excludeIds\": {\n        \"description\": \"The comma separated ID list of comments to exclude from result.\",\n        \"in\": \"query\",\n        \"name\": \"excludeIds\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"comment_fields\": {\n        \"description\": \"The field list to retrieve as part of the comment resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.\",\n        \"in\": \"query\",\n        \"name\": \"fields\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"comment_includeIds\": {\n        \"description\": \"The comma separated ID list of comments to include to result.\",\n        \"in\": \"query\",\n        \"name\": \"includeIds\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"comment_limit\": {\n        \"description\": \"Maximum number of comments to retrieve.\\n\\n**Default**: 10\",\n        \"in\": \"query\",\n        \"name\": \"limit\",\n        \"schema\": {\n          \"default\": \"10\",\n          \"type\": \"integer\"\n        }\n      },\n      \"comment_offset\": {\n        \"description\": \"0-indexed offset.\\n\\n**Default**: 0\",\n        \"in\": \"query\",\n        \"name\": \"offset\",\n        \"schema\": {\n          \"default\": \"0\",\n          \"type\": \"integer\"\n        }\n      },\n      \"comment_search\": {\n        \"description\": \"Search query.\",\n        \"in\": \"query\",\n        \"name\": \"search\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"comment_searchFields\": {\n        \"description\": \"The comma separated field name list to search.\\n\\n**Default**: body\",\n        \"in\": \"query\",\n        \"name\": \"searchFields\",\n        \"schema\": {\n          \"default\": \"body\",\n          \"type\": \"string\"\n        }\n      },\n      \"comment_sortBy\": {\n        \"description\": \"\\n\\n**Default**: id\",\n        \"in\": \"query\",\n        \"name\": \"sortBy\",\n        \"schema\": {\n          \"default\": \"id\",\n          \"type\": \"string\"\n        }\n      },\n      \"comment_sortOrder\": {\n        \"description\": \"#### descend\\n\\nReturn comments in descending order.\\n\\n#### ascend\\n\\nReturn comments in ascending order.\\n\\n\\n\\n**Default**: descend\",\n        \"in\": \"query\",\n        \"name\": \"sortOrder\",\n        \"schema\": {\n          \"default\": \"descend\",\n          \"enum\": [\n            \"descend\",\n            \"ascend\"\n          ],\n          \"type\": \"string\"\n        }\n      },\n      \"content_data_dateField\": {\n        \"description\": \"Specifies the field name to be used as a date field for filtering. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateField\",\n        \"schema\": {\n          \"default\": \"created_on\",\n          \"type\": \"string\"\n        }\n      },\n      \"content_data_dateFrom\": {\n        \"description\": \"The start date to filtering. Specify in \\\"YYYY-MM-DD\\\" format. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateFrom\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"content_data_dateTo\": {\n        \"description\": \"The end date to filtering. Specify in \\\"YYYY-MM-DD\\\" format. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateTo\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"content_data_excludeIds\": {\n        \"description\": \"The comma separated ID list of content_data to exclude from result.\",\n        \"in\": \"query\",\n        \"name\": \"excludeIds\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"content_data_fields\": {\n        \"description\": \"The field list to retrieve as part of the content_data resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.\",\n        \"in\": \"query\",\n        \"name\": \"fields\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"content_data_includeIds\": {\n        \"description\": \"The comma separated ID list of content_data to include to result.\",\n        \"in\": \"query\",\n        \"name\": \"includeIds\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"content_data_limit\": {\n        \"description\": \"Maximum number of content_data to retrieve.\\n\\n**Default**: 10\",\n        \"in\": \"query\",\n        \"name\": \"limit\",\n        \"schema\": {\n          \"default\": \"10\",\n          \"type\": \"integer\"\n        }\n      },\n      \"content_data_offset\": {\n        \"description\": \"0-indexed offset.\\n\\n**Default**: 0\",\n        \"in\": \"query\",\n        \"name\": \"offset\",\n        \"schema\": {\n          \"default\": \"0\",\n          \"type\": \"integer\"\n        }\n      },\n      \"content_data_search\": {\n        \"description\": \"Search query.\",\n        \"in\": \"query\",\n        \"name\": \"search\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"content_data_searchFields\": {\n        \"description\": \"The comma separated field name list to search.\\n\\n**Default**: identifier\",\n        \"in\": \"query\",\n        \"name\": \"searchFields\",\n        \"schema\": {\n          \"default\": \"identifier\",\n          \"type\": \"string\"\n        }\n      },\n      \"content_data_sortBy\": {\n        \"description\": \"\\n\\n**Default**: modified_on\",\n        \"in\": \"query\",\n        \"name\": \"sortBy\",\n        \"schema\": {\n          \"default\": \"modified_on\",\n          \"type\": \"string\"\n        }\n      },\n      \"content_data_sortOrder\": {\n        \"description\": \"#### descend\\n\\nReturn content_data in descending order.\\n\\n#### ascend\\n\\nReturn content_data in ascending order.\\n\\n\\n\\n**Default**: descend\",\n        \"in\": \"query\",\n        \"name\": \"sortOrder\",\n        \"schema\": {\n          \"default\": \"descend\",\n          \"enum\": [\n            \"descend\",\n            \"ascend\"\n          ],\n          \"type\": \"string\"\n        }\n      },\n      \"content_field_dateField\": {\n        \"description\": \"Specifies the field name to be used as a date field for filtering. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateField\",\n        \"schema\": {\n          \"default\": \"created_on\",\n          \"type\": \"string\"\n        }\n      },\n      \"content_field_dateFrom\": {\n        \"description\": \"The start date to filtering. Specify in \\\"YYYY-MM-DD\\\" format. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateFrom\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"content_field_dateTo\": {\n        \"description\": \"The end date to filtering. Specify in \\\"YYYY-MM-DD\\\" format. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateTo\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"content_field_excludeIds\": {\n        \"description\": \"The comma separated ID list of content_fields to exclude from result.\",\n        \"in\": \"query\",\n        \"name\": \"excludeIds\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"content_field_fields\": {\n        \"description\": \"The field list to retrieve as part of the content_field resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.\",\n        \"in\": \"query\",\n        \"name\": \"fields\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"content_field_includeIds\": {\n        \"description\": \"The comma separated ID list of content_fields to include to result.\",\n        \"in\": \"query\",\n        \"name\": \"includeIds\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"content_field_limit\": {\n        \"description\": \"Maximum number of content_fields to retrieve.\\n\\n**Default**: 10\",\n        \"in\": \"query\",\n        \"name\": \"limit\",\n        \"schema\": {\n          \"default\": \"10\",\n          \"type\": \"integer\"\n        }\n      },\n      \"content_field_offset\": {\n        \"description\": \"0-indexed offset.\\n\\n**Default**: 0\",\n        \"in\": \"query\",\n        \"name\": \"offset\",\n        \"schema\": {\n          \"default\": \"0\",\n          \"type\": \"integer\"\n        }\n      },\n      \"content_field_search\": {\n        \"description\": \"Search query.\",\n        \"in\": \"query\",\n        \"name\": \"search\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"content_field_searchFields\": {\n        \"description\": \"The comma separated field name list to search.\\n\\n**Default**: label,description\",\n        \"in\": \"query\",\n        \"name\": \"searchFields\",\n        \"schema\": {\n          \"default\": \"label,description\",\n          \"type\": \"string\"\n        }\n      },\n      \"content_field_sortBy\": {\n        \"description\": \"\\n\\n**Default**: user_custom\",\n        \"in\": \"query\",\n        \"name\": \"sortBy\",\n        \"schema\": {\n          \"default\": \"user_custom\",\n          \"type\": \"string\"\n        }\n      },\n      \"content_field_sortOrder\": {\n        \"description\": \"#### descend\\n\\nReturn content_fields in descending order.\\n\\n#### ascend\\n\\nReturn content_fields in ascending order.\\n\\n\\n\\n**Default**: ascend\",\n        \"in\": \"query\",\n        \"name\": \"sortOrder\",\n        \"schema\": {\n          \"default\": \"ascend\",\n          \"enum\": [\n            \"descend\",\n            \"ascend\"\n          ],\n          \"type\": \"string\"\n        }\n      },\n      \"content_type_dateField\": {\n        \"description\": \"Specifies the field name to be used as a date field for filtering. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateField\",\n        \"schema\": {\n          \"default\": \"created_on\",\n          \"type\": \"string\"\n        }\n      },\n      \"content_type_dateFrom\": {\n        \"description\": \"The start date to filtering. Specify in \\\"YYYY-MM-DD\\\" format. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateFrom\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"content_type_dateTo\": {\n        \"description\": \"The end date to filtering. Specify in \\\"YYYY-MM-DD\\\" format. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateTo\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"content_type_excludeIds\": {\n        \"description\": \"The comma separated ID list of content_types to exclude from result.\",\n        \"in\": \"query\",\n        \"name\": \"excludeIds\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"content_type_fields\": {\n        \"description\": \"The field list to retrieve as part of the content_type resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.\",\n        \"in\": \"query\",\n        \"name\": \"fields\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"content_type_includeIds\": {\n        \"description\": \"The comma separated ID list of content_types to include to result.\",\n        \"in\": \"query\",\n        \"name\": \"includeIds\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"content_type_limit\": {\n        \"description\": \"Maximum number of content_types to retrieve.\\n\\n**Default**: 10\",\n        \"in\": \"query\",\n        \"name\": \"limit\",\n        \"schema\": {\n          \"default\": \"10\",\n          \"type\": \"integer\"\n        }\n      },\n      \"content_type_offset\": {\n        \"description\": \"0-indexed offset.\\n\\n**Default**: 0\",\n        \"in\": \"query\",\n        \"name\": \"offset\",\n        \"schema\": {\n          \"default\": \"0\",\n          \"type\": \"integer\"\n        }\n      },\n      \"content_type_search\": {\n        \"description\": \"Search query.\",\n        \"in\": \"query\",\n        \"name\": \"search\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"content_type_searchFields\": {\n        \"description\": \"The comma separated field name list to search.\\n\\n**Default**: name,description\",\n        \"in\": \"query\",\n        \"name\": \"searchFields\",\n        \"schema\": {\n          \"default\": \"name,description\",\n          \"type\": \"string\"\n        }\n      },\n      \"content_type_sortBy\": {\n        \"description\": \"\\n\\n**Default**: id\",\n        \"in\": \"query\",\n        \"name\": \"sortBy\",\n        \"schema\": {\n          \"default\": \"id\",\n          \"type\": \"string\"\n        }\n      },\n      \"content_type_sortOrder\": {\n        \"description\": \"#### descend\\n\\nReturn content_types in descending order.\\n\\n#### ascend\\n\\nReturn content_types in ascending order.\\n\\n\\n\\n**Default**: ascend\",\n        \"in\": \"query\",\n        \"name\": \"sortOrder\",\n        \"schema\": {\n          \"default\": \"ascend\",\n          \"enum\": [\n            \"descend\",\n            \"ascend\"\n          ],\n          \"type\": \"string\"\n        }\n      },\n      \"entry_dateField\": {\n        \"description\": \"Specifies the field name to be used as a date field for filtering. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateField\",\n        \"schema\": {\n          \"default\": \"created_on\",\n          \"type\": \"string\"\n        }\n      },\n      \"entry_dateFrom\": {\n        \"description\": \"The start date to filtering. Specify in \\\"YYYY-MM-DD\\\" format. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateFrom\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"entry_dateTo\": {\n        \"description\": \"The end date to filtering. Specify in \\\"YYYY-MM-DD\\\" format. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateTo\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"entry_excludeIds\": {\n        \"description\": \"The comma separated ID list of entries to exclude from result.\",\n        \"in\": \"query\",\n        \"name\": \"excludeIds\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"entry_fields\": {\n        \"description\": \"The field list to retrieve as part of the entry resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.\",\n        \"in\": \"query\",\n        \"name\": \"fields\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"entry_includeIds\": {\n        \"description\": \"The comma separated ID list of entries to include to result.\",\n        \"in\": \"query\",\n        \"name\": \"includeIds\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"entry_limit\": {\n        \"description\": \"Maximum number of entries to retrieve.\\n\\n**Default**: 10\",\n        \"in\": \"query\",\n        \"name\": \"limit\",\n        \"schema\": {\n          \"default\": \"10\",\n          \"type\": \"integer\"\n        }\n      },\n      \"entry_maxComments\": {\n        \"description\": \"This is an optional parameter. Maximum number of comments to retrieve as part of the entries resource. If this parameter is not supplied, no comments will be returned.\",\n        \"in\": \"query\",\n        \"name\": \"maxComments\",\n        \"schema\": {\n          \"type\": \"integer\"\n        }\n      },\n      \"entry_maxTrackbacks\": {\n        \"description\": \"This is an optional parameter. Maximum number of received trackbacks to retrieve as part of the entries resource. If this parameter is not supplied, no trackbacks will be returned.\",\n        \"in\": \"query\",\n        \"name\": \"maxTrackbacks\",\n        \"schema\": {\n          \"type\": \"integer\"\n        }\n      },\n      \"entry_no_text_filter\": {\n        \"description\": \"If you want to fetch the raw text, set to '1'. New in v2\\n\",\n        \"in\": \"query\",\n        \"name\": \"noTextFilter\",\n        \"schema\": {\n          \"enum\": [\n            0,\n            1\n          ],\n          \"type\": \"integer\"\n        }\n      },\n      \"entry_offset\": {\n        \"description\": \"0-indexed offset.\\n\\n**Default**: 0\",\n        \"in\": \"query\",\n        \"name\": \"offset\",\n        \"schema\": {\n          \"default\": \"0\",\n          \"type\": \"integer\"\n        }\n      },\n      \"entry_search\": {\n        \"description\": \"Search query.\",\n        \"in\": \"query\",\n        \"name\": \"search\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"entry_searchFields\": {\n        \"description\": \"The comma separated field name list to search.\\n\\n**Default**: title,body,more,keywords,excerpt,basename\",\n        \"in\": \"query\",\n        \"name\": \"searchFields\",\n        \"schema\": {\n          \"default\": \"title,body,more,keywords,excerpt,basename\",\n          \"type\": \"string\"\n        }\n      },\n      \"entry_sortBy\": {\n        \"description\": \"The field name for sort. You can specify one of following values\\n- authored_on\\n- title\\n- created_on\\n- modified_on\\n\\n\\n**Default**: authored_on\",\n        \"in\": \"query\",\n        \"name\": \"sortBy\",\n        \"schema\": {\n          \"default\": \"authored_on\",\n          \"enum\": [\n            \"authored_on\",\n            \"title\",\n            \"created_on\",\n            \"modified_on\"\n          ],\n          \"type\": \"string\"\n        }\n      },\n      \"entry_sortOrder\": {\n        \"description\": \"#### descend\\n\\nReturn entries in descending order.\\n\\n#### ascend\\n\\nReturn entries in ascending order.\\n\\n\\n\\n**Default**: descend\",\n        \"in\": \"query\",\n        \"name\": \"sortOrder\",\n        \"schema\": {\n          \"default\": \"descend\",\n          \"enum\": [\n            \"descend\",\n            \"ascend\"\n          ],\n          \"type\": \"string\"\n        }\n      },\n      \"entry_status\": {\n        \"description\": \"Filter by container entry's status.\\n\\n#### Draft\\n\\nentry_status is 1.\\n\\n#### Publish\\n\\nentry_status is 2.\\n\\n#### Review\\n\\nentry_status is 3.\\n\\n#### Future\\n\\nentry_status is 4.\\n\\n#### Spam\\n\\nentry_status is 5.\\n\\n#### Unpublish\\n\\nentry_status is 6.\\n\",\n        \"in\": \"query\",\n        \"name\": \"status\",\n        \"schema\": {\n          \"enum\": [\n            \"Draft\",\n            \"Publish\",\n            \"Review\",\n            \"Future\",\n            \"Spam\",\n            \"Unpublish\"\n          ],\n          \"type\": \"string\"\n        }\n      },\n      \"field_dateField\": {\n        \"description\": \"Specifies the field name to be used as a date field for filtering. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateField\",\n        \"schema\": {\n          \"default\": \"created_on\",\n          \"type\": \"string\"\n        }\n      },\n      \"field_dateFrom\": {\n        \"description\": \"The start date to filtering. Specify in \\\"YYYY-MM-DD\\\" format. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateFrom\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"field_dateTo\": {\n        \"description\": \"The end date to filtering. Specify in \\\"YYYY-MM-DD\\\" format. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateTo\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"field_excludeIds\": {\n        \"description\": \"The comma separated ID list of fields to exclude from result.\",\n        \"in\": \"query\",\n        \"name\": \"excludeIds\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"field_fields\": {\n        \"description\": \"The field list to retrieve as part of the field resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.\",\n        \"in\": \"query\",\n        \"name\": \"fields\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"field_includeIds\": {\n        \"description\": \"The comma separated ID list of fields to include to result.\",\n        \"in\": \"query\",\n        \"name\": \"includeIds\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"field_limit\": {\n        \"description\": \"Maximum number of fields to retrieve.\\n\\n**Default**: 25\",\n        \"in\": \"query\",\n        \"name\": \"limit\",\n        \"schema\": {\n          \"default\": \"25\",\n          \"type\": \"integer\"\n        }\n      },\n      \"field_offset\": {\n        \"description\": \"0-indexed offset.\\n\\n**Default**: 0\",\n        \"in\": \"query\",\n        \"name\": \"offset\",\n        \"schema\": {\n          \"default\": \"0\",\n          \"type\": \"integer\"\n        }\n      },\n      \"field_search\": {\n        \"description\": \"Search query.\",\n        \"in\": \"query\",\n        \"name\": \"search\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"field_searchFields\": {\n        \"description\": \"The comma separated field name list to search.\\n\\n**Default**: name,basename,description,tag\",\n        \"in\": \"query\",\n        \"name\": \"searchFields\",\n        \"schema\": {\n          \"default\": \"name,basename,description,tag\",\n          \"type\": \"string\"\n        }\n      },\n      \"field_sortBy\": {\n        \"description\": \"\\n\\n**Default**: name\",\n        \"in\": \"query\",\n        \"name\": \"sortBy\",\n        \"schema\": {\n          \"default\": \"name\",\n          \"type\": \"string\"\n        }\n      },\n      \"field_sortOrder\": {\n        \"description\": \"#### descend\\n\\nReturn fields in descending order.\\n\\n#### ascend\\n\\nReturn fields in ascending order.\\n\\n\\n\\n**Default**: ascend\",\n        \"in\": \"query\",\n        \"name\": \"sortOrder\",\n        \"schema\": {\n          \"default\": \"ascend\",\n          \"enum\": [\n            \"descend\",\n            \"ascend\"\n          ],\n          \"type\": \"string\"\n        }\n      },\n      \"folder_dateField\": {\n        \"description\": \"Specifies the field name to be used as a date field for filtering. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateField\",\n        \"schema\": {\n          \"default\": \"created_on\",\n          \"type\": \"string\"\n        }\n      },\n      \"folder_dateFrom\": {\n        \"description\": \"The start date to filtering. Specify in \\\"YYYY-MM-DD\\\" format. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateFrom\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"folder_dateTo\": {\n        \"description\": \"The end date to filtering. Specify in \\\"YYYY-MM-DD\\\" format. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateTo\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"folder_excludeIds\": {\n        \"description\": \"The comma separated ID list of folders to exclude from result.\",\n        \"in\": \"query\",\n        \"name\": \"excludeIds\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"folder_fields\": {\n        \"description\": \"The field list to retrieve as part of the folder resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.\",\n        \"in\": \"query\",\n        \"name\": \"fields\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"folder_includeIds\": {\n        \"description\": \"The comma separated ID list of folders to include to result.\",\n        \"in\": \"query\",\n        \"name\": \"includeIds\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"folder_limit\": {\n        \"description\": \"Maximum number of folders to retrieve.\\n\\n**Default**: 10\",\n        \"in\": \"query\",\n        \"name\": \"limit\",\n        \"schema\": {\n          \"default\": \"10\",\n          \"type\": \"integer\"\n        }\n      },\n      \"folder_offset\": {\n        \"description\": \"0-indexed offset.\\n\\n**Default**: 0\",\n        \"in\": \"query\",\n        \"name\": \"offset\",\n        \"schema\": {\n          \"default\": \"0\",\n          \"type\": \"integer\"\n        }\n      },\n      \"folder_search\": {\n        \"description\": \"Search query.\",\n        \"in\": \"query\",\n        \"name\": \"search\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"folder_searchFields\": {\n        \"description\": \"The comma separated field name list to search.\\n\\n**Default**: label,basename\",\n        \"in\": \"query\",\n        \"name\": \"searchFields\",\n        \"schema\": {\n          \"default\": \"label,basename\",\n          \"type\": \"string\"\n        }\n      },\n      \"folder_sortBy\": {\n        \"description\": \"\\n\\n**Default**: user_custom\",\n        \"in\": \"query\",\n        \"name\": \"sortBy\",\n        \"schema\": {\n          \"default\": \"user_custom\",\n          \"type\": \"string\"\n        }\n      },\n      \"folder_sortOrder\": {\n        \"description\": \"#### descend\\n\\nReturn folders in descending order.\\n\\n#### ascend\\n\\nReturn folders in ascending order.\\n\\n\\n\\n**Default**: ascend\",\n        \"in\": \"query\",\n        \"name\": \"sortOrder\",\n        \"schema\": {\n          \"default\": \"ascend\",\n          \"enum\": [\n            \"descend\",\n            \"ascend\"\n          ],\n          \"type\": \"string\"\n        }\n      },\n      \"formatted_text_dateField\": {\n        \"description\": \"Specifies the field name to be used as a date field for filtering. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateField\",\n        \"schema\": {\n          \"default\": \"created_on\",\n          \"type\": \"string\"\n        }\n      },\n      \"formatted_text_dateFrom\": {\n        \"description\": \"The start date to filtering. Specify in \\\"YYYY-MM-DD\\\" format. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateFrom\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"formatted_text_dateTo\": {\n        \"description\": \"The end date to filtering. Specify in \\\"YYYY-MM-DD\\\" format. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateTo\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"formatted_text_excludeIds\": {\n        \"description\": \"The comma separated ID list of formatted_texts to exclude from result.\",\n        \"in\": \"query\",\n        \"name\": \"excludeIds\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"formatted_text_fields\": {\n        \"description\": \"The field list to retrieve as part of the formatted_text resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.\",\n        \"in\": \"query\",\n        \"name\": \"fields\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"formatted_text_includeIds\": {\n        \"description\": \"The comma separated ID list of formatted_texts to include to result.\",\n        \"in\": \"query\",\n        \"name\": \"includeIds\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"formatted_text_limit\": {\n        \"description\": \"Maximum number of formatted_texts to retrieve.\\n\\n**Default**: 10\",\n        \"in\": \"query\",\n        \"name\": \"limit\",\n        \"schema\": {\n          \"default\": \"10\",\n          \"type\": \"integer\"\n        }\n      },\n      \"formatted_text_offset\": {\n        \"description\": \"0-indexed offset.\\n\\n**Default**: 0\",\n        \"in\": \"query\",\n        \"name\": \"offset\",\n        \"schema\": {\n          \"default\": \"0\",\n          \"type\": \"integer\"\n        }\n      },\n      \"formatted_text_search\": {\n        \"description\": \"Search query.\",\n        \"in\": \"query\",\n        \"name\": \"search\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"formatted_text_searchFields\": {\n        \"description\": \"The comma separated field name list to search.\\n\\n**Default**: label,text,description\",\n        \"in\": \"query\",\n        \"name\": \"searchFields\",\n        \"schema\": {\n          \"default\": \"label,text,description\",\n          \"type\": \"string\"\n        }\n      },\n      \"formatted_text_sortBy\": {\n        \"description\": \"\\n\\n**Default**: created_on\",\n        \"in\": \"query\",\n        \"name\": \"sortBy\",\n        \"schema\": {\n          \"default\": \"created_on\",\n          \"type\": \"string\"\n        }\n      },\n      \"formatted_text_sortOrder\": {\n        \"description\": \"#### descend\\n\\nReturn formatted_texts in descending order.\\n\\n#### ascend\\n\\nReturn formatted_texts in ascending order.\\n\\n\\n\\n**Default**: descend\",\n        \"in\": \"query\",\n        \"name\": \"sortOrder\",\n        \"schema\": {\n          \"default\": \"descend\",\n          \"enum\": [\n            \"descend\",\n            \"ascend\"\n          ],\n          \"type\": \"string\"\n        }\n      },\n      \"group_dateField\": {\n        \"description\": \"Specifies the field name to be used as a date field for filtering. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateField\",\n        \"schema\": {\n          \"default\": \"created_on\",\n          \"type\": \"string\"\n        }\n      },\n      \"group_dateFrom\": {\n        \"description\": \"The start date to filtering. Specify in \\\"YYYY-MM-DD\\\" format. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateFrom\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"group_dateTo\": {\n        \"description\": \"The end date to filtering. Specify in \\\"YYYY-MM-DD\\\" format. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateTo\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"group_excludeIds\": {\n        \"description\": \"The comma separated ID list of groups to exclude from result.\",\n        \"in\": \"query\",\n        \"name\": \"excludeIds\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"group_fields\": {\n        \"description\": \"The field list to retrieve as part of the group resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.\",\n        \"in\": \"query\",\n        \"name\": \"fields\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"group_includeIds\": {\n        \"description\": \"The comma separated ID list of groups to include to result.\",\n        \"in\": \"query\",\n        \"name\": \"includeIds\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"group_limit\": {\n        \"description\": \"Maximum number of groups to retrieve.\\n\\n**Default**: 25\",\n        \"in\": \"query\",\n        \"name\": \"limit\",\n        \"schema\": {\n          \"default\": \"25\",\n          \"type\": \"integer\"\n        }\n      },\n      \"group_offset\": {\n        \"description\": \"0-indexed offset.\\n\\n**Default**: 0\",\n        \"in\": \"query\",\n        \"name\": \"offset\",\n        \"schema\": {\n          \"default\": \"0\",\n          \"type\": \"integer\"\n        }\n      },\n      \"group_search\": {\n        \"description\": \"Search query.\",\n        \"in\": \"query\",\n        \"name\": \"search\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"group_searchFields\": {\n        \"description\": \"The comma separated field name list to search.\\n\\n**Default**: name,displayName,description\",\n        \"in\": \"query\",\n        \"name\": \"searchFields\",\n        \"schema\": {\n          \"default\": \"name,displayName,description\",\n          \"type\": \"string\"\n        }\n      },\n      \"group_sortBy\": {\n        \"description\": \"\\n\\n**Default**: name\",\n        \"in\": \"query\",\n        \"name\": \"sortBy\",\n        \"schema\": {\n          \"default\": \"name\",\n          \"type\": \"string\"\n        }\n      },\n      \"group_sortOrder\": {\n        \"description\": \"#### descend\\n\\nReturn groups in descending order.\\n\\n#### ascend\\n\\nReturn groups in ascending order.\\n\\n\\n\\n**Default**: ascend\",\n        \"in\": \"query\",\n        \"name\": \"sortOrder\",\n        \"schema\": {\n          \"default\": \"ascend\",\n          \"enum\": [\n            \"descend\",\n            \"ascend\"\n          ],\n          \"type\": \"string\"\n        }\n      },\n      \"log_dateField\": {\n        \"description\": \"Specifies the field name to be used as a date field for filtering. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateField\",\n        \"schema\": {\n          \"default\": \"created_on\",\n          \"type\": \"string\"\n        }\n      },\n      \"log_dateFrom\": {\n        \"description\": \"The start date to filtering. Specify in \\\"YYYY-MM-DD\\\" format. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateFrom\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"log_dateTo\": {\n        \"description\": \"The end date to filtering. Specify in \\\"YYYY-MM-DD\\\" format. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateTo\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"log_excludeIds\": {\n        \"description\": \"The comma separated ID list of logs to exclude from result.\",\n        \"in\": \"query\",\n        \"name\": \"excludeIds\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"log_fields\": {\n        \"description\": \"The field list to retrieve as part of the log resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.\",\n        \"in\": \"query\",\n        \"name\": \"fields\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"log_includeIds\": {\n        \"description\": \"The comma separated ID list of logs to include to result.\",\n        \"in\": \"query\",\n        \"name\": \"includeIds\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"log_limit\": {\n        \"description\": \"Maximum number of logs to retrieve.\\n\\n**Default**: 25\",\n        \"in\": \"query\",\n        \"name\": \"limit\",\n        \"schema\": {\n          \"default\": \"25\",\n          \"type\": \"integer\"\n        }\n      },\n      \"log_offset\": {\n        \"description\": \"0-indexed offset.\\n\\n**Default**: 0\",\n        \"in\": \"query\",\n        \"name\": \"offset\",\n        \"schema\": {\n          \"default\": \"0\",\n          \"type\": \"integer\"\n        }\n      },\n      \"log_search\": {\n        \"description\": \"Search query.\",\n        \"in\": \"query\",\n        \"name\": \"search\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"log_searchFields\": {\n        \"description\": \"The comma separated field name list to search.\\n\\n**Default**: message,ip\",\n        \"in\": \"query\",\n        \"name\": \"searchFields\",\n        \"schema\": {\n          \"default\": \"message,ip\",\n          \"type\": \"string\"\n        }\n      },\n      \"log_sortBy\": {\n        \"description\": \"\\n\\n**Default**: created_on\",\n        \"in\": \"query\",\n        \"name\": \"sortBy\",\n        \"schema\": {\n          \"default\": \"created_on\",\n          \"type\": \"string\"\n        }\n      },\n      \"log_sortOrder\": {\n        \"description\": \"#### descend\\n\\nReturn logs in descending order.\\n\\n#### ascend\\n\\nReturn logs in ascending order.\\n\\n\\n\\n**Default**: descend\",\n        \"in\": \"query\",\n        \"name\": \"sortOrder\",\n        \"schema\": {\n          \"default\": \"descend\",\n          \"enum\": [\n            \"descend\",\n            \"ascend\"\n          ],\n          \"type\": \"string\"\n        }\n      },\n      \"page_dateField\": {\n        \"description\": \"Specifies the field name to be used as a date field for filtering. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateField\",\n        \"schema\": {\n          \"default\": \"created_on\",\n          \"type\": \"string\"\n        }\n      },\n      \"page_dateFrom\": {\n        \"description\": \"The start date to filtering. Specify in \\\"YYYY-MM-DD\\\" format. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateFrom\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"page_dateTo\": {\n        \"description\": \"The end date to filtering. Specify in \\\"YYYY-MM-DD\\\" format. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateTo\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"page_excludeIds\": {\n        \"description\": \"The comma separated ID list of pages to exclude from result.\",\n        \"in\": \"query\",\n        \"name\": \"excludeIds\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"page_fields\": {\n        \"description\": \"The field list to retrieve as part of the page resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.\",\n        \"in\": \"query\",\n        \"name\": \"fields\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"page_includeIds\": {\n        \"description\": \"The comma separated ID list of pages to include to result.\",\n        \"in\": \"query\",\n        \"name\": \"includeIds\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"page_limit\": {\n        \"description\": \"Maximum number of pages to retrieve.\\n\\n**Default**: 10\",\n        \"in\": \"query\",\n        \"name\": \"limit\",\n        \"schema\": {\n          \"default\": \"10\",\n          \"type\": \"integer\"\n        }\n      },\n      \"page_maxComments\": {\n        \"description\": \"This is an optional parameter. Maximum number of comments to retrieve as part of the pages resource. If this parameter is not supplied, no comments will be returned.\",\n        \"in\": \"query\",\n        \"name\": \"maxComments\",\n        \"schema\": {\n          \"type\": \"integer\"\n        }\n      },\n      \"page_maxTrackbacks\": {\n        \"description\": \"This is an optional parameter. Maximum number of received trackbacks to retrieve as part of the pages resource. If this parameter is not supplied, no trackbacks will be returned.\",\n        \"in\": \"query\",\n        \"name\": \"maxTrackbacks\",\n        \"schema\": {\n          \"type\": \"integer\"\n        }\n      },\n      \"page_no_text_filter\": {\n        \"description\": \"If you want to fetch the raw text, set to '1'. New in v2\\n\",\n        \"in\": \"query\",\n        \"name\": \"noTextFilter\",\n        \"schema\": {\n          \"enum\": [\n            0,\n            1\n          ],\n          \"type\": \"integer\"\n        }\n      },\n      \"page_offset\": {\n        \"description\": \"0-indexed offset.\\n\\n**Default**: 0\",\n        \"in\": \"query\",\n        \"name\": \"offset\",\n        \"schema\": {\n          \"default\": \"0\",\n          \"type\": \"integer\"\n        }\n      },\n      \"page_search\": {\n        \"description\": \"Search query.\",\n        \"in\": \"query\",\n        \"name\": \"search\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"page_searchFields\": {\n        \"description\": \"The comma separated field name list to search.\\n\\n**Default**: title,body,more,keywords,excerpt,basename\",\n        \"in\": \"query\",\n        \"name\": \"searchFields\",\n        \"schema\": {\n          \"default\": \"title,body,more,keywords,excerpt,basename\",\n          \"type\": \"string\"\n        }\n      },\n      \"page_sortBy\": {\n        \"description\": \"The field name for sort. You can specify one of following values\\n- authored_on\\n- title\\n- created_on\\n- modified_on\\n\\n\\n**Default**: modified_on\",\n        \"in\": \"query\",\n        \"name\": \"sortBy\",\n        \"schema\": {\n          \"default\": \"modified_on\",\n          \"enum\": [\n            \"authored_on\",\n            \"title\",\n            \"created_on\",\n            \"modified_on\"\n          ],\n          \"type\": \"string\"\n        }\n      },\n      \"page_sortOrder\": {\n        \"description\": \"#### descend\\n\\nReturn pages in descending order.\\n\\n#### ascend\\n\\nReturn pages in ascending order.\\n\\n\\n\\n**Default**: descend\",\n        \"in\": \"query\",\n        \"name\": \"sortOrder\",\n        \"schema\": {\n          \"default\": \"descend\",\n          \"enum\": [\n            \"descend\",\n            \"ascend\"\n          ],\n          \"type\": \"string\"\n        }\n      },\n      \"page_status\": {\n        \"description\": \"Filter by container page's status.\\n\\n#### Draft\\n\\nentry_status is 1.\\n\\n#### Publish\\n\\nentry_status is 2.\\n\\n#### Review\\n\\nentry_status is 3.\\n\\n#### Future\\n\\nentry_status is 4.\\n\\n#### Spam\\n\\nentry_status is 5.\\n\\n#### Unpublish\\n\\nentry_status is 6.\\n\",\n        \"in\": \"query\",\n        \"name\": \"status\",\n        \"schema\": {\n          \"enum\": [\n            \"Draft\",\n            \"Publish\",\n            \"Review\",\n            \"Future\",\n            \"Spam\",\n            \"Unpublish\"\n          ],\n          \"type\": \"string\"\n        }\n      },\n      \"permission_blogIds\": {\n        \"description\": \"The comma-separated blog id list that to be included in the result.\",\n        \"in\": \"query\",\n        \"name\": \"blogIds\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"permission_dateField\": {\n        \"description\": \"Specifies the field name to be used as a date field for filtering. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateField\",\n        \"schema\": {\n          \"default\": \"created_on\",\n          \"type\": \"string\"\n        }\n      },\n      \"permission_dateFrom\": {\n        \"description\": \"The start date to filtering. Specify in \\\"YYYY-MM-DD\\\" format. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateFrom\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"permission_dateTo\": {\n        \"description\": \"The end date to filtering. Specify in \\\"YYYY-MM-DD\\\" format. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateTo\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"permission_excludeIds\": {\n        \"description\": \"The comma separated ID list of permissions to exclude from result.\",\n        \"in\": \"query\",\n        \"name\": \"excludeIds\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"permission_fields\": {\n        \"description\": \"The field list to retrieve as part of the permission resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.\",\n        \"in\": \"query\",\n        \"name\": \"fields\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"permission_includeIds\": {\n        \"description\": \"The comma separated ID list of permissions to include to result.\",\n        \"in\": \"query\",\n        \"name\": \"includeIds\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"permission_limit\": {\n        \"description\": \"Maximum number of permissions to retrieve.\\n\\n**Default**: 25\",\n        \"in\": \"query\",\n        \"name\": \"limit\",\n        \"schema\": {\n          \"default\": \"25\",\n          \"type\": \"integer\"\n        }\n      },\n      \"permission_offset\": {\n        \"description\": \"0-indexed offset.\\n\\n**Default**: 0\",\n        \"in\": \"query\",\n        \"name\": \"offset\",\n        \"schema\": {\n          \"default\": \"0\",\n          \"type\": \"integer\"\n        }\n      },\n      \"permission_search\": {\n        \"description\": \"Search query.\",\n        \"in\": \"query\",\n        \"name\": \"search\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"permission_searchFields\": {\n        \"description\": \"The comma separated field name list to search.\",\n        \"in\": \"query\",\n        \"name\": \"searchFields\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"permission_sortBy\": {\n        \"description\": \"The field name for sort. You can specify one of following values\\n\\n- id\\n- blog_id\\n- author_id\\n- created_by\\n- created_on\\n\\n\\n**Default**: blog_id\",\n        \"in\": \"query\",\n        \"name\": \"sortBy\",\n        \"schema\": {\n          \"default\": \"blog_id\",\n          \"enum\": [\n            \"id\",\n            \"blog_id\",\n            \"author_id\",\n            \"created_by\",\n            \"created_on\"\n          ],\n          \"type\": \"string\"\n        }\n      },\n      \"permission_sortOrder\": {\n        \"description\": \"#### descend\\n\\nReturn permissions in descending order.\\n\\n#### ascend\\n\\nReturn permissions in ascending order.\\n\\n\\n\\n**Default**: ascend\",\n        \"in\": \"query\",\n        \"name\": \"sortOrder\",\n        \"schema\": {\n          \"default\": \"ascend\",\n          \"enum\": [\n            \"descend\",\n            \"ascend\"\n          ],\n          \"type\": \"string\"\n        }\n      },\n      \"role_dateField\": {\n        \"description\": \"Specifies the field name to be used as a date field for filtering. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateField\",\n        \"schema\": {\n          \"default\": \"created_on\",\n          \"type\": \"string\"\n        }\n      },\n      \"role_dateFrom\": {\n        \"description\": \"The start date to filtering. Specify in \\\"YYYY-MM-DD\\\" format. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateFrom\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"role_dateTo\": {\n        \"description\": \"The end date to filtering. Specify in \\\"YYYY-MM-DD\\\" format. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateTo\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"role_excludeIds\": {\n        \"description\": \"The comma separated ID list of roles to exclude from result.\",\n        \"in\": \"query\",\n        \"name\": \"excludeIds\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"role_fields\": {\n        \"description\": \"The field list to retrieve as part of the role resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.\",\n        \"in\": \"query\",\n        \"name\": \"fields\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"role_includeIds\": {\n        \"description\": \"The comma separated ID list of roles to include to result.\",\n        \"in\": \"query\",\n        \"name\": \"includeIds\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"role_limit\": {\n        \"description\": \"Maximum number of roles to retrieve.\\n\\n**Default**: 25\",\n        \"in\": \"query\",\n        \"name\": \"limit\",\n        \"schema\": {\n          \"default\": \"25\",\n          \"type\": \"integer\"\n        }\n      },\n      \"role_offset\": {\n        \"description\": \"0-indexed offset.\\n\\n**Default**: 0\",\n        \"in\": \"query\",\n        \"name\": \"offset\",\n        \"schema\": {\n          \"default\": \"0\",\n          \"type\": \"integer\"\n        }\n      },\n      \"role_search\": {\n        \"description\": \"Search query.\",\n        \"in\": \"query\",\n        \"name\": \"search\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"role_searchFields\": {\n        \"description\": \"The comma separated field name list to search.\\n\\n**Default**: name,description\",\n        \"in\": \"query\",\n        \"name\": \"searchFields\",\n        \"schema\": {\n          \"default\": \"name,description\",\n          \"type\": \"string\"\n        }\n      },\n      \"role_sortBy\": {\n        \"description\": \"The field name for sort. You can specify one of following values\\n\\n- created_by\\n- modified_by\\n- created_on\\n- modified_on\\n\\n\\n**Default**: name\",\n        \"in\": \"query\",\n        \"name\": \"sortBy\",\n        \"schema\": {\n          \"default\": \"name\",\n          \"enum\": [\n            \"name\",\n            \"created_by\",\n            \"modified_by\",\n            \"created_on\",\n            \"modified_on\"\n          ],\n          \"type\": \"string\"\n        }\n      },\n      \"role_sortOrder\": {\n        \"description\": \"#### descend\\n\\nReturn roles in descending order.\\n\\n#### ascend\\n\\nReturn roles in ascending order.\\n\\n\\n\\n**Default**: ascend\",\n        \"in\": \"query\",\n        \"name\": \"sortOrder\",\n        \"schema\": {\n          \"default\": \"ascend\",\n          \"enum\": [\n            \"descend\",\n            \"ascend\"\n          ],\n          \"type\": \"string\"\n        }\n      },\n      \"site_dateField\": {\n        \"description\": \"Specifies the field name to be used as a date field for filtering. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateField\",\n        \"schema\": {\n          \"default\": \"created_on\",\n          \"type\": \"string\"\n        }\n      },\n      \"site_dateFrom\": {\n        \"description\": \"The start date to filtering. Specify in \\\"YYYY-MM-DD\\\" format. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateFrom\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"site_dateTo\": {\n        \"description\": \"The end date to filtering. Specify in \\\"YYYY-MM-DD\\\" format. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateTo\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"site_excludeIds\": {\n        \"description\": \"The comma separated ID list of sites to exclude from result.\",\n        \"in\": \"query\",\n        \"name\": \"excludeIds\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"site_fields\": {\n        \"description\": \"The field list to retrieve as part of the site resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.\",\n        \"in\": \"query\",\n        \"name\": \"fields\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"site_includeIds\": {\n        \"description\": \"The comma separated ID list of sites to include to result.\",\n        \"in\": \"query\",\n        \"name\": \"includeIds\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"site_limit\": {\n        \"description\": \"Maximum number of sites to retrieve.\\n\\n**Default**: 25\",\n        \"in\": \"query\",\n        \"name\": \"limit\",\n        \"schema\": {\n          \"default\": \"25\",\n          \"type\": \"integer\"\n        }\n      },\n      \"site_offset\": {\n        \"description\": \"0-indexed offset.\\n\\n**Default**: 0\",\n        \"in\": \"query\",\n        \"name\": \"offset\",\n        \"schema\": {\n          \"default\": \"0\",\n          \"type\": \"integer\"\n        }\n      },\n      \"site_search\": {\n        \"description\": \"Search query.\",\n        \"in\": \"query\",\n        \"name\": \"search\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"site_searchFields\": {\n        \"description\": \"The comma separated field name list to search.\\n\\n**Default**: name\",\n        \"in\": \"query\",\n        \"name\": \"searchFields\",\n        \"schema\": {\n          \"default\": \"name\",\n          \"type\": \"string\"\n        }\n      },\n      \"site_sortBy\": {\n        \"description\": \"Only 'name' is available\\n\\n\\n**Default**: name\",\n        \"in\": \"query\",\n        \"name\": \"sortBy\",\n        \"schema\": {\n          \"default\": \"name\",\n          \"enum\": [\n            \"name\"\n          ],\n          \"type\": \"string\"\n        }\n      },\n      \"site_sortOrder\": {\n        \"description\": \"#### descend\\n\\nReturn sites in descending order.\\n\\n#### ascend\\n\\nReturn sites in ascending order.\\n\\n\\n\\n**Default**: ascend\",\n        \"in\": \"query\",\n        \"name\": \"sortOrder\",\n        \"schema\": {\n          \"default\": \"ascend\",\n          \"enum\": [\n            \"descend\",\n            \"ascend\"\n          ],\n          \"type\": \"string\"\n        }\n      },\n      \"tag_dateField\": {\n        \"description\": \"Specifies the field name to be used as a date field for filtering. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateField\",\n        \"schema\": {\n          \"default\": \"created_on\",\n          \"type\": \"string\"\n        }\n      },\n      \"tag_dateFrom\": {\n        \"description\": \"The start date to filtering. Specify in \\\"YYYY-MM-DD\\\" format. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateFrom\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"tag_dateTo\": {\n        \"description\": \"The end date to filtering. Specify in \\\"YYYY-MM-DD\\\" format. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateTo\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"tag_excludeIds\": {\n        \"description\": \"The comma separated ID list of tags to exclude from result.\",\n        \"in\": \"query\",\n        \"name\": \"excludeIds\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"tag_fields\": {\n        \"description\": \"The field list to retrieve as part of the tag resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.\",\n        \"in\": \"query\",\n        \"name\": \"fields\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"tag_includeIds\": {\n        \"description\": \"The comma separated ID list of tags to include to result.\",\n        \"in\": \"query\",\n        \"name\": \"includeIds\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"tag_limit\": {\n        \"description\": \"Maximum number of tags to retrieve.\\n\\n**Default**: 25\",\n        \"in\": \"query\",\n        \"name\": \"limit\",\n        \"schema\": {\n          \"default\": \"25\",\n          \"type\": \"integer\"\n        }\n      },\n      \"tag_offset\": {\n        \"description\": \"0-indexed offset.\\n\\n**Default**: 0\",\n        \"in\": \"query\",\n        \"name\": \"offset\",\n        \"schema\": {\n          \"default\": \"0\",\n          \"type\": \"integer\"\n        }\n      },\n      \"tag_search\": {\n        \"description\": \"Search query.\",\n        \"in\": \"query\",\n        \"name\": \"search\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"tag_searchFields\": {\n        \"description\": \"The comma separated field name list to search.\\n\\n**Default**: name\",\n        \"in\": \"query\",\n        \"name\": \"searchFields\",\n        \"schema\": {\n          \"default\": \"name\",\n          \"type\": \"string\"\n        }\n      },\n      \"tag_sortBy\": {\n        \"description\": \"\\n\\n**Default**: name\",\n        \"in\": \"query\",\n        \"name\": \"sortBy\",\n        \"schema\": {\n          \"default\": \"name\",\n          \"type\": \"string\"\n        }\n      },\n      \"tag_sortOrder\": {\n        \"description\": \"#### descend\\n\\nReturn tags in descending order.\\n\\n#### ascend\\n\\nReturn tags in ascending order.\\n\\n\\n\\n**Default**: ascend\",\n        \"in\": \"query\",\n        \"name\": \"sortOrder\",\n        \"schema\": {\n          \"default\": \"ascend\",\n          \"enum\": [\n            \"descend\",\n            \"ascend\"\n          ],\n          \"type\": \"string\"\n        }\n      },\n      \"template_dateField\": {\n        \"description\": \"Specifies the field name to be used as a date field for filtering. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateField\",\n        \"schema\": {\n          \"default\": \"created_on\",\n          \"type\": \"string\"\n        }\n      },\n      \"template_dateFrom\": {\n        \"description\": \"The start date to filtering. Specify in \\\"YYYY-MM-DD\\\" format. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateFrom\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"template_dateTo\": {\n        \"description\": \"The end date to filtering. Specify in \\\"YYYY-MM-DD\\\" format. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateTo\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"template_excludeIds\": {\n        \"description\": \"The comma separated ID list of templates to exclude from result.\",\n        \"in\": \"query\",\n        \"name\": \"excludeIds\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"template_fields\": {\n        \"description\": \"The field list to retrieve as part of the template resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.\",\n        \"in\": \"query\",\n        \"name\": \"fields\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"template_includeIds\": {\n        \"description\": \"The comma separated ID list of templates to include to result.\",\n        \"in\": \"query\",\n        \"name\": \"includeIds\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"template_limit\": {\n        \"description\": \"Maximum number of templates to retrieve.\\n\\n**Default**: 10\",\n        \"in\": \"query\",\n        \"name\": \"limit\",\n        \"schema\": {\n          \"default\": \"10\",\n          \"type\": \"integer\"\n        }\n      },\n      \"template_offset\": {\n        \"description\": \"0-indexed offset.\\n\\n**Default**: 0\",\n        \"in\": \"query\",\n        \"name\": \"offset\",\n        \"schema\": {\n          \"default\": \"0\",\n          \"type\": \"integer\"\n        }\n      },\n      \"template_search\": {\n        \"description\": \"Search query.\",\n        \"in\": \"query\",\n        \"name\": \"search\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"template_searchFields\": {\n        \"description\": \"The comma separated field name list to search.\\n\\n**Default**: name,templateType,text\",\n        \"in\": \"query\",\n        \"name\": \"searchFields\",\n        \"schema\": {\n          \"default\": \"name,templateType,text\",\n          \"type\": \"string\"\n        }\n      },\n      \"template_sortBy\": {\n        \"description\": \"\\n\\n**Default**: name\",\n        \"in\": \"query\",\n        \"name\": \"sortBy\",\n        \"schema\": {\n          \"default\": \"name\",\n          \"type\": \"string\"\n        }\n      },\n      \"template_sortOrder\": {\n        \"description\": \"#### descend\\n\\nReturn templates in descending order.\\n\\n#### ascend\\n\\nReturn templates in ascending order.\\n\\n\\n\\n**Default**: ascend\",\n        \"in\": \"query\",\n        \"name\": \"sortOrder\",\n        \"schema\": {\n          \"default\": \"ascend\",\n          \"enum\": [\n            \"descend\",\n            \"ascend\"\n          ],\n          \"type\": \"string\"\n        }\n      },\n      \"templatemap_dateField\": {\n        \"description\": \"Specifies the field name to be used as a date field for filtering. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateField\",\n        \"schema\": {\n          \"default\": \"created_on\",\n          \"type\": \"string\"\n        }\n      },\n      \"templatemap_dateFrom\": {\n        \"description\": \"The start date to filtering. Specify in \\\"YYYY-MM-DD\\\" format. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateFrom\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"templatemap_dateTo\": {\n        \"description\": \"The end date to filtering. Specify in \\\"YYYY-MM-DD\\\" format. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateTo\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"templatemap_excludeIds\": {\n        \"description\": \"The comma separated ID list of templatemaps to exclude from result.\",\n        \"in\": \"query\",\n        \"name\": \"excludeIds\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"templatemap_fields\": {\n        \"description\": \"The field list to retrieve as part of the templatemap resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.\",\n        \"in\": \"query\",\n        \"name\": \"fields\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"templatemap_includeIds\": {\n        \"description\": \"The comma separated ID list of templatemaps to include to result.\",\n        \"in\": \"query\",\n        \"name\": \"includeIds\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"templatemap_limit\": {\n        \"description\": \"Maximum number of templatemaps to retrieve.\\n\\n**Default**: 10\",\n        \"in\": \"query\",\n        \"name\": \"limit\",\n        \"schema\": {\n          \"default\": \"10\",\n          \"type\": \"integer\"\n        }\n      },\n      \"templatemap_offset\": {\n        \"description\": \"0-indexed offset.\\n\\n**Default**: 0\",\n        \"in\": \"query\",\n        \"name\": \"offset\",\n        \"schema\": {\n          \"default\": \"0\",\n          \"type\": \"integer\"\n        }\n      },\n      \"templatemap_search\": {\n        \"description\": \"Search query.\",\n        \"in\": \"query\",\n        \"name\": \"search\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"templatemap_searchFields\": {\n        \"description\": \"The comma separated field name list to search.\",\n        \"in\": \"query\",\n        \"name\": \"searchFields\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"templatemap_sortBy\": {\n        \"description\": \"\\n\\n**Default**: id\",\n        \"in\": \"query\",\n        \"name\": \"sortBy\",\n        \"schema\": {\n          \"default\": \"id\",\n          \"type\": \"string\"\n        }\n      },\n      \"templatemap_sortOrder\": {\n        \"description\": \"#### descend\\n\\nReturn templatemaps in descending order.\\n\\n#### ascend\\n\\nReturn templatemaps in ascending order.\\n\\n\\n\\n**Default**: ascend\",\n        \"in\": \"query\",\n        \"name\": \"sortOrder\",\n        \"schema\": {\n          \"default\": \"ascend\",\n          \"enum\": [\n            \"descend\",\n            \"ascend\"\n          ],\n          \"type\": \"string\"\n        }\n      },\n      \"trackback_dateField\": {\n        \"description\": \"Specifies the field name to be used as a date field for filtering. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateField\",\n        \"schema\": {\n          \"default\": \"created_on\",\n          \"type\": \"string\"\n        }\n      },\n      \"trackback_dateFrom\": {\n        \"description\": \"The start date to filtering. Specify in \\\"YYYY-MM-DD\\\" format. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateFrom\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"trackback_dateTo\": {\n        \"description\": \"The end date to filtering. Specify in \\\"YYYY-MM-DD\\\" format. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateTo\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"trackback_excludeIds\": {\n        \"description\": \"The comma separated ID list of trackbacks to exclude from result.\",\n        \"in\": \"query\",\n        \"name\": \"excludeIds\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"trackback_fields\": {\n        \"description\": \"The field list to retrieve as part of the trackback resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.\",\n        \"in\": \"query\",\n        \"name\": \"fields\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"trackback_includeIds\": {\n        \"description\": \"The comma separated ID list of trackbacks to include to result.\",\n        \"in\": \"query\",\n        \"name\": \"includeIds\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"trackback_limit\": {\n        \"description\": \"Maximum number of trackbacks to retrieve.\\n\\n**Default**: 10\",\n        \"in\": \"query\",\n        \"name\": \"limit\",\n        \"schema\": {\n          \"default\": \"10\",\n          \"type\": \"integer\"\n        }\n      },\n      \"trackback_offset\": {\n        \"description\": \"0-indexed offset.\\n\\n**Default**: 0\",\n        \"in\": \"query\",\n        \"name\": \"offset\",\n        \"schema\": {\n          \"default\": \"0\",\n          \"type\": \"integer\"\n        }\n      },\n      \"trackback_search\": {\n        \"description\": \"Search query.\",\n        \"in\": \"query\",\n        \"name\": \"search\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"trackback_searchFields\": {\n        \"description\": \"The comma separated field name list to search.\\n\\n**Default**: title,excerpt,blogName\",\n        \"in\": \"query\",\n        \"name\": \"searchFields\",\n        \"schema\": {\n          \"default\": \"title,excerpt,blogName\",\n          \"type\": \"string\"\n        }\n      },\n      \"trackback_sortBy\": {\n        \"description\": \"\\n\\n**Default**: id\",\n        \"in\": \"query\",\n        \"name\": \"sortBy\",\n        \"schema\": {\n          \"default\": \"id\",\n          \"type\": \"string\"\n        }\n      },\n      \"trackback_sortOrder\": {\n        \"description\": \"#### descend\\n\\nReturn trackbacks in descending order.\\n\\n#### ascend\\n\\nReturn trackbacks in ascending order.\\n\\n\\n\\n**Default**: descend\",\n        \"in\": \"query\",\n        \"name\": \"sortOrder\",\n        \"schema\": {\n          \"default\": \"descend\",\n          \"enum\": [\n            \"descend\",\n            \"ascend\"\n          ],\n          \"type\": \"string\"\n        }\n      },\n      \"user_dateField\": {\n        \"description\": \"Specifies the field name to be used as a date field for filtering. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateField\",\n        \"schema\": {\n          \"default\": \"created_on\",\n          \"type\": \"string\"\n        }\n      },\n      \"user_dateFrom\": {\n        \"description\": \"The start date to filtering. Specify in \\\"YYYY-MM-DD\\\" format. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateFrom\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"user_dateTo\": {\n        \"description\": \"The end date to filtering. Specify in \\\"YYYY-MM-DD\\\" format. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateTo\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"user_excludeIds\": {\n        \"description\": \"The comma separated ID list of users to exclude from result.\",\n        \"in\": \"query\",\n        \"name\": \"excludeIds\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"user_fields\": {\n        \"description\": \"The field list to retrieve as part of the user resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.\",\n        \"in\": \"query\",\n        \"name\": \"fields\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"user_includeIds\": {\n        \"description\": \"The comma separated ID list of users to include to result.\",\n        \"in\": \"query\",\n        \"name\": \"includeIds\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"user_limit\": {\n        \"description\": \"Maximum number of users to retrieve.\\n\\n**Default**: 10\",\n        \"in\": \"query\",\n        \"name\": \"limit\",\n        \"schema\": {\n          \"default\": \"10\",\n          \"type\": \"integer\"\n        }\n      },\n      \"user_offset\": {\n        \"description\": \"0-indexed offset.\\n\\n**Default**: 0\",\n        \"in\": \"query\",\n        \"name\": \"offset\",\n        \"schema\": {\n          \"default\": \"0\",\n          \"type\": \"integer\"\n        }\n      },\n      \"user_search\": {\n        \"description\": \"Search query.\",\n        \"in\": \"query\",\n        \"name\": \"search\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"user_searchFields\": {\n        \"description\": \"The comma separated field name list to search.\\n\\n**Default**: name,displayName,email,url\",\n        \"in\": \"query\",\n        \"name\": \"searchFields\",\n        \"schema\": {\n          \"default\": \"name,displayName,email,url\",\n          \"type\": \"string\"\n        }\n      },\n      \"user_sortBy\": {\n        \"description\": \"\\n\\n**Default**: name\",\n        \"in\": \"query\",\n        \"name\": \"sortBy\",\n        \"schema\": {\n          \"default\": \"name\",\n          \"type\": \"string\"\n        }\n      },\n      \"user_sortOrder\": {\n        \"description\": \"#### descend\\n\\nReturn users in descending order.\\n\\n#### ascend\\n\\nReturn users in ascending order.\\n\\n\\n\\n**Default**: ascend\",\n        \"in\": \"query\",\n        \"name\": \"sortOrder\",\n        \"schema\": {\n          \"default\": \"ascend\",\n          \"enum\": [\n            \"descend\",\n            \"ascend\"\n          ],\n          \"type\": \"string\"\n        }\n      },\n      \"widget_dateField\": {\n        \"description\": \"Specifies the field name to be used as a date field for filtering. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateField\",\n        \"schema\": {\n          \"default\": \"created_on\",\n          \"type\": \"string\"\n        }\n      },\n      \"widget_dateFrom\": {\n        \"description\": \"The start date to filtering. Specify in \\\"YYYY-MM-DD\\\" format. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateFrom\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"widget_dateTo\": {\n        \"description\": \"The end date to filtering. Specify in \\\"YYYY-MM-DD\\\" format. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateTo\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"widget_excludeIds\": {\n        \"description\": \"The comma separated ID list of widgets to exclude from result.\",\n        \"in\": \"query\",\n        \"name\": \"excludeIds\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"widget_fields\": {\n        \"description\": \"The field list to retrieve as part of the widget resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.\",\n        \"in\": \"query\",\n        \"name\": \"fields\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"widget_includeIds\": {\n        \"description\": \"The comma separated ID list of widgets to include to result.\",\n        \"in\": \"query\",\n        \"name\": \"includeIds\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"widget_limit\": {\n        \"description\": \"Maximum number of widgets to retrieve.\\n\\n**Default**: 10\",\n        \"in\": \"query\",\n        \"name\": \"limit\",\n        \"schema\": {\n          \"default\": \"10\",\n          \"type\": \"integer\"\n        }\n      },\n      \"widget_offset\": {\n        \"description\": \"0-indexed offset.\\n\\n**Default**: 0\",\n        \"in\": \"query\",\n        \"name\": \"offset\",\n        \"schema\": {\n          \"default\": \"0\",\n          \"type\": \"integer\"\n        }\n      },\n      \"widget_search\": {\n        \"description\": \"Search query.\",\n        \"in\": \"query\",\n        \"name\": \"search\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"widget_searchFields\": {\n        \"description\": \"The comma separated field name list to search.\\n\\n**Default**: name,text\",\n        \"in\": \"query\",\n        \"name\": \"searchFields\",\n        \"schema\": {\n          \"default\": \"name,text\",\n          \"type\": \"string\"\n        }\n      },\n      \"widget_sortBy\": {\n        \"description\": \"\\n\\n**Default**: name\",\n        \"in\": \"query\",\n        \"name\": \"sortBy\",\n        \"schema\": {\n          \"default\": \"name\",\n          \"type\": \"string\"\n        }\n      },\n      \"widget_sortOrder\": {\n        \"description\": \"#### descend\\n\\nReturn widgets in descending order.\\n\\n#### ascend\\n\\nReturn widgets in ascending order.\\n\\n\\n\\n**Default**: ascend\",\n        \"in\": \"query\",\n        \"name\": \"sortOrder\",\n        \"schema\": {\n          \"default\": \"ascend\",\n          \"enum\": [\n            \"descend\",\n            \"ascend\"\n          ],\n          \"type\": \"string\"\n        }\n      },\n      \"widgetset_dateField\": {\n        \"description\": \"Specifies the field name to be used as a date field for filtering. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateField\",\n        \"schema\": {\n          \"default\": \"created_on\",\n          \"type\": \"string\"\n        }\n      },\n      \"widgetset_dateFrom\": {\n        \"description\": \"The start date to filtering. Specify in \\\"YYYY-MM-DD\\\" format. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateFrom\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"widgetset_dateTo\": {\n        \"description\": \"The end date to filtering. Specify in \\\"YYYY-MM-DD\\\" format. (new in v3)\",\n        \"in\": \"query\",\n        \"name\": \"dateTo\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"widgetset_excludeIds\": {\n        \"description\": \"The comma separated ID list of widgetsets to exclude from result.\",\n        \"in\": \"query\",\n        \"name\": \"excludeIds\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"widgetset_fields\": {\n        \"description\": \"The field list to retrieve as part of the widgetset resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.\",\n        \"in\": \"query\",\n        \"name\": \"fields\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"widgetset_includeIds\": {\n        \"description\": \"The comma separated ID list of widgetsets to include to result.\",\n        \"in\": \"query\",\n        \"name\": \"includeIds\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"widgetset_limit\": {\n        \"description\": \"Maximum number of widgetsets to retrieve.\\n\\n**Default**: 10\",\n        \"in\": \"query\",\n        \"name\": \"limit\",\n        \"schema\": {\n          \"default\": \"10\",\n          \"type\": \"integer\"\n        }\n      },\n      \"widgetset_offset\": {\n        \"description\": \"0-indexed offset.\\n\\n**Default**: 0\",\n        \"in\": \"query\",\n        \"name\": \"offset\",\n        \"schema\": {\n          \"default\": \"0\",\n          \"type\": \"integer\"\n        }\n      },\n      \"widgetset_search\": {\n        \"description\": \"Search query.\",\n        \"in\": \"query\",\n        \"name\": \"search\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"widgetset_searchFields\": {\n        \"description\": \"The comma separated field name list to search.\\n\\n**Default**: name\",\n        \"in\": \"query\",\n        \"name\": \"searchFields\",\n        \"schema\": {\n          \"default\": \"name\",\n          \"type\": \"string\"\n        }\n      },\n      \"widgetset_sortBy\": {\n        \"description\": \"\\n\\n**Default**: name\",\n        \"in\": \"query\",\n        \"name\": \"sortBy\",\n        \"schema\": {\n          \"default\": \"name\",\n          \"type\": \"string\"\n        }\n      },\n      \"widgetset_sortOrder\": {\n        \"description\": \"#### descend\\n\\nReturn widgetsets in descending order.\\n\\n#### ascend\\n\\nReturn widgetsets in ascending order.\\n\\n\\n\\n**Default**: ascend\",\n        \"in\": \"query\",\n        \"name\": \"sortOrder\",\n        \"schema\": {\n          \"default\": \"ascend\",\n          \"enum\": [\n            \"descend\",\n            \"ascend\"\n          ],\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"schemas\": {\n      \"ErrorContent\": {\n        \"properties\": {\n          \"error\": {\n            \"properties\": {\n              \"code\": {\n                \"type\": \"number\"\n              },\n              \"message\": {\n                \"type\": \"string\"\n              }\n            },\n            \"type\": \"object\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"asset\": {\n        \"description\": \"Updatable fields are label, description, tags, customFields\",\n        \"properties\": {\n          \"blog\": {\n            \"properties\": {\n              \"id\": {\n                \"type\": \"integer\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"class\": {\n            \"type\": \"string\"\n          },\n          \"createdBy\": {\n            \"properties\": {\n              \"displayName\": {\n                \"type\": \"string\"\n              },\n              \"id\": {\n                \"type\": \"integer\"\n              },\n              \"userpicUrl\": {\n                \"type\": \"string\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"createdDate\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"customFields\": {\n            \"items\": {\n              \"properties\": {\n                \"basename\": {\n                  \"type\": \"string\"\n                },\n                \"value\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"type\": \"object\"\n            },\n            \"type\": \"array\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"fileExtension\": {\n            \"type\": \"string\"\n          },\n          \"filePath\": {\n            \"type\": \"string\"\n          },\n          \"filename\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"integer\"\n          },\n          \"label\": {\n            \"type\": \"string\"\n          },\n          \"meta\": {\n            \"properties\": {\n              \"fileSize\": {\n                \"type\": \"integer\"\n              },\n              \"height\": {\n                \"type\": \"integer\"\n              },\n              \"width\": {\n                \"type\": \"integer\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"mimeType\": {\n            \"type\": \"string\"\n          },\n          \"modifiedBy\": {\n            \"properties\": {\n              \"displayName\": {\n                \"type\": \"string\"\n              },\n              \"id\": {\n                \"type\": \"integer\"\n              },\n              \"userpicUrl\": {\n                \"type\": \"string\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"modifiedDate\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"parent\": {\n            \"type\": \"integer\"\n          },\n          \"tags\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"updatable\": {\n            \"type\": \"boolean\"\n          },\n          \"url\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"asset_updatable\": {\n        \"properties\": {\n          \"customFields\": {\n            \"items\": {\n              \"properties\": {\n                \"basename\": {\n                  \"type\": \"string\"\n                },\n                \"value\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"type\": \"object\"\n            },\n            \"type\": \"array\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"label\": {\n            \"type\": \"string\"\n          },\n          \"tags\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"association\": {\n        \"properties\": {\n          \"blog\": {\n            \"properties\": {\n              \"id\": {\n                \"type\": \"integer\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"createdBy\": {\n            \"properties\": {\n              \"displayName\": {\n                \"type\": \"string\"\n              },\n              \"id\": {\n                \"type\": \"integer\"\n              },\n              \"userpicUrl\": {\n                \"type\": \"string\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"createdDate\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"permissions\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"role\": {\n            \"properties\": {\n              \"id\": {\n                \"type\": \"integer\"\n              },\n              \"name\": {\n                \"type\": \"string\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"user\": {\n            \"properties\": {\n              \"displayName\": {\n                \"type\": \"string\"\n              },\n              \"id\": {\n                \"type\": \"integer\"\n              },\n              \"userpicUrl\": {\n                \"type\": \"string\"\n              }\n            },\n            \"type\": \"object\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"blog\": {\n        \"description\": \"Updatable fields are name, description, url, archiveUrl, themeId, serverOffset, language, sitePath, archivePath, fileExtension, archiveTypePreferred, publishEmptyArchive, includeSystem, includeCache, useRevision, maxRevisionsEntry, maxRevisionsTemplate, listOnIndex, daysOrPosts, sortOrderPosts, wordsInExcerpt, basenameLimit, statusDefault, convertParas, contentCss, smartReplace, smartReplaceFields, junkFolderExpiry, junkScoreThreshold, nofollowUrls, followAuthLinks, sanitizeSpec, autolinkUrls, autodiscoverLinks, internalAutodiscovery, newCreatedUserRole, dateLanguage, customDynamicTemplates, customFields, allowCommentsDefault, allowComments, moderateComments, allowCommentHtml, emailNewComments, sortOrderComments, convertParasComments, useCommentConfirmation, allowCommenterRegist, allowUnregComments, requireCommentEmails, commenterAuthenticators, allowPingsDefault, allowPings, moderatePings, emailNewPings, pingGoogle, pingWeblogs, pingOthers, maxRevisionsContentData\",\n        \"properties\": {\n          \"allowCommentHtml\": {\n            \"type\": \"boolean\"\n          },\n          \"allowCommenterRegist\": {\n            \"type\": \"boolean\"\n          },\n          \"allowComments\": {\n            \"type\": \"boolean\"\n          },\n          \"allowCommentsDefault\": {\n            \"type\": \"boolean\"\n          },\n          \"allowPings\": {\n            \"type\": \"boolean\"\n          },\n          \"allowPingsDefault\": {\n            \"type\": \"boolean\"\n          },\n          \"allowToChangeAtUpload\": {\n            \"type\": \"boolean\"\n          },\n          \"allowUnregComments\": {\n            \"type\": \"boolean\"\n          },\n          \"archivePath\": {\n            \"type\": \"string\"\n          },\n          \"archiveTypePreferred\": {\n            \"type\": \"string\"\n          },\n          \"archiveUrl\": {\n            \"type\": \"string\"\n          },\n          \"autoRenameNonAscii\": {\n            \"type\": \"boolean\"\n          },\n          \"autodiscoverLinks\": {\n            \"type\": \"boolean\"\n          },\n          \"autolinkUrls\": {\n            \"type\": \"boolean\"\n          },\n          \"basenameLimit\": {\n            \"type\": \"integer\"\n          },\n          \"ccLicenseImage\": {\n            \"type\": \"string\"\n          },\n          \"ccLicenseUrl\": {\n            \"type\": \"string\"\n          },\n          \"class\": {\n            \"type\": \"string\"\n          },\n          \"commenterAuthenticators\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"contentCss\": {\n            \"type\": \"string\"\n          },\n          \"convertParas\": {\n            \"type\": \"string\"\n          },\n          \"convertParasComments\": {\n            \"type\": \"string\"\n          },\n          \"createdBy\": {\n            \"properties\": {\n              \"displayName\": {\n                \"type\": \"string\"\n              },\n              \"id\": {\n                \"type\": \"integer\"\n              },\n              \"userpicUrl\": {\n                \"type\": \"string\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"createdDate\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"customDynamicTemplates\": {\n            \"type\": \"string\"\n          },\n          \"customFields\": {\n            \"items\": {\n              \"properties\": {\n                \"basename\": {\n                  \"type\": \"string\"\n                },\n                \"value\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"type\": \"object\"\n            },\n            \"type\": \"array\"\n          },\n          \"dateLanguage\": {\n            \"type\": \"string\"\n          },\n          \"daysOrPosts\": {\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"dynamicCache\": {\n            \"type\": \"boolean\"\n          },\n          \"dynamicConditional\": {\n            \"type\": \"boolean\"\n          },\n          \"emailNewComments\": {\n            \"type\": \"string\"\n          },\n          \"emailNewPings\": {\n            \"type\": \"string\"\n          },\n          \"entryCustomPrefs\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"extraPath\": {\n            \"type\": \"string\"\n          },\n          \"fileExtension\": {\n            \"type\": \"string\"\n          },\n          \"followAuthLinks\": {\n            \"type\": \"boolean\"\n          },\n          \"host\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"integer\"\n          },\n          \"includeCache\": {\n            \"type\": \"boolean\"\n          },\n          \"includeSystem\": {\n            \"type\": \"string\"\n          },\n          \"internalAutodiscovery\": {\n            \"type\": \"boolean\"\n          },\n          \"junkFolderExpiry\": {\n            \"type\": \"integer\"\n          },\n          \"junkScoreThreshold\": {\n            \"format\": \"float\",\n            \"type\": \"number\"\n          },\n          \"language\": {\n            \"type\": \"string\"\n          },\n          \"listOnIndex\": {\n            \"type\": \"integer\"\n          },\n          \"maxRevisionsContentData\": {\n            \"type\": \"integer\"\n          },\n          \"maxRevisionsEntry\": {\n            \"type\": \"integer\"\n          },\n          \"maxRevisionsTemplate\": {\n            \"type\": \"integer\"\n          },\n          \"moderateComments\": {\n            \"type\": \"integer\"\n          },\n          \"moderatePings\": {\n            \"type\": \"boolean\"\n          },\n          \"modifiedBy\": {\n            \"properties\": {\n              \"displayName\": {\n                \"type\": \"string\"\n              },\n              \"id\": {\n                \"type\": \"integer\"\n              },\n              \"userpicUrl\": {\n                \"type\": \"string\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"modifiedDate\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"newCreatedUserRoles\": {\n            \"items\": {\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"integer\"\n                },\n                \"name\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"type\": \"object\"\n            },\n            \"type\": \"array\"\n          },\n          \"nofollowUrls\": {\n            \"type\": \"boolean\"\n          },\n          \"normalizeOrientation\": {\n            \"type\": \"boolean\"\n          },\n          \"operationIfExists\": {\n            \"type\": \"integer\"\n          },\n          \"pageCustomPrefs\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"parent\": {\n            \"properties\": {\n              \"id\": {\n                \"type\": \"integer\"\n              },\n              \"name\": {\n                \"type\": \"string\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"pingGoogle\": {\n            \"type\": \"boolean\"\n          },\n          \"pingOthers\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"pingWeblogs\": {\n            \"type\": \"boolean\"\n          },\n          \"publishEmptyArchive\": {\n            \"type\": \"boolean\"\n          },\n          \"relativeUrl\": {\n            \"type\": \"string\"\n          },\n          \"requireCommentEmails\": {\n            \"type\": \"boolean\"\n          },\n          \"sanitizeSpec\": {\n            \"type\": \"string\"\n          },\n          \"serverOffset\": {\n            \"type\": \"string\"\n          },\n          \"sitePath\": {\n            \"type\": \"string\"\n          },\n          \"smartReplace\": {\n            \"type\": \"integer\"\n          },\n          \"smartReplaceFields\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"sortOrderComments\": {\n            \"type\": \"string\"\n          },\n          \"sortOrderPosts\": {\n            \"type\": \"string\"\n          },\n          \"statusDefault\": {\n            \"type\": \"string\"\n          },\n          \"themeId\": {\n            \"type\": \"string\"\n          },\n          \"timezone\": {\n            \"type\": \"string\"\n          },\n          \"updatable\": {\n            \"type\": \"boolean\"\n          },\n          \"uploadDestination\": {\n            \"properties\": {\n              \"path\": {\n                \"type\": \"string\"\n              },\n              \"raw\": {\n                \"type\": \"string\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"url\": {\n            \"type\": \"string\"\n          },\n          \"useCommentConfirmation\": {\n            \"type\": \"boolean\"\n          },\n          \"useRevision\": {\n            \"type\": \"boolean\"\n          },\n          \"wordsInExcerpt\": {\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"blog_updatable\": {\n        \"properties\": {\n          \"allowCommentHtml\": {\n            \"type\": \"boolean\"\n          },\n          \"allowCommenterRegist\": {\n            \"type\": \"boolean\"\n          },\n          \"allowComments\": {\n            \"type\": \"boolean\"\n          },\n          \"allowCommentsDefault\": {\n            \"type\": \"boolean\"\n          },\n          \"allowPings\": {\n            \"type\": \"boolean\"\n          },\n          \"allowPingsDefault\": {\n            \"type\": \"boolean\"\n          },\n          \"allowUnregComments\": {\n            \"type\": \"boolean\"\n          },\n          \"archivePath\": {\n            \"type\": \"string\"\n          },\n          \"archiveTypePreferred\": {\n            \"type\": \"string\"\n          },\n          \"archiveUrl\": {\n            \"type\": \"string\"\n          },\n          \"autodiscoverLinks\": {\n            \"type\": \"boolean\"\n          },\n          \"autolinkUrls\": {\n            \"type\": \"boolean\"\n          },\n          \"basenameLimit\": {\n            \"type\": \"integer\"\n          },\n          \"commenterAuthenticators\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"contentCss\": {\n            \"type\": \"string\"\n          },\n          \"convertParas\": {\n            \"type\": \"string\"\n          },\n          \"convertParasComments\": {\n            \"type\": \"string\"\n          },\n          \"customDynamicTemplates\": {\n            \"type\": \"string\"\n          },\n          \"customFields\": {\n            \"items\": {\n              \"properties\": {\n                \"basename\": {\n                  \"type\": \"string\"\n                },\n                \"value\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"type\": \"object\"\n            },\n            \"type\": \"array\"\n          },\n          \"dateLanguage\": {\n            \"type\": \"string\"\n          },\n          \"daysOrPosts\": {\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"emailNewComments\": {\n            \"type\": \"string\"\n          },\n          \"emailNewPings\": {\n            \"type\": \"string\"\n          },\n          \"fileExtension\": {\n            \"type\": \"string\"\n          },\n          \"followAuthLinks\": {\n            \"type\": \"boolean\"\n          },\n          \"includeCache\": {\n            \"type\": \"boolean\"\n          },\n          \"includeSystem\": {\n            \"type\": \"string\"\n          },\n          \"internalAutodiscovery\": {\n            \"type\": \"boolean\"\n          },\n          \"junkFolderExpiry\": {\n            \"type\": \"integer\"\n          },\n          \"junkScoreThreshold\": {\n            \"format\": \"float\",\n            \"type\": \"number\"\n          },\n          \"language\": {\n            \"type\": \"string\"\n          },\n          \"listOnIndex\": {\n            \"type\": \"integer\"\n          },\n          \"maxRevisionsContentData\": {\n            \"type\": \"integer\"\n          },\n          \"maxRevisionsEntry\": {\n            \"type\": \"integer\"\n          },\n          \"maxRevisionsTemplate\": {\n            \"type\": \"integer\"\n          },\n          \"moderateComments\": {\n            \"type\": \"integer\"\n          },\n          \"moderatePings\": {\n            \"type\": \"boolean\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"nofollowUrls\": {\n            \"type\": \"boolean\"\n          },\n          \"pingGoogle\": {\n            \"type\": \"boolean\"\n          },\n          \"pingOthers\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"pingWeblogs\": {\n            \"type\": \"boolean\"\n          },\n          \"publishEmptyArchive\": {\n            \"type\": \"boolean\"\n          },\n          \"requireCommentEmails\": {\n            \"type\": \"boolean\"\n          },\n          \"sanitizeSpec\": {\n            \"type\": \"string\"\n          },\n          \"serverOffset\": {\n            \"type\": \"string\"\n          },\n          \"sitePath\": {\n            \"type\": \"string\"\n          },\n          \"smartReplace\": {\n            \"type\": \"integer\"\n          },\n          \"smartReplaceFields\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"sortOrderComments\": {\n            \"type\": \"string\"\n          },\n          \"sortOrderPosts\": {\n            \"type\": \"string\"\n          },\n          \"statusDefault\": {\n            \"type\": \"string\"\n          },\n          \"themeId\": {\n            \"type\": \"string\"\n          },\n          \"url\": {\n            \"type\": \"string\"\n          },\n          \"useCommentConfirmation\": {\n            \"type\": \"boolean\"\n          },\n          \"useRevision\": {\n            \"type\": \"boolean\"\n          },\n          \"wordsInExcerpt\": {\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"category\": {\n        \"description\": \"Updatable fields are label, description, basename, customFields, parent\",\n        \"properties\": {\n          \"archiveLink\": {\n            \"type\": \"string\"\n          },\n          \"basename\": {\n            \"type\": \"string\"\n          },\n          \"blog\": {\n            \"properties\": {\n              \"id\": {\n                \"type\": \"integer\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"class\": {\n            \"type\": \"string\"\n          },\n          \"createdBy\": {\n            \"properties\": {\n              \"displayName\": {\n                \"type\": \"string\"\n              },\n              \"id\": {\n                \"type\": \"integer\"\n              },\n              \"userpicUrl\": {\n                \"type\": \"string\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"createdDate\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"customFields\": {\n            \"items\": {\n              \"properties\": {\n                \"basename\": {\n                  \"type\": \"string\"\n                },\n                \"value\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"type\": \"object\"\n            },\n            \"type\": \"array\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"integer\"\n          },\n          \"label\": {\n            \"type\": \"string\"\n          },\n          \"modifiedBy\": {\n            \"properties\": {\n              \"displayName\": {\n                \"type\": \"string\"\n              },\n              \"id\": {\n                \"type\": \"integer\"\n              },\n              \"userpicUrl\": {\n                \"type\": \"string\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"modifiedDate\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"parent\": {\n            \"type\": \"integer\"\n          },\n          \"updatable\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"category_set\": {\n        \"description\": \"Updatable fields are name\",\n        \"properties\": {\n          \"blog\": {\n            \"properties\": {\n              \"id\": {\n                \"type\": \"integer\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"categories\": {\n            \"items\": {\n              \"properties\": {\n                \"basename\": {\n                  \"type\": \"string\"\n                },\n                \"id\": {\n                  \"type\": \"integer\"\n                },\n                \"label\": {\n                  \"type\": \"string\"\n                },\n                \"parent\": {\n                  \"type\": \"integer\"\n                }\n              },\n              \"type\": \"object\"\n            },\n            \"type\": \"array\"\n          },\n          \"contentTypeCount\": {\n            \"type\": \"string\"\n          },\n          \"createdBy\": {\n            \"properties\": {\n              \"displayName\": {\n                \"type\": \"string\"\n              },\n              \"id\": {\n                \"type\": \"integer\"\n              },\n              \"userpicUrl\": {\n                \"type\": \"string\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"createdDate\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"integer\"\n          },\n          \"modifiedBy\": {\n            \"properties\": {\n              \"displayName\": {\n                \"type\": \"string\"\n              },\n              \"id\": {\n                \"type\": \"integer\"\n              },\n              \"userpicUrl\": {\n                \"type\": \"string\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"modifiedDate\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"updatable\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"category_set_updatable\": {\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"category_updatable\": {\n        \"properties\": {\n          \"basename\": {\n            \"type\": \"string\"\n          },\n          \"customFields\": {\n            \"items\": {\n              \"properties\": {\n                \"basename\": {\n                  \"type\": \"string\"\n                },\n                \"value\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"type\": \"object\"\n            },\n            \"type\": \"array\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"label\": {\n            \"type\": \"string\"\n          },\n          \"parent\": {\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"cd\": {\n        \"description\": \"Updatable fields are basename, data, date, status, unpublishedDate, label\",\n        \"properties\": {\n          \"author\": {\n            \"properties\": {\n              \"displayName\": {\n                \"type\": \"string\"\n              },\n              \"id\": {\n                \"type\": \"integer\"\n              },\n              \"userpicUrl\": {\n                \"type\": \"string\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"basename\": {\n            \"type\": \"string\"\n          },\n          \"blog\": {\n            \"properties\": {\n              \"id\": {\n                \"type\": \"integer\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"createdDate\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"data\": {\n            \"items\": {\n              \"properties\": {\n                \"data\": {\n                  \"oneOf\": [\n                    {\n                      \"type\": \"string\"\n                    },\n                    {\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"type\": \"array\"\n                    }\n                  ]\n                },\n                \"id\": {\n                  \"type\": \"integer\"\n                },\n                \"label\": {\n                  \"type\": \"string\"\n                },\n                \"type\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"type\": \"object\"\n            },\n            \"type\": \"array\"\n          },\n          \"date\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"integer\"\n          },\n          \"label\": {\n            \"type\": \"string\"\n          },\n          \"modifiedDate\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"permalink\": {\n            \"type\": \"string\"\n          },\n          \"status\": {\n            \"type\": \"string\"\n          },\n          \"unpublishedDate\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"updatable\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"cd_updatable\": {\n        \"properties\": {\n          \"basename\": {\n            \"type\": \"string\"\n          },\n          \"data\": {\n            \"items\": {\n              \"properties\": {\n                \"data\": {\n                  \"oneOf\": [\n                    {\n                      \"type\": \"string\"\n                    },\n                    {\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"type\": \"array\"\n                    }\n                  ]\n                },\n                \"id\": {\n                  \"type\": \"integer\"\n                },\n                \"label\": {\n                  \"type\": \"string\"\n                },\n                \"type\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"type\": \"object\"\n            },\n            \"type\": \"array\"\n          },\n          \"date\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"label\": {\n            \"type\": \"string\"\n          },\n          \"status\": {\n            \"type\": \"string\"\n          },\n          \"unpublishedDate\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"cf\": {\n        \"description\": \"Updatable fields are type, label, description, options\",\n        \"properties\": {\n          \"blog\": {\n            \"properties\": {\n              \"id\": {\n                \"type\": \"integer\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"createdBy\": {\n            \"properties\": {\n              \"displayName\": {\n                \"type\": \"string\"\n              },\n              \"id\": {\n                \"type\": \"integer\"\n              },\n              \"userpicUrl\": {\n                \"type\": \"string\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"createdDate\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"integer\"\n          },\n          \"label\": {\n            \"type\": \"string\"\n          },\n          \"modifiedBy\": {\n            \"properties\": {\n              \"displayName\": {\n                \"type\": \"string\"\n              },\n              \"id\": {\n                \"type\": \"integer\"\n              },\n              \"userpicUrl\": {\n                \"type\": \"string\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"modifiedDate\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"options\": {\n            \"description\": \"This schema shows only common options\",\n            \"properties\": {\n              \"description\": {\n                \"type\": \"string\"\n              },\n              \"display\": {\n                \"type\": \"string\"\n              },\n              \"label\": {\n                \"type\": \"string\"\n              },\n              \"required\": {\n                \"type\": \"string\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"uniqueID\": {\n            \"type\": \"string\"\n          },\n          \"updatable\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"cf_updatable\": {\n        \"properties\": {\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"label\": {\n            \"type\": \"string\"\n          },\n          \"options\": {\n            \"description\": \"This schema shows only common options\",\n            \"properties\": {\n              \"description\": {\n                \"type\": \"string\"\n              },\n              \"display\": {\n                \"type\": \"string\"\n              },\n              \"label\": {\n                \"type\": \"string\"\n              },\n              \"required\": {\n                \"type\": \"string\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"comment\": {\n        \"description\": \"Updatable fields are customFields, body, parent, status\",\n        \"properties\": {\n          \"author\": {\n            \"description\": \"The commenter of this comment.\",\n            \"properties\": {\n              \"displayName\": {\n                \"description\": \"The display name of this commenter.\",\n                \"type\": \"string\"\n              },\n              \"id\": {\n                \"description\": \"The ID of this commenter. If commenter is not a registerd user, this field is empty.\",\n                \"type\": \"integer\"\n              },\n              \"userpicUrl\": {\n                \"description\": \"The URL of this commenter's userpic. The userpic will be made by UserpicThumbnailSize and UserpicAllowRect settings. If a commenter is not a registered user or a commenter does not set own userpic, will be returned empty string.\",\n                \"type\": \"string\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"blog\": {\n            \"properties\": {\n              \"id\": {\n                \"type\": \"integer\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"body\": {\n            \"type\": \"string\"\n          },\n          \"createdBy\": {\n            \"properties\": {\n              \"displayName\": {\n                \"type\": \"string\"\n              },\n              \"id\": {\n                \"type\": \"integer\"\n              },\n              \"userpicUrl\": {\n                \"type\": \"string\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"createdDate\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"customFields\": {\n            \"items\": {\n              \"properties\": {\n                \"basename\": {\n                  \"type\": \"string\"\n                },\n                \"value\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"type\": \"object\"\n            },\n            \"type\": \"array\"\n          },\n          \"date\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"entry\": {\n            \"description\": \"The container entry of this comment.\",\n            \"properties\": {\n              \"id\": {\n                \"description\": \"The ID of the entry that contains this comment.\",\n                \"type\": \"integer\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"id\": {\n            \"type\": \"integer\"\n          },\n          \"link\": {\n            \"type\": \"string\"\n          },\n          \"modifiedBy\": {\n            \"properties\": {\n              \"displayName\": {\n                \"type\": \"string\"\n              },\n              \"id\": {\n                \"type\": \"integer\"\n              },\n              \"userpicUrl\": {\n                \"type\": \"string\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"modifiedDate\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"parent\": {\n            \"type\": \"integer\"\n          },\n          \"status\": {\n            \"type\": \"string\"\n          },\n          \"updatable\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"comment_updatable\": {\n        \"properties\": {\n          \"body\": {\n            \"type\": \"string\"\n          },\n          \"customFields\": {\n            \"items\": {\n              \"properties\": {\n                \"basename\": {\n                  \"type\": \"string\"\n                },\n                \"value\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"type\": \"object\"\n            },\n            \"type\": \"array\"\n          },\n          \"parent\": {\n            \"type\": \"integer\"\n          },\n          \"status\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"content_type\": {\n        \"description\": \"Updatable fields are name, description, userDisplayOption, dataLabel\",\n        \"properties\": {\n          \"blog\": {\n            \"properties\": {\n              \"id\": {\n                \"type\": \"integer\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"contentFields\": {\n            \"items\": {\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"integer\"\n                },\n                \"label\": {\n                  \"type\": \"string\"\n                },\n                \"type\": {\n                  \"type\": \"string\"\n                },\n                \"uniqueID\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"type\": \"object\"\n            },\n            \"type\": \"array\"\n          },\n          \"createdBy\": {\n            \"properties\": {\n              \"displayName\": {\n                \"type\": \"string\"\n              },\n              \"id\": {\n                \"type\": \"integer\"\n              },\n              \"userpicUrl\": {\n                \"type\": \"string\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"createdDate\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"dataLabel\": {\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"integer\"\n          },\n          \"modifiedBy\": {\n            \"properties\": {\n              \"displayName\": {\n                \"type\": \"string\"\n              },\n              \"id\": {\n                \"type\": \"integer\"\n              },\n              \"userpicUrl\": {\n                \"type\": \"string\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"modifiedDate\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"uniqueID\": {\n            \"type\": \"string\"\n          },\n          \"updatable\": {\n            \"type\": \"boolean\"\n          },\n          \"userDisplayOption\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"content_type_updatable\": {\n        \"properties\": {\n          \"dataLabel\": {\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"userDisplayOption\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"endpoint\": {\n        \"properties\": {\n          \"component\": {\n            \"properties\": {\n              \"id\": {\n                \"type\": \"string\"\n              },\n              \"name\": {\n                \"type\": \"string\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"format\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"resources\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"route\": {\n            \"type\": \"string\"\n          },\n          \"verb\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"entry\": {\n        \"description\": \"Updatable fields are status, title, body, more, excerpt, keywords, tags, date, basename, customFields, allowComments, allowTrackbacks, format, unpublishedDate, categories, assets\",\n        \"properties\": {\n          \"allowComments\": {\n            \"type\": \"boolean\"\n          },\n          \"allowTrackbacks\": {\n            \"type\": \"boolean\"\n          },\n          \"assets\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/asset\"\n            },\n            \"type\": \"array\"\n          },\n          \"author\": {\n            \"properties\": {\n              \"displayName\": {\n                \"type\": \"string\"\n              },\n              \"id\": {\n                \"type\": \"integer\"\n              },\n              \"userpicUrl\": {\n                \"type\": \"string\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"basename\": {\n            \"type\": \"string\"\n          },\n          \"blog\": {\n            \"properties\": {\n              \"id\": {\n                \"type\": \"integer\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"body\": {\n            \"type\": \"string\"\n          },\n          \"categories\": {\n            \"items\": {\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"integer\"\n                },\n                \"label\": {\n                  \"type\": \"string\"\n                },\n                \"parent\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"type\": \"object\"\n            },\n            \"type\": \"array\"\n          },\n          \"class\": {\n            \"type\": \"string\"\n          },\n          \"commentCount\": {\n            \"type\": \"integer\"\n          },\n          \"comments\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/comment\"\n            },\n            \"type\": \"array\"\n          },\n          \"createdDate\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"customFields\": {\n            \"items\": {\n              \"properties\": {\n                \"basename\": {\n                  \"type\": \"string\"\n                },\n                \"value\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"type\": \"object\"\n            },\n            \"type\": \"array\"\n          },\n          \"date\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"excerpt\": {\n            \"type\": \"string\"\n          },\n          \"format\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"integer\"\n          },\n          \"keywords\": {\n            \"type\": \"string\"\n          },\n          \"modifiedDate\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"more\": {\n            \"type\": \"string\"\n          },\n          \"permalink\": {\n            \"type\": \"string\"\n          },\n          \"pingsSentUrl\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"status\": {\n            \"type\": \"string\"\n          },\n          \"tags\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"trackbackCount\": {\n            \"type\": \"integer\"\n          },\n          \"trackbacks\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/trackback\"\n            },\n            \"type\": \"array\"\n          },\n          \"unpublishedDate\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"updatable\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"entry_updatable\": {\n        \"properties\": {\n          \"allowComments\": {\n            \"type\": \"boolean\"\n          },\n          \"allowTrackbacks\": {\n            \"type\": \"boolean\"\n          },\n          \"assets\": {\n            \"items\": {\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"integer\"\n                }\n              },\n              \"type\": \"object\"\n            },\n            \"type\": \"array\"\n          },\n          \"basename\": {\n            \"type\": \"string\"\n          },\n          \"body\": {\n            \"type\": \"string\"\n          },\n          \"categories\": {\n            \"items\": {\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"integer\"\n                }\n              },\n              \"type\": \"object\"\n            },\n            \"type\": \"array\"\n          },\n          \"customFields\": {\n            \"items\": {\n              \"properties\": {\n                \"basename\": {\n                  \"type\": \"string\"\n                },\n                \"value\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"type\": \"object\"\n            },\n            \"type\": \"array\"\n          },\n          \"date\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"excerpt\": {\n            \"type\": \"string\"\n          },\n          \"format\": {\n            \"type\": \"string\"\n          },\n          \"keywords\": {\n            \"type\": \"string\"\n          },\n          \"more\": {\n            \"type\": \"string\"\n          },\n          \"status\": {\n            \"type\": \"string\"\n          },\n          \"tags\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"unpublishedDate\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"field\": {\n        \"description\": \"Updatable fields are name, description, required, options, default, basename, tag, systemObject, type\",\n        \"properties\": {\n          \"basename\": {\n            \"type\": \"string\"\n          },\n          \"blog\": {\n            \"properties\": {\n              \"id\": {\n                \"type\": \"integer\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"default\": {\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"integer\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"options\": {\n            \"type\": \"string\"\n          },\n          \"required\": {\n            \"type\": \"boolean\"\n          },\n          \"showInTheseCategories\": {\n            \"items\": {\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                },\n                \"label\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"type\": \"object\"\n            },\n            \"type\": \"array\"\n          },\n          \"systemObject\": {\n            \"type\": \"string\"\n          },\n          \"tag\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"updatable\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"field_updatable\": {\n        \"properties\": {\n          \"basename\": {\n            \"type\": \"string\"\n          },\n          \"default\": {\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"options\": {\n            \"type\": \"string\"\n          },\n          \"required\": {\n            \"type\": \"boolean\"\n          },\n          \"systemObject\": {\n            \"type\": \"string\"\n          },\n          \"tag\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"folder\": {\n        \"description\": \"Updatable fields are label, description, basename, parent, customFields\",\n        \"properties\": {\n          \"archiveLink\": {\n            \"type\": \"string\"\n          },\n          \"basename\": {\n            \"type\": \"string\"\n          },\n          \"blog\": {\n            \"properties\": {\n              \"id\": {\n                \"type\": \"integer\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"class\": {\n            \"type\": \"string\"\n          },\n          \"createdBy\": {\n            \"properties\": {\n              \"displayName\": {\n                \"type\": \"string\"\n              },\n              \"id\": {\n                \"type\": \"integer\"\n              },\n              \"userpicUrl\": {\n                \"type\": \"string\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"createdDate\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"customFields\": {\n            \"items\": {\n              \"properties\": {\n                \"basename\": {\n                  \"type\": \"string\"\n                },\n                \"value\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"type\": \"object\"\n            },\n            \"type\": \"array\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"integer\"\n          },\n          \"label\": {\n            \"type\": \"string\"\n          },\n          \"modifiedBy\": {\n            \"properties\": {\n              \"displayName\": {\n                \"type\": \"string\"\n              },\n              \"id\": {\n                \"type\": \"integer\"\n              },\n              \"userpicUrl\": {\n                \"type\": \"string\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"modifiedDate\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"parent\": {\n            \"type\": \"integer\"\n          },\n          \"path\": {\n            \"type\": \"string\"\n          },\n          \"updatable\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"folder_updatable\": {\n        \"properties\": {\n          \"basename\": {\n            \"type\": \"string\"\n          },\n          \"customFields\": {\n            \"items\": {\n              \"properties\": {\n                \"basename\": {\n                  \"type\": \"string\"\n                },\n                \"value\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"type\": \"object\"\n            },\n            \"type\": \"array\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"label\": {\n            \"type\": \"string\"\n          },\n          \"parent\": {\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"formatted_text\": {\n        \"description\": \"Updatable fields are label, text, description\",\n        \"properties\": {\n          \"blog\": {\n            \"properties\": {\n              \"id\": {\n                \"type\": \"integer\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"createdBy\": {\n            \"properties\": {\n              \"displayName\": {\n                \"type\": \"string\"\n              },\n              \"id\": {\n                \"type\": \"integer\"\n              },\n              \"userpicUrl\": {\n                \"type\": \"string\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"createdDate\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"integer\"\n          },\n          \"label\": {\n            \"type\": \"string\"\n          },\n          \"modifiedBy\": {\n            \"properties\": {\n              \"displayName\": {\n                \"type\": \"string\"\n              },\n              \"id\": {\n                \"type\": \"integer\"\n              },\n              \"userpicUrl\": {\n                \"type\": \"string\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"modifiedDate\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"text\": {\n            \"type\": \"string\"\n          },\n          \"updatable\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"formatted_text_updatable\": {\n        \"properties\": {\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"label\": {\n            \"type\": \"string\"\n          },\n          \"text\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"group\": {\n        \"description\": \"Updatable fields are status, name, displayName, description\",\n        \"properties\": {\n          \"createdBy\": {\n            \"properties\": {\n              \"displayName\": {\n                \"type\": \"string\"\n              },\n              \"id\": {\n                \"type\": \"integer\"\n              },\n              \"userpicUrl\": {\n                \"type\": \"string\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"createdDate\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"displayName\": {\n            \"type\": \"string\"\n          },\n          \"externalId\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"integer\"\n          },\n          \"memberCount\": {\n            \"type\": \"integer\"\n          },\n          \"modifiedBy\": {\n            \"properties\": {\n              \"displayName\": {\n                \"type\": \"string\"\n              },\n              \"id\": {\n                \"type\": \"integer\"\n              },\n              \"userpicUrl\": {\n                \"type\": \"string\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"modifiedDate\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"permissionCount\": {\n            \"type\": \"integer\"\n          },\n          \"status\": {\n            \"type\": \"string\"\n          },\n          \"updatable\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"group_updatable\": {\n        \"properties\": {\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"displayName\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"status\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"log\": {\n        \"description\": \"Updatable fields are class, message, level, metadata, category, by\",\n        \"properties\": {\n          \"blog\": {\n            \"properties\": {\n              \"id\": {\n                \"type\": \"integer\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"by\": {\n            \"properties\": {\n              \"displayName\": {\n                \"type\": \"string\"\n              },\n              \"id\": {\n                \"type\": \"integer\"\n              },\n              \"userpicUrl\": {\n                \"type\": \"string\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"category\": {\n            \"type\": \"string\"\n          },\n          \"class\": {\n            \"type\": \"string\"\n          },\n          \"date\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"integer\"\n          },\n          \"ip\": {\n            \"type\": \"string\"\n          },\n          \"level\": {\n            \"type\": \"string\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          },\n          \"metadata\": {\n            \"type\": \"string\"\n          },\n          \"updatable\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"log_updatable\": {\n        \"properties\": {\n          \"by\": {\n            \"properties\": {\n              \"displayName\": {\n                \"type\": \"string\"\n              },\n              \"id\": {\n                \"type\": \"integer\"\n              },\n              \"userpicUrl\": {\n                \"type\": \"string\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"category\": {\n            \"type\": \"string\"\n          },\n          \"class\": {\n            \"type\": \"string\"\n          },\n          \"level\": {\n            \"type\": \"string\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          },\n          \"metadata\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"page\": {\n        \"description\": \"Updatable fields are status, title, body, more, excerpt, keywords, tags, date, basename, format, unpublishedDate, customFields\",\n        \"properties\": {\n          \"assets\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/asset\"\n            },\n            \"type\": \"array\"\n          },\n          \"author\": {\n            \"properties\": {\n              \"displayName\": {\n                \"type\": \"string\"\n              },\n              \"id\": {\n                \"type\": \"integer\"\n              },\n              \"userpicUrl\": {\n                \"type\": \"string\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"basename\": {\n            \"type\": \"string\"\n          },\n          \"blog\": {\n            \"properties\": {\n              \"id\": {\n                \"type\": \"integer\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"body\": {\n            \"type\": \"string\"\n          },\n          \"categories\": {\n            \"items\": {\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"integer\"\n                },\n                \"label\": {\n                  \"type\": \"string\"\n                },\n                \"parent\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"type\": \"object\"\n            },\n            \"type\": \"array\"\n          },\n          \"class\": {\n            \"type\": \"string\"\n          },\n          \"createdDate\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"customFields\": {\n            \"items\": {\n              \"properties\": {\n                \"basename\": {\n                  \"type\": \"string\"\n                },\n                \"value\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"type\": \"object\"\n            },\n            \"type\": \"array\"\n          },\n          \"date\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"excerpt\": {\n            \"type\": \"string\"\n          },\n          \"folder\": {\n            \"properties\": {\n              \"id\": {\n                \"type\": \"integer\"\n              },\n              \"label\": {\n                \"type\": \"string\"\n              },\n              \"parent\": {\n                \"type\": \"string\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"format\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"integer\"\n          },\n          \"keywords\": {\n            \"type\": \"string\"\n          },\n          \"modifiedDate\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"more\": {\n            \"type\": \"string\"\n          },\n          \"permalink\": {\n            \"type\": \"string\"\n          },\n          \"status\": {\n            \"type\": \"string\"\n          },\n          \"tags\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"unpublishedDate\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"updatable\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"page_updatable\": {\n        \"properties\": {\n          \"basename\": {\n            \"type\": \"string\"\n          },\n          \"body\": {\n            \"type\": \"string\"\n          },\n          \"customFields\": {\n            \"items\": {\n              \"properties\": {\n                \"basename\": {\n                  \"type\": \"string\"\n                },\n                \"value\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"type\": \"object\"\n            },\n            \"type\": \"array\"\n          },\n          \"date\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"excerpt\": {\n            \"type\": \"string\"\n          },\n          \"format\": {\n            \"type\": \"string\"\n          },\n          \"keywords\": {\n            \"type\": \"string\"\n          },\n          \"more\": {\n            \"type\": \"string\"\n          },\n          \"status\": {\n            \"type\": \"string\"\n          },\n          \"tags\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"unpublishedDate\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"permission\": {\n        \"properties\": {\n          \"blog\": {\n            \"properties\": {\n              \"id\": {\n                \"type\": \"integer\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"createdBy\": {\n            \"properties\": {\n              \"displayName\": {\n                \"type\": \"string\"\n              },\n              \"id\": {\n                \"type\": \"integer\"\n              },\n              \"userpicUrl\": {\n                \"type\": \"string\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"createdDate\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"integer\"\n          },\n          \"permissions\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"roles\": {\n            \"properties\": {\n              \"id\": {\n                \"type\": \"integer\"\n              },\n              \"name\": {\n                \"type\": \"string\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"user\": {\n            \"properties\": {\n              \"displayName\": {\n                \"type\": \"string\"\n              },\n              \"id\": {\n                \"type\": \"integer\"\n              },\n              \"userpicUrl\": {\n                \"type\": \"string\"\n              }\n            },\n            \"type\": \"object\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"plugin\": {\n        \"properties\": {\n          \"attributes\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"authorLink\": {\n            \"type\": \"string\"\n          },\n          \"authorName\": {\n            \"type\": \"string\"\n          },\n          \"configLink\": {\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"documentLink\": {\n            \"type\": \"string\"\n          },\n          \"icon\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"junkFilters\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"pluginLink\": {\n            \"type\": \"string\"\n          },\n          \"pluginSet\": {\n            \"type\": \"string\"\n          },\n          \"signature\": {\n            \"type\": \"string\"\n          },\n          \"status\": {\n            \"type\": \"string\"\n          },\n          \"tags\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"textFilters\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"role\": {\n        \"description\": \"Updatable fields are name, description, permissions\",\n        \"properties\": {\n          \"createdBy\": {\n            \"properties\": {\n              \"displayName\": {\n                \"type\": \"string\"\n              },\n              \"id\": {\n                \"type\": \"integer\"\n              },\n              \"userpicUrl\": {\n                \"type\": \"string\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"createdDate\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"integer\"\n          },\n          \"modifiedBy\": {\n            \"properties\": {\n              \"displayName\": {\n                \"type\": \"string\"\n              },\n              \"id\": {\n                \"type\": \"integer\"\n              },\n              \"userpicUrl\": {\n                \"type\": \"string\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"modifiedDate\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"permissions\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"updatable\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"role_updatable\": {\n        \"properties\": {\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"permissions\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"statisticsdate\": {\n        \"properties\": {\n          \"date\": {\n            \"description\": \"The date of the target. The format is \\\"YYYY-MM-DD\\\".\",\n            \"format\": \"date\",\n            \"type\": \"string\"\n          },\n          \"pageviews\": {\n            \"description\": \"The pageviews for the path. This property exists only if the metrics to retrieve is \\\"pageviews\\\"\",\n            \"type\": \"string\"\n          },\n          \"visits\": {\n            \"description\": \"The visits for the path. This property exists only if the metrics to retrieve is \\\"visits\\\"\",\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"statisticspath\": {\n        \"properties\": {\n          \"archiveType\": {\n            \"description\": \"The archive type of the path. This property is null if the path is not managed by MT.\",\n            \"type\": \"string\"\n          },\n          \"author\": {\n            \"description\": \"This property is null if \\\"archiveType\\\" is neither \\\"Author\\\" nor \\\"Author-â\\\".\",\n            \"properties\": {\n              \"id\": {\n                \"description\": \"The ID of author.\",\n                \"type\": \"integer\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"category\": {\n            \"description\": \"This property is null if \\\"archiveType\\\" is neither \\\"Category\\\" nor \\\"Category-â\\\".\",\n            \"properties\": {\n              \"id\": {\n                \"description\": \"The ID of category.\",\n                \"type\": \"integer\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"entry\": {\n            \"description\": \"This property is null if \\\"archiveType\\\" is not \\\"Individual\\\".\",\n            \"properties\": {\n              \"id\": {\n                \"description\": \"The ID of entry.\",\n                \"type\": \"integer\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"pageviews\": {\n            \"description\": \"The pageviews for the path. This property exists only if the metrics to retrieve is \\\"pageviews\\\"\",\n            \"type\": \"string\"\n          },\n          \"path\": {\n            \"description\": \"The relative path of the target.\",\n            \"type\": \"string\"\n          },\n          \"visits\": {\n            \"description\": \"The visits for the path. This property exists only if the metrics to retrieve is \\\"visits\\\"\",\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"tag\": {\n        \"description\": \"Updatable fields are name\",\n        \"properties\": {\n          \"assetCount\": {\n            \"type\": \"integer\"\n          },\n          \"entryCount\": {\n            \"type\": \"integer\"\n          },\n          \"id\": {\n            \"type\": \"integer\"\n          },\n          \"isPrivate\": {\n            \"type\": \"boolean\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"normalizedName\": {\n            \"type\": \"string\"\n          },\n          \"pageCount\": {\n            \"type\": \"integer\"\n          },\n          \"updatable\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"tag_updatable\": {\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"template\": {\n        \"description\": \"Updatable fields are name, type, text, outputFile, templateType, linkToFile, buildType, customFields, contentType\",\n        \"properties\": {\n          \"archiveTypes\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/templatemap\"\n            },\n            \"type\": \"array\"\n          },\n          \"blog\": {\n            \"properties\": {\n              \"id\": {\n                \"type\": \"integer\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"buildType\": {\n            \"type\": \"string\"\n          },\n          \"contentType\": {\n            \"properties\": {\n              \"id\": {\n                \"type\": \"integer\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"createdBy\": {\n            \"properties\": {\n              \"displayName\": {\n                \"type\": \"string\"\n              },\n              \"id\": {\n                \"type\": \"integer\"\n              },\n              \"userpicUrl\": {\n                \"type\": \"string\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"createdDate\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"customFields\": {\n            \"items\": {\n              \"properties\": {\n                \"basename\": {\n                  \"type\": \"string\"\n                },\n                \"value\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"type\": \"object\"\n            },\n            \"type\": \"array\"\n          },\n          \"id\": {\n            \"type\": \"integer\"\n          },\n          \"linkToFile\": {\n            \"type\": \"string\"\n          },\n          \"modifiedBy\": {\n            \"properties\": {\n              \"displayName\": {\n                \"type\": \"string\"\n              },\n              \"id\": {\n                \"type\": \"integer\"\n              },\n              \"userpicUrl\": {\n                \"type\": \"string\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"modifiedDate\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"outputFile\": {\n            \"type\": \"string\"\n          },\n          \"templateType\": {\n            \"type\": \"string\"\n          },\n          \"text\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"updatable\": {\n            \"type\": \"boolean\"\n          },\n          \"widgets\": {\n            \"items\": {\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"integer\"\n                },\n                \"name\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"type\": \"object\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"template_updatable\": {\n        \"properties\": {\n          \"buildType\": {\n            \"type\": \"string\"\n          },\n          \"contentType\": {\n            \"properties\": {\n              \"id\": {\n                \"type\": \"integer\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"customFields\": {\n            \"items\": {\n              \"properties\": {\n                \"basename\": {\n                  \"type\": \"string\"\n                },\n                \"value\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"type\": \"object\"\n            },\n            \"type\": \"array\"\n          },\n          \"linkToFile\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"outputFile\": {\n            \"type\": \"string\"\n          },\n          \"templateType\": {\n            \"type\": \"string\"\n          },\n          \"text\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"templatemap\": {\n        \"description\": \"Updatable fields are archiveType, fileTemplate, isPreferred, buildType\",\n        \"properties\": {\n          \"archiveType\": {\n            \"type\": \"string\"\n          },\n          \"buildType\": {\n            \"type\": \"string\"\n          },\n          \"fileTemplate\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"integer\"\n          },\n          \"isPreferred\": {\n            \"type\": \"boolean\"\n          },\n          \"updatable\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"templatemap_updatable\": {\n        \"properties\": {\n          \"archiveType\": {\n            \"type\": \"string\"\n          },\n          \"buildType\": {\n            \"type\": \"string\"\n          },\n          \"fileTemplate\": {\n            \"type\": \"string\"\n          },\n          \"isPreferred\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"theme\": {\n        \"properties\": {\n          \"authorLink\": {\n            \"type\": \"string\"\n          },\n          \"authorName\": {\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"inUse\": {\n            \"type\": \"boolean\"\n          },\n          \"label\": {\n            \"type\": \"string\"\n          },\n          \"uninstallable\": {\n            \"type\": \"boolean\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"trackback\": {\n        \"description\": \"Updatable fields are customFields, status\",\n        \"properties\": {\n          \"blog\": {\n            \"properties\": {\n              \"id\": {\n                \"type\": \"integer\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"blogName\": {\n            \"type\": \"string\"\n          },\n          \"createdBy\": {\n            \"properties\": {\n              \"displayName\": {\n                \"type\": \"string\"\n              },\n              \"id\": {\n                \"type\": \"integer\"\n              },\n              \"userpicUrl\": {\n                \"type\": \"string\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"createdDate\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"customFields\": {\n            \"items\": {\n              \"properties\": {\n                \"basename\": {\n                  \"type\": \"string\"\n                },\n                \"value\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"type\": \"object\"\n            },\n            \"type\": \"array\"\n          },\n          \"date\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"entry\": {\n            \"type\": \"string\"\n          },\n          \"excerpt\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"integer\"\n          },\n          \"ip\": {\n            \"type\": \"string\"\n          },\n          \"modifiedBy\": {\n            \"properties\": {\n              \"displayName\": {\n                \"type\": \"string\"\n              },\n              \"id\": {\n                \"type\": \"integer\"\n              },\n              \"userpicUrl\": {\n                \"type\": \"string\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"modifiedDate\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"status\": {\n            \"type\": \"string\"\n          },\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"updatable\": {\n            \"type\": \"boolean\"\n          },\n          \"url\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"trackback_updatable\": {\n        \"properties\": {\n          \"customFields\": {\n            \"items\": {\n              \"properties\": {\n                \"basename\": {\n                  \"type\": \"string\"\n                },\n                \"value\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"type\": \"object\"\n            },\n            \"type\": \"array\"\n          },\n          \"status\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"user\": {\n        \"description\": \"Updatable fields are displayName, email, url, status, name, password, language, dateFormat, textFormat, tagDelimiter, systemPermissions, customFields, apiPassword\",\n        \"properties\": {\n          \"apiPassword\": {\n            \"type\": \"string\"\n          },\n          \"createdBy\": {\n            \"properties\": {\n              \"displayName\": {\n                \"type\": \"string\"\n              },\n              \"id\": {\n                \"type\": \"integer\"\n              },\n              \"userpicUrl\": {\n                \"type\": \"string\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"createdDate\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"customFields\": {\n            \"items\": {\n              \"properties\": {\n                \"basename\": {\n                  \"type\": \"string\"\n                },\n                \"value\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"type\": \"object\"\n            },\n            \"type\": \"array\"\n          },\n          \"dateFormat\": {\n            \"type\": \"string\"\n          },\n          \"displayName\": {\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"integer\"\n          },\n          \"isSuperuser\": {\n            \"type\": \"boolean\"\n          },\n          \"language\": {\n            \"type\": \"string\"\n          },\n          \"lockedOut\": {\n            \"type\": \"boolean\"\n          },\n          \"modifiedBy\": {\n            \"properties\": {\n              \"displayName\": {\n                \"type\": \"string\"\n              },\n              \"id\": {\n                \"type\": \"integer\"\n              },\n              \"userpicUrl\": {\n                \"type\": \"string\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"modifiedDate\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"type\": \"string\"\n          },\n          \"status\": {\n            \"type\": \"string\"\n          },\n          \"systemPermissions\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"tagDelimiter\": {\n            \"type\": \"string\"\n          },\n          \"textFormat\": {\n            \"type\": \"string\"\n          },\n          \"updatable\": {\n            \"type\": \"boolean\"\n          },\n          \"url\": {\n            \"type\": \"string\"\n          },\n          \"userpicUrl\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"user_updatable\": {\n        \"properties\": {\n          \"apiPassword\": {\n            \"type\": \"string\"\n          },\n          \"customFields\": {\n            \"items\": {\n              \"properties\": {\n                \"basename\": {\n                  \"type\": \"string\"\n                },\n                \"value\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"type\": \"object\"\n            },\n            \"type\": \"array\"\n          },\n          \"dateFormat\": {\n            \"type\": \"string\"\n          },\n          \"displayName\": {\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"language\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"type\": \"string\"\n          },\n          \"status\": {\n            \"type\": \"string\"\n          },\n          \"systemPermissions\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"tagDelimiter\": {\n            \"type\": \"string\"\n          },\n          \"textFormat\": {\n            \"type\": \"string\"\n          },\n          \"url\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"website\": {\n        \"description\": \"Updatable fields are name, description, url, archiveUrl, themeId, serverOffset, language, sitePath, archivePath, fileExtension, archiveTypePreferred, publishEmptyArchive, includeSystem, includeCache, useRevision, maxRevisionsEntry, maxRevisionsTemplate, listOnIndex, daysOrPosts, sortOrderPosts, wordsInExcerpt, basenameLimit, statusDefault, convertParas, contentCss, smartReplace, smartReplaceFields, junkFolderExpiry, junkScoreThreshold, nofollowUrls, followAuthLinks, sanitizeSpec, autolinkUrls, autodiscoverLinks, internalAutodiscovery, newCreatedUserRole, dateLanguage, customDynamicTemplates, customFields, allowCommentsDefault, allowComments, moderateComments, allowCommentHtml, emailNewComments, sortOrderComments, convertParasComments, useCommentConfirmation, allowCommenterRegist, allowUnregComments, requireCommentEmails, commenterAuthenticators, allowPingsDefault, allowPings, moderatePings, emailNewPings, pingGoogle, pingWeblogs, pingOthers, maxRevisionsContentData\",\n        \"properties\": {\n          \"allowCommentHtml\": {\n            \"type\": \"boolean\"\n          },\n          \"allowCommenterRegist\": {\n            \"type\": \"boolean\"\n          },\n          \"allowComments\": {\n            \"type\": \"boolean\"\n          },\n          \"allowCommentsDefault\": {\n            \"type\": \"boolean\"\n          },\n          \"allowPings\": {\n            \"type\": \"boolean\"\n          },\n          \"allowPingsDefault\": {\n            \"type\": \"boolean\"\n          },\n          \"allowToChangeAtUpload\": {\n            \"type\": \"boolean\"\n          },\n          \"allowUnregComments\": {\n            \"type\": \"boolean\"\n          },\n          \"archivePath\": {\n            \"type\": \"string\"\n          },\n          \"archiveTypePreferred\": {\n            \"type\": \"string\"\n          },\n          \"archiveUrl\": {\n            \"type\": \"string\"\n          },\n          \"autoRenameNonAscii\": {\n            \"type\": \"boolean\"\n          },\n          \"autodiscoverLinks\": {\n            \"type\": \"boolean\"\n          },\n          \"autolinkUrls\": {\n            \"type\": \"boolean\"\n          },\n          \"basenameLimit\": {\n            \"type\": \"integer\"\n          },\n          \"ccLicenseImage\": {\n            \"type\": \"string\"\n          },\n          \"ccLicenseUrl\": {\n            \"type\": \"string\"\n          },\n          \"class\": {\n            \"type\": \"string\"\n          },\n          \"commenterAuthenticators\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"contentCss\": {\n            \"type\": \"string\"\n          },\n          \"convertParas\": {\n            \"type\": \"string\"\n          },\n          \"convertParasComments\": {\n            \"type\": \"string\"\n          },\n          \"createdBy\": {\n            \"properties\": {\n              \"displayName\": {\n                \"type\": \"string\"\n              },\n              \"id\": {\n                \"type\": \"integer\"\n              },\n              \"userpicUrl\": {\n                \"type\": \"string\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"createdDate\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"customDynamicTemplates\": {\n            \"type\": \"string\"\n          },\n          \"customFields\": {\n            \"items\": {\n              \"properties\": {\n                \"basename\": {\n                  \"type\": \"string\"\n                },\n                \"value\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"type\": \"object\"\n            },\n            \"type\": \"array\"\n          },\n          \"dateLanguage\": {\n            \"type\": \"string\"\n          },\n          \"daysOrPosts\": {\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"dynamicCache\": {\n            \"type\": \"boolean\"\n          },\n          \"dynamicConditional\": {\n            \"type\": \"boolean\"\n          },\n          \"emailNewComments\": {\n            \"type\": \"string\"\n          },\n          \"emailNewPings\": {\n            \"type\": \"string\"\n          },\n          \"entryCustomPrefs\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"extraPath\": {\n            \"type\": \"string\"\n          },\n          \"fileExtension\": {\n            \"type\": \"string\"\n          },\n          \"followAuthLinks\": {\n            \"type\": \"boolean\"\n          },\n          \"host\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"integer\"\n          },\n          \"includeCache\": {\n            \"type\": \"boolean\"\n          },\n          \"includeSystem\": {\n            \"type\": \"string\"\n          },\n          \"internalAutodiscovery\": {\n            \"type\": \"boolean\"\n          },\n          \"junkFolderExpiry\": {\n            \"type\": \"integer\"\n          },\n          \"junkScoreThreshold\": {\n            \"format\": \"float\",\n            \"type\": \"number\"\n          },\n          \"language\": {\n            \"type\": \"string\"\n          },\n          \"listOnIndex\": {\n            \"type\": \"integer\"\n          },\n          \"maxRevisionsContentData\": {\n            \"type\": \"integer\"\n          },\n          \"maxRevisionsEntry\": {\n            \"type\": \"integer\"\n          },\n          \"maxRevisionsTemplate\": {\n            \"type\": \"integer\"\n          },\n          \"moderateComments\": {\n            \"type\": \"integer\"\n          },\n          \"moderatePings\": {\n            \"type\": \"boolean\"\n          },\n          \"modifiedBy\": {\n            \"properties\": {\n              \"displayName\": {\n                \"type\": \"string\"\n              },\n              \"id\": {\n                \"type\": \"integer\"\n              },\n              \"userpicUrl\": {\n                \"type\": \"string\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"modifiedDate\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"newCreatedUserRoles\": {\n            \"items\": {\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"integer\"\n                },\n                \"name\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"type\": \"object\"\n            },\n            \"type\": \"array\"\n          },\n          \"nofollowUrls\": {\n            \"type\": \"boolean\"\n          },\n          \"normalizeOrientation\": {\n            \"type\": \"boolean\"\n          },\n          \"operationIfExists\": {\n            \"type\": \"integer\"\n          },\n          \"pageCustomPrefs\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"parent\": {\n            \"properties\": {\n              \"id\": {\n                \"type\": \"integer\"\n              },\n              \"name\": {\n                \"type\": \"string\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"pingGoogle\": {\n            \"type\": \"boolean\"\n          },\n          \"pingOthers\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"pingWeblogs\": {\n            \"type\": \"boolean\"\n          },\n          \"publishEmptyArchive\": {\n            \"type\": \"boolean\"\n          },\n          \"relativeUrl\": {\n            \"type\": \"string\"\n          },\n          \"requireCommentEmails\": {\n            \"type\": \"boolean\"\n          },\n          \"sanitizeSpec\": {\n            \"type\": \"string\"\n          },\n          \"serverOffset\": {\n            \"type\": \"string\"\n          },\n          \"sitePath\": {\n            \"type\": \"string\"\n          },\n          \"smartReplace\": {\n            \"type\": \"integer\"\n          },\n          \"smartReplaceFields\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"sortOrderComments\": {\n            \"type\": \"string\"\n          },\n          \"sortOrderPosts\": {\n            \"type\": \"string\"\n          },\n          \"statusDefault\": {\n            \"type\": \"string\"\n          },\n          \"themeId\": {\n            \"type\": \"string\"\n          },\n          \"timezone\": {\n            \"type\": \"string\"\n          },\n          \"updatable\": {\n            \"type\": \"boolean\"\n          },\n          \"uploadDestination\": {\n            \"properties\": {\n              \"path\": {\n                \"type\": \"string\"\n              },\n              \"raw\": {\n                \"type\": \"string\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"url\": {\n            \"type\": \"string\"\n          },\n          \"useCommentConfirmation\": {\n            \"type\": \"boolean\"\n          },\n          \"useRevision\": {\n            \"type\": \"boolean\"\n          },\n          \"wordsInExcerpt\": {\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"website_updatable\": {\n        \"properties\": {\n          \"allowCommentHtml\": {\n            \"type\": \"boolean\"\n          },\n          \"allowCommenterRegist\": {\n            \"type\": \"boolean\"\n          },\n          \"allowComments\": {\n            \"type\": \"boolean\"\n          },\n          \"allowCommentsDefault\": {\n            \"type\": \"boolean\"\n          },\n          \"allowPings\": {\n            \"type\": \"boolean\"\n          },\n          \"allowPingsDefault\": {\n            \"type\": \"boolean\"\n          },\n          \"allowUnregComments\": {\n            \"type\": \"boolean\"\n          },\n          \"archivePath\": {\n            \"type\": \"string\"\n          },\n          \"archiveTypePreferred\": {\n            \"type\": \"string\"\n          },\n          \"archiveUrl\": {\n            \"type\": \"string\"\n          },\n          \"autodiscoverLinks\": {\n            \"type\": \"boolean\"\n          },\n          \"autolinkUrls\": {\n            \"type\": \"boolean\"\n          },\n          \"basenameLimit\": {\n            \"type\": \"integer\"\n          },\n          \"commenterAuthenticators\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"contentCss\": {\n            \"type\": \"string\"\n          },\n          \"convertParas\": {\n            \"type\": \"string\"\n          },\n          \"convertParasComments\": {\n            \"type\": \"string\"\n          },\n          \"customDynamicTemplates\": {\n            \"type\": \"string\"\n          },\n          \"customFields\": {\n            \"items\": {\n              \"properties\": {\n                \"basename\": {\n                  \"type\": \"string\"\n                },\n                \"value\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"type\": \"object\"\n            },\n            \"type\": \"array\"\n          },\n          \"dateLanguage\": {\n            \"type\": \"string\"\n          },\n          \"daysOrPosts\": {\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"emailNewComments\": {\n            \"type\": \"string\"\n          },\n          \"emailNewPings\": {\n            \"type\": \"string\"\n          },\n          \"fileExtension\": {\n            \"type\": \"string\"\n          },\n          \"followAuthLinks\": {\n            \"type\": \"boolean\"\n          },\n          \"includeCache\": {\n            \"type\": \"boolean\"\n          },\n          \"includeSystem\": {\n            \"type\": \"string\"\n          },\n          \"internalAutodiscovery\": {\n            \"type\": \"boolean\"\n          },\n          \"junkFolderExpiry\": {\n            \"type\": \"integer\"\n          },\n          \"junkScoreThreshold\": {\n            \"format\": \"float\",\n            \"type\": \"number\"\n          },\n          \"language\": {\n            \"type\": \"string\"\n          },\n          \"listOnIndex\": {\n            \"type\": \"integer\"\n          },\n          \"maxRevisionsContentData\": {\n            \"type\": \"integer\"\n          },\n          \"maxRevisionsEntry\": {\n            \"type\": \"integer\"\n          },\n          \"maxRevisionsTemplate\": {\n            \"type\": \"integer\"\n          },\n          \"moderateComments\": {\n            \"type\": \"integer\"\n          },\n          \"moderatePings\": {\n            \"type\": \"boolean\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"nofollowUrls\": {\n            \"type\": \"boolean\"\n          },\n          \"pingGoogle\": {\n            \"type\": \"boolean\"\n          },\n          \"pingOthers\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"pingWeblogs\": {\n            \"type\": \"boolean\"\n          },\n          \"publishEmptyArchive\": {\n            \"type\": \"boolean\"\n          },\n          \"requireCommentEmails\": {\n            \"type\": \"boolean\"\n          },\n          \"sanitizeSpec\": {\n            \"type\": \"string\"\n          },\n          \"serverOffset\": {\n            \"type\": \"string\"\n          },\n          \"sitePath\": {\n            \"type\": \"string\"\n          },\n          \"smartReplace\": {\n            \"type\": \"integer\"\n          },\n          \"smartReplaceFields\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"sortOrderComments\": {\n            \"type\": \"string\"\n          },\n          \"sortOrderPosts\": {\n            \"type\": \"string\"\n          },\n          \"statusDefault\": {\n            \"type\": \"string\"\n          },\n          \"themeId\": {\n            \"type\": \"string\"\n          },\n          \"url\": {\n            \"type\": \"string\"\n          },\n          \"useCommentConfirmation\": {\n            \"type\": \"boolean\"\n          },\n          \"useRevision\": {\n            \"type\": \"boolean\"\n          },\n          \"wordsInExcerpt\": {\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      }\n    },\n    \"securitySchemes\": {\n      \"mtauth\": {\n        \"description\": \"MTAuth accessToken={accessToken}\",\n        \"in\": \"header\",\n        \"name\": \"X-MT-Authorization\",\n        \"type\": \"apiKey\"\n      }\n    }\n  },\n  \"externalDocs\": {\n    \"description\": \"Find out more about Movable Type Data API\",\n    \"url\": \"https://www.movabletype.jp/developers/data-api/\"\n  },\n  \"info\": {\n    \"title\": \"Movable Type Data API\",\n    \"version\": \"r.5401\"\n  },\n  \"openapi\": \"3.0.0\",\n  \"paths\": {\n    \"/\": {\n      \"get\": {\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          }\n        },\n        \"summary\": \"Retrieve OpenAPI schema\",\n        \"tags\": [\n          \"Common API\"\n        ]\n      }\n    },\n    \"/assets/upload\": {\n      \"post\": {\n        \"description\": \"#### Permissions\\n\\n- upload\\n\",\n        \"parameters\": [\n          {\n            \"description\": \"If specify \\\"1\\\", the API always overwrites an existing file with the uploaded file. This parameter has been available since Movable Type 6.1.2\",\n            \"in\": \"query\",\n            \"name\": \"overwrite_once\",\n            \"schema\": {\n              \"enum\": [\n                0,\n                1\n              ],\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"properties\": {\n                  \"autoRenameIfExists\": {\n                    \"default\": 0,\n                    \"description\": \"If this value is \\\"1\\\" and a file with the same filename exists, the uploaded file is automatically renamed to a random generated name. Default is \\\"0\\\".\",\n                    \"enum\": [\n                      0,\n                      1\n                    ],\n                    \"type\": \"integer\"\n                  },\n                  \"autoRenameNonAscii\": {\n                    \"description\": \"If this value is \\\"1\\\", the filename is renamed non-ascii filename automatically\",\n                    \"enum\": [\n                      0,\n                      1\n                    ],\n                    \"type\": \"integer\"\n                  },\n                  \"file\": {\n                    \"description\": \"Actual file data\",\n                    \"format\": \"binary\",\n                    \"type\": \"string\"\n                  },\n                  \"normalizeOrientation\": {\n                    \"default\": 1,\n                    \"description\": \"If this value is \\\"1\\\" and the uploaded file has orientation information in Exif data, this file's orientation is automatically normalized. Default is \\\"1\\\".\",\n                    \"enum\": [\n                      0,\n                      1\n                    ],\n                    \"type\": \"integer\"\n                  },\n                  \"path\": {\n                    \"description\": \"The upload destination. You can specify the path to the under the site path.\",\n                    \"type\": \"string\"\n                  },\n                  \"site_id\": {\n                    \"description\": \"The site ID.\",\n                    \"type\": \"integer\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/asset\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to upload.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site not found.\"\n          },\n          \"409\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"error\": {\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"integer\"\n                        },\n                        \"data\": {\n                          \"properties\": {\n                            \"fileName\": {\n                              \"type\": \"string\"\n                            },\n                            \"path\": {\n                              \"type\": \"string\"\n                            },\n                            \"temp\": {\n                              \"type\": \"string\"\n                            }\n                          },\n                          \"type\": \"object\"\n                        },\n                        \"message\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"type\": \"object\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Uploaded file already exists.\"\n          },\n          \"413\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Upload file size is larger than CGIMaxUpload.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Upload a file\",\n        \"tags\": [\n          \"Assets\"\n        ]\n      }\n    },\n    \"/authentication\": {\n      \"delete\": {\n        \"description\": \"Invalidate current session. This is like logout. All access tokens related to that session are invalidated too.\\n\\nAuthorization is required. but if there is an effective session, user can revoke by the following methods.\\n\\nIn the case of a web browser, can be authorized by httponly-cookie.\\n\\nIn the case of other than a browser, can be authorized by sending a sessionId that is retrieved via authentication endpoints in MTAuth request header.\\n\\n`MTAuth sessionId={retrieved sessionId}`\\n\\n#### Notes\\n- This method accepts DELETE and POST with __method=DELETE.\\n\",\n        \"parameters\": [\n          {\n            \"description\": \"Input `MTAuth sessionId={sessionId}`\",\n            \"in\": \"header\",\n            \"name\": \"X-MT-Authorization\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"clientId\": {\n                    \"description\": \"This is not required if you specify session id via \\\"X-MT-Authorization\\\" request header. You can create new access token if you have a session id related to this clientId, although you do not have an access token. \",\n                    \"type\": \"string\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"description\": \"The value of this parameter is always \\\"success\\\".\",\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"405\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Request method is not DELETE or POST with __method=DELETE\"\n          }\n        },\n        \"summary\": \"Invalidate current access token. This is not logout\",\n        \"tags\": [\n          \"Authentication\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"Create a new session and access token. This is like sign-in.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"clientId\": {\n                    \"description\": \"This is not required if you specify session id via \\\"X-MT-Authorization\\\" request header. You can create new access token if you have a session id related to this clientId, although you do not have an access token. \",\n                    \"type\": \"string\"\n                  },\n                  \"mtDataApiLoginMagicToken\": {\n                    \"description\": \"This is not required if you authenticate except via browser. If this parameter is passed and valid the MT will set cookie in order to start a session. \",\n                    \"type\": \"string\"\n                  },\n                  \"password\": {\n                    \"description\": \"Your Web Service Password\",\n                    \"format\": \"password\",\n                    \"type\": \"string\"\n                  },\n                  \"remember\": {\n                    \"description\": \"If true (generally, \\\"1\\\" is specified.), a new session will be created as a persistent session. If you want to specify false, you can pass \\\"\\\" or \\\"0\\\" to this parameter.\",\n                    \"enum\": [\n                      0,\n                      1\n                    ],\n                    \"type\": \"integer\"\n                  },\n                  \"username\": {\n                    \"description\": \"Your Sign-in Name\",\n                    \"type\": \"string\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"accessToken\": {\n                      \"description\": \"Access token\",\n                      \"type\": \"string\"\n                    },\n                    \"expiresIn\": {\n                      \"description\": \"This access token will be invalidated automatically after the number of seconds specified here.\",\n                      \"type\": \"integer\"\n                    },\n                    \"remember\": {\n                      \"description\": \"If true, a new session has been created as a persistent session.\",\n                      \"type\": \"boolean\"\n                    },\n                    \"sessionId\": {\n                      \"description\": \"Session ID. This value is included only when mtDataApiLoginMagicToken is not passed. If mtDataApiLoginMagicToken is passed (and is valid value), sessionId is stored in httponly-cookie.\",\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          }\n        },\n        \"summary\": \"User authentication by username and password\",\n        \"tags\": [\n          \"Authentication\"\n        ]\n      }\n    },\n    \"/authorization\": {\n      \"get\": {\n        \"description\": \"Return authorization(login) form as HTML.\",\n        \"parameters\": [\n          {\n            \"description\": \"This is required. When you succeed in login, you are redirected to the redirectUrl with \\\"#_login\\\". \",\n            \"in\": \"query\",\n            \"name\": \"redirectUrl\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"This is required. the client ID of the application.\",\n            \"in\": \"query\",\n            \"name\": \"clientId\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"text/html\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          }\n        },\n        \"summary\": \"Return authorization(login) form as HTML\",\n        \"tags\": [\n          \"Authentication\"\n        ]\n      }\n    },\n    \"/endpoints\": {\n      \"get\": {\n        \"description\": \"Retrieve a list of endpoints.\",\n        \"parameters\": [\n          {\n            \"description\": \"This is an optional parameter. The comma separated ID list of components (a.k.a plugin) to include to result. \",\n            \"in\": \"query\",\n            \"name\": \"includeComponents\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"This is an optional parameter. The comma separated ID list of components (a.k.a plugin) to exclude from result. \",\n            \"in\": \"query\",\n            \"name\": \"excludeComponents\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"description\": \"An array of Endpoints resource.\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/endpoint\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"description\": \"The total number of endpoints found.\",\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          }\n        },\n        \"summary\": \"Retrieve a list of endpoints\",\n        \"tags\": [\n          \"Endpoints\"\n        ]\n      }\n    },\n    \"/groups\": {\n      \"get\": {\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/group_search\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/group_searchFields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/group_limit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/group_offset\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/group_sortBy\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/group_sortOrder\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/group_fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/group_dateField\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/group_dateFrom\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/group_dateTo\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"description\": \"An array of group resource.\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/group\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"description\": \" The total number of groups.\",\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the requested groups.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Retrieve a list of groups\",\n        \"tags\": [\n          \"Groups\"\n        ]\n      },\n      \"post\": {\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"group\": {\n                    \"$ref\": \"#/components/schemas/group_updatable\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/group\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to create a group.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Create a new group\",\n        \"tags\": [\n          \"Groups\"\n        ]\n      }\n    },\n    \"/groups/synchronize\": {\n      \"post\": {\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to synchronize groups.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Synchronize groups\",\n        \"tags\": [\n          \"Groups\"\n        ]\n      }\n    },\n    \"/groups/{group_id}\": {\n      \"delete\": {\n        \"description\": \"\\n#### Notes\\n- This method accepts DELETE and POST with __method=DELETE.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"group_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/group\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to delete a group.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Group not found.\"\n          },\n          \"405\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Request method is not DELETE or POST with __method=DELETE\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Delete a group\",\n        \"tags\": [\n          \"Groups\"\n        ]\n      },\n      \"get\": {\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"group_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/group_fields\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/group\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the requested group.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Group not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Retrieve single group by its ID\",\n        \"tags\": [\n          \"Groups\"\n        ]\n      },\n      \"put\": {\n        \"description\": \"\\n#### Notes\\n- This method accepts PUT and POST with __method=PUT.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"group_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"group\": {\n                    \"$ref\": \"#/components/schemas/group_updatable\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/group\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to update a group.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Group not found.\"\n          },\n          \"405\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Request method is not PUT or POST with __method=PUT\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Update a group\",\n        \"tags\": [\n          \"Groups\"\n        ]\n      }\n    },\n    \"/groups/{group_id}/members\": {\n      \"get\": {\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"group_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/group_search\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/group_searchFields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/group_limit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/group_offset\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/group_sortBy\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/group_sortOrder\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/group_fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/user_dateField\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/user_dateFrom\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/user_dateTo\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"description\": \"An array of member resource.\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/user\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"description\": \" The total number of members.\",\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the list of group members.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Group not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Retrieve a list of members for specified group\",\n        \"tags\": [\n          \"Groups\"\n        ]\n      },\n      \"post\": {\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"group_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"member\": {\n                    \"properties\": {\n                      \"id\": {\n                        \"type\": \"integer\"\n                      }\n                    },\n                    \"type\": \"object\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/user\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to add a member to group.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Group or Member not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"tags\": [\n          \"Groups\"\n        ]\n      }\n    },\n    \"/groups/{group_id}/members/{member_id}\": {\n      \"delete\": {\n        \"description\": \"\\n#### Notes\\n- This method accepts DELETE and POST with __method=DELETE.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"group_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"member_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/user\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to remove a member from group.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Group or Member not found.\"\n          },\n          \"405\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Request method is not DELETE or POST with __method=DELETE\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"tags\": [\n          \"Groups\"\n        ]\n      },\n      \"get\": {\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"group_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"member_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/group_fields\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/user\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the requested group member.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Group or Member not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Retrieve single member by its ID for specified group\",\n        \"tags\": [\n          \"Groups\"\n        ]\n      }\n    },\n    \"/groups/{group_id}/permissions\": {\n      \"get\": {\n        \"description\": \"- Authentication is required\\n- If you want to get others list, you should have Administer privilege.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"group_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/permission_limit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/permission_offset\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/permission_sortBy\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/permission_sortOrder\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/permission_fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/permission_blogIds\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/permission_dateField\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/permission_dateFrom\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/permission_dateTo\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"description\": \"An array of permission resource.\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/association\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"description\": \" The total number of permissions.\",\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the requested group's permissions.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Group not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Retrieve a list of permissions for group\",\n        \"tags\": [\n          \"Groups\",\n          \"Permissions\"\n        ]\n      }\n    },\n    \"/groups/{group_id}/permissions/grant\": {\n      \"post\": {\n        \"description\": \"- Authentication is required\\n- You should have grant_administer_role or grant_role_for_blog (Need grant_administer_role when granting role having administer_blog)\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"group_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"role_id\": {\n                    \"description\": \"The role ID\",\n                    \"type\": \"integer\"\n                  },\n                  \"site_id\": {\n                    \"description\": \"The site ID\",\n                    \"type\": \"integer\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to grant a permission.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Group not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Grant permissions to group\",\n        \"tags\": [\n          \"Groups\",\n          \"Permissions\"\n        ]\n      }\n    },\n    \"/groups/{group_id}/permissions/revoke\": {\n      \"post\": {\n        \"description\": \"- Authentication is required\\n- You should have revoke_role(Need revoke_administer_role when granting role having administer_blog )\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"group_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"role_id\": {\n                    \"description\": \"The role ID\",\n                    \"type\": \"integer\"\n                  },\n                  \"site_id\": {\n                    \"description\": \"The site ID\",\n                    \"type\": \"integer\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to revoke a permission.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Group not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Revoke permissions from group\",\n        \"tags\": [\n          \"Groups\",\n          \"Permissions\"\n        ]\n      }\n    },\n    \"/permissions\": {\n      \"get\": {\n        \"description\": \"- Authentication is required\\n- Need Administer privilege.\\n\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/permission_limit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/permission_offset\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/permission_sortBy\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/permission_sortOrder\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/permission_fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/permission_blogIds\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/permission_dateField\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/permission_dateFrom\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/permission_dateTo\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"description\": \"An array of permission resource.\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/permission\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"description\": \" The total number of permissions.\",\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the list of permissions.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Retrieve a list of permissions\",\n        \"tags\": [\n          \"Permissions\"\n        ]\n      }\n    },\n    \"/plugins\": {\n      \"get\": {\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"description\": \"An array of plugin resource.\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/plugin\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"description\": \" The total number of plugins.\",\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the list of plugins.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Retrieve a list of plugins in the specified site\",\n        \"tags\": [\n          \"Plugins\"\n        ]\n      }\n    },\n    \"/plugins/disable\": {\n      \"post\": {\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to disable all plugins.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Plugin not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Disable all plugins\",\n        \"tags\": [\n          \"Plugins\"\n        ]\n      }\n    },\n    \"/plugins/enable\": {\n      \"post\": {\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to enable all plugins.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Plugin not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Enable all plugins\",\n        \"tags\": [\n          \"Plugins\"\n        ]\n      }\n    },\n    \"/plugins/{plugin_id}\": {\n      \"get\": {\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"plugin_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/plugin\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the requested plugin.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Plugin not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Retrieve single plugin by its ID\",\n        \"tags\": [\n          \"Plugins\"\n        ]\n      }\n    },\n    \"/plugins/{plugin_id}/disable\": {\n      \"post\": {\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"plugin_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to disable a plugin.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Plugin not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Disable a plugin\",\n        \"tags\": [\n          \"Plugins\"\n        ]\n      }\n    },\n    \"/plugins/{plugin_id}/enable\": {\n      \"post\": {\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"plugin_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to enable a plugin.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Plugin not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Enable a plugin\",\n        \"tags\": [\n          \"Plugins\"\n        ]\n      }\n    },\n    \"/publish/contentData\": {\n      \"get\": {\n        \"description\": \"**Authentication Required** Publish content data. This endpoint requires following permissions.\\n\\n- Manage Content Data (site, sistem, each content type)\\n- Edit All Content Data (each content type)\\n\",\n        \"parameters\": [\n          {\n            \"description\": \"Target site ID. Either blogID or blogIds must be specified.\",\n            \"in\": \"query\",\n            \"name\": \"blogId\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"The comma separated site ID list. Either blogID or blogIds must be specified.\",\n            \"in\": \"query\",\n            \"name\": \"blogIds\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"The comma separated content data ID list. You should specifiy this parameter to next call if this endpoint returns âRebuildingâ status and you want to continue to publish.\",\n            \"in\": \"query\",\n            \"name\": \"ids\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"The string of build start time. You should specifiy this parameter to next call if this endpoint returns âRebuildingâ status and you want to continue to publish.\",\n            \"in\": \"query\",\n            \"name\": \"startTime\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"restIds\": {\n                      \"description\": \"The comma separated content data ID list. You should specifiy this parameter to next call if this endpoint returns 'Rebuilding' status and you want to continue to publish.\",\n                      \"type\": \"string\"\n                    },\n                    \"startTime\": {\n                      \"description\": \"The string of build start time. You should specifiy this parameter to next call if this endpoint returns 'Rebuilding' status and you want to continue to publish.\",\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"description\": \"\\\"The result status of this call. `Rebuilding`: It means that there is still content that needs to be rebuilt. / `Complete`: Publishing process has been finished.\",\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to publish content_data.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Publish Content Data\",\n        \"tags\": [\n          \"Content Data\",\n          \"Publish\"\n        ]\n      }\n    },\n    \"/publish/entries\": {\n      \"get\": {\n        \"description\": \"Rebuild the static archives in relation to specified entries.\\n\\nAuthorization is required.\\n\",\n        \"parameters\": [\n          {\n            \"description\": \"This is an required parameter. The comma separated ID list of entries to rebuild.\",\n            \"in\": \"query\",\n            \"name\": \"ids\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"This is an optional parameter.\",\n            \"in\": \"query\",\n            \"name\": \"blogId\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"This is an optional parameter.\",\n            \"in\": \"query\",\n            \"name\": \"startTime\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"restIds\": {\n                      \"description\": \"The comma separated ID list of entries which has not been rebuilt\",\n                      \"type\": \"string\"\n                    },\n                    \"startTime\": {\n                      \"description\": \"The time which started rebuilding.\",\n                      \"format\": \"date-time\",\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"description\": \"The status text of this rebuild.\\n\\n#### Rebuilding\\n\\nNot yet completed.\\nUser should start next phase that implies by X-MT-Next-Phase-URL response header.\\n(In JavaScript library, a next phase is started automatically.)\\n\\n#### Complete\\n\\nAll the static archives were rebuilded.\\n\",\n                      \"enum\": [\n                        \"Rebuilding\",\n                        \"Complete\"\n                      ],\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"OK\",\n            \"headers\": {\n              \"X-MT-Next-Phase-URL\": {\n                \"description\": \"If status is \\\"Rebuilding\\\", user should start next phase that implies by this header, manually.(In JavaScript library, a next phase is started automatically.) \",\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to publish.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Rebuild the static archives in relation to specified entries\",\n        \"tags\": [\n          \"Entries\",\n          \"Publish\"\n        ]\n      }\n    },\n    \"/recover_password\": {\n      \"post\": {\n        \"description\": \"- This method always returns successful code if it does not found a user, because security reason.\\n- Authentication is not required.\\n\\n#### Permissions\\n\\n- administer\\n\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"email\": {\n                    \"description\": \"Email address for user\",\n                    \"type\": \"string\"\n                  },\n                  \"name\": {\n                    \"description\": \"Name for user\",\n                    \"type\": \"string\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or User not found\"\n          }\n        },\n        \"summary\": \"Send the link for password recovery to specified email\",\n        \"tags\": [\n          \"Users\"\n        ]\n      }\n    },\n    \"/roles\": {\n      \"get\": {\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/role_search\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/role_searchFields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/role_limit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/role_offset\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/role_sortBy\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/role_sortOrder\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/role_fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/role_dateField\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/role_dateFrom\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/role_dateTo\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"description\": \"An array of role resource. \",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/role\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"description\": \" The total number of roles.\",\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the list of roles.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Retrieve a list of roles\",\n        \"tags\": [\n          \"Roles\"\n        ]\n      },\n      \"post\": {\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"role\": {\n                    \"$ref\": \"#/components/schemas/role_updatable\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/role\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to create a role.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Create a new role\",\n        \"tags\": [\n          \"Roles\"\n        ]\n      }\n    },\n    \"/roles/{role_id}\": {\n      \"delete\": {\n        \"description\": \"\\n#### Notes\\n- This method accepts DELETE and POST with __method=DELETE.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"role_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/role\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to delete a role.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Role not found.\"\n          },\n          \"405\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Request method is not DELETE or POST with __method=DELETE\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Delete an existing role\",\n        \"tags\": [\n          \"Roles\"\n        ]\n      },\n      \"get\": {\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"role_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/role_fields\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/role\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the requested role.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Role not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Retrieve a single role by its ID\",\n        \"tags\": [\n          \"Roles\"\n        ]\n      },\n      \"put\": {\n        \"description\": \"\\n#### Notes\\n- This method accepts PUT and POST with __method=PUT.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"role_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"role\": {\n                    \"$ref\": \"#/components/schemas/role_updatable\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/role\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to update a role.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Role not found.\"\n          },\n          \"405\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Request method is not PUT or POST with __method=PUT\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Update an existing role\",\n        \"tags\": [\n          \"Roles\"\n        ]\n      }\n    },\n    \"/roles/{role_id}/permissions\": {\n      \"get\": {\n        \"description\": \"- Authentication is required\\n\\n#### Permissions\\n\\n- Administer\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"role_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/permission_limit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/permission_offset\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/permission_sortBy\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/permission_sortOrder\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/permission_fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/permission_blogIds\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/permission_dateField\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/permission_dateFrom\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/permission_dateTo\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"description\": \"An array of permission resource.\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/permission\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"description\": \" The total number of permissions.\",\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the list of permissions.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Role not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Retrieve a list of permissions by role\",\n        \"tags\": [\n          \"Roles\",\n          \"Permissions\"\n        ]\n      }\n    },\n    \"/search\": {\n      \"get\": {\n        \"parameters\": [\n          {\n            \"description\": \"Input `MTAuth accessToken={accessToken}`\",\n            \"in\": \"header\",\n            \"name\": \"X-MT-Authorization\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"The search term.\\n\\nYou can specify search term, like [foo], [foo AND bar], 'foo NOT bar'.\\n\\nAlso, you can specify category filter, like [category:foo], [category:\\\"hoge OR 'foo bar'\\\"]\\n\\nAlso, you can specify author filter, like [author:Melody]\\n\\nAlso, you can specify Custom Fields filter, like [field:address:akasaka] in this case, address is basename of Custom Fields. akasaka is filter value.\\n\",\n            \"in\": \"query\",\n            \"name\": \"search\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"The site ID for search. If you want to specify multiple site ID, you must use IncludeBlogs.\",\n            \"in\": \"query\",\n            \"name\": \"blog_id\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"The list of the site ID that will be included in the search it should be separated by comma.\",\n            \"in\": \"query\",\n            \"name\": \"IncludeBlogs\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"The list of the site ID will be excluded from the search it should be separated by comma.\",\n            \"in\": \"query\",\n            \"name\": \"ExcludeBlogs\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"Maximum number of entries to retrieve.\\n\\n**Default**: 20\\n\",\n            \"in\": \"query\",\n            \"name\": \"limit\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"0-indexed offset.\\n\\n**Default**: 0\\n\",\n            \"in\": \"query\",\n            \"name\": \"offset\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"The sort column for the search results. Available values are as follows.\\n\\n#### created_on\\n\\nWill sort the entries by the authored on date.\\n\\n#### title\\n\\nWill sort the entries by title.\\n\",\n            \"in\": \"query\",\n            \"name\": \"SearchSortBy\",\n            \"schema\": {\n              \"enum\": [\n                \"created_on\",\n                \"title\"\n              ],\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"Defines the sort order search results. Available values are as follows.\\n\\n#### ascend\\n\\nwill list the entries in chronological order (oldest entry at the top)\\n\\n#### descend\\n\\nwill list the entries in reverse chronological order (newest entry at the top).\\n\\n**Default**: ascend\\n\",\n            \"in\": \"query\",\n            \"name\": \"SearchResultDisplay\",\n            \"schema\": {\n              \"default\": \"ascend\",\n              \"enum\": [\n                \"ascend\",\n                \"descend\"\n              ],\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"Maximum number of entries to retrieve.\\n\\nNOTE: By default, \\\"SearchMaxResults\\\" override is disabled.\\n\\n**Default**: 20\\n\",\n            \"in\": \"query\",\n            \"name\": \"SearchMaxResults\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Class name of the object to be searched. Available values are as follows.\\n\\n- entry: Search results will only contain entries.\\n- page: Search results will only contain pages.\\n\",\n            \"in\": \"query\",\n            \"name\": \"class\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"If 1 specified, searching content data only.\",\n            \"in\": \"query\",\n            \"name\": \"cdSearch\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"description\": \"An array of Entries resource. \",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/entry\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"description\": \" The total number of entries.\",\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to search objects.\"\n          }\n        },\n        \"summary\": \"Searching entries\",\n        \"tags\": [\n          \"Search\"\n        ]\n      }\n    },\n    \"/sites\": {\n      \"get\": {\n        \"parameters\": [\n          {\n            \"description\": \"Input `MTAuth accessToken={accessToken}`\",\n            \"in\": \"header\",\n            \"name\": \"X-MT-Authorization\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/site_search\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/site_searchFields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/site_limit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/site_offset\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/site_sortBy\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/site_sortOrder\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/site_fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/site_includeIds\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/site_excludeIds\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/site_dateField\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/site_dateFrom\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/site_dateTo\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"description\": \"An array of sites resource. The list will sorted descending by blog name. \",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/blog\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"description\": \"The total number of sites found.\",\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the list of blogs.\"\n          }\n        },\n        \"summary\": \"Retrieve sites\",\n        \"tags\": [\n          \"Sites\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"- Authorization is required.\\n\\n#### Permissions\\n\\n- create_website\\n\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"website\": {\n                    \"$ref\": \"#/components/schemas/blog_updatable\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/blog\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to create a website.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Create a new website\",\n        \"tags\": [\n          \"Sites\"\n        ]\n      }\n    },\n    \"/sites/{site_id}\": {\n      \"delete\": {\n        \"description\": \"- Authorization is required.\\n\\n#### Permissions\\n\\n- delete_website (for website)\\n- delete_blog (for blog)\\n\\n#### Notes\\n- This method accepts DELETE and POST with __method=DELETE.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/blog\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to delete a site.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site not found.\"\n          },\n          \"405\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Request method is not DELETE or POST with __method=DELETE\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Delete an existing blog or website\",\n        \"tags\": [\n          \"Sites\"\n        ]\n      },\n      \"get\": {\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Input `MTAuth accessToken={accessToken}`\",\n            \"in\": \"header\",\n            \"name\": \"X-MT-Authorization\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"This is an optional parameter. The field list to retrieve as part of the Entries resource. If this parameter is not specified, All fields will be returned.\",\n            \"in\": \"query\",\n            \"name\": \"fields\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/blog\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the requested blog.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Not Found\"\n          }\n        },\n        \"summary\": \"Retrieve a single blog by its ID\",\n        \"tags\": [\n          \"Sites\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"- Authorization is required.\\n\\n#### Permissions\\n\\n- create_blog\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"blog\": {\n                    \"$ref\": \"#/components/schemas/blog_updatable\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/blog\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to create a blog.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Create a new blog\",\n        \"tags\": [\n          \"Sites\"\n        ]\n      },\n      \"put\": {\n        \"description\": \"- Authorization is required.\\n\\n#### Permissions\\n\\n- edit_blog_config\\n\\n#### Notes\\n- This method accepts PUT and POST with __method=PUT.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"website\": {\n                    \"$ref\": \"#/components/schemas/blog_updatable\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/blog\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to update a site.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site not found.\"\n          },\n          \"405\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Request method is not PUT or POST with __method=PUT\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Update an existing blog or website\",\n        \"tags\": [\n          \"Sites\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/assets\": {\n      \"get\": {\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Input `MTAuth accessToken={accessToken}`\",\n            \"in\": \"header\",\n            \"name\": \"X-MT-Authorization\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/asset_search\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/asset_searchFields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/asset_limit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/asset_offset\"\n          },\n          {\n            \"description\": \"The target asset class to retrieve. Supported values are image, audio, video, file and any values added by plugins. If you want to retrieve multiple classes, specify the values separated by commas.\",\n            \"in\": \"query\",\n            \"name\": \"class\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"#### file_name\\n\\nSort by the filename of each asset.\\n\\n#### created_by\\n\\nSort by the ID of user who created each asset.\\n\\n#### created_on\\n\\n(default) Sort by the created time of each asset.\\n\\n**Default**: created_on\\n\",\n            \"in\": \"query\",\n            \"name\": \"sortBy\",\n            \"schema\": {\n              \"default\": \"created_on\",\n              \"enum\": [\n                \"file_name\",\n                \"created_by\",\n                \"created_on\"\n              ],\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/asset_sortOrder\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/asset_fields\"\n          },\n          {\n            \"description\": \"If you want to retrieve related assets (e.g. thumbnail, popup html) that generated by original asset, you should specify this parameter as true.\",\n            \"in\": \"query\",\n            \"name\": \"relatedAssets\",\n            \"schema\": {\n              \"enum\": [\n                0,\n                1\n              ],\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/asset_dateField\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/asset_dateFrom\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/asset_dateTo\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/asset\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the requested assets.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site not found.\"\n          }\n        },\n        \"summary\": \"Retrieve assets in the specified site\",\n        \"tags\": [\n          \"Assets\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/assets/upload\": {\n      \"post\": {\n        \"deprecated\": true,\n        \"description\": \"This endpoint is marked as deprecated in v2.0.\\n\\nUpload single file to specific site.\\n\\n#### Permissions\\n\\n- upload\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"properties\": {\n                  \"autoRenameIfExists\": {\n                    \"description\": \"If this value is \\\"1\\\" and the file with the same filename exists, the uploaded file is automatically renamed to the random generated name. Default is \\\"0\\\".\",\n                    \"enum\": [\n                      0,\n                      1\n                    ],\n                    \"type\": \"integer\"\n                  },\n                  \"file\": {\n                    \"description\": \"The actual file data\",\n                    \"format\": \"binary\",\n                    \"type\": \"string\"\n                  },\n                  \"normalizeOrientation\": {\n                    \"description\": \"If this value is \\\"1\\\" and the uploaded file has a orientation information in Exif, this file's orientation is automatically normalized. Default is \\\"1\\\".\",\n                    \"enum\": [\n                      0,\n                      1\n                    ],\n                    \"type\": \"integer\"\n                  },\n                  \"path\": {\n                    \"description\": \"The upload destination. You can specify the path to the under the site path.\",\n                    \"type\": \"string\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/asset\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to upload.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Not Found\"\n          },\n          \"409\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"error\": {\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"integer\"\n                        },\n                        \"data\": {\n                          \"properties\": {\n                            \"fileName\": {\n                              \"type\": \"string\"\n                            },\n                            \"path\": {\n                              \"type\": \"string\"\n                            },\n                            \"temp\": {\n                              \"type\": \"string\"\n                            }\n                          },\n                          \"type\": \"object\"\n                        },\n                        \"message\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"type\": \"object\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Conflict\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Upload a file\",\n        \"tags\": [\n          \"Assets\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/assets/{asset_id}\": {\n      \"delete\": {\n        \"description\": \"- Authorization is required.\\n\\n#### Permissions\\n\\n- Manage Assets\\n\\n#### Notes\\n- This method accepts DELETE and POST with __method=DELETE.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"asset_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/asset\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to delete an asset.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Asset (or site) not found.\"\n          },\n          \"405\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Request method is not DELETE or POST with __method=DELETE\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Delete an asset\",\n        \"tags\": [\n          \"Assets\"\n        ]\n      },\n      \"get\": {\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"asset_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Input `MTAuth accessToken={accessToken}`\",\n            \"in\": \"header\",\n            \"name\": \"X-MT-Authorization\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/asset_fields\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/asset\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the requested asset.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Asset (or site) not found.\"\n          }\n        },\n        \"summary\": \"Retrieve single asset by its ID\",\n        \"tags\": [\n          \"Assets\"\n        ]\n      },\n      \"put\": {\n        \"description\": \"- Authorization is required.\\n\\n#### Permissions\\n\\n- Manage Assets\\n\\n#### Notes\\n- This method accepts PUT and POST with __method=PUT.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"asset_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"asset\": {\n                    \"$ref\": \"#/components/schemas/asset_updatable\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/asset\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to update an asset.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Asset (or site) not found.\"\n          },\n          \"405\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Request method is not PUT or POST with __method=PUT\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Update an asset\",\n        \"tags\": [\n          \"Assets\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/assets/{asset_id}/entries\": {\n      \"get\": {\n        \"description\": \"- Authorization is required to include unpublished entries.\\n\\n#### Permissions\\n\\n- edit_entry\\n  - to retrieve unpublished entry\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"asset_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Input `MTAuth accessToken={accessToken}`\",\n            \"in\": \"header\",\n            \"name\": \"X-MT-Authorization\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_search\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_searchFields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_limit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_offset\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_sortBy\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_sortOrder\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_includeIds\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_excludeIds\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_status\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_maxComments\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_maxTrackbacks\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_no_text_filter\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_dateField\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_dateFrom\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_dateTo\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"description\": \"An array of Entries resource. \",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/entry\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"description\": \" The total number of entries.\",\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the list of entries.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Asset not found.\"\n          }\n        },\n        \"summary\": \"Retrieve a list of entries that related with specific asset\",\n        \"tags\": [\n          \"Entries\",\n          \"Assets\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/assets/{asset_id}/pages\": {\n      \"get\": {\n        \"description\": \"- Authorization is required to include unpublished pages.\\n\\n#### Permissions\\n\\n- manage_pages\\n  - to retrieve unpublished page\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"asset_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Input `MTAuth accessToken={accessToken}`\",\n            \"in\": \"header\",\n            \"name\": \"X-MT-Authorization\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_search\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_searchFields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_limit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_offset\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_sortBy\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_sortOrder\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_includeIds\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_excludeIds\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_status\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_maxComments\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_maxTrackbacks\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_no_text_filter\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_dateField\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_dateFrom\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_dateTo\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"description\": \"An array of page resource.\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/page\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"description\": \" The total number of pages.\",\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the requested pages.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Asset not found.\"\n          }\n        },\n        \"summary\": \"Retrieve a list of pages that related with specific asset\",\n        \"tags\": [\n          \"Pages\",\n          \"Assets\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/assets/{asset_id}/thumbnail\": {\n      \"get\": {\n        \"description\": \"This endpoint requires one of parameter 'width' or 'height' or 'scale' Also, cannot use these parameters at same time.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"asset_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"The width of the thumbnail to generate. If this is the only parameter specified then the thumbnail's width will be scaled proportionally to the height. When a value longer than the original image is specified, it will be ignored.\",\n            \"in\": \"query\",\n            \"name\": \"width\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"The height of the thumbnail to generate. If this is the only parameter specified then the thumbnail's height will be scaled proportionally to the width. When both of height and width are specified, the longer side of the original image will be processed, and the lesser side will be scaled proportionally.\",\n            \"in\": \"query\",\n            \"name\": \"height\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"The percentage by which to reduce or increase the size of the current asset.\",\n            \"in\": \"query\",\n            \"name\": \"scale\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"If set to \\\"1\\\" then the thumbnail generated will be square, where the length of each side of the square will be equal to the shortest side of the image.\",\n            \"in\": \"query\",\n            \"name\": \"square\",\n            \"schema\": {\n              \"enum\": [\n                0,\n                1\n              ],\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"height\": {\n                      \"type\": \"integer\"\n                    },\n                    \"url\": {\n                      \"type\": \"string\"\n                    },\n                    \"width\": {\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the requested thumbnail.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Asset (or site) not found.\"\n          }\n        },\n        \"summary\": \"Get thumbnail of an asset\",\n        \"tags\": [\n          \"Assets\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/backup\": {\n      \"get\": {\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"backupFiles\": {\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to back up the requested site.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Backup specified site\",\n        \"tags\": [\n          \"Sites\",\n          \"BackupRestore\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/categories\": {\n      \"get\": {\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Input `MTAuth accessToken={accessToken}`\",\n            \"in\": \"header\",\n            \"name\": \"X-MT-Authorization\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/category_search\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/category_searchFields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/category_limit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/category_offset\"\n          },\n          {\n            \"description\": \"#### user_custom\\n\\nSort order you specified on the Manage Categories screen.\\n\\n#### created_by\\n\\nSort by the ID of user who created each category.\\n\\n#### id\\n\\nSort by the ID of each category.\\n\\n#### basename\\nSort by the basename of each category.\\n\\n#### label\\n\\nSort by the label of each category.\\n\\n**Default**: user_custom\\n\",\n            \"in\": \"query\",\n            \"name\": \"sortBy\",\n            \"schema\": {\n              \"default\": \"user_custom\",\n              \"enum\": [\n                \"user_custom\",\n                \"created_by\",\n                \"id\",\n                \"basename\",\n                \"label\"\n              ],\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/category_sortOrder\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/category_fields\"\n          },\n          {\n            \"description\": \"If set to 1, retrieves only top level categories. New in v2\\n\\n**Default**: 0\\n\",\n            \"in\": \"query\",\n            \"name\": \"top\",\n            \"schema\": {\n              \"default\": 0,\n              \"enum\": [\n                0,\n                1\n              ],\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/category_includeIds\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/category_excludeIds\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/category_dateField\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/category_dateFrom\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/category_dateTo\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/category\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the list of categories.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site not found.\"\n          }\n        },\n        \"summary\": \"Retrieve categories in the specified site\",\n        \"tags\": [\n          \"Categories\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"Authorization is required.\\n\\n#### Permission\\n\\n- Manage Categories\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"category\": {\n                    \"$ref\": \"#/components/schemas/category_updatable\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/category\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to create a category.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Create a new category\",\n        \"tags\": [\n          \"Categories\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/categories/permutate\": {\n      \"post\": {\n        \"description\": \"- Authorization is required.\\n- This method returns rearranged Categories resource.\\n\\n#### Permission\\n\\n- Manage Categories\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"categories\": {\n                    \"description\": \"Array of category resource that were rearranged.\",\n                    \"example\": \"[\\n  { \\\"id\\\": 0 },\\n  { \\\"id\\\": 1 } \\n]\\n\",\n                    \"type\": \"string\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/category\"\n                  },\n                  \"type\": \"array\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to permutate categories.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Rearrange existing categories in a new order\",\n        \"tags\": [\n          \"Categories\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/categories/{category_id}\": {\n      \"delete\": {\n        \"description\": \"- Authorization is required.\\n- This method returns deleted Category resource.\\n\\n#### Permission\\n\\n- Manage Categories\\n\\n#### Notes\\n- This method accepts DELETE and POST with __method=DELETE.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"category_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/category\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to delete a category.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Category not found.\"\n          },\n          \"405\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Request method is not DELETE or POST with __method=DELETE\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Delete an existing category\",\n        \"tags\": [\n          \"Categories\"\n        ]\n      },\n      \"get\": {\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"category_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Input `MTAuth accessToken={accessToken}`\",\n            \"in\": \"header\",\n            \"name\": \"X-MT-Authorization\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/category_fields\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/category\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the requested category.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Category or site not found.\"\n          }\n        },\n        \"summary\": \"Retrieve single category by its ID\",\n        \"tags\": [\n          \"Categories\"\n        ]\n      },\n      \"put\": {\n        \"description\": \"- Authorization is required.\\n\\n#### Permission\\n\\n- Manage Categories\\n\\n#### Notes\\n- This method accepts PUT and POST with __method=PUT.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"category_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"category\": {\n                    \"$ref\": \"#/components/schemas/category_updatable\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/category\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to update a category.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Category not found.\"\n          },\n          \"405\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Request method is not PUT or POST with __method=PUT\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Update an existing category\",\n        \"tags\": [\n          \"Categories\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/categories/{category_id}/children\": {\n      \"get\": {\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"category_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Input `MTAuth accessToken={accessToken}`\",\n            \"in\": \"header\",\n            \"name\": \"X-MT-Authorization\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"The depth of retrieving parent categories.\\n\\n**Default**: 0\\n\",\n            \"in\": \"query\",\n            \"name\": \"maxDepth\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"#### 1\\n\\nThe list does not include current category.\\n\\n#### 0\\n\\nThe list includes current category.\\n\\n**Default**: 0\\n\",\n            \"in\": \"query\",\n            \"name\": \"includeCurrent\",\n            \"schema\": {\n              \"default\": 0,\n              \"enum\": [\n                0,\n                1\n              ],\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/category\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the list of categories.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Category not found.\"\n          }\n        },\n        \"summary\": \"Retrieve child categories from the specified category\",\n        \"tags\": [\n          \"Categories\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/categories/{category_id}/entries\": {\n      \"get\": {\n        \"description\": \"- Authorization is required to include unpublished entries.\\n\\n#### Permissions\\n\\n- edit_entry\\n  - to retrieve unpublished entry\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"category_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Input `MTAuth accessToken={accessToken}`\",\n            \"in\": \"header\",\n            \"name\": \"X-MT-Authorization\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_search\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_searchFields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_limit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_offset\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_sortBy\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_sortOrder\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_includeIds\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_excludeIds\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_status\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_maxComments\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_maxTrackbacks\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_no_text_filter\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_dateField\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_dateFrom\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_dateTo\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"description\": \"An array of Entries resource. \",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/entry\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"description\": \" The total number of entries.\",\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the list of entries.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Category not found.\"\n          }\n        },\n        \"summary\": \"Retrieve a list of entries by specific category\",\n        \"tags\": [\n          \"Entries\",\n          \"Categories\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/categories/{category_id}/parents\": {\n      \"get\": {\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"category_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Input `MTAuth accessToken={accessToken}`\",\n            \"in\": \"header\",\n            \"name\": \"X-MT-Authorization\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"The depth of retrieving parent categories.\\n\\n**Default**: 0\\n\",\n            \"in\": \"query\",\n            \"name\": \"maxDepth\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"#### 1\\n\\nThe list does not include current category.\\n\\n#### 0\\n\\nThe list includes current category.\\n\\n**Default**: 0\\n\",\n            \"in\": \"query\",\n            \"name\": \"includeCurrent\",\n            \"schema\": {\n              \"default\": 0,\n              \"enum\": [\n                0,\n                1\n              ],\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/category\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the list of categories.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Category not found.\"\n          }\n        },\n        \"summary\": \"Retrieve parent categories from the specified category\",\n        \"tags\": [\n          \"Categories\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/categories/{category_id}/siblings\": {\n      \"get\": {\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"category_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Input `MTAuth accessToken={accessToken}`\",\n            \"in\": \"header\",\n            \"name\": \"X-MT-Authorization\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/category_search\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/category_searchFields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/category_limit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/category_offset\"\n          },\n          {\n            \"description\": \"#### user_custom\\n\\nSort order you specified on the Manage Categories screen.\\n\\n#### created_by\\n\\nSort by the ID of user who created each category.\\n\\n#### id\\n\\nSort by the ID of each category.\\n\\n#### basename\\n\\nSort by the basename of each category.\\n\\n#### label\\n\\nSort by the label of each category.\\n\\n**Default**: user_custom\\n\",\n            \"in\": \"query\",\n            \"name\": \"sortBy\",\n            \"schema\": {\n              \"default\": \"user_custom\",\n              \"enum\": [\n                \"user_custom\",\n                \"created_by\",\n                \"id\",\n                \"basename\",\n                \"label\"\n              ],\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/category_sortOrder\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/category_fields\"\n          },\n          {\n            \"description\": \"If set to 1, retrieves only top level categories. New in v2\\n\\n**Default**: 0\\n\",\n            \"in\": \"query\",\n            \"name\": \"top\",\n            \"schema\": {\n              \"default\": 0,\n              \"enum\": [\n                0,\n                1\n              ],\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/category_includeIds\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/category_excludeIds\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/category_dateField\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/category_dateFrom\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/category_dateTo\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/category\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the list of categories.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Category not found.\"\n          }\n        },\n        \"summary\": \"Retrieve siblings categories from the specified category\",\n        \"tags\": [\n          \"Categories\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/categorySets\": {\n      \"get\": {\n        \"description\": \"Retrieve list of category set in the specified site. Authentication required if you want retrieve private field in categorySet resource. Required permissions are as follows.\\n\\n- Manage Category Set\\n- If you use search parameter, you must specify search parameter with searchFields parameter. (This will be fixed in a future release.)\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Input `MTAuth accessToken={accessToken}`\",\n            \"in\": \"header\",\n            \"name\": \"X-MT-Authorization\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/category_set_search\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/category_set_searchFields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/category_set_limit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/category_set_offset\"\n          },\n          {\n            \"description\": \"The field name for sort. You can specify one of following values.\\n\\n- id\\n- name\\n- created_on\\n- modified_on\\n- content_type_count\\n\",\n            \"in\": \"query\",\n            \"name\": \"sortBy\",\n            \"schema\": {\n              \"default\": \"name\",\n              \"enum\": [\n                \"id\",\n                \"name\",\n                \"created_on\",\n                \"modified_on\",\n                \"content_type_count\"\n              ],\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/category_set_sortOrder\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/category_set_fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/category_set_includeIds\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/category_set_excludeIds\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/category_set_dateField\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/category_set_dateFrom\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/category_set_dateTo\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/category_set\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the list of category sets.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site not found.\"\n          }\n        },\n        \"summary\": \"Category Set Collection\",\n        \"tags\": [\n          \"Category Sets\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"**Authentication Required**\\n\\nCreate a new category set. This endpoint requires following permissions.\\n\\n- Manage Category Set\\n\\nPost form data is following\\n\\n- category_set (CategorySet) - Single CategorySet resource\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"category_set\": {\n                    \"$ref\": \"#/components/schemas/category_set_updatable\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/category_set\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to create a category set.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Create a new category set\",\n        \"tags\": [\n          \"Category Sets\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/categorySets/{category_set_id}\": {\n      \"delete\": {\n        \"description\": \"**Authentication required** Delete a single category set. This endpoint requires following permissions.\\n\\n- Manage Category Set\\n\\n#### Notes\\n- This method accepts DELETE and POST with __method=DELETE.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"category_set_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/category_set\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to delete a category set.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Category_set not found.\"\n          },\n          \"405\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Request method is not DELETE or POST with __method=DELETE\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Delete category set\",\n        \"tags\": [\n          \"Category Sets\"\n        ]\n      },\n      \"get\": {\n        \"description\": \"Fetch a single category set. Authentication required if you want retrieve private field in categorySet resource. Required permissions are as follows.\\n\\n- Manage Category Set\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"category_set_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Input `MTAuth accessToken={accessToken}`\",\n            \"in\": \"header\",\n            \"name\": \"X-MT-Authorization\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/category_set_fields\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/category_set\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the requested category set.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Category_set not found.\"\n          }\n        },\n        \"summary\": \"Fetch single category set\",\n        \"tags\": [\n          \"Category Sets\"\n        ]\n      },\n      \"put\": {\n        \"description\": \"**Authentication required** Update single category set. This endpoint requires following permissions.\\n\\n- Manage Category Set\\n\\nCannot update/insert/delete categories by this endpoint. If you want to manage categories in category set, please use Categories API.\\n\\n#### Notes\\n- This method accepts PUT and POST with __method=PUT.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"category_set_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"category_set\": {\n                    \"$ref\": \"#/components/schemas/category_set_updatable\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/category_set\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to update a category set.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Category_set not found.\"\n          },\n          \"405\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Request method is not PUT or POST with __method=PUT\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Update category set\",\n        \"tags\": [\n          \"Category Sets\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/categorySets/{category_set_id}/categories\": {\n      \"get\": {\n        \"description\": \"Retrieve list of categories of the specified category set.\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"category_set_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Input `MTAuth accessToken={accessToken}`\",\n            \"in\": \"header\",\n            \"name\": \"X-MT-Authorization\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"The depth of retrieving parent categories.\",\n            \"in\": \"query\",\n            \"name\": \"maxDepth\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"- 1: The list does not include current category.\\n- 0: The list includes current category.\\n\",\n            \"in\": \"query\",\n            \"name\": \"includeCurrent\",\n            \"schema\": {\n              \"default\": 0,\n              \"enum\": [\n                0,\n                1\n              ],\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/category_dateField\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/category_dateFrom\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/category_dateTo\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/category\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the requested categories for category set. \"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Category_set not found.\"\n          }\n        },\n        \"summary\": \"Category Collection for category set\",\n        \"tags\": [\n          \"Categories\",\n          \"Category Sets\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"**Authentication required.**\\n\\nCreate a new category in category set. This endpoint needs following permissions.\\n\\n- Manage Category Set\\n\\nPost form data is following:\\n\\n- category (Category) - Category resource\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"category_set_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"category\": {\n                    \"$ref\": \"#/components/schemas/category_updatable\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/category\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to create a category for category set.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site pr Category_set not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Create a new category for category set\",\n        \"tags\": [\n          \"Categories\",\n          \"Category Sets\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/categorySets/{category_set_id}/categories/permutate\": {\n      \"post\": {\n        \"description\": \"**Authentication required.**\\n\\nSave hierarchical categories order. This endpoint need folllowing permissions.\\n\\n- Manage Category Set\\n\\nThis method returns rearranged Categories collection.\\n\\nPost form data is following:\\n\\n- categories (array[Category]) - Array of Categories resource that were rearranged.\\n\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"category_set_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"categories\": {\n                    \"description\": \"Array of category resource that were rearranged.\",\n                    \"example\": \"[\\n  { \\\"id\\\": 0 },\\n  { \\\"id\\\": 1 } \\n]\\n\",\n                    \"type\": \"string\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/category\"\n                  },\n                  \"type\": \"array\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to permutate categories for category set.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Category_set not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Save hierarchical categories order in category set\",\n        \"tags\": [\n          \"Categories\",\n          \"Category Sets\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/categorySets/{category_set_id}/categories/{category_id}\": {\n      \"delete\": {\n        \"description\": \"**Authentication required.**\\n\\nUpdate an existing category. This endpoint need folllowing permissions.\\n\\n- Manage Category Set\\n\\n#### Notes\\n- This method accepts DELETE and POST with __method=DELETE.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"category_set_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"category_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/category\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to delete a category for category set.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Category_set or Category not found.\"\n          },\n          \"405\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Request method is not DELETE or POST with __method=DELETE\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Delete single category in category set\",\n        \"tags\": [\n          \"Categories\",\n          \"Category Sets\"\n        ]\n      },\n      \"get\": {\n        \"description\": \"Retrieve a single category by its ID.\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"category_set_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"category_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Input `MTAuth accessToken={accessToken}`\",\n            \"in\": \"header\",\n            \"name\": \"X-MT-Authorization\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/category_fields\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/category\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the requested category for category set.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Category or site not found.\"\n          }\n        },\n        \"summary\": \"Fetch single category in category set\",\n        \"tags\": [\n          \"Categories\",\n          \"Category Sets\"\n        ]\n      },\n      \"put\": {\n        \"description\": \"**Authentication required.**\\n\\nUpdate an existing category. This endpoint need folllowing permissions.\\n\\n- Manage Categoy Set\\n\\nPost form data is following:\\n\\n- category (Category) - Category resource\\n\\n#### Notes\\n- This method accepts PUT and POST with __method=PUT.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"category_set_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"category_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"category\": {\n                    \"$ref\": \"#/components/schemas/category_updatable\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/category\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to update a category for category set.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Category_set or Category not found.\"\n          },\n          \"405\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Request method is not PUT or POST with __method=PUT\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Update single category in category set\",\n        \"tags\": [\n          \"Categories\",\n          \"Category Sets\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/categorySets/{category_set_id}/categories/{category_id}/children\": {\n      \"get\": {\n        \"description\": \"Retrieve list of child categories of the specified category set.\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"category_set_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"category_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Input `MTAuth accessToken={accessToken}`\",\n            \"in\": \"header\",\n            \"name\": \"X-MT-Authorization\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"The depth of retrieving parent categories.\",\n            \"in\": \"query\",\n            \"name\": \"maxDepth\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"- 1: The list does not include current category.\\n- 0: The list includes current category.\\n\",\n            \"in\": \"query\",\n            \"name\": \"includeCurrent\",\n            \"schema\": {\n              \"default\": 0,\n              \"enum\": [\n                0,\n                1\n              ],\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/category\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the requested categories for category set.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Category_set not found.\"\n          }\n        },\n        \"summary\": \"Category Collection of child categories for category set\",\n        \"tags\": [\n          \"Categories\",\n          \"Category Sets\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/categorySets/{category_set_id}/categories/{category_id}/parents\": {\n      \"get\": {\n        \"description\": \"Retrieve list of parent categories of the specified category set.\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"category_set_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"category_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Input `MTAuth accessToken={accessToken}`\",\n            \"in\": \"header\",\n            \"name\": \"X-MT-Authorization\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"The depth of retrieving parent categories.\",\n            \"in\": \"query\",\n            \"name\": \"maxDepth\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"- 1: The list does not include current category.\\n- 0: The list includes current category.\\n\",\n            \"in\": \"query\",\n            \"name\": \"includeCurrent\",\n            \"schema\": {\n              \"default\": 0,\n              \"enum\": [\n                0,\n                1\n              ],\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/category\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the requested categories for category set.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Category_set or Category not found.\"\n          }\n        },\n        \"summary\": \"Category Collection of parent categories for category set\",\n        \"tags\": [\n          \"Categories\",\n          \"Category Sets\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/categorySets/{category_set_id}/categories/{category_id}/siblings\": {\n      \"get\": {\n        \"description\": \"Retrieve list of sibling categories of the specified category set.\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"category_set_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"category_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Input `MTAuth accessToken={accessToken}`\",\n            \"in\": \"header\",\n            \"name\": \"X-MT-Authorization\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/category_search\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/category_searchFields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/category_limit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/category_offset\"\n          },\n          {\n            \"description\": \"- user_custom: Sort order you specified on the Manage Categories screen.\\n- created_by: Sort by the ID of user who created each category.\\n- id: Sort by the ID of each category.\\n- basename: Sort by the basename of each category.\\n- label: Sort by the label of each category.\\n\",\n            \"in\": \"query\",\n            \"name\": \"sortBy\",\n            \"schema\": {\n              \"default\": \"user_custom\",\n              \"enum\": [\n                \"user_custom\",\n                \"created_by\",\n                \"id\",\n                \"basename\",\n                \"label\"\n              ],\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/category_sortOrder\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/category_fields\"\n          },\n          {\n            \"description\": \"If set to 1, retrieves only top level categories. New in v2\",\n            \"in\": \"query\",\n            \"name\": \"top\",\n            \"schema\": {\n              \"default\": 0,\n              \"enum\": [\n                0,\n                1\n              ],\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/category_includeIds\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/category_excludeIds\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/category_dateField\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/category_dateFrom\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/category_dateTo\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/category\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the requested categories for category set.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Category_set or Category not found.\"\n          }\n        },\n        \"summary\": \"Category Collection of sibling categories for category set\",\n        \"tags\": [\n          \"Categories\",\n          \"Category Sets\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/children\": {\n      \"get\": {\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Input `MTAuth accessToken={accessToken}`\",\n            \"in\": \"header\",\n            \"name\": \"X-MT-Authorization\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/site_search\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/site_searchFields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/site_limit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/site_offset\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/site_sortBy\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/site_sortOrder\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/site_fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/site_includeIds\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/site_excludeIds\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/site_dateField\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/site_dateFrom\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/site_dateTo\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"description\": \"An array of sites resource. The list will sorted descending by blog name. \",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/blog\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"description\": \"The total number of sites found.\",\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the list of blogs.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site not found.\"\n          }\n        },\n        \"summary\": \"Retrieve sites by parent ID\",\n        \"tags\": [\n          \"Sites\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/comments\": {\n      \"get\": {\n        \"description\": \"Retrieve a list of comments.\\n\\nAuthorization is required to include unpublished comments\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Input `MTAuth accessToken={accessToken}`\",\n            \"in\": \"header\",\n            \"name\": \"X-MT-Authorization\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"This is an optional parameter. Maximum number of comments to retrieve. Default is 10.\",\n            \"in\": \"query\",\n            \"name\": \"limit\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"This is an optional parameter. 0-indexed offset. Default is 0.\",\n            \"in\": \"query\",\n            \"name\": \"offset\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"This is an optional parameter. The comma separated ID list of comments to include to result.\",\n            \"in\": \"query\",\n            \"name\": \"includeIds\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"This is an optional parameter. The comma separated ID list of comments to exclude from result.\",\n            \"in\": \"query\",\n            \"name\": \"excludeIds\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"This is an optional parameter. Filter by status.\\n#### Approved\\ncomment_visible is 1 and comment_junk_status is 1.\\n#### Pending\\ncomment_visible is 0 and comment_junk_status is 1.\\n#### Spam\\ncomment_junk_status is -1.\\n\",\n            \"in\": \"query\",\n            \"name\": \"status\",\n            \"schema\": {\n              \"enum\": [\n                \"Approved\",\n                \"Pending\",\n                \"Spam\"\n              ],\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"This is an optional parameter. Filter by parent entry's status.\\n#### Draft\\nentry_status is 1.\\n#### Publish\\nentry_status is 2.\\n#### Review\\nentry_status is 3.\\n#### Future\\nentry_status is 4.\\n#### Spam\\nentry_status is 5.\\n\",\n            \"in\": \"query\",\n            \"name\": \"entryStatus\",\n            \"schema\": {\n              \"enum\": [\n                \"Draft\",\n                \"Publish\",\n                \"Review\",\n                \"Future\",\n                \"Spam\"\n              ],\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/comment_dateField\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/comment_dateFrom\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/comment_dateTo\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"description\": \"An array of Comments resource. The list will sorted from oldest to newest by comment_id and comment_parent_id.\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/comment\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"description\": \"The total number of comments found.\",\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the list of comments.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Not Found\"\n          }\n        },\n        \"summary\": \"Retrieve a list of comments\",\n        \"tags\": [\n          \"Comments\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/comments/{comment_id}\": {\n      \"delete\": {\n        \"description\": \"Delete a comment.\\n\\nAuthorization is required.\\n\\n#### Notes\\n- This method accepts DELETE and POST with __method=DELETE.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"comment_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/comment\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to delete a comment.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Not Found\"\n          },\n          \"405\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Request method is not DELETE or POST with __method=DELETE\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Delete a comment\",\n        \"tags\": [\n          \"Comments\"\n        ]\n      },\n      \"get\": {\n        \"description\": \"Retrieve a single comment by its ID.\\n\\nAuthorization is required if the comment status is \\\"unpublished\\\". If the comment status is \\\"published\\\", then this method can be called without authorization.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"comment_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Input `MTAuth accessToken={accessToken}`\",\n            \"in\": \"header\",\n            \"name\": \"X-MT-Authorization\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/comment\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the requested comment.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Not Found\"\n          }\n        },\n        \"summary\": \"Retrieve a single comment by its ID\",\n        \"tags\": [\n          \"Comments\"\n        ]\n      },\n      \"put\": {\n        \"description\": \"Update a comment.\\n\\nAuthorization is required.\\n\\n#### Notes\\n- This method accepts PUT and POST with __method=PUT.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"comment_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"comment\": {\n                    \"$ref\": \"#/components/schemas/comment_updatable\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/comment\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to update a comment.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Not Found\"\n          },\n          \"405\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Request method is not PUT or POST with __method=PUT\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Update a comment\",\n        \"tags\": [\n          \"Comments\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/contentTypes\": {\n      \"get\": {\n        \"description\": \"Authentication required\\n\\nRetrieve a list of Content Types. This endpoint requires following permission.\\n\\n- Manage Content Types\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/content_type_limit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/content_type_offset\"\n          },\n          {\n            \"description\": \"The field name for sort. You can specify one of following values.\\n- name\\n- dataLabel\\n- uniqueID\\n- modified_on\\n\",\n            \"in\": \"query\",\n            \"name\": \"sortBy\",\n            \"schema\": {\n              \"enum\": [\n                \"name\",\n                \"dataLabel\",\n                \"uniqueID\",\n                \"modified_on\"\n              ],\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/content_type_sortOrder\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/content_type_fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/content_type_includeIds\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/content_type_excludeIds\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/content_type_dateField\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/content_type_dateFrom\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/content_type_dateTo\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/content_type\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the list of content types.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Content Type Collection\",\n        \"tags\": [\n          \"Content Types\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"**Authentication required**\\n\\nCreate a new Content Type. This endpoint requires following permission.\\n\\n- Manage Content Types\\n\\nPost form data is as follows.\\n\\n- content_type (required, ContentType) - Single Content Type resource\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"content_type\": {\n                    \"$ref\": \"#/components/schemas/content_type_updatable\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/content_type\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to create a content type.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Create Content Type\",\n        \"tags\": [\n          \"Content Types\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/contentTypes/{content_type_id}\": {\n      \"delete\": {\n        \"description\": \"**Authentication required**\\n\\nDelete content type. This endpoint requires following permission.\\n\\n- Manage Content Types\\n\\n#### Notes\\n- This method accepts DELETE and POST with __method=DELETE.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"content_type_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/content_type\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to delete a content type.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Content_type not found.\"\n          },\n          \"405\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Request method is not DELETE or POST with __method=DELETE\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Delete Content Type\",\n        \"tags\": [\n          \"Content Types\"\n        ]\n      },\n      \"get\": {\n        \"description\": \"**Authentication required**\\n\\nFetch single content type. This endpoint requires following permission.\\n\\n- Manage Content Types\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"content_type_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/content_type_fields\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/content_type\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the requested content type.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Content_type not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Fetch single Content Type\",\n        \"tags\": [\n          \"Content Types\"\n        ]\n      },\n      \"put\": {\n        \"description\": \"**Authentication required**\\n\\nUpdate content type. This endpoint requires following permission.\\n\\n- Manage Content Types\\n\\n#### Notes\\n- This method accepts PUT and POST with __method=PUT.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"content_type_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"content_type\": {\n                    \"$ref\": \"#/components/schemas/content_type_updatable\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/content_type\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to update a content type.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Content_type not found.\"\n          },\n          \"405\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Request method is not PUT or POST with __method=PUT\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Update Content Type\",\n        \"tags\": [\n          \"Content Types\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/contentTypes/{content_type_id}/data\": {\n      \"get\": {\n        \"description\": \"Retrieve list of content data of specified content type in the specified site.\\n\\nAuthentication required if you want to retrieve unpublished content data. Required pemissions are as follows.\\n\\n- Manage Content Data (site, system, each content type)\\n- Publish Content Data (each content type)\\n- Edit All Content Data (each content type)\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"content_type_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Input `MTAuth accessToken={accessToken}`\",\n            \"in\": \"header\",\n            \"name\": \"X-MT-Authorization\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/content_data_limit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/content_data_offset\"\n          },\n          {\n            \"description\": \"The field name for sort. You can specify one of following values.\\n- id\\n- uniqueID\\n- authored_on\\n- created_on\\n- modified_on\\n\",\n            \"in\": \"query\",\n            \"name\": \"sortBy\",\n            \"schema\": {\n              \"default\": \"id\",\n              \"enum\": [\n                \"id\",\n                \"uniqueID\",\n                \"authored_on\",\n                \"created_on\",\n                \"modified_on\"\n              ],\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/content_data_sortOrder\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/content_data_fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/content_data_includeIds\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/content_data_excludeIds\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_no_text_filter\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/content_data_dateField\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/content_data_dateFrom\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/content_data_dateTo\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/cd\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the list of content data.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Content_type not found.\"\n          }\n        },\n        \"summary\": \"Content Data Collection\",\n        \"tags\": [\n          \"Content Types\",\n          \"Content Data\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"**Authentication Required** Create a new content data. This endpoint requires following permissions.\\n\\n- Manage Content Data (site, system, each content type)\\n- Create Content Data (each content type)\\n\\nPost form data is following\\n\\n- content_data (ContentData) - Single ContentData resource\\n\\nKnown issues (these will be solved in future release)\\n\\n- If content type contains non required Content Type field, request will failed when post data does not contain its data.\\n- If content type contains non required Date and Time field, request will failed when post data does not contain its data.\\n- Date and Time field must be specified by YYYYMMDDHHmmSS format.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"content_type_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"content_data\": {\n                    \"$ref\": \"#/components/schemas/cd_updatable\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/cd\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to create a content data.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Content_type not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Create Content Data\",\n        \"tags\": [\n          \"Content Types\",\n          \"Content Data\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/contentTypes/{content_type_id}/data/preview\": {\n      \"post\": {\n        \"description\": \"**Authentication required.**\\n\\nMake a preview by specified data. This endpoint requires following permissions.\\n\\n- Manage Content Data (site, system, each content type)\\n- Create Content Data (each content type)\\n\\nPost form data is following\\n\\n- content_data (ContentData) - Single ContentData resource\\n\\nKnown issues (these will be solved in future release)\\n\\n- If content type contains non required Content Type field, request will failed when post data does not contain its data.\\n- If content type contains non required Date and Time field, request will failed when post data does not contain its data.\\n- Date and Time field must be specified by YYYYMMDDHHmmSS format.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"content_type_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"If specify \\\"1\\\", will be returned preview contents.\",\n            \"in\": \"query\",\n            \"name\": \"raw\",\n            \"schema\": {\n              \"default\": 0,\n              \"enum\": [\n                0,\n                1\n              ],\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"content_data\": {\n                    \"$ref\": \"#/components/schemas/cd\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"preview\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to preview content data.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Content_type not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Make a preview by data\",\n        \"tags\": [\n          \"Content Types\",\n          \"Content Data\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/contentTypes/{content_type_id}/data/{content_data_id}\": {\n      \"delete\": {\n        \"description\": \"**Authentication required.**\\n\\nDelete a single content data. This endpoint requires folllowing permissions.\\n\\n- Manage Content Data (site, system, each content type)\\n- Edit All Content Data (each content type)\\n- Publish Content Data (each content type)\\n\\n#### Notes\\n- This method accepts DELETE and POST with __method=DELETE.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"content_type_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"content_data_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/cd\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to delete a content data.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Content_type or Content_data not found.\"\n          },\n          \"405\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Request method is not DELETE or POST with __method=DELETE\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Delete single content data\",\n        \"tags\": [\n          \"Content Types\",\n          \"Content Data\"\n        ]\n      },\n      \"get\": {\n        \"description\": \"Fetch single content data.\\n\\nAuthentication required if you want fetch unpublished content data. Required permissions are as follows.\\n\\n- Manage Content Data (site, system, each content type)\\n- Edit All Content Data (each content type)\\n- Publish Content Data (each content type)\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"content_type_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"content_data_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Input `MTAuth accessToken={accessToken}`\",\n            \"in\": \"header\",\n            \"name\": \"X-MT-Authorization\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/content_data_fields\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/cd\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the requested content data.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Content_type or Content_data not found.\"\n          }\n        },\n        \"summary\": \"Fetch single Content Data\",\n        \"tags\": [\n          \"Content Types\",\n          \"Content Data\"\n        ]\n      },\n      \"put\": {\n        \"description\": \"Authentication Required Update a single content data. This endpoint requires folllowing permissions.\\n\\n- Manage Content Data (site, system, each content type)\\n- Edit All Content Data (each content type)\\n- Publish Content Data (each content type)\\n\\nPost form data is following:\\n\\n- content_data (ContentData, required) -Single ContentData resource.\\n\\n#### Notes\\n- This method accepts PUT and POST with __method=PUT.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"content_type_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"content_data_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"content_data\": {\n                    \"$ref\": \"#/components/schemas/cd_updatable\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/cd\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to update a content data.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Content_type or Content_data not found.\"\n          },\n          \"405\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Request method is not PUT or POST with __method=PUT\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Update Content Data\",\n        \"tags\": [\n          \"Content Types\",\n          \"Content Data\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/contentTypes/{content_type_id}/data/{content_data_id}/preview\": {\n      \"post\": {\n        \"description\": \"**Authentication required.**\\n\\nMake a preview by ID. This endpoint requires following permissions.\\n\\n- Content Data (site, system, each content type)\\n- Create Content Data (each content type)\\n\\nPost form data is as follows\\n\\n- entry (Entry, required) - Should be provide empty json. This parameter will be removed in the future.\\n\\nKnown issues (these will be solved in future release)\\n\\n- If content type contains non required Content Type field, request will failed when post data does not contain its data.\\n- If content type contains non required Date and Time field, request will failed when post data does not contain its data.\\n- Date and Time field must be specified by YYYYMMDDHHmmSS format.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"content_type_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"content_data_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"If specify \\\"1\\\", will be returned preview contents.\",\n            \"in\": \"query\",\n            \"name\": \"raw\",\n            \"schema\": {\n              \"default\": 0,\n              \"enum\": [\n                0,\n                1\n              ],\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"content_data\": {\n                    \"$ref\": \"#/components/schemas/cd\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"preview\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to preview content data.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Content_type or Content_data not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Make a preview by id\",\n        \"tags\": [\n          \"Content Types\",\n          \"Content Data\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/contentTypes/{content_type_id}/fields\": {\n      \"get\": {\n        \"description\": \"**Authentication required**\\n\\nRetrieve a list of Content Fields of the specified Content Type. This endpoint requires following permission.\\n\\n- Manage Content Types\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"content_type_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/content_field_limit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/content_field_offset\"\n          },\n          {\n            \"description\": \"The field name for sort. You can specify one of following values.\\n- name\\n- dataLabel\\n- uniqueID\\n- modified_on\\n\",\n            \"in\": \"query\",\n            \"name\": \"sortBy\",\n            \"schema\": {\n              \"enum\": [\n                \"name\",\n                \"dataLabel\",\n                \"uniqueID\",\n                \"modified_on\"\n              ],\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/content_field_sortOrder\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/content_field_fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/content_field_includeIds\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/content_field_excludeIds\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/content_field_dateField\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/content_field_dateFrom\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/content_field_dateTo\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/cf\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the list of content fields.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Content_type not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Content Field Collection\",\n        \"tags\": [\n          \"Content Fields\",\n          \"Content Types\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"**Authentication required**\\n\\nCreate a new Content Field. This endpoint requires following permission.\\n\\n- Manage Content Types\\n\\nPost form data is as follows.\\n\\n- content_field (required, ContentField) - Single Content Field resource\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"content_type_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"content_field\": {\n                    \"$ref\": \"#/components/schemas/cf_updatable\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/cf\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to create a content type.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Content_type not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Create Content Field\",\n        \"tags\": [\n          \"Content Types\",\n          \"Content Fields\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/contentTypes/{content_type_id}/fields/permutate\": {\n      \"post\": {\n        \"description\": \"**Authentication required.**\\n\\nRearranges content field order in specified content type. This endpoint need folllowing permissions.\\n\\n- Manage Content Types\\n\\nThis method returns rearranged ContentField collection.\\n\\nPost form data is following:\\n\\n- content_fields (array[ContentField]) - Array of content fields resource that were rearranged.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"content_type_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"content_fields\": {\n                    \"description\": \"Array of content fields resource that were rearranged.\",\n                    \"example\": \"[\\n  { \\\"id\\\": 0 },\\n  { \\\"id\\\": 1 } \\n]\\n\",\n                    \"type\": \"string\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/cf\"\n                  },\n                  \"type\": \"array\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to permutate content fields.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Content_type not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Save hierarchical content field order\",\n        \"tags\": [\n          \"Content Types\",\n          \"Content Fields\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/contentTypes/{content_type_id}/fields/{content_field_id}\": {\n      \"delete\": {\n        \"description\": \"**Authentication required**\\n\\nDelete content field from specified content type. This endpoint requires following permission.\\n\\n- Manage Content Types\\n\\n#### Notes\\n- This method accepts DELETE and POST with __method=DELETE.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"content_type_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"content_field_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/cf\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to delete a content field.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Content_type or Content_field not found.\"\n          },\n          \"405\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Request method is not DELETE or POST with __method=DELETE\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Delete Content Field\",\n        \"tags\": [\n          \"Content Types\",\n          \"Content Fields\"\n        ]\n      },\n      \"get\": {\n        \"description\": \"**Authentication required**\\n\\nFetch single content field. This endpoint requires following permission.\\n\\n- Manage Content Types\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"content_type_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"content_field_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/content_field_fields\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/cf\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the requested content field.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Content_type or Content_field not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Fetch single Content Field\",\n        \"tags\": [\n          \"Content Types\",\n          \"Content Fields\"\n        ]\n      },\n      \"put\": {\n        \"description\": \"**Authentication required**\\n\\nUpdate content field. This endpoint requires following permission.\\n\\n- Manage Content Types\\n\\nIf you want to update label, description and required, should be use options field. (e.g, {âoptionsâ:{âlabelâ:âfooâ}})\\n\\n#### Notes\\n- This method accepts PUT and POST with __method=PUT.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"content_type_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"content_field_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"content_field\": {\n                    \"$ref\": \"#/components/schemas/cf_updatable\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/cf\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to update a content field.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Content_type or Content_field not found.\"\n          },\n          \"405\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Request method is not PUT or POST with __method=PUT\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Update Content Field\",\n        \"tags\": [\n          \"Content Types\",\n          \"Content Fields\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/entries\": {\n      \"get\": {\n        \"description\": \"Retrieve a list of entries.\\n\\nAuthorization is required to include unpublished entries.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Input `MTAuth accessToken={accessToken}`\",\n            \"in\": \"header\",\n            \"name\": \"X-MT-Authorization\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_search\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_searchFields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_status\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_limit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_offset\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_includeIds\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_excludeIds\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_sortBy\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_sortOrder\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_maxComments\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_maxTrackbacks\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_no_text_filter\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_dateField\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_dateFrom\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_dateTo\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"description\": \"An array of Entries resource.\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/entry\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"description\": \" The total number of entries.\",\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the requested entries.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Not Found\"\n          }\n        },\n        \"summary\": \"Retrieve a list of entries\",\n        \"tags\": [\n          \"Entries\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"- Authorization is required.\\n\\n#### Update in v2.0\\n\\n- You can attach categories and assets in one request.\\n\\n#### Permissions\\n\\n- create_post\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"entry\": {\n                    \"$ref\": \"#/components/schemas/entry_updatable\"\n                  },\n                  \"publish\": {\n                    \"description\": \"If this value is \\\"0\\\", the entry is not published\",\n                    \"enum\": [\n                      0,\n                      1\n                    ],\n                    \"type\": \"integer\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/entry\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to create an entry.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Create a new entry\",\n        \"tags\": [\n          \"Entries\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/entries/export\": {\n      \"get\": {\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"Text as Movable Type Import / Export Format\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to export entries.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Export entries\",\n        \"tags\": [\n          \"Entries\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/entries/import\": {\n      \"post\": {\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"properties\": {\n                  \"convert_breaks\": {\n                    \"type\": \"string\"\n                  },\n                  \"default_cat_id\": {\n                    \"type\": \"integer\"\n                  },\n                  \"default_status\": {\n                    \"description\": \"If you set import_type is \\\"import_mt_format\\\", also you can set default entry status.\",\n                    \"type\": \"string\"\n                  },\n                  \"encoding\": {\n                    \"type\": \"string\"\n                  },\n                  \"file\": {\n                    \"format\": \"binary\",\n                    \"type\": \"string\"\n                  },\n                  \"import_as_me\": {\n                    \"default\": 1,\n                    \"description\": \"#### 0\\n\\nPreserve original user\\n\\n#### 1\\n\\nImport as me\\n\\n**Default**: 1\\n\",\n                    \"enum\": [\n                      0,\n                      1\n                    ],\n                    \"type\": \"integer\"\n                  },\n                  \"import_type\": {\n                    \"type\": \"string\"\n                  },\n                  \"password\": {\n                    \"description\": \"If you choose import_as_me is 0, you must define a default password for those new accounts.\",\n                    \"type\": \"string\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to import entries.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Import entries\",\n        \"tags\": [\n          \"Entries\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/entries/preview\": {\n      \"post\": {\n        \"description\": \"- Authorization is required.\\n- **This endpoint has been available since Movable Type 6.1.2.**\\n\\n#### Permissions\\n\\n- create_post\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"If specify \\\"1\\\", will be returned preview contents.\",\n            \"in\": \"query\",\n            \"name\": \"raw\",\n            \"schema\": {\n              \"default\": 0,\n              \"enum\": [\n                0,\n                1\n              ],\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"entry\": {\n                    \"$ref\": \"#/components/schemas/entry\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"preview\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to preview entry.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Entry not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Make a preview for a entry\",\n        \"tags\": [\n          \"Entries\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/entries/{entry_id}\": {\n      \"delete\": {\n        \"description\": \"Delete an entry.\\n\\nAuthorization is required.\\n\\n\\n#### Notes\\n- This method accepts DELETE and POST with __method=DELETE.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"entry_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/entry\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to delete an entry.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Not Found\"\n          },\n          \"405\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Request method is not DELETE or POST with __method=DELETE\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Delete an entry\",\n        \"tags\": [\n          \"Entries\"\n        ]\n      },\n      \"get\": {\n        \"description\": \"Retrieve a single entry by its ID.\\n\\nAuthorization is required if the entry status is \\\"unpublished\\\". If the entry status is \\\"published\\\", then this method can be called without authorization.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"entry_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Input `MTAuth accessToken={accessToken}`\",\n            \"in\": \"header\",\n            \"name\": \"X-MT-Authorization\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"This is an optional parameter. Maximum number of comments to retrieve as part of the Entries resource. If this parameter is not supplied, no comments will be returned.\",\n            \"in\": \"query\",\n            \"name\": \"maxComments\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"This is an optional parameter. Maximum number of received trackbacks to retrieve as part of the Entries resource. If this parameter is not supplied, no trackbacks will be returned. \",\n            \"in\": \"query\",\n            \"name\": \"maxTrackbacks\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"This is an optional parameter. The field list to retrieve as part of the Entries resource. That list should be separated by commma. If this parameter is not specified, All fields will be returned. \",\n            \"in\": \"query\",\n            \"name\": \"fields\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/entry\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the requested entry.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Not Found\"\n          }\n        },\n        \"summary\": \"Retrieve a single entry by its ID\",\n        \"tags\": [\n          \"Entries\"\n        ]\n      },\n      \"put\": {\n        \"description\": \"- Authorization is required.\\n\\n#### Update in v2.0\\n\\n- You can attach/detach categories and assets in one request.\\n\\n#### Permissions\\n\\n- edit_entry\\n  - to retrieve unpublished entry\\n\\n#### Notes\\n- This method accepts PUT and POST with __method=PUT.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"entry_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"entry\": {\n                    \"$ref\": \"#/components/schemas/entry_updatable\"\n                  },\n                  \"publish\": {\n                    \"description\": \"If this value is \\\"0\\\", the entry is not published\",\n                    \"enum\": [\n                      0,\n                      1\n                    ],\n                    \"type\": \"integer\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/entry\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to update an entry.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Entry not found.\"\n          },\n          \"405\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Request method is not PUT or POST with __method=PUT\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Update an entry\",\n        \"tags\": [\n          \"Entries\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/entries/{entry_id}/assets\": {\n      \"get\": {\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"entry_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Input `MTAuth accessToken={accessToken}`\",\n            \"in\": \"header\",\n            \"name\": \"X-MT-Authorization\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/asset_limit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/asset_offset\"\n          },\n          {\n            \"description\": \"The target asset class to retrieve. Supported values are image, audio, video, file and any values added by plugins. If you want to retrieve multiple classes, specify the values separated by commas.\",\n            \"in\": \"query\",\n            \"name\": \"class\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"#### file_name\\n\\nSort by the filename of each asset.\\n\\n#### created_by\\n\\nSort by the ID of user who created each asset.\\n\\n#### created_on\\n\\n(default) Sort by the created time of each asset.\\n\\n**Default**: created_on\\n\",\n            \"in\": \"query\",\n            \"name\": \"sortBy\",\n            \"schema\": {\n              \"default\": \"created_on\",\n              \"enum\": [\n                \"file_name\",\n                \"created_by\",\n                \"created_on\"\n              ],\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/asset_sortOrder\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/asset_fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/asset_dateField\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/asset_dateFrom\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/asset_dateTo\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/asset\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the requested assets for entry.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or entry not found.\"\n          }\n        },\n        \"summary\": \"Retrieve assets that related with specified entry\",\n        \"tags\": [\n          \"Assets\",\n          \"Entries\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/entries/{entry_id}/categories\": {\n      \"get\": {\n        \"description\": \"#### Permissions\\n\\n- edit_entry\\n  - If you want to retrieve the non-published entry's categories.\\n\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"entry_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Input `MTAuth accessToken={accessToken}`\",\n            \"in\": \"header\",\n            \"name\": \"X-MT-Authorization\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/category_search\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/category_searchFields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/category_limit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/category_offset\"\n          },\n          {\n            \"description\": \"#### user_custom\\n\\nSort order you specified on the Manage Categories screen.\\n\\n#### created_by\\n\\nSort by the ID of user who created each category.\\n\\n#### id\\n\\nSort by the ID of each category.\\n\\n#### basename\\n\\nSort by the basename of each category.\\n\\n#### label\\n\\nSort by the label of each category.\\n\\n**Default**: user_custom\\n\",\n            \"in\": \"query\",\n            \"name\": \"sortBy\",\n            \"schema\": {\n              \"default\": \"user_custom\",\n              \"enum\": [\n                \"user_custom\",\n                \"created_by\",\n                \"id\",\n                \"basename\",\n                \"label\"\n              ],\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/category_sortOrder\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/category_fields\"\n          },\n          {\n            \"description\": \"If set to 1, retrieves only top level categories. New in v2\\n\\n**Default**: 0\\n\",\n            \"in\": \"query\",\n            \"name\": \"top\",\n            \"schema\": {\n              \"default\": 0,\n              \"enum\": [\n                0,\n                1\n              ],\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/category_includeIds\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/category_excludeIds\"\n          },\n          {\n            \"description\": \"#### primary\\n\\nRetrieve primary category only\\n\\n#### secondary\\n\\nRetrieve secondary categories only\\n\",\n            \"in\": \"query\",\n            \"name\": \"type\",\n            \"schema\": {\n              \"enum\": [\n                \"primary\",\n                \"secondary\"\n              ],\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/category_dateField\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/category_dateFrom\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/category_dateTo\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/category\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the requested categories for entry.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Entry not found.\"\n          }\n        },\n        \"summary\": \"Retrieve categories in the specified entry\",\n        \"tags\": [\n          \"Categories\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/entries/{entry_id}/comments\": {\n      \"get\": {\n        \"description\": \"Retrieve a list of comments for an entry.\\n\\nAuthorization is required to include unpublished comments\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"entry_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Input `MTAuth accessToken={accessToken}`\",\n            \"in\": \"header\",\n            \"name\": \"X-MT-Authorization\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"This is an optional parameter. Maximum number of comments to retrieve. Default is 10.\",\n            \"in\": \"query\",\n            \"name\": \"limit\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"This is an optional parameter. 0-indexed offset. Default is 0.\",\n            \"in\": \"query\",\n            \"name\": \"offset\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/comment_dateField\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/comment_dateFrom\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/comment_dateTo\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"description\": \"An array of Comments resource. The list will sorted from oldest to newest by comment_id and comment_parent_id.\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/comment\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"description\": \"The total number of comments found.\",\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the list of comments.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Not Found\"\n          }\n        },\n        \"summary\": \"Retrieve a list of comments for an entry\",\n        \"tags\": [\n          \"Comments\",\n          \"Entries\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"Create a new comment on an entry.\\n\\nAuthorization is required.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"entry_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"comment\": {\n                    \"$ref\": \"#/components/schemas/comment_updatable\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/comment\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to create a comment.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Not Found\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Create a new comment on an entry\",\n        \"tags\": [\n          \"Comments\",\n          \"Entries\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/entries/{entry_id}/comments/{comment_id}/replies\": {\n      \"post\": {\n        \"description\": \"Reply to specified comment.\\n\\nAuthorization is required.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"entry_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"comment_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"comment\": {\n                    \"$ref\": \"#/components/schemas/comment_updatable\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/comment\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to create a reply to the requested comment.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Not Found\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Reply to specified comment\",\n        \"tags\": [\n          \"Comments\",\n          \"Entries\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/entries/{entry_id}/preview\": {\n      \"post\": {\n        \"description\": \"- Authorization is required.\\n- **This endpoint has been available since Movable Type 6.1.2.**\\n- **entry** parameter is required. If you just want to get preview entry from existing data, you should provide entry parameter with empty json.\\n\\n#### Permissions\\n\\n- create_post\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"entry_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"If specify \\\"1\\\", will be returned preview contents.\",\n            \"in\": \"query\",\n            \"name\": \"raw\",\n            \"schema\": {\n              \"default\": 0,\n              \"enum\": [\n                0,\n                1\n              ],\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"entry\": {\n                    \"$ref\": \"#/components/schemas/entry\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"preview\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to preview entry.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Entry not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Make a preview for a entry with existing data\",\n        \"tags\": [\n          \"Entries\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/entries/{entry_id}/trackbacks\": {\n      \"get\": {\n        \"description\": \"Retrieve a list of trackbacks for an entry.\\n\\nAuthorization is required to include unpublished trackbacks\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"entry_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Input `MTAuth accessToken={accessToken}`\",\n            \"in\": \"header\",\n            \"name\": \"X-MT-Authorization\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"This is an optional parameter. Maximum number of trackbacks to retrieve. Default is 10.\",\n            \"in\": \"query\",\n            \"name\": \"limit\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"This is an optional parameter. 0-indexed offset. Default is 0.\",\n            \"in\": \"query\",\n            \"name\": \"offset\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/trackback_dateField\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/trackback_dateFrom\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/trackback_dateTo\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"description\": \"An array of trakcbacks resource. The list will sorted from oldest to newest by received date.\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/trackback\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"description\": \"The total number of trackbacks found.\",\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the list of trackbacks.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Not Found\"\n          }\n        },\n        \"summary\": \"Retrieve a list of trackbacks for an entry\",\n        \"tags\": [\n          \"Trackbacks\",\n          \"Entries\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/export_theme\": {\n      \"post\": {\n        \"description\": \"- Authentication is required\\n- This endpoint will export current theme elements of specified site into theme directory.\\n\\n#### Permissions\\n\\n- manage_themes\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to export the requested theme.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Theme not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Export site's theme\",\n        \"tags\": [\n          \"Themes\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/fields\": {\n      \"get\": {\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/field_search\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/field_searchFields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/field_limit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/field_offset\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/field_sortBy\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/field_sortOrder\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/field_fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/field_dateField\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/field_dateFrom\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/field_dateTo\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"description\": \"An array of fields resource.\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/field\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"description\": \" The total number of fields.\",\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the requested fields.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Retrieve a list of fields in the specified site\",\n        \"tags\": [\n          \"CustomFields\"\n        ]\n      },\n      \"post\": {\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"field\": {\n                    \"$ref\": \"#/components/schemas/field_updatable\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/field\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to create a field.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Create a new field\",\n        \"tags\": [\n          \"CustomFields\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/fields/{field_id}\": {\n      \"delete\": {\n        \"description\": \"\\n#### Notes\\n- This method accepts DELETE and POST with __method=DELETE.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"field_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/field\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to delete a field.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Field not found.\"\n          },\n          \"405\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Request method is not DELETE or POST with __method=DELETE\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Delete a field\",\n        \"tags\": [\n          \"CustomFields\"\n        ]\n      },\n      \"get\": {\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"field_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/field_fields\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/field\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the requested field.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Field not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Retrieve single field by its ID\",\n        \"tags\": [\n          \"CustomFields\"\n        ]\n      },\n      \"put\": {\n        \"description\": \"\\n#### Notes\\n- This method accepts PUT and POST with __method=PUT.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"field_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"field\": {\n                    \"$ref\": \"#/components/schemas/field_updatable\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/field\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to update a field.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Field not found.\"\n          },\n          \"405\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Request method is not PUT or POST with __method=PUT\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Update a field\",\n        \"tags\": [\n          \"CustomFields\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/folders\": {\n      \"get\": {\n        \"description\": \"Authentication required if you want to get private properties.\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Input `MTAuth accessToken={accessToken}`\",\n            \"in\": \"header\",\n            \"name\": \"X-MT-Authorization\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/folder_search\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/folder_searchFields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/folder_limit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/folder_offset\"\n          },\n          {\n            \"description\": \"#### user_custom\\n\\nSort order you specified on the Manage Folders screen.\\n\\n#### created_by\\n\\nSort by the ID of creator.\\n\\n#### id\\n\\nSort by its own ID.\\n\\n#### basename\\n\\nSort by the basename of each folders.\\n\\n#### label\\n\\nSort by the label of each folders.\\n\\n**Default**: user_custom\\n\",\n            \"in\": \"query\",\n            \"name\": \"sortBy\",\n            \"schema\": {\n              \"default\": \"user_custom\",\n              \"enum\": [\n                \"user_custom\",\n                \"created_by\",\n                \"id\",\n                \"basename\",\n                \"label\"\n              ],\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/folder_sortOrder\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/folder_fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/folder_includeIds\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/folder_excludeIds\"\n          },\n          {\n            \"description\": \"If set to 1, retrieves only top level folders.\\n\\n**Default**: 0\\n\",\n            \"in\": \"query\",\n            \"name\": \"top\",\n            \"schema\": {\n              \"default\": 0,\n              \"enum\": [\n                0,\n                1\n              ],\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/folder_dateField\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/folder_dateFrom\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/folder_dateTo\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/folder\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the list of folders.\"\n          }\n        },\n        \"summary\": \"Retrieve a list of folders\",\n        \"tags\": [\n          \"Folders\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"Authorization is required.\\n\\n#### Permission\\n\\n- Manage Pages\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"folder\": {\n                    \"$ref\": \"#/components/schemas/folder_updatable\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/folder\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to create a folder.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Create a new folder.\",\n        \"tags\": [\n          \"Folders\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/folders/permutate\": {\n      \"post\": {\n        \"description\": \"- Authorization is required.\\n- This method returns rearranged Folders resource.\\n\\n#### Permission\\n\\n- Manage Pages\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"folders\": {\n                    \"description\": \"Array of folder resource that were rearranged.\",\n                    \"example\": \"[\\n  { \\\"id\\\": 0 },\\n  { \\\"id\\\": 1 } \\n]\\n\",\n                    \"type\": \"string\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/folder\"\n                  },\n                  \"type\": \"array\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to permutate folders.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Rearrange existing folders in a new order\",\n        \"tags\": [\n          \"Folders\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/folders/{folder_id}\": {\n      \"delete\": {\n        \"description\": \"- Authorization is required.\\n- This method returns deleted Folder resource.\\n\\n#### Permission\\n\\n- Manage Pages\\n\\n#### Notes\\n- This method accepts DELETE and POST with __method=DELETE.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"folder_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/folder\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to delete a folder.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Folder not found.\"\n          },\n          \"405\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Request method is not DELETE or POST with __method=DELETE\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Delete an existing folder\",\n        \"tags\": [\n          \"Folders\"\n        ]\n      },\n      \"get\": {\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"folder_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Input `MTAuth accessToken={accessToken}`\",\n            \"in\": \"header\",\n            \"name\": \"X-MT-Authorization\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/folder_fields\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/folder\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the requested folder.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Folder or site not found.\"\n          }\n        },\n        \"summary\": \"Retrieve single folder by its ID\",\n        \"tags\": [\n          \"Folders\"\n        ]\n      },\n      \"put\": {\n        \"description\": \"- Authorization is required.\\n\\n#### Permission\\n\\n- Manage Pages\\n\\n#### Notes\\n- This method accepts PUT and POST with __method=PUT.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"folder_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"folder\": {\n                    \"$ref\": \"#/components/schemas/folder_updatable\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/folder\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to update a folder.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Folder not found.\"\n          },\n          \"405\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Request method is not PUT or POST with __method=PUT\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Update an existing folder\",\n        \"tags\": [\n          \"Folders\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/folders/{folder_id}/children\": {\n      \"get\": {\n        \"description\": \"Authentication required if you want to get private properties.\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"folder_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Input `MTAuth accessToken={accessToken}`\",\n            \"in\": \"header\",\n            \"name\": \"X-MT-Authorization\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"The depth of retrieving child folders.\\n\\n**Default**: 0\\n\",\n            \"in\": \"query\",\n            \"name\": \"maxDepth\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"#### 1\\n\\nThe results includes current folder.\\n\\n#### 0\\n\\nThe results do not include current folder.\\n\\n**Default**: 0\\n\",\n            \"in\": \"query\",\n            \"name\": \"includeCurrent\",\n            \"schema\": {\n              \"default\": 0,\n              \"enum\": [\n                0,\n                1\n              ],\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/folder\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the list of folders.\"\n          }\n        },\n        \"summary\": \"Retrieve a list of child folders of the requested folder\",\n        \"tags\": [\n          \"Folders\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/folders/{folder_id}/pages\": {\n      \"get\": {\n        \"description\": \"- Authorization is required to include unpublished pages.\\n\\n#### Permissions\\n\\n- manage_pages\\n  - to retrieve unpublished page\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"folder_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Input `MTAuth accessToken={accessToken}`\",\n            \"in\": \"header\",\n            \"name\": \"X-MT-Authorization\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_search\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_searchFields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_limit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_offset\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_sortBy\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_sortOrder\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_includeIds\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_excludeIds\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_status\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_maxComments\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_maxTrackbacks\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_no_text_filter\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_dateField\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_dateFrom\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_dateTo\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"description\": \"An array of page resource.\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/page\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"description\": \" The total number of pages.\",\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the requested pages.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Folder not found.\"\n          }\n        },\n        \"summary\": \"Retrieve a list of pages by specific folder\",\n        \"tags\": [\n          \"Pages\",\n          \"Folders\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/folders/{folder_id}/parents\": {\n      \"get\": {\n        \"description\": \"Authentication required if you want to get private properties.\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"folder_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Input `MTAuth accessToken={accessToken}`\",\n            \"in\": \"header\",\n            \"name\": \"X-MT-Authorization\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"The depth of retrieving parent folders.\\n\\n**Default**: 0\\n\",\n            \"in\": \"query\",\n            \"name\": \"maxDepth\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"#### 1\\n\\nThe results includes current folder.\\n\\n#### 0\\n\\nThe results do not include current folder.\\n\\n**Default**: 0\\n\",\n            \"in\": \"query\",\n            \"name\": \"includeCurrent\",\n            \"schema\": {\n              \"default\": 0,\n              \"enum\": [\n                0,\n                1\n              ],\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/folder\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the list of folders.\"\n          }\n        },\n        \"summary\": \"Retrieve a list of parent folders of the requested folder\",\n        \"tags\": [\n          \"Folders\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/folders/{folder_id}/siblings\": {\n      \"get\": {\n        \"description\": \"Authentication required if you want to get private properties.\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"folder_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Input `MTAuth accessToken={accessToken}`\",\n            \"in\": \"header\",\n            \"name\": \"X-MT-Authorization\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/folder_search\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/folder_searchFields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/folder_limit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/folder_offset\"\n          },\n          {\n            \"description\": \"#### user_custom\\n\\nSort order you specified on the Manage Folders screen.\\n\\n#### created_by\\n\\nSort by the ID of creator.\\n\\n#### id\\n\\nSort by its own ID.\\n\\n#### basename\\n\\nSort by the basename of each folders.\\n\\n#### label\\n\\nSort by the label of each folders.\\n\\n**Default**: user_custom\\n\",\n            \"in\": \"query\",\n            \"name\": \"sortBy\",\n            \"schema\": {\n              \"default\": \"user_custom\",\n              \"enum\": [\n                \"user_custom\",\n                \"created_by\",\n                \"id\",\n                \"basename\",\n                \"label\"\n              ],\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/folder_sortOrder\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/folder_fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/folder_includeIds\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/folder_excludeIds\"\n          },\n          {\n            \"description\": \"Default: 0\\n\\nIf set to 1, retrieves only top level folders.\\n\",\n            \"in\": \"query\",\n            \"name\": \"top\",\n            \"schema\": {\n              \"default\": 0,\n              \"enum\": [\n                0,\n                1\n              ],\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/folder_dateField\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/folder_dateFrom\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/folder_dateTo\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/folder\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the list of folders.\"\n          }\n        },\n        \"summary\": \"Retrieve a list of sibling folders of the requested folder\",\n        \"tags\": [\n          \"Folders\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/formatted_texts\": {\n      \"get\": {\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/formatted_text_search\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/formatted_text_searchFields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/formatted_text_limit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/formatted_text_offset\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/formatted_text_sortBy\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/formatted_text_sortOrder\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/formatted_text_fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/formatted_text_includeIds\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/formatted_text_excludeIds\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/formatted_text_dateField\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/formatted_text_dateFrom\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/formatted_text_dateTo\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"description\": \"An array of formatted_texts resource.\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/formatted_text\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"description\": \" The total number of formatted_texts found that by the request.\",\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the list of formatted texts.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Retrieve a list of formatted_texts in the specified site\",\n        \"tags\": [\n          \"FormattedText\"\n        ]\n      },\n      \"post\": {\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"formatted_text\": {\n                    \"$ref\": \"#/components/schemas/formatted_text_updatable\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/formatted_text\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to create a formatted text.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Create a new formatted_text\",\n        \"tags\": [\n          \"FormattedText\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/formatted_texts/{formatted_text_id}\": {\n      \"delete\": {\n        \"description\": \"\\n#### Notes\\n- This method accepts DELETE and POST with __method=DELETE.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"formatted_text_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/formatted_text\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to delete a formatted text.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or FormattedText not found.\"\n          },\n          \"405\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Request method is not DELETE or POST with __method=DELETE\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Delete a formatted_text\",\n        \"tags\": [\n          \"FormattedText\"\n        ]\n      },\n      \"get\": {\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"formatted_text_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/formatted_text_fields\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/formatted_text\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the requested formatted text.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or FormattedText not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Retrieve single formatted_text by its ID\",\n        \"tags\": [\n          \"FormattedText\"\n        ]\n      },\n      \"put\": {\n        \"description\": \"\\n#### Notes\\n- This method accepts PUT and POST with __method=PUT.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"formatted_text_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"formatted_text\": {\n                    \"$ref\": \"#/components/schemas/formatted_text_updatable\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/formatted_text\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to update a formatted text.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or FormattedText not found.\"\n          },\n          \"405\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Request method is not PUT or POST with __method=PUT\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Update a formatted_text\",\n        \"tags\": [\n          \"FormattedText\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/logs\": {\n      \"delete\": {\n        \"description\": \"\\n#### Notes\\n- This method accepts DELETE and POST with __method=DELETE.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to reset logs.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site not found.\"\n          },\n          \"405\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Request method is not DELETE or POST with __method=DELETE\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Reset logs\",\n        \"tags\": [\n          \"Logs\"\n        ]\n      },\n      \"get\": {\n        \"description\": \"- Authorization is required.\\n\\n#### Permissions\\n\\n- view_blog_log for website and blog.\\n- view_log for the system.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/log_search\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/log_searchFields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/log_limit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/log_offset\"\n          },\n          {\n            \"description\": \"- id\\n- created_on\\n- blog_id\\n- author_id\\n- level\\n- class\\n\\n**Default**: created_on\\n\",\n            \"in\": \"query\",\n            \"name\": \"sortBy\",\n            \"schema\": {\n              \"default\": \"created_on\",\n              \"enum\": [\n                \"id\",\n                \"created_on\",\n                \"blog_id\",\n                \"author_id\",\n                \"level\",\n                \"class\"\n              ],\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/log_sortOrder\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/log_fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/log_includeIds\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/log_excludeIds\"\n          },\n          {\n            \"description\": \"The comma separated list of level name to filter logs. Available value is foolows.\\n\\n- security\\n- error\\n- warning\\n- info\\n- debug\\n- security_or_error\\n- security_or_error_or_warning\\n- not_debug\\n- debug_or_error\\n\",\n            \"in\": \"query\",\n            \"name\": \"level\",\n            \"schema\": {\n              \"enum\": [\n                \"security\",\n                \"error\",\n                \"warning\",\n                \"info\",\n                \"debug\",\n                \"security_or_error\",\n                \"security_or_error_or_warning\",\n                \"not_debug\",\n                \"debug_or_error\"\n              ],\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/log_dateField\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/log_dateFrom\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/log_dateTo\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"description\": \"An array of log resource.\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/log\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"description\": \" The total number of logs.\",\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the list of activity logs.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Retrieve a list of logs in the specified site\",\n        \"tags\": [\n          \"Logs\"\n        ]\n      },\n      \"post\": {\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"log\": {\n                    \"$ref\": \"#/components/schemas/log_updatable\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/log\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to create a log.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Create a new log\",\n        \"tags\": [\n          \"Logs\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/logs/export\": {\n      \"get\": {\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"encoding\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"text/csv\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"No Errors\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to export logs.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Export logs\",\n        \"tags\": [\n          \"Logs\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/logs/{log_id}\": {\n      \"delete\": {\n        \"description\": \"\\n#### Notes\\n- This method accepts DELETE and POST with __method=DELETE.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"log_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/log\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to delete a log.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Log not found.\"\n          },\n          \"405\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Request method is not DELETE or POST with __method=DELETE\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Delete an existing log\",\n        \"tags\": [\n          \"Logs\"\n        ]\n      },\n      \"get\": {\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"log_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/log_fields\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/log\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the requested log.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Log not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Retrieve a single log by its ID\",\n        \"tags\": [\n          \"Logs\"\n        ]\n      },\n      \"put\": {\n        \"description\": \"\\n#### Notes\\n- This method accepts PUT and POST with __method=PUT.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"log_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"log\": {\n                    \"$ref\": \"#/components/schemas/log_updatable\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/log\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to update a log.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Log not found.\"\n          },\n          \"405\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Request method is not PUT or POST with __method=PUT\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Update an existing log\",\n        \"tags\": [\n          \"Logs\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/pages\": {\n      \"get\": {\n        \"description\": \"- Authorization is required to include unpublished pages.\\n\\n#### Permissions\\n\\n- manage_pages\\n  - to retrieve unpublished page\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Input `MTAuth accessToken={accessToken}`\",\n            \"in\": \"header\",\n            \"name\": \"X-MT-Authorization\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_search\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_searchFields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_limit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_offset\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_sortBy\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_sortOrder\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_includeIds\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_excludeIds\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_status\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_maxComments\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_maxTrackbacks\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_no_text_filter\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_dateField\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_dateFrom\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_dateTo\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"description\": \"An array of page resource.\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/page\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"description\": \" The total number of pages.\",\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the requested pages.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site not found.\"\n          }\n        },\n        \"summary\": \"Retrieve a list of pages in the specified site\",\n        \"tags\": [\n          \"Pages\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"- Authorization is required.\\n\\n#### Update in v2.0\\n\\n- You can attach folder and assets in one request.\\n\\n#### Permissions\\n\\n- manage_post\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"page\": {\n                    \"$ref\": \"#/components/schemas/page_updatable\"\n                  },\n                  \"publish\": {\n                    \"description\": \"If this value is \\\"0\\\", the entry is not published\",\n                    \"enum\": [\n                      0,\n                      1\n                    ],\n                    \"type\": \"integer\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/page\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to create a page.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Create a new page\",\n        \"tags\": [\n          \"Pages\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/pages/preview\": {\n      \"post\": {\n        \"description\": \"- Authorization is required.\\n- **This endpoint has been available since Movable Type 6.1.2.**\\n\\n#### Permissions\\n\\n- manage_pages\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"If specify \\\"1\\\", will be returned preview contents.\",\n            \"in\": \"query\",\n            \"name\": \"raw\",\n            \"schema\": {\n              \"default\": 0,\n              \"enum\": [\n                0,\n                1\n              ],\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"page\": {\n                    \"$ref\": \"#/components/schemas/page\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"preview\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to preview page.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Page not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Make a preview for a page\",\n        \"tags\": [\n          \"Pages\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/pages/{page_id}\": {\n      \"delete\": {\n        \"description\": \"- Authorization is required.\\n\\n#### Permissions\\n\\n- edit_entry\\n\\n#### Notes\\n- This method accepts DELETE and POST with __method=DELETE.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"page_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/page\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to delete a page.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Page not found.\"\n          },\n          \"405\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Request method is not DELETE or POST with __method=DELETE\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Delete an existing page\",\n        \"tags\": [\n          \"Pages\"\n        ]\n      },\n      \"get\": {\n        \"description\": \"- Authorization is required if the page status is \\\"unpublished\\\". If the page status is \\\"published\\\", then this method can be called without authorization.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"page_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Input `MTAuth accessToken={accessToken}`\",\n            \"in\": \"header\",\n            \"name\": \"X-MT-Authorization\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_fields\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/page\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the requested page.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Page not found.\"\n          }\n        },\n        \"summary\": \"Retrieve a single page by its ID\",\n        \"tags\": [\n          \"Pages\"\n        ]\n      },\n      \"put\": {\n        \"description\": \"- Authorization is required.\\n\\n#### Update in v2.0\\n\\n- You can attach/detach folder and assets in one request.\\n\\n#### Permissions\\n\\n- manage_pages\\n\\n#### Notes\\n- This method accepts PUT and POST with __method=PUT.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"page_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"page\": {\n                    \"$ref\": \"#/components/schemas/page_updatable\"\n                  },\n                  \"publish\": {\n                    \"description\": \"If this value is \\\"0\\\", the entry is not published\",\n                    \"enum\": [\n                      0,\n                      1\n                    ],\n                    \"type\": \"integer\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/page\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to update a page.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Page not found.\"\n          },\n          \"405\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Request method is not PUT or POST with __method=PUT\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Update an existing page\",\n        \"tags\": [\n          \"Pages\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/pages/{page_id}/assets\": {\n      \"get\": {\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"page_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Input `MTAuth accessToken={accessToken}`\",\n            \"in\": \"header\",\n            \"name\": \"X-MT-Authorization\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/asset_limit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/asset_offset\"\n          },\n          {\n            \"description\": \"The target asset class to retrieve. Supported values are image, audio, video, file and any values added by plugins. If you want to retrieve multiple classes, specify the values separated by commas.\",\n            \"in\": \"query\",\n            \"name\": \"class\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"#### file_name\\n\\nSort by the filename of each asset.\\n\\n#### created_by\\n\\nSort by the ID of user who created each asset.\\n\\n#### created_on\\n\\n(default) Sort by the created time of each asset.\\n\\n**Default**: created_on\\n\",\n            \"in\": \"query\",\n            \"name\": \"sortBy\",\n            \"schema\": {\n              \"default\": \"created_on\",\n              \"enum\": [\n                \"file_name\",\n                \"created_by\",\n                \"created_on\"\n              ],\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/asset_sortOrder\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/asset_fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/asset_dateField\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/asset_dateFrom\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/asset_dateTo\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/asset\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the requested assets for page.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or page not found.\"\n          }\n        },\n        \"summary\": \"Retrieve assets that related with specified page\",\n        \"tags\": [\n          \"Assets\",\n          \"Pages\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/pages/{page_id}/comments\": {\n      \"get\": {\n        \"description\": \"Retrieve a list of comments for a page.\\n\\nAuthorization is required to include unpublished comments\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"page_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Input `MTAuth accessToken={accessToken}`\",\n            \"in\": \"header\",\n            \"name\": \"X-MT-Authorization\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"This is an optional parameter. Maximum number of comments to retrieve. Default is 10.\",\n            \"in\": \"query\",\n            \"name\": \"limit\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"This is an optional parameter. 0-indexed offset. Default is 0.\",\n            \"in\": \"query\",\n            \"name\": \"offset\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/comment_dateField\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/comment_dateFrom\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/comment_dateTo\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"description\": \"An array of Comments resource. The list will sorted from oldest to newest by comment_id and comment_parent_id.\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/comment\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"description\": \"The total number of comments found.\",\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the list of comments.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Not Found\"\n          }\n        },\n        \"summary\": \"Retrieve a list of comments for the specified page\",\n        \"tags\": [\n          \"Comments\",\n          \"Pages\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"Create a new comment on a page.\\n\\nAuthorization is required.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"page_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"comment\": {\n                    \"$ref\": \"#/components/schemas/comment_updatable\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/comment\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to create a comment.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Not Found\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Create a new comment on a page\",\n        \"tags\": [\n          \"Comments\",\n          \"Pages\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/pages/{page_id}/comments/{comment_id}/replies\": {\n      \"post\": {\n        \"description\": \"Reply to specified comment.\\n\\nAuthorization is required.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"page_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"comment_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"comment\": {\n                    \"$ref\": \"#/components/schemas/comment_updatable\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/comment\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to create a reply to the requested comment.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Not Found\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Reply to specified comment\",\n        \"tags\": [\n          \"Comments\",\n          \"Pages\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/pages/{page_id}/preview\": {\n      \"post\": {\n        \"description\": \"- Authorization is required.\\n- **This endpoint has been available since Movable Type 6.1.2.**\\n- **page** parameter is required. If you just want to get preview page from existing data, you should provide page parameter with empty json.\\n\\n#### Permissions\\n\\n- manage_post\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"page_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"If specify \\\"1\\\", will be returned preview contents.\",\n            \"in\": \"query\",\n            \"name\": \"raw\",\n            \"schema\": {\n              \"default\": 0,\n              \"enum\": [\n                0,\n                1\n              ],\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"page\": {\n                    \"$ref\": \"#/components/schemas/page\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"preview\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to preview page.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Page not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Make a preview for a page with existing data\",\n        \"tags\": [\n          \"Pages\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/pages/{page_id}/trackbacks\": {\n      \"get\": {\n        \"description\": \"Retrieve a list of trackbacks for an page.\\n\\nAuthorization is required to include unpublished trackbacks\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"page_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Input `MTAuth accessToken={accessToken}`\",\n            \"in\": \"header\",\n            \"name\": \"X-MT-Authorization\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"This is an optional parameter. Maximum number of trackbacks to retrieve. Default is 10.\",\n            \"in\": \"query\",\n            \"name\": \"limit\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"This is an optional parameter. 0-indexed offset. Default is 0.\",\n            \"in\": \"query\",\n            \"name\": \"offset\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/trackback_dateField\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/trackback_dateFrom\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/trackback_dateTo\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"description\": \"An array of trakcbacks resource. The list will sorted from oldest to newest by received date.\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/trackback\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"description\": \"The total number of trackbacks found.\",\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the list of trackbacks.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Not Found\"\n          }\n        },\n        \"summary\": \"Retrieve a list of trackbacks for a page\",\n        \"tags\": [\n          \"Trackbacks\",\n          \"Pages\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/permissions\": {\n      \"get\": {\n        \"description\": \"- Authentication is required\\n\\n#### Permissions\\n\\n- Administer\\n- Website Administrator for websites\\n- Blog Administrator for blog\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/permission_limit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/permission_offset\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/permission_sortBy\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/permission_sortOrder\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/permission_fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/permission_dateField\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/permission_dateFrom\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/permission_dateTo\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"description\": \"An array of permission resource.\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/permission\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"description\": \" The total number of permissions.\",\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the list of permissions.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Retrieve a list of permissions for site\",\n        \"tags\": [\n          \"Sites\",\n          \"Permissions\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/permissions/grant\": {\n      \"post\": {\n        \"description\": \"- Authentication is required\\n- You should have grant_administer_role or grant_role_for_blog (Need grant_administer_role when granting role having administer_blog)\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"role_id\": {\n                    \"description\": \"The role ID\",\n                    \"type\": \"integer\"\n                  },\n                  \"user_id\": {\n                    \"description\": \"The user ID\",\n                    \"type\": \"integer\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to grant a permission.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Role or User not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Grant permissions to site\",\n        \"tags\": [\n          \"Sites\",\n          \"Permissions\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/permissions/revoke\": {\n      \"post\": {\n        \"description\": \"- Authentication is required\\n- You should have revoke_role(Need revoke_administer_role when granting role having administer_blog )\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"role_id\": {\n                    \"description\": \"The role ID\",\n                    \"type\": \"integer\"\n                  },\n                  \"user_id\": {\n                    \"description\": \"The user ID\",\n                    \"type\": \"integer\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to revoke a permission.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Role or User not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Revoke permissions from site\",\n        \"tags\": [\n          \"Sites\",\n          \"Permissions\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/refresh_templates\": {\n      \"post\": {\n        \"description\": \"- Authorization is required.\\n\\n#### Permissions\\n\\n- edit_templates\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"The type of refresh mode.\\n\\n#### refresh\\n\\nRefresh all templates. However, A template that created by user will never refreshed and never removed from a site.\\n\\n#### clean\\n\\nRefresh all templates. In this mode, A template that created by user will removed from a site.\\n\\n**Default**: refresh\\n\",\n            \"in\": \"query\",\n            \"name\": \"refresh_type\",\n            \"schema\": {\n              \"default\": \"refresh\",\n              \"enum\": [\n                \"refresh\",\n                \"clean\"\n              ],\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to refresh templates of the request site.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Reset all templates in the site\",\n        \"tags\": [\n          \"Templates\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/stats/date/pageviews\": {\n      \"get\": {\n        \"description\": \"Retrieve pageviews count for each date from provider (e.g. Google Analytics).\\n\\nAuthorization is required.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"This is an required parameter. Start date of data. The format is \\\"YYYY-MM-DD\\\".\",\n            \"in\": \"query\",\n            \"name\": \"startDate\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"date\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"This is an required parameter. End date of data. The format is \\\"YYYY-MM-DD\\\".\",\n            \"in\": \"query\",\n            \"name\": \"endDate\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"date\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"This is an optional parameter. Maximum number of paths to retrieve. Default is 10.\",\n            \"in\": \"query\",\n            \"name\": \"limit\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"This is an optional parameter. 0-indexed offset. Default is 0.\",\n            \"in\": \"query\",\n            \"name\": \"offset\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"This is an optional parameter. The target path of data to retrieve. Default is the path of the current site.\",\n            \"in\": \"query\",\n            \"name\": \"path\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"This is an optional parameter. If true is given, the MT can return total pageviews for each uniqueness paths. However, that data does not contain page title because its spec. (Sometimes, Google Analytics will return another pageviews by same path.)\",\n            \"in\": \"query\",\n            \"name\": \"uniquePath\",\n            \"schema\": {\n              \"enum\": [\n                0,\n                1\n              ],\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"description\": \"An array of Items for date resource.\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/statisticsdate\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"description\": \"The total number of paths.\",\n                      \"type\": \"integer\"\n                    },\n                    \"totals\": {\n                      \"properties\": {\n                        \"pageviews\": {\n                          \"description\": \"The sum total of the pageviews in the specified period.\",\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"type\": \"object\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Not Found\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Retrieve pageviews count for each date from provider (e.g. Google Analytics)\",\n        \"tags\": [\n          \"Statistics\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/stats/date/visits\": {\n      \"get\": {\n        \"description\": \"Retrieve visits count for each date from provider (e.g. Google Analytics).\\n\\nAuthorization is required.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"This is an required parameter. Start date of data. The format is \\\"YYYY-MM-DD\\\".\",\n            \"in\": \"query\",\n            \"name\": \"startDate\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"date\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"This is an required parameter. End date of data. The format is \\\"YYYY-MM-DD\\\".\",\n            \"in\": \"query\",\n            \"name\": \"endDate\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"date\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"This is an optional parameter. Maximum number of paths to retrieve. Default is 10.\",\n            \"in\": \"query\",\n            \"name\": \"limit\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"This is an optional parameter. 0-indexed offset. Default is 0.\",\n            \"in\": \"query\",\n            \"name\": \"offset\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"This is an optional parameter. The target path of data to retrieve. Default is the path of the current site.\",\n            \"in\": \"query\",\n            \"name\": \"path\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"description\": \"An array of Items for date resource.\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/statisticsdate\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"description\": \"The total number of paths.\",\n                      \"type\": \"integer\"\n                    },\n                    \"totals\": {\n                      \"properties\": {\n                        \"visits\": {\n                          \"description\": \"The sum total of the pageviews in the specified period.\",\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"type\": \"object\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Not Found\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Retrieve visits count for each date from provider (e.g. Google Analytics)\",\n        \"tags\": [\n          \"Statistics\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/stats/path/pageviews\": {\n      \"get\": {\n        \"description\": \"Retrieve pageviews count for each path from provider (e.g. Google Analytics).\\n\\nAuthorization is required.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"This is an required parameter. Start date of data. The format is \\\"YYYY-MM-DD\\\".\",\n            \"in\": \"query\",\n            \"name\": \"startDate\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"date\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"This is an required parameter. End date of data. The format is \\\"YYYY-MM-DD\\\".\",\n            \"in\": \"query\",\n            \"name\": \"endDate\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"date\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"This is an optional parameter. Maximum number of paths to retrieve. Default is 10.\",\n            \"in\": \"query\",\n            \"name\": \"limit\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"This is an optional parameter. 0-indexed offset. Default is 0.\",\n            \"in\": \"query\",\n            \"name\": \"offset\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"This is an optional parameter. The target path of data to retrieve. Default is the path of the current site.\",\n            \"in\": \"query\",\n            \"name\": \"path\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"This is an optional parameter. If true is given, the MT can return total pageviews for each uniqueness paths. However, that data does not contain page title because its spec. (Sometimes, Google Analytics will return another pageviews by same path.)\",\n            \"in\": \"query\",\n            \"name\": \"uniquePath\",\n            \"schema\": {\n              \"enum\": [\n                0,\n                1\n              ],\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"description\": \"An array of Items for path resource.\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/statisticspath\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"description\": \"The total number of paths.\",\n                      \"type\": \"integer\"\n                    },\n                    \"totals\": {\n                      \"properties\": {\n                        \"pageviews\": {\n                          \"description\": \"The sum total of the pageviews in the specified period.\",\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"type\": \"object\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Not Found\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Retrieve pageviews count for each path from provider (e.g. Google Analytics)\",\n        \"tags\": [\n          \"Statistics\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/stats/path/visits\": {\n      \"get\": {\n        \"description\": \"Retrieve visits count for each date from provider (e.g. Google Analytics).\\n\\nAuthorization is required.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"This is an required parameter. Start date of data. The format is \\\"YYYY-MM-DD\\\".\",\n            \"in\": \"query\",\n            \"name\": \"startDate\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"date\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"This is an required parameter. End date of data. The format is \\\"YYYY-MM-DD\\\".\",\n            \"in\": \"query\",\n            \"name\": \"endDate\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"date\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"This is an optional parameter. Maximum number of paths to retrieve. Default is 10.\",\n            \"in\": \"query\",\n            \"name\": \"limit\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"This is an optional parameter. 0-indexed offset. Default is 0.\",\n            \"in\": \"query\",\n            \"name\": \"offset\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"This is an optional parameter. The target path of data to retrieve. Default is the path of the current site.\",\n            \"in\": \"query\",\n            \"name\": \"path\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"description\": \"An array of Items for path resource.\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/statisticspath\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"description\": \"The total number of paths.\",\n                      \"type\": \"integer\"\n                    },\n                    \"totals\": {\n                      \"properties\": {\n                        \"visits\": {\n                          \"description\": \"The sum total of the pageviews in the specified period.\",\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"type\": \"object\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Not Found\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Retrieve visits count for each path from provider (e.g. Google Analytics)\",\n        \"tags\": [\n          \"Statistics\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/stats/provider\": {\n      \"get\": {\n        \"description\": \"Retrieve a current effective provider.\\n\\nAuthorization is required.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Not Found\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Retrieve a current effective provider\",\n        \"tags\": [\n          \"Statistics\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/tags\": {\n      \"get\": {\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/tag_search\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/tag_searchFields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/tag_limit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/tag_offset\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/tag_sortBy\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/tag_sortOrder\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/tag_fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/tag_dateField\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/tag_dateFrom\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/tag_dateTo\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"description\": \"An array of tag resource.\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/tag\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"description\": \" The total number of tags.\",\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the list of tags.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site not found.\"\n          }\n        },\n        \"summary\": \"Retrieve a list of tags that related with specific site\",\n        \"tags\": [\n          \"Tags\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/tags/{tag_id}\": {\n      \"delete\": {\n        \"description\": \"\\n#### Notes\\n- This method accepts DELETE and POST with __method=DELETE.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"tag_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/tag\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to delete a tag.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Tag not found.\"\n          },\n          \"405\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Request method is not DELETE or POST with __method=DELETE\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Delete an existing tag\",\n        \"tags\": [\n          \"Tags\"\n        ]\n      },\n      \"get\": {\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"tag_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/tag_fields\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/tag\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the requested tag.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Tag not found.\"\n          }\n        },\n        \"summary\": \"Retrieve a single tag by its ID\",\n        \"tags\": [\n          \"Tags\"\n        ]\n      },\n      \"put\": {\n        \"description\": \"\\n#### Notes\\n- This method accepts PUT and POST with __method=PUT.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"tag_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"tag\": {\n                    \"$ref\": \"#/components/schemas/tag_updatable\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/tag\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to rename a tag.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Tag not found.\"\n          },\n          \"405\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Request method is not PUT or POST with __method=PUT\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Update an existing tag\",\n        \"tags\": [\n          \"Tags\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/tags/{tag_id}/assets\": {\n      \"get\": {\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"tag_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Input `MTAuth accessToken={accessToken}`\",\n            \"in\": \"header\",\n            \"name\": \"X-MT-Authorization\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/asset_limit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/asset_offset\"\n          },\n          {\n            \"description\": \"The target asset class to retrieve. Supported values are image, audio, video, file and any values added by plugins. If you want to retrieve multiple classes, specify the values separated by commas.\",\n            \"in\": \"query\",\n            \"name\": \"class\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"#### file_name\\n\\nSort by the filename of each asset.\\n\\n#### created_by\\n\\nSort by the ID of user who created each asset.\\n\\n#### created_on\\n\\n(default) Sort by the created time of each asset.\\n\\n**Default**: created_on\\n\",\n            \"in\": \"query\",\n            \"name\": \"sortBy\",\n            \"schema\": {\n              \"default\": \"created_on\",\n              \"enum\": [\n                \"file_name\",\n                \"created_by\",\n                \"created_on\"\n              ],\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/asset_sortOrder\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/asset_fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/asset_dateField\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/asset_dateFrom\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/asset_dateTo\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/asset\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the requested assets for site and tag.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or tag not found.\"\n          }\n        },\n        \"summary\": \"Retrieve assets that related with specified tag\",\n        \"tags\": [\n          \"Assets\",\n          \"Tags\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/tags/{tag_id}/entries\": {\n      \"get\": {\n        \"description\": \"- Authorization is required to include unpublished entries.\\n\\n#### Permissions\\n\\n- edit_entry\\n  - to retrieve unpublished entry\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"tag_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Input `MTAuth accessToken={accessToken}`\",\n            \"in\": \"header\",\n            \"name\": \"X-MT-Authorization\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_search\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_searchFields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_limit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_offset\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_sortBy\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_sortOrder\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_includeIds\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_excludeIds\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_status\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_maxComments\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_maxTrackbacks\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_no_text_filter\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_dateField\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_dateFrom\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/entry_dateTo\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"description\": \"An array of Entries resource. \",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/entry\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"description\": \" The total number of entries.\",\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the requested entries for site and tag.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Tag not found.\"\n          }\n        },\n        \"summary\": \"Retrieve a list of entries that related with specific tag\",\n        \"tags\": [\n          \"Entries\",\n          \"Tags\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/tags/{tag_id}/pages\": {\n      \"get\": {\n        \"description\": \"- Authorization is required to include unpublished pages.\\n\\n#### Permissions\\n\\n- manage_pages\\n  - to retrieve unpublished page\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"tag_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Input `MTAuth accessToken={accessToken}`\",\n            \"in\": \"header\",\n            \"name\": \"X-MT-Authorization\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_search\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_searchFields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_limit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_offset\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_sortBy\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_sortOrder\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_includeIds\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_excludeIds\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_status\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_maxComments\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_maxTrackbacks\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_no_text_filter\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_dateField\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_dateFrom\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/page_dateTo\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"description\": \"An array of page resource.\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/page\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"description\": \" The total number of pages.\",\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the requested pages.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Tag not found.\"\n          }\n        },\n        \"summary\": \"Retrieve a list of pages that related with specific tag.\",\n        \"tags\": [\n          \"Pages\",\n          \"Tags\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/templates\": {\n      \"get\": {\n        \"description\": \"- Authorization is required.\\n\\n#### Permissions\\n\\n- edit_templates\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/template_search\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/template_searchFields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/template_limit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/template_offset\"\n          },\n          {\n            \"description\": \"#### id\\n\\nSort by the ID of each template.\\n\\n#### name\\n\\nSort by the name of each template.\\n\\n#### created_on\\n\\nSort by the created time of each template.\\n\\n#### modified_on\\n\\nSort by the modified time of each template.\\n\\n#### created_by\\n\\nSort by the ID of user who created each template.\\n\\n#### modified_by\\n\\nSort by the ID of user who modified each template.\\n\\n#### type\\n\\nSort by the type of each template.\\n\\n**Default**: name\\n\",\n            \"in\": \"query\",\n            \"name\": \"sortBy\",\n            \"schema\": {\n              \"default\": \"name\",\n              \"enum\": [\n                \"id\",\n                \"name\",\n                \"created_on\",\n                \"modified_on\",\n                \"created_by\",\n                \"modified_by\",\n                \"type\"\n              ],\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/template_sortOrder\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/template_fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/template_includeIds\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/template_excludeIds\"\n          },\n          {\n            \"description\": \"Filter by template type. The list should be separated by commas. (e.g. archive, custom, index, individual, page etc...)\",\n            \"in\": \"query\",\n            \"name\": \"type\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/template_dateField\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/template_dateFrom\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/template_dateTo\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"description\": \"An array of template resource.\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/template\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"description\": \" The total number of templates.\",\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the list of templates.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Retrieve a list of templates in the specified site\",\n        \"tags\": [\n          \"Templates\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"- Authorization is required.\\n\\n#### Permissions\\n\\n- edit_templates\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"template\": {\n                    \"$ref\": \"#/components/schemas/template_updatable\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/template\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to create a template.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Create a new template\",\n        \"tags\": [\n          \"Templates\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/templates/preview\": {\n      \"post\": {\n        \"description\": \"- Authorization is required.\\n- **This endpoint has been available since Movable Type 6.1.2.**\\n- **type** parameter in the Templates resource is required.\\n\\n#### Permissions\\n\\n- edit_templates\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"If specify \\\"1\\\", will be returned preview contents.\",\n            \"in\": \"query\",\n            \"name\": \"raw\",\n            \"schema\": {\n              \"default\": 0,\n              \"enum\": [\n                0,\n                1\n              ],\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"template\": {\n                    \"$ref\": \"#/components/schemas/template\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"preview\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to get template preview.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Make a preview for a template\",\n        \"tags\": [\n          \"Templates\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/templates/{template_id}\": {\n      \"delete\": {\n        \"description\": \"- Authorization is required.\\n\\n#### Permissions\\n\\n- edit_templates\\n\\n#### Notes\\n- This method accepts DELETE and POST with __method=DELETE.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"template_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/template\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to delete a template.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Template not found.\"\n          },\n          \"405\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Request method is not DELETE or POST with __method=DELETE\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Delete a template\",\n        \"tags\": [\n          \"Templates\"\n        ]\n      },\n      \"get\": {\n        \"description\": \"- Authorization is required.\\n\\n#### Permissions\\n\\n- edit_templates\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"template_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/template_fields\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/template\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the requested template.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Template not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Retrieve single template by its ID\",\n        \"tags\": [\n          \"Templates\"\n        ]\n      },\n      \"put\": {\n        \"description\": \"- Authorization is required.\\n\\n#### Permissions\\n\\n- edit_templates\\n\\n#### Notes\\n- This method accepts PUT and POST with __method=PUT.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"template_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"template\": {\n                    \"$ref\": \"#/components/schemas/template_updatable\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/template\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to update a template.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Template not found.\"\n          },\n          \"405\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Request method is not PUT or POST with __method=PUT\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Update a template\",\n        \"tags\": [\n          \"Templates\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/templates/{template_id}/clone\": {\n      \"post\": {\n        \"description\": \"- Authorization is required.\\n\\n#### Permissions\\n\\n- edit_templates\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"template_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to clone a template.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Template not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Make a clone of a template\",\n        \"tags\": [\n          \"Templates\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/templates/{template_id}/preview\": {\n      \"post\": {\n        \"description\": \"- Authorization is required.\\n- **This endpoint has been available since Movable Type 6.1.2.**\\n- Only available for following templates\\n  - index\\n  - archive\\n  - individual\\n  - page\\n  - category\\n  - **template** parameter is required. If you just want to get preview template from existing data, you should provide **template** parameter with empty json.\\n\\n#### Permissions\\n\\n- edit_templates\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"template_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"If specify \\\"1\\\", will be returned preview contents.\",\n            \"in\": \"query\",\n            \"name\": \"raw\",\n            \"schema\": {\n              \"default\": 0,\n              \"enum\": [\n                0,\n                1\n              ],\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"template\": {\n                    \"$ref\": \"#/components/schemas/template\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"preview\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to get template preview.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Template not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Make a preview for a template with existing data\",\n        \"tags\": [\n          \"Templates\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/templates/{template_id}/publish\": {\n      \"post\": {\n        \"description\": \"- Authorization is required.\\n- Only available for following templates\\n  - index\\n  - archive\\n  - individual\\n  - page\\n  - category\\n\\n#### Permissions\\n\\n- rebuild\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"template_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to publish a template.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Template not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Publish a template\",\n        \"tags\": [\n          \"Templates\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/templates/{template_id}/refresh\": {\n      \"post\": {\n        \"description\": \"- Authorization is required.\\n\\n#### Permissions\\n\\n- edit_templates\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"template_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"messages\": {\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to refresh a template.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Template not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Reset template text to theme default or tempalte_set default\",\n        \"tags\": [\n          \"Templates\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/templates/{template_id}/templatemaps\": {\n      \"get\": {\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"template_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/templatemap_search\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/templatemap_searchFields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/templatemap_limit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/templatemap_offset\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/templatemap_sortBy\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/templatemap_sortOrder\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/templatemap_fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/templatemap_includeIds\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/templatemap_excludeIds\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/templatemap_dateField\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/templatemap_dateFrom\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/templatemap_dateTo\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"description\": \"An array of templatemap resource.\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/templatemap\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"description\": \" The total number of templatemaps.\",\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the list of templatemaps.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Template not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Retrieve a list of templatemaps in the specified site\",\n        \"tags\": [\n          \"Templates\",\n          \"TemplateMaps\"\n        ]\n      },\n      \"post\": {\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"template_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"templatemap\": {\n                    \"$ref\": \"#/components/schemas/templatemap_updatable\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/templatemap\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to create a templatemap.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Template not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Create a new templatemap\",\n        \"tags\": [\n          \"Templates\",\n          \"TemplateMaps\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/templates/{template_id}/templatemaps/{templatemap_id}\": {\n      \"delete\": {\n        \"description\": \"\\n#### Notes\\n- This method accepts DELETE and POST with __method=DELETE.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"template_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"templatemap_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/templatemap\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to delete a templatemap.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Template or TemplateMap not found.\"\n          },\n          \"405\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Request method is not DELETE or POST with __method=DELETE\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Delete an existing templatemap\",\n        \"tags\": [\n          \"Templates\",\n          \"TemplateMaps\"\n        ]\n      },\n      \"get\": {\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"template_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"templatemap_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/templatemap\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the requested templatemap.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Template or TemplateMap not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Retrieve a single templatemap by its ID\",\n        \"tags\": [\n          \"Templates\",\n          \"TemplateMaps\"\n        ]\n      },\n      \"put\": {\n        \"description\": \"\\n#### Notes\\n- This method accepts PUT and POST with __method=PUT.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"template_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"templatemap_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"templatemap\": {\n                    \"$ref\": \"#/components/schemas/templatemap_updatable\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/templatemap\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to update a templatemap.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Template or TemplateMap not found.\"\n          },\n          \"405\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Request method is not PUT or POST with __method=PUT\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Update an existing templatemap\",\n        \"tags\": [\n          \"Templates\",\n          \"TemplateMaps\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/themes\": {\n      \"get\": {\n        \"description\": \"- Authentication is required\\n\\n#### Permissions\\n\\n- manage_themes\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"description\": \"An array of theme resource.\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/theme\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"description\": \" The total number of themes.\",\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the requested site's themes.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Retrieve a list of themes for site\",\n        \"tags\": [\n          \"Themes\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/themes/{theme_id}\": {\n      \"get\": {\n        \"description\": \"- Authentication is required\\n\\n#### Permissions\\n\\n- manage_themes\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"theme_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/theme\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the requested site's theme.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Theme not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Retrieve a single theme by its ID for site\",\n        \"tags\": [\n          \"Themes\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/themes/{theme_id}/apply\": {\n      \"post\": {\n        \"description\": \"- Authentication is required\\n\\n#### Permissions\\n\\n- manage_themes\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"theme_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to apply the requested theme to site.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Theme not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Apply a theme to site\",\n        \"tags\": [\n          \"Themes\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/trackbacks\": {\n      \"get\": {\n        \"description\": \"Retrieve a list of trackbacks.\\n\\nAuthorization is required to include unpublished trackbacks\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Input `MTAuth accessToken={accessToken}`\",\n            \"in\": \"header\",\n            \"name\": \"X-MT-Authorization\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"This is an optional parameter. Maximum number of trackbacks to retrieve. Default is 10.\",\n            \"in\": \"query\",\n            \"name\": \"limit\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"This is an optional parameter. 0-indexed offset. Default is 0.\",\n            \"in\": \"query\",\n            \"name\": \"offset\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"This is an optional parameter. The comma separated ID list of trackbacks to include to result.\",\n            \"in\": \"query\",\n            \"name\": \"includeIds\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"This is an optional parameter. The comma separated ID list of trackbacks to exclude from result.\",\n            \"in\": \"query\",\n            \"name\": \"excludeIds\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/trackback_dateField\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/trackback_dateFrom\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/trackback_dateTo\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"description\": \"An array of trakcbacks resource. The list will sorted from oldest to newest by received date.\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/trackback\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"description\": \"The total number of trackbacks found.\",\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the list of trackbacks.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Not Found\"\n          }\n        },\n        \"summary\": \"Retrieve a list of trackbacks\",\n        \"tags\": [\n          \"Trackbacks\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/trackbacks/{ping_id}\": {\n      \"delete\": {\n        \"description\": \"Delete a trackbacks.\\n\\nAuthorization is required.\\n\\n#### Notes\\n- This method accepts DELETE and POST with __method=DELETE.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"ping_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/trackback\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to delete a trackback.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Not Found\"\n          },\n          \"405\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Request method is not DELETE or POST with __method=DELETE\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Delete a trackbacks\",\n        \"tags\": [\n          \"Trackbacks\"\n        ]\n      },\n      \"get\": {\n        \"description\": \"Retrieve a single trackback by its ID.\\n\\nAuthorization is required if the trackback status is \\\"unpublished\\\". If the trackback status is \\\"published\\\", then this method can be called without authorization.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"ping_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Input `MTAuth accessToken={accessToken}`\",\n            \"in\": \"header\",\n            \"name\": \"X-MT-Authorization\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/trackback\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the requested trackback.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Not Found\"\n          }\n        },\n        \"summary\": \"Retrieve a single trackback by its ID\",\n        \"tags\": [\n          \"Trackbacks\"\n        ]\n      },\n      \"put\": {\n        \"description\": \"Update a trackbacks.\\n\\nAuthorization is required.\\n\\n#### Notes\\n- This method accepts PUT and POST with __method=PUT.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"ping_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"trackback\": {\n                    \"$ref\": \"#/components/schemas/trackback_updatable\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/trackback\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to update a trackback.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Not Found\"\n          },\n          \"405\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Request method is not PUT or POST with __method=PUT\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Update a trackbacks\",\n        \"tags\": [\n          \"Trackbacks\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/widgets\": {\n      \"get\": {\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/widget_search\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/widget_searchFields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/widget_limit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/widget_offset\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/widget_sortBy\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/widget_sortOrder\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/widget_fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/widget_includeIds\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/widget_excludeIds\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/widget_dateField\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/widget_dateFrom\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/widget_dateTo\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"description\": \"An array of widget resource.\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/template\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"description\": \" The total number of widgets.\",\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the list of widgets.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Retrieve a list of widgets in the specified site\",\n        \"tags\": [\n          \"Widgets\"\n        ]\n      },\n      \"post\": {\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"widget\": {\n                    \"$ref\": \"#/components/schemas/template_updatable\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/template\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to create a widget.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Create a new widget\",\n        \"tags\": [\n          \"Widgets\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/widgets/{widget_id}\": {\n      \"delete\": {\n        \"description\": \"\\n#### Notes\\n- This method accepts DELETE and POST with __method=DELETE.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"widget_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/template\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to delete a widget.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Widget not found.\"\n          },\n          \"405\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Request method is not DELETE or POST with __method=DELETE\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Delete a widget\",\n        \"tags\": [\n          \"Widgets\"\n        ]\n      },\n      \"get\": {\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"widget_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/widget_fields\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/template\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the requested widget.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Widget not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Retrieve a single widget by its ID\",\n        \"tags\": [\n          \"Widgets\"\n        ]\n      },\n      \"put\": {\n        \"description\": \"\\n#### Notes\\n- This method accepts PUT and POST with __method=PUT.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"widget_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"widget\": {\n                    \"$ref\": \"#/components/schemas/template_updatable\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/template\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to update a widget.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Widget not found.\"\n          },\n          \"405\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Request method is not PUT or POST with __method=PUT\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Update a widget\",\n        \"tags\": [\n          \"Widgets\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/widgets/{widget_id}/clone\": {\n      \"post\": {\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"widget_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to clone a widget.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Widget not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Make a clone of a widget\",\n        \"tags\": [\n          \"Widgets\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/widgets/{widget_id}/refresh\": {\n      \"post\": {\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"widget_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"messages\": {\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to refresh a widget.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Widget not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Reset widget text to default\",\n        \"tags\": [\n          \"Widgets\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/widgetsets\": {\n      \"get\": {\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/widgetset_search\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/widgetset_searchFields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/widgetset_limit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/widgetset_offset\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/widgetset_sortBy\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/widgetset_sortOrder\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/widgetset_fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/widgetset_includeIds\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/widgetset_excludeIds\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/widgetset_dateField\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/widgetset_dateFrom\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/widgetset_dateTo\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"description\": \"An array of widgetset resource.\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/template\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"description\": \" The total number of widgetsets.\",\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the list of widgetsets.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Retrieve a list of widgetsets in the specified site\",\n        \"tags\": [\n          \"WidgetSets\"\n        ]\n      },\n      \"post\": {\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"widgetset\": {\n                    \"$ref\": \"#/components/schemas/template_updatable\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/template\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to create a widgetset.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Create a new widgetset\",\n        \"tags\": [\n          \"WidgetSets\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/widgetsets/{widgetset_id}\": {\n      \"delete\": {\n        \"description\": \"\\n#### Notes\\n- This method accepts DELETE and POST with __method=DELETE.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"widgetset_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/template\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to delete a widgetset.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or WidgetSet not found.\"\n          },\n          \"405\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Request method is not DELETE or POST with __method=DELETE\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Delete an existing widgetset\",\n        \"tags\": [\n          \"WidgetSets\"\n        ]\n      },\n      \"get\": {\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"widgetset_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/widgetset_fields\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/template\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the requested widgetset.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or WidgetSet not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Retrieve a single widgetset by its ID\",\n        \"tags\": [\n          \"WidgetSets\"\n        ]\n      },\n      \"put\": {\n        \"description\": \"\\n#### Notes\\n- This method accepts PUT and POST with __method=PUT.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"widgetset_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"widgetset\": {\n                    \"$ref\": \"#/components/schemas/template_updatable\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/template\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to update a widgetset.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or WidgetSet not found.\"\n          },\n          \"405\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Request method is not PUT or POST with __method=PUT\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Update an existing widgetset\",\n        \"tags\": [\n          \"WidgetSets\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/widgetsets/{widgetset_id}/widgets\": {\n      \"get\": {\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"widgetset_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/widget_search\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/widget_searchFields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/widget_limit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/widget_offset\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/widget_sortBy\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/widget_sortOrder\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/widget_fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/widget_includeIds\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/widget_excludeIds\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/widget_dateField\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/widget_dateFrom\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/widget_dateTo\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"description\": \"An array of widget resource.\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/template\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"description\": \" The total number of widgets.\",\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve widgets of the request widgetset.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or WidgetSet not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Retrieve a list of widgets in the specified widgetset\",\n        \"tags\": [\n          \"Widgets\",\n          \"WidgetSets\"\n        ]\n      }\n    },\n    \"/sites/{site_id}/widgetsets/{widgetset_id}/widgets/{widget_id}\": {\n      \"get\": {\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"site_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"widgetset_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"widget_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/widget_fields\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/template\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve a widget of the request widgetset.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Widget not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Retrieve a single widget by widgetset ID\",\n        \"tags\": [\n          \"Widgets\",\n          \"WidgetSets\"\n        ]\n      }\n    },\n    \"/textFilters\": {\n      \"get\": {\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"description\": \"An array of text filters.\",\n                      \"items\": {\n                        \"properties\": {\n                          \"key\": {\n                            \"description\": \"The key name of the text filter\",\n                            \"type\": \"string\"\n                          },\n                          \"label\": {\n                            \"description\": \"The display name of the text filter\",\n                            \"type\": \"string\"\n                          }\n                        },\n                        \"type\": \"object\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"description\": \" The total number of text filters.\",\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          }\n        },\n        \"summary\": \"Retrieve a list of text filters\",\n        \"tags\": [\n          \"System\"\n        ]\n      }\n    },\n    \"/themes\": {\n      \"get\": {\n        \"description\": \"- Authentication is required\\n\\n#### Permissions\\n\\n- manage_themes\\n\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"description\": \"An array of theme resource.\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/theme\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"description\": \" The total number of themes.\",\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the requested themes.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Retrieve a list of themes\",\n        \"tags\": [\n          \"Themes\"\n        ]\n      }\n    },\n    \"/themes/{theme_id}\": {\n      \"delete\": {\n        \"description\": \"- Authentication is required\\n- When successful, you can take Themes Resource that was deleted. However, this theme is already removed from the Movable Type. You cannot apply this theme to.\\n\\n#### Permissions\\n\\n- manage_themes\\n\\n#### Notes\\n- This method accepts DELETE and POST with __method=DELETE.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"theme_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/theme\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to uninstall the requested theme.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Theme not found.\"\n          },\n          \"405\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Request method is not DELETE or POST with __method=DELETE\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Uninstall a specified theme from the MT\",\n        \"tags\": [\n          \"Themes\"\n        ]\n      },\n      \"get\": {\n        \"description\": \"- Authentication is required\\n\\n#### Permissions\\n\\n- manage_themes\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"theme_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/theme\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the requested theme.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Theme not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Retrieve a single theme by its ID\",\n        \"tags\": [\n          \"Themes\"\n        ]\n      }\n    },\n    \"/token\": {\n      \"delete\": {\n        \"description\": \"Invalidate current access token. This is not logout. If the browser has active session id, new access token can be obtained easily.\\n\\nAuthorization is required.\\n\\n#### Notes\\n- This method accepts DELETE and POST with __method=DELETE.\\n\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"description\": \"The value of this parameter is always \\\"success\\\".\",\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"405\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Request method is not DELETE or POST with __method=DELETE\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Invalidate current session. This is like logout\",\n        \"tags\": [\n          \"Authentication\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"Create new access token related to current session.\\n\\nIn order to create new access token, in the case of a web browser, it is necessary to create session via authentication endpoints beforehand.\\n\\nIn the case of other than a browser, it is necessary to send a sessionId that is retrieved via authentication endpoints in MTAuth request header.\\n\\n`MTAuth sessionId={retrieved sessionId}`\\n\",\n        \"parameters\": [\n          {\n            \"description\": \"Input `MTAuth sessionId={sessionId}`\",\n            \"in\": \"header\",\n            \"name\": \"X-MT-Authorization\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"clientId\": {\n                    \"description\": \"This is not required if you specify session id via \\\"X-MT-Authorization\\\" request header. You can create new access token if you have a session id related to this clientId, although you do not have an access token. \",\n                    \"type\": \"string\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"accessToken\": {\n                      \"description\": \"Access token\",\n                      \"type\": \"string\"\n                    },\n                    \"expiresIn\": {\n                      \"description\": \"This access token will be invalidated automatically after the number of seconds specified here.\",\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          }\n        },\n        \"summary\": \"Create new access token related to current session\",\n        \"tags\": [\n          \"Authentication\"\n        ]\n      }\n    },\n    \"/users\": {\n      \"get\": {\n        \"description\": \"- Authentication is required to include non-active users or to get private properties.\\n\\n#### Permissions\\n\\n- administer\\n  - to retrieve non-active users\\n  - to read private properties\\n\",\n        \"parameters\": [\n          {\n            \"description\": \"Input `MTAuth accessToken={accessToken}`\",\n            \"in\": \"header\",\n            \"name\": \"X-MT-Authorization\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/user_search\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/user_searchFields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/user_limit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/user_offset\"\n          },\n          {\n            \"description\": \"The field name for sort. You can specify one of following values\\n- id\\n- name\\n\\n**Default**: name\\n\",\n            \"in\": \"query\",\n            \"name\": \"sortBy\",\n            \"schema\": {\n              \"default\": \"name\",\n              \"enum\": [\n                \"id\",\n                \"name\"\n              ],\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/user_sortOrder\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/user_fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/user_includeIds\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/user_excludeIds\"\n          },\n          {\n            \"description\": \"Filter by users's status.\\n\\n#### active\\n\\nstatus is Active\\n\\n#### disabled\\n\\nstatus is Disabled.\\n\\n#### pending\\n\\nstatus is Pending\\n\",\n            \"in\": \"query\",\n            \"name\": \"status\",\n            \"schema\": {\n              \"enum\": [\n                \"active\",\n                \"disabled\",\n                \"pending\"\n              ],\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"Filter by user's lockout status.\\n\\n#### locked_out\\n\\nLocked out user only\\n\\n#### not_locked_out\\n\\nNot locked out user only\\n\",\n            \"in\": \"query\",\n            \"name\": \"lockout\",\n            \"schema\": {\n              \"enum\": [\n                \"locked_out\",\n                \"not_locked_out\"\n              ],\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/user_dateField\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/user_dateFrom\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/user_dateTo\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"description\": \"An array of user resource.\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/user\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"description\": \" The total number of users.\",\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the requested users.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site not found.\"\n          }\n        },\n        \"summary\": \"Retrieve a list of users in the specified site\",\n        \"tags\": [\n          \"Users\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"- Authentication is required.\\n\\n#### Permissions\\n\\n- administer\\n\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"user\": {\n                    \"$ref\": \"#/components/schemas/user_updatable\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/user\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to create a user.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Create a new user\",\n        \"tags\": [\n          \"Users\"\n        ]\n      }\n    },\n    \"/users/export\": {\n      \"get\": {\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"text/csv\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"CSV Format\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to export users.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Export users\",\n        \"tags\": [\n          \"Users\"\n        ]\n      }\n    },\n    \"/users/import\": {\n      \"post\": {\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"properties\": {\n                  \"file\": {\n                    \"format\": \"binary\",\n                    \"type\": \"string\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"messages\": {\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"result\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Executed successfully\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to import users.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Import users\",\n        \"tags\": [\n          \"Users\"\n        ]\n      }\n    },\n    \"/users/synchronize\": {\n      \"post\": {\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to synchronize users.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Synchronize users\",\n        \"tags\": [\n          \"Users\"\n        ]\n      }\n    },\n    \"/users/{user_id}\": {\n      \"delete\": {\n        \"description\": \"- Authentication is required.\\n- Cannot delete oneself. Also, cannot delete system administrator user.\\n\\n#### Permissions\\n\\n- administer\\n\\n#### Notes\\n- This method accepts DELETE and POST with __method=DELETE.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"user_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/user\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to delete a user.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or User not found.\"\n          },\n          \"405\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Request method is not DELETE or POST with __method=DELETE\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Delete user\",\n        \"tags\": [\n          \"Users\"\n        ]\n      },\n      \"get\": {\n        \"description\": \"Retrieve a single user by its ID.\\n\\nAuthorization is required if you want to retrieve private properties.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"user_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"Input `MTAuth accessToken={accessToken}`\",\n            \"in\": \"header\",\n            \"name\": \"X-MT-Authorization\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"This is an optional parameter. The field list to retrieve as part of the Users resource. This list should be separated by comma. If this parameter is not specified, All fields will be returned.\",\n            \"in\": \"query\",\n            \"name\": \"fields\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/user\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the requested user.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Not Found\"\n          }\n        },\n        \"summary\": \"Retrieve a single user by its ID\",\n        \"tags\": [\n          \"Users\"\n        ]\n      },\n      \"put\": {\n        \"description\": \"Update user data.\\n\\nAuthorization is required.\\n\\n#### Notes\\n- This method accepts PUT and POST with __method=PUT.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"user_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"user\": {\n                    \"$ref\": \"#/components/schemas/user_updatable\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/user\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to update the requested user.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Not Found\"\n          },\n          \"405\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Request method is not PUT or POST with __method=PUT\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Update user data\",\n        \"tags\": [\n          \"Users\"\n        ]\n      }\n    },\n    \"/users/{user_id}/groups\": {\n      \"get\": {\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"user_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/group_search\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/group_searchFields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/group_limit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/group_offset\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/group_sortBy\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/group_sortOrder\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/group_fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/group_dateField\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/group_dateFrom\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/group_dateTo\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"description\": \"An array of group resource.\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/group\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"description\": \" The total number of groups.\",\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the requested user's groups.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"User not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Retrieve a list of groups\",\n        \"tags\": [\n          \"Users\",\n          \"Groups\"\n        ]\n      }\n    },\n    \"/users/{user_id}/permissions\": {\n      \"get\": {\n        \"description\": \"- Authentication is required\\n- If you want to get others list, you should have Administer privilege.\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"user_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/permission_limit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/permission_offset\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/permission_sortBy\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/permission_sortOrder\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/permission_fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/permission_blogIds\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/permission_dateField\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/permission_dateFrom\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/permission_dateTo\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"description\": \"An array of permission resource.\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/permission\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"description\": \" The total number of permissions.\",\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the requested user's permissions.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or User not found.\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Retrieve a list of permissions for user\",\n        \"tags\": [\n          \"Users\",\n          \"Permissions\"\n        ]\n      }\n    },\n    \"/users/{user_id}/permissions/grant\": {\n      \"post\": {\n        \"description\": \"- Authentication is required\\n- You should have revoke_role(Need revoke_administer_role when granting role having administer_blog )\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"user_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"role_id\": {\n                    \"description\": \"The role ID\",\n                    \"type\": \"integer\"\n                  },\n                  \"site_id\": {\n                    \"description\": \"The site ID\",\n                    \"type\": \"integer\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to grant a permission.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Role or User not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Grant permissions to user\",\n        \"tags\": [\n          \"Users\",\n          \"Permissions\"\n        ]\n      }\n    },\n    \"/users/{user_id}/permissions/revoke\": {\n      \"post\": {\n        \"description\": \"- Authentication is required\\n- You should have revoke_role(Need revoke_administer_role when granting role having administer_blog )\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"user_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"role_id\": {\n                    \"description\": \"The role ID\",\n                    \"type\": \"integer\"\n                  },\n                  \"site_id\": {\n                    \"description\": \"The site ID\",\n                    \"type\": \"integer\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to revoke a permission.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or Role or User not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Revoke permissions from user\",\n        \"tags\": [\n          \"Users\",\n          \"Permissions\"\n        ]\n      }\n    },\n    \"/users/{user_id}/recover_password\": {\n      \"post\": {\n        \"description\": \"- Authentication is required.\\n\\n#### Permissions\\n\\n- administer\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"user_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to recover password for user.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or User not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Send the link for password recovery to specified user by email\",\n        \"tags\": [\n          \"Users\"\n        ]\n      }\n    },\n    \"/users/{user_id}/sites\": {\n      \"get\": {\n        \"description\": \"Retrieve a list of blogs by user.\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"user_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"Input `MTAuth accessToken={accessToken}`\",\n            \"in\": \"header\",\n            \"name\": \"X-MT-Authorization\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"This is an optional parameter. Maximum number of blogs to retrieve. Default is 25. \",\n            \"in\": \"query\",\n            \"name\": \"limit\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"This is an optional parameter. 0-indexed offset. Default is 0.\",\n            \"in\": \"query\",\n            \"name\": \"offset\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"This is an optional parameter.\\n\\n#### name\\n\\n(default) Sort by the name of each blogs.\\n\\n#### created_on\\n\\nSort by the created time of each blogs.\\n\",\n            \"in\": \"query\",\n            \"name\": \"sortBy\",\n            \"schema\": {\n              \"enum\": [\n                \"name\",\n                \"created_on\"\n              ],\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"This is an optional parameter.\\n\\n#### ascend\\n\\n(default) Return blogs in ascending order. For the date, it means from oldest to newset.\\n\\n#### descend\\n\\nReturn blogs in descending order. For the date, it means from newest to oldest.\\n\",\n            \"in\": \"query\",\n            \"name\": \"sortOrder\",\n            \"schema\": {\n              \"enum\": [\n                \"ascend\",\n                \"descend\"\n              ],\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"This is an optional parameter. The comma separated ID list of blogs to include to result. \",\n            \"in\": \"query\",\n            \"name\": \"includeIds\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"This is an optional parameter. The comma separated ID list of blogs to exclude from result. \",\n            \"in\": \"query\",\n            \"name\": \"excludeIds\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"This is an optional parameter. the field list to retrieve as part of the Blogs resource. That list should be separated by comma. If this parameter is not specified, All fields will be returned.\",\n            \"in\": \"query\",\n            \"name\": \"fields\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/site_dateField\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/site_dateFrom\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/site_dateTo\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"items\": {\n                      \"description\": \"An array of Blogs resource. The list will sorted descending by blog name. \",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/blog\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"totalResults\": {\n                      \"description\": \"The total number of blogs found. \",\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to retrieve the list of blogs.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Not Found\"\n          }\n        },\n        \"summary\": \"Retrieve a list of blogs by user\",\n        \"tags\": [\n          \"Users\",\n          \"Sites\"\n        ]\n      }\n    },\n    \"/users/{user_id}/unlock\": {\n      \"post\": {\n        \"description\": \"- Authentication is required.\\n\\n#### Permissions\\n\\n- administer\\n\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"user_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"No Errors.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          },\n          \"403\": {\n            \"description\": \"Do not have permission to unlock a user.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Site or User not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"mtauth\": []\n          }\n        ],\n        \"summary\": \"Unlock user account\",\n        \"tags\": [\n          \"Users\"\n        ]\n      }\n    },\n    \"/version\": {\n      \"get\": {\n        \"description\": \"Retrieves Data API version of the server.\\n\\n**This endpoint has been available since Movable Type 6.2.4.**\\n\\nThis endpoint does not need /v3 or something API endpoint version identifier.\\nYou can call like: `https://host/path/your-mt-data-api.cgi/version`\\n\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"apiVersion\": {\n                      \"format\": \"float\",\n                      \"type\": \"number\"\n                    },\n                    \"endpointVersion\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Bad request\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorContent\"\n                }\n              }\n            },\n            \"description\": \"Invalid login\"\n          }\n        },\n        \"summary\": \"Get server API version\",\n        \"tags\": [\n          \"Common API\"\n        ]\n      }\n    }\n  },\n  \"servers\": [\n    {\n      \"url\": \"https://example.com/mt/mt-data-api.cgi/v1\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"name\": \"Authentication\"\n    },\n    {\n      \"name\": \"Common API\"\n    },\n    {\n      \"name\": \"Endpoints\"\n    }\n  ]\n}",
			"canonicalURL": "/github.com/redamoon/docker-mt-lamp@6e6db5cd49cc6ffe100bd193c8e38f955f070415/-/blob/api/redoc/openapi.json",
			"externalURLs": [
				{
					"url": "https://github.com/redamoon/docker-mt-lamp/blob/6e6db5cd49cc6ffe100bd193c8e38f955f070415/api/redoc/openapi.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: offset 146039: control characters are not allowed"
}