{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/broadinstitute/rawls"
		},
		"file": {
			"name": "api-docs.yaml",
			"size": 0,
			"path": "core/src/main/resources/swagger/api-docs.yaml",
			"byteSize": 212920,
			"content": "openapi: 3.0.1\ninfo:\n  title: Rawls\n  description: Rawls API\n  termsOfService: http://www.github.com/broadinstitute/rawls\n  license:\n    name: BSD\n    url: http://opensource.org/licenses/BSD-3-Clause\n  version: 1.0.0\nservers:\n  - url: /\ntags:\n  - name: admin\n  - name: billing\n  - name: billing_v2\n  - name: entities\n  - name: methodconfigs\n  - name: notifications\n  - name: servicePerimeters\n  - name: snapshots_v2\n  - name: status\n  - name: submissions\n  - name: users\n  - name: version\n  - name: workflows\n  - name: workspaces\n\npaths:\n  /version:\n    get:\n      tags:\n        - version\n      summary: get version information of this application\n      description: get version information of this application\n      operationId: version\n      responses:\n        200:\n          description: Version information of this application\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ApplicationVersion'\n  /status:\n    get:\n      security: []\n      tags:\n        - status\n      summary: status check for underlying systems\n      description: status check for underlying systems\n      operationId: systemStatus\n      responses:\n        200:\n          description: All systems OK\n          content: {}\n        500:\n          description: Problem with one or more systems. See response for details.\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/SystemStatus'\n  /version/executionEngine:\n    get:\n      security: []\n      tags:\n        - version\n      summary: get version information of the execution engine\n      description: get version information of the execution engine\n      operationId: execVersion\n      responses:\n        200:\n          description: The currently running version of the execution engine\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ExecutionEngineVersion'\n  /api/billing:\n    post:\n      tags:\n        - billing\n      summary: create billing project in rawls and google\n      description: create new billing project in rawls and google\n      operationId: createBillingProjectFull\n      requestBody:\n        description: create project request\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/CreateRawlsBillingProjectFullRequest'\n        required: true\n      responses:\n        204:\n          description: Successfully Created Billing Project in Rawls and Google\n          content: {}\n        400:\n          description: firecloud billing user must be a user of the billing account\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        403:\n          description: You must be a user of the google billing account and have permissions\n            on the service perimeter if one is specified\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        409:\n          description: project already exists in rawls or google\n          content: {}\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      security:\n        - authorization:\n            - openid\n            - email\n            - profile\n            - https://www.googleapis.com/auth/cloud-billing\n      x-codegen-request-body-name: createProjectRequest\n  /api/billing/{projectId}/members:\n    get:\n      tags:\n        - billing\n      summary: list members of billing project the caller owns\n      description: list members of billing project the caller owns\n      operationId: listBillingProjectMembers\n      parameters:\n        - name: projectId\n          in: path\n          description: Project ID\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Success\n          content:\n            'application/json':\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/RawlsBillingProjectMember'\n        403:\n          description: You must be a project owner to view the members of a project\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n  /api/billing/{projectId}/{workbenchRole}/{email}:\n    put:\n      tags:\n        - billing\n      summary: add user or group to billing project the caller owns\n      description: add user or group to billing project the caller owns\n      operationId: addUserToBillingProject\n      parameters:\n        - name: projectId\n          in: path\n          description: Project ID\n          required: true\n          schema:\n            type: string\n        - name: workbenchRole\n          in: path\n          description: role of user for project\n          required: true\n          schema:\n            type: string\n            enum:\n              - user\n              - owner\n        - name: email\n          in: path\n          description: email of user or group to add\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Successfully Added User/Group To Billing Project\n          content: {}\n        403:\n          description: You must be a project owner to add a user to a billing project\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: User not found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n    delete:\n      tags:\n        - billing\n      summary: remove user or group from billing project the caller owns\n      description: remove user or group from billing project the caller owns\n      operationId: removeUserFromBillingProject\n      parameters:\n        - name: projectId\n          in: path\n          description: Project ID\n          required: true\n          schema:\n            type: string\n        - name: workbenchRole\n          in: path\n          description: role of user for project\n          required: true\n          schema:\n            type: string\n            enum:\n              - user\n              - owner\n        - name: email\n          in: path\n          description: email of user or group to remove\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Successfully Removed User From Billing Project\n          content: {}\n        403:\n          description: You must be a project owner to add a user to a billing project\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: User not found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n  /api/billing/v2:\n    post:\n      tags:\n        - billing_v2\n      summary: create billing project in rawls\n      description: create new billing project in rawls\n      operationId: createBillingProjectFullV2\n      requestBody:\n        description: create project request\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/CreateRawlsV2BillingProjectFullRequest'\n        required: true\n      responses:\n        201:\n          description: Successfully Created Billing Project in Rawls\n        400:\n          description: both you and firecloud billing user must be a user of the billing account\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        409:\n          description: project already exists in rawls\n          content: {}\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      security:\n        - authorization:\n            - openid\n            - email\n            - profile\n            - https://www.googleapis.com/auth/cloud-billing\n      x-codegen-request-body-name: createProjectRequest\n  /api/billing/v2/{projectId}:\n    get:\n      tags:\n        - billing_v2\n      summary: get billing project\n      description: get billing project\n      operationId: getBillingProject\n      parameters:\n        - name: projectId\n          in: path\n          description: Id of the billing project\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/RawlsBillingProjectResponse'\n        404:\n          description: Project Not Found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Internal Server Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n    delete:\n      tags:\n        - billing_v2\n      summary: delete billing project\n      description: delete billing project\n      operationId: deleteBillingProject\n      parameters:\n        - name: projectId\n          in: path\n          description: Id of the billing project\n          required: true\n          schema:\n            type: string\n      responses:\n        204:\n          description: OK\n        404:\n          description: Project Not Found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Internal Server Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n  /api/billing/v2/{projectId}/billingAccount:\n    put:\n      tags:\n        - billing_v2\n      summary: update billing account on billing project\n      description: update billing account on billing project\n      operationId: updateBillingProjectBillingAccount\n      parameters:\n        - name: projectId\n          in: path\n          description: Id of the billing project\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: update billing account request\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/UpdateRawlsBillingAccountRequest'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/RawlsBillingProjectResponse'\n        400:\n          description: Billing account not found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: Project Not Found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Internal Server Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n    delete:\n      tags:\n        - billing_v2\n      summary: removes the billing account from the billing project\n      description: removes the billing account from the billing project\n      operationId: removeBillingProjectBillingAccount\n      parameters:\n        - name: projectId\n          in: path\n          description: Id of the billing project\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/RawlsBillingProjectResponse'\n        404:\n          description: Project Not Found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Internal Server Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n  /api/billing/v2/{projectId}/members:\n    get:\n      tags:\n        - billing_v2\n      summary: list members of billing project the caller owns\n      description: list members of billing project the caller owns\n      operationId: listBillingProjectMembers\n      parameters:\n        - name: projectId\n          in: path\n          description: Project ID\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Success\n          content:\n            'application/json':\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/RawlsBillingProjectMember'\n        403:\n          description: You must be a project owner to view the members of a project\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n  /api/billing/v2/{projectId}/spendReport:\n    get:\n      tags:\n        - billing_v2\n      summary: get spend report for the billing project\n      description: get spend report for the billing project\n      operationId: getSpendReport\n      parameters:\n        - name: projectId\n          in: path\n          description: Billing Project ID\n          required: true\n          schema:\n            type: string\n        - name: startDate\n          in: query\n          description: start date of report (YYYY-MM-DD). Data included in report will start at 12 AM UTC on this date.\n          required: true\n          schema:\n            type: string\n            format: date\n        - name: endDate\n          in: query\n          description: end date of report (YYYY-MM-DD). Data included in report will end at 11:59 PM UTC on this date.\n          required: true\n          schema:\n            type: string\n            format: date\n        - name: aggregationKey\n          in: query\n          description: Key indicating how to aggregate spend data in results. Will return only summary data (spendDetails is empty) if aggregationKey is not present\n          required: false\n          schema:\n            type: string\n            enum:\n              - Daily\n              - Workspace\n      responses:\n        200:\n          description: Success\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/SpendReport'\n        400:\n          description: invalid spend report parameters\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        403:\n          description: You must be a project owner to view the spend report of a project\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: The specified billing project could not be found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n\n\n  /api/billing/v2/{projectId}/spendReportConfiguration:\n    get:\n      tags:\n        - billing_v2\n      summary: get the spend report configuration for the billing project\n      description: get the spend report configuration for the billing project\n      operationId: getSpendReportConfiguration\n      parameters:\n        - name: projectId\n          in: path\n          description: Billing Project ID\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Successfully retrieved spend report configuration\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/SpendReportConfiguration'\n        204:\n          description: The specified billing project exists but does not have spend reporting configured\n        403:\n          description: You must be a billing project owner to view the spend report configuration of the billing project\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: The specified billing project could not be found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n    put:\n      tags:\n        - billing_v2\n      summary: set the spend configuration for the billing project\n      description: set the spend configuration for the billing project\n      operationId: setSpendReportConfiguration\n      parameters:\n        - name: projectId\n          in: path\n          description: Billing Project ID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: billing project spend configuration information\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/SpendReportConfiguration'\n      responses:\n        204:\n          description: Successfully updated spend configuration\n        400:\n          description: Either the billing project does not have an active billing account, the specified dataset does not exist, or the specified table does not exist\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        403:\n          description: You must be a billing project owner to alter the spend configuration of the billing project\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: The specified billing project could not be found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n    delete:\n      tags:\n        - billing_v2\n      summary: clear the spend configuration for the billing project\n      description: clear the spend configuration for the billing project\n      operationId: clearSpendReportConfiguration\n      parameters:\n        - name: projectId\n          in: path\n          description: Billing Project ID\n          required: true\n          schema:\n            type: string\n      responses:\n        204:\n          description: Successfully cleared spend configuration\n        403:\n          description: You must be a billing project owner to alter the spend configuration of the billing project\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n  /api/billing/v2/{projectId}/members/{workbenchRole}/{email}:\n    put:\n      tags:\n        - billing_v2\n      summary: add user or group to billing project the caller owns\n      description: add user or group to billing project the caller owns\n      operationId: addUserToBillingProject\n      parameters:\n        - name: projectId\n          in: path\n          description: Project ID\n          required: true\n          schema:\n            type: string\n        - name: workbenchRole\n          in: path\n          description: role of user for project\n          required: true\n          schema:\n            type: string\n            enum:\n              - user\n              - owner\n        - name: email\n          in: path\n          description: email of user or group to add\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Successfully Added User/Group To Billing Project\n        403:\n          description: You must be a project owner to add a user to a billing project\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: User not found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n    delete:\n      tags:\n        - billing_v2\n      summary: remove user or group from billing project the caller owns\n      description: remove user or group from billing project the caller owns\n      operationId: removeUserFromBillingProject\n      parameters:\n        - name: projectId\n          in: path\n          description: Project ID\n          required: true\n          schema:\n            type: string\n        - name: workbenchRole\n          in: path\n          description: role of user for project\n          required: true\n          schema:\n            type: string\n            enum:\n              - user\n              - owner\n        - name: email\n          in: path\n          description: email of user or group to remove\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Successfully Removed User From Billing Project\n        403:\n          description: You must be a project owner to add a user to a billing project\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: User not found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n  /api/admin/project/registration:\n    post:\n      tags:\n        - admin\n      summary: create a record of project ownership\n      operationId: recordProjectOwnership\n      requestBody:\n        description: create project request\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/RawlsBillingProjectTransfer'\n        required: true\n      responses:\n        201:\n          description: Successful project record creation\n          content: {}\n        403:\n          description: You must be an admin to call this endpoint.\n          content: {}\n        404:\n          description: Missing required parameter\n          content: {}\n        500:\n          description: Internal Server Error\n          content: {}\n      x-codegen-request-body-name: createProjectRequest\n  /api/admin/project/registration/{projectName}:\n    delete:\n      tags:\n        - admin\n      summary: remove the record for a billing project\n      operationId: unregisterBillingProject\n      parameters:\n        - name: projectName\n          in: path\n          description: name of the project\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          'application/json':\n            schema:\n              required:\n                - newOwnerEmail\n                - newOwnerToken\n              type: object\n              properties:\n                newOwnerEmail:\n                  type: string\n                  description: Email of the current owner\n                newOwnerToken:\n                  type: string\n                  description: OAuth2Token of the current owner\n        required: true\n      responses:\n        204:\n          description: Successful project record removal\n          content: {}\n        403:\n          description: You must be an admin to call this endpoint.\n          content: {}\n        404:\n          description: Missing required parameter\n          content: {}\n        500:\n          description: Internal Server Error\n          content: {}\n      x-codegen-request-body-name: ownerInfo\n  /api/admin/submissions:\n    get:\n      tags:\n        - admin\n        - submissions\n      summary: list active submissions\n      description: List all active submissions in all workspaces\n      operationId: listAllActiveSubmissions\n      responses:\n        200:\n          description: Successful Request\n          content:\n            'application/json':\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ActiveSubmission'\n        403:\n          description: You must be an admin to list active submissions\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        502:\n          description: Trouble talking to Google\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n  /api/admin/submissions/{workspaceNamespace}/{workspaceName}/{submissionId}:\n    delete:\n      tags:\n        - admin\n        - submissions\n      summary: abort a submission\n      description: Administratively abort an active submission\n      operationId: adminAbortSubmission\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: workspaceNamespace of the submission\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: workspaceName of the submission\n          required: true\n          schema:\n            type: string\n        - name: submissionId\n          in: path\n          description: id of the submission\n          required: true\n          schema:\n            type: string\n      responses:\n        204:\n          description: Successful Request\n          content: {}\n        403:\n          description: You must be an admin to abort a submission\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        502:\n          description: Trouble talking to Google or Cromwell\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n  /api/admin/user/role/curator/{userEmail}:\n    put:\n      tags:\n        - admin\n      summary: Add a library curator\n      description: adds a user to the list of curators\n      operationId: adminAddCurator\n      parameters:\n        - name: userEmail\n          in: path\n          description: email of user\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Successful Request\n          content: {}\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n    delete:\n      tags:\n        - admin\n      summary: Remove a library curator\n      description: removes a user from the list of curators\n      operationId: adminRemoveCurator\n      parameters:\n        - name: userEmail\n          in: path\n          description: email of user\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Successful Request\n          content: {}\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n  /api/admin/workspaces:\n    get:\n      tags:\n        - admin\n        - workspaces\n      summary: list all workspaces\n      description: List all workspaces\n      operationId: listAllWorkspaces\n      parameters:\n        - name: attributeName\n          in: query\n          description: Optional workspace attribute to filter on\n          schema:\n            type: string\n        - name: valueString\n          in: query\n          description: attribute value (for String attributes)\n          schema:\n            type: string\n        - name: valueNumber\n          in: query\n          description: attribute value (for numerical attributes)\n          schema:\n            type: number\n        - name: valueBoolean\n          in: query\n          description: attribute value (for boolean attributes)\n          schema:\n            type: boolean\n      responses:\n        200:\n          description: Successful Request\n          content:\n            'application/json':\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/WorkspaceDetails'\n        403:\n          description: You must be an admin to list workspaces\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n  /api/admin/workspaces/{workspaceNamespace}/{workspaceName}/flags:\n    get:\n      tags:\n        - admin\n        - workspaces\n      summary: list feature flags for workspace\n      description: list feature flags for workspace\n      operationId: listWorkspaceFlags\n      parameters:\n        - $ref: '#/components/parameters/workspaceNamespacePathParam'\n        - $ref: '#/components/parameters/workspaceNamePathParam'\n      responses:\n        200:\n          description: Successful Request\n          content:\n            'application/json':\n              schema:\n                type: array\n                items:\n                  type: string\n        403:\n          description: You must be an admin to list feature flags\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n    put:\n      tags:\n        - admin\n        - workspaces\n      summary: overwrite feature flags for workspace\n      description: overwrite feature flags for workspace\n      operationId: overwriteWorkspaceFlags\n      parameters:\n        - $ref: '#/components/parameters/workspaceNamespacePathParam'\n        - $ref: '#/components/parameters/workspaceNamePathParam'\n      requestBody:\n        description: full set of flags for this workspace\n        required: true\n        content:\n          'application/json':\n            schema:\n              type: array\n              items:\n                type: string\n      responses:\n        200:\n          description: Successful Request\n          content:\n            'application/json':\n              schema:\n                type: array\n                items:\n                  type: string\n        403:\n          description: You must be an admin to overwrite feature flags\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n  /api/admin/refreshToken/{userSubjectId}:\n    delete:\n      deprecated: true\n      tags:\n        - admin\n      summary: Admin revoke and remove a user's refresh token\n      description: revoke and remove a user's refresh token\n      operationId: admin_delete_refresh_token\n      parameters:\n        - name: userSubjectId\n          in: path\n          description: user's subject id\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: user's refresh token revoked and removed\n          content: {}\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n  /api/admin/submissions/queueStatusByUser:\n    get:\n      tags:\n        - admin\n        - submissions\n      summary: workflow queue status by user\n      description: List workflow counts by queueing state and by user\n      operationId: workflowQueueStatusByUser\n      responses:\n        200:\n          description: Successful request\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/WorkflowQueueStatusByUserResponse'\n        403:\n          description: You must be an admin\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n  /api/servicePerimeters/{servicePerimeterName}/projects/{projectName}:\n    put:\n      tags:\n        - servicePerimeters\n      summary: Add a project to a service perimeter\n      description: Add a project to a service perimeter, must have 'add_to_service_perimeter'\n        action on project and 'add_project' action on perimeter, included in owner\n        role for both\n      operationId: addProjectToServicePerimeter\n      parameters:\n        - name: servicePerimeterName\n          in: path\n          description: Fully qualified google service perimeter name in the form of\n            accessPolicies/[POLICY NUMBER]/servicePerimeters/[NAME], url encoded\n          required: true\n          schema:\n            type: string\n        - name: projectName\n          in: path\n          description: Project name\n          required: true\n          schema:\n            type: string\n      responses:\n        204:\n          description: Project has been added to the perimeter\n          content: {}\n        400:\n          description: Project is already in perimeter or is not in 'Ready' state\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        403:\n          description: Project does not exist or you do not have access\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: Service Perimeter does not exist or you do not have access\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/submissions:\n    get:\n      tags:\n        - submissions\n      summary: List all submissions\n      description: List all submissions run in this workspace\n      operationId: listSubmissions\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Successful Request\n          content:\n            'application/json':\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/SubmissionListResponse'\n        404:\n          description: Workspace not found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n    post:\n      tags:\n        - submissions\n      summary: Create submission\n      description: Submit a new job\n      operationId: createSubmission\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Description of a submission.\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/SubmissionRequest'\n        required: true\n      responses:\n        201:\n          description: Successful Request\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/SubmissionReport'\n        400:\n          description: Expression evaluation failed or entities are not of type required\n            by method config\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: Workspace, Method Configuration or Entity not found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        502:\n          description: Trouble talking to Agora\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      x-codegen-request-body-name: submission\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/submissionsCount:\n    get:\n      tags:\n        - submissions\n      summary: Count submissions by status\n      description: Counts all submissions run in this workspace, grouped by status.\n        Returns a map of status:count.\n      operationId: countSubmissions\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Successful Request\n          content:\n            'application/json':\n              schema:\n                type: object\n                description: Map[String,Int]\n        404:\n          description: Workspace not found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/submissions/validate:\n    post:\n      tags:\n        - submissions\n      summary: Validate submission\n      description: Validate expression syntax for a submission\n      operationId: validateSubmission\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Description of a submission.\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/SubmissionRequest'\n        required: true\n      responses:\n        200:\n          description: Validation Response\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/SubmissionValidationReport'\n        400:\n          description: Expression evaluation failed or entities are not of type required\n            by method config\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: Workspace, Method Configuration, Data Reference, or Entity not found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        502:\n          description: Trouble talking to Agora\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      x-codegen-request-body-name: submission\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/submissions/{submissionId}:\n    get:\n      tags:\n        - submissions\n      summary: Monitor submission status\n      description: Monitor submission status\n      operationId: getSubmissionStatus\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n        - name: submissionId\n          in: path\n          description: Submission Id\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Successful Request\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/Submission'\n        404:\n          description: Workspace or submission not found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n    patch:\n      tags:\n        - submissions\n      summary: Update user comment for a submission\n      description: Update user comment for a submission\n      operationId: updateSubmissionUserComment\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n        - name: submissionId\n          in: path\n          description: Submission Id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: User comment to be updated\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/UserCommentUpdateOperation'\n        required: true\n      responses:\n        200:\n          description: Successful Request\n        404:\n          description: Workspace or submission not found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n    delete:\n      tags:\n        - submissions\n      summary: Abort submission\n      description: Abort a currently running submission\n      operationId: abortSubmission\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n        - name: submissionId\n          in: path\n          description: Submission Id\n          required: true\n          schema:\n            type: string\n      responses:\n        204:\n          description: Submission successfully aborted\n          content: {}\n        404:\n          description: Workspace or submission not found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        502:\n          description: Unable to abort all workflows in this submission\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/submissions/{submissionId}/workflows/{workflowId}/cost:\n    get:\n      tags:\n        - submissions\n      summary: Get workflow cost\n      description: Retrieve workflow cost, if available\n      operationId: getWorkflowCost\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n        - name: submissionId\n          in: path\n          description: Submission Id\n          required: true\n          schema:\n            type: string\n        - name: workflowId\n          in: path\n          description: Workflow Id\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Successful Request\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/WorkflowCost'\n        404:\n          description: Workspace, Submission or Workflow not found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/submissions/{submissionId}/workflows/{workflowId}/outputs:\n    get:\n      tags:\n        - submissions\n      summary: Get workflow outputs\n      description: Retrieve outputs for a workflow\n      operationId: getWorkflowOutputs\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n        - name: submissionId\n          in: path\n          description: Submission Id\n          required: true\n          schema:\n            type: string\n        - name: workflowId\n          in: path\n          description: Workflow Id\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Successful Request\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/WorkflowOutputs'\n        404:\n          description: Workspace, Submission or Workflow not found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        502:\n          description: Unable to retrieve outputs or logs from Cromwell\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/submissions/{submissionId}/workflows/{workflowId}:\n    get:\n      tags:\n        - submissions\n      summary: Get call-level metadata for workflow\n      description: Get call-level metadata for workflow\n      operationId: workflowMetadata\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n        - name: submissionId\n          in: path\n          description: Submission Id\n          required: true\n          schema:\n            type: string\n        - name: workflowId\n          in: path\n          description: Workflow Id\n          required: true\n          schema:\n            type: string\n        - name: includeKey\n          in: query\n          description: |\n            When specified key(s) to include from the metadata. Matches any key starting with the value. May not be used with excludeKey. This applies to all keys in the response, including within nested blocks.\n          style: form\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - name: excludeKey\n          in: query\n          description: |\n            When specified key(s) to exclude from the metadata. Matches any key starting with the value. May not be used with includeKey. This applies to all keys in the response, including within nested blocks.\n          style: form\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - name: expandSubWorkflows\n          in: query\n          description: |\n            When true, metadata for sub workflows will be fetched and inserted automatically in the metadata response.\n          schema:\n            type: boolean\n            default: false\n      responses:\n        200:\n          description: Successful Request\n          content: {}\n        404:\n          description: Workspace, Submission or Workflow not found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n  /api/submissions/queueStatus:\n    get:\n      tags:\n        - submissions\n      summary: workflow queue status\n      description: List workflow counts by queueing state\n      operationId: workflowQueueStatus\n      responses:\n        200:\n          description: Successful Request\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/WorkflowQueueStatusResponse'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/entityQuery/{entityType}:\n    get:\n      tags:\n        - entities\n      summary: Paginated query for entities in a workspace\n      operationId: entityQuery\n      parameters:\n        - $ref: '#/components/parameters/workspaceNamespacePathParam'\n        - $ref: '#/components/parameters/workspaceNamePathParam'\n        - $ref: '#/components/parameters/entityTypePathParam'\n        - name: page\n          in: query\n          description: Page number, 1-indexed (default 1)\n          schema:\n            minimum: 1\n            type: number\n            default: 1\n        - name: pageSize\n          in: query\n          description: Page size (default 10)\n          schema:\n            minimum: 1\n            type: number\n            default: 10\n        - name: sortField\n          in: query\n          description: Sort field (default \"name\")\n          schema:\n            type: string\n            default: name\n        - name: sortDirection\n          in: query\n          description: Sort direction (asc or desc, default asc)\n          schema:\n            type: string\n            default: asc\n            enum:\n              - asc\n              - desc\n        - name: filterTerms\n          in: query\n          description: Filter terms\n          schema:\n            type: string\n        - name: fields\n          in: query\n          description: |\n            When specified, include only these attributes in the response payload and exclude other attributes. Accepts a comma-delimited list of values. If omitted, will return the full response payload.\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              type: string\n        - $ref: '#/components/parameters/dataReferenceQueryParam'\n        - $ref: '#/components/parameters/billingProjectQueryParam'\n      responses:\n        200:\n          description: List of entities in workspace\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityQueryResponse'\n        404:\n          description: Workspace or entity type does not exist\n          content: {}\n        500:\n          description: Internal Server Error\n          content: {}\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/entities/{entityType}/{entityName}/rename:\n    post:\n      tags:\n        - entities\n      summary: rename entity in a workspace\n      description: Rename an entity\n      operationId: renameEntity\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n        - name: entityType\n          in: path\n          description: Entity Type\n          required: true\n          schema:\n            type: string\n        - name: entityName\n          in: path\n          description: Entity Name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: New entity name\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/EntityName'\n        required: true\n      responses:\n        204:\n          description: Successful Request\n          content: {}\n        404:\n          description: Workspace or Entity not found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        409:\n          description: New name for entity already exists in workspace\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      x-codegen-request-body-name: newEntityNameJson\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/entities/{entityType}/{entityName}/evaluate:\n    post:\n      tags:\n        - entities\n      summary: evaluate expression on an entity\n      description: Evaluates an attribute expression taking the given entity as root\n      operationId: evaluateExpression\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n        - name: entityType\n          in: path\n          description: Entity Type\n          required: true\n          schema:\n            type: string\n        - name: entityName\n          in: path\n          description: Entity Name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Expression\n        content:\n          'application/json':\n            schema:\n              type: string\n        required: true\n      responses:\n        200:\n          description: Successful Request\n          content: {}\n        400:\n          description: Invalid entity expression\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: Workspace or Entity not found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      x-codegen-request-body-name: expression\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/entities:\n    get:\n      tags:\n        - entities\n      summary: Entity type metadata\n      description: 'Get entity type metadata: for each type, the number of entities\n        of that type and all attribute names used'\n      operationId: entity_type_metadata\n      parameters:\n        - $ref: '#/components/parameters/workspaceNamespacePathParam'\n        - $ref: '#/components/parameters/workspaceNamePathParam'\n        - name: useCache\n          in: query\n          description: True to read entity statistics from cache if cache is up to date, false to bypass cache (slower). Default is true.\n          schema:\n            type: boolean\n            default: true\n        - $ref: '#/components/parameters/dataReferenceQueryParam'\n      responses:\n        200:\n          description: Successful Request\n          content:\n            'application/json':\n              schema:\n                type: object\n                description: Map[String,EntityTypeMetadata]\n        404:\n          description: Workspace not found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n    post:\n      tags:\n        - entities\n      summary: Create entity in a workspace\n      description: Create entity\n      operationId: create_entity\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Entity data\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/Entity'\n        required: true\n      responses:\n        201:\n          description: Entity created\n          headers:\n            Location:\n              description: The path to the newly created entity\n              schema:\n                type: string\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/Entity'\n        403:\n          description: User does not have permission to update attributes in the namespace\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: Workspace not found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        409:\n          description: Entity already exists\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      x-codegen-request-body-name: entityJson\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/entities/{entityType}:\n    get:\n      tags:\n        - entities\n      summary: list all entities of given type in a workspace\n      description: List all entities of a given type\n      operationId: list_entities\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n        - name: entityType\n          in: path\n          description: Entity Type\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Successful Request\n          content:\n            'application/json':\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Entity'\n        404:\n          description: Workspace or entityType not found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n    delete:\n      tags:\n        - entities\n      summary: delete column in entity table\n      description: Delete entity column\n      operationId: delete_entity_column\n      parameters:\n        - $ref: '#/components/parameters/workspaceNamespacePathParam'\n        - $ref: '#/components/parameters/workspaceNamePathParam'\n        - $ref: '#/components/parameters/entityTypePathParam'\n        - name: attributeNames\n          in: query\n          description: |\n             A comma-delimited list of attribute names to delete. Required.\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        204:\n          description: Successful Request\n          content: {}\n        400:\n          description: Attributes do not exist\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/entities/{entityType}/{entityName}:\n    get:\n      tags:\n        - entities\n      summary: Get entity in a workspace\n      description: Get an entity\n      operationId: get_entity\n      parameters:\n        - $ref: '#/components/parameters/workspaceNamespacePathParam'\n        - $ref: '#/components/parameters/workspaceNamePathParam'\n        - $ref: '#/components/parameters/entityTypePathParam'\n        - $ref: '#/components/parameters/entityNamePathParam'\n        - $ref: '#/components/parameters/dataReferenceQueryParam'\n        - $ref: '#/components/parameters/billingProjectQueryParam'\n      responses:\n        200:\n          description: Successful Request\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/Entity'\n        404:\n          description: Workspace or Entity not found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n    patch:\n      tags:\n        - entities\n      summary: Update entity in a workspace\n      description: Update an entity\n      operationId: update_entity\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n        - name: entityType\n          in: path\n          description: Entity Type\n          required: true\n          schema:\n            type: string\n        - name: entityName\n          in: path\n          description: Entity Name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Update operations for attributes\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/AttributeUpdateOperationArray'\n        required: false\n      responses:\n        200:\n          description: Entity updated\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/Entity'\n        400:\n          description: Attribute does not exist\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        403:\n          description: User does not have permission to update attributes in the namespace\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: Workspace or Entity not found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      x-codegen-request-body-name: attributeUpdateJson\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/entities/delete:\n    post:\n      tags:\n        - entities\n      summary: delete entities in a workspace\n      description: Delete entities\n      operationId: delete_entities\n      parameters:\n        - $ref: '#/components/parameters/workspaceNamespacePathParam'\n        - $ref: '#/components/parameters/workspaceNamePathParam'\n      requestBody:\n        description: Set of entities to delete\n        content:\n          'application/json':\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/AttributeEntityReference'\n        required: true\n      responses:\n        204:\n          description: Successful Request\n          content: {}\n        400:\n          description: Not all Entities exist\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        409:\n          description: Cannot create dangling references when deleting Entities -\n            must specify whole set\n          content:\n            'application/json':\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/AttributeEntityReference'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      x-codegen-request-body-name: entities\n  /api/workspaces/entities/copy:\n    post:\n      tags:\n        - entities\n      summary: copy entities from one workspace into another workspace\n      description: Copy entities from one workspace to another\n      operationId: copy_entities\n      parameters:\n        - name: linkExistingEntities\n          in: query\n          description: true to link new entities to existing entities, false to fail\n            instead of link\n          schema:\n            type: boolean\n            default: false\n      requestBody:\n        description: Source and destination for entities\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/EntityCopyDefinition'\n        required: true\n      responses:\n        201:\n          description: Successful Request\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/EntityCopyResponse'\n        404:\n          description: Source workspace not found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        409:\n          description: There are conflicts in your copy operation. Retry with the\n            paramater linkExistingEntities=true to link all soft conflicts to the\n            entities that already exist in your workspace.\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/EntityCopyResponse'\n        422:\n          description: Destination workspace must match source's authorization domain,\n            if the source has one\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      x-codegen-request-body-name: entityCopyDefinition\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/entities/batchUpsert:\n    post:\n      tags:\n        - entities\n      summary: batch upsert entities into a workspace\n      description: Batch upsert (update or insert if not already there) entities into\n        a workspace\n      operationId: batch_upsert_entities\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Entity update definitions\n        content:\n          'application/json':\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/EntityUpdateDefinition'\n        required: true\n      responses:\n        204:\n          description: Entities upserted\n          content: {}\n        400:\n          description: Invalid attribute update operation\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        403:\n          description: User does not have permission to update attributes in the namespace\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: Workspace not found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      x-codegen-request-body-name: batchUpsertJson\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/entities/batchUpdate:\n    post:\n      tags:\n        - entities\n      summary: Batch update entities\n      description: Batch update entities into a workspace. All referenced entities\n        must already exist.\n      operationId: batch_update_entities\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Entity update definitions\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/EntityUpdateDefinition'\n        required: true\n      responses:\n        204:\n          description: Entities updated\n          content: {}\n        400:\n          description: Invalid attribute update operation\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        403:\n          description: User does not have permission to update attributes in the namespace\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: Workspace not found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      x-codegen-request-body-name: batchUpdateJson\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/methodconfigs:\n    get:\n      tags:\n        - methodconfigs\n      summary: List method configurations in a workspace\n      description: |\n        List method configurations in a workspace. By default, only Agora method configs are returned. To return configs for all repos, specify `allRepos` to be `true`.\n\n        #### Expanded discussion on the methodRepoMethod field\n\n        This endpoint returns method references to Agora in the format\n        ```\n        \"methodRepoMethod\": {\n          \"methodNamespace\": \"namespace\",\n          \"methodName\": \"name\",\n          \"methodVersion\": 1,\n          \"sourceRepo\": \"agora\",\n          \"methodUri\": \"agora://namespace/name/1\"\n        }\n        ```\n        and for Dockstore in the format\n        ```\n        \"methodRepoMethod\": {\n          \"methodPath\": \"path\",\n          \"methodVersion\": \"version\",\n          \"sourceRepo\": \"agora\",\n          \"methodUri\": \"dockstore://path/version\"\n        }\n        ```\n        If you are only working with Agora methods, the fields `\"sourceRepo\"` and `\"methodUri\"` can be considered informational and do not need to be round-tripped (see the corresponding `POST /api/workspaces/{workspaceNamespace}/{workspaceName}/methodconfigs` for more details).\n      operationId: list_method_configurations\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n        - name: allRepos\n          in: query\n          description: Configs for all repos, not just Agora\n          schema:\n            type: boolean\n            default: false\n      responses:\n        200:\n          description: Successful Request\n          content:\n            'application/json':\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/MethodConfiguration'\n        404:\n          description: Workspace not found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n    post:\n      tags:\n        - methodconfigs\n      summary: Create Method configuration in a workspace\n      description: |\n        Create method configurations.\n\n        #### Expanded discussion on the methodRepoMethod field\n\n        To create a method config for an Agora method, `\"sourceRepo\": \"agora\"` is optional; the following is sufficient:\n        ```\n        \"methodRepoMethod\": {\n          \"methodNamespace\": \"namespace\",\n          \"methodName\": \"name\",\n          \"methodVersion\": 1\n        }\n        ```\n        To create a method config for a Dockstore method, `\"sourceRepo\": \"dockstore\"` is required:\n        ```\n        \"methodRepoMethod\": {\n          \"sourceRepo\": \"dockstore\",\n          \"methodPath\": \"path\",\n          \"methodVersion\": \"version\"\n        }\n        ```\n        You may also use the URI on its own to create a config referencing any supported repo (currently Agora and Dockstore):\n        ```\n        \"methodRepoMethod\": {\n          \"methodUri\": \"agora://namespace/name/1\"\n        }\n        ```\n        ```\n        \"methodRepoMethod\": {\n          \"methodUri\": \"dockstore://path/version\"\n        }\n        ```\n        The system is specified to check for a URI first before falling back to the legacy fields. Unsupported repos will return a 400 Bad Request.\n      operationId: create_method_configuration\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Method Configuration contents\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/MethodConfiguration'\n        required: true\n      responses:\n        201:\n          description: Successful Request\n          headers:\n            Location:\n              description: The path to the newly created method configuration\n              schema:\n                type: string\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ValidatedMethodConfiguration'\n        403:\n          description: Invalid attribute namespace(s) in outputs\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: Workspace not found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        409:\n          description: MethodConfiguration already exists\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      x-codegen-request-body-name: methodConfigJson\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/methodconfigs/{configNamespace}/{configName}/validate:\n    get:\n      tags:\n        - methodconfigs\n      summary: get syntax validation information for a method configuration\n      description: Validate a method configuration\n      operationId: validate_method_configuration\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n        - name: configNamespace\n          in: path\n          description: Method Configuration Namespace\n          required: true\n          schema:\n            type: string\n        - name: configName\n          in: path\n          description: Method Configuration Name\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Successful Request\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ValidatedMethodConfiguration'\n        404:\n          description: Workspace, Method Configuration, or Data Reference not found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/methodconfigs/{configNamespace}/{configName}:\n    get:\n      tags:\n        - methodconfigs\n      summary: get method configuration in a workspace\n      description: Get a method configuration\n      operationId: get_method_configuration\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n        - name: configNamespace\n          in: path\n          description: Method Configuration Namespace\n          required: true\n          schema:\n            type: string\n        - name: configName\n          in: path\n          description: Method Configuration Name\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Successful Request\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/MethodConfiguration'\n        404:\n          description: Workspace or Method Configuration not found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n    put:\n      tags:\n        - methodconfigs\n      summary: Add or overwrite method configuration in a workspace\n      description: |\n        Add or overwrite a method configuration in a workspace.\n        The method configuration name and namespace in the URI must match the values in the JSON.\n      operationId: overwrite_method_configuration\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n        - name: configNamespace\n          in: path\n          description: Method Configuration Namespace\n          required: true\n          schema:\n            type: string\n        - name: configName\n          in: path\n          description: Method Configuration Name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: New Method Configuration contents\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/MethodConfiguration'\n        required: true\n      responses:\n        200:\n          description: Successful Request\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ValidatedMethodConfiguration'\n        400:\n          description: Method configuration name and namespace in URI do not match\n            those in JSON body\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        403:\n          description: Invalid attribute namespace(s) in outputs\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      x-codegen-request-body-name: newMethodConfigJson\n    post:\n      tags:\n        - methodconfigs\n      summary: Update method configuration in a workspace\n      description: |\n        Update method configuration.\n        Updates and moves the method configuration at the URI to the location in the request body.\n        The location in the URI may be the same as the location in the request body.\n        If the location in the request body matches the location in the URI, it is overwritten.\n        If the location in the request body is different to the location in the URI, and there is a method config already at that location, 409 is returned.\n      operationId: update_method_configuration\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n        - name: configNamespace\n          in: path\n          description: Method Configuration Namespace\n          required: true\n          schema:\n            type: string\n        - name: configName\n          in: path\n          description: Method Configuration Name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: New Method Configuration contents\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/MethodConfiguration'\n        required: true\n      responses:\n        200:\n          description: Successful Request\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ValidatedMethodConfiguration'\n        403:\n          description: Invalid attribute namespace(s) in outputs\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: Workspace or method configuration not found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        409:\n          description: Method config with the new name already exists in workspace\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      x-codegen-request-body-name: newMethodConfigJson\n    delete:\n      tags:\n        - methodconfigs\n      summary: delete method configuration in a workspace\n      description: Delete a method configuration\n      operationId: delete_method_configuration\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n        - name: configNamespace\n          in: path\n          description: Method Configuration Namespace\n          required: true\n          schema:\n            type: string\n        - name: configName\n          in: path\n          description: Method Configuration Name\n          required: true\n          schema:\n            type: string\n      responses:\n        204:\n          description: Successful Request\n          content: {}\n        404:\n          description: Workspace or Method Configuration not found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/methodconfigs/{configNamespace}/{configName}/rename:\n    post:\n      tags:\n        - methodconfigs\n      summary: rename method configuration in a workspace\n      description: |\n        Rename method configuration.\n        The workspace name and namespace in the HTTP body must match those in the URI.\n        409 may be returned if there's already a method configuration at the target location.\n      operationId: rename_method_config\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n        - name: configNamespace\n          in: path\n          description: Method Configuration Namespace\n          required: true\n          schema:\n            type: string\n        - name: configName\n          in: path\n          description: Method Configuration Name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: New Method Configuration Name\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/MethodConfigurationName'\n        required: true\n      responses:\n        204:\n          description: Successful Request\n          content: {}\n        400:\n          description: Workspace details in payload don't match the URI\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: Workspace or Method Configuration not found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        409:\n          description: Method config with the new name already exists in workspace\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      x-codegen-request-body-name: newMethodConfigurationName\n  /api/methodconfigs/copy:\n    post:\n      tags:\n        - methodconfigs\n      summary: Copy method configuration in a workspace from another workspace\n      description: Copy method configuration from another workspace\n      operationId: copy_method_configuration\n      requestBody:\n        description: Source and destination method configuration names\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/MethodConfigurationNamePair'\n        required: true\n      responses:\n        201:\n          description: Successful Request\n          headers:\n            Location:\n              description: The path to the copied method configuration\n              schema:\n                type: string\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/MethodConfiguration'\n        403:\n          description: Invalid attribute namespace(s) in outputs\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: Source workspace or method configuration not found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        409:\n          description: Destination method configuration by that name already exists\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      x-codegen-request-body-name: methodConfigurationNamePair\n  /api/methodconfigs/copyFromMethodRepo:\n    post:\n      tags:\n        - methodconfigs\n      summary: Copy method configuration from the method repository\n      description: Copy a method configuration from method repo to a workspace\n      operationId: copy_repo_configuration\n      requestBody:\n        description: Import from Method Repository\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/MethodRepoConfigurationImport'\n        required: true\n      responses:\n        201:\n          description: Successful Request\n          headers:\n            Location:\n              description: The path to the newly created method configuration\n              schema:\n                type: string\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/MethodConfiguration'\n        403:\n          description: Invalid attribute namespace(s) in outputs\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: Source method configuration not found in method repo\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        409:\n          description: Destination method configuration by that name already exists\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        422:\n          description: Error parsing source method configuration\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      x-codegen-request-body-name: methodRepoImport\n  /api/methodconfigs/copyToMethodRepo:\n    post:\n      tags:\n        - methodconfigs\n      summary: Copy method configuration from workspace to the method repository\n      description: Copy method configuration from workspace to method repo\n      operationId: copy_configuration_to_repo\n      requestBody:\n        description: Export to Method Repository\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/MethodRepoConfigurationExport'\n        required: true\n      responses:\n        200:\n          description: Successful Request\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/AgoraEntity'\n        404:\n          description: Source method configuration not found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      x-codegen-request-body-name: methodRepoExport\n  /api/methodconfigs/template:\n    post:\n      tags:\n        - methodconfigs\n      summary: Create a template for a method configuration from a method in the method\n        repository\n      description: Create a template for a method configuration from a method in the\n        method repository\n      operationId: method_config_template\n      requestBody:\n        description: name of method to use for template\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/MethodRepoMethod'\n        required: true\n      responses:\n        200:\n          description: Successful Request\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/MethodConfiguration'\n        400:\n          description: Method WDL can't be parsed\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: No such method\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      x-codegen-request-body-name: methodName\n  /api/methodconfigs/inputsOutputs:\n    post:\n      tags:\n        - methodconfigs\n      summary: Get information about a method's inputs and outputs\n      description: Get information about a method's inputs and outputs\n      operationId: method_inputs_outputs\n      requestBody:\n        description: name of method to use for template\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/MethodRepoMethod'\n        required: true\n      responses:\n        200:\n          description: Successful Request\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/MethodInputsOutputs'\n        400:\n          description: Method WDL can't be parsed\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: No such method\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      x-codegen-request-body-name: methodName\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/checkBucketReadAccess:\n    get:\n      tags:\n        - workspaces\n      summary: Read workspace bucket\n      description: Read a workspace bucket\n      operationId: readBucket\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Successful Request\n          content: {}\n        403:\n          description: Insufficient permissions to access workspace bucket\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: Workspace Not Found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/checkIamActionWithLock/{samActionName}:\n    get:\n      tags:\n        - workspaces\n      summary: Check IAM action with lock\n      description: Check to see if the user has the given action on a workspace in\n        Sam. Takes into account if the workspace is locked too.\n      operationId: checkIamActionWithLock\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n        - name: samActionName\n          in: path\n          description: Sam action\n          required: true\n          schema:\n            type: string\n      responses:\n        204:\n          description: User can perform the given action on the workspace\n          content: {}\n        403:\n          description: User may not perform the given action on the workspace (including\n            if it doesn't exist)\n          content: {}\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/lock:\n    put:\n      tags:\n        - workspaces\n      summary: Lock workspace\n      description: Lock a workspace\n      operationId: lockWorkspace\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      responses:\n        204:\n          description: Successful Request\n          content: {}\n        403:\n          description: Insufficient permissions to lock workspace (must be owner)\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: Workspace Not Found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        409:\n          description: Workspace cannot be locked due to running submissions\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/unlock:\n    put:\n      tags:\n        - workspaces\n      summary: Unlock workspace\n      description: Unlock a workspace\n      operationId: unlockWorkspace\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      responses:\n        204:\n          description: Successful Request\n          content: {}\n        403:\n          description: Insufficient permissions to lock workspace (must be owner)\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: Workspace Not Found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/acl:\n    get:\n      tags:\n        - workspaces\n      summary: Get workspace ACL\n      description: Get access control list for a workspace\n      operationId: getACL\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Successful Request\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/WorkspaceACL'\n        403:\n          description: Insufficient permissions to get workspace ACLs (must be owner)\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: Workspace not found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n    patch:\n      tags:\n        - workspaces\n      summary: Update workspace ACL\n      description: Edit access control list for a workspace\n      operationId: updateACL\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n        - name: inviteUsersNotFound\n          in: query\n          description: true to invite unregistered users, false to ignore\n          required: true\n          schema:\n            type: boolean\n            default: false\n      requestBody:\n        description: Series of ACL updates for workspace\n        content:\n          'application/json':\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/WorkspaceACLUpdate'\n        required: true\n      responses:\n        200:\n          description: Successful Request\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/WorkspaceACLUpdateResponseList'\n        400:\n          description: Attempting to change access controls you can't (your own, or\n            public-access group)\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        403:\n          description: Insufficient permissions to edit workspace ACLs (must be owner)\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: Workspace, user or group not found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      x-codegen-request-body-name: aclUpdates\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/bucketOptions:\n    get:\n      tags:\n        - workspaces\n      summary: Get metadata about the workspace bucket\n      description: Returns metadata about the workspace bucket.\n      operationId: getWorkspaceBucketOptions\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Successful Request\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/WorkspaceBucketOptions'\n        404:\n          description: Workspace not found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/catalog:\n    get:\n      tags:\n        - workspaces\n      summary: Get catalog permissions\n      description: Returns workspace catalog permissions for users and groups with\n        the permission for the workspace\n      operationId: getCatalog\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Successful Request\n          content:\n            'application/json':\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/WorkspaceCatalog'\n        404:\n          description: Workspace not found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n    patch:\n      tags:\n        - workspaces\n      summary: Update catalog permission\n      description: Edit catalog permissions for a workspace\n      operationId: updateCatalog\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Series of Catalog updates for workspace\n        content:\n          'application/json':\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/WorkspaceCatalog'\n        required: true\n      responses:\n        200:\n          description: Successful Request\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/WorkspaceCatalogUpdateResponseList'\n        404:\n          description: Workspace, user or group not found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      x-codegen-request-body-name: catalogUpdates\n  /api/workspaces:\n    get:\n      tags:\n        - workspaces\n      summary: List workspaces\n      description: |\n        List all workspaces to which you have access, optionally filtered to only the specified fields. See the get-workspace API at GET /api/workspaces/{workspaceNamespace}/{workspaceName} to retrieve additional information about a given workspace.\n      operationId: listWorkspaces\n      parameters:\n        - name: fields\n          in: query\n          description: |\n            When specified, include only these keys in the response payload and exclude other keys. Accepts a comma-delimited list of values. To include a nested key, specify the key's path using a dot delimiter; for example, to include {\"workspace\": {\"attributes\": {}}}, specify \"workspace.attributes\". Legal values are any first-level key in the response, any first-level key inside the {\"workspace\": {}} object, and any first-level key inside the {\"workspace\": {\"attributes\": {}}} object. If omitted, will return the full response payload.\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        200:\n          description: Successful Request\n          content:\n            'application/json':\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/WorkspaceListResponse'\n        400:\n          description: Unrecognized query parameters\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n    post:\n      tags:\n        - workspaces\n      summary: Create new workspace\n      description: Create a new workspace\n      operationId: createWorkspace\n      requestBody:\n        description: Workspace contents\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/WorkspaceRequest'\n        required: true\n      responses:\n        201:\n          description: Successful Request\n          headers:\n            Location:\n              description: The path to the newly created workspace\n              schema:\n                type: string\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/WorkspaceDetails'\n        400:\n          description: Workspace namespace is not ready\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        403:\n          description: User does not have access to create workspace in namespace\n            or user does not have permission to set attributes in the namespace\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        409:\n          description: Workspace by that name already exists\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      x-codegen-request-body-name: workspaceJson\n  /api/workspaces/id/{workspaceId}:\n    get:\n      tags:\n        - workspaces\n      summary: Get workspace details by id\n      description: |\n        Get a single workspace's details, optionally filtered to only the specified fields. See additional GET methods in this section to retrieve additional details about the workspace. For instance, this API only returns the workspace's owners; use the GET .../acl method to retrieve the full list of all users at all permission levels.\n      operationId: getWorkspaceById\n      parameters:\n        - name: workspaceId\n          in: path\n          description: Workspace Id\n          required: true\n          schema:\n            type: string\n        - name: fields\n          in: query\n          description: |\n            When specified, include only these keys in the response payload and exclude other keys. Accepts a comma-delimited list of values. To include a nested key, specify the key's path using a dot delimiter; for example, to include {\"workspace\": {\"attributes\": {}}}, specify \"workspace.attributes\". Legal values are any first-level key in the response, any first-level key inside the {\"workspace\": {}} object, and any first-level key inside the {\"workspace\": {\"attributes\": {}}} object. If omitted, will return the full response payload.\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        200:\n          description: Successful Request\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/WorkspaceResponse'\n        400:\n          description: Unrecognized query parameters\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: Workspace not found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n  /api/workspaces/{workspaceNamespace}/{workspaceName}:\n    get:\n      tags:\n        - workspaces\n      summary: Get workspace details\n      description: |\n        Get a single workspace's details, optionally filtered to only the specified fields. See additional GET methods in this section to retrieve additional details about the workspace. For instance, this API only returns the workspace's owners; use the GET .../acl method to retrieve the full list of all users at all permission levels.\n      operationId: listWorkspaceDetails\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n        - name: fields\n          in: query\n          description: |\n            When specified, include only these keys in the response payload and exclude other keys. Accepts a comma-delimited list of values. To include a nested key, specify the key's path using a dot delimiter; for example, to include {\"workspace\": {\"attributes\": {}}}, specify \"workspace.attributes\". Legal values are any first-level key in the response, any first-level key inside the {\"workspace\": {}} object, and any first-level key inside the {\"workspace\": {\"attributes\": {}}} object. If omitted, will return the full response payload.\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        200:\n          description: Successful Request\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/WorkspaceResponse'\n        400:\n          description: Unrecognized query parameters\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: Workspace not found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n    delete:\n      tags:\n        - workspaces\n      summary: Delete workspace\n      description: Delete a workspace\n      operationId: delete_workspace\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      responses:\n        202:\n          description: Delete request accepted. Workspace bucket will be deleted within\n            24 hours.\n          content: {}\n        403:\n          description: Insufficient permissions to delete workspace (must be owner)\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: Workspace not found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n    patch:\n      tags:\n        - workspaces\n      summary: Update attributes of a workspace\n      description: Update workspace attributes\n      operationId: update_workspace\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Update operations\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/AttributeUpdateOperationArray'\n        required: true\n      responses:\n        200:\n          description: Successful Request\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/WorkspaceDetails'\n        400:\n          description: Attribute does not exist or is of an unexpected type\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        403:\n          description: Insufficient permissions to edit workspace attributes\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: Workspace not found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      x-codegen-request-body-name: entityUpdateJson\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/clone:\n    post:\n      tags:\n        - workspaces\n      summary: Clone workspace\n      description: Clone a workspace\n      operationId: clone\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Request for new workspace\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/WorkspaceRequestClone'\n        required: true\n      responses:\n        201:\n          description: Successful Request\n          headers:\n            Location:\n              description: The path to the newly cloned workspace\n              schema:\n                type: string\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/WorkspaceDetails'\n        400:\n          description: Workspace namespace is not ready\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        403:\n          description: User does not have access to create workspace in namespace\n            or user does not have permission to set attributes in the namespace\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: Source workspace not found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        409:\n          description: Destination workspace already exists\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        422:\n          description: Destination workspace must match source's authorization domain,\n            if the dest has one\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      x-codegen-request-body-name: workspaceRequest\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/bucketUsage:\n    get:\n      tags:\n        - workspaces\n      summary: Get bucket usage\n      description: Get the storage bucket usage\n      operationId: getBucketUsage\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Successful Request\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/BucketUsageResponse'\n  /api/workspaces/tags:\n    get:\n      tags:\n        - workspaces\n      summary: Get tags\n      description: Get all tags used in FireCloud (for autocomplete)\n      operationId: getTags\n      parameters:\n        - name: q\n          in: query\n          description: Query string\n          schema:\n            type: string\n        - name: limit\n          in: query\n          description: Maximum number of tags to return\n          schema:\n            type: integer\n      responses:\n        200:\n          description: Successful Request\n          content:\n            'application/json':\n              schema:\n                type: array\n                description: list of all tags used in FireCloud and their associated\n                  frequencies\n                items:\n                  $ref: '#/components/schemas/WorkspaceTag'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/enableRequesterPaysForLinkedServiceAccounts:\n    put:\n      tags:\n        - workspaces\n      summary: Enable Requester Pays for linked service accounts\n      description: |\n        Enable Requester Pays for the user's linked service accounts in a workspace. Grants the serviceusage.services.use permission in the project associated to the workspace to each service account linked in the account linking service (Bond).\n      operationId: enableRequesterPaysForLinkedServiceAccounts\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      responses:\n        204:\n          description: Successful Request\n          content: {}\n        403:\n          description: Insufficient permissions to enable Requester Pays for workspace.\n            Writer and higher permissions required on workspace.\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: Workspace Not Found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/disableRequesterPaysForLinkedServiceAccounts:\n    put:\n      tags:\n        - workspaces\n      summary: Disable Requester Pays for linked service accounts\n      description: Disable Requester Pays for the user's linked service accounts in\n        a workspace\n      operationId: disableRequesterPaysForLinkedServiceAccounts\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      responses:\n        204:\n          description: |\n            In all cases whether or not the workspace exists or user has access. If there were linked service accounts they were removed from the workspace but this api does not indicate that anything was done (for security reasons).\n          content: {}\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n  /api/workflows/{workflowId}/genomics/{operationId}:\n    get:\n      tags:\n        - workflows\n      summary: retrieve operations info from Google Genomics API\n      description: retrieve operations info from Google Genomics API\n      operationId: genomics_operations_get\n      parameters:\n        - name: workflowId\n          in: path\n          description: Workflow Id\n          required: true\n          schema:\n            type: string\n        - name: operationId\n          in: path\n          description: operations job id; for PAPIv1 in the form of \"operations/{id}\",\n            for PAPIv2 \"projects/{project}/operations/{id}\"\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: operations info\n          content: {}\n        404:\n          description: workflow or jobId not found or no access\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n  /api/user/refreshToken:\n    put:\n      deprecated: true\n      tags:\n        - users\n      summary: Store refresh token\n      description: store a user's refresh token\n      operationId: refreshToken\n      requestBody:\n        description: refresh token\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/UserRefreshToken'\n        required: true\n      responses:\n        201:\n          description: Successful Request\n          content: {}\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      x-codegen-request-body-name: refreshToken\n  /api/user/refreshTokenDate:\n    get:\n      deprecated: true\n      tags:\n        - users\n      summary: Get refresh token date\n      description: get the date the refresh token last updated\n      operationId: refreshTokenDate\n      responses:\n        200:\n          description: Successful Request\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/UserRefreshTokenDate'\n        400:\n          description: Token for the user is invalid\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: There is no refresh token for the user\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n  /api/user/role/admin:\n    get:\n      tags:\n        - users\n      summary: Query to see if you're an admin\n      description: gets the admin status of a user\n      operationId: isAdmin\n      responses:\n        200:\n          description: User is an admin\n          content: {}\n        404:\n          description: User is not an admin\n          content: {}\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n  /api/user/role/curator:\n    get:\n      tags:\n        - users\n      summary: Query to see if you're a library curator\n      description: gets the curator status of a user\n      operationId: isCurator\n      responses:\n        200:\n          description: User is a curator\n          content: {}\n        404:\n          description: User is not a curator\n          content: {}\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n  /api/user/billing:\n    get:\n      tags:\n        - billing\n        - users\n      summary: list billing projects for a user\n      description: list billing projects for a user\n      operationId: listUserBillingProjects\n      responses:\n        200:\n          description: Successful Request\n          content:\n            'application/json':\n              schema:\n                type: array\n                description: list of billing projects for this user\n                items:\n                  $ref: '#/components/schemas/RawlsBillingProjectMembership'\n        404:\n          description: User not found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n  /api/user/billing/{projectName}:\n    get:\n      tags:\n        - billing\n        - users\n      summary: billing project status\n      description: billing project status\n      operationId: billingProjectStatus\n      parameters:\n        - name: projectName\n          in: path\n          description: Name of the billing project\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/RawlsBillingProjectStatus'\n        404:\n          description: Project Not Found\n          content: {}\n        500:\n          description: Internal Server Error\n          content: {}\n    delete:\n      tags:\n        - billing\n        - users\n      summary: delete billing project\n      description: delete billing project\n      operationId: deleteBillingProject\n      parameters:\n        - name: projectName\n          in: path\n          description: Name of the billing project\n          required: true\n          schema:\n            type: string\n      responses:\n        204:\n          description: Successfully delete billing project\n        400:\n          description: Project cannot be deleted because it contains workspaces.\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        403:\n          description: You must be a project owner to delete billing project\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n  /api/user/billingAccounts:\n    get:\n      tags:\n        - billing\n        - users\n      summary: list billing accounts for a user\n      description: list billing accounts for a user\n      operationId: listUserBillingAccounts\n      responses:\n        200:\n          description: Successful Request\n          content:\n            'application/json':\n              schema:\n                type: array\n                description: list of billing accounts for this user\n                items:\n                  $ref: '#/components/schemas/BillingAccount'\n        403:\n          description: Forbidden. You probably missed a scope; more details in the\n            ErrorReport's message field\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      security:\n        - authorization:\n            - openid\n            - email\n            - profile\n            - https://www.googleapis.com/auth/cloud-billing\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/snapshots/v2:\n    parameters:\n      - $ref: '#/components/parameters/workspaceNamespacePathParam'\n      - $ref: '#/components/parameters/workspaceNamePathParam'\n    get:\n      tags:\n        - snapshots_v2\n      summary: List snapshots\n      description: Enumerate references to snapshots in the Terra Data Repo, or return only those that reference a given TDR snapshot id\n      operationId: enumerateDataRepoSnapshot_v2\n      parameters:\n        - name: offset\n          in: query\n          description: The number of items to skip before starting to collect the result\n            set.\n          required: true\n          schema:\n            type: integer\n          example: 0\n        - name: limit\n          in: query\n          description: The number of items to return.\n          required: true\n          schema:\n            type: integer\n          example: 10\n        - name: referencedSnapshotId\n          in: query\n          description: Optional; UUID of the Data Repo snapshot being referenced\n          required: false\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/SnapshotListResponse'\n        404:\n          description: Workspace not found or user lacks permissions\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n    post:\n      tags:\n        - snapshots_v2\n      summary: Create a snapshot\n      description: Add a reference to a snapshot in the Terra Data Repo\n      operationId: createDataRepoSnapshot_v2\n      requestBody:\n        description: Reference to the Data Repo snapshot\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/NamedDataRepoSnapshot'\n        required: true\n      responses:\n        201:\n          description: Created\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/DataRepoSnapshotResource'\n        404:\n          description: Workspace or snapshot not found\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/snapshots/v2/{snapshotId}:\n    parameters:\n      - $ref: '#/components/parameters/workspaceNamespacePathParam'\n      - $ref: '#/components/parameters/workspaceNamePathParam'\n      - $ref: '#/components/parameters/snapshotIdPathParam'\n    get:\n      tags:\n        - snapshots_v2\n      summary: Get a snapshot\n      description: Get a reference to a snapshot in the Terra Data Repo\n      operationId: getDataRepoSnapshot_v2\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/DataRepoSnapshotResource'\n        404:\n          description: Workspace or snapshot not found\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n    patch:\n      summary: Update name or description of a reference to a snapshot in the Terra Data Repo.\n      operationId: updateDataRepoSnapshot_v2\n      tags:\n        - snapshots_v2\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateDataReferenceRequestBody'\n      responses:\n        204:\n          description: Successful Request\n        404:\n          description: Workspace or snapshot not found\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n    delete:\n      tags:\n        - snapshots_v2\n      summary: Delete a snapshot\n      description: Delete a workspace's reference to a snapshot in the Terra Data\n        Repo\n      operationId: deleteDataRepoSnapshot_v2\n      responses:\n        204:\n          description: Successful Request\n        404:\n          description: Workspace or snapshot not found\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/snapshots/v2/name/{referenceName}:\n    parameters:\n      - $ref: '#/components/parameters/workspaceNamespacePathParam'\n      - $ref: '#/components/parameters/workspaceNamePathParam'\n      - $ref: '#/components/parameters/referenceNamePathParam'\n    get:\n      tags:\n        - snapshots_v2\n      summary: Get a snapshot by name\n      description: Get a reference to a snapshot in the Terra Data Repo by its name\n      operationId: getDataRepoSnapshotByName_v2\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/DataRepoSnapshotResource'\n        404:\n          description: Workspace or snapshot not found\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n\n\n\n  /api/notifications/workspace/{workspaceNamespace}/{workspaceName}:\n    get:\n      tags:\n        - notifications\n      summary: Gets the notifications available for a workspace\n      operationId: workspaceNotifications\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: workspace namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: workspace name\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Success\n          content:\n            'application/json':\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/NotificationType'\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/accessInstructions:\n    get:\n      tags:\n        - workspaces\n      summary: Get access instructions for the workspace\n      operationId: getWorkspaceAccessInstructions\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: workspace namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: workspace name\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Success\n          content:\n            'application/json':\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ManagedGroupAccessInstructions'\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/sendChangeNotification:\n    post:\n      tags:\n        - workspaces\n      summary: Send Notification of data added to Workspace\n      operationId: sendChangeNotification\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: workspace namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: workspace name\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Success\n          content: {}\n  /api/notifications/general:\n    get:\n      tags:\n        - notifications\n      summary: Gets the general notifications available\n      operationId: generalNotifications\n      responses:\n        200:\n          description: Success\n          content:\n            'application/json':\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/NotificationType'\ncomponents:\n  schemas:\n    BillingAccount:\n      required:\n        - accountName\n        - displayName\n        - firecloudHasAccess\n      type: object\n      properties:\n        accountName:\n          type: string\n          description: name of billing account\n        firecloudHasAccess:\n          type: boolean\n          description: whether the Firecloud service has been given access to this\n            billing account\n        displayName:\n          type: string\n          description: display name of billing account\n      description: Details for a single billing account\n    DataRepoSnapshot:\n      description: A raw data repo snapshot reference from workspace manager.\n      type: object\n      required: [ instanceName, snapshot ]\n      properties:\n        instanceName:\n          description: The name of the Data Repo instance\n          type: string\n        snapshot:\n          description: The ID of the Data Repo snapshot\n          type: string\n    NamedDataRepoSnapshot:\n      type: object\n      required: [ snapshotId, name ]\n      properties:\n        snapshotId:\n          type: string\n          description: The ID of the snapshot in Terra Data Repo\n        name:\n          type: string\n          description: The name of the snapshot\n        description:\n          type: string\n          description: A description for the snapshot\n          default: \"\"\n      description: A Data Repo snapshot\n    UpdateDataReferenceRequestBody:\n      type: object\n      properties:\n        name:\n          type: string\n        description:\n          type: string\n    ResourceMetadata:\n      type: object\n      required: [ workspaceId, resourceId, name, description, resourceType, stewardshipType, cloudPlatform, cloningIntructions ]\n      properties:\n        workspaceId:\n          type: string\n        resourceId:\n          type: string\n        name:\n          type: string\n        description:\n          type: string\n        resourceType:\n          type: string\n        stewardshipType:\n          type: string\n        cloudPlatform:\n          type: string\n        cloningInstructions:\n          type: string\n    DataRepoSnapshotAttributes:\n      type: object\n      required: [ instanceName, snapshot ]\n      properties:\n        instanceName:\n          type: string\n        snapshot:\n          description: The snapshot id\n          type: string\n    DataRepoSnapshotResource:\n      type: object\n      required: [ metadata, attributes ]\n      properties:\n        metadata:\n          $ref: '#/components/schemas/ResourceMetadata'\n        attributes:\n          $ref: '#/components/schemas/DataRepoSnapshotAttributes'\n    SnapshotListResponse:\n      type: object\n      required: [ gcpDataRepoSnapshots ]\n      properties:\n        gcpDataRepoSnapshots:\n          type: array\n          description: A list of DataRepoSnapshotResources from Workspace Manager\n          items:\n            $ref: '#/components/schemas/DataRepoSnapshotResource'\n      description: List of snapshot resources\n    ErrorReport:\n      required:\n        - causes\n        - message\n        - source\n        - stackTrace\n      type: object\n      properties:\n        source:\n          type: string\n          description: service causing error\n        message:\n          type: string\n          description: what went wrong\n        exceptionClass:\n          type: string\n          description: class of exception thrown\n        statusCode:\n          type: integer\n          description: HTTP status code\n        causes:\n          type: array\n          description: errors triggering this one\n          items:\n            $ref: '#/components/schemas/ErrorReport'\n        stackTrace:\n          type: array\n          description: stack trace\n          items:\n            $ref: '#/components/schemas/StackTraceElement'\n      description: \"\"\n    EntityCopyResponse:\n      required:\n        - entitiesCopied\n        - hardConflicts\n        - softConflicts\n      type: object\n      properties:\n        entitiesCopied:\n          type: array\n          description: the entities that were successfully copied into the workspace\n          items:\n            $ref: '#/components/schemas/AttributeEntityReference'\n        hardConflicts:\n          type: array\n          description: these entities already exist in your workspace\n          items:\n            $ref: '#/components/schemas/EntityHardConflict'\n        softConflicts:\n          type: array\n          description: the conflicts within your entity subtrees. note that this will\n            be empty if there are hard conflicts\n          items:\n            $ref: '#/components/schemas/EntitySoftConflict'\n      description: \"\"\n    EntityHardConflict:\n      required:\n        - entityName\n        - entityType\n      type: object\n      properties:\n        entityType:\n          type: string\n          description: the type of the entity\n        entityName:\n          type: string\n          description: the name of the entity\n      description: \"\"\n    EntitySoftConflict:\n      required:\n        - conflicts\n        - entityName\n        - entityType\n      type: object\n      properties:\n        entityType:\n          type: string\n          description: the type of the entity\n        entityName:\n          type: string\n          description: the name of the entity\n        conflicts:\n          type: array\n          description: the next entity in the path to the conflict\n          items:\n            $ref: '#/components/schemas/EntitySoftConflict'\n      description: \"\"\n    StackTraceElement:\n      required:\n        - className\n        - fileName\n        - lineNumber\n        - methodName\n      type: object\n      properties:\n        className:\n          type: string\n          description: class name\n        methodName:\n          type: string\n          description: method name\n        fileName:\n          type: string\n          description: source file name\n        lineNumber:\n          type: integer\n          description: line number\n      description: \"\"\n    Submission:\n      type: object\n      properties:\n        submissionId:\n          type: string\n          description: SubmissionRequest unique identifier\n        submissionDate:\n          type: string\n          description: SubmissionRequest date\n          format: date-time\n        submitter:\n          type: string\n          description: user that created the submission\n        methodConfigurationNamespace:\n          type: string\n          description: Method configuration namespace\n        methodConfigurationName:\n          type: string\n          description: Method configuration name\n        submissionEntity:\n          $ref: '#/components/schemas/AttributeEntityReference'\n        workflows:\n          type: array\n          description: Status of Workflow(s)\n          items:\n            $ref: '#/components/schemas/Workflow'\n        status:\n          $ref: '#/components/schemas/SubmissionStatus'\n        cost:\n          type: number\n          description: The compute cost of this submission\n          format: float\n        useCallCache:\n          type: boolean\n          description: Whether or not to read from cache for this submission\n        deleteIntermediateOutputFiles:\n          type: boolean\n          description: Whether or not to delete intermediate output files when the\n            workflow completes. See [Cromwell docs](https://cromwell.readthedocs.io/en/stable/wf_options/Google#google-pipelines-api-workflow-options)\n            for more information.\n        workflowFailureMode:\n          type: string\n          description: What happens after a task fails. Choose from ContinueWhilePossible\n            and NoNewCalls. Defaults to NoNewCalls if not specified. See Cromwell\n            docs for more information.\n          default: NoNewCalls\n          enum:\n            - NoNewCalls\n            - ContinueWhilePossible\n        externalEntityInfo:\n          $ref: '#/components/schemas/ExternalEntityInfo'\n        userComment:\n          type: string\n          description: Comment for the submission\n      description: \"\"\n    ExternalEntityInfo:\n      type: object\n      properties:\n        dataStoreId:\n          type: string\n          description: external datastore id for the collection of data\n        rootEntityType:\n          type: string\n          description: type of data within the external datastore\n    SubmissionListResponse:\n      type: object\n      properties:\n        submissionId:\n          type: string\n          description: Submission unique identifier\n        submissionDate:\n          type: string\n          description: Submission date\n          format: date-time\n        submitter:\n          type: string\n          description: user that created the submission\n        methodConfigurationNamespace:\n          type: string\n          description: Method configuration namespace\n        methodConfigurationName:\n          type: string\n          description: Method configuration name\n        submissionEntity:\n          $ref: '#/components/schemas/AttributeEntityReference'\n        status:\n          $ref: '#/components/schemas/SubmissionStatus'\n        workflowStatuses:\n          type: object\n          properties: {}\n          description: a count of the workflow statuses in the submission as a Map[String,Int]\n        workflowFailureMode:\n          type: string\n          description: What happens after a task fails. Choose from ContinueWhilePossible\n            and NoNewCalls. Defaults to NoNewCalls if not specified. See Cromwell\n            docs for more information.\n          default: NoNewCalls\n          enum:\n            - NoNewCalls\n            - ContinueWhilePossible\n        externalEntityInfo:\n          $ref: '#/components/schemas/ExternalEntityInfo'\n        userComment:\n          type: string\n          description: Comment for the submission\n      description: An abbreviated Submission, without workflow information, good for\n        listings\n    ActiveSubmission:\n      type: object\n      properties:\n        workspaceNamespace:\n          type: string\n          description: workspaceNamespace of the submission\n        workspaceName:\n          type: string\n          description: workspaceName of the submission\n        submission:\n          $ref: '#/components/schemas/Submission'\n      description: a submission that's still a going concern\n    SubmissionStatus:\n      type: string\n      description: submission status\n      enum:\n        - Accepted\n        - Evaluating\n        - Submitting\n        - Submitted\n        - Aborting\n        - Aborted\n        - Done\n    Workflow:\n      type: object\n      properties:\n        workflowId:\n          type: string\n          description: Workflow unique identifier\n        status:\n          $ref: '#/components/schemas/WorkflowStatus'\n        statusLastChangedDate:\n          type: string\n          description: Status last-changed date\n          format: date-time\n        workflowEntity:\n          $ref: '#/components/schemas/AttributeEntityReference'\n        inputResolutions:\n          type: array\n          description: The evaluation of each input\n          items:\n            $ref: '#/components/schemas/SubmissionValidationValue'\n        messages:\n          type: array\n          description: List of messages about this workflow\n          items:\n            type: string\n        cost:\n          type: number\n          description: The run cost of this workflow\n          format: float\n      description: \"\"\n    WorkflowStatus:\n      type: string\n      description: workflow status\n      enum:\n        - Queued\n        - Launching\n        - Submitted\n        - Running\n        - Failed\n        - Succeeded\n        - Aborting\n        - Aborted\n        - Unknown\n    SubmissionRequest:\n      required:\n        - methodConfigurationName\n        - methodConfigurationNamespace\n      type: object\n      properties:\n        methodConfigurationNamespace:\n          type: string\n          description: Namespace of the method configuration to execute.\n        methodConfigurationName:\n          type: string\n          description: Name of the method configuration to execute.\n        entityType:\n          type: string\n          description: Type of root entity for expression. Optional if the method\n            configuration has no root entity.\n        entityName:\n          type: string\n          description: Name of root entity for expression. Optional if the method\n            configuration has no root entity.\n        expression:\n          type: string\n          description: Expression that resolves to one or more entities matching the\n            entity type in the method configuration. Optional if the method configuration\n            has no root entity.\n        useCallCache:\n          type: boolean\n          description: Whether or not to read from cache for this submission\n        useReferenceDisks:\n          type: boolean\n          description: Whether or not to use pre-built disks for common genome references\n        deleteIntermediateOutputFiles:\n          type: boolean\n          description: Whether or not to delete intermediate output files when the\n            workflow completes. See [Cromwell docs](https://cromwell.readthedocs.io/en/stable/wf_options/Google#google-pipelines-api-workflow-options)\n            for more information.\n        memoryRetryMultiplier:\n          type: number\n          description: If a task fails due to running out of memory and the `stderr` of the task contains one of error keys that is set in Cromwell config along with `maxRetries` in its runtime attributes,\n            then it will be retried with its memory multiplied by this amount.  See [Cromwell docs](https://cromwell.readthedocs.io/en/develop/cromwell_features/RetryWithMoreMemory/#retry-with-more-memory)\n            for more information.\n          default: 1.0\n        workflowFailureMode:\n          type: string\n          description: What happens after a task fails. Choose from ContinueWhilePossible\n            and NoNewCalls. Defaults to NoNewCalls if not specified. See Cromwell\n            docs for more information.\n          default: NoNewCalls\n          enum:\n            - NoNewCalls\n            - ContinueWhilePossible\n        userComment:\n          type: string\n          description: Comment for the submission (max length 1000 characters)\n      description: If the referenced method configuration takes no root entity, do\n        not define `entityType`, `entityName` and `expression`.\n    SubmissionValidationInput:\n      required:\n        - expression\n        - wdlName\n      type: object\n      properties:\n        wdlName:\n          type: string\n          description: name of input\n        expression:\n          type: string\n          description: expression for input\n      description: method configuration input parameter, its name and the associated\n        expression from the method config\n    SubmissionValidationHeader:\n      required:\n        - entityType\n        - inputExpressions\n      type: object\n      properties:\n        entityType:\n          type: string\n          description: type of entity\n        inputExpressions:\n          type: array\n          description: input descriptions\n          items:\n            $ref: '#/components/schemas/SubmissionValidationInput'\n      description: common values for all the entities -- the entity type and the input\n        descriptions\n    SubmissionValidationValue:\n      required:\n        - inputName\n      type: object\n      properties:\n        value:\n          type: string\n          description: the value of the input expression for the specified entity\n        error:\n          type: string\n          description: parsing error(s)\n        inputName:\n          type: string\n          description: name of input\n      description: result of an expression parse for one of the inputs\n    SubmissionValidationEntityInputs:\n      required:\n        - entityName\n        - inputResolutions\n      type: object\n      properties:\n        entityName:\n          type: string\n          description: name of entity. May be empty if this submission doesn't run\n            on an entity\n        inputResolutions:\n          type: array\n          description: input resolution\n          items:\n            $ref: '#/components/schemas/SubmissionValidationValue'\n      description: the results of parsing each of the inputs for one entity\n    SubmissionValidationReport:\n      required:\n        - header\n        - invalidEntities\n        - request\n        - validEntities\n      type: object\n      properties:\n        header:\n          $ref: '#/components/schemas/SubmissionValidationHeader'\n        validEntities:\n          type: array\n          description: runnable entities\n          items:\n            $ref: '#/components/schemas/SubmissionValidationEntityInputs'\n        invalidEntities:\n          type: array\n          description: non-runnable entities\n          items:\n            $ref: '#/components/schemas/SubmissionValidationEntityInputs'\n        request:\n          $ref: '#/components/schemas/SubmissionRequest'\n      description: the results of parsing each input for each entity\n    TaskOutput:\n      type: object\n      properties:\n        logs:\n          type: array\n          description: logs for this task\n          items:\n            $ref: '#/components/schemas/ExecutionServiceCallLogs'\n        outputs:\n          type: object\n          properties: {}\n          description: Map[String,String]\n      description: Outputs from a single task in a workflow\n    ExecutionServiceCallLogs:\n      type: object\n      properties:\n        stdout:\n          type: string\n          description: Google bucket location for standard output\n        stderr:\n          type: string\n          description: Google bucket location for standard error\n        backendLogs:\n          type: object\n          properties: {}\n          description: Map[String,String]\n      description: Execution service logs per call\n    SubmissionReport:\n      required:\n        - header\n        - request\n        - status\n        - submissionDate\n        - submissionId\n        - submitter\n        - workflows\n      type: object\n      properties:\n        request:\n          $ref: '#/components/schemas/SubmissionRequest'\n        submissionId:\n          type: string\n          description: SubmissionRequest unique identifier\n        submissionDate:\n          type: string\n          description: SubmissionRequest date\n          format: date-time\n        submitter:\n          type: string\n          description: user that created the submission\n        status:\n          type: string\n          description: status\n        header:\n          $ref: '#/components/schemas/SubmissionValidationHeader'\n        workflows:\n          type: array\n          description: workflows initiated by this submission\n          items:\n            $ref: '#/components/schemas/SubmissionValidationEntityInputs'\n      description: information on a submission\n    UserCommentUpdateOperation:\n      required:\n        - userComment\n      type: object\n      properties:\n        userComment:\n          type: string\n          description: The updated value for user comment (max length 1000 characters)\n      description: Update user comment for submission\n    WorkflowCost:\n      type: object\n      properties:\n        cost:\n          type: number\n          description: Workflow cost\n        workflowId:\n          type: string\n          description: The id of this workflow\n      description: The cost of a workflow, if available\n    WorkflowOutputs:\n      type: object\n      properties:\n        tasks:\n          type: array\n          description: Map from tasks to output/log pairs\n          items:\n            $ref: '#/components/schemas/TaskOutput'\n        workflowId:\n          type: string\n          description: The id of this workflow\n      description: Outputs and logs from all tasks in a workflow\n    WorkflowQueueStatusResponse:\n      required:\n        - estimatedQueueTimeMS\n        - workflowCountsByStatus\n        - workflowsBeforeNextUserWorkflow\n      type: object\n      properties:\n        estimatedQueueTimeMS:\n          type: integer\n          description: estimated milliseconds until the current queue is submitted\n        workflowsBeforeNextUserWorkflow:\n          type: integer\n          description: the number of workflows in the queue ahead of the user's first\n            workflow\n        workflowCountsByStatus:\n          type: object\n          properties: {}\n          description: Map[String,Int]\n      description: Information about the status of workflows and the workflow queue\n    WorkflowQueueStatusByUserResponse:\n      required:\n        - maxActiveWorkflowsPerUser\n        - maxActiveWorkflowsTotal\n        - statuses\n        - users\n      type: object\n      properties:\n        statuses:\n          type: object\n          properties: {}\n          description: Map[String, Int]\n        users:\n          type: object\n          properties: {}\n          description: Map[String, Map[String, Int]]\n        maxActiveWorkflowsTotal:\n          type: integer\n          description: maximum number of active workflows allowed in total\n        maxActiveWorkflowsPerUser:\n          type: integer\n          description: maximum number of active workflows allower per user\n      description: Information about the status of workflows and the workflow queue,\n        broken out by user\n    WorkspaceName:\n      required:\n        - name\n        - namespace\n      type: object\n      properties:\n        namespace:\n          type: string\n          description: The namespace (billing project) the workspace belongs to\n        name:\n          type: string\n          description: The name of the workspace\n      description: \"\"\n    EntityName:\n      required:\n        - name\n      type: object\n      properties:\n        name:\n          type: string\n          description: The name of the entity\n      description: \"\"\n    EntityCopyDefinition:\n      required:\n        - destinationWorkspace\n        - entityNames\n        - entityType\n        - sourceWorkspace\n      type: object\n      properties:\n        sourceWorkspace:\n          $ref: '#/components/schemas/WorkspaceName'\n        destinationWorkspace:\n          $ref: '#/components/schemas/WorkspaceName'\n        entityType:\n          type: string\n          description: Type of top level entities to copy\n        entityNames:\n          type: array\n          description: Names of entities to copy\n          items:\n            type: string\n      description: \"\"\n    Entity:\n      required:\n        - attributes\n        - entityType\n        - name\n      type: object\n      properties:\n        name:\n          type: string\n          description: The name of the entity\n        entityType:\n          type: string\n          description: The type of the entity\n        attributes:\n          type: object\n          properties: {}\n          description: Map[String,Attribute]\n      description: \"\"\n    AttributeEntityReference:\n      required:\n        - entityName\n        - entityType\n      type: object\n      properties:\n        entityType:\n          type: string\n          description: The type of the entity\n        entityName:\n          type: string\n          description: The name of the entity\n      description: \"\"\n    EntityTypeMetadata:\n      required:\n        - attributeNames\n        - count\n      type: object\n      properties:\n        count:\n          type: integer\n          description: The number of entities of this type\n        idName:\n          type: string\n          description: The name if the id field for the entity\n        attributeNames:\n          type: array\n          description: A list of all attribute names used\n          items:\n            type: string\n      description: \"\"\n    AttributeUpdateOperationArray:\n      type: array\n      description: \"\"\n      example: |\n        [\n          {\n            \"op\": \"AddUpdateAttribute\",\n            \"attributeName\": \"name of attribute to add/update\",\n            \"addUpdateAttribute\": \"value to add/update\"\n          },\n          {\n            \"op\": \"RemoveAttribute\",\n            \"attributeName\": \"name of attribute to remove\"\n          },\n          {\n            \"op\": \"AddListMember\",\n            \"attributeListName\": \"name of list attribute\",\n            \"newMember\": \"value to add to list\"\n          },\n          {\n            \"op\": \"RemoveListMember\",\n            \"attributeListName\": \"name of list attribute\",\n            \"removeMember\": \"value to remove from list\"\n          },\n          {\n            \"op\": \"CreateAttributeEntityReferenceList\",\n            \"attributeListName\": \"name of entity-reference list attribute to create\"\n          },\n          {\n            \"op\": \"CreateAttributeValueList\",\n            \"attributeName\": \"name of value-list attribute to create\"\n          }\n        ]\n      items:\n        $ref: '#/components/schemas/AttributeUpdateOperation'\n    AttributeUpdateOperation:\n      required:\n        - op\n      type: object\n      properties:\n        op:\n          type: string\n          description: The operation to perform on the attribute\n          enum:\n            - AddUpdateAttribute\n            - RemoveAttribute\n            - AddListMember\n            - RemoveListMember\n            - CreateAttributeEntityReferenceList\n            - CreateAttributeValueList\n      discriminator:\n        propertyName: op\n    AddUpdateAttribute:\n      allOf:\n        - $ref: '#/components/schemas/AttributeUpdateOperation'\n        - type: object\n          properties:\n            attributeName:\n              type: string\n              description: Name of attribute to add/update\n            addUpdateAttribute:\n              type: string\n              description: Value to add/update. Accepts strings, numbers, booleans.\n    RemoveAttribute:\n      allOf:\n        - $ref: '#/components/schemas/AttributeUpdateOperation'\n        - type: object\n          properties:\n            attributeName:\n              type: string\n              description: The name of attribute to remove\n    AddListMember:\n      allOf:\n        - $ref: '#/components/schemas/AttributeUpdateOperation'\n        - type: object\n          properties:\n            attributeListName:\n              type: string\n              description: The name of the attribute list\n            newMember:\n              type: string\n              description: The attribute to add to the list\n    RemoveListMember:\n      allOf:\n        - $ref: '#/components/schemas/AttributeUpdateOperation'\n        - type: object\n          properties:\n            attributeListName:\n              type: string\n              description: The name of the attribute list\n            removeMember:\n              type: string\n              description: The attribute to remove from the list\n    CreateAttributeEntityReferenceList:\n      allOf:\n        - $ref: '#/components/schemas/AttributeUpdateOperation'\n        - type: object\n          properties:\n            attributeListName:\n              type: string\n              description: The name of the empty attribute entity-reference list to\n                create. This is a non-destructive operation.\n    CreateAttributeValueList:\n      allOf:\n        - $ref: '#/components/schemas/AttributeUpdateOperation'\n        - type: object\n          properties:\n            attributeName:\n              type: string\n              description: The name of the empty attribute value-list to create. This\n                is a non-destructive operation.\n    EntityUpdateDefinition:\n      required:\n        - entityType\n        - name\n        - operations\n      type: object\n      properties:\n        name:\n          type: string\n          description: The name of the entity\n        entityType:\n          type: string\n          description: The type of the entity\n        operations:\n          $ref: '#/components/schemas/AttributeUpdateOperationArray'\n      description: \"\"\n    MethodConfiguration:\n      required:\n        - inputs\n        - methodRepoMethod\n        - name\n        - namespace\n      type: object\n      properties:\n        namespace:\n          type: string\n          description: This method configuration's namespace\n        name:\n          type: string\n          description: The name of the method configuration\n        rootEntityType:\n          type: string\n          description: The root entity type that the method will be running on. Optional\n            if this method config doesn't run on an entity (i.e. uses only workspace\n            attributes and literal inputs).\n        inputs:\n          type: object\n          properties: {}\n        outputs:\n          type: object\n          properties: {}\n        methodRepoMethod:\n          $ref: '#/components/schemas/MethodRepoMethod'\n        methodConfigVersion:\n          type: integer\n          description: Version number, incremented on edit\n        deleted:\n          type: boolean\n          description: Is this config marked as deleted?\n        dataReferenceName:\n          type: string\n          description: the name of the data reference within this workspace to be used to derive input values\n      description: \"\"\n    ValidatedMethodConfiguration:\n      required:\n        - extraInputs\n        - invalidInputs\n        - invalidOutputs\n        - methodConfiguration\n        - missingInputs\n        - validInputs\n        - validOutputs\n      type: object\n      properties:\n        validInputs:\n          type: array\n          items:\n            type: string\n        invalidInputs:\n          type: object\n          properties: {}\n        missingInputs:\n          type: array\n          items:\n            type: string\n        extraInputs:\n          type: array\n          items:\n            type: string\n        validOutputs:\n          type: array\n          items:\n            type: string\n        invalidOutputs:\n          type: object\n          properties: {}\n        methodConfiguration:\n          $ref: '#/components/schemas/MethodConfiguration'\n      description: Information about the validity of a method configuration's expressions\n        relative to the method itself\n    MethodRepoConfigurationImport:\n      required:\n        - destination\n        - methodRepoName\n        - methodRepoNamespace\n        - methodRepoSnapshotId\n      type: object\n      properties:\n        methodRepoNamespace:\n          type: string\n          description: Method Repository Namespace\n        methodRepoName:\n          type: string\n          description: Method Repository Name\n        methodRepoSnapshotId:\n          type: integer\n          description: Method Repository Snapshot ID\n        destination:\n          $ref: '#/components/schemas/MethodConfigurationName'\n      description: \"\"\n    MethodRepoConfigurationExport:\n      required:\n        - methodRepoName\n        - methodRepoNamespace\n        - source\n      type: object\n      properties:\n        methodRepoNamespace:\n          type: string\n          description: Method Repository Namespace\n        methodRepoName:\n          type: string\n          description: Method Repository Name\n        source:\n          $ref: '#/components/schemas/MethodConfigurationName'\n      description: \"\"\n    MethodConfigurationNamePair:\n      required:\n        - destination\n        - source\n      type: object\n      properties:\n        source:\n          $ref: '#/components/schemas/MethodConfigurationName'\n        destination:\n          $ref: '#/components/schemas/MethodConfigurationName'\n      description: \"\"\n    MethodConfigurationName:\n      required:\n        - name\n        - namespace\n        - workspaceName\n      type: object\n      properties:\n        name:\n          type: string\n          description: The name of the method configuration\n        namespace:\n          type: string\n          description: This method configuration's owning namespace\n        workspaceName:\n          $ref: '#/components/schemas/WorkspaceName'\n      description: \"\"\n    MethodRepoMethod:\n      required:\n        - methodName\n        - methodNamespace\n        - methodVersion\n      type: object\n      properties:\n        methodNamespace:\n          type: string\n          description: The namespace of the method in Agora\n        methodName:\n          type: string\n          description: The name of the method in Agora\n        methodVersion:\n          type: integer\n          description: The integer method version in Agora (or a string method version\n            for Dockstore)\n        methodPath:\n          type: string\n          description: The path of the method in Dockstore\n        sourceRepo:\n          type: string\n          description: The method's repository, currently one of \"agora\" or \"dockstore\"\n        methodUri:\n          type: string\n          description: URI that specifies the method's repository and captures all\n            the information necessary to identify the method within its repository\n            (e.g. agora://namespace/name/1, dockstore://path/version)\n      description: \"\"\n    WorkspaceACL:\n      required:\n        - acl\n      type: object\n      properties:\n        acl:\n          type: object\n          properties: {}\n          description: Map[String,WorkspaceAccessEntry]\n      description: \"\"\n    WorkspaceACLUpdate:\n      required:\n        - accessLevel\n        - email\n      type: object\n      properties:\n        email:\n          type: string\n          description: email address of the user or group whose permissions will be\n            changed\n        accessLevel:\n          type: string\n          description: The access level to grant to this user or group (OWNER, READER,\n            WRITER, NO ACCESS)\n        canShare:\n          type: boolean\n          description: Set to true if you want this user to be able to share the workspace\n            with other users, only meaningful for readers and writers, default false\n        canCompute:\n          type: boolean\n          description: Set to true if you want this user to be able to launch compute\n            in this workspace, may not be true for readers, default false for reader,\n            true otherwise\n      description: \"\"\n    WorkspaceACLUpdateResponseList:\n      required:\n        - invitesSent\n        - invitesUpdated\n        - usersNotFound\n        - usersUpdated\n      type: object\n      properties:\n        usersUpdated:\n          type: array\n          description: the users or groups who were updated\n          items:\n            $ref: '#/components/schemas/WorkspaceACLUpdate'\n        invitesSent:\n          type: array\n          description: the list of invites that were sent\n          items:\n            $ref: '#/components/schemas/WorkspaceACLUpdate'\n        invitesUpdated:\n          type: array\n          description: the list of invites that were updated\n          items:\n            $ref: '#/components/schemas/WorkspaceACLUpdate'\n        usersNotFound:\n          type: array\n          description: the users or groups who were not found\n          items:\n            $ref: '#/components/schemas/WorkspaceACLUpdate'\n      description: \"\"\n    ManagedGroupAccessInstructions:\n      required:\n        - groupName\n        - instructions\n      type: object\n      properties:\n        groupName:\n          type: string\n          description: The name of the Group with instructions\n        instructions:\n          type: string\n          description: The instructions for applying to the Group\n      description: \"\"\n    WorkspaceCatalog:\n      required:\n        - catalog\n        - email\n      type: object\n      properties:\n        email:\n          type: string\n          description: email of the user or group whose permissions will be changed\n        catalog:\n          type: boolean\n          description: Set to true if you want this user to be able to perform library\n            related operations on the workspace\n      description: \"\"\n    WorkspaceCatalogResponse:\n      required:\n        - catalog\n        - subjectId\n      type: object\n      properties:\n        subjectId:\n          type: string\n          description: subject Id of the user or group whose permissions will be changed\n        catalog:\n          type: boolean\n          description: Set to true if you want this user to be able to perform library\n            related operations on the workspace\n      description: \"\"\n    WorkspaceCatalogUpdateResponseList:\n      required:\n        - emailsNotFound\n        - usersUpdated\n      type: object\n      properties:\n        usersUpdated:\n          type: array\n          description: the users or groups who were updated\n          items:\n            $ref: '#/components/schemas/WorkspaceCatalogResponse'\n        emailsNotFound:\n          type: array\n          description: the emails of users or groups who were not found\n          items:\n            type: string\n      description: \"\"\n    WorkspaceAccessEntry:\n      required:\n        - accessLevel\n        - canCompute\n        - canShare\n        - pending\n      type: object\n      properties:\n        accessLevel:\n          type: string\n          description: The access level granted to this user or group (OWNER, READER,\n            WRITER, NO ACCESS)\n        pending:\n          type: boolean\n          description: The status of the users access\n        canShare:\n          type: boolean\n          description: True if the user can share the workspace with others, false\n            otherwise\n        canCompute:\n          type: boolean\n          description: True if the user can launch compute in this workspace, false\n            otherwise\n      description: \"\"\n    WorkspaceDetails:\n      required:\n        - bucketName\n        - createdBy\n        - createdDate\n        - isLocked\n        - lastModified\n        - name\n        - namespace\n        - workspaceId\n        - googleProject\n        - workspaceVersion\n      type: object\n      properties:\n        attributes:\n          type: object\n          properties: {}\n          description: Map[String, Attribute]\n        authorizationDomain:\n          type: array\n          description: The list of groups in the Authorization Domain (empty if no\n            AD is set)\n          items:\n            $ref: '#/components/schemas/ManagedGroupRef'\n        bucketName:\n          type: string\n          description: The name of the bucket associated with the workspace\n        createdBy:\n          type: string\n          description: The user who created the workspace\n        createdDate:\n          type: string\n          description: The date the workspace was created in yyyy-MM-ddTHH:mm:ss.SSSZZ\n            format\n          format: date-time\n        isLocked:\n          type: boolean\n          description: Can the Workspace currently be modified?\n        lastModified:\n          type: string\n          description: The date the workspace was last modified in yyyy-MM-ddTHH:mm:ss.SSSZZ\n            format\n          format: date-time\n        name:\n          type: string\n          description: The name of the workspace\n        namespace:\n          type: string\n          description: The namespace the workspace belongs to\n        workflowCollectionName:\n          type: string\n          description: The name of the workflow collection associated with the workspace\n        workspaceId:\n          type: string\n          description: A UUID associated with the workspace\n        googleProject:\n          type: string\n          description: Google Project ID of the google project used by the workspace for compute and storage\n        googleProjectNumber:\n          type: string\n          description: A different google project identifier for the same project identified by the googleProject; required by google for certain actions\n        workspaceVersion:\n          type: string\n          description: internal use\n        billingAccount:\n          type: string\n          description: The current billing account being charged for activity within this workspace. For desired billing account, look to the billing account specified on this workspace's billing project\n        billingAccountErrorMessage:\n          type: string\n          description: Error message received during most recent attempt to update the current billing account on workspace's Google project. Empty if update was successful.\n        completedCloneWorkspaceFileTransfer:\n          type: string\n          description: The date all files were successfully transferred to the workspace bucket if applicable\n            in yyyy-MM-ddTHH:mm:ss.SSSZZ format\n          format: date-time\n      description: \"\"\n    WorkspaceSubmissionStats:\n      required:\n        - runningSubmissionsCount\n      type: object\n      properties:\n        lastSuccessDate:\n          type: string\n          description: The date of the last successful submission\n          format: date-time\n        lastFailureDate:\n          type: string\n          description: The date of the last failed submission\n          format: date-time\n        runningSubmissionsCount:\n          type: integer\n          description: Count of all the running submissions\n      description: Statistics about submissions in a workspace\n    WorkspaceRequest:\n      required:\n        - attributes\n        - name\n        - namespace\n      type: object\n      properties:\n        namespace:\n          type: string\n          description: The namespace (billing project) the workspace belongs to\n        name:\n          type: string\n          description: The name of the workspace\n        authorizationDomain:\n          type: array\n          description: The list of groups in the Authorization Domain (empty if no\n            AD is set)\n          items:\n            $ref: '#/components/schemas/ManagedGroupRef'\n        attributes:\n          type: object\n          properties: {}\n        noWorkspaceOwner:\n          type: boolean\n          description: Optional, false if not specified. If true, the workspace is created with a Billing Project owner but no workspace owner. Requires being a Billing Project owner.\n          default: false\n        bucketLocation:\n          type: string\n          required: false\n          description: Region (NOT multi-region) in which bucket attached to the workspace should be created. If not provided, the bucket will be created in the 'US' multi-region.\n      description: \"\"\n    WorkspaceRequestClone:\n      required:\n        - attributes\n        - name\n        - namespace\n      type: object\n      properties:\n        namespace:\n          type: string\n          description: The namespace (billing project) the workspace belongs to\n        name:\n          type: string\n          description: The name of the workspace\n        authorizationDomain:\n          type: array\n          description: The list of groups in the Authorization Domain (empty if no\n            AD is set)\n          items:\n            $ref: '#/components/schemas/ManagedGroupRef'\n        attributes:\n          type: object\n          properties: {}\n        copyFilesWithPrefix:\n          type: string\n          description: Used for clone operations only; the prefix for files to copy between source and destination workspace buckets\n        noWorkspaceOwner:\n          type: boolean\n          description: Optional, false if not specified. If true, the workspace is created with a Billing Project owner but no workspace owner. Requires being a Billing Project owner.\n          default: false\n        bucketLocation:\n          type: string\n          required: false\n          description: Region (NOT multi-region) in which bucket attached to the workspace should be created. If not provided, the bucket will be created in the 'US' multi-region.\n      description: \"\"\n    BucketUsageResponse:\n      required:\n        - usageInBytes\n      type: object\n      properties:\n        usageInBytes:\n          type: integer\n          description: The current storage bucket usage in bytes\n      description: \"\"\n    Attribute:\n      type: object\n      properties:\n        value:\n          type: string\n          description: \"\"\n      description: \"\"\n    RawlsGroupRef:\n      type: object\n      properties:\n        groupName:\n          type: string\n          description: \"\"\n      description: a reference to a group\n    RawlsGroupShort:\n      type: object\n      properties:\n        groupName:\n          type: string\n          description: \"\"\n        groupEmail:\n          type: string\n          description: \"\"\n      description: group information without memberships\n    ExecutionEvent:\n      required:\n        - description\n        - startTime\n      type: object\n      properties:\n        description:\n          type: string\n          description: Description of the event\n        startTime:\n          type: string\n          description: When the event started\n          format: date-time\n        endTime:\n          type: string\n          description: When the event finished\n          format: date-time\n      description: \"\"\n    WorkspaceResponse:\n      type: object\n      properties:\n        accessLevel:\n          $ref: '#/components/schemas/WorkspaceAccessLevel'\n        bucketOptions:\n          $ref: '#/components/schemas/WorkspaceBucketOptions'\n        canCompute:\n          type: boolean\n        canShare:\n          type: boolean\n        catalog:\n          type: boolean\n        owners:\n          type: array\n          description: |\n            Owners of this workspace. This API only lists owners; use the get-workspace-ACL API to get the full list of all users at all permission levels.\n          items:\n            type: string\n        workspace:\n          $ref: '#/components/schemas/WorkspaceDetails'\n        workspaceSubmissionStats:\n          $ref: '#/components/schemas/WorkspaceSubmissionStats'\n      description: \"\"\n    WorkspaceListResponse:\n      type: object\n      properties:\n        accessLevel:\n          $ref: '#/components/schemas/WorkspaceAccessLevel'\n        public:\n          type: boolean\n        workspace:\n          $ref: '#/components/schemas/WorkspaceDetails'\n        workspaceSubmissionStats:\n          $ref: '#/components/schemas/WorkspaceSubmissionStats'\n      description: \"\"\n    WorkspaceBucketOptions:\n      required:\n        - requesterPays\n      type: object\n      properties:\n        requesterPays:\n          type: boolean\n          description: Whether the bucket is requester pays\n      description: Extra information about a GCS bucket attached to a workspace\n    WorkspaceAccessLevel:\n      type: string\n      description: The level of access a user or group has on a Workspace. NoAccess,\n        Read, Write, Owner, ProjectOwner\n      enum:\n        - PROJECT_OWNER\n        - OWNER\n        - WRITER\n        - READER\n        - NO ACCESS\n    CallMetadata:\n      type: object\n      properties:\n        inputs:\n          type: object\n          properties: {}\n          description: map from input names onto resolved values\n        executionStatus:\n          type: string\n          description: status of call\n        executionEvents:\n          type: array\n          items:\n            $ref: '#/components/schemas/ExecutionEvent'\n        backendStatus:\n          type: string\n          description: status of the backend\n        backendLogs:\n          type: object\n          properties: {}\n          description: map of log files from backend\n        outputs:\n          type: object\n          properties: {}\n          description: map from output names to local files\n        start:\n          type: string\n          description: starting time of call\n          format: date-time\n        end:\n          type: string\n          description: ending time of call\n          format: date-time\n        jobId:\n          type: string\n          description: unique ID of job\n        returnCode:\n          type: integer\n          description: result code\n        backend:\n          type: string\n          description: type of backend executing the call\n        stdout:\n          type: string\n          description: location of stdout\n        stderr:\n          type: string\n          description: location of stderr\n        shardIndex:\n          type: integer\n          description: call index within a scatter block, as reported by execution\n            service\n      description: Stuff you need to know about calls\n    AgoraEntity:\n      type: object\n      properties:\n        namespace:\n          type: string\n        name:\n          type: string\n        snapshotId:\n          type: string\n        synopsis:\n          type: string\n        documentation:\n          type: string\n        owner:\n          type: string\n        createDate:\n          type: string\n        payload:\n          type: string\n        url:\n          type: string\n        entityType:\n          type: string\n      description: response from Method Repo\n    UserRefreshToken:\n      type: object\n      properties:\n        refreshToken:\n          type: string\n      description: payload to put a refresh token\n    UserRefreshTokenDate:\n      type: object\n      properties:\n        refreshTokenUpdatedDate:\n          type: string\n          format: date-time\n      description: date a refresh token was stored\n    MethodInput:\n      type: object\n      properties:\n        name:\n          type: string\n        inputType:\n          type: string\n        optional:\n          type: boolean\n      description: description of a method input\n    MethodOutput:\n      type: object\n      properties:\n        name:\n          type: string\n        outputType:\n          type: string\n      description: description of a method output\n    MethodInputsOutputs:\n      type: object\n      properties:\n        inputs:\n          type: array\n          items:\n            $ref: '#/components/schemas/MethodInput'\n        outputs:\n          type: array\n          items:\n            $ref: '#/components/schemas/MethodOutput'\n      description: description of a method's inputs and outputs\n    SyncReportItem:\n      type: object\n      properties:\n        operation:\n          type: string\n        email:\n          type: string\n        errorReport:\n          $ref: '#/components/schemas/ErrorReport'\n      description: results of an attempt to synchronize a member\n    SyncReport:\n      type: object\n      properties:\n        items:\n          type: array\n          items:\n            $ref: '#/components/schemas/SyncReportItem'\n      description: report of members added or removed\n    ApplicationVersion:\n      type: object\n      properties:\n        gitHash:\n          type: string\n        buildNumber:\n          type: string\n        version:\n          type: string\n      description: version of the application\n    ExecutionEngineVersion:\n      type: object\n      properties:\n        cromwell:\n          type: string\n      description: version of the execution engine\n    EntityQuery:\n      required:\n        - page\n        - pageSize\n        - sortDirection\n        - sortField\n      type: object\n      properties:\n        page:\n          type: number\n          description: page number, 1-indexed positive integer\n        pageSize:\n          type: number\n          description: count of items per page, positive integer\n        sortField:\n          type: string\n          description: field to sort by\n        sortDirection:\n          type: string\n          description: asc or desc\n        filterTerms:\n          type: string\n          description: terms to filter results by\n      description: \"\"\n    EntityQueryResultMetadata:\n      required:\n        - filteredCount\n        - filteredPageCount\n        - unfilteredCount\n      type: object\n      properties:\n        unfilteredCount:\n          type: number\n          description: count of results before filtering\n        filteredCount:\n          type: number\n          description: count of results after filtering\n        filteredPageCount:\n          type: number\n          description: count of pages after filtering; honors pageSize parameter\n      description: \"\"\n    EntityQueryResponse:\n      required:\n        - parameters\n        - resultMetadata\n        - results\n      type: object\n      properties:\n        parameters:\n          $ref: '#/components/schemas/EntityQuery'\n        resultMetadata:\n          $ref: '#/components/schemas/EntityQueryResultMetadata'\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/Entity'\n      description: \"\"\n    CreateRawlsBillingProjectFullRequest:\n      required:\n        - billingAccount\n        - projectName\n      type: object\n      properties:\n        projectName:\n          type: string\n          description: the name of the project to create\n        billingAccount:\n          type: string\n          description: the id of the billing account to use, must start with 'billingAccounts/'\n        highSecurityNetwork:\n          type: boolean\n          description: Optional, false if not specified. If true, spin up all compute\n            in a VPC network.\n        enableFlowLogs:\n          type: boolean\n          description: Optional, false if not specified. If true, enable flow logs\n            within the high security network. Requires highSecurityNetwork = true.\n        privateIpGoogleAccess:\n          type: boolean\n          description: Optional, false if not specified. If true, it configures the\n            VPC network to only allow access to GCP APIs that are protected by the\n            project's service perimeter and routes all allowed API traffic through\n            a narrow IP range. Requires highSecurityNetwork = true.\n        servicePerimeter:\n          type: string\n          description: The fully qualified name of the GCP service perimeter to put\n            this project into in the form accessPolicies/[POLICY NUMBER]/servicePerimeters/[NAME].\n            Caller must have the add_project action for this service perimeter in\n            Sam.\n      description: \"\"\n    CreateRawlsV2BillingProjectFullRequest:\n      required:\n        - billingAccount\n        - projectName\n      type: object\n      properties:\n        projectName:\n          type: string\n          description: the name of the project to create\n        billingAccount:\n          type: string\n          description: the id of the billing account to use, must start with 'billingAccounts/'\n        servicePerimeter:\n          type: string\n          description: The fully qualified name of the GCP service perimeter to put\n            this project into in the form accessPolicies/[POLICY NUMBER]/servicePerimeters/[NAME].\n            Caller must have the add_project action for this service perimeter in\n            Sam.\n      description: \"\"\n    SpendReport:\n      required:\n        - spendDetails\n        - spendSummary\n      type: object\n      properties:\n        spendDetails:\n          description: details of spend data, categorized by given key\n          type: array\n          items:\n            $ref: '#/components/schemas/SpendReportingAggregation'\n        spendSummary:\n          $ref: '#/components/schemas/SpendReportingForDateRange'\n    SpendReportingAggregation:\n      required:\n        - aggregationKey\n        - spendData\n      type: object\n      properties:\n        aggregationKey:\n          type: string\n          enum:\n            - Daily\n            - Workspace\n          description: Key indicating how spendData has been aggregated. Ex. 'workspace' if all data in spendData is for a particular workspace\n        spendData:\n          type: array\n          items:\n            $ref: '#/components/schemas/SpendReportingForDateRange'\n    SpendReportingForDateRange:\n      required:\n        - cost\n        - credits\n        - currency\n        - startTime\n        - endTime\n      type: object\n      properties:\n        cost:\n          type: string\n          description: total cost for date range\n        credits:\n          type: string\n          description: credits towards reported cost. cost - credits = amount billed to users\n        currency:\n          type: string\n          description: currency that cost and credits uses\n        startTime:\n          type: string\n          format: timestamp\n          description: timestamp (UTC) marking the start of reported spend range (YYYY-MM-DDThh:mm:ss.fffZ)\n        endTime:\n          type: string\n          format: timestamp\n          description: timestamp (UTC) marking the end of reported spend range (YYYY-MM-DDThh:mm:ss.fffZ)\n        googleProjectId:\n          type: string\n          description: if present, Google project of workspace where cost was generated\n        workspace:\n          $ref: '#/components/schemas/WorkspaceName'\n    SpendReportConfiguration:\n      required:\n        - datasetGoogleProject\n        - datasetName\n      type: object\n      properties:\n        datasetGoogleProject:\n          type: string\n          description: the name of the Google Project where the BigQuery dataset resides\n        datasetName:\n          type: string\n          description: the name of the BigQuery dataset containing project spend data\n      description: \"\"\n    RawlsBillingProjectMembership:\n      required:\n        - projectName\n        - role\n        - status\n      type: object\n      properties:\n        projectName:\n          type: string\n          description: the name of the project to create\n        role:\n          type: string\n          description: the role of the current user in the project\n        status:\n          type: string\n          enum:\n            - Creating\n            - Ready\n            - Error\n            - AddingToPerimeter\n        message:\n          type: string\n          description: informational message about the project\n      description: an element of a list of projects and related role for a user\n    RawlsBillingProjectStatus:\n      required:\n        - creationStatus\n        - projectName\n      type: object\n      properties:\n        projectName:\n          type: string\n          description: the name of the billing project\n        creationStatus:\n          type: string\n          enum:\n            - Creating\n            - Ready\n            - Error\n            - AddingToPerimeter\n      description: a billing project status\n    RawlsBillingProjectMember:\n      required:\n        - email\n        - role\n      type: object\n      properties:\n        email:\n          type: string\n          description: the email of the user\n        role:\n          type: string\n          description: the role of the user in the project\n      description: an element of a list of project users and their role\n    RawlsBillingProjectResponse:\n      required:\n        - projectName\n        - invalidBillingAccount\n        - roles\n      type: object\n      properties:\n        projectName:\n          type: string\n          description: the name of the project\n        billingAccount:\n          type: string\n          description: the billing account to use in google projects\n        servicePerimeter:\n          type: string\n          description: the name of the service permeters for google project\n        invalidBillingAccount:\n          type: boolean\n          description: whether or not the billing account is usable by Terra\n        roles:\n          type: array\n          items:\n            type: string\n          description: the roles the caller has on the project\n        status:\n          deprecated: true\n          type: string\n          enum:\n            - Creating\n            - Ready\n            - Error\n            - AddingToPerimeter\n          description: the status of allocating the billing project's resources.\n        message:\n          deprecated: true\n          type: string\n          description: informational message about the project\n    UpdateRawlsBillingAccountRequest:\n      required:\n        - billingAccount\n      type: object\n      properties:\n        billingAccount:\n          type: string\n          description: The name of the billing account to use\n    WorkspaceBillingAccount:\n      required:\n        - workspaceName\n      type: object\n      properties:\n        workspaceName:\n          type: string\n          description: the name of the workspace\n        currentBillingAccountOnGoogleProject:\n          type: string\n          description: the billing project associated with the workspace\n    RawlsBillingProjectTransfer:\n      required:\n        - bucket\n        - newOwnerEmail\n        - newOwnerToken\n        - project\n      type: object\n      properties:\n        project:\n          type: string\n          description: the name of the new google project\n        bucket:\n          type: string\n          description: generated Cromwell auth bucket, minus the gs:// prefix\n        newOwnerEmail:\n          type: string\n          description: Email of the new billing project owner\n        newOwnerToken:\n          type: string\n          description: OAuth2AccessToken of the new billing project owner\n      description: admin request to transfer a pre-created billing project to a new\n        owner\n    WorkspaceTag:\n      required:\n        - count\n        - tag\n      type: object\n      properties:\n        tag:\n          type: string\n          description: tag string\n        count:\n          type: number\n          description: number of usages of the tag across FireCloud\n      description: tag with count\n    ManagedGroupRef:\n      required:\n        - membersGroupName\n      type: object\n      properties:\n        membersGroupName:\n          type: string\n      description: a reference to a group that can be managed by users\n    NotificationType:\n      required:\n        - description\n        - notificationKey\n      type: object\n      properties:\n        notificationKey:\n          type: string\n        description:\n          type: string\n      description: key and description of a notification\n    SystemStatus:\n      required:\n        - ok\n        - systems\n      type: object\n      properties:\n        ok:\n          type: boolean\n          description: whether any system(s) need attention\n          example: false\n        systems:\n          type: object\n          properties: {}\n          description: Map[String, SubsystemStatus]\n          example:\n            Agora:\n              ok: true\n            Cromwell:\n              ok: true\n            Database:\n              ok: true\n            GoogleBilling:\n              ok: false\n              messages:\n                - Google Billing is misbehaving!\n            GoogleBuckets:\n              ok: true\n            GoogleGenomics:\n              ok: true\n            GoogleGroups:\n              ok: true\n            GooglePubSub:\n              ok: true\n      description: status of each system Rawls depends on\n    SubsystemStatus:\n      type: object\n      properties:\n        ok:\n          type: boolean\n          description: whether this system needs attention\n        messages:\n          type: array\n          items:\n            type: string\n      description: status of a subsystem Rawls depends on\n  parameters:\n    billingProjectQueryParam:\n      name: billingProject\n      in: query\n      description: Billing project to use for queries to the data reference\n      schema:\n        type: string\n    dataReferenceQueryParam:\n      name: dataReference\n      in: query\n      description: Data reference name to query for entity metadata\n      schema:\n        type: string\n    entityNamePathParam:\n      name: entityName\n      in: path\n      description: Entity Name\n      required: true\n      schema:\n        type: string\n    entityTypePathParam:\n      name: entityType\n      in: path\n      description: Entity Type\n      required: true\n      schema:\n        type: string\n    snapshotIdPathParam:\n      name: snapshotId\n      in: path\n      description: The snapshot's referenceId\n      required: true\n      schema:\n        type: string\n    referenceNamePathParam:\n      name: referenceName\n      in: path\n      description: The snapshot reference's name\n      required: true\n      schema:\n        type: string\n    workspaceNamespacePathParam:\n      name: workspaceNamespace\n      in: path\n      description: The workspace namespace\n      required: true\n      schema:\n        type: string\n    workspaceNamePathParam:\n      name: workspaceName\n      in: path\n      description: The workspace name\n      required: true\n      schema:\n        type: string\n  securitySchemes:\n    authorization:\n      type: oauth2\n      flows:\n        implicit:\n          authorizationUrl: https://accounts.google.com/o/oauth2/auth\n          scopes:\n            openid: open id authorization\n            email: email authorization\n            profile: profile authorization\n            https://www.googleapis.com/auth/cloud-billing: cloud billing authorization\nsecurity:\n  - authorization: [openid, email, profile]\n"
		}
	},
	"Error": "unmarshal: callback: json: cannot unmarshal bool into Go struct field Schema.required of type []string"
}