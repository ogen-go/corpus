{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/awslabs/aws-ai-solution-kit"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "src/api-deployment/features/api-explorer/openapi.yaml",
			"byteSize": 25934,
			"content": "openapi: 3.0.3\ninfo:\n  description: |\n    You can find out more about AI Solution Kit at\n    [https://github.com/awslabs/aws-ai-solution-kit](https://github.com/awslabs/aws-ai-solution-kit/) or on\n    [https://www.amazonaws.cn/solutions/ai-solution-kit](https://www.amazonaws.cn/solutions/ai-solution-kit/?nc1=h_ls).\n  version: \"1.2.0\"\n  title: AI Solution Kit\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\n  contact:\n    url: https://www.amazonaws.cn/contact-us\n    name: Amazon Web Services Solutions\n  termsOfService: https://www.amazonaws.cn/en/terms/?nc1=f_cc\nservers:\n  - url: ''\ntags:\n  - name: Optical Character Recognition(OCR)\n  - name: Facial \u0026 Body\n  - name: Image Understanding\n  - name: Computer Vision\n  - name: Natural Language\npaths:\n  /general-ocr-standard:\n    post:\n      tags:\n        - Optical Character Recognition(OCR)\n      summary: Recognize and extract Simplified Chinese, numbers, alphabetical characters and symbols (standard mode)\n      operationId: general-ocr-standard\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/imageRequest'\n            examples:\n              URL:\n                $ref: '#/components/examples/imageURL'\n              Base64:\n                $ref: '#/components/examples/imageBase64'\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ocrResponse'\n        '403':\n          description: Missing Authentication Token\n        '500':\n          description: Internal server error\n        '502':\n          description: Internal Server Error\n        '504':\n          description: Endpoint request timed out\n  /general-ocr-advanced:\n    post:\n      tags:\n        - Optical Character Recognition(OCR)\n      summary: Recognize and extract Simplified Chinese, numbers, alphabetical characters and symbols (advanced mode)\n      operationId: general-ocr-advanced\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/imageRequest'\n            examples:\n              URL:\n                $ref: '#/components/examples/imageURL'\n              Base64:\n                $ref: '#/components/examples/imageBase64'\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ocrResponse'\n        '403':\n          description: Missing Authentication Token\n        '500':\n          description: Internal server error\n        '502':\n          description: Internal Server Error\n        '504':\n          description: Endpoint request timed out\n  /general-ocr-traditional-chinese:\n    post:\n      tags:\n        - Optical Character Recognition(OCR)\n      summary: Recognize and extract Traditional Chinese, numbers, alphabetical characters and symbols\n      operationId: general-ocr-traditional-chinese\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/imageRequest'\n            examples:\n              URL:\n                $ref: '#/components/examples/imageURL'\n              Base64:\n                $ref: '#/components/examples/imageBase64'\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ocrResponse'\n        '403':\n          description: Missing Authentication Token\n        '500':\n          description: Internal server error\n        '502':\n          description: Internal Server Error\n        '504':\n          description: Endpoint request timed out\n  /custom-ocr:\n    post:\n      tags:\n        - Optical Character Recognition(OCR)\n      summary: Recognize and extract estructured text by predefined OCR templates.\n      operationId: custom-ocr\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/imageRequest'\n            examples:\n              Create Template with image URL:\n                $ref: '#/components/examples/createUrlTemplate'\n              Create Template with image base64:\n                $ref: '#/components/examples/createBase64Template'\n              Delete Template:\n                $ref: '#/components/examples/deleteTemplate'\n              List Templates:\n                $ref: '#/components/examples/listTemplates'\n              Recognize text by template with image URL:\n                $ref: '#/components/examples/urlTemplate'\n              Recognize text by template with image base64:\n                $ref: '#/components/examples/base64Template'\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ocrResponse'\n        '403':\n          description: Missing Authentication Token\n        '500':\n          description: Internal server error\n        '502':\n          description: Internal Server Error\n        '504':\n          description: Endpoint request timed out\n  /car-license-plate:\n    post:\n      tags:\n        - Optical Character Recognition(OCR)\n      summary: Recognize text on Chinese car license plate\n      operationId: car-license-plate\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/imageRequest'\n            examples:\n              URL:\n                $ref: '#/components/examples/imageURL'\n              Base64:\n                $ref: '#/components/examples/imageBase64'\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ocrResponse'\n        '403':\n          description: Missing Authentication Token\n        '500':\n          description: Internal server error\n        '502':\n          description: Internal Server Error\n        '504':\n          description: Endpoint request timed out\n  /face-detection:\n    post:\n      tags:\n        - Facial \u0026 Body\n      summary: Detect the face in a image and return coordinate information of the face\n      operationId: face-detection\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/imageRequest'\n            examples:\n              URL:\n                $ref: '#/components/examples/imageURL'\n              Base64:\n                $ref: '#/components/examples/imageBase64'\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/faceDetectionResponse'\n        '403':\n          description: Missing Authentication Token\n        '500':\n          description: Internal server error\n        '502':\n          description: Internal Server Error\n        '504':\n          description: Endpoint request timed out\n  /face-comparison:\n    post:\n      tags:\n        - Facial \u0026 Body\n      summary: Compare two faces of same person and return a confidence score of the similarity\n      operationId: face-comparison\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/imageRequest'\n            examples:\n              URL:\n                $ref: '#/components/examples/imageURL'\n              Base64:\n                $ref: '#/components/examples/imageBase64'\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/faceComparisonResponse'\n        '403':\n          description: Missing Authentication Token\n        '500':\n          description: Internal server error\n        '502':\n          description: Internal Server Error\n        '504':\n          description: Endpoint request timed out\n  /human-attribute:\n    post:\n      tags:\n        - Facial \u0026 Body\n      summary: Recognize the attributes of the human body in the image\n      operationId: human-attribute\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/imageRequest'\n            examples:\n              URL:\n                $ref: '#/components/examples/imageURL'\n              Base64:\n                $ref: '#/components/examples/imageBase64'\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/humanAttributeResponse'\n        '403':\n          description: Missing Authentication Token\n        '500':\n          description: Internal server error\n        '502':\n          description: Internal Server Error\n        '504':\n          description: Endpoint request timed out\n  /human-segmentation:\n    post:\n      tags:\n        - Facial \u0026 Body\n      summary: Segment human bodies from background and return the alpha channel\n      operationId: human-segmentation\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/imageRequest'\n            examples:\n              URL:\n                $ref: '#/components/examples/imageURL'\n              Base64:\n                $ref: '#/components/examples/imageBase64'\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/base64Response'\n        '403':\n          description: Missing Authentication Token\n        '500':\n          description: Internal server error\n        '502':\n          description: Internal Server Error\n        '504':\n          description: Endpoint request timed out\n  /image-similarity:\n    post:\n      tags:\n        - Image Understanding\n      summary: Compare two images and return similarity score\n      operationId: image-similarity\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/imageRequest'\n            examples:\n              URL:\n                $ref: '#/components/examples/imageURL'\n              Base64:\n                $ref: '#/components/examples/imageBase64'\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/similarityResponse'\n        '403':\n          description: Missing Authentication Token\n        '500':\n          description: Internal server error\n        '502':\n          description: Internal Server Error\n        '504':\n          description: Endpoint request timed out\n  /object-recognition:\n    post:\n      tags:\n        - Image Understanding\n      summary: Segment human bodies from background and return the alpha channel\n      operationId: object-recognition\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/imageRequest'\n            examples:\n              URL:\n                $ref: '#/components/examples/imageURL'\n              Base64:\n                $ref: '#/components/examples/imageBase64'\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/objectRecognitionResponse'\n        '403':\n          description: Missing Authentication Token\n        '500':\n          description: Internal server error\n        '502':\n          description: Internal Server Error\n        '504':\n          description: Endpoint request timed out\n  /pornography-detection:\n    post:\n      tags:\n        - Image Understanding\n      summary: Detect pornographic image in three dimensions (normal, sexy, porn) and return confidence scores\n      operationId: pornography-detection\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/imageRequest'\n            examples:\n              URL:\n                $ref: '#/components/examples/imageURL'\n              Base64:\n                $ref: '#/components/examples/imageBase64'\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/pornographyDetectionResponse'\n        '403':\n          description: Missing Authentication Token\n        '500':\n          description: Internal server error\n        '502':\n          description: Internal Server Error\n        '504':\n          description: Endpoint request timed out\n  /super-resolution:\n    post:\n      tags:\n        - Computer Vision\n      summary: Upscale the resolution and enhance details in the images\n      operationId: super-resolution\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/imageRequest'\n            examples:\n              URL:\n                $ref: '#/components/examples/imageURL'\n              Base64:\n                $ref: '#/components/examples/imageBase64'\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/base64Response'\n        '403':\n          description: Missing Authentication Token\n        '500':\n          description: Internal server error\n        '502':\n          description: Internal Server Error\n        '504':\n          description: Endpoint request timed out\n  /text-similarity:\n    post:\n      tags:\n        - Natural Language\n      summary: Compare two Chinese words or sentences and return similarity score\n      operationId: text-similarity\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/textRequest'\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/similarityResponse'\n        '403':\n          description: Missing Authentication Token\n        '500':\n          description: Internal server error\n        '502':\n          description: Internal Server Error\n        '504':\n          description: Endpoint request timed out\ncomponents:\n  schemas:\n    imageRequest:\n      title: Image Request\n      type: object\n      required:\n        - url\n        - img\n      properties:\n        url:\n          type: string\n          description: Image URL\n        img:\n          type: string\n          description: Base64-encoded image data\n    textRequest:\n      title: Text Request\n      type: object\n      required:\n        - text\n      properties:\n        text:\n          type: string\n          example: Test text\n    base64Response:\n      title: Image Base64 Request\n      type: object\n      required:\n        - img\n      properties:\n        img:\n          type: string\n          description: Base64-encoded image data\n          example: \"Base64-encoded image data\"\n    boundingBox:\n      type: object\n      required:\n        - Width\n        - Height\n        - Left\n        - Top\n      properties:\n        Width:\n          type: integer\n          format: int32\n        Height:\n          type: integer\n          format: int32\n        Left:\n          type: integer\n          format: int32\n        Top:\n          type: integer\n          format: int32\n    ocrResponse:\n      type: object\n      required:\n        - words\n        - location\n        - score\n      properties:\n        words:\n          type: string\n          description: Text in the image\n          example: 'example word'\n        location:\n          type: object\n          description: Text box location, including top, left, width, height\n          required:\n            - top\n            - left\n            - width\n            - height\n          properties:\n            top:\n              type: integer\n              format: int32\n            left:\n              type: integer\n              format: int32\n            width:\n              type: integer\n              format: int32\n            height:\n              type: integer\n              format: int32\n          example: '{\n            \"top\": 36,\n            \"left\": 71,\n            \"width\": 321,\n            \"height\": 17\n          }'\n        score:\n          type: number\n          format: double\n          description: Confidence of the text\n          example: 0.9825196266174316\n    faceDetectionResponse:\n      type: object\n      required:\n        - Faces\n        - FaceModelVersion\n      properties:\n        Faces:\n          type: array\n          items:\n            type: object\n            properties:\n              BoundingBox:\n                $ref: '#/components/schemas/boundingBox'\n              Confidence:\n                type: number\n                format: double\n                example: 0.8736226558685303\n              landmark_106:\n                type: object\n                required:\n                  - x\n                  - y\n                properties:\n                  x:\n                    type: integer\n                    format: int32\n                  y:\n                    type: integer\n                    format: int32\n                example: '[{\"x\": 306, \"y\": 802}, \n                  {\"x\": 254, \"y\": 734}]'\n              gender:\n                type: string\n                example: 'female'\n              age:\n                type: integer\n                format: int32\n                example: 37\n        FaceModelVersion:\n          type: string\n          example: '1.2.0'\n    faceComparisonResponse:\n      type: object\n      required:\n        - Faces\n        - FaceModelVersion\n      properties:\n        Faces:\n          type: array\n          items:\n            type: object\n            properties:\n              BoundingBox:\n                $ref: '#/components/schemas/boundingBox'\n              Confidence:\n                type: number\n                format: double\n                example: 0.8736226558685303\n              face_hash:\n                type: array\n                items:\n                  type: number\n                  format: float\n                example: '[61.21875, -33.84375, -36.71875, 70.625, 110.125, ..., -28.421875]'\n        FaceModelVersion:\n          type: string\n          example: '1.2.0'\n    humanAttributeResponse:\n      type: object\n      required:\n        - Labels\n      properties:\n        Labels:\n          type: array\n          items:\n            type: object\n            properties:\n              BoundingBox:\n                type: object\n                required:\n                  - Width\n                  - Height\n                  - Left\n                  - Top\n                properties:\n                  Width:\n                    type: integer\n                    format: int32\n                  Height:\n                    type: integer\n                    format: int32\n                  Left:\n                    type: integer\n                    format: int32\n                  Top:\n                    type: integer\n                    format: int32\n            example: '{\n              \"upper_wear\": {\n                  \"短袖\": 0.01, \n                  \"长袖\": 99.99\n              }, \n              \"upper_wear_texture\": {\n                  \"图案\": 0, \n                  \"纯色\": 99.55, \n                  \"条纹/格子\": 0.45\n              }, \n              \"lower_wear\": {\n                  \"短裤/裙\": 0.15, \n                  \"长裤/裙\": 99.85\n              }, \n              \"glasses\": {\n                  \"有眼镜\": 57.74, \n                  \"无眼镜\": 42.26\n              }, \n              \"bag\": {\n                  \"有背包\": 0.69, \n                  \"无背包\": 99.31\n              }, \n              \"headwear\": {\n                  \"有帽\": 97.02, \n                  \"无帽\": 2.98\n              }, \n              \"orientation\": {\n                  \"左侧面\": 99.99, \n                  \"背面\": 0, \n                  \"正面\": 0, \n                  \"右侧面\": 0.01\n              }, \n              \"upper_cut\": {\n                  \"有截断\": 0, \n                  \"无截断\": 100\n              }, \n              \"lower_cut\": {\n                  \"无截断\": 0.18, \n                  \"有截断\": 99.82\n              }, \n              \"occlusion\": {\n                  \"无遮挡\": 100, \n                  \"重度遮挡\": 0, \n                  \"轻度遮挡\": 0\n              }, \n              \"face_mask\": {\n                  \"无口罩\": 100, \n                  \"戴口罩\": 0\n              }, \n              \"gender\": {\n                  \"男性\": 100, \n                  \"女性\": 0\n              }, \n              \"age\": {\n                  \"幼儿\": 0, \n                  \"青少年\": 100, \n                  \"中年\": 0, \n                  \"老年\": 0\n              }, \n              \"smoke\": {\n                  \"吸烟\": 0, \n                  \"未吸烟\": 100\n              }, \n              \"cellphone\": {\n                  \"使用手机\": 0, \n                  \"未使用手机\": 100\n              }, \n              \"carrying_item\": {\n                  \"有手提物\": 0.03, \n                  \"无手提物\": 99.97\n              }, \n              \"BoundingBox\": {\n                  \"Width\": 0.11781848725818456, \n                  \"Height\": 0.43450208474661556, \n                  \"Left\": 0.5310931977771577, \n                  \"Top\": 0.45263674786982644\n              }\n            }'\n        LabelModelVersion:\n          type: string\n          example: '1.2.0'\n    similarityResponse:\n      type: object\n      required:\n        - result\n      properties:\n        result:\n          type: array\n          items:\n            type: number\n            format: double\n          example: '[\n            -0.02555299922823906, \n            0.012955999933183193, \n            -0.10079500079154968\n          ]'\n    objectRecognitionResponse:\n      type: object\n      required:\n        - Labels\n      properties:\n        Labels:\n          type: array\n          items:\n            type: object\n            properties:\n              BoundingBox:\n                $ref: '#/components/schemas/boundingBox'\n            example: '{\n              \"Name\": \"car_(automobile)\", \n              \"Confidence\": 67.87780523300171, \n              \"Instances\": [\n                  {\n                      \"BoundingBox\": {\n                          \"Width\": 1.0013043403596384, \n                          \"Height\": 0.9958885181613408, \n                          \"Left\": -0.00021715163893532008, \n                          \"Top\": 0.00033918747441136817\n                      }, \n                      \"Confidence\": 67.87780523300171\n                  }\n              ]\n              }'\n        LabelModelVersion:\n          type: string\n          example: '1.2.0'\n    pornographyDetectionResponse:\n      type: object\n      required:\n        - normal\n        - sexy\n        - porn\n      properties:\n        normal:\n          type: number\n          format: float\n          description: Identify the image’s normal dimensions of the image\n          example: 0.15993066132068634\n        sexy:\n          type: number\n          format: float\n          description: Identify the image’s sexy dimension\n          example: 0.5451669692993164\n        porn:\n          type: number\n          format: float\n          description: Identify the pornographic dimensions of recognized images\n          example: 0.2949024438858032\n    \n  examples:\n    imageURL:\n      value: \n        url: \"https://Image URL\"\n    imageBase64:\n      value:\n        img: \"Base64-encoded image data\"\n    createBase64Template:\n      value:\n        type: \"add\"\n        img: \"Base64-encoded image data\"\n        template: [\n            [\n              [\n                [top-left-x, top-left-y], [top-right-x, top-right-y], [bottom-right-x, bottom-right-y], [bottom-left-x, bottom-left-y]\n              ],\n              \"name\",\n            ]\n          ]\n    createUrlTemplate:\n      value:\n        type: \"add\"\n        url: \"https://Image URL\"\n        template: [\n            [\n              [\n                [top-left-x, top-left-y], [top-right-x, top-right-y], [bottom-right-x, bottom-right-y], [bottom-left-x, bottom-left-y]\n              ],\n              \"name\",\n            ]\n          ]\n    deleteTemplate:\n      value:\n        type: \"del\"\n        template_id: \"template ID\"\n    listTemplates:\n      value:\n        type: \"list\"\n    urlTemplate:\n      value:\n        template_id: \"template ID\"\n        url: \"https://Image URL\"\n    base64Template:\n      value:\n        template_id: \"template ID\"\n        img: \"Base64-encoded image data\"\n"
		}
	},
	"Error": "unmarshal: callback: callback: json: cannot unmarshal bool into Go struct field Schema.required of type string"
}