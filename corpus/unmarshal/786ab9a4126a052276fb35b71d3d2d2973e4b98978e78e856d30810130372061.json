{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi/formstack/openapi.yaml",
			"byteSize": 17015,
			"content": "openapi: 3.0.0\ninfo:\n  x-ballerina-display:\n    label: Formstack\n    iconPath: \"icon.png\"\n  description: \n    This is a generated connector for [Formstack REST API v2.0](https://formstack.readme.io/docs/api-overview) OpenAPI specification.\n\n    The [Formstack REST API](https://formstack.readme.io/docs/api-overview) provides a way that helps organizations streamline digital work through no-code online forms, documents, and signatures. \n  x-ballerina-init-description: \u003e\n    The connector initialization requires setting the API credentials. \n  \n    Create an [Formstack account](https://admin.formstack.com/signup/sign-starter) and obtain tokens following [this guide](https://help.formstack.com/s/article/How-to-create-a-V2-API-Application-Key).\n  title: Formstack API\n  version: 2.0\nservers:\n  - url: https://www.formstack.com/api/v2\ntags:\n  - name: Form\n    description: \u003e-\n      Forms are how information is collected and defines how that information is stored\n  - name: Folder\n    description: \u003e-\n      Folders are how you organize your forms and are one way to assign form permissions to a group of forms\n  - name: Field\n    description: \u003e-\n      Fields are the specific input elements that collect data for each form\npaths:\n  /form.json:\n    get:\n      tags:\n        - Form\n      summary: Get all forms in your account\n      operationId: getAllForms\n      description: Get all forms in your account\n      parameters:\n        - description: Flag to return forms in lists separated by folder\n          in: query\n          name: folders\n          schema:\n            type: boolean\n        - description: Page to use when paginating through forms. Starts at 1\n          in: query\n          name: page\n          schema:\n            type: integer\n        - description: Number of forms to return per page. Minimum page limit is 10\n          in: query\n          name: per_page\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: \n              schema:\n                $ref: \"#/components/schemas/Forms\"\n  /form/{id}.json:\n    get:\n      tags:\n        - Form\n      summary: Get the details of the specified form\n      operationId: getFormById\n      description: Get the details of the specified form\n      parameters:\n        - description: Form ID\n          in: path\n          name: id\n          schema:\n            type: integer\n          required: true\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: \n              schema:\n                $ref: \"#/components/schemas/Form\"\n    put:\n      tags:\n        - Form\n      summary: Update the details of the specified form\n      operationId: updateFormById\n      description: Update the details of the specified form\n      parameters:\n        - description: Form ID\n          in: path\n          name: id\n          schema:\n            type: integer\n          required: true\n      requestBody:\n        description: Form Request\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/FormRequest\"\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: \n              schema:\n                $ref: \"#/components/schemas/SuccessOperation\"\n    delete:\n      tags:\n        - Form\n      summary: Delete the specified form\n      operationId: deleteFormById\n      description: Delete the specified form\n      parameters:\n        - description: Form ID\n          in: path\n          name: id\n          schema:\n            type: integer\n          required: true\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: \n              schema:\n                $ref: \"#/components/schemas/SuccessOperation\"\n  /form/{id}/copy.json:\n    post:\n      tags:\n        - Form\n      summary: Create a copy of the specified form\n      operationId: copyFormById\n      description: Create a copy of the specified form\n      parameters:\n        - description: Form ID\n          in: path\n          name: id\n          schema:\n            type: integer\n          required: true\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: \n              schema:\n                $ref: \"#/components/schemas/Operation\"\n  /form/{id}/basic.json:\n    get:\n      tags:\n        - Form\n      summary: Get the basic details of the specified form\n      operationId: getBasicFormById\n      description: Get the basic details of the specified form\n      parameters:\n        - description: Form ID\n          in: path\n          name: id\n          schema:\n            type: integer\n          required: true\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: \n              schema:\n                $ref: \"#/components/schemas/Form\"\n  /form/{id}/html.json:\n    get:\n      tags:\n        - Form\n      summary: Get the html of the specified form\n      operationId: getHtmlFormById\n      description: Get the html of the specified form\n      parameters:\n        - description: Form ID\n          in: path\n          name: id\n          schema:\n            type: integer\n          required: true\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HtmlForm\"\n  /folder.json:\n    get:\n      tags:\n        - Folder\n      summary: Get all folders on your account and their subfolders\n      operationId: getAllFolders\n      description: Get all folders on your account and their subfolders\n      parameters:\n        - description: Page to use when paginating through forms. Starts at 1\n          in: query\n          name: page\n          schema:\n            type: integer\n        - description: Number of forms to return per page. Minimum page limit is 10\n          in: query\n          name: per_page\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: \n              schema:\n                $ref: \"#/components/schemas/Folders\"\n  /folder/{id}.json:\n    get:\n      tags:\n        - Folder\n      summary: Get details for the specified folder or subfolder\n      operationId: getFolderById\n      description: Get details for the specified folder or subfolder\n      parameters:\n        - description: Folder ID\n          in: path\n          name: id\n          schema:\n            type: integer\n          required: true\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: \n              schema:\n                $ref: \"#/components/schemas/Folder\"\n    put:\n      tags:\n        - Folder\n      summary: Update the specified folder\n      operationId: updateFolderById\n      description: Update the specified folder\n      parameters:\n        - description: Folder ID\n          in: path\n          name: id\n          schema:\n            type: integer\n          required: true\n      requestBody:\n        description: Folder Request\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/FolderRequest\"\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: \n              schema:\n                $ref: \"#/components/schemas/SuccessOperation\"\n    delete:\n      tags:\n        - Folder\n      summary: Delete the specified folder\n      operationId: deleteFolderById\n      description: Delete the specified folder\n      parameters:\n        - description: Folder ID\n          in: path\n          name: id\n          schema:\n            type: integer\n          required: true\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: \n              schema:\n                $ref: \"#/components/schemas/SuccessOperation\"\n  /form/{id}/field.json:\n    get:\n      tags:\n        - Field\n      summary: Get all fields for the specified form\n      operationId: getAllFields\n      description: Get all fields for the specified form\n      parameters:\n        - description: Form ID\n          in: path\n          name: id\n          schema:\n            type: integer\n          required: true\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: \n              schema:\n                $ref: \"#/components/schemas/Fields\"\n  /field/{id}.json:\n    get:\n      tags:\n        - Field\n      summary: Get the details of the specified field\n      operationId: getFieldById\n      description: Get the details of the specified field\n      parameters:\n        - description: Field ID\n          in: path\n          name: id\n          schema:\n            type: integer\n          required: true\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: \n              schema:\n                $ref: \"#/components/schemas/Field\"\n    put:\n      tags:\n        - Field\n      summary: Update the specified field\n      operationId: updateFieldById\n      description: Update the specified field\n      parameters:\n        - description: Field ID\n          in: path\n          name: id\n          schema:\n            type: integer\n          required: true\n      requestBody:\n        description: Field Request\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/FieldRequest\"\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: \n              schema:\n                $ref: \"#/components/schemas/SuccessOperation\"\n    delete:\n      tags:\n        - Field\n      summary: Delete the specified field\n      operationId: deleteFieldById\n      description: Delete the specified field\n      parameters:\n        - description: Field ID\n          in: path\n          name: id\n          schema:\n            type: integer\n          required: true\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: \n              schema:\n                $ref: \"#/components/schemas/SuccessOperation\"\ncomponents:\n  securitySchemes:\n    oAuth2AuthCode:\n      type: oauth2\n      description: Use your own account to authenticate with the API. https://help.formstack.com/s/article/How-to-create-a-V2-API-Application-Key\n      flows: \n        authorizationCode:\n          authorizationUrl: /oauth/authorize  \n          tokenUrl: /oauth/token              \n          scopes: {}\n  schemas:\n    FormRequest:\n      properties:\n        name:      \n          description: The form name\n          type: string\n        db:\n          description: Flag to disable or enable submissions to be saved in our database. Value 1 if true and 0 if false\n          type: boolean\n        template:\n          description: Template ID for the template you want to use\n          type: string\n        num_columns:\n          description: Number (1-4) of columns the form layout will have\n          type: integer\n          format: int64\n        label_position:\n          description: Sets the default field label position. Possible values are top and left\n          type: string\n        submit_button_title:\n          description: Sets the submit button title\n          type: string\n        password:\n          description: Sets a password for the form\n          type: string\n        use_ssl:\n          description: Flag to disable or enable SSL (only available on accounts that have security features)\n          type: boolean\n        timezone:\n          description: Sets the timezone for the form\n          type: string\n        language:\n          description: Sets the language for the form - use ISO 639-1 language codes\n          type: string\n        active:\n          description: Flag to make the form active/inactive\n          type: boolean\n        disabled_message:\n          description: The message to show when the form is inactive\n          type: string  \n    FolderRequest:\n      properties:\n        name:      \n          description: Folder name\n          type: string\n    FieldRequest:\n      properties:\n        field_type:      \n          description: Field type\n          type: string\n        label:\n          description: Field label\n          type: string\n        hide_label:\n          description: Flag to show or hide the label\n          type: boolean\n        description:\n          description: Field description (shown below field)\n          type: string\n        description_callout:\n          description: Flag to show the description in a callout box\n          type: boolean\n        default_value:\n          description: Initial value for the field\n          type: string\n        options:\n          description: Array of option labels\n          type: array\n          items:\n            $ref: \"#/components/schemas/Option\"\n    SuccessOperation:\n      properties:\n        success:    \n          description: Operation status\n          type: string\n        id:\n          description: Form ID\n          type: string\n    Operation:\n      properties:\n        id:\n          description: Form ID\n          type: string\n    Folders:\n      properties:\n        folders:\n          description: Folders details     \n          type: array\n          items:\n            $ref: \"#/components/schemas/Folder\"\n        total:\n          description: Total forms\n          type: integer\n          format: int64\n    Folder:\n      properties:\n        id:      \n          description: Form ID\n          type: string\n        name:\n          type: string\n        parent:      \n          type: string\n        permissions:\n          type: string\n        subfolders:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Folder\"\n    Forms:\n      properties:\n        forms:\n          description: Forms details     \n          type: array\n          items:\n            $ref: \"#/components/schemas/Form\"\n        total:\n          description: Total forms\n          type: integer\n          format: int64\n    Form:\n      properties:\n        id:      \n          description: Form ID\n          type: string\n        created:\n          type: string\n        db:      \n          type: string\n        deleted:\n          type: string\n        folder:      \n          type: string\n        language:\n          type: string\n        num_columns:      \n          type: string\n        progress_meter:\n          type: string\n        timezone:\n          type: string\n        rss_url:\n          type: string\n        viewkey:      \n          type: string\n        thumbnail_url:\n          type: string\n          nullable: true\n        can_access_1q_feature:\n          type: boolean\n        is_workflow_form:\n          type: boolean\n        inactive:\n          type: boolean\n        submit_button_title:\n          type: string  \n        permissions:\n          type: integer  \n          format: int64\n        submissions_unread:\n          type: string  \n        should_display_one_question_at_a_time:\n          type: boolean  \n        views:\n          type: string  \n        has_approvers:\n          type: boolean  \n        can_edit:\n          type: boolean\n        url:\n          type: string\n        is_workflow_published:\n          type: boolean\n        submissions_today:\n          type: integer  \n          format: int64\n        encrypted:\n          type: boolean\n        submissions:\n          type: string\n        name:\n          type: string\n        edit_url:\n          type: string\n        updated:\n          type: string\n        data_url:\n          type: string\n        summary_url:\n          type: string\n        last_submission_id:\n          type: string\n        last_submission_time:\n          type: string\n    HtmlForm:\n      properties:\n        id:\n          description: Form ID    \n          type: string\n        html:\n          description: HTML form representation\n          type: string\n    Fields:    \n      type: array\n      items:\n        $ref: \"#/components/schemas/Field\"\n    Field:    \n      properties:\n        id:\n          type: string\n        label:\n          type: string\n        hide_label:\n          type: string          \n        description:\n          type: string  \n        name:\n          type: string  \n        type:\n          type: string\n        required:\n          type: string\n        options:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Option\"\n    Option:    \n      properties:\n        label:\n          type: string\n        value:\n          type: string\n        imageUrl:\n          type: string  \n          nullable: true\n",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@c3641dddbc4e41686ae3d1b9bacf1621b639a019/-/blob/openapi/formstack/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/c3641dddbc4e41686ae3d1b9bacf1621b639a019/openapi/formstack/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: json: line 1:5304: json: cannot unmarshal number into Go struct field Info.info.version of type string"
}