{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ml-tooling/opyrator"
		},
		"file": {
			"name": "question-answering-openapi-spec.json",
			"size": 0,
			"path": "docs/openapi-demo-specs/question-answering-openapi-spec.json",
			"byteSize": 3933,
			"content": "{\n  \"openapi\": \"3.0.2\",\n  \"info\": {\n    \"title\": \"Question Answering - Opyrator\",\n    \"description\": \"Question answering based on a text used as context.\",\n    \"version\": \"0.1.0\"\n  },\n  \"paths\": {\n    \"/call\": {\n      \"post\": {\n        \"summary\": \"Execute the opyrator.\",\n        \"description\": \"Executes this opyrator.\",\n        \"operationId\": \"call\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/QuestionAnsweringInput\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ClassificationOutput\"\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Validation Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/HTTPValidationError\" }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/info\": {\n      \"get\": {\n        \"summary\": \"Get info metadata.\",\n        \"description\": \"Returns informational metadata about this Opyrator.\",\n        \"operationId\": \"info\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"title\": \"Response Info Info Get\",\n                  \"type\": \"object\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"ClassificationOutput\": {\n        \"title\": \"ClassificationOutput\",\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/ScoredLabel\" }\n      },\n      \"HTTPValidationError\": {\n        \"title\": \"HTTPValidationError\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"detail\": {\n            \"title\": \"Detail\",\n            \"type\": \"array\",\n            \"items\": { \"$ref\": \"#/components/schemas/ValidationError\" }\n          }\n        }\n      },\n      \"QuestionAnsweringInput\": {\n        \"title\": \"QuestionAnsweringInput\",\n        \"required\": [\"context\", \"question\"],\n        \"type\": \"object\",\n        \"properties\": {\n          \"context\": {\n            \"title\": \"Context\",\n            \"maxLength\": 1000,\n            \"type\": \"string\",\n            \"description\": \"A string that contains the answer to the question.\",\n            \"example\": \"My name is Sarah and I live in London\"\n          },\n          \"question\": {\n            \"title\": \"Question\",\n            \"maxLength\": 140,\n            \"type\": \"string\",\n            \"description\": \"The question as a string that has an answer within context.\",\n            \"example\": \"Where do I live?\"\n          },\n          \"number_of_answers\": {\n            \"title\": \"Number Of Answers\",\n            \"minimum\": 1.0,\n            \"type\": \"integer\",\n            \"description\": \"The number of answers to return\",\n            \"default\": 2\n          }\n        }\n      },\n      \"ScoredLabel\": {\n        \"title\": \"ScoredLabel\",\n        \"required\": [\"label\", \"score\"],\n        \"type\": \"object\",\n        \"properties\": {\n          \"label\": { \"title\": \"Label\", \"type\": \"string\" },\n          \"score\": { \"title\": \"Score\", \"type\": \"number\" }\n        }\n      },\n      \"ValidationError\": {\n        \"title\": \"ValidationError\",\n        \"required\": [\"loc\", \"msg\", \"type\"],\n        \"type\": \"object\",\n        \"properties\": {\n          \"loc\": {\n            \"title\": \"Location\",\n            \"type\": \"array\",\n            \"items\": { \"type\": \"string\" }\n          },\n          \"msg\": { \"title\": \"Message\", \"type\": \"string\" },\n          \"type\": { \"title\": \"Error Type\", \"type\": \"string\" }\n        }\n      }\n    }\n  }\n}\n"
		}
	},
	"Error": "unmarshal: callback: json: cannot unmarshal number 1.0 into Go struct field Schema.minimum of type int64"
}