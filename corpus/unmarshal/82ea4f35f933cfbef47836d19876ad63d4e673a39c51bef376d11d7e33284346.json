{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/52North/sensorweb-server-helgoland"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "web-resources/src/main/docs/_data/swagger.yaml",
			"byteSize": 64485,
			"content": "openapi: 3.0.3\ninfo:\n  title: 52Â°North Sensor Web Server Helgoland API\n  description: Thin Web binding API to access dataset data\n  version: 3.0.0\nservers:\n  - url: https://cloud.sensorweb.demo.52north.org/sos/api/\nconsumes:\n  - application/json\nproduces:\n  - application/json\npaths:\n  /:\n    get:\n      summary: Available endpoints.\n      tags:\n        - General\n      description: \u003e\n        A (static) collection of endpoints available from this API. Each includes a relative path and a short description.\n      parameters:\n        - $ref: '#/parameters/expandedParam'\n      responses:\n        '200':\n          description: A collection of API endpoints\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Base'\n  /search:\n    get:\n      summary: A simple search.\n      tags:\n        - General\n      description: |\n        A simple search over all resource's labels over all available endpoints. Note that the searching respects the current locale being selected.\n      parameters:\n        - name: q\n          in: query\n          description: Term which shall match (case insensitive) a resource's label\n          required: true\n          schema:\n            type: string\n        - $ref: '#/parameters/localeParam'\n      responses:\n        '200':\n          description: A collection of search results\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Search'\n          \n  /categories:\n    get:\n      summary: Gets available categories\n      tags:\n        - Category\n      description: \u003e\n        All available category instances. Depending on the `expanded` parameter the collections items are compact or do inline full metadata.\n        \n        Filter options help to focus on a particular set of items. Filter either by parameters or spatially.\n      parameters:\n        - $ref: '#/parameters/localeParam'\n        - $ref: '#/parameters/expandedParam'\n        - $ref: '#/parameters/servicesParam'\n        - $ref: '#/parameters/phenomenaParam'\n        - $ref: '#/parameters/proceduresParam'\n        - $ref: '#/parameters/offeringsParam'\n        - $ref: '#/parameters/platformsParam'\n        - $ref: '#/parameters/featuresParam'\n        - $ref: '#/parameters/datasetTypesParam'\n        - $ref: '#/parameters/observationTypesParam'\n        - $ref: '#/parameters/valueTypesParam'\n        - $ref: '#/parameters/mobileParam'\n        - $ref: '#/parameters/insituParam'\n        - $ref: '#/parameters/matchDomainIdsParam'\n      responses:\n        '200':\n          description: A collection of categories\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DefaultEntity'\n              example:\n                id: \"2\"\n                href: \"https://cloud.sensorweb.demo.52north.org/sos/api/categories/2\"\n                domainId: SOS\n                label: SOS\n        '404':\n          description: Item not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/definitions/Errors/Error_404'\n        '415':\n          description: Media Item not supported\n          content:\n            application/json:\n              schema:\n                $ref: '#/definitions/Errors/Error_415'\n\n  /categories/{categoryId}:\n    get:\n      summary: Gets a catefory instance\n      tags:\n        - Category\n      description: |\n        Gets a category instance.\n      parameters:\n        - name: categoryId\n          in: path\n          required: true\n          schema:\n            type: string\n          example: 2\n        - $ref: '#/parameters/localeParam'\n      responses:\n        '200':\n          description: An expanded item\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DefaultEntityExpanded'\n              example:\n                id: \"2\"\n                href: \"https://cloud.sensorweb.demo.52north.org/sos/api/categories/2\"\n                domainid: SOS\n                label: SOS\n                extras: \n                  - license\n                service:\n                  id: \"1\"\n                  href: https://cloud.sensorweb.demo.52north.org/sos/api/services/1\n                  domainId: \"1\"\n                  label: My RESTful Dataset Service\n        '404':\n          description: Item not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/definitions/Errors/Error_404'\n        '415':\n          description: Media Item not supported\n          content:\n            application/json:\n              schema:\n                $ref: '#/definitions/Errors/Error_415'\n  /datasets:\n    get:\n      summary: Gets available datasets\n      tags:\n        - Datasets\n          - Dataset\n      description: |\n        A collection of available datasets. Depending on the `expanded` parameter the collections items are compact or do inline full metadata.\n        \n        \n        Filter options help to focus on a particular set of items. Filter either by parameters or spatially.\n      parameters:\n        - $ref: '#/parameters/localeParam'\n        - $ref: '#/parameters/expandedParam'\n        - $ref: '#/parameters/servicesParam'\n        - $ref: '#/parameters/phenomenaParam'\n        - $ref: '#/parameters/proceduresParam'\n        - $ref: '#/parameters/offeringsParam'\n        - $ref: '#/parameters/platformsParam'\n        - $ref: '#/parameters/featuresParam'\n        - $ref: '#/parameters/categoriesParam'\n        - $ref: '#/parameters/datasetTypesParam'\n        - $ref: '#/parameters/observationTypesParam'\n        - $ref: '#/parameters/valueTypesParam'\n        - $ref: '#/parameters/mobileParam'\n        - $ref: '#/parameters/insituParam'\n        - $ref: '#/parameters/matchDomainIdsParam'\n        - $ref: '#/parameters/crsParam'\n        - $ref: '#/parameters/bboxParam'\n        - $ref: '#/parameters/nearParam'\n      responses:\n        '200':\n          description: A collection of datasets\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Dataset'\n              example:\n                id: \"79\"\n        '404':\n          description: Item not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/definitions/Errors/Error_404'\n        '415':\n          description: Media Item not supported\n          content:\n            application/json:\n              schema:\n                $ref: '#/definitions/Errors/Error_415'\n            \n  '/datasets/{datasetId}':\n    get:\n      summary: Gets a particular dataset\n      tags:\n        - Datasets\n          - Dataset\n      description: |\n        Full view of a dataset instance. All relevant relations (parameters, unit, platform, etc.) are inlined. If any additional information is listed in the `extras` array member it can be retrieved via `/datasets/{datasetId}/extras` (see next).\n      parameters:\n        - name: datasetId\n          in: path\n          required: true\n          type: string\n        - $ref: '#/parameters/localeParam'\n      responses:\n        '200':\n          description: A collection of datasets\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DatasetExpanded'\n              example:\n                id: \"79\"\n        '404':\n          description: Item not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/definitions/Errors/Error_404'\n        '415':\n          description: Media Item not supported\n          content:\n            application/json:\n              schema:\n                $ref: '#/definitions/Errors/Error_415'\n  /datasets/{datasetId}/observations:\n    get:\n      summary: Gets the observation values for the dataset\n      tags:\n        - Datasets\n          - Dataset\n      description: \u003e\n        Gets data for a given `timespan` filter. Implementations may limit the maximum amount of time intervals a client can query in one request. \n\n\n        What Mime-Types are supported depends on the `valueType`. For example `quantity` observations can be drawn as a timeseries chart \n        (i.e. either `image/png` or `application/pdf`). Supported Mime-Types are listed for each `valueType` when querying \n        `/service/{serviceId}` produces:\n        \n          - `application/json`\n          - `image/png`\n          - `text/csv`\n          - `application/pdf`\n          - `application/zip`\n\n        \n        Data can be classified into result times if these differ from actual `timestamp`. For example, this is the case\n        for forecast data which might re-calculate (different result times) a given timespan. The `data` can be grouped \n        by using `resultTimes` parameter. When `resultTimes` parameter is missing, data of the oldest result is being \n        returned.\n\n      parameters:\n        - name: datasetId\n          in: path\n          required: true\n          type: string\n        - $ref: '#/parameters/expandedParam'\n        - $ref: '#/parameters/timespanParam'\n        - $ref: '#/parameters/formatParam'\n        - $ref: '#/parameters/resultTimesParam'\n        - $ref: '#/parameters/showTimeIntervalsParam'\n        - $ref: '#/parameters/generalizeParam'\n      responses:\n        '200':\n          description: Data for a given `timespan` in a requested output format\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: '#/components/schemas/Values'\n                  - $ref: '#/components/schemas/ValuesExpanded'\n                  - $ref: '#/components/schemas/ValuesFlot'\n                  - $ref: '#/components/schemas/ValuesFlotExpanded'\n        '400':\n          description: A query parameter does not match expected format\n          content:\n            application/json:\n              schema:\n                $ref: '#/definitions/Errors/Error_400'\n        '404':\n          description: Item not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/definitions/Errors/Error_404'\n        '415':\n          description: Media Item not supported\n          content:\n            application/json:\n              schema:\n                $ref: '#/definitions/Errors/Error_415'\n  /timeseries:\n    get:\n      summary: Gets available datasets\n      tags:\n        - Datasets\n          - Timeseries\n      description: |\n        A collection of available datasets whose dataset type is `timeseries`. Depending on the `expanded` parameter the collections items are compact or do inline full metadata.\n        \n        \n        Filter options help to focus on a particular set of items. Filter either by parameters or spatially.\n      parameters:\n        - $ref: '#/parameters/localeParam'\n        - $ref: '#/parameters/expandedParam'\n        - $ref: '#/parameters/servicesParam'\n        - $ref: '#/parameters/phenomenaParam'\n        - $ref: '#/parameters/proceduresParam'\n        - $ref: '#/parameters/offeringsParam'\n        - $ref: '#/parameters/platformsParam'\n        - $ref: '#/parameters/featuresParam'\n        - $ref: '#/parameters/categoriesParam'\n        - $ref: '#/parameters/datasetTypesParam'\n        - $ref: '#/parameters/observationTypesParam'\n        - $ref: '#/parameters/valueTypesParam'\n        - $ref: '#/parameters/mobileParam'\n        - $ref: '#/parameters/insituParam'\n        - $ref: '#/parameters/matchDomainIdsParam'\n        - $ref: '#/parameters/crsParam'\n        - $ref: '#/parameters/bboxParam'\n        - $ref: '#/parameters/nearParam'\n      responses:\n        '200':\n          description: A collection of datasets\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Dataset'\n              example:\n                id: \"79\"\n        '404':\n          description: Item not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/definitions/Errors/Error_404'\n        '415':\n          description: Media Item not supported\n          content:\n            application/json:\n              schema:\n                $ref: '#/definitions/Errors/Error_415'\n  /trajectories:\n    get:\n      summary: Gets available datasets\n      tags:\n        - Datasets\n          - Trajectories\n      description: |\n        A collection of available datasets whose dataset type is `trajectory`. Depending on the `expanded` parameter the collections items are compact or do inline full metadata.\n        \n        \n        Filter options help to focus on a particular set of items. Filter either by parameters or spatially.\n      parameters:\n        - $ref: '#/parameters/localeParam'\n        - $ref: '#/parameters/expandedParam'\n        - $ref: '#/parameters/servicesParam'\n        - $ref: '#/parameters/phenomenaParam'\n        - $ref: '#/parameters/proceduresParam'\n        - $ref: '#/parameters/offeringsParam'\n        - $ref: '#/parameters/platformsParam'\n        - $ref: '#/parameters/featuresParam'\n        - $ref: '#/parameters/categoriesParam'\n        - $ref: '#/parameters/datasetTypesParam'\n        - $ref: '#/parameters/observationTypesParam'\n        - $ref: '#/parameters/valueTypesParam'\n        - $ref: '#/parameters/mobileParam'\n        - $ref: '#/parameters/insituParam'\n        - $ref: '#/parameters/matchDomainIdsParam'\n        - $ref: '#/parameters/crsParam'\n        - $ref: '#/parameters/bboxParam'\n        - $ref: '#/parameters/nearParam'\n      responses:\n        '200':\n          description: A collection of datasets\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Dataset'\n              example:\n                id: \"79\"\n        '404':\n          description: Item not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/definitions/Errors/Error_404'\n        '415':\n          description: Media Item not supported\n          content:\n            application/json:\n              schema:\n                $ref: '#/definitions/Errors/Error_415'\n  /individualObservations:\n    get:\n      summary: Gets available datasets\n      tags:\n        - Datasets\n          - IndividualObservations\n      description: |\n        A collection of available datasets whose dataset type is `individualObservation`. Depending on the `expanded` parameter the collections items are compact or do inline full metadata.\n        \n        \n        Filter options help to focus on a particular set of items. Filter either by parameters or spatially.\n      parameters:\n        - $ref: '#/parameters/localeParam'\n        - $ref: '#/parameters/expandedParam'\n        - $ref: '#/parameters/servicesParam'\n        - $ref: '#/parameters/phenomenaParam'\n        - $ref: '#/parameters/proceduresParam'\n        - $ref: '#/parameters/offeringsParam'\n        - $ref: '#/parameters/platformsParam'\n        - $ref: '#/parameters/featuresParam'\n        - $ref: '#/parameters/categoriesParam'\n        - $ref: '#/parameters/datasetTypesParam'\n        - $ref: '#/parameters/observationTypesParam'\n        - $ref: '#/parameters/valueTypesParam'\n        - $ref: '#/parameters/mobileParam'\n        - $ref: '#/parameters/insituParam'\n        - $ref: '#/parameters/matchDomainIdsParam'\n        - $ref: '#/parameters/crsParam'\n        - $ref: '#/parameters/bboxParam'\n        - $ref: '#/parameters/nearParam'\n      responses:\n        '200':\n          description: A collection of datasets\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Dataset'\n              example:\n                id: \"79\"\n        '404':\n          description: Item not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/definitions/Errors/Error_404'\n        '415':\n          description: Media Item not supported\n          content:\n            application/json:\n              schema:\n                $ref: '#/definitions/Errors/Error_415'\n\n\n  /features:\n    get:\n      summary: Get available feature instances\n      tags:\n        - Feature\n      description: \u003e\n        All available instances.\n      parameters:\n        - $ref: '#/parameters/localeParam'\n        - $ref: '#/parameters/expandedParam'\n        - $ref: '#/parameters/servicesParam'\n        - $ref: '#/parameters/phenomenaParam'\n        - $ref: '#/parameters/proceduresParam'\n        - $ref: '#/parameters/offeringsParam'\n        - $ref: '#/parameters/platformsParam'\n        - $ref: '#/parameters/categoriesParam'\n        - $ref: '#/parameters/datasetTypesParam'\n        - $ref: '#/parameters/observationTypesParam'\n        - $ref: '#/parameters/valueTypesParam'\n        - $ref: '#/parameters/mobileParam'\n        - $ref: '#/parameters/insituParam'\n        - $ref: '#/parameters/matchDomainIdsParam'\n        - $ref: '#/parameters/crsParam'\n        - $ref: '#/parameters/bboxParam'\n        - $ref: '#/parameters/nearParam'\n      responses:\n        '200':\n          description: A collection of features\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Feature'\n              example:\n                id: \"3\"\n                properties:\n                  label: ELV WS2500\n                  href: \"https://cloud.sensorweb.demo.52north.org/sos/api/features/3\"\n                  domainId: elv-ws2500\n                type: Feature\n                geometry:\n                  type: Point\n                  coordinates:\n                    - 7.652428150177\n                    - 51.934814453125\n        '404':\n          description: Item not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/definitions/Errors/Error_404'\n        '415':\n          description: Media Item not supported\n          content:\n            application/json:\n              schema:\n                $ref: '#/definitions/Errors/Error_415'\n  '/features/{featureId}':\n    get:\n      summary: Gets an feature instance\n      tags:\n        - Feature\n      description: |\n        Gets a feature instance.\n      parameters:\n        - name: featureId\n          in: path\n          required: true\n          type: string\n        - $ref: '#/parameters/localeParam'\n      responses:\n        '200':\n          description: An expanded item\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FeatureExpanded'\n              example:\n                id: \"3\"\n                properties:\n                  label: ELV WS2500\n                  href: \"https://cloud.sensorweb.demo.52north.org/sos/api/features/3\"\n                  domainId: elv-ws2500\n                  datasets:\n                    phenomenon:\n                      id: 42,\n                      href: https://cloud.sensorweb.demo.52north.org/sos/api/phenomena/42,\n                      domainId: AthmosphericPressure\n                      label: AthmosphericPressure\n                    procedure:\n                      id: \"8\"\n                      href: https://cloud.sensorweb.demo.52north.org/sos/api/procedures/8\n                      domainId: ws2500\n                      label: 52n-elv-ws2500\n                    category:\n                      id: \"2\"\n                      href: https://cloud.sensorweb.demo.52north.org/sos/api/categories/2\n                      domainId: SOS\n                      label: SOS\n                    offering:\n                      id: \"8\"\n                      href: https://cloud.sensorweb.demo.52north.org/sos/api/offerings/8\n                      domainId: ws2500\n                      label: 52North Weatherstation ELV WS2500\n                    service:\n                      id: \"1\"\n                      href: https://cloud.sensorweb.demo.52north.org/sos/api/services/1\n                      domainId: 1\n                      label: My RESTful Dataset Service\n                    platform:\n                      id: \"5\"\n                      href: https://cloud.sensorweb.demo.52north.org/sos/api/platforms/5\n                      domainId: elv-ws2500\n                      label: ELV WS2500\n                type: Feature\n                geometry:\n                  type: Point\n                  coordinates:\n                    - 7.652428150177\n                    - 51.934814453125\n        '404':\n          description: Item not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/definitions/Errors/Error_404'\n        '415':\n          description: Media Item not supported\n          content:\n            application/json:\n              schema:\n                $ref: '#/definitions/Errors/Error_415'\n  /offerings:\n    get:\n      summary: Gets available offerings\n      tags:\n        - Offering\n      description: \u003e\n        All available offering instances. Depending on the `expanded` parameter the collections items are compact or do inline full metadata.\n        \n        Filter options help to focus on a particular set of items. Filter either by parameters or spatially.\n      parameters:\n        - $ref: '#/parameters/localeParam'\n        - $ref: '#/parameters/expandedParam'\n        - $ref: '#/parameters/servicesParam'\n        - $ref: '#/parameters/phenomenaParam'\n        - $ref: '#/parameters/proceduresParam'\n        - $ref: '#/parameters/categoriesParam'\n        - $ref: '#/parameters/platformsParam'\n        - $ref: '#/parameters/featuresParam'\n        - $ref: '#/parameters/datasetTypesParam'\n        - $ref: '#/parameters/observationTypesParam'\n        - $ref: '#/parameters/valueTypesParam'\n        - $ref: '#/parameters/mobileParam'\n        - $ref: '#/parameters/insituParam'\n        - $ref: '#/parameters/matchDomainIdsParam'\n      responses:\n        '200':\n          description: A collection of offerings\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DefaultEntity'\n              example:\n                id: \"6\"\n                href: \"https://cloud.sensorweb.demo.52north.org/sos/api/offerings/6\"\n                domainId: wxt520\n                label: 52North Weatherstation Vaisala WXT 520\n        '404':\n          description: Item not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/definitions/Errors/Error_404'\n        '415':\n          description: Media Item not supported\n          content:\n            application/json:\n              schema:\n                $ref: '#/definitions/Errors/Error_415'\n\n  /offerings/{offeringId}:\n    get:\n      summary: Gets a offering instance\n      tags:\n        - Offering\n      description: |\n        Gets a offering instance.\n      parameters:\n        - name: offeringId\n          in: path\n          required: true\n          schema:\n            type: string\n          example: 2\n        - $ref: '#/parameters/localeParam'\n      responses:\n        '200':\n          description: An expanded item\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DefaultEntityExpanded'\n              example:\n                id: \"6\"\n                href: \"https://cloud.sensorweb.demo.52north.org/sos/api/offerings/6\"\n                domainId: wxt520\n                label: 52North Weatherstation Vaisala WXT 520\n                extras: \n                  - license\n                service:\n                  id: \"1\"\n                  href: https://cloud.sensorweb.demo.52north.org/sos/api/services/1\n                  domainId: \"1\"\n                  label: My RESTful Dataset Service\n        '404':\n          description: Item not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/definitions/Errors/Error_404'\n        '415':\n          description: Media Item not supported\n          content:\n            application/json:\n              schema:\n                $ref: '#/definitions/Errors/Error_415'\n\n  /phenomena:\n    get:\n      summary: Gets available offerings\n      tags:\n        - Phenomena\n      description: \u003e\n        All available offering instances. Depending on the `expanded` parameter the collections items are compact or do inline full metadata.\n        \n        Filter options help to focus on a particular set of items. Filter either by parameters or spatially.\n      parameters:\n        - $ref: '#/parameters/localeParam'\n        - $ref: '#/parameters/expandedParam'\n        - $ref: '#/parameters/servicesParam'\n        - $ref: '#/parameters/phenomenaParam'\n        - $ref: '#/parameters/proceduresParam'\n        - $ref: '#/parameters/categoriesParam'\n        - $ref: '#/parameters/platformsParam'\n        - $ref: '#/parameters/featuresParam'\n        - $ref: '#/parameters/datasetTypesParam'\n        - $ref: '#/parameters/observationTypesParam'\n        - $ref: '#/parameters/valueTypesParam'\n        - $ref: '#/parameters/mobileParam'\n        - $ref: '#/parameters/insituParam'\n        - $ref: '#/parameters/matchDomainIdsParam'\n      responses:\n        '200':\n          description: A collection of offerings\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DefaultEntity'\n              example:\n                id: \"39\"\n                href: \"https://cloud.sensorweb.demo.52north.org/sos/api/phenomena/39\"\n                domainId: AirTemperature\n                label: AirTemperature\n        '404':\n          description: Item not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/definitions/Errors/Error_404'\n        '415':\n          description: Media Item not supported\n          content:\n            application/json:\n              schema:\n                $ref: '#/definitions/Errors/Error_415'\n\n  /phenomena/{phenomenaId}:\n    get:\n      summary: Gets a offering instance\n      tags:\n        - Phenomena\n      description: |\n        Gets a phenomena instance.\n      parameters:\n        - name: platformId\n          in: path\n          required: true\n          schema:\n            type: string\n          example: 2\n        - $ref: '#/parameters/localeParam'\n      responses:\n        '200':\n          description: An expanded item\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DefaultEntityExpanded'\n              example:\n                id: \"39\"\n                href: \"https://cloud.sensorweb.demo.52north.org/sos/api/phenomena/39\"\n                domainId: AirTemperature\n                label: AirTemperature\n                extras: \n                  - license\n                service:\n                  id: \"1\"\n                  href: https://cloud.sensorweb.demo.52north.org/sos/api/services/1\n                  domainId: \"1\"\n                  label: My RESTful Dataset Service\n        '404':\n          description: Item not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/definitions/Errors/Error_404'\n        '415':\n          description: Media Item not supported\n          content:\n            application/json:\n              schema:\n                $ref: '#/definitions/Errors/Error_415'\n  /platforms:\n    get:\n      summary: Gets available platforms\n      tags:\n        - Platform\n      description: \u003e\n        All available platform instances. Depending on the `expanded` parameter the collections items are compact or do inline full metadata.\n        \n        Filter options help to focus on a particular set of items. Filter either by parameters or spatially.\n      parameters:\n        - $ref: '#/parameters/localeParam'\n        - $ref: '#/parameters/expandedParam'\n        - $ref: '#/parameters/servicesParam'\n        - $ref: '#/parameters/phenomenaParam'\n        - $ref: '#/parameters/proceduresParam'\n        - $ref: '#/parameters/categoriesParam'\n        - $ref: '#/parameters/offeringsParam'\n        - $ref: '#/parameters/featuresParam'\n        - $ref: '#/parameters/datasetTypesParam'\n        - $ref: '#/parameters/observationTypesParam'\n        - $ref: '#/parameters/valueTypesParam'\n        - $ref: '#/parameters/mobileParam'\n        - $ref: '#/parameters/insituParam'\n        - $ref: '#/parameters/matchDomainIdsParam'\n      responses:\n        '200':\n          description: A collection of platforms\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DefaultEntity'\n              example:\n                id: \"5\"\n                href: \"https://cloud.sensorweb.demo.52north.org/sos/api/platforms/5\"\n                domainId: elv-ws2500\n                label: ELV WS2500\n        '404':\n          description: Item not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/definitions/Errors/Error_404'\n        '415':\n          description: Media Item not supported\n          content:\n            application/json:\n              schema:\n                $ref: '#/definitions/Errors/Error_415'\n\n  /platforms/{platformId}:\n    get:\n      summary: Gets a platform instance\n      tags:\n        - Platform\n      description: |\n        Gets a platform instance.\n      parameters:\n        - name: platformId\n          in: path\n          required: true\n          schema:\n            type: string\n          example: 2\n        - $ref: '#/parameters/localeParam'\n      responses:\n        '200':\n          description: An expanded item\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DefaultEntityExpanded'\n              example:\n                id: \"5\"\n                href: \"https://cloud.sensorweb.demo.52north.org/sos/api/platforms/5\"\n                domainId: elv-ws2500\n                label: ELV WS2500\n                extras: \n                  - license\n                  - parents\n                service:\n                  id: \"1\"\n                  href: https://cloud.sensorweb.demo.52north.org/sos/api/services/1\n                  domainId: \"1\"\n                  label: My RESTful Dataset Service\n        '404':\n          description: Item not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/definitions/Errors/Error_404'\n        '415':\n          description: Media Item not supported\n          content:\n            application/json:\n              schema:\n                $ref: '#/definitions/Errors/Error_415'\n  /procedures:\n    get:\n      summary: Gets available procedures\n      tags:\n        - Procedure\n      description: \u003e\n        All available procedure instances. Depending on the `expanded` parameter the collections items are compact or do inline full metadata.\n        \n        Filter options help to focus on a particular set of items. Filter either by parameters or spatially.\n      parameters:\n        - $ref: '#/parameters/localeParam'\n        - $ref: '#/parameters/expandedParam'\n        - $ref: '#/parameters/servicesParam'\n        - $ref: '#/parameters/phenomenaParam'\n        - $ref: '#/parameters/offeringsParam'\n        - $ref: '#/parameters/categoriesParam'\n        - $ref: '#/parameters/platformsParam'\n        - $ref: '#/parameters/featuresParam'\n        - $ref: '#/parameters/datasetTypesParam'\n        - $ref: '#/parameters/observationTypesParam'\n        - $ref: '#/parameters/valueTypesParam'\n        - $ref: '#/parameters/mobileParam'\n        - $ref: '#/parameters/insituParam'\n        - $ref: '#/parameters/matchDomainIdsParam'\n      responses:\n        '200':\n          description: A collection of procedures\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DefaultEntity'\n              example:\n                id: \"8\"\n                href: \"https://cloud.sensorweb.demo.52north.org/sos/api/procedures/8\"\n                domainId: wxt520\n                label: 52n-elv-ws2500\n        '404':\n          description: Item not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/definitions/Errors/Error_404'\n        '415':\n          description: Media Item not supported\n          content:\n            application/json:\n              schema:\n                $ref: '#/definitions/Errors/Error_415'\n\n  /procedures/{procedureId}:\n    get:\n      summary: Gets a offering instance\n      tags:\n        - Procedure\n      description: |\n        Gets a procedure instance.\n      parameters:\n        - name: procedureId\n          in: path\n          required: true\n          schema:\n            type: string\n          example: 2\n        - $ref: '#/parameters/localeParam'\n      responses:\n        '200':\n          description: An expanded item\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DefaultEntityExpanded'\n              example:\n                id: \"8\"\n                href: \"https://cloud.sensorweb.demo.52north.org/sos/api/procedures/8\"\n                domainId: wxt520\n                label: 52n-elv-ws2500\n                extras: \n                  - license\n                service:\n                  id: \"1\"\n                  href: https://cloud.sensorweb.demo.52north.org/sos/api/services/1\n                  domainId: \"1\"\n                  label: My RESTful Dataset Service\n        '404':\n          description: Item not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/definitions/Errors/Error_404'\n        '415':\n          description: Media Item not supported\n          content:\n            application/json:\n              schema:\n                $ref: '#/definitions/Errors/Error_415'\n  /tags:\n    get:\n      summary: Gets available tags\n      tags:\n        - Tag\n      description: \u003e\n        All available tag instances. Depending on the `expanded` parameter the collections items are compact or do inline full metadata.\n        \n        Filter options help to focus on a particular set of items. Filter either by parameters or spatially.\n      parameters:\n        - $ref: '#/parameters/localeParam'\n        - $ref: '#/parameters/expandedParam'\n        - $ref: '#/parameters/servicesParam'\n        - $ref: '#/parameters/phenomenaParam'\n        - $ref: '#/parameters/offeringsParam'\n        - $ref: '#/parameters/categoriesParam'\n        - $ref: '#/parameters/platformsParam'\n        - $ref: '#/parameters/featuresParam'\n        - $ref: '#/parameters/datasetTypesParam'\n        - $ref: '#/parameters/observationTypesParam'\n        - $ref: '#/parameters/valueTypesParam'\n        - $ref: '#/parameters/mobileParam'\n        - $ref: '#/parameters/insituParam'\n        - $ref: '#/parameters/matchDomainIdsParam'\n      responses:\n        '200':\n          description: A collection of tags\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DefaultEntity'\n              example:\n                id: \"3\"\n                href: \"https://cloud.sensorweb.demo.52north.org/sos/api/tags/3\"\n                domainId: 3\n                label: 3\n        '404':\n          description: Item not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/definitions/Errors/Error_404'\n        '415':\n          description: Media Item not supported\n          content:\n            application/json:\n              schema:\n                $ref: '#/definitions/Errors/Error_415'\n  /tags/{tagId}:\n    get:\n      summary: Gets a offering instance\n      tags:\n        - Tag\n      description: |\n        Gets a tag instance.\n      parameters:\n        - name: tagId\n          in: path\n          required: true\n          schema:\n            type: string\n          example: 2\n        - $ref: '#/parameters/localeParam'\n      responses:\n        '200':\n          description: An expanded item\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DefaultEntityExpanded'\n              example:\n                id: \"3\"\n                href: \"https://cloud.sensorweb.demo.52north.org/sos/api/tags/3\"\n                domainId: 3\n                label: 3\n                extras: \n                  - license\n                service:\n                  id: \"1\"\n                  href: https://cloud.sensorweb.demo.52north.org/sos/api/services/1\n                  domainId: \"1\"\n                  label: My RESTful Dataset Service\n        '404':\n          description: Item not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/definitions/Errors/Error_404'\n        '415':\n          description: Media Item not supported\n          content:\n            application/json:\n              schema:\n                $ref: '#/definitions/Errors/Error_415'\n\n  /services:\n    get:\n      summary: Gets available services\n      tags:\n        - Service\n      description: \u003e\n        All available service instances. Depending on the `expanded` parameter the collections items are compact or do inline full metadata.\n        \n        Filter options help to focus on a particular set of items. Filter either by parameters or spatially.\n      parameters:\n        - $ref: '#/parameters/localeParam'\n        - $ref: '#/parameters/expandedParam'\n        - $ref: '#/parameters/offeringsParam'\n        - $ref: '#/parameters/phenomenaParam'\n        - $ref: '#/parameters/proceduresParam'\n        - $ref: '#/parameters/categoriesParam'\n        - $ref: '#/parameters/platformsParam'\n        - $ref: '#/parameters/featuresParam'\n        - $ref: '#/parameters/datasetTypesParam'\n        - $ref: '#/parameters/observationTypesParam'\n        - $ref: '#/parameters/valueTypesParam'\n        - $ref: '#/parameters/mobileParam'\n        - $ref: '#/parameters/insituParam'\n        - $ref: '#/parameters/matchDomainIdsParam'\n      responses:\n        '200':\n          description: A collection of services\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DefaultEntity'\n              example:\n                id: \"1\"\n                href: \"https://cloud.sensorweb.demo.52north.org/sos/api/services/1\"\n                domainId: \"1\"\n                label: My RESTful Dataset Service\n        '404':\n          description: Item not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/definitions/Errors/Error_404'\n        '415':\n          description: Media Item not supported\n          content:\n            application/json:\n              schema:\n                $ref: '#/definitions/Errors/Error_415'\n\n  /services/{serviceId}:\n    get:\n      summary: Gets a offering instance\n      tags:\n        - Service\n      description: |\n        Gets a category instance.\n      parameters:\n        - name: offeringId\n          in: path\n          required: true\n          schema:\n            type: string\n          example: 2\n        - $ref: '#/parameters/localeParam'\n      responses:\n        '200':\n          description: An expanded item\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceExpanded'\n              example:\n                id: \"1\"\n                href: \"https://cloud.sensorweb.demo.52north.org/sos/api/services/1\"\n                domainId: \"1\"\n                label: My RESTful Dataset Service\n                extras: \n                  - license\n                supportsFirstLatest: true\n                quantities: \n                  features: 4\n                  phenomena: 33\n                  procedures: 4\n                  categories: 1\n                  platforms: 4\n                  offerings: 4\n                  datasets:\n                    total: 43\n                    timeseries: 43\n                    individualObservations: 0\n                    trajectories: 0\n                    profiles: 0\n                  measuringPrograms: 0\n                  samplings: 0\n        '404':\n          description: Item not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/definitions/Errors/Error_404'\n        '415':\n          description: Media Item not supported\n          content:\n            application/json:\n              schema:\n                $ref: '#/definitions/Errors/Error_415'\nparameters:\n  expandedParam:\n    name: expanded\n    in: query\n    type: boolean\n    description: \u003e\n      If `true` a list of partially expanded resource items is returned. The expansion provides more  detailed information up to a certain point. However, it does not necessarily provide all item  information as one may get when request the resource item itself.\n\n\n      The expanded works almost only for resource collection. However, exceptions may exist (e.g.  for getting raw data). Exceptions are explicitly documented. The default is `false`.\n\n    required: false\n    explode: true\n    schema:\n      type: boolean\n      enum:\n        - true\n        - false\n  datasetTypesParam:\n    name: datasetTypes\n    in: query\n    required: false\n    explode: true\n    schema:\n      type: string\n      example: timeseries\n    collectionFormat: csv\n    description: \u003e\n      Filters the resources to get only those related to the dataset type filter.\n\n\n      Allowed values are `individualObservation`, `sampling`, `timeseries`, `profile`, `trajectory`.\n  observationTypesParam:\n    name: observationTypes\n    in: query\n    required: false\n    explode: true\n    schema:\n      type: string\n      example: simple\n    collectionFormat: csv\n    description: \u003e\n      Filters the resources to get only those related to the observation type filter.\n\n\n      Allowed values are `simple`, `profile`, `timeseries`, `trajectory`.\n  valueTypesParam:\n    name: valueTypes\n    in: query\n    required: false\n    explode: true\n    schema:\n        type: string\n        example: quantity\n    collectionFormat: csv\n    description: \u003e\n      Filters the resources to get only those related to the value type filter.\n\n\n      Allowed values are `quantity`, `count`, `text`, `category`, `bool`, `geometry`, `blob`, `reference`, `complex`, `dataarray` or any other custom types given by the  implementing backend.\n  mobileParam:\n    name: mobile\n    in: query\n    type: boolean\n    description: \u003e\n      Filters the resources to get only those related to the mobile filter.\n    required: false\n    explode: true\n    schema:\n      type: boolean\n      enum:\n        - true\n        - false\n  insituParam:\n    name: insitu\n    in: query\n    type: boolean\n    description: \u003e\n      Filters the resources to get only those related to the insitu filter.\n    required: false\n    explode: true\n    schema:\n      type: boolean\n      enum:\n        - true\n        - false\n  matchDomainIdsParam :\n    name: matchDomainIds\n    in: query\n    type: boolean\n    description: \u003e\n      If `true` the filter parameters would be executed on the domain id/identifier of the entity. The default is `false`.\n    required: false\n    explode: true\n    schema:\n      type: boolean\n      enum:\n        - true\n        - false\n  servicesParam:\n    name: services\n    in: query\n    required: false\n    explode: true\n    schema:\n      type: string\n      example: simple\n    collectionFormat: csv\n    description: \u003e\n      All resources where the given service id does match.\n  categoriesParam:\n    name: categories\n    in: query\n    required: false\n    explode: true\n    schema:\n      type: string\n      example: simple\n    collectionFormat: csv\n    description: \u003e\n      All resources where the given category id does match.\n  phenomenaParam:\n    name: phenomena\n    in: query\n    required: false\n    explode: true\n    schema:\n      type: string\n      example: simple\n    collectionFormat: csv\n    description: \u003e\n      All resources where the given phenomenon id does match.\n  proceduresParam:\n    name: procedures\n    in: query\n    required: false\n    explode: true\n    schema:\n      type: string\n      example: simple\n    collectionFormat: csv\n    description: \u003e\n      All resources where the given procedure id does match.\n  offeringsParam:\n    name: offerings\n    in: query\n    required: false\n    explode: true\n    schema:\n      type: string\n      example: simple\n    collectionFormat: csv\n    description: \u003e\n      All resources where the given offering id does match.\n  featuresParam:\n    name: features\n    in: query\n    required: false\n    explode: true\n    schema:\n      type: string\n      example: simple\n    collectionFormat: csv\n    description: \u003e\n      All resources where the given feature id does match.\n  platformsParam:\n    name: platforms\n    in: query\n    required: false\n    explode: true\n    schema:\n      type: string\n      example: simple\n    collectionFormat: csv\n    description: |\n      All resources where the given platform id does match.\n  localeParam:\n    name: locale\n    in: query\n    required: false\n    example: de_de\n    schema:\n      type: string\n    description: \u003e\n      Specifies the language as [ISO639](http://en.wikipedia.org/wiki/ISO_639) code. Subdivisions are  respected by an `_` , e.g. `en_US` for American English.\n\n\n      The REST-API should consider the following order to detect a locale\n\n\n      * Accept-Language (e.g. header information)\n\n      * locale parameter\n\n\n      A fallback language cannot be specified as it depends on the data of the service provider.\n  timespanParam:\n    name: timespan\n    in: query\n    type: string\n    description: \u003e\n      An [ISO8601](http://en.wikipedia.org/wiki/ISO_8601#Time_intervals) \n      formatted period. Only backslash formatted values are supported.\n  crsParam:\n    name: crs\n    in: query\n    type: string\n    description: \u003e\n      The client indicates that input geometries shall be interpreted as being referenced by the given CRS (for example in case of `crs=EPSG:25832` to  [ETRS89/UTM zone 32N](http://spatialreference.org/ref/epsg/25832/)).\n\n\n      Per default geometries are referenced by the WGS84 CRS (CRS84, i.e.\n      lon/lat order). If crs value differs from default, all output geometries are transformed to match\n      the asked CRS.\n\n\n      Please note that some CRS switch coordinate axes. Double check axes\n      ordering before interpreting coordinates!\n  bboxParam:\n    name: bbox\n    in: query\n    type: string\n    description: \u003e\n      Features within a given bounding box (in WGS84 by default). Refer to the\n      crs parameter if a  non-default CRS shall be used. The Box can be supplied as either as json Points or as GeoJSON bbox.\n    \n\n      Alternative 1: json Points\n\n\n      ```json \n      bbox={\n        \"ll\": {\n          \"type\": \"Point\",\n          \"coordinates\": [\u003cx\u003e,\u003cy\u003e]\n        },\n        \"ur\": {\n          \"type\": \"Point\",\n          \"coordinates\": [\u003cx\u003e,\u003cy\u003e]\n        }\n      }\n\n      ```\n\n\n      Alternative 2: GeoJSON bbox\n\n\n      ```json\n      bbox=\u003cminx\u003e,\u003cminy\u003e,\u003cmaxx\u003e,\u003cmaxy\u003e\n      ```\n  nearParam:\n    name: near\n    in: query\n    type: string\n    description: \u003e\n      Features within a given bounding box (in WGS84 by default). Refer to the `crs` parameter if a  non-default CRS shall be used.\n\n\n      ```json\n      near={\n        \"center\": {\n          \"type\": \"Point\",\n          \"coordinates\": [\u003cx\u003e,\u003cy\u003e]\n        },\n        \"radius\":500\n      }\n\n      ```\n  legendParam:\n    name: legend\n    in: query\n    type: boolean\n    description: \u003e\n      Indicates if a legend shall be rendered directly on the image output (if `image/png` shall be  the output).\n  gridParam:\n    name: grid\n    in: query\n    type: boolean\n    description: ''\n  widthParam:\n    name: width\n    in: query\n    type: integer\n    format: int32\n    description: |\n      If `image/png` is requested, width determines the width in pixels.\n  heightParam:\n    name: height\n    in: query\n    type: integer\n    format: int32\n    description: |\n      If `image/png` is requested, height determines the height in pixels.\n  generalizeParam:\n    name: generalize\n    in: query\n    type: boolean\n    description: \u003e\n      Indicates that timeseries data shall be generalized. See generalization\n      section for details.\n  formatParam:\n    name: format\n    in: query\n    type: string\n    description: \u003e\n      Controls the output format of raw timeseries data. This avoids converting\n      between different  data formats on client side which uses a 3rd party chart rendering API.\n      Currently, supported formats\n\n        * *tvp* Time value pairs (the default)\n        \n        * *highcharts* [Highcharts](http://www.highcharts.com/) series data format.\n        \n        \n      Refer to the Format section for detailed information how the formats will look like.\n  base64Param:\n    name: base64\n    in: query\n    type: boolean\n    description: \u003e\n      Indicates binary images shall be encoded to a base64 string on server side. This makes it easily possible to display images from JavaScript (you would need a byte parsing library  otherwise).\n\n\n      Here is an example how to embed encoded base64 string\n\n      ```\n\n      \u003cimg src='data:image/png;base64,\" + encodedString + \"' /\u003e\n\n      ```\n  \n  geometryTypesParam:\n    name: geometryTypes\n    in: query\n    type: string\n    enum:\n      - point\n      - linestring\n      - polygon\n    description: |\n      The type of geometry based on [WKT types](https://en.wikipedia.org/wiki/Well-known_text).\n  platformGeometriesParam:\n    name: platformGeometries\n    in: query\n    type: array\n    collectionFormat: csv\n    items:\n      type: string\n      enum:\n        - site\n        - track\n    description: |\n      The platform's geometry, either `site` for `stationary` platforms (or `station`s) or `track` for `mobile` platforms.\n  observedGeometriesParam:\n    name: observedGeometries\n    in: query\n    type: array\n    collectionFormat: csv\n    items:\n      type: string\n      enum:\n        - static\n        - dynamic\n    description: |\n      The platform's observed geometry, either `static` for `remote` platforms observing fixed geometries or `dynamic` otherwise.\n  resultTimesParam:\n    name: resultTimes\n    in: query\n    type: array\n    collectionFormat: csv\n    description: |\n      Filter data which is available for different result times. Query `/extras?fields=resultTimes` beforehand to get\n      a list of result times or add `resultTimes=all` to get all data classified by result time. In case of `resultTime`\n      is missing from Query, those data will be returned which belongs to the oldest result time.\n  showTimeIntervalsParam:\n    name: showTimeIntervals\n    in: query\n    schema:\n      type: boolean\n      example: false\n    description: \u003e\n      Select whether Time fields in the output shall be returned using a single Timestamp or a Time Interval.\ncomponents:\n  schemas:\n    Base:\n      type: object\n      properties: \n        id: \n          type: string\n          description: The id of the entry, used for querying.\n          example: datasets\n        label: \n          type: string\n          description: Label/name of the resource.\n          example: Datasets\n        description: \n          type: string\n          description: Description of the resource.\n          example: Represents a sequence of data values observed over time.\n        href: \n          type: string\n          format: uri\n          description: Link to the resource.\n          example: http://localhost:8080/52n-sos-webapp/api/datasets\n        size:\n          type: integer\n          description: Count of available entries.\n          example: 10\n          required: false \n    Search:\n      type: object\n      properties: \n        id: \n          type: string\n          description: The id of the entry, used for querying.\n          example: \"1\"\n        label: \n          type: string\n          description: The label/name of the entry.\n          example: Datasets\n        type: \n          type: string\n          description: The entity type of the entry.\n          example: dataset\n        href: \n          type: string\n          format: uri\n          description: Link to the representation of the entity\n          example: http://localhost:8080/52n-sos-webapp/api/datasets/1\n    DefaultEntity:\n      type: object\n      properties: \n        id: \n          type: string\n          description: The id of the entity, used for querying\n        href: \n          type: string\n          format: uri\n          description: Link to the representation of the entity\n        domainid: \n          type: string\n          description: The domainid/identifier of the entity.\n        label: \n          type: string\n          description: The label/name of the entity.\n    DefaultEntityExpanded:\n      allOf:\n        - $ref: '#/components/schemas/DefaultEntity'\n        - type: object\n          properties:\n            extras:\n              $ref: '#/components/schemas/Extra'\n            service:\n              $ref: '#/components/schemas/Service'\n    Service:\n      allOf:\n        - $ref: '#/components/schemas/DefaultEntity'\n      example:\n        service:\n          id: 1\n          href: https://cloud.sensorweb.demo.52north.org/sos/api/services/1\n          domainId: 1\n          label: My RESTful Dataset Service \n    Extra:\n      type: array\n      items:\n        type: string\n        example: license\n    Extras:\n      type: object\n      properties:\n        license:\n          type: string\n          example: http://special-licensing.lic/\n    Dataset:\n      type: object\n      properties: \n        id: \n          type: string\n          description: The id of the entity, used for querying\n        href: \n          type: string\n          format: uri\n          description: Link to the representation of the entity\n        label: \n          type: string\n          description: The label/name of the entity.\n        datasetType:\n          type: string\n          description: The type of the dataset\n        observationType:\n          type: string\n          description: The type of the dataset observations\n        valueType:\n          type: string\n          description: The type of the dataset values\n        mobile:\n          type: string\n          description: Is this a mobile dataset\n        insitu:\n          type: string\n          description: Is this an insitu dataset\n        uom:\n          type: string\n          description: The unit of measurement of the dataset\n        originTimezone:\n          type: string\n          description: The original time zome of the observation value\n        samplingTimeStart:\n          type: string\n          format: date-time\n          description: The minimal time the observation value\n        samplingTimeEnd:\n          type: string\n          format: date-time\n          description: The maximum time of the observation value\n        feature:\n          $ref: '#/components/schemas/Feature'\n    DatasetExpanded:\n      allOf:\n        - $ref: '#/components/schemas/Dataset'\n        - type: object\n          properties:\n            extras:\n              type: array\n              items:\n                type: string\n            referenceValues:\n              type: array\n              items:\n                $ref: '#/components/schemas/ReferenceValue'\n            firstValue:\n              $ref: '#/components/schemas/Value'\n            lastValue:\n              $ref: '#/components/schemas/Value'\n            parameters:\n              $ref: '#/components/schemas/DatasetParameters'\n    DatasetParameters:\n      type: object\n      properties:\n        phenomenon:\n          $ref: '#/components/schemas/DefaultEntity'\n        procedure:\n          $ref: '#/components/schemas/DefaultEntity'\n        category:\n          $ref: '#/components/schemas/DefaultEntity'\n        offering:\n          $ref: '#/components/schemas/DefaultEntity'\n        service:\n          $ref: '#/components/schemas/DefaultEntity'\n        platform:\n          $ref: '#/components/schemas/DefaultEntity'\n    ReferenceValue:\n      type: object\n      properties:\n        referenceValueId:\n          type: string\n          description: The id of the reference  dataset.\n        label:\n          type: string\n          description: The label/name of the reference value.\n        lastValue:\n          $ref: '#/components/schemas/Value'\n    FeatureProperties:\n      type: object\n      properties: \n        label: \n          type: string\n          description: The label/name of the entity.\n        href: \n          type: string\n          format: uri\n          description: Link to the representation of the entity\n        domainid: \n          type: string\n          description: The domainid/identifier of the entity.\n    FeatureDatasets:\n      type: object\n      properties:\n        phenomenon:\n          $ref: '#/components/schemas/DefaultEntity'\n        procedure:\n          $ref: '#/components/schemas/DefaultEntity'\n        category:\n          $ref: '#/components/schemas/DefaultEntity'\n        offering:\n          $ref: '#/components/schemas/DefaultEntity'\n        service:\n          $ref: '#/components/schemas/DefaultEntity'\n        platform:\n          $ref: '#/components/schemas/DefaultEntity'\n    FeaturePropertiesExpanded:\n      allOf:\n        - $ref: '#/components/schemas/FeatureProperties'\n        - type: object\n          properties: \n            datasets:\n              $ref: '#/components/schemas/FeatureDatasets'\n    Feature:\n      type: object\n      properties: \n        id: \n          type: string\n          description: The id of the entity, used for querying\n        properties:\n          description:\n          allOf:\n            - $ref: '#/components/schemas/FeatureProperties'\n        type: \n          type: string\n          description: The type of the GeoJSON feature\n        geometry:\n          type: object\n          properties:\n            type: \n              type: string\n              description: The type of the GeoJSON geometry\n            coordinates:\n              type: array\n              description: The coordinates of the GeoJSON geometry\n              maxItems: 2\n              minItems: 2\n              items:\n                type: number\n    FeatureExpanded:\n      type: object\n      properties: \n        id: \n          type: string\n          description: The id of the entity, used for querying\n        properties:\n          description:\n          $ref: '#/components/schemas/FeaturePropertiesExpanded'\n        type: \n          type: string\n          description: The type of the GeoJSON feature\n        geometry:\n          type: object\n          properties:\n            type: \n              type: string\n              description: The type of the GeoJSON geometry\n            coordinates:\n              type: array\n              description: The coordinates of the GeoJSON geometry\n              maxItems: 2\n              minItems: 2\n              items:\n                type: number\n    ServiceExpanded:\n      allOf:\n        - $ref: '#/components/schemas/Service'\n        - type: object\n          properties:\n            extras:\n              type: array\n              items:\n                type: string\n                example: license\n            supportsFirstLatest:\n              type: boolean \n            quantities:\n              type: object\n              properties:\n                featuers:\n                  type: integer\n                phenomena:\n                  type: integer\n                procedures:\n                  type: integer\n                categories:\n                  type: integer\n                platforms:\n                  type: integer\n                offerings:\n                  type: integer\n                datasets:\n                  type: object\n                  properties:\n                    total:\n                      type: integer\n                    timeseries:\n                      type: integer\n                    individualObservations:\n                      type: integer\n                    trajectories:\n                      type: integer\n                    profiles:\n                      type: integer\n                measuringPrograms:\n                  type: integer\n                samplings:\n                  samplings: integer\n    Value:\n      type: object\n      properties:\n        timestamp:\n          type: string\n          format: date-time\n          description: The time value\n        value:\n          type: number\n          description: The value\n    Values:\n      type: object\n      properties:\n        values:\n          type: array\n          items:\n            $ref: '#/components/schemas/Value'\n    ValuesExpanded:\n      type: object\n      properties:\n        values:\n          type: array\n          items:\n            $ref: '#/components/schemas/Value'\n        extra:\n          type: object\n          properties:\n            referenceValues:\n              type: array\n              items:\n                $ref: '#/components/schemas/Value'\n            valueBeforeTimespan:\n              nullable: true\n              oneOf:\n                - $ref: '#/components/schemas/Value'\n            valueAfterTimespan:\n              nullable: true\n              oneOf:\n                - $ref: '#/components/schemas/Value'\n    ValuesFlot:\n      type: object\n      properties:\n        values:\n          type: array\n          items:\n            $ref: '#/components/schemas/ValueFlot'\n    ValuesFlotExpanded:\n      type: object\n      description: The expanded flot value output\n      properties:\n        values:\n          type: array\n          items:\n            $ref: '#/components/schemas/ValueFlot'\n        referenceValues:\n          required: false\n          type: array\n          items:\n            $ref: '#/components/schemas/ValueFlot'\n        valueBeforeTimespan:\n          required: false\n          oneOf:\n            - $ref: '#/components/schemas/ValueFlot'\n        valueAfterTimespan:\n          required: false\n          oneOf:\n            - $ref: '#/components/schemas/ValueFlot'\n    ValueFlot:\n      type: array\n      description: The time and value\n      maxItems: 2\n      minItems: 2\n      items:\n        oneOf:\n          - integer\n          - number\n\ndefinitions:\n  SimpleDataRequest:\n    type: object\n    properties:\n      datasetIds:\n        type: array\n        items:\n          type: string\n  StyledDataRequest:\n    type: object\n    required:\n      - styleOptions\n    properties:\n      legend:\n        type: boolean\n      grid:\n        type: boolean\n      locale:\n        type: string\n      width:\n        type: integer\n        format: int32\n      height:\n        type: integer\n        format: int32\n      timespan:\n        type: string\n      styleOptions:\n        $ref: '#/definitions/Style'\n  Style:\n    type: object\n    description: ''\n    properties:\n      chartType:\n        type: string\n        enum:\n          - line\n          - bar\n\n  Errors:\n    Error:\n      type: object\n      properties:\n        statusCode:\n          type: integer\n          format: int32\n        reason:\n          type: string\n        userMessage:\n          type: string\n    Error_400:\n      allOf:\n        - $ref: '#/definitions/Errors/Error'\n      example:\n          statusCode: 400\n          reason: Bad Request\n          userMessage: The requested parameter is invalid.\n    Error_404:\n      allOf:\n        - $ref: '#/definitions/Errors/Error'\n      example:\n          statusCode: 404\n          reason: Not Found\n          userMessage: Resource with id '4556465' was not found.\n    Error_415:\n      allOf:\n        - $ref: '#/definitions/Errors/Error'\n      example:\n        statusCode: 415\n        reason: Usupported Media Type\n        userMessage: MediaType 'application/xml' is not supported.\n\n",
			"canonicalURL": "/github.com/52North/sensorweb-server-helgoland@5735eed25c72bf6a537a2f87c1cc492bb65cf0c0/-/blob/web-resources/src/main/docs/_data/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/52North/sensorweb-server-helgoland/blob/5735eed25c72bf6a537a2f87c1cc492bb65cf0c0/web-resources/src/main/docs/_data/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 1606: cannot unmarshal !!bool `false` into []string; yaml: line 1946: cannot unmarshal !!bool `false` into []string; yaml: line 1965: cannot unmarshal !!str `integer` into ogen.Schema; yaml: line 1966: cannot unmarshal !!str `number` into ogen.Schema"
}