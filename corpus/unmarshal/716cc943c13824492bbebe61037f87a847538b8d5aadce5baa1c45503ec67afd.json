{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/livepeer/studio"
		},
		"file": {
			"name": "schema.yaml",
			"size": 0,
			"path": "packages/api/src/schema/schema.yaml",
			"byteSize": 79693,
			"content": "openapi: 3.0.1\ninfo:\n  title: Livepeer Studio API Reference\n  version: 0.0.1-alpha.0\n\ntags:\n  - name: stream\n    description: Stream Endpoints\n  - name: object-store\n    description: Object Stores Endpoints\n  - name: multistream-target\n    description: Multistream Target Endpoints\n  - name: user\n    description: User Endpoints\n  - name: api-token\n    description: Api Token Endpoints\n  - name: login\n    description: User login\n  - name: verification\n    description: User Email Verification\n  - name: password-reset\n    description: User Password Reset\n  - name: make-admin\n    description: Changes user admin status\n  - name: webhook\n    description: Webhooks endpoints\n  - name: asset\n    description: Asset Endpoints\n  - name: task\n    description: Task Endpoints\n  - name: webhook-response\n    description: webhook client responses\n  - name: verify-email\n    description: Resend User Email Verification\n\ncomponents:\n  schemas:\n    ffmpeg-profile:\n      type: object\n      description: LMPS ffmpeg profile\n      additionalProperties: false\n      required:\n        - width\n        - name\n        - height\n        - bitrate\n        - fps\n      properties:\n        width:\n          type: integer\n          minimum: 128\n        name:\n          type: string\n          minLength: 1\n          maxLength: 500\n          example: \"720p\"\n        height:\n          type: integer\n          minimum: 128\n        bitrate:\n          type: integer\n          minimum: 400\n        fps:\n          type: integer\n          minimum: 0\n        fpsDen:\n          type: integer\n          minimum: 1\n        gop:\n          type: string\n        profile:\n          type: string\n          enum:\n            - H264Baseline\n            - H264Main\n            - H264High\n            - H264ConstrainedHigh\n        encoder:\n          type: string\n          enum:\n            - h264\n            - hevc\n            - vp8\n            - vp9\n    cdn-data-row:\n      type: object\n      description:\n        Fields names taken from log format description\n        https://support.highwinds.com/hc/en-us/articles/360052181571-Raw-Log-Access-through-GCS\n      additionalProperties: false\n      required:\n        - unique_client_ips\n        - total_sc_bytes\n      # oneOf: # allows validation, but generates too generic type definition\n      #   - required:\n      #       - stream_id\n      #   - required:\n      #       - playback_id\n      properties:\n        stream_id:\n          type: string\n          description: Session UUID. Used in recordings URLs.\n        playback_id:\n          type: string\n          description: Playback ID.\n        unique_client_ips:\n          type: number\n          description:\n            Number of unique IP addresses of clients. Not accurate because\n            StackPath zeroes last part of the IP address.\n        total_filesize:\n          type: number\n          description: Size of the asset being delivered.\n        total_cs_bytes:\n          type: number\n          description: The total size of the request header.\n        total_sc_bytes:\n          type: number\n          description: Total bytes in the response to the client.\n        count:\n          type: number\n          description: Number of parsed log lines\n    cdn-data-payload:\n      type: array\n      items:\n        type: object\n        additionalProperties: false\n        required:\n          - region\n          - file_name\n          - date\n          - data\n        properties:\n          region:\n            type: string\n          file_name:\n            type: string\n          date:\n            type: number\n          data:\n            type: array\n            minItems: 1\n            items:\n              $ref: \"#/components/schemas/cdn-data-row\"\n    cdn-usage-last:\n      type: object\n      table: cdn_usage_last\n      required:\n        - region\n        - fileName\n      additionalProperties: false\n      properties:\n        id:\n          type: string\n          readOnly: true\n          example: de7818e7-610a-4057-8f6f-b785dc1e6f88\n        fileName:\n          type: number\n          index: true\n        region:\n          type: string\n          index: true\n          unique: true\n    webhook:\n      type: object\n      table: webhook\n      required:\n        - name\n        - url\n      additionalProperties: false\n      properties:\n        id:\n          type: string\n          readOnly: true\n          example: de7818e7-610a-4057-8f6f-b785dc1e6f88\n        kind:\n          type: string\n          readOnly: true\n          example: webhook\n        name:\n          type: string\n        userId:\n          type: string\n          readOnly: true\n          index: true\n        createdAt:\n          type: number\n          readOnly: true\n          description:\n            Timestamp (in milliseconds) at which stream object was created\n          example: 1587667174725\n        event:\n          writeOnly: true\n          deprecated: true\n          description:\n            \"@deprecated Non-persisted field. To be used on creation API only.\"\n          $ref: \"#/components/schemas/webhook/properties/events/items\"\n        events:\n          type: array\n          items:\n            type: string\n            enum:\n              - stream.started\n              - stream.detection\n              - stream.idle\n              - recording.ready\n              - recording.started\n              - recording.waiting\n              - multistream.connected\n              - multistream.error\n              - multistream.disconnected\n              - playback.user.new\n              - asset.created\n              - asset.updated\n              - asset.failed\n              - asset.ready\n              - asset.deleted\n              - task.spawned\n              - task.updated\n              - task.completed\n              - task.failed\n        url:\n          type: string\n          format: uri\n          pattern: ^http(s)?://\n        deleted:\n          type: boolean\n          default: false\n        sharedSecret:\n          type: string\n          writeOnly: true\n          description: shared secret used to sign the webhook payload\n        streamId:\n          type: string\n          description: streamId of the stream on which the webhook is applied\n        status:\n          type: object\n          description: status of webhook\n          readOnly: true\n          properties:\n            lastFailure:\n              type: object\n              description: failure timestamp and error message with status code\n              readOnly: true\n              properties:\n                timestamp:\n                  type: number\n                  readOnly: true\n                  example: 1587667174725\n                  description:\n                    Timestamp (in milliseconds) at which the webhook last failed\n                error:\n                  type: string\n                  readOnly: true\n                  description: Webhook failure error message\n                  example: \"Error message\"\n                response:\n                  type: string\n                  readOnly: true\n                  description: Webhook failure response\n                  example: \"Response body\"\n                statusCode:\n                  type: number\n                  readOnly: true\n                  description: Webhook failure status code\n                  example: 500\n            lastTriggeredAt:\n              type: number\n              readyOnly: true\n              description:\n                Timestamp (in milliseconds) at which the webhook last was\n                triggered\n              example: 1587667174725\n\n    webhook-response:\n      type: object\n      table: webhook_response\n      required:\n        - webhookId\n        - statusCode\n      additionalProperties: false\n      properties:\n        id:\n          type: string\n          readOnly: true\n          example: de7818e7-610a-4057-8f6f-b785dc1e6f88\n        kind:\n          type: string\n          readOnly: true\n          example: webhookResponse\n        webhookId:\n          type: string\n          readOnly: true\n          index: true\n        eventId:\n          type: string\n          readOnly: true\n          index: true\n        createdAt:\n          type: number\n          readOnly: true\n          description:\n            Timestamp (in milliseconds) at which webhook response object was\n            created\n          example: 1587667174725\n        duration:\n          type: number\n        statusCode:\n          type: number\n          default: 0\n        response:\n          type: object\n          additionalProperties: false\n          properties:\n            body:\n              type: string\n            headers:\n              type: object\n              additionalProperties:\n                type: array\n                items:\n                  type: string\n            redirected:\n              type: boolean\n            status:\n              type: number\n            statusText:\n              type: string\n\n    detection-webhook-payload:\n      type: object\n      required:\n        - manifestID\n        - seqNo\n        - sceneClassification\n      properties:\n        manifestID:\n          type: string\n        seqNo:\n          type: number\n        sceneClassification:\n          type: array\n          items:\n            type: object\n            required:\n              - name\n              - probability\n            properties:\n              name:\n                type: string\n              probability:\n                type: number\n\n    stream:\n      type: object\n      table: stream\n      required:\n        - name\n      additionalProperties: false\n      properties:\n        id:\n          type: string\n          readOnly: true\n          example: de7818e7-610a-4057-8f6f-b785dc1e6f88\n        kind:\n          type: string\n          readOnly: true\n          example: stream\n        name:\n          type: string\n          example: test_stream\n        userId:\n          type: string\n          example: 66E2161C-7670-4D05-B71D-DA2D6979556F\n          index: true\n        lastSeen:\n          type: number\n          example: 1587667174725\n          index: true\n        sourceSegments:\n          type: number\n          example: 1\n        transcodedSegments:\n          type: number\n          example: 2\n        sourceSegmentsDuration:\n          type: number\n          example: 1\n          description: Duration of all the source segments, sec\n        transcodedSegmentsDuration:\n          type: number\n          example: 2\n          description: Duration of all the transcoded segments, sec\n        sourceBytes:\n          type: number\n          example: 1\n        transcodedBytes:\n          type: number\n          example: 2\n        ingestRate:\n          type: number\n          example: 1\n          description: Rate at which sourceBytes increases (bytes/second)\n        outgoingRate:\n          type: number\n          example: 2\n          description: Rate at which transcodedBytes increases (bytes/second)\n        deleted:\n          type: boolean\n          description: Set to true when stream deleted\n        isActive:\n          type: boolean\n          description: If currently active\n          index: true\n        createdByTokenName:\n          type: string\n          readOnly: true\n          description: Name of the token used to create this object\n        createdByTokenId:\n          type: string\n          readOnly: true\n        createdAt:\n          type: number\n          readOnly: true\n          description:\n            Timestamp (in milliseconds) at which stream object was created\n          example: 1587667174725\n          index: true\n        parentId:\n          type: string\n          example: de7818e7-610a-4057-8f6f-b785dc1e6f88\n          description: Points to parent stream object\n          index: true\n        partialSession:\n          description:\n            Indicates that this is not final object of `user's` session\n          type: boolean\n        previousSessions:\n          description:\n            Ids of the previous sessions which are part of `user's` session\n          type: array\n          items:\n            type: string\n        streamKey:\n          type: string\n          example: hgebdhhigq\n          description: Used to form RTMP ingest URL\n          unique: true\n        playbackId:\n          type: string\n          example: eaw4nk06ts2d0mzb\n          description: Used to form playback URL\n          unique: true\n        profiles:\n          type: array\n          default:\n            # prettier-ignore\n            - { name: \"240p0\", fps: 0, bitrate: 250000, width: 426, height: 240 }\n            - { name: \"360p0\", fps: 0, bitrate: 800000, width: 640, height: 360 }\n            - { name: \"480p0\", fps: 0, bitrate: 1600000, width: 854, height: 480 }\n            - { name: \"720p0\", fps: 0, bitrate: 3000000, width: 1280, height: 720 }\n          items:\n            $ref: \"#/components/schemas/ffmpeg-profile\"\n        objectStoreId:\n          type: string\n          example: D8321C3E-B29C-45EB-A1BB-A623D8BE0F65\n        presets:\n          type: array\n          items:\n            type: string\n            enum:\n              - P720p60fps16x9\n              - P720p30fps16x9\n              - P720p30fps4x3\n              - P576p30fps16x9\n              - P360p30fps16x9\n              - P360p30fps4x3\n              - P240p30fps16x9\n              - P240p30fps4x3\n              - P144p30fps16x9\n            example: P720p60fps16x9\n        record:\n          description:\n            Should this stream be recorded? Uses default settings. For more\n            customization, create and configure an object store.\n          type: boolean\n          example: false\n        recordObjectStoreId:\n          type: string\n          example: D8321C3E-B29C-45EB-A1BB-A623D8BE0F65\n          description:\n            ID of object store where to which this stream was recorded\n        multistream:\n          type: object\n          additionalProperties: false\n          properties:\n            targets:\n              type: array\n              example: [{ \"id\": \"PUSH123\", \"profile\": \"720p\" }]\n              description:\n                References to targets where this stream will be simultaneously\n                streamed to\n              items:\n                type: object\n                required: [profile]\n                additionalProperties: false\n                properties:\n                  profile:\n                    type: string\n                    description:\n                      Name of transcoding profile that should be sent. Use\n                      \"source\" for pushing source stream data\n                    minLength: 1\n                    maxLength: 500\n                    example: 720p\n                  videoOnly:\n                    type: boolean\n                    description:\n                      If true, the stream audio will be muted and only silent\n                      video will be pushed to the target.\n                    default: false\n                  id:\n                    type: string\n                    description:\n                      ID of multistream target object where to push this stream\n                  spec:\n                    type: object\n                    writeOnly: true\n                    description:\n                      Inline multistream target object. Will automatically\n                      create the target resource to be used by the created\n                      stream.\n                    required:\n                      - url\n                    additionalProperties: false\n                    properties:\n                      name:\n                        type: string\n                      url:\n                        $ref: \"#/components/schemas/multistream-target/properties/url\"\n        wowza:\n          type: object\n          required:\n            - transcoderAppConfig\n            - transcoderTemplateAppConfig\n            - streamNameGroups\n            - sourceInfo\n          additionalProperties: false\n          properties:\n            transcoderAppConfig:\n              type: object\n            transcoderTemplateAppConfig:\n              type: object\n            streamNameGroups:\n              type: array\n            sourceInfo:\n              type: object\n              required:\n                - width\n                - height\n                - fps\n              additionalProperties: false\n              properties:\n                width:\n                  type: integer\n                  minValue: 1\n                height:\n                  type: integer\n                  minValue: 1\n                fps:\n                  type: integer\n                  minVallue: 1\n        renditions:\n          type: object\n          additionalProperties:\n            type: string\n        detection:\n          type: object\n          description:\n            Custom configuration for audio/video detection algorithms to be run\n            on the stream. If no config is provided and a webhook is subscribed\n            to the stream.detection event, a default config will be used.\n          default:\n            sceneClassification:\n              - name: \"soccer\"\n              - name: \"adult\"\n          required: [sceneClassification]\n          additionalProperties: false\n          properties:\n            sceneClassification:\n              type: array\n              minItems: 1\n              items:\n                type: object\n                description:\n                  Scene classification options. Must contain name property with\n                  one of the well-defined classes supported by detection models.\n                additionalProperties: false\n                required: [name]\n                properties:\n                  name:\n                    type: string\n                    enum:\n                      - soccer\n                      - adult\n        region:\n          type: string\n          example: fra\n          description: Region in which this session object was created\n        broadcasterHost:\n          type: string\n          description: Hostname of the broadcaster that transcodes that stream\n        mistHost:\n          type: string\n          description: Hostname of the Mist server that processes that stream\n        suspended:\n          type: boolean\n          description: If currently suspended\n\n    deactivate-many-payload:\n      type: object\n      additionalProperties: false\n      properties:\n        ids:\n          type: array\n          minItems: 1\n          items:\n            type: string\n\n    stream-set-active-payload:\n      type: object\n      required: [active]\n      properties:\n        active:\n          $ref: \"#/components/schemas/stream/properties/isActive\"\n        hostName:\n          $ref: \"#/components/schemas/stream/properties/mistHost\"\n        startedAt:\n          type: number\n          description: Timestamp (in milliseconds) at which the stream started.\n          example: 1587667174725\n\n    asset-patch-payload:\n      type: object\n      additionalProperties: false\n      properties:\n        name:\n          $ref: \"#/components/schemas/asset/properties/name\"\n        meta:\n          $ref: \"#/components/schemas/asset/properties/meta\"\n        storage:\n          additionalProperties: false\n          properties:\n            ipfs:\n              oneOf:\n                - type: object\n                  additionalProperties: false\n                  properties:\n                    spec:\n                      oneOf:\n                        - type: \"null\"\n                        - $ref: \"#/components/schemas/asset/properties/storage/properties/ipfs/properties/spec\"\n                - type: [boolean, \"null\"]\n                  description:\n                    Set to true to make default export to IPFS. False or null\n                    means to unpin from IPFS, but is unsupported right now.\n\n    stream-patch-payload:\n      type: object\n      additionalProperties: false\n      properties:\n        record:\n          $ref: \"#/components/schemas/stream/properties/record\"\n        suspended:\n          $ref: \"#/components/schemas/stream/properties/suspended\"\n        multistream:\n          $ref: \"#/components/schemas/stream/properties/multistream\"\n\n    object-store-patch-payload:\n      type: object\n      additionalProperties: false\n      properties:\n        name:\n          $ref: \"#/components/schemas/object-store/properties/name\"\n        disabled:\n          $ref: \"#/components/schemas/object-store/properties/disabled\"\n        url:\n          $ref: \"#/components/schemas/object-store/properties/url\"\n        publicUrl:\n          $ref: \"#/components/schemas/object-store/properties/publicUrl\"\n\n    suspend-user-payload:\n      type: object\n      additionalProperties: false\n      required: [suspended]\n      properties:\n        suspended:\n          $ref: \"#/components/schemas/user/properties/suspended\"\n        emailTemplate:\n          type: string\n          description:\n            Name of template to send to the users regarding the suspension.\n          enum: [copyright]\n\n    multistream-target-patch-payload:\n      $ref: \"#/components/schemas/multistream-target\"\n      required: []\n      table: null\n\n    webhook-patch-payload:\n      type: object\n      additionalProperties: false\n      properties:\n        name:\n          $ref: \"#/components/schemas/webhook/properties/name\"\n        url:\n          $ref: \"#/components/schemas/webhook/properties/url\"\n        events:\n          $ref: \"#/components/schemas/webhook/properties/events\"\n        sharedSecret:\n          $ref: \"#/components/schemas/webhook/properties/sharedSecret\"\n        streamId:\n          $ref: \"#/components/schemas/webhook/properties/streamId\"\n\n    webhook-status-payload:\n      type: object\n      additionalProperties: false\n      properties:\n        errorMessage:\n          type: string\n          description: Error message if the webhook failed to process the event\n        response:\n          $ref: \"#/components/schemas/webhook-response\"\n\n    session:\n      type: object\n      table: session\n      required:\n        - name\n        - streamId\n      additionalProperties: false\n      properties:\n        id:\n          type: string\n          readOnly: true\n          example: de7818e7-610a-4057-8f6f-b785dc1e6f88\n        kind:\n          type: string\n          readOnly: true\n          example: stream\n        name:\n          type: string\n          example: test_session\n        userId:\n          type: string\n          example: 66E2161C-7670-4D05-B71D-DA2D6979556F\n          index: true\n        lastSeen:\n          type: number\n          example: 1587667174725\n          index: true\n        sourceSegments:\n          type: number\n          example: 1\n        transcodedSegments:\n          type: number\n          example: 2\n        sourceSegmentsDuration:\n          type: number\n          example: 1\n          description: Duration of all the source segments, sec\n        transcodedSegmentsDuration:\n          type: number\n          example: 2\n          description: Duration of all the transcoded segments, sec\n        sourceBytes:\n          type: number\n          example: 1\n        transcodedBytes:\n          type: number\n          example: 2\n        ingestRate:\n          type: number\n          example: 1\n          description: Rate at which sourceBytes increases (bytes/second)\n        outgoingRate:\n          type: number\n          example: 2\n          description: Rate at which transcodedBytes increases (bytes/second)\n        deleted:\n          type: boolean\n          description: Set to true when stream deleted\n        createdAt:\n          type: number\n          readOnly: true\n          description:\n            Timestamp (in milliseconds) at which stream object was created\n          example: 1587667174725\n          index: true\n        parentId:\n          type: string\n          example: de7818e7-610a-4057-8f6f-b785dc1e6f88\n          description: Points to parent stream object\n          index: true\n        record:\n          description:\n            Should this stream be recorded? Uses default settings. For more\n            customization, create and configure an object store.\n          type: boolean\n          example: false\n        recordingStatus:\n          type: string\n          readonly: true\n          description: Status of the recording process of this stream session.\n          enum: [waiting, ready]\n        recordingUrl:\n          type: string\n          readonly: true\n          description: URL for accessing the recording of this stream session.\n        mp4Url:\n          type: string\n          readonly: true\n          description: URL for the stream session recording packaged in an mp4.\n        recordObjectStoreId:\n          type: string\n          example: D8321C3E-B29C-45EB-A1BB-A623D8BE0F65\n          description:\n            ID of object store where to which this stream was recorded\n        playbackId:\n          type: string\n          example: eaw4nk06ts2d0mzb\n          description: Used to form playback URL\n        profiles:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ffmpeg-profile\"\n        lastSessionId:\n          type: string\n\n    error:\n      required:\n        - errors\n      type: object\n      properties:\n        errors:\n          type: array\n          minItems: 1\n          items:\n            type: string\n            example: [\"id not provided\", \"user not found\"]\n\n    object-store:\n      type: object\n      table: object_store\n      required:\n        - url\n      additionalProperties: false\n      properties:\n        url:\n          type: string\n          description: Livepeer-compatible object store URL\n          example: s3://access-key:secret-key@us-west-2/bucket-name\n          writeOnly: true\n        publicUrl:\n          type: string\n          description:\n            Public URL at which data in this object storage can be accessed\n          example: https://reg-rec.livepeer.live/some/path\n        disabled:\n          type: boolean\n          description:\n            If true then these object store will not be used for recording even\n            if it is configured in the API command line.\n        deleted:\n          type: boolean\n          description: Set to true when the object store is deleted\n        id:\n          type: string\n          example: 09F8B46C-61A0-4254-9875-F71F4C605BC7\n        userId:\n          type: string\n          example: 66E2161C-7670-4D05-B71D-DA2D6979556F\n          index: true\n        name:\n          type: string\n        createdAt:\n          type: number\n          readOnly: true\n          description:\n            Timestamp (in milliseconds) at which object store object was created\n          example: 1587667174725\n\n    multistream-target:\n      type: object\n      table: multistream_target\n      required:\n        - url\n      additionalProperties: false\n      properties:\n        id:\n          type: string\n          readOnly: true\n          example: 09F8B46C-61A0-4254-9875-F71F4C605BC7\n        name:\n          type: string\n        url:\n          type: string\n          writeOnly: true\n          description:\n            Livepeer-compatible multistream target URL (RTMP(S) or SRT)\n          example: rtmps://live.my-service.tv/channel/secretKey\n          format: uri\n          pattern: ^(srt|rtmps?)://\n        disabled:\n          type: boolean\n          description:\n            If true then this multistream target will not be used for pushing\n            even if it is configured in a stream object.\n        userId:\n          type: string\n          readOnly: true\n          example: 66E2161C-7670-4D05-B71D-DA2D6979556F\n          index: true\n        createdAt:\n          type: number\n          readOnly: true\n          description:\n            Timestamp (in milliseconds) at which multistream target object was\n            created\n          example: 1587667174725\n\n    asset:\n      type: object\n      table: asset\n      additionalProperties: false\n      required:\n        - name\n      properties:\n        id:\n          type: string\n          readOnly: true\n          example: 09F8B46C-61A0-4254-9875-F71F4C605BC7\n          index: true\n        type:\n          type: string\n          enum:\n            - video\n            - audio\n          description: Type of the asset.\n          example: video\n        playbackId:\n          type: string\n          example: eaw4nk06ts2d0mzb\n          index: true\n          description: Used to form playback URL and storage folder\n        playbackRecordingId:\n          type: string\n          writeOnly: true\n          example: ea03f37e-f861-4cdd-b495-0e60b6d753ad\n          index: true\n          description: Used to form recording URL for HLS playback\n        playbackUrl:\n          type: string\n          readOnly: true\n          example: https://livepeercdn.com/asset/ea03f37e-f861-4cdd-b495-0e60b6d753ad/index.m3u8\n          description: URL for HLS playback\n        downloadUrl:\n          type: string\n          readOnly: true\n          example: https://livepeercdn.com/asset/eaw4nk06ts2d0mzb/video\n          description: URL to manually download the asset if desired\n        userId:\n          type: string\n          readOnly: true\n          example: 66E2161C-7670-4D05-B71D-DA2D6979556F\n          index: true\n          description: owner of the asset\n        deleted:\n          type: boolean\n          description: Set to true when the asset is deleted\n        objectStoreId:\n          type: string\n          description: Object store ID where the asset is stored\n          writeOnly: true\n          example: 09F8B46C-61A0-4254-9875-F71F4C605BC7\n        storage:\n          additionalProperties: false\n          properties:\n            ipfs:\n              type: object\n              additionalProperties: false\n              properties:\n                spec:\n                  type: object\n                  additionalProperties: false\n                  default: {}\n                  properties:\n                    nftMetadataTemplate:\n                      type: string\n                      enum: [player, file]\n                      default: player\n                      description:\n                        Name of the NFT metadata template to export. 'player'\n                        will embed the Livepeer Player on the NFT while 'file'\n                        will reference only the immutable MP4 files.\n                    nftMetadata:\n                      type: object\n                      description:\n                        Additional data to add to the NFT metadata exported to\n                        IPFS. Will be deep merged with the default metadata\n                        exported.\n                $ref: \"#/components/schemas/ipfs-file-info/properties\"\n                nftMetadata:\n                  $ref: \"#/components/schemas/ipfs-file-info\"\n                updatedAt:\n                  type: number\n                  readOnly: true\n                  description:\n                    Timestamp (in milliseconds) at which IPFS export task was\n                    updated\n                  example: 1587667174725\n            status:\n              readOnly: true\n              additionalProperties: false\n              required: [phase, tasks]\n              properties:\n                phase:\n                  type: string\n                  description: Phase of the asset storage\n                  enum:\n                    - waiting\n                    - processing\n                    - ready\n                    - failed\n                    - reverted\n                progress:\n                  type: number\n                  description:\n                    Current progress of the task updating the storage.\n                errorMessage:\n                  type: string\n                  description: Error message if the last storage changed failed.\n                tasks:\n                  type: object\n                  additionalProperties: false\n                  properties:\n                    pending:\n                      type: string\n                      description:\n                        ID of any currently running task that is exporting this\n                        asset to IPFS.\n                    last:\n                      type: string\n                      description:\n                        ID of the last task to run successfully, that created\n                        the currently saved data.\n                    failed:\n                      type: string\n                      description: ID of the last task to fail execution.\n        status:\n          type: object\n          additionalProperties: false\n          readOnly: true\n          required: [phase, updatedAt]\n          description: Status of the asset\n          properties:\n            phase:\n              type: string\n              description: Phase of the asset\n              enum:\n                - waiting\n                - processing\n                - ready\n                - failed\n            updatedAt:\n              type: number\n              description:\n                Timestamp (in milliseconds) at which the asset was last updated\n              example: 1587667174725\n            progress:\n              type: number\n              description: Current progress of the task creating this asset.\n            errorMessage:\n              type: string\n              description: Error message if the asset creation failed.\n        name:\n          type: string\n          description:\n            Name of the asset. This is not necessarily the filename, can be a\n            custom name or title\n          example: filename.mp4\n        meta:\n          type: object\n          description: User input metadata associated with the asset\n          additionalProperties:\n            type: string\n          example:\n            {\n              \"title\": \"My awesome video\",\n              \"description\": \"This is a video of my awesome life\",\n              \"tags\": \"awesome,life,video\",\n            }\n        createdAt:\n          type: number\n          readOnly: true\n          description: Timestamp (in milliseconds) at which asset was created\n          example: 1587667174725\n        size:\n          type: number\n          readOnly: true\n          description: Size of the asset in bytes\n          example: 84934509\n        hash:\n          type: array\n          description: Hash of the asset\n          items:\n            type: object\n            additionalProperties: false\n            properties:\n              hash:\n                type: string\n                description: Hash of the asset\n                example: 9b560b28b85378a5004117539196ab24e21bbd75b0e9eb1a8bc7c5fd80dc5b57\n              algorithm:\n                type: string\n                description: Hash algorithm used to compute the hash\n                example: sha256\n        videoSpec:\n          type: object\n          additionalProperties: false\n          readOnly: true\n          description: Video metadata\n          properties:\n            format:\n              type: string\n              description: Format of the asset\n              example: mp4\n            duration:\n              type: number\n              description: Duration of the asset in seconds (float)\n              example: 23.8328\n            bitrate:\n              type: number\n              description: Bitrate of the video in bits per second\n              example: 1000000\n            tracks:\n              type: array\n              description:\n                List of tracks associated with the asset when the format\n                contemplates them (e.g. mp4)\n              items:\n                type: object\n                additionalProperties: false\n                required:\n                  - type\n                  - codec\n                properties:\n                  type:\n                    type: string\n                    description: type of track\n                    enum:\n                      - video\n                      - audio\n                    example: video\n                  codec:\n                    type: string\n                    description: Codec of the track\n                    example: aac\n                  startTime:\n                    type: number\n                    description: Start time of the track in seconds\n                    example: 23.8238\n                  duration:\n                    type: number\n                    description: Duration of the track in seconds\n                    example: 23.8238\n                  bitrate:\n                    type: number\n                    description: Bitrate of the track in bits per second\n                    example: 1000000\n                  width:\n                    type: number\n                    description: Width of the track - only for video tracks\n                    example: 1920\n                  height:\n                    type: number\n                    description: Height of the track - only for video tracks\n                    example: 1080\n                  pixelFormat:\n                    type: string\n                    description:\n                      Pixel format of the track - only for video tracks\n                    example: yuv420p\n                  fps:\n                    type: number\n                    description: Frame rate of the track - only for video tracks\n                    example: 30\n                  channels:\n                    type: number\n                    description: Amount of audio channels in the track\n                    example: 2\n                  sampleRate:\n                    type: number\n                    description:\n                      Sample rate of the track in samples per second - only for\n                      audio tracks\n                    example: 44100\n                  bitDepth:\n                    type: number\n                    description: Bit depth of the track - only for audio tracks\n                    example: 16\n        sourceAssetId:\n          type: string\n          index: true\n          readOnly: true\n          description:\n            ID of the source asset (root) - If missing, this is a root asset\n          example: 09F8B46C-61A0-4254-9875-F71F4C605BC7\n\n    ipfs-file-info:\n      type: object\n      required: [cid]\n      additionalProperties: false\n      properties:\n        cid:\n          type: string\n          index: true\n          description: CID of the file on IPFS\n        url:\n          type: string\n          readOnly: true\n          description: URL with IPFS scheme for the file\n        gatewayUrl:\n          type: string\n          readOnly: true\n          description: URL to access file via HTTP through an IPFS gateway\n\n    new-asset-payload:\n      additionalProperties: false\n      required:\n        - name\n      properties:\n        objectStoreId:\n          type: string\n          description: Object store ID where the asset is stored\n          writeOnly: true\n          example: 09F8B46C-61A0-4254-9875-F71F4C605BC7\n        name:\n          type: string\n          description:\n            Name of the asset. This is not necessarily the filename, can be a\n            custom name or title\n          example: filename.mp4\n        meta:\n          type: object\n          description: User input metadata associated with the asset\n          additionalProperties:\n            type: string\n          example:\n            {\n              \"title\": \"My awesome video\",\n              \"description\": \"This is a video of my awesome life\",\n              \"tags\": [\"awesome\", \"life\", \"video\"],\n            }\n        url:\n          type: string\n          format: uri\n          pattern: ^http(s)?://\n          description:\n            URL where the asset contents can be retrieved. Only valid for the\n            import task endpoint.\n          example: https://s3.amazonaws.com/my-bucket/path/filename.mp4\n\n    transcode-asset-payload:\n      additionalProperties: false\n      required:\n        - name\n        - profile\n      properties:\n        assetId:\n          type: string\n          description: ID of the asset to transcode\n        objectStoreId:\n          type: string\n          description: Object store ID where the asset is stored\n          writeOnly: true\n          example: 09F8B46C-61A0-4254-9875-F71F4C605BC7\n        name:\n          type: string\n          description:\n            Name of the asset. This is not necessarily the filename, can be a\n            custom name or title\n          example: filename.mp4\n        profile:\n          $ref: \"#/components/schemas/ffmpeg-profile\"\n\n    task:\n      type: object\n      table: task\n      additionalProperties: false\n      properties:\n        id:\n          type: string\n          readOnly: true\n          index: true\n          description: Task ID\n          example: 09F8B46C-61A0-4254-9875-F71F4C605BC7\n        userId:\n          type: string\n          readOnly: true\n          index: true\n          description: User ID of the task owner\n          example: 66E2161C-7670-4D05-B71D-DA2D6979556F\n        type:\n          type: string\n          description: Type of the task\n          enum:\n            - import\n            - export\n            - transcode\n        createdAt:\n          type: number\n          readOnly: true\n          description: Timestamp (in milliseconds) at which task was created\n          example: 1587667174725\n        deleted:\n          type: boolean\n          description: Set to true when the task is deleted\n        inputAssetId:\n          type: string\n          description: ID of the input asset\n          index: true\n          example: 09F8B46C-61A0-4254-9875-F71F4C605BC7\n        outputAssetId:\n          type: string\n          description: ID of the output asset\n          index: true\n          example: 09F8B46C-61A0-4254-9875-F71F4C605BC7\n        params:\n          type: object\n          additionalProperties: false\n          description: Parameters of the task\n          properties:\n            import:\n              type: object\n              additionalProperties: false\n              description: Parameters for the import task\n              properties:\n                url:\n                  type: string\n                  description: URL of the asset to import\n                  example: https://cdn.livepeer.com/ABC123/filename.mp4\n                recordedSessionId:\n                  type: string\n                  description:\n                    ID of the original recorded session to avoid re-transcoding\n                    of the same content.\n                  example: 78df0075-b5f3-4683-a618-1086faca35dc\n                uploadedObjectKey:\n                  type: string\n                  description: S3 object key of the uploaded asset\n                  example: ABC123/filename.mp4\n            export:\n              $ref: \"#/components/schemas/export-task-params\"\n            transcode:\n              type: object\n              additionalProperties: false\n              description: Parameters for the transcode task\n              properties:\n                profile:\n                  $ref: \"#/components/schemas/ffmpeg-profile\"\n        status:\n          type: object\n          additionalProperties: false\n          readOnly: true\n          description: Status of the task\n          required: [phase, updatedAt]\n          properties:\n            phase:\n              type: string\n              description: Phase of the task\n              enum:\n                - pending\n                - waiting\n                - running\n                - failed\n                - completed\n                - cancelled\n            updatedAt:\n              type: number\n              description: Timestamp (in milliseconds) at which task was updated\n              example: 1587667174725\n            progress:\n              type: number\n              description: Current progress of the task in a 0-1 ratio\n            errorMessage:\n              type: string\n              description: Error message if the task failed\n            retries:\n              type: number\n              description: Number of retries done on the task\n            step:\n              type: string\n              description: Step of the task processing\n        output:\n          type: object\n          additionalProperties: false\n          description: Output of the task\n          properties:\n            import:\n              type: object\n              additionalProperties: true\n              description: Output of the import task\n              properties:\n                videoFilePath:\n                  type: string\n                  writeOnly: true\n                metadataFilePath:\n                  type: string\n                  writeOnly: true\n                assetSpec:\n                  $ref: \"#/components/schemas/asset\"\n            export:\n              type: object\n              additionalProperties: false\n              description: Output of the export task\n              properties:\n                internal:\n                  writeOnly: true\n                  description: |\n                    Internal data of the export task that should not be returned\n                    to users. Contains internal tracking information like which\n                    service was used for the export in case it is maintained by\n                    us (e.g. the first-party piñata service).\n                ipfs:\n                  type: object\n                  additionalProperties: false\n                  required: [videoFileCid]\n                  properties:\n                    videoFileCid:\n                      type: string\n                      description: IPFS CID of the exported video file\n                    videoFileUrl:\n                      type: string\n                      readOnly: true\n                      description: URL for the file with the IPFS protocol\n                    videoFileGatewayUrl:\n                      type: string\n                      readOnly: true\n                      description:\n                        URL to access file via HTTP through an IPFS gateway\n                    nftMetadataCid:\n                      type: string\n                      description:\n                        IPFS CID of the default metadata exported for the video\n                    nftMetadataUrl:\n                      type: string\n                      readOnly: true\n                      description:\n                        URL for the metadata file with the IPFS protocol\n                    nftMetadataGatewayUrl:\n                      type: string\n                      readOnly: true\n                      description:\n                        URL to access metadata file via HTTP through an IPFS\n                        gateway\n            transcode:\n              type: object\n              additionalProperties: false\n              properties:\n                asset:\n                  type: object\n                  additionalProperties: true\n                  properties:\n                    videoFilePath:\n                      type: string\n                    metadataFilePath:\n                      type: string\n                    assetSpec:\n                      type: object\n                      $ref: \"#/components/schemas/asset\"\n\n    export-task-params:\n      description: Parameters for the export task\n      oneOf:\n        - type: object\n          additionalProperties: false\n          required: [custom]\n          properties:\n            custom:\n              type: object\n              description: custom URL parameters for the export task\n              additionalProperties: false\n              required: [url]\n              properties:\n                url:\n                  type: string\n                  format: uri\n                  pattern: ^http(s)?://\n                  description: URL where to export the asset\n                  example: https://s3.amazonaws.com/my-bucket/path/filename.mp4?X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=LLMMB\n                method:\n                  type: string\n                  description: Method to use on the export request\n                  default: PUT\n                headers:\n                  type: object\n                  description: Headers to add to the export request\n                  additionalProperties:\n                    type: string\n        - type: object\n          additionalProperties: false\n          required: [ipfs]\n          properties:\n            ipfs:\n              type: object\n              additionalProperties: false\n              properties:\n                $ref: \"#/components/schemas/asset/properties/storage/properties/ipfs/properties/spec/properties\"\n                pinata:\n                  description:\n                    Custom credentials for the Piñata service. Must have either\n                    a JWT or an API key and an API secret.\n                  oneOf:\n                    - type: object\n                      additionalProperties: false\n                      required: [jwt]\n                      properties:\n                        jwt:\n                          type: string\n                          writeOnly: true\n                          description:\n                            Will be added to the Authorization header as a\n                            Bearer token.\n                    - type: object\n                      additionalProperties: false\n                      required: [apiKey, apiSecret]\n                      properties:\n                        apiKey:\n                          type: string\n                          description:\n                            Will be added to the pinata_api_key header.\n                        apiSecret:\n                          type: string\n                          writeOnly: true\n                          description:\n                            Will be added to the pinata_secret_api_key header.\n\n    api-token:\n      type: object\n      additionalProperties: false\n      table: api_token\n      properties:\n        kind:\n          type: string\n          readOnly: true\n          example: user\n        id:\n          type: string\n          example: 09F8B46C-61A0-4254-9875-F71F4C605BC7\n        userId:\n          type: string\n          example: 66E2161C-7670-4D05-B71D-DA2D6979556F\n          index: true\n        name:\n          type: string\n          example: Example Token\n        access:\n          type: object\n          additionalProperties: false\n          properties:\n            cors:\n              type: object\n              additionalProperties: false\n              properties:\n                fullAccess:\n                  type: boolean\n                  description:\n                    Whether the token grants full access to the API. If false,\n                    the token will only have access to some pre-defined\n                    endpoints, not expose the whole account from the webpage.\n                  default: false\n                allowedOrigins:\n                  type: array\n                  description:\n                    Origins from which the token can be used. If empty, CORS\n                    will be prohibited by default (safest). To allow all origin\n                    values set this to `[*]`.\n                  default: []\n                  items:\n                    type: string\n                    example: https://example.com\n            rules:\n              type: array\n              default: [{ resources: [\"*\"] }]\n              items:\n                type: object\n                additionalProperties: false\n                required: [resources]\n                properties:\n                  resources:\n                    type: array\n                    minItems: 1\n                    items:\n                      type: string\n                  methods:\n                    type: array\n                    minItems: 1\n                    default: [\"*\"]\n                    items:\n                      type: string\n                      enum: [post, get, put, patch, delete, head, options, \"*\"]\n\n        lastSeen:\n          type: number\n          example: 1587667174725\n        createdAt:\n          type: number\n          readOnly: true\n          description:\n            Timestamp (in milliseconds) at which token object was created\n          example: 1587667174725\n\n    user-verification:\n      type: object\n      required:\n        - email\n        - emailValidToken\n      additionalProperties: false\n      properties:\n        email:\n          type: string\n          description: user email address\n          example: useremail@gmail.com\n          unique: true\n          index: true\n        emailValidToken:\n          type: string\n          example: E1F53135E559C253\n          writeOnly: true\n\n    verify-email:\n      type: object\n      required:\n        - email\n      additionalProperties: false\n      properties:\n        email:\n          type: string\n          description: user email address\n          example: useremail@gmail.com\n          unique: true\n\n    make-admin:\n      type: object\n      required:\n        - email\n        - admin\n      additionalProperties: false\n      properties:\n        email:\n          type: string\n          description: user email address\n          example: useremail@gmail.com\n        admin:\n          type: boolean\n          example: true\n\n    password-reset-token:\n      type: object\n      table: password_reset_token\n      required:\n        - kind\n        - userId\n        - resetToken\n        - expiration\n      additionalProperties: false\n      properties:\n        kind:\n          type: string\n          readOnly: true\n          enum: [password-reset-token]\n        userId:\n          type: string\n          example: 66E2161C-7670-4D05-B71D-DA2D6979556F\n          readOnly: true\n          index: true\n        resetToken:\n          type: string\n          example: E1F53135E559C253\n          writeOnly: true\n        expiration:\n          type: number\n          readOnly: true\n          description:\n            Timestamp (in milliseconds) at which reset token will be expired\n          example: 1587667174725\n\n    password-reset-token-request:\n      type: object\n      required:\n        - email\n      additionalProperties: false\n      properties:\n        email:\n          type: string\n          description: user email address\n          example: useremail@gmail.com\n\n    password-reset-confirm:\n      type: object\n      required:\n        - email\n        - resetToken\n        - password\n      additionalProperties: false\n      properties:\n        email:\n          type: string\n          description: user email address\n          example: useremail@gmail.com\n          index: true\n        resetToken:\n          type: string\n          example: E1F53135E559C253\n          writeOnly: true\n        password:\n          type: string\n          example: thisisapassword\n          minLength: 64\n          maxLength: 64\n        userId:\n          type: string\n          example: 66E2161C-7670-4D05-B71D-DA2D6979556F\n          index: true\n\n    create-customer:\n      type: object\n      required:\n        - email\n      additionalProperties: false\n      properties:\n        email:\n          type: string\n          description: user email address\n          example: useremail@gmail.com\n\n    create-subscription:\n      type: object\n      required:\n        - stripeCustomerId\n        - stripeProductId\n      additionalProperties: false\n      properties:\n        stripeCustomerId:\n          type: string\n          description: stripe customer id\n          example: cus_xxxxxxxxxxxxxx\n        stripeCustomerPaymentMethodId:\n          type: string\n          description: stripe payment method id\n          example: src_xxxxxxxxxxxxxxxxxxxxxxxx\n        stripeProductId:\n          type: string\n          description: stripe product id\n          enum:\n            - prod_0\n            - prod_1\n            - prod_2\n\n    update-subscription:\n      type: object\n      required:\n        - stripeCustomerId\n        - stripeProductId\n      additionalProperties: false\n      properties:\n        stripeCustomerId:\n          type: string\n          description: stripe customer id\n          example: cus_xxxxxxxxxxxxxx\n        stripeCustomerSubscriptionId:\n          type: string\n          description: stripe subscription id\n          example: sub_xxxxxxxxxxxxxx\n        stripeCustomerPaymentMethodId:\n          type: string\n          description: stripe payment method id\n          example: pm_xxxxxxxxxxxxxxxxxxxxxxxx\n        stripeProductId:\n          type: string\n          description: stripe product id\n          enum:\n            - prod_0\n            - prod_1\n            - prod_2\n\n    update-customer-payment-method:\n      type: object\n      required:\n        - stripeCustomerId\n        - stripeCustomerPaymentMethodId\n      additionalProperties: false\n      properties:\n        stripeCustomerId:\n          type: string\n          description: stripe customer id\n          example: cus_xxxxxxxxxxxxxx\n        stripeCustomerPaymentMethodId:\n          type: string\n          description: stripe payment method id\n          example: pm_xxxxxxxxxxxxxxxxxxxxxxxx\n\n    retrieve-customer-payment-method:\n      type: object\n      required:\n        - stripeCustomerPaymentMethodId\n      additionalProperties: false\n      properties:\n        stripeCustomerPaymentMethodId:\n          type: string\n          description: stripe payment method id\n          example: src_xxxxxxxxxxxxxxxxxxxxxxxx\n\n    region:\n      type: object\n      table: regions\n      required:\n        - region\n        - orchestrators\n      properties:\n        region:\n          type: string\n          description: region name\n          example: ber\n          unique: true\n          index: true\n        orchestrators:\n          type: array\n          items:\n            type: object\n            additionalProperties: false\n            required:\n              - address\n            properties:\n              address:\n                type: string\n\n    user:\n      type: object\n      table: users # 'user' is a keyword in postgres, this causes problems otherwise\n      required:\n        - email\n        - password\n      additionalProperties: false\n      properties:\n        email:\n          type: string\n          description: user email address\n          example: useremail@gmail.com\n          unique: true\n          index: true\n        password:\n          type: string\n          example: thisisapassword\n          minLength: 64\n          maxLength: 64\n          writeOnly: true\n        emailValidToken:\n          type: string\n          example: E1F53135E559C253\n          writeOnly: true\n        emailValid:\n          type: boolean\n          example: true\n        suspended:\n          type: boolean\n        salt:\n          type: string\n          example: E1F53135E559C253\n          writeOnly: true\n        admin:\n          type: boolean\n          example: true\n        kind:\n          type: string\n          readOnly: true\n          example: user\n        id:\n          type: string\n          readOnly: true\n          example: abc123\n        firstName:\n          type: string\n          example: Joe\n        lastName:\n          type: string\n          example: Smith\n        organization:\n          type: string\n          example: Livepeer\n        phone:\n          type: string\n          example: 2034212122\n        stripeProductId:\n          type: string\n          enum:\n            - prod_0\n            - prod_1\n            - prod_2\n        stripeCustomerId:\n          type: string\n          unique: true\n          example: cus_Jv6KvgT0DCH8HU\n        stripeCustomerPaymentMethodId:\n          type: string\n          example: pm_2FSSNNJfrKDAwlJ9n4EN15Du\n        stripeCustomerSubscriptionId:\n          type: string\n          example: sub_I29pdyfOTPBkjb\n        ccLast4:\n          type: string\n          example: 1234\n        ccBrand:\n          type: string\n          example: 1234\n        createdAt:\n          type: number\n          readOnly: true\n          description:\n            Timestamp (in milliseconds) at which user object was created\n          example: 1587667174725\n        verifiedAt:\n          type: number\n          description:\n            Timestamp (in milliseconds) at which user object was verified\n          example: 1587667174725\n        planChangedAt:\n          type: number\n          description:\n            Timestamp (in milliseconds) at which user object was verified\n          example: 1587667174725\n        lastStreamedAt:\n          type: number\n          description:\n            Timestamp (in milliseconds) at which user streamed RTMP stream last\n            time\n          example: 1587667174725\n        lastSeen:\n          type: number\n          description:\n            Timestamp (in milliseconds) at which user's password was used\n          example: 1587667174725\n        recaptchaToken:\n          type: string\n          example: 03AGdBq24blDQQCyt9BSYjS0YZ3-tZapaQ5xO2-oykG_4dS_91TzH9qOziOwXbff_QiDOsXmWKxqtOrmOEx7qjijNhbexBzvNjM6HbbhXcji1rKcxxQRsL-t3SbycwZuNXos9OjnrYmfV9F3zsy1o73ia5Wlw_Zcf1jwbm3n-yQ2epifcMHXJhsUrqmUe6a1J1mPaD2heHvCOS3vYm0rWijdMl2E4bXQf75BiWvbLKxCWv5ZF8279nCMcGyJBIw1kno-A0x5KTOlEVxV369nz12lkvRfOtRABKB49jMTygAc2BKh9GBlAYGO6PBPoIk7_BCo7I_hsHoJeT4c80ucOPraZby0QJM5jcCQcqVCYrcaPKPiUMcIEixIhB5FAfDs88uYqDWMcgZdMRKCvmxEC3ONDVDtq0nLMc4rniuC5sQTz1E4D6SR_Adik\n          description: Recaptcha v3 Token\n          writeOnly: true\n    usage:\n      type: object\n      table: usage\n      additionalProperties: false\n      properties:\n        id:\n          type: string\n          description: day associated with usage\n          example: 2021-01-30\n          unique: true\n          index: true\n        kind:\n          type: string\n          readOnly: true\n          example: usage\n        date:\n          type: number\n          readOnly: true\n          example: usage\n        sourceSegments:\n          type: number\n          example: 200000\n        transcodedSegments:\n          type: number\n          example: 200000\n        sourceSegmentsDuration:\n          type: number\n          example: 200000\n        transcodedSegmentsDuration:\n          type: number\n          example: 200000\n        streamCount:\n          type: number\n          example: 200000\n\npaths:\n  /stream:\n    tags:\n      - stream\n    post:\n      description: Creates a stream\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              $ref: \"#/components/schemas/stream\"\n\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/stream\"\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error\"\n\n    get:\n      description: Lists streams\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/stream\"\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error\"\n\n  /stream/{id}:\n    tags:\n      - stream\n    parameters:\n      - name: id\n        description: ID of the stream\n        in: path\n        required: true\n        schema:\n          type: string\n\n    get:\n      description: Gets a specific stream details\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/stream\"\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error\"\n\n    patch:\n      description: Patch a specific stream\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/stream-patch-payload\"\n      responses:\n        204:\n          description: Success\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error\"\n\n  /object-store:\n    tags:\n      - object-store\n    post:\n      description: Receives store credentials\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              $ref: \"#/components/schemas/object-store\"\n\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/object-store\"\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error\"\n\n    get:\n      description: Lists object store credentials by userId\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/object-store\"\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error\"\n\n  /multistream/target:\n    tags:\n      - multistream-target\n\n    get:\n      description: Lists existing multistream targets\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/multistream-target\"\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error\"\n\n    post:\n      description: Creates new multistream target\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/multistream-target\"\n      responses:\n        201:\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/multistream-target\"\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error\"\n\n  /multistream/target/{id}:\n    tags:\n      - multistream-target\n    parameters:\n      - name: id\n        description: ID of the multistream target\n        in: path\n        required: true\n        schema:\n          type: string\n\n    get:\n      description: Gets a specific multistream target details\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/multistream-target\"\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error\"\n\n    patch:\n      description: Enables or disables an existing multistream target\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/multistream-target-patch-payload\"\n      responses:\n        204:\n          description: Success\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error\"\n\n    delete:\n      description: Deletes an existing multistream target\n      responses:\n        204:\n          description: Success\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error\"\n\n  /user-verification:\n    tags:\n      - verification\n    post:\n      description: Verifies user email\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              $ref: \"#/components/schemas/user-verification\"\n\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/user-verification\"\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error\"\n\n  /password-reset-token:\n    tags:\n      - password-reset\n    post:\n      description: Creates a password reset token\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              $ref: \"#/components/schemas/password-reset-token-request\"\n\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/password-reset-token\"\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error\"\n\n  /password-reset:\n    tags:\n      - password-reset\n    post:\n      description: Confirms password reset token\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              $ref: \"#/components/schemas/password-reset-confirm\"\n\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/user\"\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error\"\n\n  /verify-email:\n    tags:\n      - verify-email\n    post:\n      description: Resend User Email Verification\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              $ref: \"#/components/schemas/verify-email\"\n\n      responses:\n        200:\n          description: Success\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error\"\n\n  /make-admin:\n    tags:\n      - make-admin\n    post:\n      description: Changes user admin status\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              $ref: \"#/components/schemas/make-admin\"\n\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: object\n                items:\n                  $ref: \"#/components/schemas/user\"\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error\"\n\n  /user/token:\n    tags:\n      - login\n    post:\n      description: Receives user login information\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              $ref: \"#/components/schemas/user\"\n\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/user\"\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error\"\n\n  /user:\n    tags:\n      - user\n    post:\n      description: Receives user information\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              $ref: \"#/components/schemas/user\"\n\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/user\"\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error\"\n    get:\n      description: Lists users\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/user\"\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error\"\n\n  /user/{id}:\n    patch:\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      description: updates a user\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/user\"\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error\"\n\n  /api-token:\n    tags:\n      - api-token\n    post:\n      description: Contains api token information\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              $ref: \"#/components/schemas/api-token\"\n\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/api-token\"\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error\"\n\n    get:\n      description: Lists api tokens\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/api-token\"\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/api-token\"\n\n  /webhook:\n    tags:\n      - webhook\n    get:\n      description: gets a list of webhooks defined by the user\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/webhook\"\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error\"\n    post:\n      description: creates a new webhook\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/webhook\"\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error\"\n\n  /webhook/{id}:\n    tags:\n      - webhook\n    get:\n      description: gets a specific webhook details\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/webhook\"\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error\"\n    put:\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      description: updates a specific webhook\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/webhook\"\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error\"\n    delete:\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      description: deletes a specific webhook details\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/webhook\"\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error\"\n\n  /asset:\n    tags:\n      - asset\n    get:\n      description: gets a list of assets defined by the user\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/asset\"\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error\"\n\n  /region/{region}:\n    tags:\n      - regions\n    get:\n      description: get a regions list of orchestrators\n      parameters:\n        - name: region\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/region\"\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error\"\n    put:\n      parameters:\n        - name: region\n          in: path\n          required: true\n          schema:\n            type: string\n      description: updates a specific region\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/region\"\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error\"\n    delete:\n      parameters:\n        - name: region\n          in: path\n          required: true\n          schema:\n            type: string\n      description: deletes a specific region\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/webhook\"\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error\"\n",
			"canonicalURL": "/github.com/livepeer/studio@d6044aa93def3124a0ab1426341c6f413f4210e6/-/blob/packages/api/src/schema/schema.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/livepeer/studio/blob/d6044aa93def3124a0ab1426341c6f413f4210e6/packages/api/src/schema/schema.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 1: cannot unmarshal !!str `#/compo...` into ogen.Schema; yaml: line 1: cannot unmarshal !!seq into string; yaml: line 1: cannot unmarshal !!str `#/compo...` into ogen.Schema"
}