{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/httpbin.org/0.9.2/openapi.yaml",
			"byteSize": 27829,
			"content": "openapi: 3.0.0\nservers:\n  - url: https://httpbin.org\ninfo:\n  contact:\n    email: me@kennethreitz.org\n    url: https://kennethreitz.org\n    x-responsibleDeveloper: Kenneth Reitz\n    x-responsibleOrganization: Kenneth Reitz\n  description: \"A simple HTTP Request & Response Service.<br/> <br/> <b>Run locally: </b> <code>$ docker run -p 80:80 kennethreitz/httpbin</code>\"\n  title: httpbin.org\n  version: 0.9.2\n  x-apisguru-categories:\n    - developer_tools\n  x-origin:\n    - format: swagger\n      url: http://httpbin.org/spec.json\n      version: \"2.0\"\n  x-providerName: httpbin.org\ntags:\n  - description: Testing different HTTP verbs\n    name: HTTP Methods\n  - description: Auth methods\n    name: Auth\n  - description: Generates responses with given status code\n    name: Status codes\n  - description: Inspect the request data\n    name: Request inspection\n  - description: Inspect the response data like caching and headers\n    name: Response inspection\n  - description: Returns responses in different data formats\n    name: Response formats\n  - description: Generates random and dynamic data\n    name: Dynamic data\n  - description: Creates, reads and deletes Cookies\n    name: Cookies\n  - description: Returns different image formats\n    name: Images\n  - description: Returns different redirect responses\n    name: Redirects\n  - description: Returns anything that is passed to request\n    name: Anything\npaths:\n  \"/absolute-redirect/{n}\":\n    get:\n      parameters:\n        - in: path\n          name: n\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"302\":\n          description: A redirection.\n      summary: Absolutely 302 Redirects n times.\n      tags:\n        - Redirects\n  /anything:\n    delete:\n      responses:\n        \"200\":\n          description: Anything passed in request\n      summary: Returns anything passed in request data.\n      tags:\n        - Anything\n    get:\n      responses:\n        \"200\":\n          description: Anything passed in request\n      summary: Returns anything passed in request data.\n      tags:\n        - Anything\n    patch:\n      responses:\n        \"200\":\n          description: Anything passed in request\n      summary: Returns anything passed in request data.\n      tags:\n        - Anything\n    post:\n      responses:\n        \"200\":\n          description: Anything passed in request\n      summary: Returns anything passed in request data.\n      tags:\n        - Anything\n    put:\n      responses:\n        \"200\":\n          description: Anything passed in request\n      summary: Returns anything passed in request data.\n      tags:\n        - Anything\n    trace:\n      responses:\n        \"200\":\n          description: Anything passed in request\n      summary: Returns anything passed in request data.\n      tags:\n        - Anything\n  \"/anything/{anything}\":\n    delete:\n      parameters:\n        - description: Automatically added\n          in: path\n          name: anything\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Anything passed in request\n      summary: Returns anything passed in request data.\n      tags:\n        - Anything\n    get:\n      parameters:\n        - description: Automatically added\n          in: path\n          name: anything\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Anything passed in request\n      summary: Returns anything passed in request data.\n      tags:\n        - Anything\n    patch:\n      parameters:\n        - description: Automatically added\n          in: path\n          name: anything\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Anything passed in request\n      summary: Returns anything passed in request data.\n      tags:\n        - Anything\n    post:\n      parameters:\n        - description: Automatically added\n          in: path\n          name: anything\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Anything passed in request\n      summary: Returns anything passed in request data.\n      tags:\n        - Anything\n    put:\n      parameters:\n        - description: Automatically added\n          in: path\n          name: anything\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Anything passed in request\n      summary: Returns anything passed in request data.\n      tags:\n        - Anything\n    trace:\n      parameters:\n        - description: Automatically added\n          in: path\n          name: anything\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Anything passed in request\n      summary: Returns anything passed in request data.\n      tags:\n        - Anything\n  \"/base64/{value}\":\n    get:\n      parameters:\n        - in: path\n          name: value\n          required: true\n          schema:\n            default: SFRUUEJJTiBpcyBhd2Vzb21l\n            type: string\n      responses:\n        \"200\":\n          description: Decoded base64 content.\n      summary: Decodes base64url-encoded string.\n      tags:\n        - Dynamic data\n  \"/basic-auth/{user}/{passwd}\":\n    get:\n      parameters:\n        - in: path\n          name: user\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: passwd\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Sucessful authentication.\n        \"401\":\n          description: Unsuccessful authentication.\n      summary: Prompts the user for authorization using HTTP Basic Auth.\n      tags:\n        - Auth\n  /bearer:\n    get:\n      parameters:\n        - in: header\n          name: Authorization\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Sucessful authentication.\n        \"401\":\n          description: Unsuccessful authentication.\n      summary: Prompts the user for authorization using bearer authentication.\n      tags:\n        - Auth\n  /brotli:\n    get:\n      responses:\n        \"200\":\n          description: Brotli-encoded data.\n      summary: Returns Brotli-encoded data.\n      tags:\n        - Response formats\n  \"/bytes/{n}\":\n    get:\n      parameters:\n        - in: path\n          name: n\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: Bytes.\n      summary: Returns n random bytes generated with given seed\n      tags:\n        - Dynamic data\n  /cache:\n    get:\n      parameters:\n        - in: header\n          name: If-Modified-Since\n          schema:\n            type: string\n        - in: header\n          name: If-None-Match\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Cached response\n        \"304\":\n          description: Modified\n      summary: Returns a 304 if an If-Modified-Since header or If-None-Match is present. Returns the same as a GET otherwise.\n      tags:\n        - Response inspection\n  \"/cache/{value}\":\n    get:\n      parameters:\n        - in: path\n          name: value\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: Cache control set\n      summary: Sets a Cache-Control header for n seconds.\n      tags:\n        - Response inspection\n  /cookies:\n    get:\n      responses:\n        \"200\":\n          description: Set cookies.\n      summary: Returns cookie data.\n      tags:\n        - Cookies\n  /cookies/delete:\n    get:\n      parameters:\n        - allowEmptyValue: true\n          explode: true\n          in: query\n          name: freeform\n          schema:\n            additionalProperties:\n              type: string\n            type: string\n          style: form\n      responses:\n        \"200\":\n          description: Redirect to cookie list\n      summary: Deletes cookie(s) as provided by the query string and redirects to cookie list.\n      tags:\n        - Cookies\n  /cookies/set:\n    get:\n      parameters:\n        - allowEmptyValue: true\n          explode: true\n          in: query\n          name: freeform\n          schema:\n            additionalProperties:\n              type: string\n            type: string\n          style: form\n      responses:\n        \"200\":\n          description: Redirect to cookie list\n      summary: Sets cookie(s) as provided by the query string and redirects to cookie list.\n      tags:\n        - Cookies\n  \"/cookies/set/{name}/{value}\":\n    get:\n      parameters:\n        - in: path\n          name: name\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: value\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Set cookies and redirects to cookie list.\n      summary: Sets a cookie and redirects to cookie list.\n      tags:\n        - Cookies\n  /deflate:\n    get:\n      responses:\n        \"200\":\n          description: Defalte-encoded data.\n      summary: Returns Deflate-encoded data.\n      tags:\n        - Response formats\n  \"/delay/{delay}\":\n    delete:\n      parameters:\n        - in: path\n          name: delay\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: A delayed response.\n      summary: Returns a delayed response (max of 10 seconds).\n      tags:\n        - Dynamic data\n    get:\n      parameters:\n        - in: path\n          name: delay\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: A delayed response.\n      summary: Returns a delayed response (max of 10 seconds).\n      tags:\n        - Dynamic data\n    patch:\n      parameters:\n        - in: path\n          name: delay\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: A delayed response.\n      summary: Returns a delayed response (max of 10 seconds).\n      tags:\n        - Dynamic data\n    post:\n      parameters:\n        - in: path\n          name: delay\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: A delayed response.\n      summary: Returns a delayed response (max of 10 seconds).\n      tags:\n        - Dynamic data\n    put:\n      parameters:\n        - in: path\n          name: delay\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: A delayed response.\n      summary: Returns a delayed response (max of 10 seconds).\n      tags:\n        - Dynamic data\n    trace:\n      parameters:\n        - in: path\n          name: delay\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: A delayed response.\n      summary: Returns a delayed response (max of 10 seconds).\n      tags:\n        - Dynamic data\n  /delete:\n    delete:\n      responses:\n        \"200\":\n          description: The request's DELETE parameters.\n      summary: The request's DELETE parameters.\n      tags:\n        - HTTP Methods\n  /deny:\n    get:\n      responses:\n        \"200\":\n          description: Denied message\n      summary: Returns page denied by robots.txt rules.\n      tags:\n        - Response formats\n  \"/digest-auth/{qop}/{user}/{passwd}\":\n    get:\n      parameters:\n        - description: auth or auth-int\n          in: path\n          name: qop\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: user\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: passwd\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Sucessful authentication.\n        \"401\":\n          description: Unsuccessful authentication.\n      summary: Prompts the user for authorization using Digest Auth.\n      tags:\n        - Auth\n  \"/digest-auth/{qop}/{user}/{passwd}/{algorithm}\":\n    get:\n      parameters:\n        - description: auth or auth-int\n          in: path\n          name: qop\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: user\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: passwd\n          required: true\n          schema:\n            type: string\n        - description: MD5, SHA-256, SHA-512\n          in: path\n          name: algorithm\n          required: true\n          schema:\n            default: MD5\n            type: string\n      responses:\n        \"200\":\n          description: Sucessful authentication.\n        \"401\":\n          description: Unsuccessful authentication.\n      summary: Prompts the user for authorization using Digest Auth + Algorithm.\n      tags:\n        - Auth\n  \"/digest-auth/{qop}/{user}/{passwd}/{algorithm}/{stale_after}\":\n    get:\n      description: |\n        allow settings the stale_after argument.\n      parameters:\n        - description: auth or auth-int\n          in: path\n          name: qop\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: user\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: passwd\n          required: true\n          schema:\n            type: string\n        - description: MD5, SHA-256, SHA-512\n          in: path\n          name: algorithm\n          required: true\n          schema:\n            default: MD5\n            type: string\n        - in: path\n          name: stale_after\n          required: true\n          schema:\n            default: never\n            type: string\n      responses:\n        \"200\":\n          description: Sucessful authentication.\n        \"401\":\n          description: Unsuccessful authentication.\n      summary: Prompts the user for authorization using Digest Auth + Algorithm.\n      tags:\n        - Auth\n  /drip:\n    get:\n      parameters:\n        - description: The amount of time (in seconds) over which to drip each byte\n          in: query\n          name: duration\n          required: false\n          schema:\n            default: 2\n            type: number\n        - description: The number of bytes to respond with\n          in: query\n          name: numbytes\n          required: false\n          schema:\n            default: 10\n            type: integer\n        - description: The response code that will be returned\n          in: query\n          name: code\n          required: false\n          schema:\n            default: 200\n            type: integer\n        - description: The amount of time (in seconds) to delay before responding\n          in: query\n          name: delay\n          required: false\n          schema:\n            default: 2\n            type: number\n      responses:\n        \"200\":\n          description: A dripped response.\n      summary: Drips data over a duration after an optional initial delay.\n      tags:\n        - Dynamic data\n  /encoding/utf8:\n    get:\n      responses:\n        \"200\":\n          description: Encoded UTF-8 content.\n      summary: Returns a UTF-8 encoded body.\n      tags:\n        - Response formats\n  \"/etag/{etag}\":\n    get:\n      parameters:\n        - in: header\n          name: If-None-Match\n          schema:\n            type: string\n        - in: header\n          name: If-Match\n          schema:\n            type: string\n        - description: Automatically added\n          in: path\n          name: etag\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Normal response\n        \"412\":\n          description: match\n      summary: Assumes the resource has the given etag and responds to If-None-Match and If-Match headers appropriately.\n      tags:\n        - Response inspection\n  /get:\n    get:\n      responses:\n        \"200\":\n          description: The request's query parameters.\n      summary: The request's query parameters.\n      tags:\n        - HTTP Methods\n  /gzip:\n    get:\n      responses:\n        \"200\":\n          description: GZip-encoded data.\n      summary: Returns GZip-encoded data.\n      tags:\n        - Response formats\n  /headers:\n    get:\n      responses:\n        \"200\":\n          description: The request's headers.\n      summary: Return the incoming request's HTTP headers.\n      tags:\n        - Request inspection\n  \"/hidden-basic-auth/{user}/{passwd}\":\n    get:\n      parameters:\n        - in: path\n          name: user\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: passwd\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Sucessful authentication.\n        \"404\":\n          description: Unsuccessful authentication.\n      summary: Prompts the user for authorization using HTTP Basic Auth.\n      tags:\n        - Auth\n  /html:\n    get:\n      responses:\n        \"200\":\n          description: An HTML page.\n      summary: Returns a simple HTML document.\n      tags:\n        - Response formats\n  /image:\n    get:\n      responses:\n        \"200\":\n          description: An image.\n      summary: Returns a simple image of the type suggest by the Accept header.\n      tags:\n        - Images\n  /image/jpeg:\n    get:\n      responses:\n        \"200\":\n          description: A JPEG image.\n      summary: Returns a simple JPEG image.\n      tags:\n        - Images\n  /image/png:\n    get:\n      responses:\n        \"200\":\n          description: A PNG image.\n      summary: Returns a simple PNG image.\n      tags:\n        - Images\n  /image/svg:\n    get:\n      responses:\n        \"200\":\n          description: An SVG image.\n      summary: Returns a simple SVG image.\n      tags:\n        - Images\n  /image/webp:\n    get:\n      responses:\n        \"200\":\n          description: A WEBP image.\n      summary: Returns a simple WEBP image.\n      tags:\n        - Images\n  /ip:\n    get:\n      responses:\n        \"200\":\n          description: The Requester's IP Address.\n      summary: Returns the requester's IP Address.\n      tags:\n        - Request inspection\n  /json:\n    get:\n      responses:\n        \"200\":\n          description: An JSON document.\n      summary: Returns a simple JSON document.\n      tags:\n        - Response formats\n  \"/links/{n}/{offset}\":\n    get:\n      parameters:\n        - in: path\n          name: n\n          required: true\n          schema:\n            type: integer\n        - in: path\n          name: offset\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: HTML links.\n      summary: Generate a page containing n links to other pages which do the same.\n      tags:\n        - Dynamic data\n  /patch:\n    patch:\n      responses:\n        \"200\":\n          description: The request's PATCH parameters.\n      summary: The request's PATCH parameters.\n      tags:\n        - HTTP Methods\n  /post:\n    post:\n      responses:\n        \"200\":\n          description: The request's POST parameters.\n      summary: The request's POST parameters.\n      tags:\n        - HTTP Methods\n  /put:\n    put:\n      responses:\n        \"200\":\n          description: The request's PUT parameters.\n      summary: The request's PUT parameters.\n      tags:\n        - HTTP Methods\n  \"/range/{numbytes}\":\n    get:\n      parameters:\n        - in: path\n          name: numbytes\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: Bytes.\n      summary: Streams n random bytes generated with given seed, at given chunk size per packet.\n      tags:\n        - Dynamic data\n  /redirect-to:\n    delete:\n      responses:\n        \"302\":\n          description: A redirection.\n      summary: 302/3XX Redirects to the given URL.\n      tags:\n        - Redirects\n    get:\n      parameters:\n        - in: query\n          name: url\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: status_code\n          schema:\n            type: integer\n      responses:\n        \"302\":\n          description: A redirection.\n      summary: 302/3XX Redirects to the given URL.\n      tags:\n        - Redirects\n    patch:\n      responses:\n        \"302\":\n          description: A redirection.\n      summary: 302/3XX Redirects to the given URL.\n      tags:\n        - Redirects\n    post:\n      requestBody:\n        $ref: \"#/components/requestBodies/postRedirectTo\"\n      responses:\n        \"302\":\n          description: A redirection.\n      summary: 302/3XX Redirects to the given URL.\n      tags:\n        - Redirects\n    put:\n      requestBody:\n        $ref: \"#/components/requestBodies/postRedirectTo\"\n      responses:\n        \"302\":\n          description: A redirection.\n      summary: 302/3XX Redirects to the given URL.\n      tags:\n        - Redirects\n    trace:\n      responses:\n        \"302\":\n          description: A redirection.\n      summary: 302/3XX Redirects to the given URL.\n      tags:\n        - Redirects\n  \"/redirect/{n}\":\n    get:\n      parameters:\n        - in: path\n          name: n\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"302\":\n          description: A redirection.\n      summary: 302 Redirects n times.\n      tags:\n        - Redirects\n  \"/relative-redirect/{n}\":\n    get:\n      parameters:\n        - in: path\n          name: n\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"302\":\n          description: A redirection.\n      summary: Relatively 302 Redirects n times.\n      tags:\n        - Redirects\n  /response-headers:\n    get:\n      parameters:\n        - allowEmptyValue: true\n          explode: true\n          in: query\n          name: freeform\n          schema:\n            additionalProperties:\n              type: string\n            type: string\n          style: form\n      responses:\n        \"200\":\n          description: Response headers\n      summary: Returns a set of response headers from the query string.\n      tags:\n        - Response inspection\n    post:\n      parameters:\n        - allowEmptyValue: true\n          explode: true\n          in: query\n          name: freeform\n          schema:\n            additionalProperties:\n              type: string\n            type: string\n          style: form\n      responses:\n        \"200\":\n          description: Response headers\n      summary: Returns a set of response headers from the query string.\n      tags:\n        - Response inspection\n  /robots.txt:\n    get:\n      responses:\n        \"200\":\n          description: Robots file\n      summary: Returns some robots.txt rules.\n      tags:\n        - Response formats\n  \"/status/{codes}\":\n    delete:\n      parameters:\n        - in: path\n          name: codes\n          required: true\n          schema:\n            type: string\n      responses:\n        \"100\":\n          description: Informational responses\n        \"200\":\n          description: Success\n        \"300\":\n          description: Redirection\n        \"400\":\n          description: Client Errors\n        \"500\":\n          description: Server Errors\n      summary: Return status code or random status code if more than one are given\n      tags:\n        - Status codes\n    get:\n      parameters:\n        - in: path\n          name: codes\n          required: true\n          schema:\n            type: string\n      responses:\n        \"100\":\n          description: Informational responses\n        \"200\":\n          description: Success\n        \"300\":\n          description: Redirection\n        \"400\":\n          description: Client Errors\n        \"500\":\n          description: Server Errors\n      summary: Return status code or random status code if more than one are given\n      tags:\n        - Status codes\n    patch:\n      parameters:\n        - in: path\n          name: codes\n          required: true\n          schema:\n            type: string\n      responses:\n        \"100\":\n          description: Informational responses\n        \"200\":\n          description: Success\n        \"300\":\n          description: Redirection\n        \"400\":\n          description: Client Errors\n        \"500\":\n          description: Server Errors\n      summary: Return status code or random status code if more than one are given\n      tags:\n        - Status codes\n    post:\n      parameters:\n        - in: path\n          name: codes\n          required: true\n          schema:\n            type: string\n      responses:\n        \"100\":\n          description: Informational responses\n        \"200\":\n          description: Success\n        \"300\":\n          description: Redirection\n        \"400\":\n          description: Client Errors\n        \"500\":\n          description: Server Errors\n      summary: Return status code or random status code if more than one are given\n      tags:\n        - Status codes\n    put:\n      parameters:\n        - in: path\n          name: codes\n          required: true\n          schema:\n            type: string\n      responses:\n        \"100\":\n          description: Informational responses\n        \"200\":\n          description: Success\n        \"300\":\n          description: Redirection\n        \"400\":\n          description: Client Errors\n        \"500\":\n          description: Server Errors\n      summary: Return status code or random status code if more than one are given\n      tags:\n        - Status codes\n    trace:\n      parameters:\n        - in: path\n          name: codes\n          required: true\n          schema:\n            type: string\n      responses:\n        \"100\":\n          description: Informational responses\n        \"200\":\n          description: Success\n        \"300\":\n          description: Redirection\n        \"400\":\n          description: Client Errors\n        \"500\":\n          description: Server Errors\n      summary: Return status code or random status code if more than one are given\n      tags:\n        - Status codes\n  \"/stream-bytes/{n}\":\n    get:\n      parameters:\n        - in: path\n          name: n\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: Bytes.\n      summary: Streams n random bytes generated with given seed, at given chunk size per packet.\n      tags:\n        - Dynamic data\n  \"/stream/{n}\":\n    get:\n      parameters:\n        - in: path\n          name: n\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: Streamed JSON responses.\n      summary: Stream n JSON responses\n      tags:\n        - Dynamic data\n  /user-agent:\n    get:\n      responses:\n        \"200\":\n          description: The request's User-Agent header.\n      summary: Return the incoming requests's User-Agent header.\n      tags:\n        - Request inspection\n  /uuid:\n    get:\n      responses:\n        \"200\":\n          description: A UUID4.\n      summary: Return a UUID4.\n      tags:\n        - Dynamic data\n  /xml:\n    get:\n      responses:\n        \"200\":\n          description: An XML document.\n      summary: Returns a simple XML document.\n      tags:\n        - Response formats\ncomponents:\n  requestBodies:\n    postRedirectTo:\n      content:\n        application/x-www-form-urlencoded:\n          schema:\n            properties:\n              status_code:\n                type: integer\n              url:\n                type: string\n            required:\n              - url\n            type: object\n      required: true\nx-protocol: https\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@3237843a76543b0ee2c1e5f65e28ec6b526e8700/-/blob/APIs/httpbin.org/0.9.2/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/3237843a76543b0ee2c1e5f65e28ec6b526e8700/APIs/httpbin.org/0.9.2/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: json: line 1:914: json: cannot unmarshal Go value of type ogen.Spec: spec: json: cannot unmarshal JSON boolean into Go value of type string"
}