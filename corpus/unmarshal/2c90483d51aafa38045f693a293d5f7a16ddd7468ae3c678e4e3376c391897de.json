{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/bigcommerce/api-specs"
		},
		"file": {
			"name": "orders.v2.oas2.yml",
			"size": 0,
			"path": "reference/orders.v2.oas2.yml",
			"byteSize": 188275,
			"content": "openapi: 3.0.0\ninfo:\n  version: ''\n  title: Orders V2\n  description: |-\n    Manage order coupons, messages, products, shipping addresses, statuses, taxes, shipments, and shipping address quotes.\n\n    ## Authentication\n\n    Authenticate requests by including an [OAuth](/api-docs/getting-started/authentication/rest-api-authentication) `access_token` request header.\n\n    ```http\n    GET https://api.bigcommerce.com/stores/{{STORE_HASH}}/v3/{{ENDPOINT}}\n    Content-Type: application/json\n    X-Auth-Token: {{ACCESS_TOKEN}}\n    ```\n\n    ### OAuth Scopes\n\n    |  **UI Name** | **Permission** | **Parameter** |\n    | --- | --- | --- |\n    |  Orders | modify | `store_v2_orders` |\n    |  Orders | read-only | `store_v2_orders_read_only` |\n\n\n    ## Order\n\n    The Order object contains a record of the purchase agreement between a shopper and a merchant. To learn more about creating orders, see [Orders API Guide](/api-docs/orders/orders-api-overview).\n\n    ### Currency Fields\n\n    The **default** currency refers to the transactional currency which is the currency the shopper pays in.\n\n    The **display** currency refers to the presentational currency used to present prices to the shopper on the storefront.\n\n    * `currency_id` - the display currency ID. Depending on the currency selected, the value may be different from the transactional currency.\n    * `currency_code` - the currency code of the display currency used to present prices to the shopper on the storefront. Depending on the currency selected, the value may be different from the transactional currency.\n    * `currency_exchange_rate` - the exchange rate between the store’s default currency and the display currency. For orders created using the V2 endpoints, this value is always 1 (only in the storefront this value can be different to 1).\n    * `default_currency_id` - the transactional currency ID.\n    * `default_currency_code` - the currency code of the transactional currency the shopper pays in.\n\n    The following additional fields are returned on orders when Multi-Currency is enabled on the store:\n\n    * `store_default_currency_code` - the currency code of the store’s default currency.\n    * `store_default_to_transactional_exchange_rate` - the exchange rate between the store’s default currency and the transactional currency used in the order.\n\n    **Example:**\n\n    ```json\n    {\n      ...\n      \"currency_id\": 4,\n      \"currency_code\": \"EUR\",\n      \"currency_exchange_rate\": 1,\n      \"default_currency_id\": 4,\n      \"default_currency_code\": \"EUR\",\n      \"store_default_currency_code\": \"USD\",\n      \"store_default_to_transactional_exchange_rate\": \"100.0000000000\"\n      ...\n    }\n    ```\npaths:\n  '/stores/{store_hash}/v2/orders/{order_id}':\n    get:\n      description: 'Gets an *Order*. To learn more about creating or updating orders, see [Orders Overview](/api-docs/orders/orders-api-overview).'\n      summary: Get an Order\n      tags:\n        - Orders\n      parameters:\n        - name: Accept\n          in: header\n          required: true\n          description: ''\n          schema:\n            type: string\n            default: application/json\n        - name: Content-Type\n          in: header\n          required: true\n          description: ''\n          schema:\n            type: string\n            default: application/json\n      responses:\n        '200':\n          $ref: '#/components/responses/order_Resp'\n        '404':\n          description: '\"The requested resource was not found.\"'\n          content:\n            application/json:\n              schema: {}\n      operationId: getAnOrder\n    put:\n      description: |-\n        Updates an *Order*. \n\n        To add a product to an existing order, don't include `id` in the body. Include `product_options` if adding a product with variants.\n\n        To update a product in an order, include `id` in the body. The body should only contain the fields that need to be updated. Those fields that are omitted will not be changed.\n\n        To remove a product from an order, set that product’s `quantity` to `0`.\n\n        To learn more about creating or updating orders, see [Orders Overview](/api-docs/orders/orders-api-overview).\n      summary: Update an Order\n      tags:\n        - Orders\n      parameters:\n        - $ref: '#/components/parameters/Accept'\n        - $ref: '#/components/parameters/Content-Type'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/order_Put'\n            examples:\n              application/json:\n                value:\n                  status_id: 0\n                  customer_id: 11\n                  billing_address:\n                    first_name: Jane\n                    last_name: Doe\n                    street_1: 123 Main Street\n                    city: Austin\n                    state: Texas\n                    zip: '78751'\n                    country: United States\n                    country_iso2: US\n                    email: janedoe@example.com\n                  shipping_addresses:\n                    - first_name: Trish\n                      last_name: Test\n                      company: Acme Pty Ltd\n                      street_1: 666 Sussex St\n                      city: Austin\n                      state: Texas\n                      zip: '78751'\n                      country: United States\n                      country_iso2: US\n                      email: elsie@example.com\n                  products:\n                    - name: BigCommerce Poster\n                      quantity: 1\n                      price_inc_tax: 10.98\n                      price_ex_tax: 10\n                    - name: BigCommerce Coffee Mug\n                      quantity: 1\n                      price_inc_tax: 50\n                      price_ex_tax: 45\n                    - product_id: 184\n                      product_options:\n                        - id: 200\n                          value: '180'\n                        - id: 230\n                          value: '192'\n                  customer_locale: en\n              Adding an existing product to order:\n                value:\n                  products:\n                    - product_id: 123\n                      quantity: 5\n                      product_options:\n                        id: 56\n                        value: 12\n                      price_inc_tax: 12.45\n                      price_ex_tax: 10.12\n              Adding a new product to order:\n                value:\n                  products:\n                    - name: BigCommerce Coffee Mug\n                      quantity: 1\n                      price_inc_tax: 12.45\n                      price_ex_tax: 10.12\n                      sku: MUG-GRY\n              Removing a product from an order:\n                value:\n                  products:\n                    - product_id: 123\n                      quantity: 0\n                      product_options:\n                        id: 56\n                        value: 12\n                      price_inc_tax: 12.45\n                      price_ex_tax: 10.12\n        required: true\n      responses:\n        '200':\n          $ref: '#/components/responses/order_Resp'\n      operationId: updateAnOrder\n    delete:\n      description: 'Archives an order. To remove a single product from an order, see `PUT /orders/{order_id}`.'\n      summary: Archive an Order\n      tags:\n        - Orders\n      parameters:\n        - $ref: '#/components/parameters/order_id_path'\n        - $ref: '#/components/parameters/Accept'\n        - $ref: '#/components/parameters/Content-Type'\n      responses:\n        '204':\n          description: ''\n      operationId: deleteAnOrder\n    parameters:\n      - in: path\n        name: order_id\n        description: ID of the order.\n        required: true\n        schema:\n          type: integer\n      - schema:\n          type: string\n        name: store_hash\n        in: path\n        required: true\n  '/stores/{store_hash}/v2/orders/count':\n    get:\n      description: Gets an array of orders in the store organized by order status.\n      summary: Get a Count of Orders\n      tags:\n        - Orders\n      parameters:\n        - $ref: '#/components/parameters/Accept'\n        - $ref: '#/components/parameters/Content-Type'\n      responses:\n        '200':\n          $ref: '#/components/responses/ordersCount_Resp'\n      operationId: getCountOrder\n    parameters:\n      - schema:\n          type: string\n        name: store_hash\n        in: path\n        required: true\n  '/stores/{store_hash}/v2/orders':\n    get:\n      description: |-\n        Gets a list of orders using the filter query.\n\n        **Notes**\n\n        The default sort is by order id, from lowest to highest.\n      tags:\n        - Orders\n      parameters:\n        - $ref: '#/components/parameters/Accept'\n        - $ref: '#/components/parameters/Content-Type'\n        - $ref: '#/components/parameters/min_id'\n        - $ref: '#/components/parameters/max_id'\n        - $ref: '#/components/parameters/min_total'\n        - $ref: '#/components/parameters/max_total'\n        - $ref: '#/components/parameters/customer_id'\n        - $ref: '#/components/parameters/email'\n        - $ref: '#/components/parameters/status_id'\n        - $ref: '#/components/parameters/cart_id'\n        - $ref: '#/components/parameters/payment_method'\n        - $ref: '#/components/parameters/min_date_created'\n        - $ref: '#/components/parameters/max_date_created'\n        - $ref: '#/components/parameters/min_date_modified'\n        - $ref: '#/components/parameters/max_date_modified'\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/sort'\n        - $ref: '#/components/parameters/is_deleted'\n        - $ref: '#/components/parameters/channel_id'\n      responses:\n        '200':\n          $ref: '#/components/responses/orderCollection_Resp'\n      summary: Get All Orders\n      operationId: getAllOrders\n    post:\n      description: |-\n        Creates an *Order*. To learn more about creating or updating orders, see [Orders Overview](/api-docs/orders/orders-api-overview).\n\n        An order can be created with an existing catalog product or a custom product.\n\n        **Required Fields**\n\n        *   products\n        *   billing_address\n      summary: Create an Order\n      tags:\n        - Orders\n      parameters:\n        - $ref: '#/components/parameters/Accept'\n        - $ref: '#/components/parameters/Content-Type'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/order_Post'\n            examples:\n              Custom Product:\n                value:\n                  billing_address:\n                    first_name: Jane\n                    last_name: Doe\n                    street_1: 123 Main Street\n                    city: Austin\n                    state: Texas\n                    zip: '78751'\n                    country: United States\n                    country_iso2: US\n                    email: janedoe@email.com\n                  products:\n                    - name: BigCommerce Coffee Mug\n                      quantity: 1\n                      price_inc_tax: 50\n                      price_ex_tax: 45\n              Product with Options:\n                value:\n                  status_id: 0\n                  customer_id: 11\n                  billing_address:\n                    first_name: Jane\n                    last_name: Doe\n                    street_1: 123 Main Street\n                    city: Austin\n                    state: Texas\n                    zip: '78751'\n                    country: United States\n                    country_iso2: US\n                    email: janedoe@example.com\n                  shipping_addresses:\n                    - first_name: Trish\n                      last_name: Test\n                      company: Acme Pty Ltd\n                      street_1: 666 Sussex St\n                      city: Austin\n                      state: Texas\n                      zip: '78751'\n                      country: United States\n                      country_iso2: US\n                      email: elsie@example.com\n                  products:\n                    - product_id: 184\n                      quantity: 5\n                      product_options:\n                        - id: 200\n                          value: '180'\n                        - id: 230\n                          value: '192'\n              Product with a Drop Down and a Text Field Modifier:\n                value:\n                  status_id: 0\n                  customer_id: 11\n                  billing_address:\n                    first_name: Jane\n                    last_name: Doe\n                    street_1: 123 Main Street\n                    city: Austin\n                    state: Texas\n                    zip: '78751'\n                    country: United States\n                    country_iso2: US\n                    email: janedoe@example.com\n                  shipping_addresses:\n                    - first_name: Trish\n                      last_name: Test\n                      company: Acme Pty Ltd\n                      street_1: 666 Sussex St\n                      city: Austin\n                      state: Texas\n                      zip: '78751'\n                      country: United States\n                      country_iso2: US\n                      email: elsie@example.com\n                  products:\n                    - product_id: 184\n                      quantity: 5\n                      product_options:\n                        - id: 200\n                          value: '180'\n                        - id: 230\n                          value: Custom Message\n              Multiple Products:\n                value:\n                  status_id: 0\n                  customer_id: 11\n                  billing_address:\n                    first_name: Jane\n                    last_name: Doe\n                    street_1: 123 Main Street\n                    city: Austin\n                    state: Texas\n                    zip: '78751'\n                    country: United States\n                    country_iso2: US\n                    email: janedoe@example.com\n                  shipping_addresses:\n                    - first_name: Trish\n                      last_name: Test\n                      company: Acme Pty Ltd\n                      street_1: 666 Sussex St\n                      city: Austin\n                      state: Texas\n                      zip: '78751'\n                      country: United States\n                      country_iso2: US\n                      email: elsie@example.com\n                  products:\n                    - name: BigCommerce Poster\n                      quantity: 1\n                      price_inc_tax: 10.98\n                      price_ex_tax: 10\n                    - name: BigCommerce Coffee Mug\n                      quantity: 1\n                      price_inc_tax: 50\n                      price_ex_tax: 45\n                    - product_id: 184\n                      product_options:\n                        - id: 200\n                          value: '180'\n                        - id: 230\n                          value: '192'\n        required: true\n      responses:\n        '200':\n          $ref: '#/components/responses/order_Resp'\n      operationId: createAnOrder\n    delete:\n      description: Archives all orders.\n      summary: Delete All Orders\n      tags:\n        - Orders\n      parameters:\n        - $ref: '#/components/parameters/Accept'\n        - $ref: '#/components/parameters/Content-Type'\n      responses:\n        '204':\n          description: ''\n      operationId: deleteAllOrders\n    parameters:\n      - schema:\n          type: string\n        name: store_hash\n        in: path\n        required: true\n  '/stores/{store_hash}/v2/orders/{order_id}/coupons':\n    get:\n      description: |-\n        Lists all order coupons. Optional parameters can be passed in.\n\n        |Type `int`|Type Name|\n        |-|-|\n        |`0`|`per_item_discount`|\n        |`1`|`percentage_discount`|\n        |`2`|`per_total_discount`|\n        |`3`|`shipping_discount`|\n        |`4`|`free_shipping`|\n        |`5`|`promotion`|\n      summary: List Order Coupons\n      parameters:\n        - $ref: '#/components/parameters/order_id_path'\n        - name: Accept\n          in: header\n          required: true\n          description: ''\n          schema:\n            type: string\n            default: application/json\n        - name: Content-Type\n          in: header\n          required: true\n          description: ''\n          schema:\n            type: string\n            default: application/json\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/limit'\n      responses:\n        '200':\n          $ref: '#/components/responses/orderCouponsCollection_Resp'\n      tags:\n        - Order Coupons\n      operationId: getAllOrderCoupons\n    parameters:\n      - schema:\n          type: string\n        name: store_hash\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: order_id\n        in: path\n        required: true\n  '/stores/{store_hash}/v2/orders/{order_id}/products':\n    get:\n      description: 'Lists all order products on an order using `order_id`. By default, items sort from lowest to highest according to a newly created ID, separate from the `order_id` and the `product_id`.'\n      summary: List Order Products\n      parameters:\n        - $ref: '#/components/parameters/order_id_path'\n        - $ref: '#/components/parameters/Accept'\n        - $ref: '#/components/parameters/Content-Type'\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/limit'\n      responses:\n        '200':\n          $ref: '#/components/responses/orderProductsCollection_Resp'\n      tags:\n        - Order Products\n      operationId: getAllOrderProducts\n    parameters:\n      - schema:\n          type: string\n        name: store_hash\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: order_id\n        in: path\n        required: true\n  '/stores/{store_hash}/v2/orders/{order_id}/shipping_addresses':\n    get:\n      description: |-\n        Get all shipping addresses on an order using the `order_id`.\n\n        Returned in the response is shipping_quotes object. Please use the Get Shipping Quotes Endpoint. Using the response will return a 204 for the shipping quote.\n      summary: Get Order Shipping Addresses\n      parameters:\n        - $ref: '#/components/parameters/Accept'\n        - $ref: '#/components/parameters/Content-Type'\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/limit'\n      responses:\n        '200':\n          $ref: '#/components/responses/orderShippingAddressCollection_Resp'\n      tags:\n        - Order Shipping Addresses\n      operationId: getAllShippingAddresses\n    parameters:\n      - in: path\n        name: order_id\n        description: ID of the order.\n        required: true\n        schema:\n          type: integer\n      - schema:\n          type: string\n        name: store_hash\n        in: path\n        required: true\n  '/stores/{store_hash}/v2/order_statuses':\n    get:\n      description: |-\n        Returns a Collection of All Order Statuses.\n\n        **Order Status Descriptions:**\n        |Status ID | Name  | Description |\n        |--|--|--|\n        | 0 | Incomplete  | An incomplete order happens when a shopper reached the payment page, but did not complete the transaction. |\n        | 1 | Pending |Customer started the checkout process, but did not complete it. |\n        | 2 | Shipped | Order has been shipped, but receipt has not been confirmed; seller has used the Ship Items action. |\n        | 3 | Partially Shipped | Only some items in the order have been shipped, due to some products being pre-order only or other reasons. |\n        | 4 | Refunded | Seller has used the Refund action. |\n        | 5 | Cancelled | Seller has cancelled an order, due to a stock inconsistency or other reasons. |\n        | 6 |Declined | Seller has marked the order as declined for lack of manual payment, or other reasons. |\n        | 7 | Awaiting Payment | Customer has completed checkout process, but payment has yet to be confirmed. |\n        | 8 | Awaiting Pickup | Order has been pulled, and is awaiting customer pickup from a seller-specified location. |\n        | 9 | Awaiting Shipment | Order has been pulled and packaged, and is awaiting collection from a shipping provider. |\n        | 10 | Completed | Client has paid for their digital product and their file(s) are available for download. |\n        | 11 | Awaiting Fulfillment | Customer has completed the checkout process and payment has been confirmed. |\n        | 12 | Manual Verification Required | Order on hold while some aspect needs to be manually confirmed. |\n        | 13 | Disputed | Customer has initiated a dispute resolution process for the PayPal transaction that paid for the order. |\n        | 14 | Partially Refunded | Seller has partially refunded the order. |\n      summary: Get All Order Statuses\n      parameters:\n        - $ref: '#/components/parameters/Accept'\n        - $ref: '#/components/parameters/Content-Type'\n      responses:\n        '200':\n          $ref: '#/components/responses/orderStatusCollection_Resp'\n      tags:\n        - Order Status\n      operationId: getOrderStatus\n    parameters:\n      - schema:\n          type: string\n        name: store_hash\n        in: path\n        required: true\n  '/stores/{store_hash}/v2/order_statuses/{status_id}':\n    get:\n      description: |-\n        Returns a single order status.\n\n        **Order Status Descriptions:**\n        |Status ID | Name  | Description |\n        |--|--|--|\n        | 0 | Incomplete  | An incomplete order happens when a shopper reached the payment page, but did not complete the transaction. |\n        | 1 | Pending |Customer started the checkout process, but did not complete it. |\n        | 2 | Shipped | Order has been shipped, but receipt has not been confirmed; seller has used the Ship Items action. |\n        | 3 | Partially Shipped | Only some items in the order have been shipped, due to some products being pre-order only or other reasons. |\n        | 4 | Refunded | Seller has used the Refund action. |\n        | 5 | Cancelled | Seller has cancelled an order, due to a stock inconsistency or other reasons. |\n        | 6 |Declined | Seller has marked the order as declined for lack of manual payment, or other reasons. |\n        | 7 | Awaiting Payment | Customer has completed checkout process, but payment has yet to be confirmed. |\n        | 8 | Awaiting Pickup | Order has been pulled, and is awaiting customer pickup from a seller-specified location. |\n        | 9 | Awaiting Shipment | Order has been pulled and packaged, and is awaiting collection from a shipping provider. |\n        | 10 | Completed | Client has paid for their digital product and their file(s) are available for download. |\n        | 11 | Awaiting Fulfillment | Customer has completed the checkout process and payment has been confirmed. |\n        | 12 | Manual Verification Required | Order on hold while some aspect needs to be manually confirmed. |\n        | 13 | Disputed | Customer has initiated a dispute resolution process for the PayPal transaction that paid for the order. |\n        | 14 | Partially Refunded | Seller has partially refunded the order. |\n      summary: Get a Single Order Status by Id\n      parameters:\n        - $ref: '#/components/parameters/status_id_path'\n        - $ref: '#/components/parameters/Accept'\n        - $ref: '#/components/parameters/Content-Type'\n      responses:\n        '200':\n          $ref: '#/components/responses/orderStatus_Resp'\n      tags:\n        - Order Status\n      operationId: getAOrderStatus\n    parameters:\n      - schema:\n          type: string\n        name: store_hash\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: status_id\n        in: path\n        required: true\n  '/stores/{store_hash}/v2/orders/{order_id}/taxes':\n    get:\n      description: |-\n        Gets all order taxes using `order_id`.\n        Each tax applied to an order. This information can be useful for reporting purposes.\n        Pass in the query parameter `?details=true` to return extra details about order taxes.\n        `order_product_id` and `line_item_type` are also returned.\n\n        All values are read-only.\n      summary: Get All Order Taxes\n      parameters:\n        - $ref: '#/components/parameters/Accept'\n        - $ref: '#/components/parameters/Content-Type'\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/limit'\n        - in: query\n          name: details\n          description: 'To return detailed tax information, pass in the details query.'\n          schema:\n            type: string\n            default: 'true'\n      responses:\n        '200':\n          $ref: '#/components/responses/orderTaxes_Resp'\n      tags:\n        - Order Taxes\n      operationId: getOrderTaxes\n    parameters:\n      - in: path\n        name: order_id\n        description: ID of the order.\n        required: true\n        schema:\n          type: integer\n      - schema:\n          type: string\n        name: store_hash\n        in: path\n        required: true\n  '/stores/{store_hash}/v2/orders/{order_id}/shipments':\n    get:\n      description: Gets a list of all shipments on an order.\n      summary: Get Order Shipments\n      parameters:\n        - $ref: '#/components/parameters/Accept'\n        - $ref: '#/components/parameters/Content-Type'\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/limit'\n      responses:\n        '200':\n          $ref: '#/components/responses/orderShipmentCollection_Resp'\n      tags:\n        - Order Shipments\n      operationId: getAllOrderShipments\n    post:\n      description: |\n        Creates an *Order Shipment*. For more details, see [Shipping an Order](/api-docs/orders/orders-api-overview#creating-order-shipments).\n\n        **Required Fields**\n        *   order_address_id\n        *   items\n\n        **Usage Notes**\n\n        Presuming that a valid carrier code is used, a tracking link is generated if either `shipping_provider` or `tracking_carrier` is supplied alongside a tracking number. Providing only the tracking number will result in an unclickable text in the customer facing email.\n\n        Acceptable values for `shipping_provider` include an empty string (`\"\"`), auspost, canadapost, endicia, usps, fedex, royalmail, ups, upsready, upsonline, or shipperhq.\n\n        Acceptable values for `tracking_carrier` include an empty string (`\"\"`) or one of the valid tracking-carrier values viewable [here](https://github.com/bigcommerce/dev-docs/blob/development/assets/csv/tracking_carrier_values.csv) and downloadable as a .CSV file [here](https://raw.githubusercontent.com/bigcommerce/dev-docs/development/assets/csv/tracking_carrier_values.csv).\n      summary: Create Order Shipment\n      parameters:\n        - $ref: '#/components/parameters/Accept'\n        - $ref: '#/components/parameters/Content-Type'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/orderShipment_Post'\n            examples: {}\n        required: true\n      responses:\n        '201':\n          $ref: '#/components/responses/orderShipment_Resp'\n      tags:\n        - Order Shipments\n      operationId: createOrderShipments\n    delete:\n      description: Deletes all shipments associated with an order.\n      summary: Delete Order Shipments\n      parameters:\n        - $ref: '#/components/parameters/Accept'\n        - $ref: '#/components/parameters/Content-Type'\n      responses:\n        '204':\n          description: ''\n      tags:\n        - Order Shipments\n      operationId: deleteAllOrderShipments\n    parameters:\n      - in: path\n        name: order_id\n        description: ID of the order.\n        required: true\n        schema:\n          type: integer\n      - schema:\n          type: string\n        name: store_hash\n        in: path\n        required: true\n  '/stores/{store_hash}/v2/orders/{order_id}/shipments/count':\n    get:\n      description: Gets a count of the number of shipments that have been made for a single order.\n      summary: Get Count of Order Shipments\n      parameters:\n        - $ref: '#/components/parameters/Accept'\n        - $ref: '#/components/parameters/Content-Type'\n      responses:\n        '200':\n          $ref: '#/components/responses/orderCount_Resp'\n      tags:\n        - Order Shipments\n      operationId: getCountShipments\n    parameters:\n      - in: path\n        name: order_id\n        description: ID of the order.\n        required: true\n        schema:\n          type: integer\n      - schema:\n          type: string\n        name: store_hash\n        in: path\n        required: true\n  '/stores/{store_hash}/v2/orders/{order_id}/shipments/{shipment_id}':\n    get:\n      tags:\n        - Order Shipments\n      responses:\n        '200':\n          $ref: '#/components/responses/orderShipment_Resp'\n      operationId: getOrderShipment\n      summary: Get a Shipment\n      description: 'Gets an order shipment. '\n      parameters:\n        - $ref: '#/components/parameters/Accept'\n        - $ref: '#/components/parameters/Content-Type'\n    put:\n      description: Updates an existing shipment associated with an order.\n      summary: Update a Shipment\n      parameters:\n        - $ref: '#/components/parameters/Accept'\n        - $ref: '#/components/parameters/Content-Type'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/orderShipment_Put'\n            examples:\n              application/json:\n                value:\n                  tracking_number: EJ958083578US\n                  order_address_id: 1\n                  shipping_provider: ''\n                  items:\n                    - order_product_id: 15\n                      quantity: 2\n        required: true\n      responses:\n        '200':\n          $ref: '#/components/responses/orderShipment_Resp'\n      tags:\n        - Order Shipments\n      operationId: updateOrderShipment\n    delete:\n      description: Deletes a shipment associated with an order.\n      summary: Delete an Order Shipment\n      parameters:\n        - $ref: '#/components/parameters/Accept'\n        - $ref: '#/components/parameters/Content-Type'\n      responses:\n        '204':\n          description: ''\n      tags:\n        - Order Shipments\n      operationId: deleteOrderShipment\n    parameters:\n      - in: path\n        name: order_id\n        description: ID of the order.\n        required: true\n        schema:\n          type: integer\n      - name: shipment_id\n        in: path\n        required: true\n        description: Shipment ID.\n        schema:\n          type: integer\n      - schema:\n          type: string\n        name: store_hash\n        in: path\n        required: true\n  '/stores/{store_hash}/v2/orders/{order_id}/messages':\n    get:\n      responses:\n        '200':\n          $ref: '#/components/responses/orderMessagesCollection_Resp'\n      summary: Get Order Messages\n      description: Gets the messages associated with an order.\n      tags:\n        - Order Messages\n      parameters:\n        - $ref: '#/components/parameters/Accept'\n        - $ref: '#/components/parameters/Content-Type'\n        - $ref: '#/components/parameters/min_id'\n        - $ref: '#/components/parameters/max_id'\n        - $ref: '#/components/parameters/customer_id'\n        - $ref: '#/components/parameters/min_date_created'\n        - $ref: '#/components/parameters/max_date_created'\n        - $ref: '#/components/parameters/is_flagged'\n        - $ref: '#/components/parameters/status'\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/limit'\n      operationId: getOrderMessages\n    parameters:\n      - in: path\n        name: order_id\n        description: ID of the order\n        required: true\n        schema:\n          type: integer\n      - schema:\n          type: string\n        name: store_hash\n        in: path\n        required: true\n  '/stores/{store_hash}/v2/orders/{order_id}/products/{product_id}':\n    get:\n      responses:\n        '200':\n          $ref: '#/components/responses/orderProductLineItem_Resp'\n      summary: Get an Order Product\n      description: Gets a product line item associated with the order.\n      tags:\n        - Order Products\n      parameters:\n        - $ref: '#/components/parameters/Accept'\n        - $ref: '#/components/parameters/Content-Type'\n      operationId: getAnOrderProduct\n    parameters:\n      - in: path\n        name: order_id\n        description: ID of the order.\n        required: true\n        schema:\n          type: integer\n      - name: product_id\n        in: path\n        required: true\n        description: ID of the product.\n        schema:\n          type: integer\n      - schema:\n          type: string\n        name: store_hash\n        in: path\n        required: true\n  '/stores/{store_hash}/v2/orders/{order_id}/shipping_addresses/{id}':\n    get:\n      responses:\n        '200':\n          $ref: '#/components/responses/orderShippingAddress_Resp'\n      summary: Get a Shipping Address\n      description: |-\n        Gets a shipping address associated with an order.\n\n        Returned in the response is shipping_quotes object. Please use the Get Shipping Quotes Endpoint. Using the response will return a 204 for the shipping quote.\n      tags:\n        - Order Shipping Addresses\n      parameters:\n        - name: Accept\n          in: header\n          required: true\n          schema:\n            type: string\n            default: application/json\n        - name: Content-Type\n          in: header\n          required: true\n          schema:\n            type: string\n            default: application/json\n      operationId: getAShippingAddress\n    parameters:\n      - in: path\n        name: order_id\n        description: ID of the order.\n        required: true\n        schema:\n          type: integer\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n      - schema:\n          type: string\n        name: store_hash\n        in: path\n        required: true\n    put:\n      summary: Update a Shipping Address\n      operationId: updateAShippingAddress\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/orderShippingAddress'\n              examples:\n                response:\n                  value:\n                    id: 1\n                    order_id: 100\n                    first_name: first\n                    last_name: last\n                    company: company\n                    street_1: street 1\n                    street_2: street 2\n                    city: Sydney\n                    zip: '2000'\n                    country: Australia\n                    country_iso2: AU\n                    state: New South Wales\n                    email: email@bigcommerce.com\n                    phone: phone\n                    items_total: 1\n                    items_shipped: 0\n                    shipping_method: Flat Rate\n                    base_cost: '15.0000'\n                    cost_ex_tax: '15.0000'\n                    cost_inc_tax: '15.0000'\n                    cost_tax: '0.0000'\n                    cost_tax_class_id: 2\n                    base_handling_cost: '0.0000'\n                    handling_cost_ex_tax: '0.0000'\n                    handling_cost_inc_tax: '0.0000'\n                    handling_cost_tax: '0.0000'\n                    handling_cost_tax_class_id: 2\n                    shipping_zone_id: 1\n                    shipping_zone_name: United States\n                    shipping_quotes:\n                      url: 'https://api-proxy.service.bcdev/stores/17hoqh4ddx/v2/orders/100/shipping_addresses/1/shipping_quotes'\n                      resource: /orders/100/shipping_addresses/1/shipping_quotes\n                    form_fields: []\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    status:\n                      type: integer\n                    message:\n                      type: string\n              examples:\n                response:\n                  value:\n                    - status: 404\n                      message: The field 'item_total' cannot be written to. Please remove it from your request before trying again.\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    status:\n                      type: integer\n                    message:\n                      type: string\n              examples:\n                response:\n                  value:\n                    - status: 404\n                      message: The requested resource was not found.\n      parameters:\n        - in: header\n          name: Accept\n          required: true\n          schema:\n            type: string\n            default: application/json\n        - in: header\n          name: Content-Type\n          required: true\n          schema:\n            type: string\n            default: application/json\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/shippingAddress_Base'\n            examples:\n              application/json:\n                value:\n                  first_name: first\n                  last_name: last\n                  company: company\n                  street_1: street 1\n                  street_2: street 2\n                  city: Sydney\n                  zip: '2000'\n                  country: Australia\n                  country_iso2: AU\n                  state: New South Wales\n                  email: email2@bigcommerce.com\n                  phone: '468444123'\n      description: |-\n        Update a shipping address associated with an order.\n\n        **Note**: Updating will NOT trigger the recalculation of shipping cost and tax\n      tags:\n        - Order Shipping Addresses\n  '/stores/{store_hash}/v2/orders/{order_id}/shipping_addresses/{shipping_address_id}/shipping_quotes':\n    get:\n      responses:\n        '200':\n          $ref: '#/components/responses/shippingQuotes_Resp'\n      summary: Get Order Shipping Quotes\n      description: |-\n        Gets all shipping quotes persisted on an order.\n\n        This is a read only endpoint and the output can vary based on the shipping quote. A shipping quote can only be generated using the storefront at this time. Orders that are created in the control panel or using the API return a 204 for this endpoint since a shipping quote is not generated during that process.\n      parameters:\n        - $ref: '#/components/parameters/Accept'\n        - $ref: '#/components/parameters/Content-Type'\n      tags:\n        - Order Shipping Addresses Quotes\n      operationId: getShippingQuotes\n    parameters:\n      - in: path\n        name: order_id\n        description: ID of the order.\n        required: true\n        schema:\n          type: integer\n      - name: shipping_address_id\n        in: path\n        required: true\n        description: Shipping address ID.\n        schema:\n          type: integer\n      - schema:\n          type: string\n        name: store_hash\n        in: path\n        required: true\ntags:\n  - name: Orders\n  - name: Order Coupons\n  - name: Order Products\n  - name: Order Taxes\n  - name: Order Status\n  - name: Order Shipments\n  - name: Order Shipping Addresses\n  - name: Order Messages\n  - name: Order Shipping Addresses Quotes\nsecurity:\n  - X-Auth-Token: []\nx-stoplight:\n  docs:\n    includeDownloadLink: true\n    showModels: false\nservers:\n  - url: 'https://api.bigcommerce.com'\ncomponents:\n  parameters:\n    min_id:\n      name: min_id\n      in: query\n      description: The minimum order ID.\n      schema:\n        type: integer\n    max_id:\n      name: max_id\n      in: query\n      description: The maximum order ID.\n      schema:\n        type: integer\n    min_total:\n      name: min_total\n      in: query\n      description: The minimum order total in float format. eg. 12.50\n      schema:\n        type: number\n        format: float\n    max_total:\n      name: max_total\n      in: query\n      description: The maximum order total in float format. eg. 12.50\n      schema:\n        type: number\n    customer_id:\n      name: customer_id\n      in: query\n      description: Customer ID.\n      schema:\n        type: integer\n    email:\n      name: email\n      in: query\n      description: The email of the customer.\n      schema:\n        type: string\n    status_id:\n      name: status_id\n      in: query\n      description: The staus ID of the order. You can get the status id from the `/orders` endpoints.\n      schema:\n        type: integer\n    status_id_path:\n      name: status_id\n      in: path\n      description: The staus ID of the order. You can get the status id from the `/orders` endpoints.\n      required: true\n      schema:\n        type: integer\n        format: int32\n    cart_id:\n      name: cart_id\n      in: query\n      description: The cart ID of the order.\n      schema:\n        type: string\n    is_deleted:\n      name: is_deleted\n      in: query\n      description: If the order was deleted or archived.\n      schema:\n        type: boolean\n    payment_method:\n      name: payment_method\n      in: query\n      description: The payment method used on the order.\n      schema:\n        type: string\n        enum:\n          - Manual\n          - Cash on Delivery\n          - Credit Card\n          - Test Payment Gateway\n          - Pay In Store\n    min_date_created:\n      name: min_date_created\n      in: query\n      description: |-\n        Minimum date the order was created in RFC-2822 or ISO-8601.\n\n        RFC-2822: `Thu, 20 Apr 2017 11:32:00 -0400`\n\n        ISO-8601: `2017-04-20T11:32:00.000-04:00`\n      schema:\n        type: string\n    max_date_created:\n      name: max_date_created\n      in: query\n      description: |-\n        Maximum date the order was created in RFC-2822 or ISO-8601.\n\n        RFC-2822: `Thu, 20 Apr 2017 11:32:00 -0400`\n\n        ISO-8601: `2017-04-20T11:32:00.000-04:00`\n      schema:\n        type: string\n    min_date_modified:\n      name: min_date_modified\n      in: query\n      description: |-\n        Minimum date the order was modified in RFC-2822 or ISO-8601.\n\n        RFC-2822: `Thu, 20 Apr 2017 11:32:00 -0400`\n\n        ISO-8601: `2017-04-20T11:32:00.000-04:00`\n      schema:\n        type: string\n    max_date_modified:\n      name: max_date_modified\n      in: query\n      description: |-\n        Maximum date the order was modified in RFC-2822 or ISO-8601.\n\n        RFC-2822: `Thu, 20 Apr 2017 11:32:00 -0400`\n\n        ISO-8601: `2017-04-20T11:32:00.000-04:00`\n      schema:\n        type: string\n    page:\n      name: page\n      in: query\n      description: The page to return in the response.\n      schema:\n        type: number\n    limit:\n      name: limit\n      in: query\n      description: Number of results to return.\n      schema:\n        type: number\n    sort:\n      in: query\n      name: sort\n      description: 'Field and direction to sort orders. To specify the direction, add `:asc` or `:desc` to the end of the query parameter. E.g. `sort=date_created:desc`.'\n      schema:\n        type: string\n        enum:\n          - id\n          - customer_id\n          - date_created\n          - date_modified\n          - status_id\n          - channel_id\n          - external_id\n    Accept:\n      name: Accept\n      in: header\n      required: true\n      schema:\n        type: string\n        default: application/json\n    Content-Type:\n      name: Content-Type\n      in: header\n      required: true\n      schema:\n        type: string\n        default: application/json\n    status:\n      name: status\n      in: query\n      description: Status of the order message.\n      schema:\n        type: string\n        enum:\n          - read\n          - unread\n    is_flagged:\n      name: is_flagged\n      in: query\n      description: 'If the message is [flagged](https://support.bigcommerce.com/s/article/Communicating-with-Customers#Messages).'\n      schema:\n        type: boolean\n    order_id_path:\n      in: path\n      name: order_id\n      description: ID of the order.\n      required: true\n      schema:\n        type: integer\n    product_id:\n      name: product_id\n      in: path\n      required: true\n      description: ID of the product.\n      schema:\n        type: integer\n    shipping_address_id:\n      name: shipping_address_id\n      in: path\n      required: true\n      description: Shipping address ID.\n      schema:\n        type: integer\n    shipment_id:\n      name: shipment_id\n      in: path\n      required: true\n      description: Shipment ID.\n      schema:\n        type: integer\n    channel_id:\n      name: channel_id\n      in: query\n      description: The Channel ID of the Order.\n      schema:\n        type: integer\n  responses:\n    orderStatusCollection_Resp:\n      description: Get All Order Status Collection Response.\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/orderStatus_Base'\n          examples:\n            response:\n              value:\n                - id: 0\n                  name: Incomplete\n                  system_label: Incomplete\n                  custom_label: Incomplete - Testing\n                  system_description: 'An incomplete order happens when a shopper reached the payment page, but did not complete the transaction.'\n                  order: 0\n                - id: 1\n                  name: Pending\n                  system_label: Pending\n                  custom_label: Pending\n                  system_description: 'Customer started the checkout process, but did not complete it.'\n                  order: 1\n                - id: 2\n                  name: Shipped\n                  system_label: Shipped\n                  custom_label: Shipped\n                  system_description: 'Order has been shipped, but receipt has not been confirmed; seller has used the Ship Items action.'\n                  order: 8\n                - id: 3\n                  name: Partially Shipped\n                  system_label: Partially Shipped\n                  custom_label: Partially Shipped\n                  system_description: 'Only some items in the order have been shipped, due to some products being pre-order only or other reasons.'\n                  order: 6\n                - id: 4\n                  name: Refunded\n                  system_label: Refunded\n                  custom_label: Refunded\n                  system_description: Seller has used the Refund action.\n                  order: 11\n                - id: 5\n                  name: Cancelled\n                  system_label: Cancelled\n                  custom_label: Cancelled\n                  system_description: 'Seller has cancelled an order, due to a stock inconsistency or other reasons.'\n                  order: 9\n                - id: 6\n                  name: Declined\n                  system_label: Declined\n                  custom_label: Declined\n                  system_description: 'Seller has marked the order as declined for lack of manual payment, or other reasons.'\n                  order: 10\n                - id: 7\n                  name: Awaiting Payment\n                  system_label: Awaiting Payment\n                  custom_label: Awaiting Payment\n                  system_description: 'Customer has completed checkout process, but payment has yet to be confirmed.'\n                  order: 2\n                - id: 8\n                  name: Awaiting Pickup\n                  system_label: Awaiting Pickup\n                  custom_label: Awaiting Pickup\n                  system_description: 'Order has been pulled, and is awaiting customer pickup from a seller-specified location.'\n                  order: 5\n                - id: 9\n                  name: Awaiting Shipment\n                  system_label: Awaiting Shipment\n                  custom_label: Awaiting Shipment\n                  system_description: 'Order has been pulled and packaged, and is awaiting collection from a shipping provider.'\n                  order: 4\n                - id: 10\n                  name: Completed\n                  system_label: Completed\n                  custom_label: Completed - Testing\n                  system_description: Client has paid for their digital product and their file(s) are available for download.\n                  order: 7\n                - id: 11\n                  name: Awaiting Fulfillment\n                  system_label: Awaiting Fulfillment\n                  custom_label: Awaiting Fulfillment\n                  system_description: Customer has completed the checkout process and payment has been confirmed.\n                  order: 3\n                - id: 12\n                  name: Manual Verification Required\n                  system_label: Manual Verification Required\n                  custom_label: Manual Verification Required\n                  system_description: Order on hold while some aspect needs to be manually confirmed.\n                  order: 13\n                - id: 13\n                  name: Disputed\n                  system_label: Disputed\n                  custom_label: Disputed\n                  system_description: Customer has initiated a dispute resolution process for the PayPal transaction that paid for the order.\n                  order: 12\n                - id: 14\n                  name: Partially Refunded\n                  system_label: Partially Refunded\n                  custom_label: Partially Refunded\n                  system_description: Seller has partially refunded the order.\n                  order: 14\n    orderStatus_Resp:\n      description: ''\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/orderStatus_Base'\n          examples:\n            response:\n              value:\n                id: 11\n                name: Awaiting Fulfillment\n                system_label: Awaiting Fulfillment\n                custom_label: Awaiting Fulfillment\n                system_description: Customer has completed the checkout process and payment has been confirmed.\n                order: 3\n    orderCollection_Resp:\n      description: ''\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/order_Resp'\n          examples:\n            response:\n              value:\n                - id: 100\n                  customer_id: 20\n                  date_created: 'Wed, 10 Jan 2018 21:05:30 +0000'\n                  date_modified: 'Wed, 05 Dec 2018 20:16:55 +0000'\n                  date_shipped: ''\n                  status_id: 11\n                  status: Awaiting Fulfillment\n                  subtotal_ex_tax: '336.3200'\n                  subtotal_inc_tax: '361.9500'\n                  subtotal_tax: '25.6300'\n                  base_shipping_cost: '0.0000'\n                  shipping_cost_ex_tax: '0.0000'\n                  shipping_cost_inc_tax: '0.0000'\n                  shipping_cost_tax: '0.0000'\n                  shipping_cost_tax_class_id: 2\n                  base_handling_cost: '0.0000'\n                  handling_cost_ex_tax: '0.0000'\n                  handling_cost_inc_tax: '0.0000'\n                  handling_cost_tax: '0.0000'\n                  handling_cost_tax_class_id: 2\n                  base_wrapping_cost: '0.0000'\n                  wrapping_cost_ex_tax: '0.0000'\n                  wrapping_cost_inc_tax: '0.0000'\n                  wrapping_cost_tax: '0.0000'\n                  wrapping_cost_tax_class_id: 3\n                  total_ex_tax: '361.9500'\n                  total_inc_tax: '361.9500'\n                  total_tax: '0.0000'\n                  items_total: 17\n                  items_shipped: 0\n                  payment_method: Credit Card\n                  payment_provider_id: ''\n                  payment_status: authorized\n                  refunded_amount: '0.0000'\n                  order_is_digital: false\n                  store_credit_amount: '0.0000'\n                  gift_certificate_amount: '0.0000'\n                  ip_address: 00.000.000.000\n                  ip_address_v6: ''\n                  geoip_country: United States\n                  geoip_country_iso2: US\n                  currency_id: 1\n                  currency_code: USD\n                  currency_exchange_rate: '1.0000000000'\n                  default_currency_id: 1\n                  default_currency_code: USD\n                  staff_notes: ''\n                  customer_message: ''\n                  discount_amount: '0.0000'\n                  coupon_discount: '0.0000'\n                  shipping_address_count: 1\n                  is_deleted: false\n                  ebay_order_id: '0'\n                  cart_id: a8458391-ef68-4fe5-9ec1-442e6a767364\n                  billing_address:\n                    first_name: Jane\n                    last_name: Doe\n                    company: ''\n                    street_1: 455 Main Street\n                    street_2: ''\n                    city: Austin\n                    state: Texas\n                    zip: '78751'\n                    country: United States\n                    country_iso2: US\n                    phone: ''\n                    email: janedoe@example.com\n                    form_fields: []\n                  is_email_opt_in: false\n                  credit_card_type: null\n                  order_source: manual\n                  channel_id: 1\n                  external_source: POS\n                  products:\n                    url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/100/products'\n                    resource: /orders/100/products\n                  shipping_addresses:\n                    url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/100/shippingaddresses'\n                    resource: /orders/100/shippingaddresses\n                  coupons:\n                    url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/100/coupons'\n                    resource: /orders/100/coupons\n                  external_id: null\n                  external_merchant_id: {}\n                  tax_provider_id: BasicTaxProvider\n                  store_default_currency_code: ''\n                  store_default_to_transactional_exchange_rate: '1.0000000000'\n                  custom_status: Awaiting Fulfillment\n                  customer_locale: en\n    ordersCount_Resp:\n      description: Order Countr response collection.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ordersCount_Full'\n          examples:\n            response:\n              value:\n                statuses:\n                  - id: 0\n                    name: Incomplete\n                    system_label: Incomplete\n                    custom_label: Incomplete - Testing\n                    system_description: 'An incomplete order happens when a shopper reached the payment page, but did not complete the transaction.'\n                    count: 15\n                    sort_order: 0\n                  - id: 1\n                    name: Pending\n                    system_label: Pending\n                    custom_label: Pending\n                    system_description: 'Customer started the checkout process, but did not complete it.'\n                    count: 4\n                    sort_order: 1\n                  - id: 7\n                    name: Awaiting Payment\n                    system_label: Awaiting Payment\n                    custom_label: Awaiting Payment\n                    system_description: 'Customer has completed checkout process, but payment has yet to be confirmed.'\n                    count: 48\n                    sort_order: 2\n                  - id: 11\n                    name: Awaiting Fulfillment\n                    system_label: Awaiting Fulfillment\n                    custom_label: Awaiting Fulfillment\n                    system_description: Customer has completed the checkout process and payment has been confirmed.\n                    count: 31\n                    sort_order: 3\n                  - id: 9\n                    name: Awaiting Shipment\n                    system_label: Awaiting Shipment\n                    custom_label: Awaiting Shipment\n                    system_description: 'Order has been pulled and packaged, and is awaiting collection from a shipping provider.'\n                    count: 1\n                    sort_order: 4\n                  - id: 8\n                    name: Awaiting Pickup\n                    system_label: Awaiting Pickup\n                    custom_label: Awaiting Pickup\n                    system_description: 'Order has been pulled, and is awaiting customer pickup from a seller-specified location.'\n                    count: 0\n                    sort_order: 5\n                  - id: 3\n                    name: Partially Shipped\n                    system_label: Partially Shipped\n                    custom_label: Partially Shipped\n                    system_description: 'Only some items in the order have been shipped, due to some products being pre-order only or other reasons.'\n                    count: 1\n                    sort_order: 6\n                  - id: 10\n                    name: Completed\n                    system_label: Completed\n                    custom_label: Completed - Testing\n                    system_description: Client has paid for their digital product and their file(s) are available for download.\n                    count: 11\n                    sort_order: 7\n                  - id: 2\n                    name: Shipped\n                    system_label: Shipped\n                    custom_label: Shipped\n                    system_description: 'Order has been shipped, but receipt has not been confirmed; seller has used the Ship Items action.'\n                    count: 14\n                    sort_order: 8\n                  - id: 5\n                    name: Cancelled\n                    system_label: Cancelled\n                    custom_label: Cancelled\n                    system_description: 'Seller has cancelled an order, due to a stock inconsistency or other reasons.'\n                    count: 5\n                    sort_order: 9\n                  - id: 6\n                    name: Declined\n                    system_label: Declined\n                    custom_label: Declined\n                    system_description: 'Seller has marked the order as declined for lack of manual payment, or other reasons.'\n                    count: 0\n                    sort_order: 10\n                  - id: 4\n                    name: Refunded\n                    system_label: Refunded\n                    custom_label: Refunded\n                    system_description: Seller has used the Refund action.\n                    count: 2\n                    sort_order: 11\n                  - id: 13\n                    name: Disputed\n                    system_label: Disputed\n                    custom_label: Disputed\n                    system_description: Customer has initiated a dispute resolution process for the PayPal transaction that paid for the order.\n                    count: 0\n                    sort_order: 12\n                  - id: 12\n                    name: Manual Verification Required\n                    system_label: Manual Verification Required\n                    custom_label: Manual Verification Required\n                    system_description: Order on hold while some aspect needs to be manually confirmed.\n                    count: 0\n                    sort_order: 13\n                  - id: 14\n                    name: Partially Refunded\n                    system_label: Partially Refunded\n                    custom_label: Partially Refunded\n                    system_description: Seller has partially refunded the order.\n                    count: 1\n                    sort_order: 14\n                count: 133\n    order_Resp:\n      description: Order Response.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/order_Resp'\n          examples:\n            response:\n              value:\n                id: 218\n                customer_id: 11\n                date_created: 'Tue, 05 Mar 2019 21:40:11 +0000'\n                date_modified: 'Mon, 11 Mar 2019 15:17:25 +0000'\n                date_shipped: ''\n                status_id: 7\n                status: Awaiting Payment\n                subtotal_ex_tax: '62.6793'\n                subtotal_inc_tax: '67.8400'\n                subtotal_tax: '4.4000'\n                base_shipping_cost: '12.0000'\n                shipping_cost_ex_tax: '11.0900'\n                shipping_cost_inc_tax: '12.0000'\n                shipping_cost_tax: '0.9100'\n                shipping_cost_tax_class_id: 0\n                base_handling_cost: '0.0000'\n                handling_cost_ex_tax: '0.0000'\n                handling_cost_inc_tax: '0.0000'\n                handling_cost_tax: '0.0000'\n                handling_cost_tax_class_id: 0\n                base_wrapping_cost: '0.0000'\n                wrapping_cost_ex_tax: '0.0000'\n                wrapping_cost_inc_tax: '0.0000'\n                wrapping_cost_tax: '0.0000'\n                wrapping_cost_tax_class_id: 0\n                total_ex_tax: '64.5300'\n                total_inc_tax: '69.8400'\n                total_tax: '5.3100'\n                items_total: 4\n                items_shipped: 0\n                payment_method: Cash\n                payment_provider_id: ''\n                payment_status: authorized\n                refunded_amount: '0.0000'\n                order_is_digital: false\n                store_credit_amount: '0.0000'\n                gift_certificate_amount: '0.0000'\n                ip_address: ''\n                ip_address_v6: ''\n                geoip_country: ''\n                geoip_country_iso2: ''\n                currency_id: 1\n                currency_code: USD\n                currency_exchange_rate: '1.0000000000'\n                default_currency_id: 1\n                default_currency_code: USD\n                staff_notes: ''\n                customer_message: ''\n                discount_amount: '5.0000'\n                coupon_discount: '5.0000'\n                shipping_address_count: 1\n                is_deleted: false\n                ebay_order_id: '0'\n                cart_id: 7e48f7ef-2e88-4817-aea4-b0ed01490114\n                billing_address:\n                  first_name: Jane\n                  last_name: Doe\n                  company: ''\n                  street_1: 555 East Street\n                  street_2: ''\n                  city: Austin\n                  state: Texas\n                  zip: 78108\n                  country: United States\n                  country_iso2: US\n                  phone: 1234567890\n                  email: janedoe@example.com\n                  form_fields:\n                    - name: Delivery Instructions\n                      value: Leave in backyard\n                is_email_opt_in: false\n                credit_card_type: null\n                order_source: external\n                channel_id: 1\n                external_source: null\n                products:\n                  url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/218/products'\n                  resource: /orders/218/products\n                shipping_addresses:\n                  url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/218/shippingaddresses'\n                  resource: /orders/218/shippingaddresses\n                coupons:\n                  url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/218/coupons'\n                  resource: /orders/218/coupons\n                external_id: null\n                external_merchant_id: null\n                tax_provider_id: BasicTaxProvider\n                store_default_currency_code: ''\n                store_default_to_transactional_exchange_rate: '1.0000000000'\n                custom_status: Awaiting Payment\n                customer_locale: en\n              Multiple Items:\n                id: 247\n                customer_id: 11\n                date_created: 'Thu, 20 Jun 2019 16:07:08 +0000'\n                date_modified: 'Thu, 20 Jun 2019 16:07:08 +0000'\n                date_shipped: ''\n                status_id: 11\n                status: Awaiting Fulfillment\n                subtotal_ex_tax: 924.47\n                subtotal_inc_tax: 1000.74\n                subtotal_tax: 76.27\n                base_shipping_cost: 8\n                shipping_cost_ex_tax: 7.39\n                shipping_cost_inc_tax: 8\n                shipping_cost_tax: 0.61\n                shipping_cost_tax_class_id: 0\n                base_handling_cost: 0\n                handling_cost_ex_tax: 0\n                handling_cost_inc_tax: 0\n                handling_cost_tax: 0\n                handling_cost_tax_class_id: 0\n                base_wrapping_cost: 0\n                wrapping_cost_ex_tax: 0\n                wrapping_cost_inc_tax: 0\n                wrapping_cost_tax: 0\n                wrapping_cost_tax_class_id: 0\n                total_ex_tax: 931.86\n                total_inc_tax: 1008.74\n                total_tax: 76.88\n                items_total: 11\n                items_shipped: 0\n                payment_method: Test Payment Gateway\n                payment_provider_id: ''\n                payment_status: captured\n                refunded_amount: 0\n                order_is_digital: false\n                store_credit_amount: 0\n                gift_certificate_amount: 0\n                ip_address: 70.112.53.67\n                geoip_country: United States\n                geoip_country_iso2: US\n                currency_id: 1\n                currency_code\": USD\n                currency_exchange_rate: 1\n                default_currency_id: 1\n                default_currency_code: USD\n                staff_notes: BIN-45\n                customer_message: Custom Journal Added\n                discount_amount: 0\n                coupon_discount\": 0\n                shipping_address_count: 1\n                is_deleted: false\n                ebay_order_id: 0\n                cart_id: 8b84f622-faf1-4c10-887b-f5dff2f9eaf4\n                billing_address:\n                  first_name: Jane\n                  last_name: Doe\n                  company: ''\n                  street_1: 555 East Street\n                  street_2: ''\n                  city: Austin\n                  state: Texas\n                  zip: '78108'\n                  country: United States\n                  country_iso2: US\n                  phone: '1234567890'\n                  email: janedoe@email.com\n                  form_fields:\n                    name: Delivery Instructions\n                    value: Leave in backyard\n                is_email_opt_in: false\n                credit_card_type: {}\n                order_source: manual\n                channel_id: 1\n                external_source: {}\n                products:\n                  url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/247/products'\n                  resource: /orders/247/products\n                shipping_addresses:\n                  url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/247/shippingaddresses'\n                  resource: /orders/247/shippingaddresses\n                coupons:\n                  url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/247/coupons'\n                  resource: /orders/247/coupons\n                external_id: {}\n                external_merchant_id: {}\n                tax_provider_id: BasicTaxProvider\n                store_default_currency_code: USD\n                store_default_to_transactional_exchange_rate: 1\n                custom_status: Awaiting Fulfillment\n                customer_locale: en\n    orderCouponsCollection_Resp:\n      description: ''\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/orderCoupons_Base'\n          examples:\n            response:\n              value:\n                - id: 3\n                  coupon_id: 1\n                  order_id: 120\n                  code: S2549JM0Y\n                  amount: 5\n                  type: 2\n                  discount: 5\n    orderMessagesCollection_Resp:\n      description: ''\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/orderMessages'\n          examples:\n            response:\n              value:\n                - id: 2\n                  order_id: 181\n                  staff_id: 1\n                  customer_id: 11\n                  type: admin\n                  subject: 'Re: Order #181'\n                  message: Thank you again!\n                  status: unread\n                  is_flagged: false\n                  date_created: 'Wed, 26 Sep 2018 15:52:03 +0000'\n                  customer: {}\n    orderProductsCollection_Resp:\n      description: ''\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/orderProducts'\n          examples:\n            response:\n              value:\n                - id: 65\n                  order_id: 149\n                  product_id: 77\n                  order_address_id: 51\n                  name: Fog Linen Chambray Towel - Beige Stripe\n                  name_customer: Fog Linen Chambray Towel - Beige Stripe\n                  name_merchant: Fog Linen Chambray Towel - Beige Stripe\n                  sku: S-ORAN\n                  upc: '1234567891112'\n                  type: physical\n                  base_price: '55.9900'\n                  price_ex_tax: '55.9900'\n                  price_inc_tax: '65.2300'\n                  price_tax: '9.2400'\n                  base_total: '55.9900'\n                  total_ex_tax: '55.9900'\n                  total_inc_tax: '65.2300'\n                  total_tax: '9.2400'\n                  weight: '1.0000'\n                  quantity: 1\n                  base_cost_price: '0.0000'\n                  cost_price_inc_tax: '0.0000'\n                  cost_price_ex_tax: '0.0000'\n                  cost_price_tax: '0.0000'\n                  is_refunded: false\n                  quantity_refunded: 0\n                  refund_amount: '0.0000'\n                  return_id: 0\n                  wrapping_name: ''\n                  base_wrapping_cost: '0.0000'\n                  wrapping_cost_ex_tax: '0.0000'\n                  wrapping_cost_inc_tax: '0.0000'\n                  wrapping_cost_tax: '0.0000'\n                  wrapping_message: ''\n                  quantity_shipped: 0\n                  fixed_shipping_cost: '5.0000'\n                  ebay_item_id: ''\n                  ebay_transaction_id: ''\n                  option_set_id: 19\n                  parent_order_product_id: null\n                  is_bundled_product: false\n                  bin_picking_number: ''\n                  external_id: null\n                  fulfillment_source: ''\n                  applied_discounts:\n                    - id: manual-discount\n                      amount: '1.5900'\n                      name: Manual Discount\n                      code: null\n                      target: order\n                  product_options:\n                    - id: 45\n                      option_id: 18\n                      order_product_id: 65\n                      product_option_id: 120\n                      display_name: Size\n                      display_name_customer: Size\n                      display_name_merchant: Size\n                      display_value: S\n                      display_value_customer: S\n                      display_value_merchant: S\n                      value: '69'\n                      type: Multiple choice\n                      name: Apparel sizes\n                      display_style: Rectangle\n                    - id: 46\n                      option_id: 3\n                      order_product_id: 65\n                      product_option_id: 121\n                      display_name: Color\n                      display_value: Orange\n                      display_value_customer: S\n                      display_value_merchant: S\n                      value: '112'\n                      type: Swatch\n                      name: Colors\n                      display_style: ''\n                    - id: 47\n                      option_id: 37\n                      order_product_id: 65\n                      product_option_id: 122\n                      display_name: Add Letters\n                      display_value: Text Field\n                      value: Text Field\n                      type: Text field\n                      name: Add Letters\n                      display_style: ''\n                    - id: 48\n                      option_id: 38\n                      order_product_id: 65\n                      product_option_id: 123\n                      display_name: Is this a gift?\n                      display_value: 'Yes'\n                      value: '104'\n                      type: Checkbox\n                      name: Gift Wrapping $5\n                      display_style: ''\n                    - id: 49\n                      option_id: 39\n                      order_product_id: 65\n                      product_option_id: 124\n                      display_name: PickList\n                      display_value: Able Brewing System\n                      value: '106'\n                      type: Product Pick List\n                      name: PickList\n                      display_style: Pick list\n                  configurable_fields: []\n                - id: 66\n                  order_id: 149\n                  product_id: 86\n                  order_address_id: 51\n                  name: Able Brewing System\n                  sku: ABS\n                  type: physical\n                  base_price: '0.0000'\n                  price_ex_tax: '0.0000'\n                  price_inc_tax: '0.0000'\n                  price_tax: '0.0000'\n                  base_total: '0.0000'\n                  total_ex_tax: '0.0000'\n                  total_inc_tax: '0.0000'\n                  total_tax: '0.0000'\n                  weight: '0.0000'\n                  quantity: 1\n                  base_cost_price: '0.0000'\n                  cost_price_inc_tax: '0.0000'\n                  cost_price_ex_tax: '0.0000'\n                  cost_price_tax: '0.0000'\n                  is_refunded: false\n                  quantity_refunded: 0\n                  refund_amount: '0.0000'\n                  return_id: 0\n                  wrapping_name: ''\n                  base_wrapping_cost: '0.0000'\n                  wrapping_cost_ex_tax: '0.0000'\n                  wrapping_cost_inc_tax: '0.0000'\n                  wrapping_cost_tax: '0.0000'\n                  wrapping_message: ''\n                  quantity_shipped: 0\n                  event_name: null\n                  event_date: null\n                  fixed_shipping_cost: '0.0000'\n                  ebay_item_id: ''\n                  ebay_transaction_id: ''\n                  option_set_id: null\n                  parent_order_product_id: 65\n                  is_bundled_product: true\n                  bin_picking_number: BIN\n                  external_id: null\n                  fulfillment_source: ''\n                  applied_discounts: []\n                  product_options: []\n                  configurable_fields: []\n    orderProductLineItem_Resp:\n      description: ''\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/orderProducts'\n          examples:\n            response:\n              value:\n                id: 116\n                order_id: 181\n                product_id: 188\n                order_address_id: 81\n                name: Dustpan & Brush\n                name_customer: Dustpan & Brush\n                name_merchant: Dustpan & Brush\n                sku: DUST1\n                upc: '1234567891112'\n                type: physical\n                base_price: '31.9500'\n                price_ex_tax: '31.9500'\n                price_inc_tax: '37.2300'\n                price_tax: '5.2800'\n                base_total: '31.9500'\n                total_ex_tax: '31.9500'\n                total_inc_tax: '37.2300'\n                total_tax: '5.2800'\n                weight: '2.0000'\n                quantity: 1\n                base_cost_price: '0.0000'\n                cost_price_inc_tax: '0.0000'\n                cost_price_ex_tax: '0.0000'\n                cost_price_tax: '0.0000'\n                is_refunded: false\n                quantity_refunded: 0\n                refund_amount: '0.0000'\n                return_id: 0\n                wrapping_name: ''\n                base_wrapping_cost: '0.0000'\n                wrapping_cost_ex_tax: '0.0000'\n                wrapping_cost_inc_tax: '0.0000'\n                wrapping_cost_tax: '0.0000'\n                wrapping_message: ''\n                quantity_shipped: 0\n                event_name: null\n                event_date: null\n                fixed_shipping_cost: '0.0000'\n                ebay_item_id: ''\n                ebay_transaction_id: ''\n                option_set_id: null\n                parent_order_product_id: null\n                is_bundled_product: false\n                bin_picking_number: ''\n                external_id: null\n                fulfillment_source: ''\n                applied_discounts: []\n                product_options:\n                  - id: 89\n                    option_id: 90\n                    order_product_id: 116\n                    product_option_id: 227\n                    display_name: Product Pick List\n                    display_name_customer: Product Pick List\n                    display_name_merchant: Product Pick List\n                    display_value: 1L Le Parfait Jar\n                    display_value_customer: 1L Le Parfait Jar\n                    display_value_merchant: 1L Le Parfait Jar\n                    value: '197'\n                    type: Product Pick List\n                    name: ProductPickList\n                    display_style: Pick list\n                configurable_fields: []\n              Custom Product:\n                - id: 238\n                  order_id: 247\n                  product_id: 0\n                  variant_id: 0\n                  order_address_id: 151\n                  name: Journal\n                  name_customer: Journal\n                  name_merchant: Journal\n                  sku: Jour-BLK\n                  upc: ''\n                  type: physical\n                  base_price: '45.0000'\n                  price_ex_tax: '41.5700'\n                  price_inc_tax: '45.0000'\n                  price_tax: '3.4300'\n                  base_total: '45.0000'\n                  total_ex_tax: '41.5700'\n                  total_inc_tax: '45.0000'\n                  total_tax: '3.4300'\n                  weight: '0.0000'\n                  width: '0.0000'\n                  height: '0.0000'\n                  depth: '0.0000'\n                  quantity: 1\n                  base_cost_price: '0.0000'\n                  cost_price_inc_tax: '0.0000'\n                  cost_price_ex_tax: '0.0000'\n                  cost_price_tax: '0.0000'\n                  is_refunded: false\n                  quantity_refunded: 0\n                  refund_amount: '0.0000'\n                  return_id: 0\n                  wrapping_name: ''\n                  base_wrapping_cost: '0.0000'\n                  wrapping_cost_ex_tax: '0.0000'\n                  wrapping_cost_inc_tax: '0.0000'\n                  wrapping_cost_tax: '0.0000'\n                  wrapping_message: ''\n                  quantity_shipped: 0\n                  event_name: null\n                  event_date: ''\n                  fixed_shipping_cost: '0.0000'\n                  ebay_item_id: ''\n                  ebay_transaction_id: ''\n                  option_set_id: null\n                  parent_order_product_id: null\n                  is_bundled_product: false\n                  bin_picking_number: ''\n                  external_id: null\n                  fulfillment_source: ''\n                  applied_discounts: []\n                  product_options: []\n                  configurable_fields: []\n              Product with Variants:\n                - id: 240\n                  order_id: 247\n                  product_id: 201\n                  variant_id: 477\n                  order_address_id: 151\n                  name: BigCommerce T-Shirt\n                  name_customer: BigCommerce T-Shirt\n                  name_merchant: BigCommerce T-Shirt\n                  sku: SKU-201-Red-Small T-Shirt-Able Brewing System\n                  upc: ''\n                  type: physical\n                  base_price: '235.0000'\n                  price_ex_tax: '217.0900'\n                  price_inc_tax: '235.0000'\n                  price_tax: '17.9100'\n                  base_total: '940.0000'\n                  total_ex_tax: '868.3600'\n                  total_inc_tax: '940.0000'\n                  total_tax: '71.6400'\n                  weight: '3.0000'\n                  width: '3.0000'\n                  height: '3.0000'\n                  depth: '3.0000'\n                  quantity: 4\n                  base_cost_price: '0.0000'\n                  cost_price_inc_tax: '0.0000'\n                  cost_price_ex_tax: '0.0000'\n                  cost_price_tax: '0.0000'\n                  is_refunded: false\n                  quantity_refunded: 0\n                  refund_amount: '0.0000'\n                  return_id: 0\n                  wrapping_name: ''\n                  base_wrapping_cost: '0.0000'\n                  wrapping_cost_ex_tax: '0.0000'\n                  wrapping_cost_inc_tax: '0.0000'\n                  wrapping_cost_tax: '0.0000'\n                  wrapping_message: ''\n                  quantity_shipped: 0\n                  event_name: {}\n                  event_date: ''\n                  fixed_shipping_cost: '0.0000'\n                  ebay_item_id: ''\n                  ebay_transaction_id: ''\n                  option_set_id: 68\n                  parent_order_product_id: {}\n                  is_bundled_product: false\n                  bin_picking_number: ''\n                  external_id: {}\n                  fulfillment_source: ''\n                  applied_discounts: []\n              product_options:\n                - id: 143\n                  option_id: 96\n                  order_product_id: 240\n                  product_option_id: 242\n                  display_name: Color\n                  display_name_customer: Color\n                  display_name_merchant: Color\n                  display_value: Red\n                  display_value_customer: Red\n                  display_value_merchant: Red\n                  value: '211'\n                  type: Swatch\n                  name: Color1549572910-201\n                  display_style: ''\n                - id: 144\n                  option_id: 114\n                  order_product_id: 240\n                  product_option_id: 263\n                  display_name: PickList PriceList\n                  display_name_customer: PickList PriceList\n                  display_name_merchant: PickList PriceList\n                  display_value: Able Brewing System\n                  display_value_customer: Able Brewing System\n                  display_value_merchant: Able Brewing System\n                  value: '237'\n                  type: Product Pick List\n                  name: PickList-PriceList1549572910-201\n                  display_style: Pick list with photos\n                - id: 145\n                  option_id: 97\n                  order_product_id: 240\n                  product_option_id: 243\n                  display_name: T-Shirt Size\n                  display_name_customer: T-Shirt Size\n                  display_name_merchant: T-Shirt Size\n                  display_value: Small T-Shirt\n                  display_value_customer: Small T-Shirt\n                  display_value_merchant: Small T-Shirt\n                  value: '214'\n                  type: Multiple choice\n                  name: T-Shirt-Size1545071633-201\n                  display_style: Rectangle\n                - id: 146\n                  option_id: 105\n                  order_product_id: 240\n                  product_option_id: 254\n                  display_name: Custom Message\n                  display_name_customer: Custom Message\n                  display_name_merchant: Custom Message\n                  display_value: BigCommerce\n                  display_value_customer: BigCommerce\n                  display_value_merchant: BigCommerce\n                  value: BigCommerce\n                  type: Text field\n                  name: Custom-Message1549572912-201\n                  display_style: ''\n                  configurable_fields: []\n    orderShipmentCollection_Resp:\n      description: ''\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/orderShipment'\n          examples:\n            application/json:\n              value:\n                - id: 6\n                  order_id: 225\n                  customer_id: 11\n                  order_address_id: 127\n                  date_created: 'Mon, 11 Mar 2019 17:22:08 +0000'\n                  tracking_number: EJ958083578US\n                  merchant_shipping_cost: '0.0000'\n                  shipping_method: None\n                  comments: Ready to go...\n                  shipping_provider: usps\n                  tracking_carrier: ''\n                  tracking_link: ''\n                  billing_address:\n                    first_name: Jane\n                    last_name: Does\n                    company: ''\n                    street_1: 123 Main Street\n                    street_2: ''\n                    city: Austin\n                    state: Texas\n                    zip: '78751'\n                    country: United States\n                    country_iso2: US\n                    phone: ''\n                    email: janedoe@example.com\n                  shipping_address:\n                    first_name: Trishy\n                    last_name: Test\n                    company: Acme Pty Ltd\n                    street_1: 666 Sussex St\n                    street_2: ''\n                    city: Anywhere\n                    state: Some State\n                    zip: '12345'\n                    country: United States\n                    country_iso2: US\n                    phone: ''\n                    email: elsie@example.com\n                  items:\n                    - order_product_id: 188\n                      product_id: 0\n                      quantity: 1\n                - id: 7\n                  order_id: 225\n                  customer_id: 11\n                  order_address_id: 128\n                  date_created: 'Mon, 11 Mar 2019 17:22:31 +0000'\n                  tracking_number: EJ958083578UK\n                  merchant_shipping_cost: '0.0000'\n                  shipping_method: None\n                  comments: Janes Order\n                  shipping_provider: usps\n                  tracking_carrier: ''\n                  tracking_link: ''\n                  billing_address:\n                    first_name: Jane\n                    last_name: Does\n                    company: ''\n                    street_1: 123 Main Street\n                    street_2: ''\n                    city: Austin\n                    state: Texas\n                    zip: '78751'\n                    country: United States\n                    country_iso2: US\n                    phone: ''\n                    email: janedoe@example.com\n                  shipping_address:\n                    first_name: Jane\n                    last_name: Doe\n                    company: ''\n                    street_1: 555 Main Street\n                    street_2: ''\n                    city: Austin\n                    state: Texas\n                    zip: '78751'\n                    country: United States\n                    country_iso2: US\n                    phone: ''\n                    email: janedoe@example.com\n                  items:\n                    - order_product_id: 189\n                      product_id: 0\n                      quantity: 1\n    orderShipment_Resp:\n      description: ''\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/orderShipment'\n          examples:\n            application/json:\n              value:\n                id: 11\n                order_id: 228\n                customer_id: 11\n                order_address_id: 131\n                date_created: 'Wed, 13 Mar 2019 16:35:37 +0000'\n                tracking_number: EJ958083578US\n                merchant_shipping_cost: '0.0000'\n                shipping_method: None\n                comments: Ready to go...\n                shipping_provider: usps\n                tracking_carrier: ''\n                billing_address:\n                  first_name: Jane\n                  last_name: Doe\n                  company: ''\n                  street_1: 123 Main Street\n                  street_2: ''\n                  city: Austin\n                  state: Texas\n                  zip: '78751'\n                  country: United States\n                  country_iso2: US\n                  phone: ''\n                  email: janedoe@example.com\n                shipping_address:\n                  first_name: Trishy\n                  last_name: Test\n                  company: Acme Pty Ltd\n                  street_1: 666 Sussex St\n                  street_2: ''\n                  city: Anywhere\n                  state: Some State\n                  zip: '12345'\n                  country: United States\n                  country_iso2: US\n                  phone: ''\n                  email: elsie@example.com\n                items:\n                  - order_product_id: 194\n                    product_id: 0\n                    quantity: 1\n                  - order_product_id: 195\n                    product_id: 0\n                    quantity: 1\n    orderCount_Resp:\n      description: ''\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/orderCount'\n          examples:\n            response:\n              value:\n                count: 27\n    orderShippingAddressCollection_Resp:\n      description: ''\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/orderShippingAddress'\n          examples:\n            response:\n              value:\n                - id: 132\n                  order_id: 229\n                  first_name: Trishy\n                  last_name: Test\n                  company: Acme Pty Ltd\n                  street_1: 666 Sussex St\n                  street_2: ''\n                  city: San Antonio\n                  zip: '78251'\n                  country: United States\n                  country_iso2: US\n                  state: Texas\n                  email: janedoe@example.com\n                  phone: ''\n                  items_total: 2\n                  items_shipped: 2\n                  shipping_method: None\n                  base_cost: '12.9900'\n                  cost_ex_tax: '12.0000'\n                  cost_inc_tax: '12.9900'\n                  cost_tax: '0.9900'\n                  cost_tax_class_id: 0\n                  base_handling_cost: '0.0000'\n                  handling_cost_ex_tax: '0.0000'\n                  handling_cost_inc_tax: '0.0000'\n                  handling_cost_tax: '0.0000'\n                  handling_cost_tax_class_id: 0\n                  shipping_zone_id: 1\n                  shipping_zone_name: United States -1\n                  shipping_quotes:\n                    url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/229/shippingaddresses/132/shippingquotes'\n                    resource: /orders/229/shippingaddresses/132/shippingquotes\n                  form_fields: []\n                - id: 133\n                  order_id: 229\n                  first_name: Jane\n                  last_name: Doe\n                  company: ''\n                  street_1: 555 Main Street\n                  street_2: ''\n                  city: Austin\n                  zip: '78751'\n                  country: United States\n                  country_iso2: US\n                  state: Texas\n                  email: janedoe@example.com\n                  phone: ''\n                  items_total: 0\n                  items_shipped: 0\n                  shipping_method: None\n                  base_cost: '12.9900'\n                  cost_ex_tax: '12.0000'\n                  cost_inc_tax: '12.9900'\n                  cost_tax: '0.9900'\n                  cost_tax_class_id: 0\n                  base_handling_cost: '0.0000'\n                  handling_cost_ex_tax: '0.0000'\n                  handling_cost_inc_tax: '0.0000'\n                  handling_cost_tax: '0.0000'\n                  handling_cost_tax_class_id: 0\n                  shipping_zone_id: 1\n                  shipping_zone_name: United States -1\n                  shipping_quotes:\n                    url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/229/shippingaddresses/133/shippingquotes'\n                    resource: /orders/229/shippingaddresses/133/shippingquotes\n                  form_fields: []\n    orderShippingAddress_Resp:\n      description: ''\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/orderShippingAddress'\n          examples:\n            response:\n              value:\n                id: 42\n                order_id: 140\n                first_name: Jane\n                last_name: Doe\n                company: ''\n                street_1: 123 MainStreet\n                street_2: ''\n                city: Austin\n                zip: '78751'\n                country: United States\n                country_iso2: US\n                state: Texas\n                email: jane@example.com\n                phone: '1234567890'\n                items_total: 2\n                items_shipped: 0\n                shipping_method: Fixed Shipping\n                base_cost: '5.0000'\n                cost_ex_tax: '4.0000'\n                cost_inc_tax: '4.3200'\n                cost_tax: '0.3200'\n                cost_tax_class_id: 2\n                base_handling_cost: '0.0000'\n                handling_cost_ex_tax: '0.0000'\n                handling_cost_inc_tax: '0.0000'\n                handling_cost_tax: '0.0000'\n                handling_cost_tax_class_id: 2\n                shipping_zone_id: 1\n                shipping_zone_name: United States\n                shipping_quotes:\n                  url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/140/shippingaddresses/42/shippingquotes'\n                  resource: /orders/140/shippingaddresses/42/shippingquotes\n                form_fields:\n                  - name: Wholesale ID\n                    value: '12345566'\n    shippingQuotes_Resp:\n      description: This response can vary depending on the shipping provider.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/shippingQuotes_Base'\n        Fixed Shipping:\n          examples:\n            response:\n              value:\n                id: '16'\n                uuid: 18aaa5eb-3c7a-4bf8-bfaa-d14d155606f1\n                timestamp: 'Mon, 30 Jul 2018 15:32:35 +0000'\n                shipping_provider_id: bcproductbased\n                shipping_provider_quote: []\n                provider_code: productfixedshipping\n                carrier_code: ''\n                rate_code: ''\n                rate_id: ''\n        UPS Example:\n          examples:\n            response:\n              value:\n                id: '19'\n                uuid: 6c21e6ba-3080-4def-991b-ae79ace4dfac\n                timestamp: 'Mon, 20 Aug 2018 14:47:13 +0000'\n                shipping_provider_id: bcrealtime\n                shipping_provider_quote:\n                  rate:\n                    value: '44.11'\n                    unit: USD\n                  transitTime: 1 business day\n                  name: UPS Next Day Air®\n                  signatureConfirmationFee: {}\n                  carrierName: ''\n                  carrierCode: {}\n                  code: {}\n                  deliveryMessage: ''\n                  labelSizes: []\n                  insuredMailFee: {}\n                  dates: []\n                  rateId: {}\n                provider_code: upsready\n                carrier_code: ''\n                rate_code: ''\n                rate_id: ''\n    orderTaxes_Resp:\n      description: ''\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/orderTaxes_Base'\n          examples:\n            response:\n              value:\n                - id: 13\n                  order_id: 138\n                  order_address_id: 39\n                  tax_rate_id: 1\n                  tax_class_id: 0\n                  name: Tax\n                  class: Default Tax Class\n                  rate: '8.0000'\n                  priority: 0\n                  priority_amount: '17.6400'\n                  line_amount: '17.6400'\n                - id: 14\n                  order_id: 138\n                  order_address_id: 40\n                  tax_rate_id: 1\n                  tax_class_id: 0\n                  name: Tax\n                  class: Default Tax Class\n                  rate: '8.0000'\n                  priority: 0\n                  priority_amount: '4.4000'\n                  line_amount: '4.4000'\n    actual-order-response:\n      description: ''\n      content:\n        application/json:\n          schema:\n            title: Order\n            example:\n              id: 113\n              customer_id: 1\n              date_created: 'Wed, 17 Jan 2018 20:11:21 +0000'\n              date_modified: 'Wed, 25 Apr 2018 20:20:25 +0000'\n              date_shipped: ''\n              status_id: 7\n              status: Awaiting Payment\n              subtotal_ex_tax: '143.9500'\n              subtotal_inc_tax: '143.9500'\n              subtotal_tax: '0.0000'\n              base_shipping_cost: '0.0000'\n              shipping_cost_ex_tax: '0.0000'\n              shipping_cost_inc_tax: '0.0000'\n              shipping_cost_tax: '0.0000'\n              shipping_cost_tax_class_id: 2\n              base_handling_cost: '0.0000'\n              handling_cost_ex_tax: '0.0000'\n              handling_cost_inc_tax: '0.0000'\n              handling_cost_tax: '0.0000'\n              handling_cost_tax_class_id: 2\n              base_wrapping_cost: '0.0000'\n              wrapping_cost_ex_tax: '0.0000'\n              wrapping_cost_inc_tax: '0.0000'\n              wrapping_cost_tax: '0.0000'\n              wrapping_cost_tax_class_id: 3\n              total_ex_tax: '138.9500'\n              total_inc_tax: '138.9500'\n              total_tax: '0.0000'\n              items_total: 2\n              items_shipped: 0\n              payment_method: Cash on Delivery\n              payment_provider_id: null\n              payment_status: ''\n              refunded_amount: '0.0000'\n              order_is_digital: false\n              store_credit_amount: '0.0000'\n              gift_certificate_amount: '0.0000'\n              ip_address: 64.183.182.114\n              geoip_country: United States\n              geoip_country_iso2: US\n              currency_id: 1\n              currency_code: USD\n              currency_exchange_rate: '1.0000000000'\n              default_currency_id: 1\n              default_currency_code: USD\n              staff_notes: ''\n              customer_message: ''\n              discount_amount: '0.0000'\n              coupon_discount: '5.0000'\n              shipping_address_count: 1\n              is_deleted: false\n              ebay_order_id: '0'\n              cart_id: 1cf3da59-1c90-42a9-82fb-2a954743a390\n              billing_address:\n                first_name: Jane\n                last_name: Does\n                company: ''\n                street_1: 123 MainStreet\n                street_2: ''\n                city: Austin\n                state: Texas\n                zip: '78751'\n                country: United States\n                country_iso2: US\n                phone: ''\n                email: jane@example.com\n                form_fields: []\n              is_email_opt_in: false\n              credit_card_type: null\n              order_source: www\n              external_source: null\n              products:\n                url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/113/products'\n                resource: /orders/113/products\n              shipping_addresses:\n                url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/113/shippingaddresses'\n                resource: /orders/113/shippingaddresses\n              coupons:\n                url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/113/coupons'\n                resource: /orders/113/coupons\n              external_id: null\n              external_merchant_id: null\n              custom_status: Awaiting Payment\n            type: object\n            properties:\n              id:\n                description: 'The ID of the order, a read-only value. Do not pass in PUT or POST.'\n                example: 118\n                type: integer\n              customer_id:\n                description: The ID of the customer placing the order; or 0 if it was a guest order.\n                example: 6\n                type: number\n              date_created:\n                type: string\n                description: 'The date the order was created, formatted in the RFC-2822 standard. You set this attribute on Order creation (POST) to support the migration of historical orders. If you do not provide a value, then it will default to the current date/time. e.g., `Tue, 20 Nov 2012 00:00:00 +0000`'\n              date_modified:\n                type: string\n                description: A read-only value representing the last modification of the order. Do not attempt to modify or set this value in a POST or PUT operation. RFC-2822\n              date_shipped:\n                type: string\n                description: A read-only value representing the date of shipment. Do not attempt to modify or set this value in a POST or PUT operation. RFC-2822\n              status_id:\n                description: The status ID of the order.\n                example: 11\n                type: integer\n              cart_id:\n                description: 'The cart ID from which this order originated, if applicable. Correlates with the Cart API. This is a READ-ONLY field; do not set or modify its value in a POST or PUT request.'\n                example: a8458391-ef68-4fe5-9ec1-442e6a767364\n                type: string\n              status:\n                description: 'The status will include one of the (string, optional) - values defined under Order Statuses. This value is read-only. Do not attempt to modify or set this value in a POST or PUT operation.'\n                example: Awaiting Fulfillment\n                type: string\n              custom_status:\n                description: 'Contains the same (string, optional) - value as the Order Statuses object’s `custom_label` property.'\n                example: Awaiting Fulfillment\n                type: string\n              subtotal_ex_tax:\n                description: 'Override value for subtotal excluding tax. If specified, the field `subtotal_inc_tax` is also required. (Float, Float-As-String, Integer)'\n                example: '225.0000'\n                type: string\n              subtotal_inc_tax:\n                description: 'Override value for subtotal including tax. If specified, the field `subtotal_ex_tax` is also required. (Float, Float-As-String, Integer)'\n                example: '225.0000'\n                type: string\n              subtotal_tax:\n                description: 'A read-only value. Do not attempt to set or modify this value in a POST or PUT operation. (Float, Float-As-String, Integer)'\n                example: '0.0000'\n                type: string\n              base_shipping_cost:\n                description: 'The value of the base shipping cost. (Float, Float-As-String, Integer)'\n                example: '0.0000'\n                type: string\n              shipping_cost_ex_tax:\n                description: 'The value of shipping cost, excluding tax. (Float, Float-As-String, Integer)'\n                example: '0.0000'\n                type: string\n              shipping_cost_inc_tax:\n                description: 'The value of shipping cost, including tax. (Float, Float-As-String, Integer)'\n                example: '0.0000'\n                type: string\n              shipping_cost_tax:\n                description: 'A read-only value. Do not attempt to modify or set this value in a POST or PUT operation. (Float, Float-As-String, Integer)'\n                example: '0.0000'\n                type: string\n              shipping_cost_tax_class_id:\n                description: 'Shipping-cost tax class. A read-only value. Do not attempt to modify or set this value in a POST or PUT operation. (NOTE: Value ignored if automatic tax is enabled on the store.)'\n                example: 2\n                type: integer\n              base_handling_cost:\n                description: 'The value of the base handling cost. (Float, Float-As-String, Integer)'\n                example: '0.0000'\n                type: string\n              handling_cost_ex_tax:\n                description: 'The value of the handling cost, excluding tax. (Float, Float-As-String, Integer)'\n                example: '0.0000'\n                type: string\n              handling_cost_inc_tax:\n                description: 'The value of the handling cost, including tax. (Float, Float-As-String, Integer)'\n                type:\n                  - number\n                  - string\n              handling_cost_tax:\n                description: 'A read-only value. Do not attempt to modify or set this value in a POST or PUT operation. (Float, Float-As-String, Integer)'\n                example: '0.0000'\n                type: string\n              handling_cost_tax_class_id:\n                description: 'A read-only value. Do not attempt to set or modify this value in a POST or PUT operation. (NOTE: Value ignored if automatic tax is enabled on the store.)'\n                example: 2\n                type: integer\n              base_wrapping_cost:\n                description: The value of the base wrapping cost.\n                example: 0\n                oneOf:\n                  - type: string\n                  - type: number\n              wrapping_cost_ex_tax:\n                description: 'The value of the wrapping cost, excluding tax. (Float, Float-As-String, Integer)'\n                example: '0.0000'\n                type: string\n              wrapping_cost_inc_tax:\n                description: 'The value of the wrapping cost, including tax. (Float, Float-As-String, Integer)'\n                example: '0.0000'\n                type: string\n              wrapping_cost_tax:\n                description: 'A read-only value. Do not attempt to modify or set this value in a POST or PUT operation. (Float, Float-As-String, Integer)'\n                example: '0.0000'\n                type: string\n              wrapping_cost_tax_class_id:\n                description: 'A read-only value. Do not attempt to set or modify this value in a POST or PUT operation. (NOTE: Value ignored if automatic tax is enabled on the store.)'\n                example: 3\n                type: integer\n              total_ex_tax:\n                description: 'Override value for the total, excluding tax. If specified, the field `total_inc_tax` is also required. (Float, Float-As-String, Integer)'\n                example: '225.0000'\n                type: string\n              total_inc_tax:\n                description: 'Override value for the total, including tax. If specified, the field `total_ex_tax` is also required. (Float, Float-As-String, Integer)'\n                example: '225.0000'\n                type: string\n              total_tax:\n                description: 'A read-only value. Do not attempt to set or modify this value in a POST or PUT operation. (Float, Float-As-String, Integer)'\n                example: '0.0000'\n                type: string\n              items_total:\n                description: The total number of items in the order.\n                example: 1\n                type: number\n              items_shipped:\n                description: The number of items that have been shipped.\n                example: 0\n                type: number\n              payment_method:\n                description: 'The payment method for this order. Can be one of the following: `Manual`, `Credit Card`, `cash`, `Test Payment Gateway`, etc.'\n                example: Cash on Delivery\n                type: string\n              payment_provider_id:\n                description: The external Transaction ID/Payment ID within this order’s payment provider (if a payment provider was used).\n                example: null\n                type: string\n                nullable: true\n              payment_status:\n                description: A read-only value. Do not attempt to set or modify this value in a POST or PUT operation.\n                type: string\n              refunded_amount:\n                description: 'The amount refunded from this transaction; always returns `0`. (Float, Float-As-String, Integer) '\n                example: '0.0000'\n                type: string\n              order_is_digital:\n                description: Whether this is an order for digital products.\n                example: false\n                type: boolean\n              store_credit_amount:\n                description: 'Represents the store credit that the shopper has redeemed on this individual order. This is a read-only value. Do not pass in a POST or PUT. (Float, Float-As-String, Integer)'\n                example: '0.0000'\n                type: string\n              gift_certificate_amount:\n                description: 'A read-only value. Do not pass in a POST or PUT. (Float, Float-As-String, Integer)'\n                example: '0.0000'\n                type: string\n              ip_address:\n                description: 'IP Address of the customer, if known.'\n                example: 12.345.678.910\n                type: string\n              geoip_country:\n                description: 'The full name of the country where the customer made the purchase, based on the IP.'\n                example: United States\n                type: string\n              geoip_country_iso2:\n                description: 'The country where the customer made the purchase, in ISO2 format, based on the IP.'\n                example: US\n                type: string\n              currency_id:\n                description: The display currency ID. May be different from transactional currency. A read-only value. Do not pass in a POST or PUT.\n                example: 1\n                type: integer\n              currency_code:\n                description: The currency code of the display currency used to present prices on the storefront. May be different from transactional currency. A read-only value. Do not pass in a POST or PUT.\n                example: USD\n                type: string\n              currency_exchange_rate:\n                description: 'A read-only value. Do not pass in a POST or PUT. (Float, Float-As-String, Integer)'\n                example: '1.0000000000'\n                type: string\n              default_currency_id:\n                description: The transactional currency ID. A read-only value. Do not pass in a POST or PUT.\n                example: 1\n                type: integer\n              default_currency_code:\n                description: The currency code of the transactional currency the shopper pays in. A read-only value. Do not pass in a POST or PUT.\n                type: string\n                example: USD\n              staff_notes:\n                type: string\n                description: Any additional notes for staff.\n                example: Send Saturday\n                maxLength: 65535\n              customer_message:\n                description: 'Message that the customer entered (number, optional) -o the `Order Comments` box during checkout.'\n                example: Thank you\n                type: string\n              discount_amount:\n                description: 'Amount of discount for this transaction. (Float, Float-As-String, Integer)'\n                example: '0.0000'\n                type: string\n              coupon_discount:\n                description: 'A read-only value. Do not pass in a POST or PUT. (Float, Float-As-String, Integer)'\n                example: '5.0000'\n                type: string\n              shipping_address_count:\n                type: number\n                description: The number of shipping addresses associated with this transaction. A read-only value. Do not pass in a POST or PUT.\n              is_deleted:\n                description: 'Indicates whether the order was deleted (archived). Set to to true, to archive an order.'\n                example: false\n                type: boolean\n              is_email_opt_in:\n                description: Indicates whether the shopper has selected an opt-in check box (on the checkout page) to receive emails. A read-only value. Do not pass in a POST or PUT.\n                example: false\n                type: boolean\n              credit_card_type:\n                description: Credit card type\n                example: 0\n                type: integer\n                nullable: true\n              ebay_order_id:\n                description: 'If the order was placed through eBay, the eBay order number will be included. Otherwise, the value will be `0`.'\n                example: '0'\n                type: string\n              billing_address:\n                title: Billing Address\n                type: object\n                description: Required to create an order.\n                properties:\n                  first_name:\n                    description: ''\n                    example: Jane\n                    type: string\n                  last_name:\n                    description: ''\n                    example: Doe\n                    type: string\n                  company:\n                    description: ''\n                    type: string\n                  street_1:\n                    description: ''\n                    example: 123 Main Street\n                    type: string\n                  street_2:\n                    description: ''\n                    type: string\n                  city:\n                    description: ''\n                    example: Austin\n                    type: string\n                  state:\n                    description: ''\n                    example: TX\n                    type: string\n                  zip:\n                    description: ''\n                    example: '12345'\n                    type: number\n                  country:\n                    description: ''\n                    example: United States\n                    type: string\n                  country_iso2:\n                    description: ''\n                    example: US\n                    type: string\n                  phone:\n                    description: ''\n                    type: string\n                  email:\n                    description: ''\n                    example: janedoe@example.com\n                    type: string\n                  form_fields:\n                    description: ''\n                    type: array\n                    items:\n                      title: Form Fields\n                      type: object\n                      description: Read-Only. If you have required address form fields they will need to be set as optional before creating an order with the API.\n                      properties:\n                        name:\n                          description: Name of the form field.\n                          type: string\n                          example: License Id\n                          readOnly: true\n                        value:\n                          description: Value of the form field.\n                          type: string\n                          example: 123BAF\n                          readOnly: true\n                      readOnly: true\n              order_source:\n                description: Orders submitted from the store’s website will include a `www` value. Orders submitted with the API will be set to `external`. A read-only value. Do not pass in a POST or PUT.\n                example: www\n                type: string\n              external_source:\n                description: |-\n                  This value identifies an external system that generated the order and submitted it to BigCommerce using the Orders API.\n                  * When supplying the value, we recommend combining the type of system and vendor, e.g., ERP (Acumatica) or POS (Square).\n                  * If you are migrating historical orders processed on another eCommerce platform to BigCommerce, supply the following code as the value: M-MIG. This code will exclude historical orders from the store’s GMV/order count, which factors into pricing.\n                  * If you do not provide a value, then it will default to null..\n                example: 'null'\n                oneOf:\n                  - type: string\n                  - type: null\n              products:\n                $ref: '#/components/schemas/products_Resource'\n              shipping_addresses:\n                $ref: '#/components/schemas/shippingAddresses_Resource'\n              coupons:\n                $ref: '#/components/schemas/coupons_Resource'\n              external_id:\n                description: 'ID of the order in another system. For example, the Amazon Order ID if this is an Amazon order.This field can be updated in a /POST, but using a /PUT to update the order will return a 400 error. The field ''external_id'' cannot be written to. Please remove it from your request before trying again. It can not be overwritten once set.'\n                example: 'null'\n                type: string\n                nullable: true\n              external_merchant_id:\n                description: ID of the merchant.\n                example: 'null'\n                type: string\n                nullable: true\n              channel_id:\n                type: integer\n                example: 1\n                description: Shows where the order originated. The channel_id will default to 1. Read-Only.\n              tax_provider_id:\n                type: string\n                description: |\n                  BasicTaxProvider - Tax is set to manual and order is created in the store.\n\n                  AvaTaxProvider - Tax is set to automatic and order is created in the store. Used for Avalara.\n\n                  \"\" (empty string) - The order is created with the API, or the tax provider is unknown.\n                enum:\n                  - BasicTaxProvider\n                  - AvaTaxProvider\n                  - ''\n              customer_locale:\n                type: 'string,'\n                example: en\n                description: The customer’s locale.\n  requestBodies: null\n  securitySchemes:\n    X-Auth-Token:\n      type: apiKey\n      name: X-Auth-Token\n      in: header\n      description: |-\n        ### OAuth Scopes\n        |  **UI Name** | **Permission** | **Parameter** |\n        | --- | --- | --- |\n        |  Orders | modify | `store_v2_orders` |\n        |  Orders | read-only | `store_v2_orders_read_only` |\n\n        ### Headers\n\n        |Header|Parameter|Description|\n        |-|-|-|\n        |`X-Auth-Token`|`access_token `|Obtained by creating an API account or installing an app in a BigCommerce control panel.|\n\n        ### Example\n\n        ```http\n        GET /stores/{store_hash}/v3/catalog/summary\n        host: api.bigcommerce.com\n        Content-Type: application/json\n        X-Auth-Token: {access_token}\n        ```\n\n        * For more information on Authenticating BigCommerce APIs, see: [Authentication](/api-docs/getting-started/authentication).\n  schemas:\n    order_Resp:\n      title: order_Resp\n      description: Order object returned in responses.\n      allOf:\n        - $ref: '#/components/schemas/order_RespOnly'\n        - $ref: '#/components/schemas/order_Shared'\n      x-internal: false\n    ordersCount_Full:\n      title: ordersCount_Full\n      type: object\n      properties:\n        statuses:\n          type: array\n          items:\n            $ref: '#/components/schemas/ordersCountStatus'\n        count:\n          description: Total number of orders in the store.\n          example: 45\n          type: number\n      x-internal: false\n    orderCoupons_Base:\n      title: orderCoupons_Base\n      type: object\n      properties:\n        id:\n          description: Numeric ID of the coupon code.\n          example: 3\n          type: integer\n        coupon_id:\n          description: Numeric ID of the associated coupon.\n          example: 1\n          type: integer\n        order_id:\n          description: Numeric ID of the associated order.\n          example: 120\n          type: integer\n        code:\n          description: 'Coupon code, as a string.'\n          example: S2549JM0Y\n          type:\n            - string\n            - 'null'\n        amount:\n          description: 'Amount of the discount. This information is returned as in integer. Dollar and percentage discounts will return the same. For example, $3 returns as ''3'' while 5% will return as 5. Check the discount type to see what type of discount is available.'\n          example: 5\n          type:\n            - string\n            - number\n            - integer\n          format: float\n        type:\n          type:\n            - integer\n          title: Order Coupon Discount Type\n          description: |-\n            0: per_item_discount\n            1: percentage_discount\n            2: per_total_discount\n            3: shipping_discount\n            4: free_shipping\n            5: promotions\n          enum:\n            - 0\n            - 1\n            - 2\n            - 3\n            - 4\n            - 5\n        discount:\n          description: |-\n            The amount off the order the discount is worth. For example, if an order subtotal is $90 and the discount is $3 then it will return as 3.000. If the discount is\n            3% then will return as 2.7000 or the amount of the order.  (Float, Float-As-String, Integer)\n          example: 2.7\n          type: number\n      x-internal: false\n    orderProducts:\n      title: orderProducts\n      type: object\n      description: ''\n      x-internal: false\n      properties:\n        id:\n          description: Numeric ID of this product within this order.\n          example: 25\n          type: integer\n        order_id:\n          description: Numeric ID of the associated order.\n          example: 120\n          type: integer\n        product_id:\n          description: Numeric ID of the product.\n          example: 20\n          type: integer\n        order_address_id:\n          description: Numeric ID of the associated order address.\n          example: 20\n          type: integer\n        name:\n          description: Alias for name_customer - The product name that is shown to customer in storefront.\n          example: Fog Linen Chambray Towel - Beige Stripe\n          type: string\n          minLength: 1\n        sku:\n          description: User-defined product code/stock keeping unit (SKU).\n          example: S-GREE\n          type: string\n        type:\n          type: string\n          enum:\n            - physical\n            - digital\n          example: physical\n          description: Type of product.\n        base_price:\n          description: 'The product’s base price. (Float, Float-As-String, Integer)'\n          example: '54.0000'\n          type: string\n        price_ex_tax:\n          description: 'The product’s price excluding tax. (Float, Float-As-String, Integer)'\n          example: '54.0000'\n          type: string\n        price_inc_tax:\n          description: 'The product’s price including tax. (Float, Float-As-String, Integer)'\n          example: '54.0000'\n          type: string\n        price_tax:\n          description: |-\n            Amount of tax applied to a single product.\n\n            Price tax is calculated as:\n            `price_tax = price_inc_tax - price_ex_tax`\n\n            (Float, Float-As-String, Integer)\n          example: '0.0000'\n          type: string\n        base_total:\n          description: 'Total base price. (Float, Float-As-String, Integer)'\n          example: '54.0000'\n          type: string\n        total_ex_tax:\n          description: 'Total base price excluding tax. (Float, Float-As-String, Integer)'\n          example: '54.0000'\n          type: string\n        total_inc_tax:\n          description: 'Total base price including tax. (Float, Float-As-String, Integer)'\n          example: '54.0000'\n          type: string\n        total_tax:\n          description: |-\n            Total tax applied to products.\n            For example, if quantity if 2, base price is 5 and tax rate is 10%. price_tax will be $.50 and total_tax will be $1.00.\n\n            If there is a manual discount applied total_tax is calcuted as the following:\n            `(price_ex_tax - discount)*tax_rate=total_tax`.\n            (Float, Float-As-String, Integer)\n          example: '0.5200'\n          type: string\n        quantity:\n          description: Quantity of the product ordered.\n          example: 1\n          type: number\n        base_cost_price:\n          description: 'The product’s cost price.  This can be set using the Catalog API. (Float, Float-As-String, Integer) Read Only'\n          example: '0.0000'\n          type: string\n        cost_price_inc_tax:\n          description: |-\n            The product’s cost price including tax. (Float, Float-As-String, Integer)\n            The cost of your products to you; this is never shown to customers, but can be used for accounting purposes. Read Only\n          example: '0.0000'\n          type: string\n        cost_price_ex_tax:\n          description: |-\n            The products cost price excluding tax. (Float, Float-As-String, Integer)\n            The cost of your products to you; this is never shown to customers, but can be used for accounting purposes. Read Only\n          example: '0.0000'\n          type: string\n        weight:\n          description: 'Weight of the product. (Float, Float-As-String, Integer)'\n          example: 1\n          type:\n            - number\n            - string\n        cost_price_tax:\n          description: |-\n            Tax applied to the product’s cost price. (Float, Float-As-String, Integer)\n            The cost of your products to you; this is never shown to customers, but can be used for accounting purposes. Read Only\n          example: '54.0000'\n          type: string\n        is_refunded:\n          type: boolean\n          description: Whether the product has been refunded.\n          example: false\n        refunded_amount:\n          type: string\n          description: 'The amount refunded from this transaction; always returns `0`. (Float, Float-As-String, Integer) '\n          example: '0.0000'\n          deprecated: true\n        return_id:\n          description: Numeric ID for the refund.\n          example: 0\n          type: number\n        wrapping_name:\n          description: Name of gift-wrapping option.\n          example: 'null'\n          type: string\n        base_wrapping_cost:\n          description: 'The value of the base wrapping cost. (Float, Float-As-String, Integer)'\n          example: '0.0000'\n          oneOf:\n            - type: string\n            - type: number\n        wrapping_cost_ex_tax:\n          description: 'The value of the wrapping cost, excluding tax. (Float, Float-As-String, Integer)'\n          example: '0.0000'\n          type: string\n        wrapping_cost_inc_tax:\n          description: 'The value of the wrapping cost, including tax. (Float, Float-As-String, Integer)'\n          example: '0.0000'\n          type: string\n        wrapping_cost_tax:\n          description: 'Tax applied to gift-wrapping option. (Float, Float-As-String, Integer)'\n          example: '0.0000'\n          type: string\n        wrapping_message:\n          description: Message to accompany gift-wrapping option.\n          type: string\n        quantity_shipped:\n          description: Quantity of this item shipped.\n          example: 0\n          type: number\n        event_name:\n          description: Name of promotional event/delivery date.\n          example: 'null'\n          type: string\n          nullable: true\n        event_date:\n          description: Date of the promotional event/scheduled delivery.\n          type: string\n          format: date\n          nullable: true\n        fixed_shipping_cost:\n          description: 'Fixed shipping cost for this product. (Float, Float-As-String, Integer)'\n          example: '0.0000'\n          type: string\n        ebay_item_id:\n          description: Item ID for this product on eBay.\n          type: string\n        ebay_transaction_id:\n          description: Transaction ID for this product on eBay.\n          type: string\n        option_set_id:\n          description: Numeric ID of the option set applied to the product.\n          example: 5\n          type: integer\n          nullable: true\n        parent_order_product_id:\n          description: ID of a parent product.\n          type: integer\n          nullable: true\n        is_bundled_product:\n          description: Whether this product is bundled with other products.\n          example: false\n          type: boolean\n        bin_picking_number:\n          description: Bin picking number for the physical product.\n          type: string\n        applied_discounts:\n          description: Array of objects containing discounts applied to the product.\n          type: array\n          items:\n            $ref: '#/components/schemas/orderProductAppliedDiscounts'\n        product_options:\n          description: Array of product option objects.\n          type: array\n          items:\n            $ref: '#/components/schemas/orderProductOptions'\n        external_id:\n          description: 'ID of the order in another system. For example, the Amazon Order ID if this is an Amazon order.This field can be updated in a /POST, but using a /PUT to update the order will return a 400 error. The field ''external_id'' cannot be written to. Please remove it from your request before trying again. It can not be overwritten once set.'\n          type: string\n          nullable: true\n        upc:\n          type: string\n          maxLength: 255\n          description: Universal Product Code. Can be written to for custom products and catalog products.\n        variant_id:\n          type: integer\n          description: Products `variant_id`. PUT or POST. This field is not available for custom products.\n        name_customer:\n          type: string\n          example: Fog Linen Chambray Towel - Beige Stripe\n          description: The product name that is shown to customer in storefront.\n        name_merchant:\n          type: string\n          example: Towel Type 1\n          description: The product name that is shown to merchant in Control Panel.\n    orderCount:\n      title: orderCount\n      example:\n        count: 27\n      type: object\n      properties:\n        count:\n          description: ''\n          example: 27\n          type: number\n      x-internal: false\n    orderShippingAddress:\n      title: orderShippingAddress\n      allOf:\n        - type: object\n          properties:\n            id:\n              type: integer\n              example: 1\n              description: ID of this shipping address.\n            order_id:\n              type: integer\n              description: ID of the order.\n              example: 100\n            items_total:\n              type: number\n              example: 1\n              description: The total number of items in the order.\n            items_shipped:\n              type: number\n              description: The number of items that have been shipped.\n              example: 0\n            base_cost:\n              type: string\n              description: 'The base value of the order’s items. (Float, Float-As-String, Integer)'\n              example: '5.0000'\n            cost_ex_tax:\n              type: string\n              example: '0.0000'\n              description: 'The value of the order’s items, excluding tax. (Float, Float-As-String, Integer)'\n            cost_inc_tax:\n              type: string\n              description: 'The value of the order’s items, including tax. (Float, Float-As-String, Integer)'\n              example: '0.0000'\n            cost_tax:\n              type: string\n              description: 'The tax amount on the order. (Float, Float-As-String, Integer)'\n              example: '0.0000'\n            cost_tax_class_id:\n              type: integer\n              description: 'The ID of the tax class applied to the product. (NOTE: Value ignored if automatic tax is enabled.)'\n              example: 2\n            base_handling_cost:\n              type: string\n              description: 'The base handling charge. (Float, Float-As-String, Integer)'\n              example: '0.0000'\n            handling_cost_ex_tax:\n              type: string\n              description: 'The handling charge, excluding tax. (Float, Float-As-String, Integer)'\n              example: '0.0000'\n            handling_cost_inc_tax:\n              type: string\n              description: 'The handling charge, including tax. (Float, Float-As-String, Integer)'\n              example: '0.0000'\n            handling_cost_tax:\n              type: string\n              example: '0.0000'\n            handling_cost_tax_class_id:\n              type: integer\n              description: 'A read-only value. Do not attempt to set or modify this value in a POST or PUT operation. (NOTE: Value ignored if automatic tax is enabled on the store.)'\n              example: 2\n            shipping_zone_id:\n              type: number\n              description: Numeric ID of the shipping zone.\n              example: 1\n            shipping_zone_name:\n              type: string\n              description: Name of the shipping zone.\n              example: United States\n            form_fields:\n              type: array\n              items:\n                $ref: '#/components/schemas/formFields'\n            shipping_quotes:\n              $ref: '#/components/schemas/shippingQuotes_Resource'\n        - $ref: '#/components/schemas/shippingAddress_Base'\n      x-internal: false\n    orderTaxes_Base:\n      title: orderTaxes_Base\n      type: object\n      properties:\n        id:\n          description: The unique numeric identifier of the taxes object.\n          example: 1\n          type: integer\n        order_id:\n          description: 'The unique numeric identifier of the order to which the tax was applied. NOTE: Not included if the store was using the automatic tax feature.'\n          example: 129\n          type: integer\n        order_address_id:\n          description: 'The unique numeric identifier of the order address object associated with the order. NOTE: Not included if the store was using the automatic tax feature.'\n          example: 29\n          type: integer\n        tax_rate_id:\n          description: The unique numeric identifier of the tax rate.\n          example: 1\n          type: integer\n        tax_class_id:\n          description: 'The unique numeric identifier of the tax class object. NOTE: Will be 0 if automatic tax was enabled, or if the default tax class was used.'\n          example: 0\n          type: integer\n        name:\n          description: The name of the tax class object.\n          example: '\"State Tax\"'\n          type: string\n        class:\n          description: 'The name of the type of tax that was applied. NOTE: will be \"Automatic Tax\" if automatic tax was enabled. Will be \"API Tax Override\" if the order was created with V2 Orders API.'\n          example: Gift Wrapping\n          type: string\n        rate:\n          description: 'The tax rate.  The priority order in which the tax is applied (Float, Float-As-String, Integer)'\n          example: '8.0000'\n          type: string\n        priority:\n          description: The order in which the tax is applied.\n          example: 0\n          type: number\n        priority_amount:\n          description: 'The amount of tax calculated on the order.   (Float, Float-As-String, Integer)'\n          example: '1.5200'\n          type: string\n        line_amount:\n          description: '(Float, Float-As-String, Integer)'\n          example: '1.5200'\n          type: string\n        order_product_id:\n          type: string\n          description: If the `line_item_type` is `item` or `handling` then this field will be the order product id. Otherwise the field will return as null.\n        line_item_type:\n          type: string\n          enum:\n            - item\n            - shipping\n            - handling\n            - gift-wrapping\n          description: Type of tax on item.\n      x-internal: false\n    orderShipment:\n      title: orderShipment\n      type: object\n      description: ''\n      properties:\n        id:\n          description: Shipment ID.\n          example: 1\n          type: integer\n        order_id:\n          description: ID of the order associated with this shipment.\n          example: 120\n          type: integer\n        customer_id:\n          description: ID of this order’s customer.\n          example: 5\n          type: integer\n        order_address_id:\n          description: ID of the desired `shipping_address` associated with the shipment.\n          example: 20\n          type: integer\n        date_created:\n          type: string\n          description: Creation date for the shipment.\n        tracking_number:\n          description: Tracking number of the shipment.\n          example: w4se4b6ASFEW4T\n          type: string\n        shipping_method:\n          description: |-\n            Additional information to describe the method of shipment (ex. Standard, Ship by Weight, Custom Shipment). Can be used for live quotes from certain shipping providers.\n            If different from `shipping_provider`, `shipping_method` should correspond to `tracking_carrier`.\n          example: Ship by Weight\n          type: string\n        shipping_provider:\n          type: string\n          description: 'Enum of the BigCommerce shipping-carrier integration/module. '\n          enum:\n            - auspost\n            - canadapost\n            - endicia\n            - usps\n            - fedex\n            - ups\n            - upsready\n            - upsonline\n            - shipperhq\n            - ' '\n        tracking_carrier:\n          type: string\n          title: Tracking Carrier\n          description: |-\n            Tracking carrier for the shipment.\n            Acceptable values include an empty string (`\"\"`) or one of the valid tracking-carrier values that you can view and download as a .CSV file [here](https://github.com/bigcommerce/dev-docs/blob/master/assets/csv/tracking_carrier_values.csv).\n        tracking_link:\n          type: string\n          description: Returns a tracking link from the shipping service.\n        comments:\n          type: string\n          description: Comments the shipper wishes to add.\n          maxLength: 65535\n        billing_address:\n          $ref: '#/components/schemas/billingAddress_Base'\n        shipping_address:\n          $ref: '#/components/schemas/shippingAddress_Base'\n        items:\n          description: 'The items in the shipment. This object has the following members, all integer: order_product_id (required), quantity (required), product_id (read-only). A sample items value might be: [ {\"order_product_id\":16,\"product_id\": 0,\"quantity\":2} ]'\n          type: array\n          items:\n            type: object\n            properties:\n              order_product_id:\n                type: integer\n                example: 5\n              product_id:\n                type: integer\n                example: 87\n              quantity:\n                type: number\n                example: 2\n      x-internal: false\n    billingAddress_Full:\n      allOf:\n        - $ref: '#/components/schemas/billingAddress_Base'\n        - type: object\n          properties:\n            form_fields:\n              type: array\n              items:\n                $ref: '#/components/schemas/formFields'\n      title: billingAddress_Full\n      description: Required to create an order.\n      x-internal: false\n    products_Resource:\n      title: products_Resource\n      type: object\n      readOnly: true\n      properties:\n        url:\n          description: ''\n          readOnly: true\n          example: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/products'\n          type: string\n        resource:\n          description: ''\n          readOnly: true\n          example: /orders/129/products\n          type: string\n      x-internal: false\n    shippingAddresses_Resource:\n      title: shippingAddress_Resource\n      type: object\n      readOnly: true\n      properties:\n        url:\n          description: URL of the shipping address for api requests.\n          readOnly: true\n          example: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/shippingaddresses'\n          type: string\n        resource:\n          description: ''\n          readOnly: true\n          example: /orders/129/shippingaddresses\n          type: string\n      x-internal: false\n    coupons_Resource:\n      title: coupons_Resource\n      type: object\n      readOnly: true\n      properties:\n        url:\n          description: URL of the coupons for api requests.\n          readOnly: true\n          example: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/coupons'\n          type: string\n        resource:\n          description: resource of the coupons.\n          readOnly: true\n          example: /orders/129/coupons\n          type: string\n      x-internal: false\n    orderProductAppliedDiscounts:\n      title: orderProductAppliedDiscounts\n      type: object\n      description: |-\n        When applying a manual discount to an order (not a product level discount), the discount is distributed across products in proportion to the products price.\n        `(total_manual_discount*price_ex_tax)/subtotal_ex_tax`\n      properties:\n        id:\n          description: Name of the coupon applied to order.\n          example: total-coupon\n          type: string\n        amount:\n          description: 'Amount of the discount.(Float, Float-As-String, Integer) '\n          example: '1.2100'\n          type: string\n        name:\n          description: |-\n            Name of the coupon.\n            `Manual Discount` when creating a manual discount.\n          example: $5 off\n          type: string\n        code:\n          description: |-\n            Coupon Code.\n            There is no code when creating a manual discount.\n          example: S2549JM0Y\n          type:\n            - string\n            - 'null'\n        target:\n          type: string\n          enum:\n            - order\n            - product\n          description: Determines if the discount if discount was applied at the Order or Product level. Read Only.\n      x-internal: false\n    orderProductOptions:\n      title: orderProductOptions\n      type: object\n      properties:\n        id:\n          description: The unique numerical ID of the option; increments sequentially.\n          example: 16\n          type: integer\n        option_id:\n          description: Numeric ID of the associated option.\n          example: 18\n          type: integer\n        order_product_id:\n          description: ''\n          example: 53\n          type: integer\n        product_option_id:\n          description: Numeric ID of an option applied to the product from a list of options available to the product.\n          example: 120\n          type: integer\n        display_name:\n          description: Alias for display_name_customer. The product option name that is shown to customer in the storefront.\n          example: Size\n          type: string\n        display_value:\n          description: Alias for display_value_customer. The product option value that is shown to customer in storefront.\n          example: S\n          type: string\n        value:\n          description: This value is used to access the Customer File Upload.\n          example: '70'\n          type: string\n        type:\n          type: string\n          enum:\n            - Checkbox\n            - Date field\n            - File Upload\n            - Multi-line text field\n            - Multiple choice\n            - Product Pick List\n            - Swatch\n            - Text field\n          example: Checkbox\n          description: Option Type\n        name:\n          description: 'The option’s name, as used internally. Must be unique.'\n          example: Apparel sizes\n          type: string\n        display_style:\n          description: 'How it is displayed on the storefront. Examples include Drop-down, radio buttons, or rectangles.'\n          example: Rectangle\n          type: string\n        display_name_customer:\n          type: string\n          example: couleur\n          description: The product option name that is shown to customer in storefront.\n        display_name_merchant:\n          type: string\n          example: color\n          description: The product option name that is shown to merchant in Control Panel.\n        display_value_customer:\n          type: string\n          example: bleu\n          description: The product option value that is shown to customer in storefront.\n        display_value_merchant:\n          type: string\n          example: blue\n          description: The product option value that is shown to merchant in Control Panel.\n      x-internal: false\n    formFields:\n      title: formFields\n      type: object\n      readOnly: true\n      description: Read-Only. If you have required address form fields they will need to be set as optional before creating an order with the API.\n      properties:\n        name:\n          description: Read-Only. If you have required address form fields they will need to be set as optional before creating an order with the API.\n          readOnly: true\n          type: string\n          example: License Id\n        value:\n          description: Read-Only. If you have required address form fields they will need to be set as optional before creating an order with the API.\n          readOnly: true\n          type: string\n          example: 123BAF\n      x-internal: false\n    orderMessages:\n      type: array\n      items:\n        type: object\n        properties:\n          id:\n            type: integer\n          order_id:\n            type: integer\n          staff_id:\n            type: integer\n          customer_id:\n            type: integer\n          type:\n            type: string\n          subject:\n            type: string\n          message:\n            type: string\n          status:\n            type: string\n          is_flagged:\n            type: boolean\n          date_created:\n            type: string\n          customer:\n            type: object\n      title: orderMessages\n      x-internal: false\n    shippingQuotes_Resource:\n      type: object\n      title: shippingQuotes_Resource\n      readOnly: true\n      properties:\n        url:\n          type: string\n          readOnly: true\n          description: |-\n            This URL will return a 204 for shipping quotes. To return shipping quotes:\n            `/shipping_addresses/shipping_address_id/shipping_quotes`\n          example: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/163/shippingaddresses/64/shippingquotes'\n        resource:\n          type: string\n          readOnly: true\n          example: orders/163/shippingaddresses/64/shippingquotes\n          description: |-\n            This URL will return a 204 for shipping quotes. To return shipping quotes:\n            `/shipping_addresses/shipping_address_id/shipping_quotes`\n      x-internal: false\n    shippingQuotes_Base:\n      type: object\n      title: shippingQuotes_Base\n      properties:\n        id:\n          type: string\n          description: ID of the shipping quote.\n          example: '24'\n        uuid:\n          type: string\n          description: uuid of the shipping quote.\n          example: a72acc8d-504b-4a40-8534-7c54d997ed59\n        timestamp:\n          type: string\n          description: Time the order was created in RFC 2822 format.\n          format: date-time\n        shipping_provider_id:\n          type: string\n          example: bcstatic\n          description: ID of the shipping provider.\n        shipping_provider_quote:\n          type: array\n          description: This can vary based on the shipping provider. Manual shipping methods such as fixed will return an empty array. Shipping providers such as UPS will return an object with the shipping information. Since the shipping quote is tied to a shipping address only one quote will return in the response.\n          items: {}\n        provider_code:\n          type: string\n          example: shipping_byweight\n          description: Code of the shipping provider.\n        carrier_code:\n          type: string\n          description: Code of the shipping carrier.\n        rate_code:\n          type: string\n          description: Type of delivery. This can vary based on shipping quote.\n        rate_id:\n          type: string\n          description: This can vary based on shipping quote.\n        method_id:\n          type: integer\n          description: Shipping method ID\n      x-internal: false\n    orderShipment_Post:\n      type: object\n      title: orderShipment_Post\n      properties:\n        order_address_id:\n          description: ID of the desired `shipping_address` associated with the shipment.\n          example: 20\n          type: integer\n        tracking_number:\n          description: Tracking number of the shipment.\n          example: w4se4b6ASFEW4T\n          type: string\n        shipping_method:\n          description: |\n            Additional information to describe the method of shipment (ex. Standard, Ship by Weight, Custom Shipment). Can be used for live quotes from certain shipping providers.\n            If different from `shipping_provider`, `shipping_method` should correspond to `tracking_carrier`.\n          example: Ship by Weight\n          type: string\n        shipping_provider:\n          type: string\n          description: Enum of the BigCommerce shipping-carrier integration/module.\n          enum:\n            - auspost\n            - canadapost\n            - endicia\n            - usps\n            - fedex\n            - ups\n            - upsready\n            - upsonline\n            - shipperhq\n        tracking_carrier:\n          type: string\n          title: Tracking Carrier\n          description: |-\n            Tracking carrier for the shipment.\n            Acceptable values include an empty string (`\"\"`) or one of the valid tracking-carrier values viewable [here](https://docs.google.com/spreadsheets/d/1w9c_aECSCGyf-oOrvGeUniDl-ARGKemfZl0qSsav8D4/pubhtml?gid=0&single=true) and downloadable as a .CSV file [here](https://docs.google.com/spreadsheets/d/1mTueEynfcEmwsU2y2Jd2MX-8GKwNZrmlRMBcIElg9aY/pub?gid=0&single=true&output=csv).\n        comments:\n          type: string\n          description: Comments the shipper wishes to add.\n          maxLength: 65535\n        items:\n          description: 'The items in the shipment. This object has the following members, all integer: order_product_id (required), quantity (required), product_id (read-only). A sample items value might be: [ {\"order_product_id\":16,\"product_id\": 0,\"quantity\":2} ]'\n          type: array\n          items:\n            type: object\n            properties:\n              order_product_id:\n                type: integer\n                example: 5\n              quantity:\n                type: number\n                example: 2\n      x-internal: false\n    orderShipment_Put:\n      type: object\n      title: orderShipment_Put\n      properties:\n        order_address_id:\n          description: ID of the desired `shipping_address` associated with the shipment.\n          example: 20\n          type: integer\n        tracking_number:\n          description: Tracking number of the shipment.\n          example: w4se4b6ASFEW4T\n          type: string\n        shipping_method:\n          description: |\n            Additional information to describe the method of shipment (ex. Standard, Ship by Weight, Custom Shipment). Can be used for live quotes from certain shipping providers.\n            If different from `shipping_provider`, `shipping_method` should correspond to `tracking_carrier`.\n          example: Ship by Weight\n          type: string\n        shipping_provider:\n          type: string\n          description: Enum of the BigCommerce shipping-carrier integration/module.\n          enum:\n            - auspost\n            - canadapost\n            - endicia\n            - usps\n            - fedex\n            - ups\n            - upsready\n            - upsonline\n            - shipperhq\n        tracking_carrier:\n          type: string\n          title: Tracking Carrier\n          description: |-\n            Tracking carrier for the shipment.\n            Acceptable values include an empty string (`\"\"`) or one of the valid tracking-carrier values viewable and downloadable as a .CSV file [here](https://github.com/bigcommerce/dev-docs/blob/master/assets/csv/tracking_carrier_values.csv).\n        comments:\n          type: string\n          description: Comments the shipper wishes to add.\n          maxLength: 65535\n      x-internal: false\n    orderStatus_Base:\n      title: orderStatus_Base\n      type: object\n      properties:\n        id:\n          description: The id of the type of order status.\n          example: 0\n          type: integer\n        name:\n          description: Name of the type of order status.\n          example: Incomplete\n          type: string\n        system_label:\n          description: System name of the type of order status.\n          example: Incomplete\n          type: string\n        custom_label:\n          description: Custom order status label given in the Control Panel.\n          example: Incomplete- Waiting on Shipment\n          type: string\n        system_description:\n          description: System description of the order status.\n          example: 'An incomplete order happens when a shopper reached the payment page, but did not complete the transaction.'\n          type: string\n      x-internal: false\n    ordersCountStatus:\n      title: ordersCountStatus\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/orderStatus_Base'\n        - type: object\n          properties:\n            count:\n              description: Number of orders that exist with this status.\n              example: 6\n              type: integer\n            sort_order:\n              description: The sort order of the order status from the Control Panel.\n              example: 0\n              type: integer\n      x-internal: false\n    order_Shared:\n      title: order_Shared\n      description: Order properties used in `PUT` and `POST` requests and responses.\n      type: object\n      properties:\n        base_handling_cost:\n          description: 'The value of the base handling cost. (Float, Float-As-String, Integer)'\n          example: '0.0000'\n          type: string\n        base_shipping_cost:\n          description: 'The value of the base shipping cost. (Float, Float-As-String, Integer)'\n          example: '0.0000'\n          type: string\n        base_wrapping_cost:\n          description: 'The value of the base wrapping cost. (Float, Float-As-String, Integer)'\n          example: '0.0000'\n          oneOf:\n            - type: string\n            - type: number\n        billing_address:\n          $ref: '#/components/schemas/billingAddress_Full'\n        channel_id:\n          description: Shows where the order originated. The channel_id will default to 1.\n          example: 1\n          type: integer\n        customer_id:\n          type: number\n        customer_message:\n          description: 'Message that the customer entered (number, options) -o the `Order Comments` box during checkout.'\n          example: Thank you\n          type: string\n        date_created:\n          description: 'The date the order was created, formatted in the RFC-2822 standard. You set this attribute on Order creation (POST) to support the migration of historical orders. If you do not provide a value, then it will default to the current date/time. e.g., `Tue, 20 Nov 2012 00:00:00 +0000`'\n          type: string\n        default_currency_code:\n          description: The currency code of the transactional currency the shopper pays in; writeable when multi-currency is enabled.\n          type: string\n        discount_amount:\n          description: 'Amount of discount for this transaction. (Float, Float-As-String, Integer)'\n          example: '0.0000'\n          type: string\n        ebay_order_id:\n          description: 'If the order was placed through eBay, the eBay order number will be included. Otherwise, the value will be `0`.'\n          example: '0'\n          type: string\n        external_id:\n          description: 'The order ID in another system, such as the Amazon Order ID if this is an Amazon order. After setting it, you can not write to or update the `external_id`. You can update this field using a /POST request, but a /PUT request to update the order will return a 400 error.  Please remove it from your request before trying again.'\n          example: null\n          oneOf:\n            - type: string\n            - type: null\n        external_merchant_id:\n          description: 'The merchant ID represents an upstream order from an external system. It is the source of truth for orders. After setting it, you can not write to or update the `external_merchant_id`. For example, you can update the Facebook by Meta page ID in a /POST request, but a /PUT request to update the order will return a 400 error. Please remove it from your request before trying again.'\n          example: null\n          oneOf:\n            - type: string\n            - type: null\n        external_source:\n          description: |-\n            This value identifies an external system that generated the order and submitted it to BigCommerce with the the Orders API.\n            * When supplying the value, we recommend combining the type of system and vendor, e.g., ERP (Acumatica) or POS (Square).\n            * If you are migrating historical orders processed on another eCommerce platform to BigCommerce, supply the following code as the value: M-MIG. This code will exclude historical orders from the store’s GMV/order count, which factors into pricing.\n            * If you do not provide a value, then it will default to null.\n          example: 'null'\n          oneOf:\n            - type: string\n            - type: null\n        geoip_country:\n          description: 'The full name of the country where the customer made the purchase, based on the IP.'\n          example: United States\n          type: string\n        geoip_country_iso2:\n          description: 'The country where the customer made the purchase, in ISO2 format, based on the IP.'\n          example: US\n          type: string\n        handling_cost_ex_tax:\n          description: 'The value of the handling cost, excluding tax. (Float, Float-As-String, Integer)'\n          example: '0.0000'\n          type: string\n        handling_cost_inc_tax:\n          description: 'The value of the handling cost, including tax. (Float, Float-As-String, Integer)'\n          example: '0.0000'\n          type: string\n        ip_address:\n          type: string\n          description: |-\n            IPv4 Address of the customer, if known.\n\n            Note: You can set either `ip_address` or `ip_address_v6`. Setting the `ip_address` value will reset the `ip_address_v6` value and vice versa.\n          example: 12.345.678.910\n          maxLength: 30\n        ip_address_v6:\n          type: string\n          description: |-\n            IPv6 Address of the customer, if known.\n\n            Note: You can set either `ip_address` or `ip_address_v6`. Setting the `ip_address_v6` value will reset the `ip_address` value and vice versa.\n          example: '2001:db8:3333:4444:5555:6666:7777:8888'\n          maxLength: 39\n        is_deleted:\n          description: 'Indicates whether the order was deleted (archived). Set to to true, to archive an order.'\n          example: false\n          type: boolean\n        items_shipped:\n          description: The number of items that have been shipped.\n          example: 0\n          type: number\n        items_total:\n          description: The total number of items in the order.\n          example: 1\n          type: number\n        order_is_digital:\n          description: Whether this is an order for digital products.\n          example: false\n          type: boolean\n        payment_method:\n          description: 'The payment method for this order. Can be one of the following: `Manual`, `Credit Card`, `cash`, `Test Payment Gateway`, etc.'\n          enum:\n            - Credit Card\n            - Cash\n            - Test Payment Gateway\n            - Manual\n          type: string\n        payment_provider_id:\n          description: The external Transaction ID/Payment ID within this order’s payment provider (if a payment provider was used).\n          example: ''\n          type:\n            - string\n            - number\n        refunded_amount:\n          description: 'The amount refunded from this transaction; always returns `0`. (Float, Float-As-String, Integer) '\n          example: '0.0000'\n          type: string\n        shipping_cost_ex_tax:\n          description: 'The value of shipping cost, excluding tax. (Float, Float-As-String, Integer)'\n          example: '0.0000'\n          type: string\n        shipping_cost_inc_tax:\n          description: 'The value of shipping cost, including tax. (Float, Float-As-String, Integer)'\n          example: '0.0000'\n          type: string\n        staff_notes:\n          type: string\n          description: Any additional notes for staff.\n          example: Send Saturday\n          maxLength: 65535\n        status_id:\n          description: The status ID of the order.\n          type: integer\n        subtotal_ex_tax:\n          description: 'Override value for subtotal excluding tax. If specified, the field `subtotal_inc_tax` is also required. (Float, Float-As-String, Integer)'\n          example: '225.0000'\n          type: string\n        subtotal_inc_tax:\n          description: 'Override value for subtotal including tax. If specified, the field `subtotal_ex_tax` is also required. (Float, Float-As-String, Integer)'\n          example: '225.0000'\n          type: string\n        tax_provider_id:\n          description: |\n            BasicTaxProvider - Tax is set to manual and order is created in the store.\n\n            AvaTaxProvider - Tax is set to automatic and order is created in the store. Used for Avalara.\n\n            \"\" (empty string) - The order is created with the API, or the tax provider is unknown.\n          enum:\n            - BasicTaxProvider\n            - AvaTaxProvider\n            - ''\n          type: string\n        customer_locale:\n          type: string\n          example: en\n          description: The customer’s locale.\n        total_ex_tax:\n          description: 'Override value for the total, excluding tax. If specified, the field `total_inc_tax` is also required. (Float, Float-As-String, Integer)'\n          example: '225.0000'\n          type: string\n        total_inc_tax:\n          description: 'Override value for the total, including tax. If specified, the field `total_ex_tax` is also required. (Float, Float-As-String, Integer)'\n          example: '225.0000'\n          type: string\n        wrapping_cost_ex_tax:\n          description: 'The value of the wrapping cost, excluding tax. (Float, Float-As-String, Integer)'\n          example: '0.0000'\n          type: string\n        wrapping_cost_inc_tax:\n          description: 'The value of the wrapping cost, including tax. (Float, Float-As-String, Integer)'\n          example: '0.0000'\n          type: string\n      x-internal: false\n    billingAddress_Base:\n      type: object\n      title: billingAddress_Base\n      properties:\n        first_name:\n          type: string\n          example: Jane\n        last_name:\n          type: string\n          example: Doe\n        company:\n          type: string\n        street_1:\n          type: string\n          example: 123 Main Street\n        street_2:\n          type: string\n        city:\n          type: string\n          example: Austin\n        state:\n          type: string\n          example: TX\n        zip:\n          type: string\n          example: '12345'\n          description: The billing address must include the zip code. The zip code must be two or more characters.\n        country:\n          type: string\n          example: United States\n        country_iso2:\n          type: string\n          example: US\n        phone:\n          type: string\n        email:\n          type: string\n          example: janedoe@example.com\n      required:\n        - zip\n      x-internal: false\n    shippingAddress_Base:\n      type: object\n      title: shippingAddress_Base\n      description: Shipping Address properties common to all requests and responses.\n      properties:\n        first_name:\n          type: string\n          example: Jane\n        last_name:\n          type: string\n          example: Doe\n        company:\n          type: string\n        street_1:\n          type: string\n          example: 123 Main Street\n          description: Street address (first line).\n        street_2:\n          type: string\n          description: Street address (second line).\n        city:\n          type: string\n          example: Austin\n        state:\n          type: string\n          example: Texas\n        zip:\n          type: string\n          example: '12345'\n          description: 'Zip or postal code, as a string.'\n        country:\n          type: string\n          example: United States\n        country_iso2:\n          type: string\n          example: US\n          description: 2-letter ISO Alpha-2 code for the country.\n        phone:\n          type: string\n          description: Recipient’s telephone number.\n        email:\n          type: string\n          example: janedoe@example.com\n          description: 'Recipient’s email address. '\n        shipping_method:\n          type: string\n          description: Text code identifying the BigCommerce shipping module selected by the customer.\n          example: Free Shipping\n      x-internal: false\n    order_RespOnly:\n      title: order_RespOnly\n      type: object\n      description: Properties that are only for order response bodies.\n      properties:\n        id:\n          type: integer\n          description: Read-only. The ID of the order.\n          example: 118\n        date_modified:\n          type: string\n          description: A read-only value representing the last modification of the order. Do not attempt to modify or set this value in a POST or PUT operation. RFC-2822\n        date_shipped:\n          type: string\n          description: A read-only value representing the date of shipment. Do not attempt to modify or set this value in a POST or PUT operation. RFC-2822\n        cart_id:\n          description: 'The cart ID from which this order originated, if applicable. Correlates with the Cart API. This is a READ-ONLY field; do not set or modify its value in a POST or PUT request.'\n          example: a8458391-ef68-4fe5-9ec1-442e6a767364\n          type: string\n        status:\n          type: string\n          description: 'The status will include one of the (string, options) - values defined under Order Statuses. This value is read-only. Do not attempt to modify or set this value in a POST or PUT operation.'\n          example: Awaiting Fulfillment\n        subtotal_tax:\n          description: 'A read-only value. Do not attempt to set or modify this value in a POST or PUT operation. (Float, Float-As-String, Integer)'\n          example: '0.0000'\n          type: string\n        shipping_cost_tax:\n          description: 'A read-only value. Do not attempt to modify or set this value in a POST or PUT operation. (Float, Float-As-String, Integer)'\n          example: '0.0000'\n          type: string\n        shipping_cost_tax_class_id:\n          description: 'Shipping-cost tax class. A read-only value. Do not attempt to modify or set this value in a POST or PUT operation. (NOTE: Value ignored if automatic tax is enabled on the store.)'\n          example: 2\n          type: integer\n        handling_cost_tax:\n          description: 'A read-only value. Do not attempt to modify or set this value in a POST or PUT operation. (Float, Float-As-String, Integer)'\n          example: '0.0000'\n          type: string\n        handling_cost_tax_class_id:\n          description: 'A read-only value. Do not attempt to set or modify this value in a POST or PUT operation. (NOTE: Value ignored if automatic tax is enabled on the store.)'\n          example: 2\n          type: integer\n        wrapping_cost_tax:\n          description: 'A read-only value. Do not attempt to modify or set this value in a POST or PUT operation. (Float, Float-As-String, Integer)'\n          example: '0.0000'\n          type: string\n        wrapping_cost_tax_class_id:\n          description: 'A read-only value. Do not attempt to set or modify this value in a POST or PUT operation. (NOTE: Value ignored if automatic tax is enabled on the store.)'\n          example: 3\n          type: integer\n        payment_status:\n          type: string\n          description: A read-only value. Do not attempt to set or modify this value in a POST or PUT operation.\n          enum:\n            - authorized\n            - captured\n            - capture pending\n            - declined\n            - held for review\n            - paid\n            - partially refunded\n            - pending\n            - refunded\n            - void\n            - void pending\n        store_credit_amount:\n          description: 'Represents the store credit that the shopper has redeemed on this individual order. This is a read-only value. Do not pass in a POST or PUT. (Float, Float-As-String, Integer)'\n          example: '0.0000'\n          type: string\n        gift_certificate_amount:\n          description: 'A read-only value. Do not pass in a POST or PUT. (Float, Float-As-String, Integer)'\n          example: '0.0000'\n          type: string\n        currency_id:\n          description: 'The display currency ID. Depending on the currency selected, the value can be different from the transactional currency. A read-only value. Do not pass in a POST or PUT. In v2 display currency is set to the transactional currency, ''default_currency_id''.'\n          example: 1\n          type: integer\n        currency_code:\n          description: 'The currency code of the display currency used to present prices to the shopper on the storefront. Depending on the currency selected, the value can be different from the transactional currency. A read-only value. Do not pass in a POST or PUT.'\n          example: USD\n          type: string\n        currency_exchange_rate:\n          description: 'The exchange rate between the store’s default currency and the display currency. A read-only value. Do not pass in a POST or PUT. For orders created using the V2 endpoints, this value is always 1 (only in the storefront this value can be different to 1). (Float, Float-As-String, Integer)'\n          example: '1.0000000000'\n          type: string\n        default_currency_id:\n          description: The transactional currency ID. A read-only value. Do not pass in a POST or PUT.\n          example: 1\n          type: integer\n        default_currency_code:\n          description: The currency code of the transactional currency the shopper pays in.\n          example: EUR\n          type: string\n        store_default_currency_code:\n          description: The currency code of the store's default currency.\n          example: USD\n          type: string\n        store_default_to_transactional_exchange_rate:\n          description: The exchange rate between the store's default currency and the transactional currency used in the order.\n          example: '100.0000000000'\n          type: string\n        coupon_discount:\n          description: 'A read-only value. Do not pass in a POST or PUT. (Float, Float-As-String, Integer)'\n          example: '5.0000'\n          type: string\n        shipping_address_count:\n          type: number\n          description: The number of shipping addresses associated with this transaction. A read-only value. Do not pass in a POST or PUT.\n        is_email_opt_in:\n          description: Indicates whether the shopper has selected an opt-in check box (on the checkout page) to receive emails. A read-only value. Do not pass in a POST or PUT.\n          example: false\n          type: boolean\n        order_source:\n          description: Orders submitted from the store’s website will include a `www` value. Orders submitted with the API will be set to `external`. This value is read-only. Do not pass in a POST or PUT.\n          example: www\n          type: string\n        products:\n          $ref: '#/components/schemas/products_Resource'\n        shipping_addresses:\n          $ref: '#/components/schemas/shippingAddresses_Resource'\n        coupons:\n          $ref: '#/components/schemas/coupons_Resource'\n        status_id:\n          type: integer\n          example: 7\n          description: The staus ID of the order.\n      x-internal: false\n    orderCustomProduct_Put:\n      type: object\n      title: orderCustomProduct_Put\n      description: |\n        To `add` a custom product to an existing order, don't include `id` in the payload. At least one of these fields `name`, `name_customer`, or `name_merchant` must be provided with non-empty value.\n             To `update` an order product line, `id` is required. The payload should only contain the fields that needs to be updated. Those fields that are omitted will not be changed.\n             Note:\n             - Empty strings `''` and `null` are invalid for `xxx`, `xxx_customer`, and `xxx_merchant`.\n             - `name` and `name_customer` always hold the same value, updating either `name` or `name_customer` will change the value for both of those fields.\n             - If both fields `name` and `name_customer` are present, they must have same value.\n             - When updating an existing order product, if both fields `name` and `name_customer` are omitted from the request, they will not be updated.\n             - When updating an existing order product, if `name_merchant` is omitted from the request, it will not be updated.\n             - When adding product, if `name_merchant` is omitted, it will be set to the value of `name` (or `name_customer`).\n             - When adding a new product to an existing order, if both fields `name` and `name_customer` are omitted, they will be set to the value of `name_merchant`.\n      properties:\n        name:\n          type: string\n          example: Fog Linen Chambray Towel - Beige Stripe\n          description: |\n            Alias for name_customer. The product name that is shown to customer in storefront.\n        name_customer:\n          type: string\n          example: Fog Linen Chambray Towel - Beige Stripe\n          description: The product name that is shown to customer in storefront.\n        name_merchant:\n          type: string\n          example: Towel Type 1\n          description: The product name that is shown to merchant in control panel.\n        quantity:\n          type: number\n        price_ex_tax:\n          type: number\n        price_inc_tax:\n          type: number\n        sku:\n          type: string\n        upc:\n          type: string\n        id:\n          type: integer\n          description: ID of the product line.\n      required:\n        - name\n        - quantity\n        - price_ex_tax\n        - price_inc_tax\n      x-internal: false\n    orderCatalogProduct_Put:\n      title: orderCatalogProduct_Put\n      description: |\n        To `add` product to an existing order, don't include `id` in the payload. And note that the `product_options` are required if adding a product with variants.\n        To `update` an order product line, `id` is required. The payload should only contain the fields that needs to be updated. Those fields that are omitted will not be changed.\n        Note:\n        - `xxx` and `xxx_customer` always hold the same value, updating either `xxx` or `xxx_customer` will change value for both of those fields.\n        - If both fields `xxx` and `xxx_customer` are present, they must have same value.\n        - Empty strings `''` and `null` are invalid for `xxx`, `xxx_customer`, and `xxx_merchant`.\n        - When updating and existing order product without changing the variant, product or product options, if `xxx_merchant` is not part of the request it will not be updated.\n        - When updating an existing order product, if both fields `xxx` and `xxx_customer` not part of the request they will not be updated.\n        - When adding a product to and existing order or changing the variant, product, or product options.\n        - Empty strings `''` and `null` are invalid for `xxx`, `xxx_customer, and `xxx_merchant` if `xxx_merchant` is omitted, it will default to have the catalog value.\n        - If both fields `xxx` and `xxx_customer` are omitted from the request, they will default to the catalog value.\n      allOf:\n        - type: object\n          properties:\n            id:\n              type: integer\n              description: 'The order product `id`. To add a product to an existing order, don''t include `id` in the payload. `id` is required when updating an order product.'\n        - $ref: '#/components/schemas/orderCatalogProduct_Post'\n      x-internal: false\n    orderCatalogProduct_Post:\n      title: orderCatalogProduct_Post\n      description: |\n        Note:\n        - `xxx` and `xxx_customer` always hold the same value, updating either `xxx` or `xxx_customer` will change value for both of those fields.\n        - If both fields `xxx` and `xxx_customer` are present, they must have same value.\n        - Empty strings `''` and `null` are invalid for `xxx` and `xxx_customer, and `xxx_merchant`.\n        - `xxx`, `xxx_customer`, and `xxx_merchant` default to the value from `catalog` if not supplied in the request.\n      type: object\n      properties:\n        product_id:\n          type: integer\n        name:\n          type: string\n          description: 'Alias for `name_customer`. The product name that is shown to customer in storefront. `xxx` and `xxx_customer` always hold the same value, updating either `xxx` or `xxx_customer` will change value for both of those fields.'\n          example: Fog Linen Chambray Towel - Beige Stripe\n          minLength: 1\n        name_customer:\n          type: string\n          example: Fog Linen Chambray Towel - Beige Stripe\n          description: 'The product name that is shown to customer in storefront. `xxx` and `xxx_customer` always hold the same value, updating either `xxx` or `xxx_customer` will change value for both of those fields.'\n          minLength: 1\n        name_merchant:\n          type: string\n          example: Towel Type 1\n          description: The product name that is shown to merchant in control panel.\n        product_options:\n          type: array\n          description: 'List of product variant options and modifiers. `product_options` are required when adding a product with variants and not specifying the `variant_id`, or when products have mandatory modifiers.'\n          items:\n            type: object\n            properties:\n              id:\n                type: integer\n                description: 'Numeric ID of an option applied to the product from a list of options available to the product. This field has the same value as `product_option_id` when [retrieving products in an order](/api-reference/store-management/orders/order-products/getallorderproducts).'\n              value:\n                type: string\n                description: |-\n                  Depending on the option type, value can be one of the following:\n                  - The variant option value id or the modifier value id for modifier types with a list of defined values, such as drop down or checkbox modifiers.\n                  - The modifier value for modifier types without a list of defined values, such as text field or date field modifiers.\n\n                  Notes:\n                  - The API does not currently support the following option types:\n                    - File upload\n                    - Pick list\n                  - For date modifiers use either the `YYYY-MM-DDThh:mm:ss±hh:mm` or the `YYYY-MM-DD` ISO-8601 formats. The date field modifier values are saved and retuned as timestamps. For values entered using the YYYY-MM-DD format, the store timezone is used when creating the timestamp.\n                  - For multi-line text field modifiers, use the `\\n` characters for separating the lines.\n              display_name:\n                type: string\n                example: couleur\n                description: 'Alias for display_name_customer. The product option name that is shown to customer in storefront. `xxx` and `xxx_customer` always hold the same value, updating either `xxx` or `xxx_customer` will change value for both of those fields.'\n                minLength: 1\n              display_name_customer:\n                type: string\n                description: 'The product option name that is shown to customer in storefront. `xxx` and `xxx_customer` always hold the same value, updating either `xxx` or `xxx_customer` will change value for both of those fields.'\n                example: couleur\n                minLength: 1\n              display_name_merchant:\n                type: string\n                example: color\n                description: The product option name that is shown to merchant in Control Panel.\n              display_value:\n                type: string\n                example: bleu\n                description: 'Alias for display_value_customer. The product option value that is shown to customer in storefront. `xxx` and `xxx_customer` always hold the same value, updating either `xxx` or `xxx_customer` will change value for both of those fields.'\n                minLength: 1\n              display_value_merchant:\n                type: string\n                example: blue\n                description: The product option value that is shown to merchant in Control Panel.\n                minLength: 1\n              display_value_customer:\n                type: string\n                example: bleu\n                description: 'The product option value that is shown to customer in storefront.`xxx` and `xxx_customer` always hold the same value, updating either `xxx` or `xxx_customer` will change value for both of those fields.'\n                minLength: 1\n        quantity:\n          type: number\n        price_inc_tax:\n          type: number\n        price_ex_tax:\n          type: number\n        upc:\n          type: string\n        variant_id:\n          type: integer\n          description: '\"\"'\n        wrapping_name:\n          type: string\n        wrapping_message:\n          type: string\n        wrapping_cost_ex_tax:\n          type: number\n        wrapping_cost_inc_tax:\n          type: number\n      x-internal: false\n    orderCustomProduct_Post:\n      title: orderCustomProduct_Post\n      type: object\n      description: |-\n        At least one of these fields `name`, `name_customer`, or `name_merchant` must be provided with non-empty value.\n        Note: `name` and `name_customer` always hold the same value, updating either `name` or `name_customer` will change value for both of those fields.\n        If both fields `name` and `name_customer` are present, they must have the same value.\n        Empty strings `''` and `null` are invalid for `xxx`, `xxx_customer`, and `xxx_merchant`.\n        If both fields `name` and `name_customer` are omitted, they will be populated by the `name_merchant` value.\n        If field `name_merchant` is omitted it will be populated by the value of `name` (or `name_customer`).\n      properties:\n        name:\n          type: string\n          example: Fog Linen Chambray Towel - Beige Stripe\n          description: Alias for name_customer. The product name that is shown to customer in storefront.\n        name_customer:\n          type: string\n          example: Fog Linen Chambray Towel - Beige Stripe\n          description: The product name that is shown to customer in storefront.\n        name_merchant:\n          type: string\n          example: Towel Type 1\n          description: The product name that is shown to merchant in control panel.\n        quantity:\n          type: number\n        price_inc_tax:\n          type: number\n        price_ex_tax:\n          type: number\n        upc:\n          type: string\n        sku:\n          type: string\n      required:\n        - name\n        - quantity\n        - price_inc_tax\n        - price_ex_tax\n      x-internal: false\n    order_Put:\n      title: order_Put\n      allOf:\n        - payment_method:\n            type: string\n            description: 'The payment method for this order. Can be one of the following: `Manual`, `Credit Card`, `Cash`,`Test Payment Gateway`, etc.'\n          type: object\n          properties:\n            products:\n              type: array\n              items:\n                anyOf:\n                  - $ref: '#/components/schemas/orderCatalogProduct_Put'\n                  - $ref: '#/components/schemas/orderCustomProduct_Put'\n            shipping_addresses:\n              $ref: '#/components/schemas/shippingAddress_Base'\n        - $ref: '#/components/schemas/order_Shared'\n      x-internal: false\n    order_Post:\n      title: order_Post\n      description: Products and Billing address only required for POST operation.\n      allOf:\n        - type: object\n          properties:\n            products:\n              type: array\n              items:\n                anyOf:\n                  - $ref: '#/components/schemas/orderCustomProduct_Post'\n                  - $ref: '#/components/schemas/orderCatalogProduct_Post'\n            shipping_addresses:\n              type: array\n              items:\n                $ref: '#/components/schemas/shippingAddress_Base'\n        - $ref: '#/components/schemas/order_Shared'\n      x-internal: false\n",
			"canonicalURL": "/github.com/bigcommerce/api-specs@3d4f475bfa35fa63397a69165530f47d4d8b3703/-/blob/reference/orders.v2.oas2.yml",
			"externalURLs": [
				{
					"url": "https://github.com/bigcommerce/api-specs/blob/3d4f475bfa35fa63397a69165530f47d4d8b3703/reference/orders.v2.oas2.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: json: line 1:13786: json: cannot unmarshal Go value of type ogen.Spec: spec: json: cannot unmarshal Go value of type ogen.Properties: json: cannot unmarshal JSON array into Go value of type string"
}