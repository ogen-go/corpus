{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Szer/GiraffeGenerator"
		},
		"file": {
			"name": "specWithParametersAndRequestBodySchemas.yaml",
			"size": 0,
			"path": "tests/GiraffeGenerator.IntegrationTests/specs/specWithParametersAndRequestBodySchemas.yaml",
			"byteSize": 2606,
			"content": "openapi: \"3.0.0\"\ninfo:\n  title: Spec with parameters and request body API\n  version: 1\npaths:\n  /id/{param}:\n    parameters:\n      - schema:\n          type: string\n        name: param\n        in: path\n        required: true\n    post:\n      operationId: postId\n      parameters:\n        - schema:\n            type: integer\n          name: param\n          in: query\n          required: false\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/dataSetListInput'\n      responses:\n        '200':\n          description: returns all input parameters in one object\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/dataSetListOutput'\ncomponents:\n  schemas:\n    forDefaultsTesting:\n      type: object\n      properties:\n        optionalArrayWithDefaultItems:\n          type: array\n          items:\n            type: integer\n            default: 42\n        requiredArrayWithDefaultItems:\n            type: array\n            items:\n              type: integer\n              default: 48\n        apiKey:\n          type: string\n          format: password\n          default: pa$$word\n        apiVersionNumber:\n          type: string\n          default: 1\n        apiUrl:\n          type: string\n          format: uriref\n          default: http://localhost:8080/api\n        apiCount:\n          type: integer\n          format: int64\n          default: 123456789123456\n        apiAvg:\n          type: integer\n          default: 1234567890\n        isInternal:\n          type: boolean\n          default: true\n        start:\n          type: string\n          format: date\n          default: 2020-10-8\n        someDateTime:\n          type: string\n          format: date-time\n          default: 2020-10-8T00:55:00+03:00\n        pi:\n          type: number\n          default: 3.14\n        someUid:\n          type: string\n          format: uid\n          default: 8282cbfd-f323-4b7d-bcc0-28f127c2b365\n      required:\n        - requiredArrayWithDefaultItems\n    dataSetListInput:\n      type: object\n      properties:\n        total:\n          type: integer\n        defaultsTest:\n          $ref: '#/components/schemas/forDefaultsTesting'\n      required:\n        - defaultsTest\n    dataSetListOutput:\n      type: object\n      properties:\n        pathParam:\n          type: string\n        queryParam:\n          type: integer\n        total:\n          type: integer\n        defaultsTest:\n          $ref: '#/components/schemas/forDefaultsTesting'\n      required:\n        - pathParam\n        - defaultsTest",
			"canonicalURL": "/github.com/Szer/GiraffeGenerator@f488a4a0c693cc954557960da19015169e7f8f76/-/blob/tests/GiraffeGenerator.IntegrationTests/specs/specWithParametersAndRequestBodySchemas.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Szer/GiraffeGenerator/blob/f488a4a0c693cc954557960da19015169e7f8f76/tests/GiraffeGenerator.IntegrationTests/specs/specWithParametersAndRequestBodySchemas.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: json: line 1:1451: json: cannot unmarshal Go value of type ogen.Spec: spec: json: cannot unmarshal JSON number into Go value of type string"
}