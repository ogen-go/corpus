{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ground-x/caver-js-ext-kas"
		},
		"file": {
			"name": "2021-09-30-openapi-versioned.yaml",
			"size": 0,
			"path": "yamls/kip37/2021-09-30-openapi-versioned.yaml",
			"byteSize": 85522,
			"content": "openapi: 3.0.0\ninfo:\n  version: 1.0\n  title: KIP-37 API\n  description: \"## Introduction\\nThe KIP-37 API helps Blockchain app (BApp) developers\\\n    \\ to easily deploy smart contracts and send tokens of the [KIP-37 Multi Token\\\n    \\ Standard](https://kips.klaytn.com/KIPs/kip-37).\\n\\nYou can use the default contract\\\n    \\ managing account (`deployer`) and `alias`.  \\n\\nYou can also manage the contracts\\\n    \\ and tokens created on the klaytn network using the caver SDK, using contract\\\n    \\ address and the [Wallet API](https://refs.klaytnapi.com/ko/wallet/latest) account.\\\n    \\  \\n\\n## Fee Payer Options\\n\\nKAS KIP-37 supports four scenarios for paying transactin\\\n    \\ fees:    \\n\\n**1. Using only KAS Global FeePayer Account**  \\nSends all transactions\\\n    \\ using the KAS global FeePayer Account.  \\n   \\n```\\n{\\n    \\\"options\\\": {\\n\\\n    \\      \\\"enableGlobalFeePayer\\\": true\\n    }    \\n}\\n```  \\n\\n\u003cbr /\u003e  \\n\\n**2.\\\n    \\ Using User FeePayer account**  \\nSends all transactions using the KAS User FeePayer\\\n    \\ Account. \\n   \\n```\\n{\\n  \\\"options\\\": {\\n    \\\"enableGlobalFeePayer\\\": false,\\n\\\n    \\    \\\"userFeePayer\\\": {\\n      \\\"krn\\\": \\\"krn:1001:wallet:20bab367-141b-439a-8b4c-ae8788b86316:feepayer-pool:default\\\"\\\n    ,\\n      \\\"address\\\": \\\"0xd6905b98E4Ba43a24E842d2b66c1410173791cab\\\"\\n    }\\n\\\n    \\  }\\n}\\n```  \\n\\n\u003cbr /\u003e\\n\\n**3. Using both KAS Global FeePayer Account + User\\\n    \\ FeePayer Account**  \\nUses User FeePayer Account as default. When the balance\\\n    \\ runs out, KAS Global FeePayer Account will be used.\\n   \\n```\\n{\\n  \\\"options\\\"\\\n    : {\\n    \\\"enableGlobalFeePayer\\\": true,\\n    \\\"userFeePayer\\\": {\\n      \\\"krn\\\"\\\n    : \\\"krn:1001:wallet:20bab367-141b-439a-8b4c-ae8788b86316:feepayer-pool:default\\\"\\\n    ,\\n      \\\"address\\\": \\\"0xd6905b98E4Ba43a24E842d2b66c1410173791cab\\\"\\n    }\\n\\\n    \\  }\\n}\\n```  \\n\\n\u003cbr /\u003e\\n\\n**4. Not using FeePayer Account**  \\nSends a transaction\\\n    \\ via normal means where the sender pays the transaction fee.  \\n   \\n```\\n{\\n\\\n    \\  \\\"options\\\": {\\n    \\\"enableGlobalFeePayer\\\": false\\n  }\\n}\\n```\\n\"\nservers:\n- url: https://kip37-api.klaytnapi.com\nsecurity:\n- basic: []\ntags:\n- name: err-400\n  description: |\n    | Code    | Message                                      |\n    |---------|----------------------------------------------|\n    | 1160050 | incorrect request                            |\n    | 1160251 | its value is out of range                    |\n    | 1164000 | invalid alias format                         |\n    | 1164001 | invalid address                              |\n    | 1164002 | invalid hex format                           |\n    | 1164004 | account not found in wallet account-pool     |\n    | 1164005 | batch items mismatch                         |\n    | 1164006 | too many batch items                         |\n    | 1164007 | invalid krn                                  |\n    | 1164008 | no contract code                             |\n    | 1164009 | insufficient balance                         |\n    | 1164011 | fee payer not found in wallet feepayer-pool  |\n  x-displayName: \"400: Bad Request\"\n- name: err-403\n  description: |\n    | Code    | Message                          |\n    |---------|----------------------------------|\n    | 1164300 | insufficient account permissions |\n  x-displayName: \"403: Forbidden\"\n- name: err-404\n  description: |\n    | Code    | Message            |\n    |---------|--------------------|\n    | 1164400 | contract not found |\n    | 1164401 | token not found    |\n  x-displayName: \"404: Not Found\"\n- name: err-409\n  description: |\n    | Code    | Message                   |\n    |---------|---------------------------|\n    | 1164900 | duplicate alias           |\n    | 1164901 | contract already paused   |\n    | 1164902 | contract already unpaused |\n    | 1164903 | token already exist       |\n    | 1164904 | contract already paused   |\n    | 1164905 | token already unpaused    |\n    | 1164906 | already approved          |\n    | 1164907 | already not approved      |\n    | 1164908 | duplicate contract        |\n    | 1164909 | contract being created    |\n  x-displayName: \"409: Conflict\"\n- name: err-503\n  description: |\n    | Code    | Message                   |\n    |---------|---------------------------|\n    | 1165100 | internal server error     |\n  x-displayName: \"503: Service Unavailable\"\n- name: kip37-contract\n  x-displayName: Contract\n- name: kip37-token\n  x-displayName: Token\n- name: kip37-token-ownership\n  x-displayName: Token Ownership\n- name: kip37-deployer\n  x-displayName: Deployer\npaths:\n  /v1/contract:\n    get:\n      tags:\n      - kip37-contract\n      summary: Get KIP-37 Contract\n      description: \"Get a list of all KIP-37 contracts by account. The response items\\\n        \\ will be listed in the order of contract creation request time. \u003cbr/\u003e\u003cbr/\u003e\\n\\\n        The `status` field in the response can contain the following:\\n- `init`: Initial\\\n        \\ state before transaction is sent\\n- `submitted`: Contract deployment transaction\\\n        \\ has been sent\\n- `deployed`: Contract has been deployed\\n- `imported`: Contract\\\n        \\ list has been imported\\n- `failed`: Contract deployment transaction has\\\n        \\ failed\"\n      operationId: ListContractsInDeployerPool\n      parameters:\n      - name: x-chain-id\n        in: header\n        description: Klaytn Network Chain ID (1001 or 8217)\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: size\n        in: query\n        description: Number of items to return\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: integer\n      - name: cursor\n        in: query\n        description: The pointer after which the results will be returned. `cursor`\n          will be included in the result when you request a query of a specific number\n          (`size`) of items.\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n      - name: status\n        in: query\n        description: \"Status of the contract you want to query as a filter for the\\\n          \\ request. You can only choose one of [`all`,`init`,`submitted`,`deployed`,`imported`,`failed`].\\\n          \\ The default value is `all`.\"\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Kip37ContractListResponse'\n              examples:\n                Success:\n                  value:\n                    items:\n                    - address: 0xcbcbe8297801600bf8e0530baa2fdd6358547ebe\n                      alias: my-first-kip37\n                      status: deployed\n                      uri: \"https://token-cdn-domain/{id}.json\"\n                      options:\n                        enableGlobalFeePayer: true\n                        userFeePayer:\n                          krn: \"\"\n                          address: \"\"\n                    cursor: eyJjcmVhdGVkX2F0IjoxNjE5NTkwNTAxLCJpZCI6ImNvbnRyYWN0IzEwMDEjODhjMTIyM2MtNjZhZi00MTIyLTk4MTgtMDY5YjJlM2M2YjMwIiwic19pZCI6Imtha2Fyb3QtMTYxOTU5MDUwMTYxNyJ9\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid size type:\n                  value:\n                    code: 1160050\n                    message: incorrect request\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n                Out of range size:\n                  value:\n                    code: 1160251\n                    message: its value is out of range; size\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n                Invalid cursor:\n                  value:\n                    code: 1160107\n                    message: incorrect bookmark\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n                Invalid status:\n                  value:\n                    code: 1160050\n                    message: incorrect request; status\n                    requestId: 9c51cbbf-ab79-9a82-9879-0e02df47be9d\n    post:\n      tags:\n      - kip37-contract\n      summary: Deploy KIP-37 Contract\n      description: \"Deploys a KIP-37 contract. \u003cbr/\u003e\\n\\n\\nKIP-37 supports the use\\\n        \\ of `alias`, which you can use in place of the account address. The `alias`\\\n        \\ must only contain lowercase letters, numbers and hyphens and begin with\\\n        \\ a lowercase letter.\\n\\n##### Options  \\nOptions for paying the transaction\\\n        \\ fee. For more details, please refer to [Fee Payer Options](#section/Fee-Payer-Options).\"\n      operationId: DeployContract\n      parameters:\n      - name: x-chain-id\n        in: header\n        description: Klaytn Network Chain ID (1001 or 8217)\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeployKip37ContractRequest'\n            examples:\n              Success:\n                value:\n                  alias: my-first-kip37\n                  uri: \"https://token-cdn-domain/{id}.json\"\n                  options:\n                    enableGlobalFeePayer: true\n                    userFeePayer:\n                      krn: \"\"\n                      address: \"\"\n              \"400 - Required alias\":\n                value:\n                  uri: https://cdn.com/\n              \"400 - Invalid alias format\":\n                value:\n                  alias: 2021-my-first-kip37\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Kip37DeployResponse'\n              examples:\n                Success:\n                  value:\n                    status: Submitted\n                    transactionHash: 0x0a4f4f97d8a5904721514d60abd3f9ad7938862e415a6c043553a94ab68a5edb\n                    uri: \"https://token-cdn-domain/{id}.json\"\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Required alias:\n                  value:\n                    code: 1160050\n                    message: incorrect request; alias\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n                Invalid alias format:\n                  value:\n                    code: 1164000\n                    message: invalid alias format\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n                Invalid fee payer KRN:\n                  value:\n                    code: 1164007\n                    message: invalid krn;options.userFeePayer.krn\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n                Fee payer not found:\n                  value:\n                    code: 1164007\n                    message: invalid krn;fee payer not found\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Duplicate alias:\n                  value:\n                    code: 1164900\n                    message: duplicate alias\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n  /v1/contract/import:\n    post:\n      tags:\n      - kip37-contract\n      summary: Import KIP-37 Contract\n      description: \"Import a contract that has already been deployed.\u003cbr/\u003e\\n\\n\\nThe\\\n        \\ `alias` must only contain lowercase letters, numbers and hyphens and begin\\\n        \\ with a lowercase letter.\\n\\n##### Options  \\nOptions for paying the transaction\\\n        \\ fee. For more details, please refer to [Fee Payer Options](#section/Fee-Payer-Options).\"\n      operationId: ImportContract\n      parameters:\n      - name: x-chain-id\n        in: header\n        description: Klaytn Network Chain ID (1001 or 8217)\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ImportKip37ContractRequest'\n            examples:\n              Success:\n                value:\n                  alias: my-first-kip37\n                  uri: \"https://token-cdn-domain/{id}.json\"\n                  address: 0xcbcbe8297801600bf8e0530baa2fdd6358547ebe\n                  options:\n                    enableGlobalFeePayer: true\n              Required Alias:\n                value:\n                  uri: \"https://token-cdn-domain/{id}.json\"\n                  address: 0xcbcbe8297801600bf8e0530baa2fdd6358547ebe\n                  options:\n                    enableGlobalFeePayer: true\n              Invalid alias format:\n                value:\n                  alias: 2021-my-first-kip37\n                  uri: \"https://token-cdn-domain/{id}.json\"\n                  address: 0xcbcbe8297801600bf8e0530baa2fdd6358547ebe\n                  options:\n                    enableGlobalFeePayer: true\n              Required Address:\n                value:\n                  alias: my-first-kip37\n                  uri: \"https://token-cdn-domain/{id}.json\"\n                  options:\n                    enableGlobalFeePayer: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Kip37Contract'\n              examples:\n                Success:\n                  value:\n                    address: 0xcbcbe8297801600bf8e0530baa2fdd6358547ebe\n                    alias: my-first-kip37\n                    status: deployed\n                    uri: \"https://token-cdn-domain/{id}.json\"\n                    options:\n                      enableGlobalFeePayer: true\n                      userFeePayer:\n                        krn: \"\"\n                        address: \"\"\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Required alias:\n                  value:\n                    code: 1160050\n                    message: incorrect request; alias\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n                Invalid alias format:\n                  value:\n                    code: 1164000\n                    message: invalid alias format\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n                Required Address:\n                  value:\n                    code: 1160050\n                    message: incorrect request; address\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n                No contract code:\n                  value:\n                    code: 1164008\n                    message: no contract code\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n                Invalid fee payer KRN:\n                  value:\n                    code: 1164007\n                    message: invalid krn;options.userFeePayer.krn\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n                Fee payer not found:\n                  value:\n                    code: 1164007\n                    message: invalid krn;fee payer not found\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Duplicate contract:\n                  value:\n                    code: 1164909\n                    message: duplicate contract\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n                Duplicate alias:\n                  value:\n                    code: 1164900\n                    message: duplicate alias\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n  /v1/contract/{contract-address-or-alias}:\n    get:\n      tags:\n      - kip37-contract\n      summary: Get KIP-37 Contract Information\n      description: Queries a specified contract using the alias or the contract address.\n      operationId: GetContract\n      parameters:\n      - name: contract-address-or-alias\n        in: path\n        description: Contract address (in hex. with the 0x prefix) or alias\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: x-chain-id\n        in: header\n        description: Klaytn Network Chain ID (1001 or 8217)\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Kip37Contract'\n              examples:\n                Success:\n                  value:\n                    address: 0xcbcbe8297801600bf8e0530baa2fdd6358547ebe\n                    alias: my-first-kip37\n                    status: deployed\n                    uri: \"https://token-cdn-domain/{id}.json\"\n                    options:\n                      enableGlobalFeePayer: true\n                      userFeePayer:\n                        krn: \"\"\n                        address: \"\"\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Not found:\n                  value:\n                    code: 1164400\n                    message: contract not found\n                    requestId: 20bab367-141b-439a-8b4c-ae8788b86316\n    put:\n      tags:\n      - kip37-contract\n      summary: Edit KIP-37 Contract Information\n      description: \"Edits the information of a contract. \u003cbr/\u003e\\n\\n##### Options  \\n\\\n        Options for paying the transaction fee. For more details, please refer to\\\n        \\ [Fee Payer Options](#section/Fee-Payer-Options).\"\n      operationId: PutContract\n      parameters:\n      - name: contract-address-or-alias\n        in: path\n        description: Contract address (in hex. with the 0x prefix) or alias\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: x-chain-id\n        in: header\n        description: Klaytn Network Chain ID (1001 or 8217)\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateKip37ContractRequest'\n            examples:\n              Success:\n                value:\n                  options:\n                    enableGlobalFeePayer: true\n                    userFeePayer:\n                      krn: krn:1001:wallet:20bab367-141b-439a-8b4c-ae8788b86316:feepayer-pool:default\n                      address: 0xd6905b98E4Ba43a24E842d2b66c1410173791cab\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Kip37Contract'\n              examples:\n                Success:\n                  value:\n                    alias: my-first-kip37\n                    uri: \"https://token-cdn-domain/{id}.json\"\n                    address: 0xcbcbe8297801600bf8e0530baa2fdd6358547ebe\n                    options:\n                      enableGlobalFeePayer: true\n                      userFeePayer:\n                        krn: krn:1001:wallet:20bab367-141b-439a-8b4c-ae8788b86316:feepayer-pool:default\n                        address: 0xd6905b98E4Ba43a24E842d2b66c1410173791cab\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid fee payer KRN:\n                  value:\n                    code: 1164007\n                    message: invalid krn;options.userFeePayer.krn\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n                Invalid address:\n                  value:\n                    code: 1164001\n                    message: invalid address; sender\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n                Fee payer not found:\n                  value:\n                    code: 1164007\n                    message: invalid krn;fee payer not found\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Not Found:\n                  value:\n                    code: 1164400\n                    message: contract not found\n                    requestId: 20bab367-141b-439a-8b4c-ae8788b86316\n  /v1/contract/{contract-address-or-alias}/approveall:\n    post:\n      tags:\n      - kip37-contract\n      summary: Grant/Remove Authorization for Token Transfers\n      description: \"Grants/cancels authorization to a third party (`to`) to transfer\\\n        \\ all tokens for a specified contract.  \\n\\n##### From\\nThe account that sends\\\n        \\ the transaction.\\n\\nIf the `from` account belongs to a default `account-pool`\\\n        \\ for either KIP-37 or Wallet, you can omit the KRN.\u003cbr /\u003e\\nOtherwise you\\\n        \\ have to provide the KRN data (`x-krn: krn:{chain-id}:wallet:{account-id}:account-pool:{pool\\\n        \\ name}`) in the header.\"\n      operationId: ApproveAll\n      parameters:\n      - name: contract-address-or-alias\n        in: path\n        description: Contract address (in hex. with the 0x prefix) or alias\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: x-chain-id\n        in: header\n        description: Klaytn Network Chain ID (1001 or 8217)\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ApproveAllKip37ContractRequest'\n            examples:\n              Success:\n                value:\n                  from: 0x2dad235a3b8a87b1fca38ba3d8bb2a0f6a892b58\n                  to: 0xb4040265dba628cbb2cdd36031016b1a68a20546\n                  approved: true\n              \"400 - Required field\":\n                value:\n                  to: 0xb4040265dba628cbb2cdd36031016b1a68a20546\n                  approve: true\n              \"400 - Invalid address\":\n                value:\n                  from: not hex address\n                  to: 0xb4040265dba628cbb2cdd36031016b1a68a20546\n                  approve: true\n              \"400 - Same from and to\":\n                value:\n                  from: 0xb4040265dba628cbb2cdd36031016b1a68a20546\n                  to: 0xb4040265dba628cbb2cdd36031016b1a68a20546\n                  approve: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Kip37TransactionStatusResponse'\n              examples:\n                Success:\n                  value:\n                    status: Submitted\n                    transactionHash: 0xb5a0618be3508b3fe22e35aa96063005dd4c557cf040348cc542b0726cc30f7b\n                Success with multisig account:\n                  value:\n                    status: Pending\n                    transactionId: 0xb5a0618be3508b3fe22e35aa96063005dd4c557cf040348cc542b0726cc30f7b\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Required fields:\n                  value:\n                    code: 1160050\n                    message: incorrect request; from\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n                Invalid address:\n                  value:\n                    code: 1164001\n                    message: invalid address; from\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n                Same from and to:\n                  value:\n                    code: 1164003\n                    message: from and to must have different address\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n                Account not found:\n                  value:\n                    code: 1164404\n                    message: account not found in wallet account-pool\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Contract not found:\n                  value:\n                    code: 1164400\n                    message: contract not found\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Already approved:\n                  value:\n                    code: 1164006\n                    message: already approved\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n  /v1/contract/{contract-address-or-alias}/pause:\n    post:\n      tags:\n      - kip37-contract\n      summary: Pause KIP-37 Contract\n      description: \"Pauses all operations for a specified contract, such as minting,\\\n        \\ transfering tokens.\u003cbr /\u003e\\nYou can resume using [/v1/{contract-address-or-alias/unpause](#operation/UnpauseContract).\\\n        \\  \\n\\n##### Sender\\nThe Account that sends the transaction.\\n\\nIf the `sender`\\\n        \\ account belongs to a default `account-pool` for either KIP-37 or Wallet,\\\n        \\ you can omit the KRN.\u003cbr /\u003e\u003cbr /\u003e\\nOtherwise you have to provide the KRN\\\n        \\ data (`x-krn: krn:{chain-id}:wallet:{account-id}:account-pool:{pool name}`)\\\n        \\ in the header.\"\n      operationId: PauseContract\n      parameters:\n      - name: contract-address-or-alias\n        in: path\n        description: Contract address (in hex. with the 0x prefix) or alias\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: x-chain-id\n        in: header\n        description: Klaytn Network Chain ID (1001 or 8217)\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/OperateKip37ContractRequest'\n            examples:\n              Success:\n                value:\n                  sender: 0x2dad235a3b8a87b1fca38ba3d8bb2a0f6a892b58\n              \"400 - Required fields\":\n                value:\n                  sender: \"\"\n              \"400 - Invalid address\":\n                value:\n                  sender: not hex address\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Kip37TransactionStatusResponse'\n              examples:\n                Success:\n                  value:\n                    status: Submitted\n                    transactionHash: 0xb5a0618be3508b3fe22e35aa96063005dd4c557cf040348cc542b0726cc30f7b\n                Success with multisig account:\n                  value:\n                    status: Pending\n                    transactionId: 0x947e5149c93e0bdbd3973e348a4b3557b857d2dee865f407b29f7f02c9b5d22e\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Required fields:\n                  value:\n                    code: 1160050\n                    message: incorrect request; sender\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n                Invalid address:\n                  value:\n                    code: 1164001\n                    message: invalid address; sender\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n                Account not found:\n                  value:\n                    code: 1164404\n                    message: account not found in wallet account-pool\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Not pauser:\n                  value:\n                    code: 1164300\n                    message: insufficient account permissions\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Contract not found:\n                  value:\n                    code: 1164400\n                    message: contract not found\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Already paused:\n                  value:\n                    code: 1164901\n                    message: contract already paused\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n  /v1/contract/{contract-address-or-alias}/unpause:\n    post:\n      tags:\n      - kip37-contract\n      summary: Resume KIP-37 Contract\n      description: \"Resumes the operations for a paused contract.\\n\\n##### Sender\\n\\\n        The account for sending the transaction.\\n\\nIf the `sender` account belongs\\\n        \\ to a default `account-pool` for either KIP-37 or Wallet, you can omit the\\\n        \\ KRN.\u003cbr /\u003e\\nOtherwise you have to provide the KRN data (`x-krn: krn:{chain-id}:wallet:{account-id}:account-pool:{pool\\\n        \\ name}`) in the header.\"\n      operationId: UnpauseContract\n      parameters:\n      - name: contract-address-or-alias\n        in: path\n        description: Contract address (in hex. with the 0x prefix) or alias\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: x-chain-id\n        in: header\n        description: Klaytn Network Chain ID (1001 or 8217)\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/OperateKip37ContractRequest'\n            examples:\n              Success:\n                value:\n                  sender: 0x2dad235a3b8a87b1fca38ba3d8bb2a0f6a892b58\n              \"400 - Required fields\":\n                value:\n                  sender: \"\"\n              \"400 - Invalid address\":\n                value:\n                  sender: not hex address\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Kip37TransactionStatusResponse'\n              examples:\n                Success:\n                  value:\n                    status: Submitted\n                    transactionHash: 0xb5a0618be3508b3fe22e35aa96063005dd4c557cf040348cc542b0726cc30f7b\n                Success with miultisig account:\n                  value:\n                    status: Pending\n                    transactionId: 0x947e5149c93e0bdbd3973e348a4b3557b857d2dee865f407b29f7f02c9b5d22e\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Required fields:\n                  value:\n                    code: 1160050\n                    message: incorrect request; sender\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n                Invalid address:\n                  value:\n                    code: 1164001\n                    message: invalid address; sender\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n                Account not found:\n                  value:\n                    code: 1164404\n                    message: account not found in wallet account-pool\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Not pauser:\n                  value:\n                    code: 1164300\n                    message: insufficient account permissions; pauser\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Contract not found:\n                  value:\n                    code: 1164400\n                    message: contract not found\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Already unpaused:\n                  value:\n                    code: 1164902\n                    message: contract already unpaused\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n  /v1/contract/{contract-address-or-alias}/token:\n    get:\n      tags:\n      - kip37-token\n      summary: Get KIP-37 Token List\n      description: |\n        Returns a list of KIP-37 tokens.\n\n\n        ##### Sort Order\n        - The response items are listed in lexicographical order of the token ID.\n      operationId: GetTokens\n      parameters:\n      - name: contract-address-or-alias\n        in: path\n        description: Contract address (in hex. with the 0x prefix) or alias\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: x-chain-id\n        in: header\n        description: Klaytn Network Chain ID (1001 or 8217)\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: size\n        in: query\n        description: The maximum number of items to return\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: integer\n      - name: cursor\n        in: query\n        description: The pointer after which the results will be returned. `cursor`\n          will be included in the result when you request a query of a specific number\n          (`size`) of items.\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Kip37TokenInfoListResponse'\n              examples:\n                Success:\n                  value:\n                    items:\n                    - tokenId: 0x1\n                      totalSupply: 0xaf298d050e4395d69670b12b7f41000000000000\n                      tokenUri: https://token-cdn-domain/1.json\n                    cursor: z53x014AdOQJGNl6V99k3wAap7M08oLKedg5DVqlLdZqWwPQzo3aM7v8A9J6V2nmqnpgDNOeGkblm1BKEX5x0Yr46bW2ZN4YGmQPJO1xBvrEzXrW2gbvDZ7EKMaYmkew\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid size type:\n                  value:\n                    code: 1160050\n                    message: incorrect request\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n                Out of range size:\n                  value:\n                    code: 1160251\n                    message: its value is out of range; size\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n                Invalid cursor:\n                  value:\n                    code: 1160107\n                    message: incorrect bookmark\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n                example-4:\n                  value:\n                    code: 0\n                    message: string\n                    requestId: string\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Contract not found:\n                  value:\n                    code: 1164400\n                    message: contract not found\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n    post:\n      tags:\n      - kip37-token\n      summary: Mint a KIP-37 Token\n      description: \"Creates a new token from a specified KIP-37 contract.\\n\\n#####\\\n        \\ Sender\\nThe account for sending the transaction.\\n\\nIf the `sender` account\\\n        \\ belongs to a default `account-pool` for either KIP-37 or Wallet, you can\\\n        \\ omit the KRN.\u003cbr /\u003e\\nOtherwise you have to provide the KRN data (`x-krn:\\\n        \\ krn:{chain-id}:wallet:{account-id}:account-pool:{pool name}`) in the header.\"\n      operationId: CreateToken\n      parameters:\n      - name: contract-address-or-alias\n        in: path\n        description: Contract address (in hex. with the 0x prefix) or alias\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: x-chain-id\n        in: header\n        description: Klaytn Network Chain ID (1001 or 8217)\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateKip37TokenRequest'\n            examples:\n              Success with uri:\n                value:\n                  sender: 0x9eaf20b40e0f1ced5dbba6f5cfb0d3e12b0534f4\n                  id: 0x1\n                  initialSupply: 0x100\n                  uri: https://token-cdn-domain/1.json\n              \"400 - Required fields\":\n                value:\n                  id: 0x1\n                  initialSupply: 0x100\n                  uri: https://s3.amazonaws.com/your-bucket/1.json\n              \"400 - Invalid address\":\n                value:\n                  sender: not hex address\n                  id: 0x1\n                  initialSupply: 0x100\n                  uri: https://s3.amazonaws.com/your-bucket/1.json\n              \"400 - Invalid initialSupply\":\n                value:\n                  sender: 0x9eaf20b40e0f1ced5dbba6f5cfb0d3e12b0534f4\n                  id: 0x1\n                  initialSupply: not hex value\n                  uri: https://s3.amazonaws.com/your-bucket/1.json\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Kip37TransactionStatusResponse'\n              examples:\n                Success:\n                  value:\n                    status: Submitted\n                    transactionHash: 0xb5a0618be3508b3fe22e35aa96063005dd4c557cf040348cc542b0726cc30f7b\n                Success with multisig account:\n                  value:\n                    status: Pending\n                    transactionId: 0x947e5149c93e0bdbd3973e348a4b3557b857d2dee865f407b29f7f02c9b5d22e\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Required Fields:\n                  value:\n                    code: 1160050\n                    message: incorrect request; sender\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n                Invalid address:\n                  value:\n                    code: 1164001\n                    message: invalid address; sender\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n                Invalid initialSupply:\n                  value:\n                    code: 1164002\n                    message: invalid hex format; initialSupply\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n                Out of range initialSupply:\n                  value:\n                    code: 1160251\n                    message: its value is out of range; initialSupply\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Not minter:\n                  value:\n                    code: 1164300\n                    message: insufficient account permissions\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Contract not found:\n                  value:\n                    code: 1164400\n                    message: contract not found\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Already exist token:\n                  value:\n                    code: 1164903\n                    message: token already exists\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n    delete:\n      tags:\n      - kip37-token\n      summary: Burn KIP-37 Token\n      description: \"Burns KIP-37 tokens.\\n\\n##### From\\nThe account that sends the\\\n        \\ transaction.\\n\\nIf the `from` account belongs to a default `account-pool`\\\n        \\ for either KIP-37 or Wallet, you can omit the KRN.\u003cbr /\u003e\\nOtherwise you\\\n        \\ have to provide the KRN data (`x-krn: krn:{chain-id}:wallet:{account-id}:account-pool:{pool\\\n        \\ name}`) in the header.\\n\\n##### Batch Items\\nCall the contract function\\\n        \\ according to the Batch Items (`ids`, `amounts`) included in the request.\\n\\\n        \\n- If there is one element, call the `burn` function.\\n- If there are multiple\\\n        \\ elements, call the `burnBatch` function.\"\n      operationId: BurnToken\n      parameters:\n      - name: contract-address-or-alias\n        in: path\n        description: Contract address (in hex. with the 0x prefix) or alias\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: x-chain-id\n        in: header\n        description: Klaytn Network Chain ID (1001 or 8217)\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BurnKip37TokenRequest'\n            examples:\n              Success:\n                value:\n                  from: 0xDc277E2D89b92336A4ee80be3c7142443FDaDE47\n                  ids:\n                  - 0x1\n                  - 0x2\n                  amounts:\n                  - 0x100\n                  - 0x200\n              \"400 - Required fields\":\n                value:\n                  ids:\n                  - 0x1\n                  - 0x2\n                  amounts:\n                  - 0x100\n                  - 0x200\n              Invalid amounts:\n                value:\n                  from: 0xDc277E2D89b92336A4ee80be3c7142443FDaDE47\n                  ids:\n                  - 0x1\n                  - 0x2\n                  amounts:\n                  - not hex amount\n                  - 0x200\n              Out of range amounts:\n                value:\n                  from: 0xDc277E2D89b92336A4ee80be3c7142443FDaDE47\n                  ids:\n                  - 0x1\n                  - 0x2\n                  amounts:\n                  - 0x100\n                  - 0xd23687e82ffbbf0ee7e1c6874b4ced84752abc63af7396295c0ff8842e52ec34fff\n              Mismatch batch items:\n                value:\n                  from: 0xDc277E2D89b92336A4ee80be3c7142443FDaDE47\n                  ids:\n                  - 0x1\n                  - 0x2\n                  amounts:\n                  - 0x100\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Kip37TransactionStatusResponse'\n              examples:\n                Success:\n                  value:\n                    status: Submitted\n                    transactionHash: 0xb5a0618be3508b3fe22e35aa96063005dd4c557cf040348cc542b0726cc30f7b\n                Success with multisig account:\n                  value:\n                    status: Pending\n                    transactionId: 0x947e5149c93e0bdbd3973e348a4b3557b857d2dee865f407b29f7f02c9b5d22e\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Required fields:\n                  value:\n                    code: 1160050\n                    message: incorrect request; from\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n                Invalid amounts:\n                  value:\n                    code: 1164002\n                    message: invalid hex format; amounts\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n                Out of range amounts:\n                  value:\n                    code: 1160251\n                    message: its value is out of range; amounts\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n                Mismatch batch items:\n                  value:\n                    code: 1164005\n                    message: batch items mismatch\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n                Too many batch items:\n                  value:\n                    code: 1164006\n                    message: too many batch items\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Contract not found:\n                  value:\n                    code: 1164400\n                    message: contract not found\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n  /v1/contract/{contract-address-or-alias}/token/mint:\n    post:\n      tags:\n      - kip37-token\n      summary: Mint Additional KIP-37 Tokens\n      description: \"Mints multiple tokens for a given KIP-37 contract.  \\nMinting\\\n        \\ is possible after having created a token with [Create KIP-37 Token](#operation/CreateToken).\\\n        \\  \\n\\n##### Sender\\nThe account for sending the transaction.\\n\\nIf the `sender`\\\n        \\ account belongs to a default `account-pool` for either KIP-37 or Wallet,\\\n        \\ you can omit the KRN.\u003cbr /\u003e\\nOtherwise you have to provide the KRN data\\\n        \\ (`x-krn: krn:{chain-id}:wallet:{account-id}:account-pool:{pool name}`) in\\\n        \\ the header.\\n\\n##### Batch Items\\nCall the contract function according to\\\n        \\ the Batch Items (`ids`, `amounts`) included in the request.\\n\\n- If there\\\n        \\ is one element, call the `mint` function.\\n- If there are multiple elements,\\\n        \\ call the `mintBatch` function.\"\n      operationId: MintToken\n      parameters:\n      - name: contract-address-or-alias\n        in: path\n        description: Contract address (in hex. with the 0x prefix) or alias\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: x-chain-id\n        in: header\n        description: Klaytn Network Chain ID (1001 or 8217)\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MintKip37TokenRequest'\n            examples:\n              Success:\n                value:\n                  sender: 0x9eaf20b40e0f1ced5dbba6f5cfb0d3e12b0534f4\n                  to: 0xDc277E2D89b92336A4ee80be3c7142443FDaDE47\n                  ids:\n                  - 0x1\n                  - 0x2\n                  amounts:\n                  - 0x100\n                  - 0x200\n              \"400 - Invalid address\":\n                value:\n                  sender: not hex address\n                  to: 0xDc277E2D89b92336A4ee80be3c7142443FDaDE47\n                  ids:\n                  - 0x1\n                  - 0x2\n                  amounts:\n                  - 0x100\n                  - 0x200\n              \"400 - Invalid amounts\":\n                value:\n                  sender: 0x9eaf20b40e0f1ced5dbba6f5cfb0d3e12b0534f4\n                  to: 0xDc277E2D89b92336A4ee80be3c7142443FDaDE47\n                  ids:\n                  - 0x1\n                  - 0x2\n                  amounts:\n                  - not hex amount\n                  - 0x200\n              \"400 - Out of range amount\":\n                value:\n                  sender: 0x9eaf20b40e0f1ced5dbba6f5cfb0d3e12b0534f4\n                  to: 0xDc277E2D89b92336A4ee80be3c7142443FDaDE47\n                  ids:\n                  - 0x1\n                  - 0x2\n                  amounts:\n                  - 0x100\n                  - 0xd23687e82ffbbf0ee7e1c6874b4ced84752abc63af7396295c0ff8842e52ec34fff\n              \"400 Mismatch batch items\":\n                value:\n                  sender: 0x9eaf20b40e0f1ced5dbba6f5cfb0d3e12b0534f4\n                  to: 0xDc277E2D89b92336A4ee80be3c7142443FDaDE47\n                  ids:\n                  - 0x1\n                  - 0x2\n                  amounts:\n                  - 0x100\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Kip37TransactionStatusResponse'\n              examples:\n                Success:\n                  value:\n                    status: Submitted\n                    transactionHash: 0xb5a0618be3508b3fe22e35aa96063005dd4c557cf040348cc542b0726cc30f7b\n                Success with multisig account:\n                  value:\n                    status: Pending\n                    transactionId: 0x947e5149c93e0bdbd3973e348a4b3557b857d2dee865f407b29f7f02c9b5d22e\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid address:\n                  value:\n                    code: 1164001\n                    message: invalid address; sender\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n                Invalid amounts:\n                  value:\n                    code: 1164002\n                    message: invalid hex format; amounts\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n                Out of range amount:\n                  value:\n                    code: 1160251\n                    message: its value is out of range; amounts\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n                Mismatch batch items:\n                  value:\n                    code: 1164005\n                    message: batch items mismatch\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n                Too many batch items:\n                  value:\n                    code: 1164006\n                    message: too many batch items\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Not minter:\n                  value:\n                    code: 1164300\n                    message: insufficient account permissions\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Contract not found:\n                  value:\n                    code: 1164400\n                    message: contract not found\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n  /v1/contract/{contract-address-or-alias}/token/transfer:\n    post:\n      tags:\n      - kip37-token\n      summary: Send KIP-37 Token\n      description: \"Sends multiple tokens for a given KIP-37 contract.\\n\\n##### Sender\\n\\\n        The account for sending the transaction. If the `sender` and`owner` are different,`sender`\\\n        \\ must be authorized to send the token.\\n\\nIf the `sender` account belongs\\\n        \\ to a default `account-pool` for either KIP-37 or Wallet, you can omit the\\\n        \\ KRN.\u003cbr /\u003e\\nOtherwise you have to provide the KRN data (`x-krn: krn:{chain-id}:wallet:{account-id}:account-pool:{pool\\\n        \\ name}`) in the header.\\n\\n##### Batch Items\\nCall the contract function\\\n        \\ according to the Batch Items (`ids`, `amounts`) included in the request.\\n\\\n        \\n- If there is one element, call the `safeTransferFrom` function.\\n- If there\\\n        \\ are multiple elements, call the `safeBatchTransferFrom` function.\"\n      operationId: TransferToken\n      parameters:\n      - name: contract-address-or-alias\n        in: path\n        description: Contract address (in hex. with the 0x prefix) or alias\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: x-chain-id\n        in: header\n        description: Klaytn Network Chain ID (1001 or 8217)\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TransferKip37TokenRequest'\n            examples:\n              Success:\n                value:\n                  sender: 0x9eaf20b40e0f1ced5dbba6f5cfb0d3e12b0534f4\n                  owner: 0x9eaf20b40e0f1ced5dbba6f5cfb0d3e12b0534f4\n                  to: 0xDc277E2D89b92336A4ee80be3c7142443FDaDE47\n                  ids:\n                  - 0x1\n                  - 0x2\n                  amounts:\n                  - 0x100\n                  - 0x200\n              \"400 - Required fields\":\n                value:\n                  ids:\n                  - 0x1\n                  - 0x2\n                  amounts:\n                  - 0x100\n                  - 0x200\n              Invalid amounts:\n                value:\n                  sender: 0xDc277E2D89b92336A4ee80be3c7142443FDaDE47\n                  owner: 0x9eaf20b40e0f1ced5dbba6f5cfb0d3e12b0534f4\n                  to: 0xDc277E2D89b92336A4ee80be3c7142443FDaDE47\n                  ids:\n                  - 0x1\n                  - 0x2\n                  amounts:\n                  - not hex amount\n                  - 0x200\n              Out of range amounts:\n                value:\n                  sender: 0xDc277E2D89b92336A4ee80be3c7142443FDaDE47\n                  owner: 0x9eaf20b40e0f1ced5dbba6f5cfb0d3e12b0534f4\n                  to: 0xDc277E2D89b92336A4ee80be3c7142443FDaDE47\n                  ids:\n                  - 0x1\n                  - 0x2\n                  amounts:\n                  - 0x100\n                  - 0xd23687e82ffbbf0ee7e1c6874b4ced84752abc63af7396295c0ff8842e52ec34fff\n              Mismatch batch items:\n                value:\n                  from: 0xDc277E2D89b92336A4ee80be3c7142443FDaDE47\n                  ids:\n                  - 0x1\n                  - 0x2\n                  amounts:\n                  - 0x100\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Kip37TransactionStatusResponse'\n              examples:\n                Success:\n                  value:\n                    status: Submitted\n                    transactionHash: 0xb5a0618be3508b3fe22e35aa96063005dd4c557cf040348cc542b0726cc30f7b\n                Success with multisig account:\n                  value:\n                    status: Pending\n                    transactionId: 0x947e5149c93e0bdbd3973e348a4b3557b857d2dee865f407b29f7f02c9b5d22e\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Required fields:\n                  value:\n                    code: 1160050\n                    message: incorrect request; from\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n                Invalid amounts:\n                  value:\n                    code: 1164002\n                    message: invalid hex format; amounts\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n                Out of range amounts:\n                  value:\n                    code: 1160251\n                    message: its value is out of range; amounts\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n                Mismatch batch items:\n                  value:\n                    code: 1164005\n                    message: batch items mismatch\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n                Too many batch items:\n                  value:\n                    code: 1164006\n                    message: too many batch items\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Contract not found:\n                  value:\n                    code: 1164400\n                    message: contract not found\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n  /v1/contract/{contract-address-or-alias}/token/pause/{token-id}:\n    post:\n      tags:\n      - kip37-token\n      summary: Pause KIP-37 Token Operations\n      description: \"Pauses the operations of a specified token, such as minting and\\\n        \\ creating tokens.\\n\\nYou can resume the opertations by using [/v1/{contract-address-or-alias/token/unpause/{token-id}](#operation/UnpauseToken).\\n\\\n        \\n##### Sender\\nThe account for sending the transaction.\\n\\nIf the `sender`\\\n        \\ account belongs to a default `account-pool` for either KIP-37 or Wallet,\\\n        \\ you can omit the KRN.\u003cbr /\u003e\\nOtherwise you have to provide the KRN data\\\n        \\ (`x-krn: krn:{chain-id}:wallet:{account-id}:account-pool:{pool name}`) in\\\n        \\ the header.\"\n      operationId: PauseToken\n      parameters:\n      - name: contract-address-or-alias\n        in: path\n        description: Contract address (in hex. with the 0x prefix) or alias\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: token-id\n        in: path\n        description: ID of the token to pause operations\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: x-chain-id\n        in: header\n        description: Klaytn Network Chain ID (1001 or 8217)\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/OperateKip37ContractRequest'\n            examples:\n              Success:\n                value:\n                  sender: 0x2dad235a3b8a87b1fca38ba3d8bb2a0f6a892b58\n              \"400 - Required fields\":\n                value:\n                  sender: \"\"\n              \"400 - Invalid address\":\n                value:\n                  sender: not hex address\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Kip37TransactionStatusResponse'\n              examples:\n                Success:\n                  value:\n                    status: Submitted\n                    transactionHash: 0xb5a0618be3508b3fe22e35aa96063005dd4c557cf040348cc542b0726cc30f7b\n                Success with multisig account:\n                  value:\n                    status: Pending\n                    transactionId: 0x947e5149c93e0bdbd3973e348a4b3557b857d2dee865f407b29f7f02c9b5d22e\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Required fields:\n                  value:\n                    code: 1160050\n                    message: incorrect request; sender\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n                Invalid address:\n                  value:\n                    code: 1164001\n                    message: invalid address; sender\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Not pauser:\n                  value:\n                    code: 1164300\n                    message: insufficient account permissions\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Contract not found:\n                  value:\n                    code: 1164400\n                    message: contract not found\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Already paused:\n                  value:\n                    code: 1164904\n                    message: token already paused\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n  /v1/contract/{contract-address-or-alias}/token/unpause/{token-id}:\n    post:\n      tags:\n      - kip37-token\n      summary: Resume KIP-37 Token Operations\n      description: \"Resumes paused token operations for a given contract.\\n\\n#####\\\n        \\ Sender\\nThe account for sending the transaction. If the `sender` and `owner`\\\n        \\ are different, `sender` must be authorized to transfer the token.  \\n\\n\\\n        If the `sender` account belongs to a default `account-pool` for either KIP-37\\\n        \\ or Wallet, you can omit the KRN.\u003cbr /\u003e\\nOtherwise you have to provide the\\\n        \\ KRN data (`x-krn: krn:{chain-id}:wallet:{account-id}:account-pool:{pool\\\n        \\ name}`) in the header.\"\n      operationId: UnpauseToken\n      parameters:\n      - name: contract-address-or-alias\n        in: path\n        description: Contract address (in hex. with the 0x prefix) or alias\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: token-id\n        in: path\n        description: ID of the token to resume operations\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: x-chain-id\n        in: header\n        description: Klaytn Network Chain ID (1001 or 8217)\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/OperateKip37ContractRequest'\n            examples:\n              Success:\n                value:\n                  sender: 0x2dad235a3b8a87b1fca38ba3d8bb2a0f6a892b58\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Kip37TransactionStatusResponse'\n              examples:\n                Success:\n                  value:\n                    status: Submitted\n                    transactionHash: 0xb5a0618be3508b3fe22e35aa96063005dd4c557cf040348cc542b0726cc30f7b\n                Success with multisig account:\n                  value:\n                    status: Pending\n                    transactionId: 0x947e5149c93e0bdbd3973e348a4b3557b857d2dee865f407b29f7f02c9b5d22e\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Required fields:\n                  value:\n                    code: 1160050\n                    message: incorrect request; sender\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n                Invalid address:\n                  value:\n                    code: 1164001\n                    message: invalid address; sender\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Not pauser:\n                  value:\n                    code: 1164300\n                    message: insufficient account permissions\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Contract not found:\n                  value:\n                    code: 1164400\n                    message: contract not found\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Already unpaused:\n                  value:\n                    code: 1164905\n                    message: token already unpaused\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n  /v1/contract/{contract-address-or-alias}/owner/{owner-address}/token:\n    get:\n      tags:\n      - kip37-token-ownership\n      summary: Get KIP-37 Token List of an Account\n      description: 'Returns a list of tokens owned by a certain account. '\n      operationId: GetTokensByOwner\n      parameters:\n      - name: contract-address-or-alias\n        in: path\n        description: Contract address (in hex. with the 0x prefix) or alias\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: owner-address\n        in: path\n        description: Klaytn account address to query.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: x-chain-id\n        in: header\n        description: Klaytn Network Chain ID (1001 or 8217)\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: size\n        in: query\n        description: Number of items to return\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: integer\n      - name: cursor\n        in: query\n        description: The pointer after which the results will be returned. `cursor`\n          will be included in the result when you request a query of a specific number\n          (`size`) of items.\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Kip37TokenListResponse'\n              examples:\n                Success:\n                  value:\n                    items:\n                    - tokenId: 0x1\n                      owner: 0xb8bb4b109f18eb6f292757aaec623200f1a41369\n                      tokenAddress: 0x2c2382bcca41295495973be1d5a997d21f77b50e\n                      totalSupply: 0xaf298d050e4395d69670b12b7f41000000000000\n                      tokenUri: https://kas-kip37-metadata.klaytn.com/b5ae1fbb-4175-4505-bd6b-8330e1d3c71b\n                      replacedTokenUri: https://kas-kip37-metadata.klaytn.com/b5ae1fbb-4175-4505-bd6b-8330e1d3c71b/0000000000000000000000000000000000000000000000000000000000000001.json\n                      balance: 0x1f\n                      transactionHash: 0x23586a41831bd2044e1793d136ee7b9ac387ea376208dcd87bbded6f7c9032ee\n                      transferFrom: 0xb8bb4b109f18eb6f292757aaec623200f1a41369\n                      transferTo: 0xae02aba56bae1624e2c4f029e3a79308e2a19e98\n                      updatedAt: 1607319007\n                    cursor: \"\"\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid size type:\n                  value:\n                    code: 1160050\n                    message: incorrect request\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n                Out of range size:\n                  value:\n                    code: 1160251\n                    message: its value is out of range; size\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n                Invalid cursor:\n                  value:\n                    code: 1160107\n                    message: incorrect bookmark\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n                Invalid tokenId:\n                  value:\n                    code: 1164002\n                    message: invalid hex format; tokenId\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n                Out of range tokenId:\n                  value:\n                    code: 1160251\n                    message: its value is out of range; tokenId\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Contract not found:\n                  value:\n                    code: 1164400\n                    message: contract not found\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n                Token not found:\n                  value:\n                    code: 1164400\n                    message: contract not found\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n  /v1/deployer/default:\n    get:\n      tags:\n      - kip37-deployer\n      summary: Get Default Account for Contract Deployment\n      description: Get account for deploying and managing contract.\n      operationId: GetDefaultDeployer\n      parameters:\n      - name: x-chain-id\n        in: header\n        description: Klaytn Network Chain ID (1001 or 8217)\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Kip37DeployerResponse'\n              examples:\n                Success:\n                  value:\n                    address: 0xA490cbCB43a64cc4671F436dB9D33eD7A73Da675\n                    krn: krn:1001:kip37:88c1223c-66af-4122-9818-069b2e3c6b30:account-pool:default\ncomponents:\n  schemas:\n    Kip37ContractListResponse:\n      title: Kip37ContractListResponse\n      required:\n      - cursor\n      - items\n      type: object\n      properties:\n        items:\n          type: array\n          items:\n            $ref: '#/components/schemas/Kip37Contract'\n        cursor:\n          type: string\n          description: \"The pointer for the next request, after which the result will\\\n            \\ be returned.\"\n    ErrorResponse:\n      title: ErrorResponse\n      required:\n      - code\n      - message\n      - requestId\n      type: object\n      properties:\n        code:\n          type: integer\n          description: Error Code\n        message:\n          type: string\n          description: Error Message\n        requestId:\n          type: string\n          description: Request ID\n    DeployKip37ContractRequest:\n      title: DeployKip37ContractRequest\n      required:\n      - alias\n      - uri\n      type: object\n      properties:\n        alias:\n          type: string\n          description: Contract alias; KIP-37 API supports the use of alias in place\n            of the contract adddress.\n        uri:\n          type: string\n          description: The URI that stores the contract's metadata\n        options:\n          $ref: '#/components/schemas/Kip37FeePayerOptions'\n      x-examples:\n        example-1:\n          alias: my-first-kip37\n          uri: https://mytoken.com\n    Kip37DeployResponse:\n      title: Kip37DeployResponse\n      required:\n      - status\n      - transactionHash\n      type: object\n      properties:\n        status:\n          type: string\n          description: \"Transaction status (`Submitted`, `Pending`)\"\n        transactionHash:\n          type: string\n          description: Transaction hash\n        options:\n          $ref: '#/components/schemas/Kip37FeePayerOptionsResponse'\n    ImportKip37ContractRequest:\n      title: ImportKip37ContractRequest\n      required:\n      - address\n      - alias\n      - uri\n      type: object\n      properties:\n        alias:\n          type: string\n          description: Contract alias. KIP-37 API supports the use of alias in place\n            of the contract address.\n        uri:\n          type: string\n          description: The URI for storing contract metadata\n        address:\n          type: string\n          description: Contract address\n        options:\n          $ref: '#/components/schemas/Kip37FeePayerOptions'\n    Kip37Contract:\n      title: Kip37Contract\n      required:\n      - address\n      - alias\n      - status\n      - uri\n      type: object\n      properties:\n        address:\n          type: string\n          description: Contract address\n        alias:\n          type: string\n          description: Contract alias\n        status:\n          type: string\n          description: \"Contract status [`init`, `submitted`, `deployed`]\"\n        uri:\n          type: string\n          description: Contract URI\n        options:\n          $ref: '#/components/schemas/Kip37FeePayerOptions'\n    UpdateKip37ContractRequest:\n      title: UpdateKip37ContractRequest\n      type: object\n      properties:\n        options:\n          $ref: '#/components/schemas/Kip37FeePayerOptions'\n    ApproveAllKip37ContractRequest:\n      title: ApproveAllKip37ContractRequest\n      required:\n      - from\n      - to\n      type: object\n      properties:\n        from:\n          type: string\n          description: The Klaytn account address of the owner\n        to:\n          type: string\n          description: The Klaytn account address to be authrorized for token transfer\n        approved:\n          type: boolean\n          description: Authorization granted/cancelled. The default value is `true`.\n    Kip37TransactionStatusResponse:\n      title: Kip37TransactionStatusResponse\n      required:\n      - status\n      type: object\n      properties:\n        status:\n          type: string\n          description: \"Transaction status (`Submitted`, `Pending`)\"\n        transactionHash:\n          type: string\n          description: Transaction hash\n        transactionId:\n          type: string\n          description: Multisig Transaction ID\n    OperateKip37ContractRequest:\n      title: OperateKip37ContractRequest\n      type: object\n      properties:\n        sender:\n          type: string\n          description: Account to execute token operations such as pause and resume.\n            The default value is the account that deployed the contract.\n    Kip37TokenInfoListResponse:\n      title: Kip37TokenInfoListResponse\n      required:\n      - cursor\n      - items\n      type: object\n      properties:\n        items:\n          type: array\n          items:\n            $ref: '#/components/schemas/Kip37TokenInfoListResponseItem'\n        cursor:\n          type: string\n          description: \"The pointer for the next request, after which the result will\\\n            \\ be returned.\"\n    CreateKip37TokenRequest:\n      title: CreateKip37TokenRequest\n      required:\n      - id\n      - initialSupply\n      - uri\n      type: object\n      properties:\n        sender:\n          type: string\n          description: The Klaytn account address to mint the token. The default value\n            is the address that deployed the contract.\n        id:\n          type: string\n          description: ID of the new token; cannot use an existing one\n        initialSupply:\n          type: string\n          description: Initial supply (in hex.)\n        uri:\n          type: string\n          description: Token URI\n    BurnKip37TokenRequest:\n      title: BurnKip37TokenRequest\n      required:\n      - amounts\n      - ids\n      type: object\n      properties:\n        from:\n          type: string\n          description: The owner of the token or the Klaytn account address authorized\n            to burn. The default value is the address that deployed the contract.\n        ids:\n          type: array\n          description: ID of the token to burn.\n          items:\n            type: string\n        amounts:\n          type: array\n          description: Number of the token to burn (in hex.)\n          items:\n            type: string\n    MintKip37TokenRequest:\n      title: MintKip37TokenRequest\n      required:\n      - amounts\n      - ids\n      - to\n      type: object\n      properties:\n        sender:\n          type: string\n          description: The Klaytn account address to mint tokens. The default value\n            is the address that deployed the contract.\n        to:\n          type: string\n          description: The Klaytn account address of the token owner\n        ids:\n          type: array\n          description: Array of the new token IDs\n          items:\n            type: string\n        amounts:\n          type: array\n          description: Array of the new token supplies (in hex.)\n          items:\n            type: string\n    TransferKip37TokenRequest:\n      title: TransferKip37TokenRequest\n      required:\n      - amounts\n      - ids\n      - owner\n      - sender\n      - to\n      type: object\n      properties:\n        sender:\n          type: string\n          description: The Klaytn account address to send the tokens\n        owner:\n          type: string\n          description: The Klaytn account address that owns the tokens\n        to:\n          type: string\n          description: The Klaytn account address to receive the tokens\n        ids:\n          type: array\n          description: Array of IDs of the tokens to send\n          items:\n            type: string\n        amounts:\n          type: array\n          description: Array of the tokens to send (in hex.)\n          items:\n            type: string\n    Kip37TokenListResponse:\n      title: Kip37TokenListResponse\n      required:\n      - cursor\n      - items\n      type: object\n      properties:\n        items:\n          type: array\n          items:\n            $ref: '#/components/schemas/Kip37TokenListResponseItem'\n        cursor:\n          type: string\n          description: \"The pointer for the next request, after which the result will\\\n            \\ be returned.\"\n    Kip37DeployerResponse:\n      title: Kip37DeployerResponse\n      required:\n      - address\n      - krn\n      type: object\n      properties:\n        address:\n          type: string\n          description: The default Klaytn account address for contract management\n        krn:\n          type: string\n          description: KRN of the account\n    Kip37FeePayerOptions:\n      title: Kip37FeePayerOptions\n      type: object\n      properties:\n        enableGlobalFeePayer:\n          type: boolean\n          description: A boolean value of whether KAS Global FeePayer is used. The\n            default value is `true`.\n        userFeePayer:\n          $ref: '#/components/schemas/Kip37FeePayerOptions_userFeePayer'\n    Kip37FeePayerOptionsResponse:\n      title: Kip37FeePayerOptions\n      type: object\n      properties:\n        enableGlobalFeepayer:\n          type: boolean\n          description: A boolean value of whether KAS Global FeePayer is used. The\n            default value is `true`.\n        userFeePayer:\n          $ref: '#/components/schemas/Kip37FeePayerOptions_userFeePayer'\n    Kip37TokenInfoListResponseItem:\n      title: Kip37TokenInfoListResponseItem\n      required:\n      - tokenId\n      - tokenUri\n      - totalSupply\n      type: object\n      properties:\n        tokenId:\n          type: string\n          description: Token ID\n        totalSupply:\n          type: string\n          description: Total token supply (in hex.)\n        tokenUri:\n          type: string\n          description: Token URI\n    Kip37TokenListResponseItem:\n      title: Kip37TokenListResponseItem\n      required:\n      - balance\n      - owner\n      - replacedTokenUri\n      - tokenAddress\n      - tokenId\n      - tokenUri\n      - totalSupply\n      - transactionHash\n      - transferFrom\n      - transferTo\n      - updatedAt\n      type: object\n      properties:\n        tokenId:\n          type: string\n          description: Token ID\n        owner:\n          type: string\n          description: Klaytn account address of the token owner\n        tokenAddress:\n          type: string\n          description: Contract address\n        totalSupply:\n          type: string\n          description: Total token supply (in hex.)\n        tokenUri:\n          type: string\n          description: Token URI\n        replacedTokenUri:\n          type: string\n          description: Changed token URI. The token ID is used as the URI path.\n        balance:\n          type: string\n          description: Balance (in hex.)\n        transactionHash:\n          type: string\n          description: Latest transaction hash (32-byte)\n        transferFrom:\n          type: string\n          description: The Klaytn account address of the sender of the lastest TransferSingle\n            or TransferBatch\n        transferTo:\n          type: string\n          description: The Klaytn account address of the receiver of the lastest TransferSingle\n            or TransferBatch\n        updatedAt:\n          type: string\n          description: Timestamp of the latest change in token data\n    Kip37FeePayerOptions_userFeePayer:\n      type: object\n      properties:\n        krn:\n          type: string\n          description: The feepayer-pool KRN of the FeePayer account\n        address:\n          type: string\n          description: Klaytn FeePayer account address\n  securitySchemes:\n    basic:\n      type: http\n      description: \"The KAS APIs use Basic HTTP Authorization, where the the AccessKey\\\n        \\ ID and the Secret AccessKey, which you can obtain on the KAS Console, are\\\n        \\ used as `username` and `password` respectively. The Authorization header\\\n        \\ is generated using the two values.\\n\\n\u003e **NOTE** \\n\u003e\\n\u003e The Credentials\\\n        \\ of your KAS account grant access to all KAS services, as well as to all\\\n        \\ actions of a Klaytn account generated by Wallet API, such as asset transfers\\\n        \\ and [transaction executions](https://docs.klaytnapi.com/v/en/tutorial/wallet-transaction-api).\\\n        \\ In order to keep your KAS and Klaytn accounts safe, do not expose your KAS\\\n        \\ API Secret Access Key to any third parties and keep it safe.\\n\\n**cURL**\\\n        \\  \\n\\n```\\ncurl --location --request GET 'https://kip7-api.klaytnapi.com/v1/contract'\\\n        \\ \\\\\\n-u ${your_accessKeyId}:${your_secretAccessKey} \\\\\\n--header 'x-chain-id:\\\n        \\ 1001' \\\\\\n--header 'Content-Type: application/json'\\n```\"\n      scheme: basic\nx-tagGroups:\n- name: API\n  tags:\n  - kip37-contract\n  - kip37-token\n  - kip37-token-ownership\n  - kip37-deployer\n- name: Error Codes\n  tags:\n  - err-400\n  - err-403\n  - err-404\n  - err-409\n  - err-503\n",
			"canonicalURL": "/github.com/ground-x/caver-js-ext-kas@69a8c211b93e0231f8a5790eec8571aab719fa23/-/blob/yamls/kip37/2021-09-30-openapi-versioned.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ground-x/caver-js-ext-kas/blob/69a8c211b93e0231f8a5790eec8571aab719fa23/yamls/kip37/2021-09-30-openapi-versioned.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: json: line 1:12065: json: cannot unmarshal number into Go struct field Info.info.version of type string"
}