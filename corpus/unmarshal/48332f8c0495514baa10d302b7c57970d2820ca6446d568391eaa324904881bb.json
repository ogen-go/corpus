{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/codethi/api-breakingnews-new"
		},
		"file": {
			"name": "swagger.json",
			"size": 0,
			"path": "src/swagger.json",
			"byteSize": 17625,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"title\": \"Breaking News API Documentation\",\n    \"description\": \"In this documentation you will be able to consult the API end-points and also test all available routes. Do not forget to register and carry out the authorization.\",\n    \"contact\": {\n      \"email\": \"docencia.thiago@gmail.com\"\n    },\n    \"version\": \"1.0.0\"\n  },\n  \"servers\": [\n\n    {\n      \"url\": \"https://api-breakingnews.onrender.com\",\n      \"description\": \"Render Server\"\n    },\n    {\n      \"url\": \"http://localhost:3000\",\n      \"description\": \"Local Server\"\n    }\n  ],\n  \"paths\": {\n    \"/user/\": {\n      \"post\": {\n        \"summary\": \"Create a new user\",\n        \"description\": \"Route responsible for creating a new user\",\n        \"tags\": [\"Users\"],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              },\n              \"examples\": {\n                \"Users\": {\n                  \"value\": {\n                    \"name\": \"Cacau Lima\",\n                    \"username\": \"cacode\",\n                    \"email\": \"clima@gmail.com\",\n                    \"password\": \"1234567\",\n                    \"avatar\": \"https://i.imgur.com/Ry1cb5M.png\",\n                    \"background\": \"https://images.wallpapersden.com/image/download/triangle-8k-blue-pattern_bGZlbmiUmZqaraWkpJRmbmdlrWZlbWU.jpg\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Not Found\"\n          },\n          \"201\": {\n            \"description\": \"Created\",\n            \"content\": {\n              \"application/json\": {\n                \"schemma\": {\n                  \"type\": \"object\",\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/user\": {\n      \"get\": {\n        \"summary\": \"Search all users\",\n        \"description\": \"Route responsible for fetching all users\",\n        \"tags\": [\"Users\"],\n        \"security\": [{ \"bearerAuth\": [] }],\n        \"responses\": {\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"400\": {\n            \"description\": \"Not Found\"\n          },\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/User\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/user/{id}/\": {\n      \"get\": {\n        \"summary\": \"Search user by id\",\n        \"description\": \"Route responsible for searching for user by id\",\n        \"tags\": [\"Users\"],\n        \"security\": [{ \"bearerAuth\": [] }],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"id\",\n            \"type\": \"string\",\n            \"description\": \"User ID\",\n            \"required\": true\n          }\n        ],\n        \"responses\": {\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"400\": {\n            \"description\": \"Not Found\"\n          },\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/user/{id}\": {\n      \"patch\": {\n        \"summary\": \"Update user by id\",\n        \"description\": \"Route responsible for editing the user by id\",\n        \"tags\": [\"Users\"],\n        \"security\": [{ \"bearerAuth\": [] }],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"id\",\n            \"type\": \"string\",\n            \"description\": \"User ID\",\n            \"required\": true\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              },\n              \"examples\": {\n                \"Users\": {\n                  \"value\": {\n                    \"name\": \"Thiago Lima\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"400\": {\n            \"description\": \"Not Found\"\n          },\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/auth\": {\n      \"post\": {\n        \"summary\": \"Login to Breaking News\",\n        \"description\": \"Route responsible for logging in a registered user\",\n        \"tags\": [\"Auth\"],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              },\n              \"examples\": {\n                \"User\": {\n                  \"value\": {\n                    \"email\": \"clima@gmail.com\",\n                    \"password\": \"1234567\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Not Found\"\n          },\n          \"200\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/news/\": {\n      \"post\": {\n        \"summary\": \"Create a new news\",\n        \"description\": \"Route responsible for creating a new News\",\n        \"tags\": [\"News\"],\n        \"security\": [{ \"bearerAuth\": [] }],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/News\"\n              },\n              \"examples\": {\n                \"News\": {\n                  \"value\": {\n                    \"user\": \"\",\n                    \"banner\": \"https://labs.tadigital.com/wp-content/uploads/2017/07/ES6-banner.jpg\",\n                    \"title\": \"ECMAScript 6\",\n                    \"text\": \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\n                    \"likes\": [],\n                    \"comments\": []\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"400\": {\n            \"description\": \"Not Found\"\n          },\n          \"201\": {\n            \"description\": \"Created\",\n            \"content\": {\n              \"application/json\": {\n                \"schemma\": {\n                  \"type\": \"object\",\n                  \"$ref\": \"#/components/schemas/News\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/news\": {\n      \"get\": {\n        \"summary\": \"Search all posts\",\n        \"description\": \"Route responsible for fetching all posts\",\n        \"tags\": [\"News\"],\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"limit\",\n            \"type\": \"string\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"offset\",\n            \"type\": \"string\"\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Not Found\"\n          },\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/News\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/news/top\": {\n      \"get\": {\n        \"summary\": \"Search top News\",\n        \"description\": \"Route responsible for fetching top News\",\n        \"tags\": [\"News\"],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Not Found\"\n          },\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schemma\": {\n                  \"type\": \"object\",\n                  \"$ref\": \"#/components/schemas/News\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/news/search\": {\n      \"get\": {\n        \"summary\": \"Search News by title\",\n        \"description\": \"Route responsible for fetching the News that match the title sent via query params\",\n        \"tags\": [\"News\"],\n        \"security\": [{ \"bearerAuth\": [] }],\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"title\",\n            \"type\": \"string\",\n            \"required\": true\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Not Found\"\n          },\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/News\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/news/byUser\": {\n      \"get\": {\n        \"summary\": \"Search news by use id\",\n        \"description\": \"Route responsible for fetching news by use id\",\n        \"tags\": [\"News\"],\n        \"security\": [{ \"bearerAuth\": [] }],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Not Found\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/News\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/news/{id}/\": {\n      \"get\": {\n        \"summary\": \"Search News by id\",\n        \"description\": \"Route responsible for fetching News by id\",\n        \"tags\": [\"News\"],\n        \"security\": [{ \"bearerAuth\": [] }],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"id\",\n            \"type\": \"string\",\n            \"description\": \"News ID\",\n            \"required\": true\n          }\n        ],\n        \"responses\": {\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"400\": {\n            \"description\": \"Not Found\"\n          },\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schemma\": {\n                  \"type\": \"object\",\n                  \"$ref\": \"#/components/schemas/News\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/news/{id}\": {\n      \"patch\": {\n        \"summary\": \"Update a News\",\n        \"description\": \"Route responsible for updating a News\",\n        \"tags\": [\"News\"],\n        \"security\": [{ \"bearerAuth\": [] }],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"id\",\n            \"type\": \"string\",\n            \"description\": \"Post ID\",\n            \"required\": true\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/News\"\n              },\n              \"examples\": {\n                \"Post\": {\n                  \"value\": {\n                    \"banner\": \"Edit\",\n                    \"title\": \"Edit\",\n                    \"text\": \"Edit\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"400\": {\n            \"description\": \"Not Found\"\n          },\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schemma\": {\n                  \"type\": \"object\",\n                  \"$ref\": \"#/components/schemas/News\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/news/{id}/\": {\n      \"delete\": {\n        \"summary\": \"Delete a News\",\n        \"description\": \"Route responsible for deleting a News\",\n        \"tags\": [\"News\"],\n        \"security\": [{ \"bearerAuth\": [] }],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"id\",\n            \"type\": \"string\",\n            \"description\": \"News ID\",\n            \"required\": true\n          }\n        ],\n        \"responses\": {\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"400\": {\n            \"description\": \"Not Found\"\n          },\n          \"200\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/news/like/{id}/\": {\n      \"patch\": {\n        \"summary\": \"Like a News\",\n        \"description\": \"Route responsible for liking a News\",\n        \"tags\": [\"News\"],\n        \"security\": [{ \"bearerAuth\": [] }],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"id\",\n            \"type\": \"string\",\n            \"description\": \"User ID\",\n            \"required\": true\n          }\n        ],\n        \"responses\": {\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"400\": {\n            \"description\": \"Not Found\"\n          },\n          \"200\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/news/comment/{id}/\": {\n      \"patch\": {\n        \"summary\": \"Comment on a News\",\n        \"description\": \"Route responsible for commenting on a News\",\n        \"tags\": [\"News\"],\n        \"security\": [{ \"bearerAuth\": [] }],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"id\",\n            \"type\": \"string\",\n            \"description\": \"News ID\",\n            \"required\": true\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Comment\"\n              },\n              \"examples\": {\n                \"Comment\": {\n                  \"value\": {\n                    \"message\": \"Comentário legal\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"400\": {\n            \"description\": \"Not Found\"\n          },\n          \"200\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/news/comment/{idNews}/{idComment}\": {\n      \"patch\": {\n        \"summary\": \"Comment on a News\",\n        \"description\": \"Route responsible for commenting on a News\",\n        \"tags\": [\"News\"],\n        \"security\": [{ \"bearerAuth\": [] }],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"idNews\",\n            \"type\": \"string\",\n            \"description\": \"News ID\",\n            \"required\": true\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"idComment\",\n            \"type\": \"string\",\n            \"description\": \"Comment ID\",\n            \"required\": true\n          }\n        ],\n        \"responses\": {\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"400\": {\n            \"description\": \"Not Found\"\n          },\n          \"200\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"securitySchemes\": {\n      \"bearerAuth\": {\n        \"type\": \"http\",\n        \"scheme\": \"bearer\",\n        \"bearerFormat\": \"JWT\"\n      }\n    },\n    \"schemas\": {\n      \"User\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"username\": {\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"type\": \"string\"\n          },\n          \"avatar\": {\n            \"type\": \"string\"\n          },\n          \"background\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"News\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"user\": {\n            \"type\": \"string\"\n          },\n          \"banner\": {\n            \"type\": \"string\"\n          },\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"text\": {\n            \"type\": \"string\"\n          },\n          \"likes\": {\n            \"type\": \"number\"\n          },\n          \"comments\": {\n            \"type\": \"array\"\n          },\n          \"createdAt\": {\n            \"type\": \"date\"\n          }\n        }\n      },\n      \"Comment\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}\n",
			"canonicalURL": "/github.com/codethi/api-breakingnews-new@874be05279237658d872e29eba0fde299a2db602/-/blob/src/swagger.json",
			"externalURLs": [
				{
					"url": "https://github.com/codethi/api-breakingnews-new/blob/874be05279237658d872e29eba0fde299a2db602/src/swagger.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 477: mapping key \"/news/{id}/\" already defined at line 387"
}