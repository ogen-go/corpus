{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/TUM-Dev/navigatum"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi.yaml",
			"byteSize": 51614,
			"content": "openapi: 3.0.3\ninfo:\n  title: NavigaTUM\n  description: |\n    Navigating around TUM with excellence – An API to search for rooms,\n    buildings and other places\n\n    NavigaTUM is a non-official tool developed by students for students, that aims to help you get around at [TUM](https://tum.de). Feel free to contribute.\n\n    Features:\n\n    - Interactive or RoomFinder-like maps to lookup the position of rooms or buildings\n    - Fast and typo-tolerant search\n    - Support for different room code formats as well as generic names\n\n    All functionality is also available via an API.\n\n    *Note: Not all buildings in NavigaTUM are owned by TUM, but are instead being used by TUM departments.*\n  termsOfService: 'https://nav.tum.sexy/about/privacy'\n  contact:\n    name: TUM-Dev\n    url: 'https://www.tum.app/'\n    email: app@tum.de\n  license:\n    name: GPL v3\n    url: 'https://www.gnu.org/licenses/'\n  version: 1.0.0\nservers:\n  - url: 'https://nav.tum.sexy'\n    description: https\n  - url: 'http://nav.tum.sexy'\n    description: http\npaths:\n  '/api/search':\n    get:\n      operationId: search\n      summary: Search entries\n      description: |\n        This endpoint is designed to support search-as-you-type results.\n\n        Instead of simply returning a list, the search results are returned in a way to provide a richer experience by splitting them up into sections. You might not necessarily need to implement all types of sections, or all sections features (if you just want to show a list). The order of sections is a suggested order to display them, but you may change this as you like.\n\n        Some fields support highlighting the query terms and it uses DC3 (\\x19 or \\u{0019}) and DC1 (\\x17 or \\u{0017}) to mark the beginning/end of a highlighted sequence (See [Wikipedia](https://en.wikipedia.org/wiki/C0_and_C1_control_codes#Modified_C0_control_code_sets)). Some text-renderers will ignore them, but in case you do not want to use them, you might want to remove them from the responses (there is no query parameter for this yet).\n      parameters:\n        - name: q\n          in: query\n          description: |\n            string you want to search for.\n            Note, that the amounts returned can be controlled using the limit\\* paramerters.\n          required: true\n          schema:\n            type: string\n          examples:\n            '5304':\n              summary: A 'misspelled' (according to tumonline) lecture-hall\n              value: mi hs1\n            garching:\n              summary: A misspelled campus\n              value: sfarching\n            fsmpi:\n              summary: A regular room\n              value: 5606.EG.036\n            interims:\n              summary: Lecture halls\n              value: interims\n            sv:\n              summary: \"'common' names\"\n              value: AStA\n            none:\n              summary: All rooms\n              value: ''\n        - name: limit_buildings\n          in: query\n          description: |\n            Maximum number of buildings/sites to return.  \n            Clamped to 0..1000. If this is an problem for you, please open an issue.\n          schema:\n            type: integer\n            default: 5\n            maximum: 1000\n            minimum: 0\n        - name: limit_rooms\n          in: query\n          description: |\n            Maximum number of rooms to return.  \n            Clamped to 0..1000. If this is an problem for you, please open an issue.\n          schema:\n            type: integer\n            default: 10\n            maximum: 1000\n            minimum: 0\n        - name: limit_all\n          in: query\n          description: |\n            Overall maximum number of results. Only visible results are counted (i.e. hidden buildings are not counted).  \n            Clamped to 1..1000. If this is an problem for you, please open an issue.\n          schema:\n            type: integer\n            default: 10\n            maximum: 1000\n            minimum: 1\n      responses:\n        '200':\n          description: The search-result\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SearchResponse'\n              examples:\n                mw:\n                  value:\n                    sections:\n                      - facet: sites_buildings\n                        entries:\n                          - id: mw\n                            type: joined_building\n                            name: \"Maschinenwesen (\\x19MW\\x17)\"\n                            subtext: Gebäudekomplex\n                          - id: '5538'\n                            type: building\n                            name: \"Interims-Tentomax Garching \\x19MW\\x17, HS1/HS2\"\n                            subtext: Gebäude\n                          - id: '5501'\n                            type: building\n                            name: 'Gebäudeteil 1, Institut für Mechatronik'\n                            subtext: Gebäudeteil\n                          - id: '5502'\n                            type: building\n                            name: 'Gebäudeteil 2, Institut für Werkstoffe und Verarbeitung'\n                            subtext: Gebäudeteil\n                          - id: '5503'\n                            type: building\n                            name: 'Gebäudeteil 3, Institut für Produktionstechnik'\n                            subtext: Gebäudeteil\n                        n_visible: 5\n                        nb_hits: 20\n                      - facet: rooms\n                        entries:\n                          - id: 5510.03.002\n                            type: room\n                            name: \"5510.03.002 (\\x19MW\\x17 2001, Empore)\"\n                            subtext: Maschinenwesen (MW)\n                            subtext_bold: 3002@5510\n                          - id: 5510.01.004A\n                            type: room\n                            name: \"5510.01.004A (Exp.-Bühne zu Hörsaal \\x19MW\\x17 2001)\"\n                            subtext: Maschinenwesen (MW)\n                            subtext_bold: 1004a@5510\n                          - id: 5502.01.250\n                            type: room\n                            name: 5502.01.250 (Hörsaal)\n                            subtext: Maschinenwesen (MW)\n                            subtext_bold: 1250@5502\n                          - id: 5502.EG.250\n                            type: room\n                            name: 5502.EG.250 (Ludwig-Prandtl-Hörsaal)\n                            subtext: Maschinenwesen (MW)\n                            subtext_bold: 0250@5502\n                          - id: 5503.EG.350\n                            type: room\n                            name: 5503.EG.350 (Egbert-von-Hoyer-Hörsaal)\n                            subtext: Maschinenwesen (MW)\n                            subtext_bold: 0350@5503\n                        nb_hits: 3655\n                    time_ms: 16\n                nothing:\n                  value:\n                    sections:\n                      - facet: sites_buildings\n                        entries: []\n                        nb_hits: 0\n                      - facet: rooms\n                        entries: []\n                        nb_hits: 0\n                    time_ms: 6\n                interims-2:\n                  value:\n                    sections:\n                      - facet: sites_buildings\n                        entries:\n                          - id: '5416'\n                            type: building\n                            name: \"\\x19Interims\\x17hörsäle II, Jürgen Manchot-Hörsaalgebäude\"\n                            subtext: Gebäude\n                        n_visible: 1\n                        nb_hits: 1\n                      - facet: rooms\n                        entries:\n                          - id: 5416.01.004\n                            type: room\n                            name: \"5416.01.004 (Hörsaal 1 \\\"\\x19Interims\\x17 II\\\")\"\n                            subtext: 'Interimshörsäle II, Jürgen Manchot-Hörsaalgebäude'\n                            subtext_bold: 004@5416\n                          - id: 5416.01.003\n                            type: room\n                            name: \"5416.01.003 (Hörsaal \\x192\\x17, \\\"\\x19Interims\\x17 II\\\")\"\n                            subtext: 'Interimshörsäle II, Jürgen Manchot-Hörsaalgebäude'\n                            subtext_bold: 003@5416\n                          - id: 5620.01.102\n                            type: room\n                            name: \"56\\x192\\x170.01.10\\x192\\x17 (Hörsaal \\x192\\x17, \\\"\\x19Interims\\x17 I\\\")\"\n                            subtext: Interims-Audimax I\n                            subtext_bold: \"10\\x192\\x17@56\\x192\\x170\"\n                          - id: 0598.EG.001\n                            type: room\n                            name: 0598.EG.001 (Tentomax HS Stammgelände)\n                            subtext: Tentomax Stammgelände (Interims HS)\n                            subtext_bold: 0.001@0598\n                          - id: 5416.EG.010\n                            type: room\n                            name: 5416.EG.010 (IT/Audio)\n                            subtext: 'Interimshörsäle II, Jürgen Manchot-Hörsaalgebäude'\n                            subtext_bold: 010@5416\n                        nb_hits: 23\n                    time_ms: 23\n        '400':\n          description: Invalid Request\n          content: {}\n        '404':\n          description: '`search_query` is empty. Since searching for nothing is nonsensical, we dont support this.'\n          content:\n            text/plain:\n              schema:\n                type: string\n                enum:\n                  - Not found\n                example: Not found\n        '414':\n          description: The uri you are trying to request is unreasonably long. Search querys dont have thousands of chars..\n          content: {}\n      tags:\n        - core\n  '/api/get/{id}':\n    get:\n      operationId: get\n      summary: Get entry-details\n      description: |\n        This returns the full data available for the entry (room/building).\n\n        This is more data, that should be supplied once a user clicks on an entry.\n        Preloading this is not an issue on our end, but keep in mind bandwith constraints on your side. The data can be up to 50kB (using gzip) or 200kB unzipped\n        The exact data format is specified in the NavigaTUM-data documentation\n      parameters:\n        - name: id\n          in: path\n          description: string you want to search for\n          required: true\n          schema:\n            type: string\n          examples:\n            root:\n              summary: The root entry of the NavigaTUM-data\n              value: root\n            '5304':\n              summary: A normal building\n              value: '5304'\n            garching:\n              summary: The garching campus\n              value: garching\n            mri:\n              summary: The MRI campus\n              value: garching\n            mi:\n              summary: 'A large, (custom named) building'\n              value: mi\n            mw:\n              summary: 'An other large, (custom named) building'\n              value: mw\n            fsmpi:\n              summary: A regular room\n              value: 5606.EG.036\n            rechnerhalle:\n              summary: A room with custom props added\n              value: 5605.EG.011\n            tb-chemie:\n              summary: A virtual room\n              value: 5401.01.100A\n            humangenetik:\n              summary: A virtual room\n              value: 1543\n      responses:\n        '200':\n          description: More data about the requested building/room\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: '#/components/schemas/RootResponse'\n                  - $ref: '#/components/schemas/DetailsResponse'\n                discriminator:\n                  propertyName: type\n                  mapping:\n                    root: RootResponse\n                    room: DetailsResponse\n                    building: DetailsResponse\n                    joined_building: DetailsResponse\n                    area: DetailsResponse\n                    site: DetailsResponse\n                    campus: DetailsResponse\n              examples:\n                mi-hs-1:\n                  value:\n                    coords:\n                      lat: 48.26244490906312\n                      lon: 11.669122601167174\n                      source: roomfinder\n                      utm:\n                        easting: 698084.5345\n                        northing: 5348914.6199\n                        zone_letter: U\n                        zone_number: 32\n                    id: 5602.EG.001\n                    maps:\n                      default: interactive\n                      roomfinder:\n                        available:\n                          - height: 487\n                            id: rf87\n                            name: FMI Garching BT02 EG\n                            path: webp/rf87.webp\n                            scale: '500'\n                            source: Roomfinder\n                            width: 399\n                            x: 234\n                            'y': 286\n                          - height: 461\n                            id: rf142\n                            name: FMI Übersicht\n                            path: webp/rf142.webp\n                            scale: '2000'\n                            source: Roomfinder\n                            width: 639\n                            x: 499\n                            'y': 189\n                          - height: 480\n                            id: rf80\n                            name: Lageplan Campus Garching\n                            path: webp/rf80.webp\n                            scale: '10000'\n                            source: Roomfinder\n                            width: 676\n                            x: 340\n                            'y': 334\n                          - height: 603\n                            id: rf54\n                            name: München\n                            path: webp/rf54.webp\n                            scale: '200000'\n                            source: Roomfinder\n                            width: 640\n                            x: 444\n                            'y': 35\n                          - height: 515\n                            id: rf156\n                            name: München und Umgebung\n                            path: webp/rf156.webp\n                            scale: '400000'\n                            source: Roomfinder\n                            width: 420\n                            x: 265\n                            'y': 167\n                        default: rf142\n                    name: '5602.EG.001 (MI HS 1, Friedrich L. Bauer Hörsaal)'\n                    parent_names:\n                      - Standorte\n                      - Garching Forschungszentrum\n                      - Fakultät Mathematik \u0026 Informatik (FMI oder MI)\n                      - Hörsaal 1 (BT02)\n                    parents:\n                      - root\n                      - garching\n                      - mi\n                      - '5602'\n                    props:\n                      computed:\n                        - name: Raumkennung\n                          text: 5602.EG.001\n                        - name: Architekten-Name\n                          text: 00.02.001\n                        - name: Adresse\n                          text: 'Boltzmannstr. 3, EG, 85748 Garching b. München'\n                        - name: Sitzplätze\n                          text: '522'\n                    ranking_factors:\n                      rank_combined: 900\n                      rank_type: 100\n                      rank_usage: 900\n                    sources:\n                      base:\n                        - name: TUMOnline\n                          url: 'https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/pl/ui/$ctx/wbRaum.editRaum?pRaumNr=12325'\n                        - name: Roomfinder\n                          url: 'https://portal.mytum.de/displayRoomMap?roomid=00.02.001@5602\u0026disable_decoration=yes'\n                    type: room\n                    type_common_name: Hörsaal\n                    usage:\n                      din_277: NF5.1\n                      din_277_desc: Unterrichtsräume mit festem Gestühl\n                      name: Hörsaal\n                5606.EG.036:\n                  value:\n                    coords:\n                      lat: 48.26217845031176\n                      lon: 11.6686932781057\n                      source: roomfinder\n                      utm:\n                        easting: 698053.7056\n                        northing: 5348883.8982\n                        zone_letter: U\n                        zone_number: 32\n                    id: 5606.EG.036\n                    maps:\n                      default: interactive\n                      roomfinder:\n                        available:\n                          - height: 605\n                            id: rf95\n                            name: FMI Garching BT06 EG\n                            path: webp/rf95.webp\n                            scale: '500'\n                            source: Roomfinder\n                            width: 318\n                            x: 207\n                            'y': 217\n                          - height: 461\n                            id: rf142\n                            name: FMI Übersicht\n                            path: webp/rf142.webp\n                            scale: '2000'\n                            source: Roomfinder\n                            width: 639\n                            x: 443\n                            'y': 242\n                          - height: 480\n                            id: rf80\n                            name: Lageplan Campus Garching\n                            path: webp/rf80.webp\n                            scale: '10000'\n                            source: Roomfinder\n                            width: 676\n                            x: 329\n                            'y': 344\n                          - height: 603\n                            id: rf54\n                            name: München\n                            path: webp/rf54.webp\n                            scale: '200000'\n                            source: Roomfinder\n                            width: 640\n                            x: 444\n                            'y': 36\n                          - height: 515\n                            id: rf156\n                            name: München und Umgebung\n                            path: webp/rf156.webp\n                            scale: '400000'\n                            source: Roomfinder\n                            width: 420\n                            x: 265\n                            'y': 167\n                        default: rf142\n                    name: 5606.EG.036 (MPI Fachschaftsbüro im MI)\n                    parent_names:\n                      - Standorte\n                      - Garching Forschungszentrum\n                      - Fakultät Mathematik \u0026 Informatik (FMI oder MI)\n                      - Finger 06 (BT06)\n                    parents:\n                      - root\n                      - garching\n                      - mi\n                      - '5606'\n                    props:\n                      computed:\n                        - name: Raumkennung\n                          text: 5606.EG.036\n                        - name: Architekten-Name\n                          text: 00.06.036\n                        - name: Adresse\n                          text: 'Boltzmannstr. 3, EG, 85748 Garching b. München'\n                    ranking_factors:\n                      rank_combined: 100\n                      rank_type: 100\n                      rank_usage: 100\n                    sources:\n                      base:\n                        - name: NavigaTUM\n                        - name: TUMOnline\n                          url: 'https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/pl/ui/$ctx/wbRaum.editRaum?pRaumNr=55601'\n                        - name: Roomfinder\n                          url: 'https://portal.mytum.de/displayRoomMap?roomid=00.06.036@5606\u0026disable_decoration=yes'\n                    type: room\n                    type_common_name: Büro\n                    usage:\n                      din_277: NF2.1\n                      din_277_desc: Büroräume\n                      name: Büro\n        '404':\n          description: Invalid input\n          content:\n            text/plain:\n              schema:\n                type: string\n                enum:\n                  - Not found\n                example: Not found\n      tags:\n        - core\n  /api/source_code:\n    get:\n      operationId: source_code\n      summary: Get link to running source-code\n      description: |\n        This endpoint returns a link to the source-code of the repository at the currently running version.\n        This endpoint is not required for modifications (as the license is not AGPL), but strongly encouraged.\n      responses:\n        '200':\n          description: The link to the source-code of the repository at the currently running version\n          content:\n            text/plain:\n              schema:\n                type: string\n                example: 'https://github.com/TUM-Dev/navigatum/tree/eb10c1f4cfbbd66d37f2f9e5e13139c1fde15a4b'\n      tags:\n        - core\n  /api/feedback/get_token:\n    post:\n      operationId: get_token\n      summary: Get a feedback-token\n      description: |\n        ***Do not abuse this endpoint.***\n\n        This returns a token usable for submitting feedback.\n        You should request a token, ***if (and only if) a user is on a feedback page***\n\n        As a rudimentary way of rate-limiting feedback, this endpoint returns a token.\n        To post feedback, you will need this token.\n\n        Tokens gain validity after 10s, and are invalid after 12h of being issued.\n        They are not refreshable, and are only valid for one usage.\n\n        Global Rate-Limiting:\n         - hourly: 20 tokens per hour\n         - daily: 50 tokens per\n      responses:\n        '201':\n          description: Returns a usable token\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TokenResponse'\n        '429':\n          description: |\n            Too many requests.  \n            We are rate-limiting everyone''s requests, please try again later.\n          content: {}\n        '503':\n          description: |\n            Service unavailable.  \n            We have not configured a GitHub Access Token.  \n            This could be because we are experiencing technical difficulties or intentional. Please try again later.\n          content: {}\n      tags:\n        - feedback\n  /api/feedback/feedback:\n    post:\n      operationId: feedback\n      summary: Post feedback\n      description: |\n        ***Do not abuse this endpoint.***\n\n        This posts the actual feedback to github and returns the github link.\n        For this Endpoint to work, you need to generate a token via the `/api/feedback/get_token` endpoint.\n\n        ***Important Note:*** Tokens are only used if we return a 201 Created response. Otherwise, they are still valid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TokenRequest'\n      responses:\n        '201':\n          description: |\n            The feedback has been successfully posted to GitHub.\n            We return the link to the GitHub issue.\n          content:\n            text/plain:\n              schema:\n                type: string\n                example: 'https://github.com/TUM-Dev/navigatum/issues/9'\n        '400':\n          description: If not all fields in the body are present as defined above\n          content: {}\n        '403':\n          description: |\n            Forbidden. Causes are (delivered via the body):\n\n              - `Invalid token`: You have not supplied a token generated via the `gen_token`-Endpoint.\n              - `Token not old enough, please wait`: Tokens are only valid after 10s.\n              - `Token expired`: Tokens are only valid for 12h.\n              - `Token already used`: Tokens are non reusable/refreshable single-use items.\n          content:\n            text/plain:\n              schema:\n                type: string\n                enum:\n                  - Invalid token\n                  - Token not old enough, please wait\n                  - Token expired\n                  - Token already used\n        '422':\n          description: |\n            Unprocessable Entity\n            Subject or body missing or too short.\n          content: {}\n        '451':\n          description: |\n            Unavailable for legal reasons.\n            Using this endpoint without accepting the privacy policy is not allowed.\n            For us to post to GitHub, this has to be true\n          content: {}\n        '500':\n          description: |\n            Internal Server Error.  \n            We have a problem communicating with GitHubs servers. Please try again later.\n          content: {}\n        '503':\n          description: |\n            Service unavailable.  \n            We have not configured a GitHub Access Token.  \n            This could be because we are experiencing technical difficulties or intentional. Please try again later.\n          content: {}\n      tags:\n        - feedback\n  '/cdn/{size}/{id}_{counter}.webp':\n    get:\n      operationId: img_cdn\n      summary: Get title images\n      description: |\n        This endpoint is designed to fetch the images, that are described by the `/api/get/{id}`-endpoint.\n        You HAVE to get the proper attribution from that endpoint and use it.\n      parameters:\n        - name: size\n          in: path\n          description: |\n            size of the resource you want\n\n            | name   | default                                                               |\n            |--------|-----------------------------------------------------------------------|\n            | lg     | max 4k, aspect ratio untouched                                        |\n            | md     | max 1920px, aspect ratio untouched                                    |\n            | sm     | max 1024px, aspect ratio untouched                                    |\n            | thumb  | 256x256, cropped to fit. Usually a center-crop, but sometimes offset. |\n            | header | 512x210, cropped to fit. Usually a center-crop, but sometimes offset. |\n          required: true\n          schema:\n            type: string\n            enum:\n              - lg\n              - md\n              - sm\n              - thumb\n              - header\n        - name: id\n          in: path\n          description: id of the recource you want an image for\n          required: true\n          schema:\n            type: string\n          examples:\n            '5304':\n              summary: A normal building\n              value: '5304'\n            garching:\n              summary: A campus\n              value: garching\n            mi:\n              summary: 'A large, (custom named) building'\n              value: mi\n            fsmpi:\n              summary: A regular room\n              value: 5606.EG.036\n        - name: counter\n          in: path\n          description: counter of the image you want.\n          required: true\n          schema:\n            type: integer\n            format: int32\n            minimum: 0\n          example: 0\n      responses:\n        '200':\n          description: The image you requested\n          content:\n            image/webp:\n              schema:\n                type: string\n                format: binary\n              example: 'https://nav.tum.sexy/cdn/thumb/mi_0.webp'\n        '400':\n          description: |\n            Bad Request.    \n            The request was malformed.  \n            Please check your request and try again.\n          content: {}\n        '404':\n          description: Requested Resource Not Found\n          content:\n            text/plain:\n              schema:\n                type: string\n                enum:\n                  - Not found\n                example: Not found\n        '414':\n          description: 'The uri you are trying to request is unreasonably long. neither ids, nor any other parameter has more than 30 chars..'\n          content: {}\n      tags:\n        - cdn\n  '/cdn/maps/{source}/{id}.webp':\n    get:\n      operationId: maps_cdn\n      summary: Get title images\n      description: |\n        This endpoint is designed to fetch the images, that are described by the `/api/get/{id}`-endpoint.\n        You HAVE to get the proper attribution from that endpoint and use it.\n      parameters:\n        - name: source\n          in: path\n          description: source of the resource you want\n          required: true\n          schema:\n            type: string\n            enum:\n              - overlay\n              - roomfinder\n        - name: id\n          in: path\n          description: id of the map you want\n          required: true\n          schema:\n            type: string\n            minLength: 1\n          examples:\n            rf142:\n              summary: MI main overview (roomfinder only)\n              value: rf142\n            mi_0:\n              summary: MI main overview (overlay only)\n              value: mi_0\n            garching:\n              summary: StudiTUM Garching (roomfinder + overview)\n              value: '5532_2'\n      responses:\n        '200':\n          description: The map you requested\n          content:\n            image/webp:\n              schema:\n                type: string\n                format: binary\n              example: 'https://nav.tum.sexy/cdn/maps/roomfinder/rf142.webp'\n        '400':\n          description: |\n            Bad Request.    \n            The request was malformed.  \n            Please check your request and try again.\n          content: {}\n        '404':\n          description: Requested Resource Not Found\n          content:\n            text/plain:\n              schema:\n                type: string\n                enum:\n                  - Not found\n                example: Not found\n        '414':\n          description: 'The uri you are trying to request is unreasonably long. neither ids, nor any other parameter has more than 30 chars..'\n          content: {}\n      tags:\n        - cdn\n  /api/health:\n    get:\n      operationId: api-health\n      summary: API healthcheck\n      description: |\n        If this endpoint does not return 200, the API is experiencing a catastrophic outage. Should never happen.\n      responses:\n        '200':\n          description: Ok\n          content:\n            text/plain:\n              schema:\n                type: string\n                enum:\n                  - healthy\n        '503':\n          description: Service Unavailable\n          content: {}\n      tags:\n        - health\n  /cdn/health:\n    get:\n      operationId: cdn-health\n      summary: CDN healthcheck\n      description: |\n        If this endpoint does not return 200, the CDN is experiencing a catastrophic outage. Should never happen.\n      responses:\n        '200':\n          description: Ok\n          content:\n            text/plain:\n              schema:\n                type: string\n                enum:\n                  - healthy\n        '503':\n          description: Service Unavailable\n          content: {}\n      tags:\n        - health\n  /health:\n    get:\n      operationId: web-health\n      summary: Website healthcheck\n      description: |\n        If this endpoint does not return 200, the Website is experiencing a catastrophic outage. Should never happen.\n      responses:\n        '200':\n          description: Ok\n          content:\n            text/plain:\n              schema:\n                type: string\n                enum:\n                  - healthy\n        '503':\n          description: Service Unavailable\n          content: {}\n      tags:\n        - health\ncomponents:\n  schemas:\n    Props:\n      description: Data for the info-card table\n      type: object\n      properties:\n        computed:\n          type: array\n          items:\n            $ref: '#/components/schemas/Prop'\n      required:\n        - computed\n    Prop:\n      type: object\n      properties:\n        name:\n          type: string\n          example: Raumkennung\n        text:\n          type: string\n          example: 5602.EG.001\n      required:\n        - name\n        - text\n    ImageInfo:\n      description: 'The information you need to request Images from the /cdn/{size}/{id}_{counter}.webp endpoint'\n      type: object\n      properties:\n        name:\n          description: 'The name of the image file. consists of {building_id}_{image_id}.webp, where image_id is a counter starting at 0'\n          type: string\n          example: mi_0.webp\n        author:\n          $ref: '#/components/schemas/PossibleURLRef'\n        source:\n          $ref: '#/components/schemas/PossibleURLRef'\n        license:\n          $ref: '#/components/schemas/PossibleURLRef'\n        meta:\n          $ref: '#/components/schemas/ImageMetadata'\n        sections:\n          discriminator:\n            propertyName: facet\n            mapping:\n              sites_buildings: SitesBuildings\n              rooms: Rooms\n          oneOf:\n            - $ref: '#/components/schemas/SitesBuildings'\n            - $ref: '#/components/schemas/Rooms'\n      required:\n        - name\n        - author\n        - source\n        - license\n    ImageMetadata:\n      description: |\n        Aditional data about the images. Does not have to be displayed.\n        All fields are optional.\n      type: object\n      properties:\n        date:\n          description: optional date description\n          type: string\n        location:\n          description: optional location description\n          type: string\n        geo:\n          description: 'optional coordinates in lat,lon'\n          type: string\n        image_url:\n          description: |\n            optional in contrast to source this points to the image itself.\n            You should not use this to request the images, as they are not scaled.\n          type: string\n        caption:\n          description: optional caption\n          type: string\n        headline:\n          description: optional headline\n          type: string\n        event:\n          description: optional the event this image was taken at\n          type: string\n        faculty:\n          description: optional the event this image is about\n          type: string\n        building:\n          description: optional the building this image is about\n          type: string\n        department:\n          description: optional the department this image is about\n          type: string\n    PossibleURLRef:\n      description: 'Additional information you should include, if you decide to display the image for legal and attribution reasons'\n      type: object\n      properties:\n        text:\n          description: 'The text to display'\n          type: string\n        url:\n          description: 'The URL to the referenced information. Always either null or a valid URL'\n          nullable: true\n          type: string\n          pattern: .+\n      required:\n        - text\n    Coordinate:\n      type: object\n      properties:\n        lat:\n          description: The latitude\n          type: number\n          format: double\n          example: 48.26244490906312\n          maximum: 90\n          minimum: -90\n        lon:\n          description: The latitude\n          type: number\n          format: double\n          example: 48.26244490906312\n          maximum: 180\n          minimum: -180\n        source:\n          description: The source of the Coordinates\n          type: string\n          example: roomfinder\n        utm:\n          type: object\n          properties:\n            easting:\n              description: The easting\n              type: number\n              format: double\n              example: 698288.4681410069\n            northing:\n              description: The northing\n              type: number\n              format: double\n              example: 5349538.736274569\n            zone:\n              description: The zone\n              type: string\n              example: U\n              pattern: '[C-HJ-NP-X]'\n            zone_number:\n              description: The zone number\n              type: integer\n              format: int32\n              example: 32\n              maximum: 60\n              minimum: 1\n      required:\n        - lat\n        - lon\n        - source\n    Maps:\n      type: object\n      properties:\n        default:\n          description: The type of the Map that should be shown by default\n          type: string\n          example: interactive\n          enum:\n            - interactive\n            - roomfinder\n        roomfinder:\n          $ref: '#/components/schemas/RoomfinderMap'\n        overlays:\n          description: |\n            null would mean no overlay maps are displayed by default.\n            For rooms you should add a warning that no floor map is available for this room\n          allOf:\n            - nullable: true\n            - $ref: '#/components/schemas/OverlayMap'\n      required:\n        - default\n    RoomfinderMap:\n      type: object\n      properties:\n        default:\n          description: 'The id of the map, that should be shown as a default'\n          type: string\n          example: rf142\n        available:\n          type: array\n          items:\n            $ref: '#/components/schemas/RoomfinderMapEntry'\n      required:\n        - default\n        - available\n    RoomfinderMapEntry:\n      type: object\n      properties:\n        name:\n          description: The human-readable name of the map\n          type: string\n          example: FMI Übersicht\n        id:\n          description: The machine-readable name of the map\n          type: string\n          example: rf142\n        scale:\n          description: 'Scale of the map. 2000 means 1:2000.'\n          type: string\n          example: '2000'\n          pattern: '[0-9]+'\n        height:\n          description: Map image x dimensions\n          type: integer\n          format: int32\n          example: 461\n          minimum: 0\n        width:\n          description: Map image y dimensions\n          type: integer\n          format: int32\n          example: 639\n          minimum: 0\n        x:\n          description: x Position on map\n          type: integer\n          format: int32\n          example: 499\n          minimum: 0\n        y:\n          description: y Position on map image\n          type: integer\n          format: int32\n          example: 189\n          minimum: 0\n      required:\n        - name\n        - id\n        - scale\n        - height\n        - width\n        - x\n        - y\n    OverlayMap:\n      type: object\n      properties:\n        default:\n          description: |\n            The floor-id of the map, that should be shown as a default.  \n            null:\n            - We suggest, you dont show a map by default.\n            - This is only the case for buildings or other such entities and not for rooms, if we know where they are and a map exists\n          type: integer\n          example: 0\n          nullable: true\n        available:\n          type: array\n          items:\n            $ref: '#/components/schemas/OverlayMapEntry'\n      required:\n        - default\n        - available\n    OverlayMapEntry:\n      type: object\n      properties:\n        id:\n          description: |\n            The machine-readable floor-id of the map.  \n            Should start with 0 for the ground level (defined by the main entrance) and increase or decrease.\n            It is not guaranteed that numbers are consecutive or that `1` corresponds to level `01`, because buildings sometimes have more complicated layouts. They are however always in the correct (physical) order.\n          type: integer\n          example: 0\n        floor:\n          description: |\n            Floor of the Map.\n            Should be used for display to the user in selectors.  \n            Matches the floor part of the TUMOnline roomcode.\n          type: string\n          example: 'EG'\n        name:\n          description: The human-readable name of the map\n          type: string\n          example: MI Gebäude (EG)\n        file:\n          description: The filename of the map\n          type: string\n          example: webp/rf95.webp\n        coordinates:\n          description: Coordinates are four [lon, lat] pairs, for the top left, top right, bottom right, bottom left image corners.\n          type: array\n          items:\n            type: array\n            items:\n              type: number\n            minItems: 2\n            maxItems: 2\n          minItems: 4\n          maxItems: 4\n      required:\n        - id\n        - floor\n        - name\n        - file\n        - coordinates\n    Rooms:\n      type: object\n      properties:\n        facet:\n          description: These indicate the type of item this represents\n          type: string\n          example: rooms\n          enum:\n            - rooms\n        nb_hits:\n          description: The estimated (not exact) number of hits for that query\n          type: integer\n          format: int64\n          minimum: 0\n        entries:\n          type: array\n          items:\n            $ref: '#/components/schemas/RoomEntry'\n      required:\n        - nb_hits\n        - facet\n        - entries\n    SitesBuildings:\n      type: object\n      properties:\n        facet:\n          description: These indicate the type of item this represents\n          type: string\n          example: sites_buildings\n          enum:\n            - sites_buildings\n        nb_hits:\n          description: The estimated (not exact) number of hits for that query\n          type: integer\n          format: int64\n          minimum: 0\n        entries:\n          type: array\n          items:\n            $ref: '#/components/schemas/SitesBuildingsEntry'\n        n_visible:\n          description: |\n            A recommendation how many of the entries should be displayed by default.  \n            The number is usually from 0-5.  \n            More results might be displayed when clicking \"expand\".  \n            If this field is not present, then all entries are displayed.\n          type: integer\n          format: int64\n          minimum: 0\n      required:\n        - nb_hits\n        - facet\n        - entries\n    RoomEntry:\n      allOf:\n        - $ref: '#/components/schemas/SitesBuildingsEntry'\n        - type: object\n          required:\n            - subtext_bold\n          properties:\n            subtext_bold:\n              description: 'Subtext to show below the search (by default in bold and after the non-bold subtext). Usually contains the arch-id of the room, which is another common room id format, and supports highlighting.'\n              type: string\n            parsed_id:\n              description: 'This is an optional feature, that is only supported for some rooms. It might be displayed instead or before the name, to show that a different room id format has matched, that was probably used. See the image below for an example. It will be cropped to a maximum length to not take too much space in UIs. Supports highlighting.'\n              type: string\n    SitesBuildingsEntry:\n      type: object\n      properties:\n        id:\n          description: The id of the room\n          type: string\n        type:\n          description: the type of the room/site/building\n          type: string\n        name:\n          description: Subtext to show below the search result. Usually contains the context of where this rooms is located in. Currently not highlighted.\n          type: string\n        subtext:\n          description: Subtext to show below the search result. Usually contains the context of where this rooms is located in. Currently not highlighted.\n          type: string\n      required:\n        - id\n        - type\n        - name\n        - subtext\n    TokenResponse:\n      type: object\n      properties:\n        token:\n          description: 'The token, that can be used to generate feedback'\n          type: string\n          example: '999999999999999'\n          maxLength: 15\n          minLength: 15\n          pattern: '[0-9]+'\n      required:\n        - token\n      x-examples:\n        token:\n          token: '999999999999999'\n    SearchResponse:\n      type: object\n      properties:\n        sections:\n          type: array\n          items:\n            oneOf:\n              - $ref: '#/components/schemas/SitesBuildings'\n              - $ref: '#/components/schemas/Rooms'\n            discriminator:\n              propertyName: facet\n              mapping:\n                sites_buildings: SitesBuildings\n                rooms: Rooms\n        time_ms:\n          description: |\n            Time the search took in the server side, not including network delay\n            Maximum as by awc timeout. other timeouts (browser, your client) may be smaller\n            Expected average is 10..50 for uncached, regular requests\n          type: integer\n          format: int32\n          example: 42\n          maximum: 75000\n          minimum: 0\n      required:\n        - sections\n        - time_ms\n    DetailsResponse:\n      allOf:\n        - $ref: '#/components/schemas/BaseDetailsResponse'\n        - type: object\n          properties:\n            id:\n              description: 'The id, that was requested'\n              type: string\n            type:\n              description: The type of the entry\n              type: string\n              enum:\n                - room\n                - building\n                - joined_building\n                - area\n                - site\n                - campus\n            coords:\n              $ref: '#/components/schemas/Coordinate'\n            maps:\n              $ref: '#/components/schemas/Maps'\n          required:\n            - id\n            - type\n            - coords\n            - maps\n    RootResponse:\n      allOf:\n        - $ref: '#/components/schemas/BaseDetailsResponse'\n        - type: object\n          properties:\n            id:\n              description: 'The id, that was requested'\n              type: string\n              enum:\n                - root\n            type:\n              description: The type of the entry\n              type: string\n              enum:\n                - root\n          required:\n            - id\n            - type\n    BaseDetailsResponse:\n      type: object\n      properties:\n        type_common_name:\n          description: The type of the entry in a human-readable form\n          type: string\n        name:\n          description: The name of the entry in a human-readable form\n          type: string\n          example: '5602.EG.001 (MI HS 1, Friedrich L. Bauer Hörsaal)'\n        parents:\n          type: array\n          items:\n            type: string\n            description: The ids of the parents. They are ordered as they would appear in a Breadcrumb menu. See parent_names for their actual ids.\n          example:\n            - root\n            - garching\n        parent_names:\n          type: array\n          items:\n            type: string\n            description: The ids of the parents. They are ordered as they would appear in a Breadcrumb menu. See parents for their actual ids.\n            example:\n              - Standorte\n              - Garching Forschungszentrum\n        props:\n          $ref: '#/components/schemas/Props'\n        imgs:\n          type: array\n          items:\n            $ref: '#/components/schemas/ImageInfo'\n        ranking_factors:\n          $ref: '#/components/schemas/RankingFactors'\n      required:\n        - type_common_name\n        - name\n        - parents\n        - parent_names\n        - props\n        - ranking_factors\n    RankingFactors:\n      type: object\n      properties:\n        rank_combined:\n          description: How much the combined ranking is important\n          type: integer\n          format: int32\n        rank_type:\n          description: How much the type is important\n          type: integer\n          format: int32\n        rank_usage:\n          description: How much the usage is important\n          type: integer\n          format: int32\n        rank_boost:\n          description:  |\n            Automatic boost or suppression based on entry properties:\n            - numbers of buildings for a `campus`/`area`/`site`,\n            - numbers of seats for a `room`,\n            - number of regular rooms for a `building`/`joined_building`\n          type: integer\n          format: int32\n        rank_custom:\n          description: Custom boost or suppression factor defined by us\n          type: integer\n          format: int32\n      required:\n        - rank_combined\n        - rank_type\n        - rank_usage\n    TokenRequest:\n      type: object\n      properties:\n        token:\n          description: 'The token, that can be used to generate feedback'\n          type: string\n          example: '999999999999999'\n          maxLength: 15\n          minLength: 15\n          pattern: '[0-9]+'\n        category:\n          description: | \n            The category of the feedback.  \n            Enum attribute is softly enforced: Any value not listed below will be replaced by \"other\"\n          type: string\n          example: bug\n          enum:\n            - general\n            - bug\n            - feature\n            - search\n            - entry\n            - other\n        subject:\n          description: The subject/title of the feedback\n          type: string\n          example: A catchy title\n          maxLength: 512\n          minLength: 4\n        body:\n          description: The body/description of the feedback\n          type: string\n          example: A clear description what happened where and how we should improve it\n          maxLength: 1048576\n          minLength: 4\n        privacy_checked:\n          description: |\n            Whether the user has checked the privacy-checkbox.\n            We are posting the feedback publicly on GitHub (not a EU-Company). You have to also include such a checkmark.\n            For inspiration on how to do this, see our website.\n          type: boolean\n          example: true\n        delete_issue_requested:\n          description: |\n            Whether the user has requested to delete the issue.\n            If the user has requested to delete the issue, we will delete it from GitHub after processing it\n            If the user has not requested to delete the issue, we will not delete it from GitHub and it will remain as a closed issue.\n          type: boolean\n          example: true\n      required:\n        - token\n        - category\n        - subject\n        - body\n        - privacy_checked\n        - delete_issue_requested\ntags:\n  - name: core\n    description: the API to access/search for room information\n  - name: cdn\n    description: Images for some of the rooms\n  - name: feedback\n    description: the API to access/search for room information\n  - name: health\n    description: 'These endpoints are used to check the health of the API, website and cdn'\nexternalDocs:\n  description: Visit our Github Page for more in-depth documentation\n  url: 'https://github.com/TUM-Dev/navigatum'\n"
		}
	},
	"Error": "unmarshal: json: cannot unmarshal bool into Go struct field Schema.components.schemas.required of type string"
}