{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "npm/openapi-to-postmanv2"
		},
		"file": {
			"name": "emptyParameterSpec.yaml",
			"size": 0,
			"path": "test/data/31CollectionTransactions/validate30Scenarios/emptyParameterSpec.yaml",
			"byteSize": 1735,
			"content": "openapi: \"3.1.0\"\ninfo:\n  version: 1.0.0\n  title: Swagger Petstore\n  license:\n    name: MIT\nservers:\n  - url: http://petstore.swagger.io/v1\npaths:\n  /pets:\n    get:\n      summary: List all pets\n      operationId: listPets\n      tags:\n        - pets\n      parameters:\n        # below param is empty for testing\n        - \n        - name: limit\n          in: query\n          description: How many items to return at one time (max 100)\n          required: false\n          schema:\n            type: \n              - integer\n            format: int32\n      responses:\n        '200':\n          description: A paged array of pets\n          headers:\n            x-next:\n              description: A link to the next page of responses\n              schema:\n                type: \n                  - string\n          content:\n            application/json:    \n              schema:\n                $ref: \"#/components/schemas/Pets\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\ncomponents:\n  schemas:\n    Pet:\n      type: \n        - object\n      required:\n        - id\n        - name\n      properties:\n        id:\n          type: \n            - integer\n          format: int64\n        name:\n          type: \n            - string\n        tag:\n          type: \n            - string\n    Pets:\n      type: \n        - array\n      items:\n        $ref: \"#/components/schemas/Pet\"\n    Error:\n      type: \n        - object\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: \n            - integer\n          format: int32\n        message:\n          type: \n            - string"
		}
	},
	"Error": "unmarshal: json: line 1:27: callback: json: cannot unmarshal array into Go struct field Schema.type of type string"
}