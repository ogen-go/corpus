{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/cortezaproject/corteza-server"
		},
		"file": {
			"name": "system.yaml",
			"size": 0,
			"path": "docs/system.yaml",
			"byteSize": 52100,
			"content": "openapi: 3.0.0\ninfo:\n  title: Corteza system API\n  description: Corteza system REST API definition\n  version: 2021.3\n  contact:\n    email: contact@mail.com\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\npaths:\n  /system/auth/impersonate:\n    post:\n      tags:\n        - Authentication\n      summary: Impersonate a user\n      responses:\n        '200':\n          description: OK\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_0\n                userID:\n                  type: string\n                  description: ID of the impersonated user\n              required:\n                - userID\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_0\n  /system/auth/clients/:\n    get:\n      tags:\n        - Authentication clients\n      summary: List clients\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: query\n          name: handle\n          description: Client handle\n          required: false\n          schema: \u0026ref_1\n            type: string\n        - in: query\n          name: deleted\n          description: 'Exclude (0, default), include (1) or return only (2) deleted roles'\n          required: false\n          schema: \u0026ref_2\n            type: string\n        - in: query\n          name: labels\n          description: Labels\n          required: false\n          schema: *ref_1\n        - in: query\n          name: limit\n          description: Limit\n          required: false\n          schema: *ref_2\n        - in: query\n          name: pageCursor\n          description: Page cursor\n          required: false\n          schema: *ref_1\n        - in: query\n          name: sort\n          description: Sort items\n          required: false\n          schema: *ref_1\n    post:\n      tags:\n        - Authentication clients\n      summary: Create client\n      responses:\n        '200':\n          description: OK\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_3\n                handle:\n                  type: string\n                  description: Client handle\n                meta:\n                  type: string\n                  description: Additional info\n                validGrant:\n                  type: string\n                  description: Valid grants (authorization_code\n                redirectURI:\n                  type: string\n                  description: Space delimited list of redirect URIs\n                scope:\n                  type: string\n                  description: Space delimited list of scopes\n                trusted:\n                  type: boolean\n                  description: Is client trusted (skip authorization)\n                enabled:\n                  type: boolean\n                  description: Is client enabled\n                validFrom:\n                  type: string\n                  format: date-time\n                  description: Date and time from when client becomes valid\n                expiresAt:\n                  type: string\n                  format: date-time\n                  description: Date and time from client is no logner valid\n                security:\n                  type: string\n                  description: Security settings\n                labels:\n                  type: string\n                  description: Labels\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_3\n  '/system/auth/clients/{clientID}':\n    put:\n      tags:\n        - Authentication clients\n      summary: Update user details\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: clientID\n          description: Client ID\n          required: true\n          schema: \u0026ref_5\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_4\n                handle:\n                  type: string\n                  description: Client handle\n                meta:\n                  type: string\n                  description: Additional info\n                validGrant:\n                  type: string\n                  description: Valid grants (authorization_code\n                redirectURI:\n                  type: string\n                  description: Space delimited list of redirect URIs\n                scope:\n                  type: string\n                  description: Space delimited list of scopes\n                trusted:\n                  type: boolean\n                  description: Is client trusted (skip authorization)\n                enabled:\n                  type: boolean\n                  description: Is client enabled\n                validFrom:\n                  type: string\n                  format: date-time\n                  description: Date and time from when client becomes valid\n                expiresAt:\n                  type: string\n                  format: date-time\n                  description: Date and time from client is no logner valid\n                security:\n                  type: string\n                  description: Security settings\n                labels:\n                  type: string\n                  description: Labels\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_4\n    get:\n      tags:\n        - Authentication clients\n      summary: Read client details\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: clientID\n          description: Client ID\n          required: true\n          schema: *ref_5\n    delete:\n      tags:\n        - Authentication clients\n      summary: Remove client\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: clientID\n          description: Client ID\n          required: true\n          schema: *ref_5\n  '/system/auth/clients/{clientID}/undelete':\n    post:\n      tags:\n        - Authentication clients\n      summary: Undelete client\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: clientID\n          description: Client ID\n          required: true\n          schema: *ref_5\n  '/system/auth/clients/{clientID}/secret':\n    post:\n      tags:\n        - Authentication clients\n      summary: Regenerate client's secret\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: clientID\n          description: Client ID\n          required: true\n          schema: *ref_5\n    get:\n      tags:\n        - Authentication clients\n      summary: Exposes client's secret\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: clientID\n          description: Client ID\n          required: true\n          schema: *ref_5\n  /system/settings/:\n    get:\n      tags:\n        - Settings\n      summary: List settings\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: query\n          name: prefix\n          description: Key prefix\n          required: false\n          schema: *ref_1\n    patch:\n      tags:\n        - Settings\n      summary: Update settings\n      responses:\n        '200':\n          description: OK\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_6\n                values:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      name:\n                        type: string\n                      value:\n                        type: string\n                  description: \u003e-\n                    Array of new settings: `[{ name: ..., value: ... }]`. Omit\n                    value to remove setting\n              required:\n                - values\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_6\n  '/system/settings/{key}':\n    get:\n      tags:\n        - Settings\n      summary: Get a value for a key\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: key\n          description: Setting key\n          required: true\n          schema: *ref_1\n        - in: query\n          name: ownerID\n          description: Owner ID\n          required: false\n          schema: *ref_5\n    post:\n      tags:\n        - Settings\n      summary: Set value for specific setting\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: key\n          description: Key\n          required: true\n          schema: *ref_1\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_7\n                upload:\n                  type: string\n                  format: binary\n                  description: File to upload\n                ownerID:\n                  type: string\n                  description: Owner ID\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_7\n  /system/settings/current:\n    get:\n      tags:\n        - Settings\n      summary: Current compose settings\n      responses:\n        '200':\n          description: OK\n  /system/subscription/:\n    get:\n      tags:\n        - Subscription\n      summary: Returns current subscription status\n      responses:\n        '200':\n          description: OK\n  /system/roles/:\n    get:\n      tags:\n        - Roles\n      summary: List roles\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: query\n          name: query\n          description: Search query\n          required: false\n          schema: *ref_1\n        - in: query\n          name: deleted\n          description: 'Exclude (0, default), include (1) or return only (2) deleted roles'\n          required: false\n          schema: *ref_2\n        - in: query\n          name: archived\n          description: 'Exclude (0, default), include (1) or return only (2) achived roles'\n          required: false\n          schema: *ref_2\n        - in: query\n          name: labels\n          description: Labels\n          required: false\n          schema: *ref_1\n        - in: query\n          name: limit\n          description: Limit\n          required: false\n          schema: *ref_2\n        - in: query\n          name: pageCursor\n          description: Page cursor\n          required: false\n          schema: *ref_1\n        - in: query\n          name: sort\n          description: Sort items\n          required: false\n          schema: *ref_1\n    post:\n      tags:\n        - Roles\n      summary: Update role details\n      responses:\n        '200':\n          description: OK\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_8\n                name:\n                  type: string\n                  description: Name of Role\n                handle:\n                  type: string\n                  description: Handle for Role\n                members:\n                  type: array\n                  items: *ref_1\n                  description: Role member IDs\n                labels:\n                  type: string\n                  description: Labels\n              required:\n                - name\n                - handle\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_8\n  '/system/roles/{roleID}':\n    put:\n      tags:\n        - Roles\n      summary: Update role details\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: roleID\n          description: Role ID\n          required: true\n          schema: *ref_5\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_9\n                name:\n                  type: string\n                  description: Name of Role\n                handle:\n                  type: string\n                  description: Handle for Role\n                members:\n                  type: array\n                  items: *ref_1\n                  description: Role member IDs\n                labels:\n                  type: string\n                  description: Labels\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_9\n    get:\n      tags:\n        - Roles\n      summary: Read role details and memberships\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: roleID\n          description: Role ID\n          required: true\n          schema: *ref_5\n    delete:\n      tags:\n        - Roles\n      summary: Remove role\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: roleID\n          description: Role ID\n          required: true\n          schema: *ref_5\n  '/system/roles/{roleID}/archive':\n    post:\n      tags:\n        - Roles\n      summary: Archive role\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: roleID\n          description: Role ID\n          required: true\n          schema: *ref_5\n  '/system/roles/{roleID}/unarchive':\n    post:\n      tags:\n        - Roles\n      summary: Unarchive role\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: roleID\n          description: Role ID\n          required: true\n          schema: *ref_5\n  '/system/roles/{roleID}/undelete':\n    post:\n      tags:\n        - Roles\n      summary: Undelete role\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: roleID\n          description: Role ID\n          required: true\n          schema: *ref_5\n  '/system/roles/{roleID}/move':\n    post:\n      tags:\n        - Roles\n      summary: Move role to different organisation\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: roleID\n          description: Role ID\n          required: true\n          schema: *ref_5\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_10\n                organisationID:\n                  type: string\n                  description: Role ID\n              required:\n                - organisationID\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_10\n  '/system/roles/{roleID}/merge':\n    post:\n      tags:\n        - Roles\n      summary: Merge one role into another\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: roleID\n          description: Source Role ID\n          required: true\n          schema: *ref_5\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_11\n                destination:\n                  type: string\n                  description: Destination Role ID\n              required:\n                - destination\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_11\n  '/system/roles/{roleID}/members':\n    get:\n      tags:\n        - Roles\n      summary: Returns all role members\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: roleID\n          description: Source Role ID\n          required: true\n          schema: *ref_5\n  '/system/roles/{roleID}/member/{userID}':\n    post:\n      tags:\n        - Roles\n      summary: Add member to a role\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: roleID\n          description: Source Role ID\n          required: true\n          schema: *ref_5\n        - in: path\n          name: userID\n          description: User ID\n          required: true\n          schema: *ref_5\n    delete:\n      tags:\n        - Roles\n      summary: Remove member from a role\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: roleID\n          description: Source Role ID\n          required: true\n          schema: *ref_5\n        - in: path\n          name: userID\n          description: User ID\n          required: true\n          schema: *ref_5\n  '/system/roles/{roleID}/trigger':\n    post:\n      tags:\n        - Roles\n      summary: 'Fire system:role trigger'\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: roleID\n          description: ID\n          required: true\n          schema: *ref_5\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_12\n                script:\n                  type: string\n                  description: Script to execute\n              required:\n                - script\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_12\n  /system/users/:\n    get:\n      tags:\n        - Users\n      summary: Search users (Directory)\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: query\n          name: userID\n          description: Filter by user ID\n          required: false\n          schema:\n            type: array\n            items: *ref_1\n        - in: query\n          name: roleID\n          description: Filter by role membership\n          required: false\n          schema:\n            type: array\n            items: *ref_1\n        - in: query\n          name: query\n          description: Search query to match against users\n          required: false\n          schema: *ref_1\n        - in: query\n          name: username\n          description: Search username to match against users\n          required: false\n          schema: *ref_1\n        - in: query\n          name: email\n          description: Search email to match against users\n          required: false\n          schema: *ref_1\n        - in: query\n          name: handle\n          description: Search handle to match against users\n          required: false\n          schema: *ref_1\n        - in: query\n          name: kind\n          description: 'Kind (normal, bot)'\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: incDeleted\n          description: '[Deprecated] Include deleted users (requires ''access'' permission)'\n          required: false\n          schema: \u0026ref_13\n            type: boolean\n        - in: query\n          name: incSuspended\n          description: '[Deprecated] Include suspended users'\n          required: false\n          schema: *ref_13\n        - in: query\n          name: deleted\n          description: 'Exclude (0, default), include (1) or return only (2) deleted users'\n          required: false\n          schema: *ref_2\n        - in: query\n          name: suspended\n          description: 'Exclude (0, default), include (1) or return only (2) suspended users'\n          required: false\n          schema: *ref_2\n        - in: query\n          name: labels\n          description: Labels\n          required: false\n          schema: *ref_1\n        - in: query\n          name: limit\n          description: Limit\n          required: false\n          schema: *ref_2\n        - in: query\n          name: pageCursor\n          description: Page cursor\n          required: false\n          schema: *ref_1\n        - in: query\n          name: sort\n          description: Sort items\n          required: false\n          schema: *ref_1\n    post:\n      tags:\n        - Users\n      summary: Create user\n      responses:\n        '200':\n          description: OK\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_14\n                email:\n                  type: string\n                  description: Email\n                name:\n                  type: string\n                  description: Name\n                handle:\n                  type: string\n                  description: Handle\n                kind:\n                  type: string\n                  description: 'Kind (normal, bot)'\n                labels:\n                  type: string\n                  description: Labels\n              required:\n                - email\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_14\n  '/system/users/{userID}':\n    put:\n      tags:\n        - Users\n      summary: Update user details\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: userID\n          description: User ID\n          required: true\n          schema: *ref_5\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_15\n                email:\n                  type: string\n                  description: Email\n                name:\n                  type: string\n                  description: Name\n                handle:\n                  type: string\n                  description: Handle\n                kind:\n                  type: string\n                  description: 'Kind (normal, bot)'\n                labels:\n                  type: string\n                  description: Labels\n              required:\n                - email\n                - name\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_15\n    get:\n      tags:\n        - Users\n      summary: Read user details\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: userID\n          description: User ID\n          required: true\n          schema: *ref_5\n    delete:\n      tags:\n        - Users\n      summary: Remove user\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: userID\n          description: User ID\n          required: true\n          schema: *ref_5\n  '/system/users/{userID}/suspend':\n    post:\n      tags:\n        - Users\n      summary: Suspend user\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: userID\n          description: User ID\n          required: true\n          schema: *ref_5\n  '/system/users/{userID}/unsuspend':\n    post:\n      tags:\n        - Users\n      summary: Unsuspend user\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: userID\n          description: User ID\n          required: true\n          schema: *ref_5\n  '/system/users/{userID}/undelete':\n    post:\n      tags:\n        - Users\n      summary: Undelete user\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: userID\n          description: User ID\n          required: true\n          schema: *ref_5\n  '/system/users/{userID}/password':\n    post:\n      tags:\n        - Users\n      summary: Set's or changes user's password\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: userID\n          description: User ID\n          required: true\n          schema: *ref_5\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_16\n                password:\n                  type: string\n                  format: password\n                  description: New password\n              required:\n                - password\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_16\n  '/system/users/{userID}/membership':\n    get:\n      tags:\n        - Users\n      summary: Add member to a role\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: userID\n          description: User ID\n          required: true\n          schema: *ref_5\n  '/system/users/{userID}/membership/{roleID}':\n    post:\n      tags:\n        - Users\n      summary: Add role to a user\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: roleID\n          description: Role ID\n          required: true\n          schema: *ref_5\n        - in: path\n          name: userID\n          description: User ID\n          required: true\n          schema: *ref_5\n    delete:\n      tags:\n        - Users\n      summary: Remove role from a user\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: roleID\n          description: Role ID\n          required: true\n          schema: *ref_5\n        - in: path\n          name: userID\n          description: User ID\n          required: true\n          schema: *ref_5\n  '/system/users/{userID}/trigger':\n    post:\n      tags:\n        - Users\n      summary: 'Fire system:user trigger'\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: userID\n          description: ID\n          required: true\n          schema: *ref_5\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_17\n                script:\n                  type: string\n                  description: Script to execute\n              required:\n                - script\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_17\n  /system/application/:\n    get:\n      tags:\n        - Applications\n      summary: List applications\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: query\n          name: name\n          description: Application name\n          required: false\n          schema: *ref_1\n        - in: query\n          name: query\n          description: Filter applications\n          required: false\n          schema: *ref_1\n        - in: query\n          name: deleted\n          description: 'Exclude (0, default), include (1) or return only (2) deleted roles'\n          required: false\n          schema: *ref_2\n        - in: query\n          name: labels\n          description: Labels\n          required: false\n          schema: *ref_1\n        - in: query\n          name: limit\n          description: Limit\n          required: false\n          schema: *ref_2\n        - in: query\n          name: pageCursor\n          description: Page cursor\n          required: false\n          schema: *ref_1\n        - in: query\n          name: sort\n          description: Sort items\n          required: false\n          schema: *ref_1\n    post:\n      tags:\n        - Applications\n      summary: Create application\n      responses:\n        '200':\n          description: OK\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_18\n                name:\n                  type: string\n                  description: Application name\n                enabled:\n                  type: boolean\n                  description: Enabled\n                unify:\n                  type: string\n                  format: json\n                  description: Unify properties\n                config:\n                  type: string\n                  format: json\n                  description: Arbitrary JSON holding application configuration\n                labels:\n                  type: string\n                  description: Labels\n              required:\n                - name\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_18\n  '/system/application/{applicationID}':\n    put:\n      tags:\n        - Applications\n      summary: Update user details\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: applicationID\n          description: Application ID\n          required: true\n          schema: *ref_5\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_19\n                name:\n                  type: string\n                  description: Email\n                enabled:\n                  type: boolean\n                  description: Enabled\n                unify:\n                  type: string\n                  format: json\n                  description: Unify properties\n                config:\n                  type: string\n                  format: json\n                  description: Arbitrary JSON holding application configuration\n                labels:\n                  type: string\n                  description: Labels\n              required:\n                - name\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_19\n    get:\n      tags:\n        - Applications\n      summary: Read application details\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: applicationID\n          description: Application ID\n          required: true\n          schema: *ref_5\n    delete:\n      tags:\n        - Applications\n      summary: Remove application\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: applicationID\n          description: Application ID\n          required: true\n          schema: *ref_5\n  '/system/application/{applicationID}/undelete':\n    post:\n      tags:\n        - Applications\n      summary: Undelete application\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: applicationID\n          description: Application ID\n          required: true\n          schema: *ref_5\n  '/system/application/{applicationID}/trigger':\n    post:\n      tags:\n        - Applications\n      summary: 'Fire system:application trigger'\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: applicationID\n          description: ID\n          required: true\n          schema: *ref_5\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_20\n                script:\n                  type: string\n                  description: Script to execute\n              required:\n                - script\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_20\n  /system/permissions/:\n    get:\n      tags:\n        - Permissions\n      summary: Retrieve defined permissions\n      responses:\n        '200':\n          description: OK\n  /system/permissions/effective:\n    get:\n      tags:\n        - Permissions\n      summary: Effective rules for current user\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: query\n          name: resource\n          description: Show only rules for a specific resource\n          required: false\n          schema: *ref_1\n  '/system/permissions/{roleID}/rules':\n    get:\n      tags:\n        - Permissions\n      summary: Retrieve role permissions\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: roleID\n          description: Role ID\n          required: true\n          schema: *ref_5\n    delete:\n      tags:\n        - Permissions\n      summary: Remove all defined role permissions\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: roleID\n          description: Role ID\n          required: true\n          schema: *ref_5\n    patch:\n      tags:\n        - Permissions\n      summary: Update permission settings\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: roleID\n          description: Role ID\n          required: true\n          schema: *ref_5\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_21\n                rules:\n                  type: string\n                  description: List of permission rules to set\n              required:\n                - rules\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_21\n  /system/reminder/:\n    get:\n      tags:\n        - Reminders\n      summary: List/read reminders\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: query\n          name: reminderID\n          description: Filter by reminder ID\n          required: false\n          schema:\n            type: array\n            items: *ref_1\n        - in: query\n          name: resource\n          description: Only reminders of a specific resource\n          required: false\n          schema: *ref_1\n        - in: query\n          name: assignedTo\n          description: Only reminders for a given user\n          required: false\n          schema: *ref_5\n        - in: query\n          name: scheduledFrom\n          description: Only reminders from this time (included)\n          required: false\n          schema: \u0026ref_22\n            type: string\n            format: date-time\n        - in: query\n          name: scheduledUntil\n          description: Only reminders up to this time (included)\n          required: false\n          schema: *ref_22\n        - in: query\n          name: scheduledOnly\n          description: Only scheduled reminders\n          required: false\n          schema: *ref_13\n        - in: query\n          name: excludeDismissed\n          description: Filter out dismissed reminders\n          required: false\n          schema: *ref_13\n        - in: query\n          name: limit\n          description: Limit\n          required: false\n          schema: *ref_2\n        - in: query\n          name: pageCursor\n          description: Page cursor\n          required: false\n          schema: *ref_1\n        - in: query\n          name: sort\n          description: Sort items\n          required: false\n          schema: *ref_1\n    post:\n      tags:\n        - Reminders\n      summary: Add new reminder\n      responses:\n        '200':\n          description: OK\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_23\n                resource:\n                  type: string\n                  description: Resource\n                assignedTo:\n                  type: string\n                  description: Assigned To\n                payload:\n                  type: string\n                  format: json\n                  description: Payload\n                remindAt:\n                  type: string\n                  format: date-time\n                  description: Remind At\n              required:\n                - resource\n                - assignedTo\n                - payload\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_23\n  '/system/reminder/{reminderID}':\n    put:\n      tags:\n        - Reminders\n      summary: Update reminder\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: reminderID\n          description: Reminder ID\n          required: true\n          schema: *ref_5\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_24\n                resource:\n                  type: string\n                  description: Resource\n                assignedTo:\n                  type: string\n                  description: Assigned To\n                payload:\n                  type: string\n                  format: json\n                  description: Payload\n                remindAt:\n                  type: string\n                  format: date-time\n                  description: Remind At\n              required:\n                - resource\n                - assignedTo\n                - payload\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_24\n    get:\n      tags:\n        - Reminders\n      summary: Read reminder by ID\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: reminderID\n          description: Reminder ID\n          required: true\n          schema: *ref_5\n    delete:\n      tags:\n        - Reminders\n      summary: Delete reminder\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: reminderID\n          description: Reminder ID\n          required: true\n          schema: *ref_5\n  '/system/reminder/{reminderID}/dismiss':\n    patch:\n      tags:\n        - Reminders\n      summary: Dismiss reminder\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: reminderID\n          description: reminder ID\n          required: true\n          schema: *ref_5\n  '/system/reminder/{reminderID}/snooze':\n    patch:\n      tags:\n        - Reminders\n      summary: Snooze reminder\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: reminderID\n          description: reminder ID\n          required: true\n          schema: *ref_5\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_25\n                remindAt:\n                  type: string\n                  format: date-time\n                  description: New Remind At Time\n              required:\n                - remindAt\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_25\n  '/system/attachment/{kind}/{attachmentID}':\n    get:\n      tags:\n        - Attachments\n      summary: Attachment details\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: kind\n          description: Kind\n          required: true\n          schema: *ref_1\n        - in: path\n          name: attachmentID\n          description: Attachment ID\n          required: true\n          schema: *ref_5\n        - in: query\n          name: sign\n          description: Signature\n          required: false\n          schema: *ref_1\n        - in: query\n          name: userID\n          description: User ID\n          required: false\n          schema: *ref_5\n    delete:\n      tags:\n        - Attachments\n      summary: Delete attachment\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: kind\n          description: Kind\n          required: true\n          schema: *ref_1\n        - in: path\n          name: attachmentID\n          description: Attachment ID\n          required: true\n          schema: *ref_5\n        - in: query\n          name: sign\n          description: Signature\n          required: false\n          schema: *ref_1\n        - in: query\n          name: userID\n          description: User ID\n          required: false\n          schema: *ref_5\n  '/system/attachment/{kind}/{attachmentID}/original/{name}':\n    get:\n      tags:\n        - Attachments\n      summary: Serves attached file\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: kind\n          description: Kind\n          required: true\n          schema: *ref_1\n        - in: path\n          name: attachmentID\n          description: Attachment ID\n          required: true\n          schema: *ref_5\n        - in: path\n          name: name\n          description: File name\n          required: true\n          schema: *ref_1\n        - in: query\n          name: sign\n          description: Signature\n          required: false\n          schema: *ref_1\n        - in: query\n          name: userID\n          description: User ID\n          required: false\n          schema: *ref_5\n        - in: query\n          name: download\n          description: Force file download\n          required: false\n          schema: *ref_13\n  '/system/attachment/{kind}/{attachmentID}/preview.{ext}':\n    get:\n      tags:\n        - Attachments\n      summary: Serves preview of an attached file\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: kind\n          description: Kind\n          required: true\n          schema: *ref_1\n        - in: path\n          name: attachmentID\n          description: Attachment ID\n          required: true\n          schema: *ref_5\n        - in: path\n          name: ext\n          description: Preview extension/format\n          required: true\n          schema: *ref_1\n        - in: query\n          name: sign\n          description: Signature\n          required: false\n          schema: *ref_1\n        - in: query\n          name: userID\n          description: User ID\n          required: false\n          schema: *ref_5\n  /system/template/:\n    get:\n      tags:\n        - Template\n      summary: List templates\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: query\n          name: handle\n          description: Handle\n          required: false\n          schema: *ref_1\n        - in: query\n          name: type\n          description: Type\n          required: false\n          schema: *ref_1\n        - in: query\n          name: ownerID\n          description: OwnerID\n          required: false\n          schema: *ref_5\n        - in: query\n          name: partial\n          description: Show partial templates\n          required: false\n          schema: *ref_13\n        - in: query\n          name: deleted\n          description: \u003e-\n            Exclude (0, default), include (1) or return only (2) deleted\n            templates\n          required: false\n          schema: *ref_2\n        - in: query\n          name: labels\n          description: Labels\n          required: false\n          schema: *ref_1\n        - in: query\n          name: limit\n          description: Limit\n          required: false\n          schema: *ref_2\n        - in: query\n          name: pageCursor\n          description: Page cursor\n          required: false\n          schema: *ref_1\n        - in: query\n          name: sort\n          description: Sort items\n          required: false\n          schema: *ref_1\n    post:\n      tags:\n        - Template\n      summary: Create template\n      responses:\n        '200':\n          description: OK\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_26\n                handle:\n                  type: string\n                  description: Handle\n                language:\n                  type: string\n                  description: Language\n                type:\n                  type: string\n                  description: Type\n                partial:\n                  type: boolean\n                  description: Partial\n                meta:\n                  type: string\n                  description: Meta\n                template:\n                  type: string\n                  description: Template\n                ownerID:\n                  type: string\n                  description: OwnerID\n                labels:\n                  type: string\n                  description: Labels\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_26\n  '/system/template/{templateID}':\n    get:\n      tags:\n        - Template\n      summary: Read template\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: templateID\n          description: ID\n          required: true\n          schema: *ref_5\n    put:\n      tags:\n        - Template\n      summary: Update template\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: templateID\n          description: ID\n          required: true\n          schema: *ref_5\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_27\n                handle:\n                  type: string\n                  description: Handle\n                language:\n                  type: string\n                  description: Language\n                type:\n                  type: string\n                  description: Type\n                partial:\n                  type: boolean\n                  description: Partial\n                meta:\n                  type: string\n                  description: Meta\n                template:\n                  type: string\n                  description: Template\n                ownerID:\n                  type: string\n                  description: OwnerID\n                labels:\n                  type: string\n                  description: Labels\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_27\n    delete:\n      tags:\n        - Template\n      summary: Delete template\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: templateID\n          description: ID\n          required: true\n          schema: *ref_5\n  '/system/template/{templateID}/undelete':\n    post:\n      tags:\n        - Template\n      summary: Undelete template\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: templateID\n          description: Template ID\n          required: true\n          schema: *ref_5\n  '/system/template/{templateID}/render/{filename}.{ext}':\n    post:\n      tags:\n        - Template\n      summary: Render template\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: templateID\n          description: Render template to use\n          required: true\n          schema: *ref_5\n        - in: path\n          name: filename\n          description: Filename to use\n          required: true\n          schema: *ref_1\n        - in: path\n          name: ext\n          description: Export format\n          required: true\n          schema: *ref_1\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_28\n                variables:\n                  type: string\n                  format: json\n                  description: Variables defined by import file\n                options:\n                  type: string\n                  format: json\n                  description: Rendering options\n              required:\n                - variables\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_28\n  /system/stats/:\n    get:\n      tags:\n        - Statistics\n      summary: List system statistics\n      responses:\n        '200':\n          description: OK\n  /system/automation/:\n    get:\n      tags:\n        - System automation scripts\n      summary: List all available automation scripts for system resources\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: query\n          name: resourceTypePrefixes\n          description: Filter by resource prefix\n          required: false\n          schema:\n            type: array\n            items: *ref_1\n        - in: query\n          name: resourceTypes\n          description: Filter by resource type\n          required: false\n          schema:\n            type: array\n            items: *ref_1\n        - in: query\n          name: eventTypes\n          description: Filter by event type\n          required: false\n          schema:\n            type: array\n            items: *ref_1\n        - in: query\n          name: excludeInvalid\n          description: Exclude scripts that cannot be used (errors)\n          required: false\n          schema: *ref_13\n        - in: query\n          name: excludeClientScripts\n          description: Do not include client scripts\n          required: false\n          schema: *ref_13\n        - in: query\n          name: excludeServerScripts\n          description: Do not include server scripts\n          required: false\n          schema: *ref_13\n  '/system/automation/{bundle}-{type}.{ext}':\n    get:\n      tags:\n        - System automation scripts\n      summary: Serves client scripts bundle\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: bundle\n          description: Name of the bundle\n          required: true\n          schema: *ref_1\n        - in: path\n          name: type\n          description: Bundle type\n          required: true\n          schema: *ref_1\n        - in: path\n          name: ext\n          description: Bundle extension\n          required: true\n          schema: *ref_1\n  /system/automation/trigger:\n    post:\n      tags:\n        - System automation scripts\n      summary: Triggers execution of a specific script on a system service level\n      responses:\n        '200':\n          description: OK\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_29\n                script:\n                  type: string\n                  description: Script to execute\n              required:\n                - script\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_29\n  /system/actionlog/:\n    get:\n      tags:\n        - Action log\n      summary: Action log events\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: query\n          name: from\n          description: From\n          required: false\n          schema: *ref_22\n        - in: query\n          name: to\n          description: To\n          required: false\n          schema: *ref_22\n        - in: query\n          name: beforeActionID\n          description: Entries before specified action ID\n          required: false\n          schema: *ref_5\n        - in: query\n          name: resource\n          description: Resource\n          required: false\n          schema: *ref_1\n        - in: query\n          name: action\n          description: Action\n          required: false\n          schema: *ref_1\n        - in: query\n          name: actorID\n          description: Filter by one or more actors\n          required: false\n          schema:\n            type: array\n            items: *ref_1\n        - in: query\n          name: limit\n          description: Limit\n          required: false\n          schema: *ref_2\n"
		}
	},
	"Error": "unmarshal: json: cannot unmarshal number into Go struct field Info.info.version of type string"
}