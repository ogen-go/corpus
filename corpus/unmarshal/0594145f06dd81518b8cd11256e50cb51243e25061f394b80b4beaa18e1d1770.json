{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/cebe/yii2-openapi"
		},
		"file": {
			"name": "blog_jsonapi.yaml",
			"size": 0,
			"path": "tests/specs/blog_jsonapi.yaml",
			"byteSize": 25190,
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: 3.0.0\n  title: Simple schema followed Json-Api\n  license:\n    name: MIT\nservers:\n  - url: http://blog.dummy.io/v3\npaths:\n  /me:\n    get:\n      operationId: show current user\n      responses:\n        '200':\n          $ref: '#/components/responses/UserResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n  /user/{username}:\n    parameters:\n      - name: username\n        in: path\n        required: true\n        schema:\n          type: string\n    get:\n      operationId: find user by username\n      responses:\n        '200':\n          $ref: '#/components/responses/UserResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n  /auth/password/recovery:\n    get:\n      operationId: requestPasswordRecovery\n      responses:\n        '200':\n            description: Null Response\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n    post:\n      operationId: requestRecoveryForEmail\n      requestBody:\n        content:\n          application/vnd.api+json:\n            schema:\n              type: object\n              properties:\n                data:\n                  type: object\n                  required:\n                     - email\n                     - type\n                  properties:\n                    type:\n                      type: string\n                    email:\n                      type: string\n                      format: email\n      responses:\n        '200':\n           description: Null response\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n  /auth/password/confirm-recovery/{token}:\n    parameters:\n      - name: token\n        in: path\n        required: true\n        schema:\n          type: string\n    get:\n      operationId: confirmPasswordRecovery\n      responses:\n        '200':\n          description: Null Response\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n  /auth/new-password:\n    post:\n      operationId: setNewPassword\n      requestBody:\n        content:\n          application/vnd.api+json:\n            schema:\n              type: object\n              properties:\n                data:\n                  type: object\n                  required:\n                    - password\n                    - password-compare\n                  properties:\n                    password:\n                      type: string\n                    password-compare:\n                      type: string\n      responses:\n        '200':\n          description: Null Response\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n  /categories:\n    get:\n      summary: Show categoreies with pagination\n      operationId: listCategories\n      parameters:\n        - $ref: '#/components/parameters/Sort'\n        - $ref: '#/components/parameters/Filter'\n        - $ref: '#/components/parameters/Fields'\n        - $ref: '#/components/parameters/Page'\n      responses:\n        '200':\n          $ref: '#/components/responses/CategoryListResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n    post:\n      summary: Create a category\n      operationId: createCategory\n      responses:\n        '201':\n          $ref: '#/components/responses/CategoryResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n\n  /categories/{categoryId}/posts:\n    parameters:\n      - name: categoryId\n        in: path\n        required: true\n        description: The id of the category to retrieve\n        schema:\n          type: integer\n    get:\n      summary: Show posts from category with pagination\n      operationId: listPostsForCategory\n      parameters:\n        - $ref: '#/components/parameters/Sort'\n        - $ref: '#/components/parameters/Filter'\n        - $ref: '#/components/parameters/Fields'\n        - $ref: '#/components/parameters/Page'\n      responses:\n        '200':\n          $ref: '#/components/responses/PostListResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n    post:\n      summary: Create post for category\n      operationId: createPostForCategory\n      responses:\n        '201':\n           $ref: '#/components/responses/PostCreatedResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n  /posts:\n    get:\n      summary: Show posts with pagination\n      operationId: listPosts\n      parameters:\n        - $ref: '#/components/parameters/Sort'\n        - $ref: '#/components/parameters/Filter'\n        - $ref: '#/components/parameters/Fields'\n        - $ref: '#/components/parameters/Page'\n      responses:\n        '200':\n           $ref: '#/components/responses/PostListResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n    post:\n      summary: Create a post\n      operationId: createPost\n      responses:\n        '201':\n          $ref: '#/components/responses/PostResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n  /posts/{id}:\n    parameters:\n      - name: id\n        in: path\n        required: true\n        description: The id of the post to retrieve\n        schema:\n          type: integer\n    get:\n      summary: Info for a specific post\n      operationId: showPostById\n      parameters:\n        - $ref: '#/components/parameters/Fields'\n        - $ref: '#/components/parameters/Includes'\n      tags:\n        - posts\n      responses:\n        '200':\n          $ref: '#/components/responses/PostResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n    patch:\n      summary: Update post\n      operationId: updatePostbyId\n      requestBody:\n        $ref: '#/components/requestBodies/PostRequest'\n      responses:\n        '200':\n          $ref: '#/components/responses/PostResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n    delete:\n      summary: DeletePost\n      operationId: deletePostById\n      responses:\n        '200':\n          description: Post deleted\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n  /posts/{id}/upload/cover:\n    parameters:\n      - name: id\n        in: path\n        required: true\n        description: The id of the post to retrieve\n        schema:\n          type: integer\n    put:\n      summary: upload cover\n      description: https://www.drupal.org/project/drupal/issues/2958554,https://github.com/json-api/json-api/issues/246\n      operationId: UploadPostCover\n      requestBody:\n        content:\n          application/octet-stream:\n            schema:\n              type: string\n              format: binary\n      responses:\n        '200':\n          description: Images uploaded\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n\n  /posts/{id}/relationships/author:\n    parameters:\n      - name: id\n        in: path\n        required: true\n        description: The id of the post to retrieve\n        schema:\n          type: integer\n    get:\n      summary: Show post's author id\n      operationId: showPostAuthor\n      responses:\n        '200':\n          $ref: '#/components/responses/UserResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n  /post/{postId}/comments/{id}:\n    parameters:\n      - name: id\n        in: path\n        required: true\n        description: The id of comments to retrieve\n        schema:\n          type: integer\n      - name: postId\n        in: path\n        required: true\n        description: The id of the post to retrieve\n        schema:\n          type: integer\n    get:\n      summary: Show comment by post\n      operationId: showPostComment\n      responses:\n        '200':\n          $ref: '#/components/responses/CommentResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n\n  /posts/{id}/relationships/comments:\n    parameters:\n      - name: id\n        in: path\n        required: true\n        description: The id of the post to retrieve\n        schema:\n          type: integer\n    get:\n      summary: Show post's comments ids\n      operationId: showPostComments\n      responses:\n        '200':\n          $ref: '#/components/responses/CommentRelationResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n  /posts/{id}/relationships/tags:\n    parameters:\n      - name: id\n        in: path\n        required: true\n        description: The id of the post to retrieve\n        schema:\n          type: integer\n    get:\n      summary: Show post's tags\n      operationId: showPostTags\n      responses:\n        '200':\n          $ref: '#/components/responses/TagRelationResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n    patch:\n      summary: Update post tags\n      operationId: updatePostTags\n      requestBody:\n        content:\n          application/vnd.api+json:\n            schema:\n              type: object\n              properties:\n                data:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/_TagResource'\n      responses:\n        '200':\n          $ref: '#/components/responses/TagRelationResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\ncomponents:\n  parameters:\n      Sort:\n        name: sort\n        in: query\n        description: abstract query sort param\n        style: form\n        explode: false\n        schema:\n          type: array\n      Filter:\n        name: filter\n        in: query\n        description: abstract query filter param\n        style: deepObject\n        explode: true\n        allowReserved: true\n        schema:\n          type: object\n      Fields:\n        name: fields\n        in: query\n        description: abstract query fields param\n        style: deepObject\n        explode: true\n        allowReserved: true\n        schema:\n          type: object\n      Includes:\n        name: include\n        in: query\n        description: abstract query include param\n        style: form\n        explode: false\n        schema:\n          type: object\n      Page:\n        name: page\n        in: query\n        description: query-based page switcher\n        style: deepObject\n        explode: true\n        schema:\n          type: object\n          properties:\n            size:\n              description: Number if items per page\n              type: integer\n            number:\n              description: Current page number\n              type: integer\n\n  schemas:\n    _Links:\n      type: object\n      additionalProperties:\n        oneOf:\n            - type: string\n            - type: object\n              properties:\n                href:\n                  type: string\n                meta:\n                  type: object\n    _Meta:\n      type: object\n      description: Abstract meta data\n    _MetaPagination:\n      type: object\n      description: Meta Data for pagination\n      properties:\n        pagination:\n          type: object\n          properties:\n            total:\n              type: integer\n            count:\n              type: integer\n            per_page:\n              type: integer\n            current_page:\n              type: integer\n            total_pages:\n              type: integer\n    _ModelError:\n      type: object\n      description: Yii-like model errors\n    _ErrorItem:\n      type: object\n      properties:\n        id:\n          type: string\n        title:\n          type: string\n        code:\n          type: string\n        status:\n          type: string\n        details:\n          type: string\n        links:\n          type: object\n        source:\n          type: object\n    _Errors:\n      type: array\n      items:\n        anyOf:\n          - $ref: '#/components/schemas/_ErrorItem'\n          - $ref: '#/components/schemas/_ModelError'\n    User:\n      description: The User\n      x-table: v2_users\n      x-indexes:\n        - unique:login\n        - unique:email\n      required:\n        - id\n        - login\n        - email\n        - password\n      properties:\n        id:\n          type: integer\n          format: int64\n          readOnly: True\n        login:\n          type: string\n        email:\n          type: string\n        password:\n          type: string\n          format: password\n          writeOnly: true\n    _UserResource:\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 1\n        type:\n          type: string\n        attributes:\n          $ref: '#/components/schemas/User'\n        links:\n          $ref: '#/components/schemas/_Links'\n        relationships:\n          type: object\n    Users:\n      type: array\n      items:\n        $ref: \"#/components/schemas/User\"\n    Category:\n      x-table: v2_categories\n      description: Category of posts\n      required:\n        - id\n        - title\n      properties:\n        id:\n          type: integer\n          format: int64\n          readOnly: True\n        title:\n          type: string\n          x-db-unique: true\n          maxLength: 100\n        posts:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Post\"\n    _CategoryResource:\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 1\n        type:\n          type: string\n        attributes:\n          $ref: '#/components/schemas/Category'\n        relationships:\n          type: object\n          properties:\n            posts:\n              type: object\n    Categories:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Category\"\n    Post:\n      x-table: v2_posts\n      x-indexes:\n        - 'unique:title'\n      description: A blog post (uid used as pk for test purposes)\n      required:\n        - id\n        - title\n        - category\n        - author\n      properties:\n        id:\n          type: integer\n          format: int64\n          readOnly: True\n        title:\n          type: string\n          x-db-type: VARCHAR\n          maxLength: 255\n        category:\n          $ref: \"#/components/schemas/Category\"\n        author:\n          $ref: \"#/components/schemas/User\"\n        comments:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Comment\"\n        post_tags:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Post_tag\"\n    _PostResource:\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 1\n        type:\n          type: string\n        attributes:\n          $ref: '#/components/schemas/Post'\n        links:\n          $ref: '#/components/schemas/_Links'\n        relationships:\n          type: object\n          properties:\n            author:\n              type: object\n            category:\n              type: object\n            comments:\n              type: object\n    Posts:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Post\"\n    Comment:\n      x-table: v2_comments\n      required:\n        - id\n        - post\n        - message\n      properties:\n        id:\n          type: integer\n          format: int64\n          readOnly: True\n        post:\n          $ref: \"#/components/schemas/Post\"\n        user:\n          $ref: \"#/components/schemas/User\"\n        message:\n          type: string\n    _CommentResource:\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 1\n        type:\n          type: string\n        attributes:\n          $ref: '#/components/schemas/Comment'\n        links:\n          $ref: '#/components/schemas/_Links'\n        relationships:\n          type: object\n          properties:\n            user:\n              type: object\n            post:\n              type: object\n    Comments:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Comment\"\n    Tag:\n      x-table: v2_tags\n      required:\n        - id\n        - name\n      properties:\n        id:\n          type: integer\n          format: int64\n          readOnly: True\n        name:\n          type: string\n          x-db-type: VARCHAR\n          x-db-unique: true\n          maxLength: 100\n        post_tags:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Post_tag\"\n    Tags:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Tag\"\n    _TagResource:\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 1\n        type:\n          type: string\n        attributes:\n          $ref: '#/components/schemas/Tag'\n        links:\n          $ref: '#/components/schemas/_Links'\n        relationships:\n          type: object\n    Post_tag:\n      x-table: v2_post_tag\n      required:\n        - id\n        - post\n        - tag\n      properties:\n        id:\n          type: integer\n          format: int64\n          readOnly: True\n        post:\n          $ref: \"#/components/schemas/Post\"\n        tag:\n          $ref: \"#/components/schemas/Tag\"\n    PostTags:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Post_tag\"\n\n  responses:\n    UserResponse:\n      description: Single user info\n      content:\n        application/vnd.api+json:\n          schema:\n            type: object\n            properties:\n              data:\n                $ref: '#/components/schemas/_UserResource'\n    CategoryResponse:\n      description: Single category info\n      content:\n        application/vnd.api+json:\n          schema:\n            type: object\n            properties:\n              data:\n                $ref: '#/components/schemas/_CategoryResource'\n              included:\n                type: array\n                items:\n                  allOf:\n                    - $ref: '#/components/schemas/_PostResource'\n    CategoryCreatedResponse:\n      description: Single category info\n      headers:\n        Location:\n          description: Link to created resource\n          schema:\n            type: string\n      content:\n        application/vnd.api+json:\n          schema:\n            type: object\n            properties:\n              data:\n                $ref: '#/components/schemas/_CategoryResource'\n    PostCreatedResponse:\n      description: Single post created\n      headers:\n        Location:\n          description: Link to created resource\n          schema:\n            type: string\n      content:\n        application/vnd.api+json:\n          schema:\n            type: object\n            properties:\n              data:\n                $ref: '#/components/schemas/_PostResource'\n    CommentResponse:\n      description: Single comment\n      content:\n        application/vnd.api+json:\n          schema:\n            type: object\n            properties:\n              data:\n                $ref: '#/components/schemas/_CommentResource'\n              included:\n                type: array\n                items:\n                  - $ref: '#/components/responses/UserResponse'\n    PostResponse:\n      description: Single post\n      content:\n        application/vnd.api+json:\n          schema:\n            type: object\n            properties:\n              data:\n                $ref: '#/components/schemas/_PostResource'\n              included:\n                type: array\n                items:\n                  anyOf:\n                    - $ref: '#/components/schemas/_UserResource'\n                    - $ref: '#/components/schemas/_CategoryResource'\n                    - $ref: '#/components/schemas/_CommentResource'\n    TagResponse:\n      description: Single tag\n      content:\n        application/vnd.api+json:\n          schema:\n            type: object\n            properties:\n              data:\n                type: object\n                properties:\n                  id:\n                    type: integer\n                    example: 1\n                  type:\n                    type: string\n                  attributes:\n                    $ref: '#/components/schemas/Tag'\n                  links:\n                    $ref: '#/components/schemas/_Links'\n                  relationships:\n                    type: object\n                    properties:\n                      posts:\n                        type: object\n    UserListResponse:\n      description: Users List\n      content:\n        application/vnd.api+json:\n          schema:\n            type: object\n            properties:\n              data:\n                type: array\n                items:\n                  $ref: '#/components/schemas/_UserResource'\n              links:\n                $ref: '#/components/schemas/_Links'\n              meta:\n                $ref: '#/components/schemas/_MetaPagination'\n    CategoryListResponse:\n      description: List categories with pagination\n      content:\n        application/vnd.api+json:\n          schema:\n            type: object\n            properties:\n              data:\n                type: array\n                items:\n                  $ref: '#/components/schemas/_CategoryResource'\n              links:\n                $ref: '#/components/schemas/_Links'\n              meta:\n                $ref: '#/components/schemas/_MetaPagination'\n              included:\n                type: array\n                items:\n                  allOf:\n                    - $ref: '#/components/schemas/_PostResource'\n    PostListResponse:\n      description: List posts with pagination\n      content:\n        application/vnd.api+json:\n          schema:\n            type: object\n            properties:\n              data:\n                type: array\n                items:\n                  $ref: '#/components/schemas/_PostResource'\n              links:\n                $ref: '#/components/schemas/_Links'\n              meta:\n                $ref: '#/components/schemas/_MetaPagination'\n              included:\n                type: array\n                items:\n                  anyOf:\n                    - $ref: '#/components/schemas/_UserResource'\n                    - $ref: '#/components/schemas/_CategoryResource'\n                    - $ref: '#/components/schemas/_CommentResource'\n    TagListResponse:\n      description: List tags\n      content:\n        application/vnd.api+json:\n          schema:\n            type: object\n            properties:\n              data:\n                type: array\n                items:\n                  $ref: '#/components/schemas/_TagResource'\n              links:\n                $ref: '#/components/schemas/_Links'\n              meta:\n                $ref: '#/components/schemas/_MetaPagination'\n    TagRelationResponse:\n      description: List related tag ids\n      content:\n        application/vnd.api+json:\n          schema:\n            type: object\n            properties:\n              data:\n                type: array\n                items:\n                  $ref: '#/components/schemas/_TagResource'\n    CommentRelationResponse:\n      description: Related comments ids\n      content:\n        application/vnd.api+json:\n          schema:\n            type: object\n            properties:\n              data:\n                type: array\n                items:\n                  $ref: '#/components/schemas/_CommentResource'\n    CommentListResponse:\n      description: List comments\n      content:\n        application/vnd.api+json:\n          schema:\n            type: object\n            properties:\n              data:\n                type: array\n                items:\n                  $ref: '#/components/schemas/_CommentResource'\n              links:\n                $ref: '#/components/schemas/_Links'\n              meta:\n                $ref: '#/components/schemas/_MetaPagination'\n    ErrorResponse:\n      description: Error response\n      content:\n        application/vnd.api+json:\n          schema:\n            type: object\n            required:\n              - errors\n            properties:\n              errors:\n                $ref: '#/components/schemas/_Errors'\n              meta:\n                $ref: '#/components/schemas/_Meta'\n  requestBodies:\n    CategoryRequest:\n      required: true\n      content:\n        application/vnd.api+json:\n          schema:\n            type: object\n            properties:\n              data:\n                type: object\n                properties:\n                  id:\n                    type: integer\n                    example: 1\n                  type:\n                    type: string\n                  attributes:\n                    $ref: '#/components/schemas/Category'\n    PostRequest:\n      required: true\n      content:\n        application/vnd.api+json:\n          schema:\n            type: object\n            properties:\n              data:\n                type: object\n                properties:\n                  id:\n                    type: integer\n                    example: 1\n                  type:\n                    type: string\n                  attributes:\n                    $ref: '#/components/schemas/Post'\n\n    TagRequest:\n      required: true\n      content:\n        application/vnd.api+json:\n          schema:\n            type: object\n            properties:\n              data:\n                type: object\n                properties:\n                  id:\n                    type: integer\n                    example: 1\n                  type:\n                    type: string\n                  attributes:\n                    $ref: '#/components/schemas/Tag'\n",
			"canonicalURL": "/github.com/cebe/yii2-openapi@d58b20675b5feaddc2bac2ab0ba1a3a2f41ffff3/-/blob/tests/specs/blog_jsonapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/cebe/yii2-openapi/blob/d58b20675b5feaddc2bac2ab0ba1a3a2f41ffff3/tests/specs/blog_jsonapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: json: line 1:3501: json: cannot unmarshal Go value of type ogen.Spec: spec: json: cannot unmarshal Go value of type ogen.Properties: json: cannot unmarshal JSON array into Go value of type ogen.Schema"
}