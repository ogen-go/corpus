{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/dcos/dcos-diagnostics"
		},
		"file": {
			"name": "api.yaml",
			"size": 0,
			"path": "docs/api.yaml",
			"byteSize": 22247,
			"content": "openapi: \"3.0.0\"\ninfo:\n  description: \"This is API documentation for [DC/OS Diagnostics](https://github.com/dcos/dcos-diagnostics)\"\n  version: \"1.0.0\"\n  title: \"DC/OS Diagnostics API\"\n  license:\n    name: \"Apache 2.0\"\n    url: \"https://github.com/dcos/dcos-diagnostics/blob/master/LICENSE\"\n\ntags:\n  - name: \"Cluster Bundle\"\n    description: \"API for CRUD on Cluster Bundle. Works on masters only.\"\n    externalDocs:\n      description: \"Code\"\n      url: \"https://github.com/dcos/dcos-diagnostics/blob/master/api/rest/cluster_bundle_handler.go\"\n  - name: \"Local Bundle\"\n    description: \"API for local node bundle\"\n    externalDocs:\n      description: \"Code\"\n      url: \"https://github.com/dcos/dcos-diagnostics/blob/master/api/rest/bundle_handler.go\"\n  - name: \"Deprecated Cluster Bundle\"\n    description: \"Deprecated API for creating cluster bundle. Works on masters only.\"\n    externalDocs:\n      description: \"Code\"\n      url: \"https://github.com/dcos/dcos-diagnostics/blob/master/api/diagnostics.go\"\n  - name: \"Monitoring\"\n    description: \"Exposes infromations about nodes and its health\"\n    externalDocs:\n      description: \"Code\"\n      url: \"https://github.com/dcos/dcos-diagnostics/blob/master/api/monitoring_response.go\"\n  - name: \"Debug\"\n    description: \"Endpoints exposed when `--debug` flag is set.\"\n    externalDocs:\n      description: \"Code\"\n      url: \"https://golang.org/pkg/net/http/pprof/\"\n\n\nservers:\n  - url: https://mesos.master/system/health/v1\n    description: Mesos master\n\npaths:\n\n  /report:\n    get:\n      tags: [\"Monitoring\"]\n      responses:\n        200:\n          description: Get infromation about all systemd units for all nodes\n          content:\n            application/json: {}\n  /report/download:\n    get:\n      tags: [\"Monitoring\"]\n      responses:\n        200:\n          description: Get infromation about all systemd units for all nodes.\n          headers:\n            Content-disposition:\n              schema:\n                type: string\n              description: \"attachment; filename=health-report.json\"\n          content:\n            application/json: {}\n\n  /nodes:\n    get:\n      tags: [\"Monitoring\"]\n      responses:\n        200:\n          description: List all nodes with health\n          content:\n            application/json:\n              examples:\n                list:\n                  value:\n                    nodes:\n                      - host_ip: 172.17.0.3\n                        health: 0\n                        role: agent\n                      - host_ip: 172.17.0.4\n                        health: 0\n                        role: agent_public\n                      - host_ip: 172.17.0.2\n                        health: 0\n                        role: master\n  /nodes/{ip}:\n    get:\n      tags: [\"Monitoring\"]\n      parameters:\n        - in: path\n          name: ip\n          required: true\n          schema:\n            type: string\n\n      responses:\n        200:\n          description: Get single node by its IP\n          content:\n            application/json:\n              examples:\n                list:\n                  value:\n                    host_ip: 172.17.0.3\n                    health: 0\n                    role: agent\n\n  /nodes/{ip}/units/{unit}:\n    get:\n      tags: [\"Monitoring\"]\n      parameters:\n        - in: path\n          name: ip\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: unit\n          required: true\n          schema:\n            type: string\n\n      responses:\n        200:\n          description: Get DC/OS systemd unit by id from specific node. Similar to `/units/{unit}/nodes/{ip}`\n          content:\n            application/json:\n              examples:\n                list:\n                  value:\n                    id: dcos-diagnostics.service\n                    name: DC/OS Diagnostics Agent\n                    health: 0\n                    description: exposes component health\n  /nodes/units:\n    get:\n      tags: [\"Monitoring\"]\n      responses:\n        200:\n          description: Get host DC/OS systemd units\n          content:\n            application/json: {}\n  /units/{unit}:\n    get:\n      tags: [\"Monitoring\"]\n      parameters:\n        - in: path\n          name: ip\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: unit\n          required: true\n          schema:\n            type: string\n\n      responses:\n        200:\n          description: Get host DC/OS systemd unint by id\n          content:\n            application/json: {}\n  /units/{unit}/nodes:\n    get:\n      tags: [\"Monitoring\"]\n      parameters:\n        - in: path\n          name: unit\n          required: true\n          schema:\n            type: string\n\n      responses:\n        200:\n          description: Get infromathon from all DC/OS nodes about specific unint\n          content:\n            application/json: {}\n  /units/{unit}/nodes/{ip}:\n    get:\n      tags: [\"Monitoring\"]\n      parameters:\n        - in: path\n          name: ip\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: unit\n          required: true\n          schema:\n            type: string\n\n      responses:\n        200:\n          description: Get infromathon for specific DC/OS node about specific unint similar to `/nodes/{ip}/units/{unit}`\n          content:\n            application/json: {}\n  /logs:\n    get:\n      tags: [\"Monitoring\"]\n      responses:\n        200:\n          description: Get diagnostics bundle conetnt configuration for node. This is used by deprecated cluster bundle API.\n          content:\n            application/json:\n              examples:\n                list:\n                  value:\n                    /etc/resolv.conf:\n                      PortAndPath: ':443/system/health/v1/logs/files/etc_resolv.conf'\n                      Optional: false\n                    5050-master_flags.json:\n                      PortAndPath: ':5050/master/flags'\n                      Optional: true\n                    dcos-adminrouter.service:\n                      PortAndPath: ':443/system/health/v1/logs/units/dcos-adminrouter.service'\n                      Optional: false\n                    iptables-save.output:\n                      PortAndPath: ':443/system/health/v1/logs/cmds/iptables-save.output'\n                      Optional: false\n  /logs/{provider}/{entitiy}:\n    get:\n      tags: [\"Monitoring\"]\n      parameters:\n        - in: path\n          name: provider\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: entitiy\n          required: true\n          schema:\n            $ref: \"#/components/schemas/entity\"\n      responses:\n        200:\n          description: Gets file, systemd logs or command output. This is used by deprecated cluster bundle API.\n\n  /metrics:\n    get:\n      responses:\n        200:\n          description: Metrics in prometheus format\n\n  /debug/pprof/:\n    get:\n      tags: [\"Debug\"]\n      responses:\n        200:\n          description: An HTML page listing the available profiles\n  /debug/pprof/{profile}:\n    get:\n      tags: [\"Debug\"]\n      parameters:\n        - in: path\n          name: profile\n          required: true\n          schema:\n            $ref: \"#/components/schemas/pprofProfile\"\n      responses:\n        200:\n          content:\n            application/octet-stream: {}\n            \"text/plain; charset=utf-8\": {}\n          description: Responds with the execution trace in binary form.\n\n  /diagnostics:\n    get:\n      tags: [\"Cluster Bundle\"]\n      summary: List all bundles\n      responses:\n        200:\n          description: \"List of all cluster bundles and their metadata\"\n          content:\n            application/json:\n              examples:\n                bundle:\n                  $ref: \"#/components/examples/bundles\"\n              schema:\n                $ref: \"#/components/schemas/bundles\"\n\n  /diagnostics/{id}:\n    get:\n      tags: [\"Cluster Bundle\"]\n      summary: Get specific bundle metadata\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: \"Bundle metadata\"\n          content:\n            application/json:\n              examples:\n                bundle:\n                  $ref: \"#/components/examples/bundle\"\n              schema:\n                $ref: \"#/components/schemas/bundle\"\n    put:\n      tags: [\"Cluster Bundle\"]\n      summary: Generate new bundle\n      description: Starts process of generating new bundle\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/bundleOptions\"\n      responses:\n        200:\n          description: \"Bundle metadata\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/bundle\"\n        409:\n          description: \"Bundle with given id already exists\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error\"\n              example:\n                code: 409\n                error: bundle 123e4567-e89b-12d3-a456-426655440001 already exists\n        507:\n          description: There is a problem with storage\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error\"\n              example:\n                code: 507\n                error: could not create bundle 123e4567-e89b-12d3-a456-426655440001 workdir\n    delete:\n      tags: [\"Cluster Bundle\"]\n      summary: Remove bundle file\n      description: Removes bundle but keeps its metadata\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: \"Bundle metadata\"\n          content:\n            application/zip:\n              examples:\n                bundle:\n                  $ref: \"#/components/examples/bundle\"\n              schema:\n                $ref: \"#/components/schemas/bundle\"\n  /diagnostics/{id}/file:\n    get:\n      tags: [\"Cluster Bundle\"]\n      summary: Get bundle data\n      description: Return bundle content\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/zip:\n              schema:\n                type: string\n                format: binary\n\n  /node/diagnostics:\n    get:\n      tags: [\"Local Bundle\"]\n      summary: List all bundles\n      responses:\n        200:\n          description: \"List of all local bundles and their metadata\"\n          content:\n            application/json:\n              examples:\n                bundle:\n                  $ref: \"#/components/examples/bundles\"\n              schema:\n                $ref: \"#/components/schemas/bundles\"\n\n  /node/diagnostics/{id}:\n    get:\n      tags: [\"Local Bundle\"]\n      summary: Get specific bundle metadata\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: \"Bundle metadata\"\n          content:\n            application/json:\n              examples:\n                bundle:\n                  $ref: \"#/components/examples/bundle\"\n              schema:\n                $ref: \"#/components/schemas/bundle\"\n    put:\n      tags: [\"Local Bundle\"]\n      summary: Generate new bundle\n      description: Starts process of generating new bundle\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/bundleOptions\"\n      responses:\n        200:\n          description: \"Bundle metadata\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/bundle\"\n        409:\n          description: \"Bundle with given id already exists\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error\"\n              example:\n                code: 409\n                error: bundle 123e4567-e89b-12d3-a456-426655440001 already exists\n        507:\n          description: There is a problem with storage\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error\"\n              example:\n                code: 507\n                error: could not create bundle 123e4567-e89b-12d3-a456-426655440001 workdir\n    delete:\n      tags: [\"Local Bundle\"]\n      summary: Remove bundle file\n      description: Removes bundle but keeps its metadata\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: \"Bundle metadata\"\n          content:\n            application/zip:\n              examples:\n                bundle:\n                  $ref: \"#/components/examples/bundle\"\n              schema:\n                $ref: \"#/components/schemas/bundle\"\n  /node/diagnostics/{id}/file:\n    get:\n      tags: [\"Local Bundle\"]\n      summary: Get bundle data\n      description: Return bundle content\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/zip:\n              schema:\n                type: string\n                format: binary\n\n  /report/diagnostics/create:\n    post:\n      tags: [\"Deprecated Cluster Bundle\"]\n      responses:\n        200:\n          description: Starts proces of creating cluster bundle. At given time there could only single cluster bundle generation process.\n          content:\n            application/json:\n              examples:\n                success:\n                  value:\n                    response_http_code: 200\n                    version: 1\n                    status: Job has been successfully started\n                    errors: null\n                    extra:\n                      bundle_name: bundle-2019-11-26-1574774004.zip\n\n        409:\n          description: Can't start new cluster bundle generation process because another one is still running\n          content:\n            application/json:\n              examples:\n                error:\n                  value:\n                    response_http_code: 409\n                    version: 1\n                    status: Job is already running\n                    errors: null\n                    extra:\n                      bundle_name: ''\n\n  /report/diagnostics/cancel:\n    post:\n      tags: [\"Deprecated Cluster Bundle\"]\n      responses:\n        200:\n          description: Stops proces of creating cluster bundle\n          content:\n            application/json: {}\n  /report/diagnostics/status:\n    get:\n      tags: [\"Deprecated Cluster Bundle\"]\n      responses:\n        200:\n          description: Get status of the last cluster bundle generation process from singel master\n          content:\n            application/json:\n              examples:\n                success:\n                  value:\n                    is_running: false\n                    status: Diagnostics job successfully collected all data\n                    last_bundle_dir: /var/lib/dcos/dcos-diagnostics/diag-bundles/bundle-2019-11-26-1574774154.zip\n                    job_started: '2019-11-26 13:15:54.708377755 +0000 UTC m=+286.920941479'\n                    job_ended: '2019-11-26 13:15:59.278120104 +0000 UTC m=+291.490683790'\n                    job_duration: 4.569742311s\n                    job_progress_percentage: 100\n                    diagnostics_bundle_dir: /var/lib/dcos/dcos-diagnostics/diag-bundles\n                    diagnostics_job_timeout_min: 720\n                    journald_logs_since_hours: 24h\n                    diagnostics_job_get_since_url_timeout_min: 8\n                    command_exec_timeout_sec: 50\n                    diagnostics_partition_disk_usage_percent: 58.12225648925586\n\n  /report/diagnostics/status/all:\n    get:\n      tags: [\"Deprecated Cluster Bundle\"]\n      responses:\n        200:\n          description: Get status of the last cluster bundle generation process from all masters\n          content:\n            application/json: {}\n  /report/diagnostics/list:\n    get:\n      tags: [\"Deprecated Cluster Bundle\"]\n      responses:\n        200:\n          description: Get list of the generated cluster bundles from single master\n          content:\n            application/json:\n              examples:\n                success:\n                  value:\n                    - file_name: /system/health/v1/report/diagnostics/serve/bundle-2019-11-26-1574774004.zip\n                      file_size: 1693145\n                    - file_name: /system/health/v1/report/diagnostics/serve/bundle-2019-11-26-1574774154.zip\n                      file_size: 2783766\n\n  /report/diagnostics/list/all:\n    get:\n      tags: [\"Deprecated Cluster Bundle\"]\n      responses:\n        200:\n          description: Get list of the generated cluster bundles from all masters\n          content:\n            application/json: {}\n  /report/diagnostics/serve/{file}:\n    parameters:\n      - in: path\n        name: file\n        required: true\n        schema:\n          type: string\n    get:\n      tags: [\"Deprecated Cluster Bundle\"]\n      responses:\n        200:\n          description: Download cluster bundle file\n          content:\n            application/octet-stream: {}\n  /report/diagnostics/delete/{file}:\n    parameters:\n      - in: path\n        name: file\n        required: true\n        schema:\n          type: string\n    post:\n      tags: [\"Deprecated Cluster Bundle\"]\n      responses:\n        200:\n          description: Delete cluster bundle file\n          content:\n            application/json: {}\n\ncomponents:\n\n  examples:\n    bundle:\n      value: \u0026deleted\n        id: 123e4567-e89b-12d3-a456-426655440001\n        size: 494\n        status: Deleted\n        started_at: '2015-08-05T09:40:51.62Z'\n        stopped_at: '2015-08-05T10:40:51.62Z'\n        errors:\n          - 'could not collect collector-1: some error'\n    bundle-started:\n      value: \u0026started\n        id: 123e4567-e89b-12d3-a456-426655440002\n        size: 0\n        status: Started\n        started_at: '2015-08-05T09:40:51.62Z'\n    bundle-unknown:\n      value: \u0026unknown\n        id: bundle-state-not-json\n        status: Unknown\n        started_at: '0001-01-01T00:00:00Z'\n        stopped_at: '0001-01-01T00:00:00Z'\n        errors:\n          - 'could not unmarshal state file bundle-state-not-json: invalid character ''i'' looking for beginning of value'\n    bundles:\n      value:\n        - *deleted\n        - *started\n        - *unknown\n\n  schemas:\n    bundleOptions:\n      type: \"object\"\n      properties:\n        masters:\n          type: \"boolean\"\n          default: true\n          description: \"information if we should include information about masters\"\n        agents:\n          type: \"boolean\"\n          default: true\n          description: \"information if we should include information about masters\"\n\n    bundles:\n      type: \"array\"\n      items:\n        $ref: \"#/components/schemas/bundle\"\n\n    bundle:\n      type: \"object\"\n      properties:\n        id:\n          type: \"string\"\n        started_at:\n          type: \"string\"\n          format: \"date-time\"\n        stoped_at:\n          type: \"string\"\n          format: \"date-time\"\n        size:\n          type: \"integer\"\n        errors:\n          type: array\n          items:\n            type: string\n        status:\n          type: \"string\"\n          enum:\n            - \"Unknown\"\n            - \"Started\"\n            - \"InProgress\"\n            - \"Done\"\n            - \"Canceled\"\n            - \"Deleted\"\n            - \"Failed\"\n          description: \u003e\n            Status:\n              * `Unknown` - No information about this bundle\n              * `Started` - Diagnostics is preparing\n              * `InProgress` - Diagnostics in progress\n              * `Done` - Diagnostics finished and the file is ready to be downloaded\n              * `Canceled` - Diagnostics has been cancelled\n              * `Deleted` - Diagnostics was finished but was deleted\n              * `Failed` - Diagnostics could not be downloaded\n\n    error:\n      type: \"object\"\n      properties:\n        code:\n          type: integer\n        error:\n          type: string\n\n    entity:\n      type: \"string\"\n      enum:\n        - files\n        - units\n        - cmds\n\n    pprofProfile:\n      type: \"string\"\n      enum:\n        - allocs\n        - block\n        - cmdline\n        - goroutine\n        - heap\n        - mutex\n        - profile\n        - threadcreate\n        - trace\n      description: \u003e\n        Profile:\n          * `allocs` – A sampling of all past memory allocations\n          * `block` – Stack traces that led to blocking on synchronization primitives\n          * `cmdline` – The command line invocation of the current program\n          * `goroutine` – Stack traces of all current goroutines\n          * `heap` – A sampling of memory allocations of live objects. You can specify the gc GET parameter to run GC before taking the heap sample\n          * `mutex` – Stack traces of holders of contended mutexes\n          * `profile` – CPU profile. You can specify the duration in the seconds GET parameter. After you get the profile file, use the go tool pprof command to investigate the profile\n          * `threadcreate` – Stack traces that led to the creation of new OS threads\n          * `trace` – A trace of execution of the current program. You can specify the duration in the seconds GET parameter. After you get the trace file, use the go tool trace command to investigate the trace",
			"canonicalURL": "/github.com/dcos/dcos-diagnostics@3641ea531573bf2b4e38757b8bc72719b4a6d17a/-/blob/docs/api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/dcos/dcos-diagnostics/blob/3641ea531573bf2b4e38757b8bc72719b4a6d17a/docs/api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: convert YAML to JSON: yaml: unknown anchor 'deleted' referenced"
}