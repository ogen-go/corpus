{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/HITB-CyberWeek/proctf-2021"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "services/genealogy/src/static/openapi.yaml",
			"byteSize": 25640,
			"content": "openapi: 3.0.1\ninfo:\n  title: Genealogy Tree Service\n  description: |-\n    This is a simple API for storing genealogy trees. Service is written\n    in C++, uses PostgreSQL and communicates via JSONs. Also it uses brotobufs â€”\n    it's like protobufs but more cooler! Unfortunately some code generated by brotoc\n    has been lost :( \n      \n    See the full list of available endpoints below.\n\n    Unfortunately, cookie authentication doesn't work in Swagger UI\n    (see [this issue](https://github.com/swagger-api/swagger-js/issues/1163)). So you need to set cookies\n    in your browser manually to use \"Try it out\" feature for endpoints protected by the authentication.\n  license:\n    name: MIT\n    url: https://opensource.org/licenses/MIT\n  version: 1.0.0\ntags:\n- name: user\n  description: Registration and login\n- name: tree\n  description: Operations with genealogy trees\n- name: person\n  description: Operations with persons in genealogy tree\n- name: archive\n  description: Exporting and checking signed archive\npaths:\n  /users:\n    post:\n      tags:\n      - user\n      summary: Create a new user\n      description: Simple registration\n      operationId: createUser\n      requestBody:\n        description: A JSON object containing login and password\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RegistrationRequest'\n        required: true\n      responses:\n        200:\n          description: User has been created\n          headers:\n            Set-Cookie:\n              schema:\n                type: string\n                example: user_id=10; Path=/, user_hash=bd3bed9372e761af8132968f958bde51; Path=/\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                  user:\n                    $ref: '#/components/schemas/User'\n                example:\n                  status: ok\n                  user:\n                    id: 1\n                    login: andgein\n        409:\n          description: User with same login already exists\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                  message:\n                    type: string\n              example:\n                status: \"error\"\n                message: \"User with login andgein already exists\"\n  /login:\n    post:\n      tags:\n      - user\n      summary: Authenticate\n      description: Simple login\n      operationId: login\n      requestBody:\n        description:\n          A JSON object containing login and password\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RegistrationRequest'\n        required: true\n      responses:\n        200:\n          description: \n            Successfully authenticated.\n            The user id is returned in a cookie named `user_id`, signed by a cookie named `user_hash`. You need to include these cookies in subsequent requests.\n          headers: \n            Set-Cookie:\n              schema: \n                type: string\n                example: user_id=10; Path=/, user_hash=bd3bed9372e761af8132968f958bde51; Path=/\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                  user:\n                    $ref: '#/components/schemas/User'\n                example:\n                  status: ok\n                  user:\n                    id: 1\n                    login: andgein\n        412:\n          description: Invalid login or password\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                  message:\n                    type: string\n              examples:\n                UserDoesntExist:\n                  value:\n                    status: \"error\"\n                    message: \"User with login andgein doesn't exist\"\n                InvalidPassword:\n                  value:\n                    status: \"error\"\n                    message: \"Invalid password for user andgein\"\n  /users/me:\n    get:\n      tags:\n      - user\n      summary: Get me\n      description: Get information about current user\n      operationId: getMe\n      security:\n        - userId\n        - userHash\n      responses:\n        200:\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                  user:\n                    $ref: '#/components/schemas/User'\n                example:\n                  status: ok\n                  user:\n                    id: 1\n                    login: andgein                    \n        401:\n          description: You're not authenticated\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                  message:\n                    type: string\n                example:\n                  status: \"error\"\n                  message: \"You're not authenticated\"\n  /tree:\n    post:\n      tags:\n      - tree\n      summary: Create a new genealogy tree\n      description: Every user may have only one genealogy tree\n      operationId: createTree\n      security:\n        - userId\n        - userHash\n      requestBody:\n        description: A JSON object containing tree's information\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateTreeRequest'\n            example:\n              title: \"My genealogy tree\"\n              description: \"The genealogy tree of @andgein\"\n              person: 1              \n        required: true\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                  tree:              \n                    $ref: '#/components/schemas/Tree'\n              example:\n                status: \"ok\"\n                tree: \n                  id: 1\n                  person:\n                    id: 1\n                    title: \"Mr\"\n                    first_name: \"Andrew\"\n                    middle_name: \"Crazy\"\n                    last_name: \"Gein\"\n                    photo_url: \"https://avatars.githubusercontent.com/u/1853477?v=4\"\n                    birth_date: 684460800\n                    death_date: 7952342400\n                    parents:\n                      - id: 2\n                        title: \"Mr\"\n                        first_name: \"Alexander\"\n                        middle_name: \"\"\n                        last_name: \"Gein\"\n                        photo_url: \"\"\n                        birth_date: 2419200\n                        death_date: 7952342400\n                        parents: []\n                  title: \"My genealogy tree\"\n                  description: \"The genealogy tree of @andgein\"\n                  owners: [1, 2, 10]                \n        401:\n          description: You're not authenticated\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                  message:\n                    type: string\n                example:\n                  status: \"error\"\n                  message: \"You're not authenticated\"\n        404:\n          description: You don't have the genealogy tree\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                  message:\n                    type: string\n                example:\n                  status: \"error\"\n                  message: \"Your genealogy tree doesn't exist, create it first\"  \n    get:\n      tags:\n      - tree\n      summary: Get my genealogy tree\n      operationId: getTree\n      security:\n        - userId\n        - userHash      \n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                  tree:              \n                    $ref: '#/components/schemas/Tree'\n              example:\n                status: \"ok\"\n                tree: \n                  id: 1\n                  person:\n                    id: 1\n                    title: \"Mr\"\n                    first_name: \"Andrew\"\n                    middle_name: \"Crazy\"\n                    last_name: \"Gein\"\n                    photo_url: \"https://avatars.githubusercontent.com/u/1853477?v=4\"\n                    birth_date: 684460800\n                    death_date: 7952342400\n                    parents:\n                      - id: 2\n                        title: \"Mr\"\n                        first_name: \"Alexander\"\n                        middle_name: \"\"\n                        last_name: \"Gein\"\n                        photo_url: \"\"\n                        birth_date: 2419200\n                        death_date: 7952342400\n                        parents: []\n                  title: \"My genealogy tree\"\n                  description: \"The genealogy tree of @andgein\"\n                  owners: [1, 2, 10]\n            \n        401:\n          description: You're not authenticated\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                  message:\n                    type: string\n                example:\n                  status: \"error\"\n                  message: \"You're not authenticated\"\n        404:\n          description: You don't have the genealogy tree\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                  message:\n                    type: string\n                example:\n                  status: \"error\"\n                  message: \"Your genealogy tree doesn't exist, create it first\"\n    put:\n      tags:\n      - tree\n      summary: Update my genealogy tree\n      operationId: updateTree\n      security:\n        - userId\n        - userHash      \n      requestBody:\n        description: Tree object\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateTreeRequest'\n            example:\n              description: \"The genealogy tree of @andgein\"\n              person: 1\n        required: true\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                  tree:              \n                    $ref: '#/components/schemas/Tree'\n              example:\n                status: \"ok\"\n                tree: \n                  id: 1\n                  person:\n                    id: 1\n                    title: \"Mr\"\n                    first_name: \"Andrew\"\n                    middle_name: \"Crazy\"\n                    last_name: \"Gein\"\n                    photo_url: \"https://avatars.githubusercontent.com/u/1853477?v=4\"\n                    birth_date: 684460800\n                    death_date: 7952342400\n                    parents:\n                      - id: 2\n                        title: \"Mr\"\n                        first_name: \"Alexander\"\n                        middle_name: \"\"\n                        last_name: \"Gein\"\n                        photo_url: \"\"\n                        birth_date: 2419200\n                        death_date: 7952342400\n                        parents: []\n                  title: \"My genealogy tree\"\n                  description: \"The genealogy tree of @andgein\"\n                  owners: [1, 2, 10]                \n        401:\n          description: You're not authenticated\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                  message:\n                    type: string\n                example:\n                  status: \"error\"\n                  message: \"You're not authenticated\"\n        404:\n          description: You don't have the genealogy tree\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                  message:\n                    type: string\n                example:\n                  status: \"error\"\n                  message: \"Your genealogy tree doesn't exist, create it first\"\n  /tree/owners:\n    put:\n      tags:\n      - tree\n      summary: Update tree's owners. Not used now, but implemented for the amazing future.\n      operationId: updateTreeOwners\n      security:\n        - userId\n        - userHash      \n      requestBody:\n        description: A JSON array containing owners' ids\n        content:\n          application/json:\n            schema:\n              type: \"array\"\n              items:\n                type: \"integer\"\n            example:\n              [1, 2, 10]\n        required: true  \n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                  tree:              \n                    $ref: '#/components/schemas/Tree'\n              example:\n                status: \"ok\"\n                tree: \n                  id: 1\n                  person:\n                    id: 1\n                    title: \"Mr\"\n                    first_name: \"Andrew\"\n                    middle_name: \"Crazy\"\n                    last_name: \"Gein\"\n                    photo_url: \"https://avatars.githubusercontent.com/u/1853477?v=4\"\n                    birth_date: 684460800\n                    death_date: 7952342400\n                    parents:\n                      - id: 2\n                        title: \"Mr\"\n                        first_name: \"Alexander\"\n                        middle_name: \"\"\n                        last_name: \"Gein\"\n                        photo_url: \"\"\n                        birth_date: 2419200\n                        death_date: 7952342400\n                        parents: []\n                  title: \"My genealogy tree\"\n                  description: \"The genealogy tree of @andgein\"\n                  owners: [1, 2, 10]\n            \n        401:\n          description: You're not authenticated\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                  message:\n                    type: string\n                example:\n                  status: \"error\"\n                  message: \"You're not authenticated\"\n        404:\n          description: You don't have the genealogy tree\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                  message:\n                    type: string\n                example:\n                  status: \"error\"\n                  message: \"Your genealogy tree doesn't exist, create it first\"\n  /tree/archive:\n    get:\n      tags:\n      - archive\n      summary: Download signed tree archive\n      operationId: getTreeArchive\n      security:\n        - userId\n        - userHash      \n      responses:\n        200:\n          description: Success\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n        401:\n          description: You're not authenticated\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                  message:\n                    type: string\n                example:\n                  status: \"error\"\n                  message: \"You're not authenticated\"\n        404:\n          description: You don't have the genealogy tree\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                  message:\n                    type: string\n                example:\n                  status: \"error\"\n                  message: \"Your genealogy tree doesn't exist, create it first\"\n    post:\n      tags:\n      - archive\n      summary: Check signed tree archive\n      operationId: checkTreeArchive\n      requestBody:\n        description: A binary archive downloaded from /tree/archive\n        content:\n          application/octet-stream:\n              schema:\n                type: string\n                format: binary          \n        required: true\n      responses:\n        200:\n          description: Success\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary              \n        418:\n          description: \"Invalid signature\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                  message:\n                    type: string\n                example:\n                  status: \"error\"\n                  message: \"Invalid signature under your archive\"\n\n  /tree/persons:\n    post:\n      tags:\n      - person\n      summary: Create a new person\n      description: Creates a new person which can be added to the genealogy tree\n      operationId: createPeron\n      security:\n        - userId\n        - userHash      \n      requestBody:\n        description: Person object\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreatePersonRequest'\n            example:\n              title: \"Mr\"\n              first_name: \"Andrew\"\n              middle_name: \"Crazy\"\n              last_name: \"Gein\"\n              photo_url: \"https://avatars.githubusercontent.com/u/1853477?v=4\"\n              birth_date: 684460800\n              death_date: 7952342400\n              first_parent: 2\n              second_parent: null\n        required: true\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                  person:              \n                    $ref: '#/components/schemas/Person'\n              example:\n                status: \"ok\"\n                person:\n                  id: 10\n                  title: \"Mr\"\n                  first_name: \"Andrew\"\n                  middle_name: \"Crazy\"\n                  last_name: \"Gein\"\n                  photo_url: \"https://avatars.githubusercontent.com/u/1853477?v=4\"\n                  birth_date: 684460800\n                  death_date: 7952342400\n                  parents:\n                    - id: 2\n                      title: \"Mr\"\n                      first_name: \"Alexander\"\n                      middle_name: \"\"\n                      last_name: \"Gein\"\n                      photo_url: \"\"\n                      birth_date: 2419200\n                      death_date: 7952342400\n                      parents: []\n        401:\n          description: You're not authenticated\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                  message:\n                    type: string\n                example:\n                  status: \"error\"\n                  message: \"You're not authenticated\"\n        412:\n          description: Invalid parent id\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                  message:\n                    type: string\n                example:\n                  status: \"error\"\n                  message: \"Invalid first parent id\"\n  /tree/persons/{personId}:\n    delete:\n      tags:\n      - person\n      summary: Delete the person\n      description: Deletes information about the person\n      operationId: deletePerson\n      security:\n        - userId\n        - userHash      \n      parameters:\n        - in: path\n          name: personId\n          schema:\n            type: integer\n          required: true\n          description: Numeric ID of the person to get\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                  message:              \n                    type: string\n              example:\n                status: \"ok\"\n                message: \"Person has been deleted\"\n        401:\n          description: You're not authenticated\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                  message:\n                    type: string\n                example:\n                  status: \"error\"\n                  message: \"You're not authenticated\"\n        404:\n          description: Person not found or is owned not by you\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                  message:\n                    type: string\n              example:\n                status: \"error\"\n                message: \"Person 10 not found or is owned not by you\"\ncomponents:\n  securitySchemes:\n    userId:\n      type: apiKey\n      in: cookie\n      name: user_id\n    userHash:\n      type: apiKey\n      in: cookie\n      name: user_hash\n  schemas:\n    User:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        login:\n          type: string\n    Person:\n      type: object\n      properties:\n        title:\n          type: string\n        first_name:\n          type: string\n        middle_name:\n          type: string\n        last_name:\n          type: string\n        photo_url:\n          type: string\n        birth_date:\n          type: integer\n          format: int64\n        death_date:\n          type: integer\n          format: int64\n        parents:\n          type: array\n          items:\n            $ref: '#/components/schemas/Person'\n    Tree:\n      type: object\n      properties:\n        status:\n          type: string\n        tree:\n          type: object\n          properties:\n            id:\n              type: integer\n              format: int64\n            person:\n              $ref: '#/components/schemas/Person'\n            title:\n              type: string\n            description:\n              type: string\n            owners:\n              type: array\n              items:\n                type: integer\n                format: int64          \n    RegistrationRequest:\n      type: object\n      properties:\n        login:\n          type: string\n        password:\n          type: string\n    CreateTreeRequest:\n      type: object\n      properties:\n        title:\n          type: string\n        description:\n          type: string\n        person:\n          type: integer\n          format: int64\n    UpdateTreeRequest:\n      type: object\n      properties:\n        description:\n          type: string\n        person:\n          type: integer\n          format: int64\n    CreatePersonRequest:\n      type: object\n      properties:\n        title:\n          type: string\n        first_name:\n          type: string\n        middle_name:\n          type: string\n        last_name:\n          type: string\n        photo_url:\n          type: string\n        birth_date:\n          type: integer\n          format: int64\n        death_date:\n          type: integer\n          format: int64\n        first_parent:\n          type: integer\n          format: int64\n          nullable: true\n          description: \"The ID of the first parent, or null\"\n        second_parent:\n          type: integer\n          format: int64\n          nullable: true          \n          description: \"The ID of the first parent, or null\"\n",
			"canonicalURL": "/github.com/HITB-CyberWeek/proctf-2021@433e2064a5d4826041d1b1ada7d374a6d59e1e70/-/blob/services/genealogy/src/static/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/HITB-CyberWeek/proctf-2021/blob/433e2064a5d4826041d1b1ada7d374a6d59e1e70/services/genealogy/src/static/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 146: cannot unmarshal !!str `userId` into map[string][]string; yaml: line 147: cannot unmarshal !!str `userHash` into map[string][]string; yaml: line 187: cannot unmarshal !!str `userId` into map[string][]string; yaml: line 188: cannot unmarshal !!str `userHash` into map[string][]string; yaml: line 272: cannot unmarshal !!str `userId` into map[string][]string; yaml: line 273: cannot unmarshal !!str `userHash` into map[string][]string; yaml: line 347: cannot unmarshal !!str `userId` into map[string][]string; yaml: line 348: cannot unmarshal !!str `userHash` into map[string][]string; yaml: line 432: cannot unmarshal !!str `userId` into map[string][]string; yaml: line 433: cannot unmarshal !!str `userHash` into map[string][]string; yaml: line 519: cannot unmarshal !!str `userId` into map[string][]string; yaml: line 520: cannot unmarshal !!str `userHash` into map[string][]string; yaml: line 601: cannot unmarshal !!str `userId` into map[string][]string; yaml: line 602: cannot unmarshal !!str `userHash` into map[string][]string; yaml: line 689: cannot unmarshal !!str `userId` into map[string][]string; yaml: line 690: cannot unmarshal !!str `userHash` into map[string][]string"
}