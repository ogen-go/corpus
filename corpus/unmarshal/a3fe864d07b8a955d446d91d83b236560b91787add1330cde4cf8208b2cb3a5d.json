{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/MAIF/izanami"
		},
		"file": {
			"name": "swagger.yml",
			"size": 0,
			"path": "izanami-server/conf/swagger.yml",
			"byteSize": 3988,
			"content": "---\nopenapi: 3.0.0\ninfo:\n  title: \"Izanami API\"\n  description: |\n    API of Izanami\n  version: \"1.0.0\"\nconsumes:\n  - application/json\nproduces:\n  - application/json\ncomponents:\n  schemas:\n    PatchRequest:\n      type: array\n      items:\n        $ref: \"#/components/schemas/PatchDocument\"\n    PatchDocument:\n      description: A JSONPatch document as defined by RFC 6902\n      required:\n        - \"op\"\n        - \"path\"\n      properties:\n        op:\n          type: string\n          description: The operation to be performed\n          enum:\n            - \"add\"\n            - \"remove\"\n            - \"replace\"\n            - \"move\"\n            - \"copy\"\n            - \"test\"\n        path:\n          type: string\n          description: A JSON-Pointer\n        value:\n          type: object\n          description: The value to be used within the operations.\n        from:\n          type: string\n          description: A string containing a JSON Pointer value.\n    domains.abtesting.Experiment:\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        description:\n          type: string\n        enabled:\n          type: boolean\n        campaign:\n          type: object\n          $ref: '#/components/schemas/domains.abtesting.Campaign'\n        variants:\n          type: object\n          $ref: '#/components/schemas/domains.abtesting.Variant'\n    domains.abtesting.ExperimentVariantEvent:\n      properties:\n        id:\n          type: string\n        experimentId:\n          type: ExperimentKey\n        clientId:\n          type: string\n        variant:\n          type: array\n          $ref: '#/components/schemas/domains.abtesting.Variant'\n        date:\n          type: string\n        transformation:\n          type: number\n        variantId:\n          type: string\n    domains.feature.Feature:\n      properties:\n        id:\n          type: string\n        enabled:\n          type: boolean\n        description:\n          type: string\n        parameters:\n          type: object\n          properties:\n            activationStrategy:\n              type: string\n              required: true\n              enum: [NO_STRATEGY, RELEASE_DATE, DATE_RANGE, SCRIPT, GLOBAL_SCRIPT, PERCENTAGE, HOUR_RANGE]\n            releaseDate:\n              type: string\n              required: false\n            from:\n              type: string\n              required: false\n              format: date\n            to:\n              type: string\n              required: false\n              format: date\n            percentage:\n              type: number\n              required: false\n            ref:\n              type: string\n              required: true\n            script:\n              type: string\n              required: false\n            type:\n              type: string\n              required: false\n              enum: [scala, javascript]\n    domains.feature.FeatureActive:\n      allOf:\n        - $ref: '#/components/schemas/domains.feature.Feature'\n        - type: object\n          properties:\n            active:\n              type: boolean\n    controllers.dto.feature.FeatureListResult:\n      properties:\n        results:\n          type: array\n          $ref: '#/components/schemas/domains.feature.Feature'\n        metadata:\n          page:\n            required: true\n            type: integer\n          pageSize:\n            required: true\n            type: integer\n          count:\n            required: true\n            type: integer\n          nbPages:\n            required: true\n            type: integer\n    ApiError:\n      properties:\n        message:\n          type: string\n        args:\n          type: array\n          items: string\n    ApiErrors:\n      properties:\n        errors:\n          type: array\n          $ref: '#/components/schemas/ApiError'\n        fieldErrors:\n          type: object\n          \"additionalProperties\": {\n            \"type\": \"array\",\n            \"items\": {\n              $ref: '#/components/schemas/ApiError'\n            }\n          }\n\n",
			"canonicalURL": "/github.com/MAIF/izanami@b11aa9e53d57c448af65ca4096af8569827eb34f/-/blob/izanami-server/conf/swagger.yml",
			"externalURLs": [
				{
					"url": "https://github.com/MAIF/izanami/blob/b11aa9e53d57c448af65ca4096af8569827eb34f/izanami-server/conf/swagger.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 1: cannot unmarshal !!str `string` into ogen.Schema; yaml: line 1: cannot unmarshal !!bool `true` into []string"
}