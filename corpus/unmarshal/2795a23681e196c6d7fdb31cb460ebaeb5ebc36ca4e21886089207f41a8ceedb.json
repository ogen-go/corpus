{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/influxdata/docs-v2"
		},
		"file": {
			"name": "swaggerV1Compat.yml",
			"size": 0,
			"path": "api-docs/v2.0/swaggerV1Compat.yml",
			"byteSize": 15146,
			"content": "openapi: 3.0.0\ninfo:\n  title: Influx API Service (V1 compatible endpoints)\n  version: 0.1.0\n  description: |\n    The InfluxDB 1.x compatibility /write and /query endpoints work with\n    InfluxDB 1.x client libraries and third-party integrations like Grafana\n    and others.\n\n\n    If you want to use the latest InfluxDB `/api/v2` API instead,\n    see the [InfluxDB v2 API documentation](/influxdb/v2.0/api).\nservers:\n  - url: /\npaths:\n  /write:\n    post:\n      operationId: PostWriteV1\n      tags:\n        - Write\n      summary: Write time series data into InfluxDB in a V1 compatible format.\n      requestBody:\n        description: Line protocol body\n        required: true\n        content:\n          text/plain:\n            schema:\n              type: string\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - $ref: '#/components/parameters/AuthUserV1'\n        - $ref: '#/components/parameters/AuthPassV1'\n        - in: query\n          name: db\n          schema:\n            type: string\n          required: true\n          description: \u003e-\n            The bucket to write to. If none exist a bucket will be created with\n            a default 3 day retention policy.\n        - in: query\n          name: rp\n          schema:\n            type: string\n          description: The retention policy name.\n        - in: query\n          name: precision\n          schema:\n            type: string\n          description: Write precision.\n        - in: header\n          name: Content-Encoding\n          description: \u003e-\n            When present, its value indicates to the database that compression\n            is applied to the line protocol body.\n          schema:\n            type: string\n            description: \u003e-\n              Specifies that the line protocol in the body is encoded with gzip\n              or not encoded with identity.\n            default: identity\n            enum:\n              - gzip\n              - identity\n      responses:\n        '204':\n          description: \u003e-\n            Write data is correctly formatted and accepted for writing to the\n            bucket.\n        '400':\n          description: \u003e-\n            Line protocol poorly formed and no points were written.  Response\n            can be used to determine the first malformed line in the body\n            line-protocol. All data in body was rejected and not written.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LineProtocolError'\n        '401':\n          description: \u003e-\n            Token does not have sufficient permissions to write to this\n            organization and bucket or the organization and bucket do not exist.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '403':\n          description: No token was sent and they are required.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '413':\n          description: \u003e-\n            Write has been rejected because the payload is too large. Error\n            message returns max size supported. All data in body was rejected\n            and not written.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LineProtocolLengthError'\n        '429':\n          description: \u003e-\n            Token is temporarily over quota. The Retry-After header describes\n            when to try the write again.\n          headers:\n            Retry-After:\n              description: \u003e-\n                A non-negative decimal integer indicating the seconds to delay\n                after the response is received.\n              schema:\n                type: integer\n                format: int32\n        '503':\n          description: \u003e-\n            Server is temporarily unavailable to accept writes.  The Retry-After\n            header describes when to try the write again.\n          headers:\n            Retry-After:\n              description: \u003e-\n                A non-negative decimal integer indicating the seconds to delay\n                after the response is received.\n              schema:\n                type: integer\n                format: int32\n        default:\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /query:\n    post:\n      operationId: PostQueryV1\n      tags:\n        - Query\n      summary: Query InfluxDB in a V1 compatible format\n      requestBody:\n        description: InfluxQL query to execute.\n        content:\n          text/plain:\n            schema:\n              type: string\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - $ref: '#/components/parameters/AuthUserV1'\n        - $ref: '#/components/parameters/AuthPassV1'\n        - in: header\n          name: Accept\n          schema:\n            type: string\n            description: \u003e-\n              Specifies how query results should be encoded in the response.\n              **Note:** With `application/csv`, query results include epoch\n              timestamps instead of RFC3339 timestamps.\n            default: application/json\n            enum:\n              - application/json\n              - application/csv\n              - text/csv\n              - application/x-msgpack\n        - in: header\n          name: Accept-Encoding\n          description: \u003e-\n            The Accept-Encoding request HTTP header advertises which content\n            encoding, usually a compression algorithm, the client is able to\n            understand.\n          schema:\n            type: string\n            description: \u003e-\n              Specifies that the query response in the body should be encoded\n              with gzip or not encoded with identity.\n            default: identity\n            enum:\n              - gzip\n              - identity\n        - in: header\n          name: Content-Type\n          schema:\n            type: string\n            enum:\n              - application/vnd.influxql\n        - in: query\n          name: db\n          schema:\n            type: string\n          required: true\n          description: The bucket to query.\n        - in: query\n          name: rp\n          schema:\n            type: string\n          description: The retention policy name.\n        - in: query\n          name: q\n          description: Defines the influxql query to run.\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Query results\n          headers:\n            Content-Encoding:\n              description: \u003e-\n                The Content-Encoding entity header is used to compress the\n                media-type.  When present, its value indicates which encodings\n                were applied to the entity-body\n              schema:\n                type: string\n                description: \u003e-\n                  Specifies that the response in the body is encoded with gzip\n                  or not encoded with identity.\n                default: identity\n                enum:\n                  - gzip\n                  - identity\n            Trace-Id:\n              description: \u003e-\n                The Trace-Id header reports the request's trace ID, if one was\n                generated.\n              schema:\n                type: string\n                description: Specifies the request's trace ID.\n          content:\n            application/csv:\n              schema:\n                $ref: '#/components/schemas/InfluxQLCSVResponse'\n            text/csv:\n              schema:\n                $ref: '#/components/schemas/InfluxQLCSVResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InfluxQLResponse'\n            application/x-msgpack:\n              schema:\n                type: string\n                format: binary\n        '429':\n          description: \u003e-\n            Token is temporarily over quota. The Retry-After header describes\n            when to try the read again.\n          headers:\n            Retry-After:\n              description: \u003e-\n                A non-negative decimal integer indicating the seconds to delay\n                after the response is received.\n              schema:\n                type: integer\n                format: int32\n        default:\n          description: Error processing query\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\ncomponents:\n  parameters:\n    TraceSpan:\n      in: header\n      name: Zap-Trace-Span\n      description: OpenTracing span context\n      example:\n        trace_id: '1'\n        span_id: '1'\n        baggage:\n          key: value\n      required: false\n      schema:\n        type: string\n    AuthUserV1:\n      in: query\n      name: u\n      required: false\n      schema:\n        type: string\n      description: Username.\n    AuthPassV1:\n      in: query\n      name: p\n      required: false\n      schema:\n        type: string\n      description: User token.\n  schemas:\n    InfluxQLResponse:\n      properties:\n        results:\n          type: array\n          items:\n            type: object\n            properties:\n              statement_id:\n                type: integer\n              series:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    name:\n                      type: string\n                    columns:\n                      type: array\n                      items:\n                        type: integer\n                    values:\n                      type: array\n                      items:\n                        type: array\n                        items: {}\n    InfluxQLCSVResponse:\n      type: string\n      example: \u003e\n        name,tags,time,test_field,test_tag\n        test_measurement,,1603740794286107366,1,tag_value\n        test_measurement,,1603740870053205649,2,tag_value\n        test_measurement,,1603741221085428881,3,tag_value\n    Error:\n      properties:\n        code:\n          description: Code is the machine-readable error code.\n          readOnly: true\n          type: string\n          enum:\n            - internal error\n            - not found\n            - conflict\n            - invalid\n            - unprocessable entity\n            - empty value\n            - unavailable\n            - forbidden\n            - too many requests\n            - unauthorized\n            - method not allowed\n        message:\n          readOnly: true\n          description: Message is a human-readable message.\n          type: string\n      required:\n        - code\n        - message\n    LineProtocolError:\n      properties:\n        code:\n          description: Code is the machine-readable error code.\n          readOnly: true\n          type: string\n          enum:\n            - internal error\n            - not found\n            - conflict\n            - invalid\n            - empty value\n            - unavailable\n        message:\n          readOnly: true\n          description: Message is a human-readable message.\n          type: string\n        op:\n          readOnly: true\n          description: \u003e-\n            Op describes the logical code operation during error. Useful for\n            debugging.\n          type: string\n        err:\n          readOnly: true\n          description: \u003e-\n            Err is a stack of errors that occurred during processing of the\n            request. Useful for debugging.\n          type: string\n        line:\n          readOnly: true\n          description: First line within sent body containing malformed data\n          type: integer\n          format: int32\n      required:\n        - code\n        - message\n        - op\n        - err\n    LineProtocolLengthError:\n      properties:\n        code:\n          description: Code is the machine-readable error code.\n          readOnly: true\n          type: string\n          enum:\n            - invalid\n        message:\n          readOnly: true\n          description: Message is a human-readable message.\n          type: string\n        maxLength:\n          readOnly: true\n          description: Max length in bytes for a body of line-protocol.\n          type: integer\n          format: int32\n      required:\n        - code\n        - message\n        - maxLength\n  securitySchemes:\n    TokenAuthentication:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: \u003e\n        Use the [Token\n        authentication](#section/Authentication/TokenAuthentication)\n\n        scheme to authenticate to the InfluxDB API.\n\n\n\n        In your API requests, send an `Authorization` header.\n\n        For the header value, provide the word `Token` followed by a space and\n        an InfluxDB API token.\n\n        The word `Token` is case-sensitive.\n\n\n\n        ### Syntax\n\n\n        `Authorization: Token YOUR_INFLUX_TOKEN`\n\n\n\n        For examples and more information, see the following:\n          - [`/authorizations`](#tag/Authorizations) endpoint.\n          - [Authorize API requests](/influxdb/v2.1/api-guide/api_intro/#authentication).\n          - [Manage API tokens](/influxdb/v2.1/security/tokens).\n    BasicAuthentication:\n      type: http\n      scheme: basic\n      description: \u003e\n        Use the HTTP [Basic\n        authentication](#section/Authentication/BasicAuthentication)\n\n        scheme with clients that support the InfluxDB 1.x convention of username\n        and password (that don't support the `Authorization: Token` scheme):\n\n\n\n        For examples and more information, see how to [authenticate with a\n        username and password](/influxdb/v2.1/reference/api/influxdb-1x/).\n    QuerystringAuthentication:\n      type: apiKey\n      in: query\n      name: u=\u0026p=\n      description: \u003e\n        Use the [Querystring\n        authentication](#section/Authentication/QuerystringAuthentication)\n\n        scheme with InfluxDB 1.x API parameters to provide credentials through\n        the query string.\n\n\n\n        For examples and more information, see how to [authenticate with a\n        username and password](/influxdb/v2.1/reference/api/influxdb-1x/).\nsecurity:\n  - TokenAuthentication: []\n  - BasicAuthentication: []\n  - QuerystringAuthentication: []\ntags:\n  - name: Authentication\n    description: \u003e\n      The InfluxDB 1.x API requires authentication for all requests.\n\n      InfluxDB Cloud uses InfluxDB API tokens to authenticate requests.\n\n\n\n      For more information, see the following:\n\n      - [Token authentication](#section/Authentication/TokenAuthentication)\n\n      - [Basic authentication](#section/Authentication/BasicAuthentication)\n\n      - [Querystring\n      authentication](#section/Authentication/QuerystringAuthentication)\n\n\n      \u003c!-- ReDoc-Inject: \u003csecurity-definitions\u003e --\u003e\n    x-traitTag: true\n  - Query\n  - Write\nx-tagGroups:\n  - name: Overview\n    tags:\n      - Authentication\n  - name: Data I/O endpoints\n    tags:\n      - Write\n      - Query\n  - name: All endpoints\n    tags:\n      - Query\n      - Write\n",
			"canonicalURL": "/github.com/influxdata/docs-v2@a11e3d9a66de2fa9cdd5b9c7a6a68b993a1426c9/-/blob/api-docs/v2.0/swaggerV1Compat.yml",
			"externalURLs": [
				{
					"url": "https://github.com/influxdata/docs-v2/blob/a11e3d9a66de2fa9cdd5b9c7a6a68b993a1426c9/api-docs/v2.0/swaggerV1Compat.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: json: line 1:11225: json: cannot unmarshal string into Go struct field Alias.tags of type ogen.Tag"
}