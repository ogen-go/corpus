{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Kong/kong-portal-templates"
		},
		"file": {
			"name": "callback-example.yaml",
			"size": 0,
			"path": "workspaces/default/specs/callback-example.yaml",
			"byteSize": 2108,
			"content": "openapi: 3.0.0\ninfo:\n  title: Callback Example\n  version: 1.0.0\npaths:\n  /streams:\n    post:\n      description: subscribes a client to receive out-of-band data\n      parameters:\n        - name: callbackUrl\n          in: query\n          required: true\n          description: |\n            the location where data will be sent.  Must be network accessible\n            by the source server\n          schema:\n            type: string\n            format: uri\n            example: https://example.com\n      responses:\n        '201':\n          description: subscription successfully created\n          content:\n            application/json:\n              schema:\n                description: subscription information\n                required:\n                  - subscriptionId\n                properties:\n                  subscriptionId:\n                    description: this unique identifier allows management of the subscription\n                    type: string\n                    example: deadbeef-fb09-4ef7-887e-84e648214436\n      callbacks:\n        # the name `onData` is a convenience locator\n        onData:\n          $ref: '#/components/callbacks/onData'\ncomponents:\n  callbacks:\n    onData:\n      # when data is sent, it will be sent to the `callbackUrl` provided\n      # when making the subscription PLUS the suffix `/data`\n      '{$request.query.callbackUrl}/data':\n        post:\n          requestBody:\n            description: subscription payload\n            content:\n              application/json:\n                schema:\n                  properties:\n                    timestamp:\n                      type: string\n                      format: date-time\n                    userData:\n                      type: string\n          responses:\n            '202':\n              description: |\n                Your server implementation should return this HTTP status code\n                if the data was received successfully\n            '204':\n              description: |\n                Your server should return this HTTP status code if no longer interested\n                in further updates\n\n",
			"canonicalURL": "/github.com/Kong/kong-portal-templates@0b566ab65e8099f5e7d5e8a84f7061877500020f/-/blob/workspaces/default/specs/callback-example.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Kong/kong-portal-templates/blob/0b566ab65e8099f5e7d5e8a84f7061877500020f/workspaces/default/specs/callback-example.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 1: cannot unmarshal !!str `#/compo...` into ogen.PathItem"
}