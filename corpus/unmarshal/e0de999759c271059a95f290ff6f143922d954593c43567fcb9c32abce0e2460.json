{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ProcessMaker/processmaker"
		},
		"file": {
			"name": "api-docs.json",
			"size": 0,
			"path": "storage/api-docs/api-docs.json",
			"byteSize": 296542,
			"content": "{\n    \"openapi\": \"3.0.0\",\n    \"info\": {\n        \"title\": \"ProcessMaker API\",\n        \"description\": \"\",\n        \"contact\": {\n            \"email\": \"info@processmaker.com\"\n        },\n        \"license\": {\n            \"name\": \"Apache 2.0\",\n            \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n        },\n        \"version\": \"1.0.0\"\n    },\n    \"servers\": [\n        {\n            \"url\": \"/api/1.0\"\n        }\n    ],\n    \"paths\": {\n        \"/collections\": {\n            \"get\": {\n                \"tags\": [\n                    \"Collections\"\n                ],\n                \"summary\": \"Returns all collections that the user has access to\",\n                \"description\": \"Get a list of Collections.\",\n                \"operationId\": \"getCollections\",\n                \"parameters\": [\n                    {\n                        \"$ref\": \"#/components/parameters/filter\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/order_by\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/order_direction\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/per_page\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/include\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"list of collections\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"type\": \"array\",\n                                            \"items\": {\n                                                \"$ref\": \"#/components/schemas/collections\"\n                                            }\n                                        },\n                                        \"meta\": {\n                                            \"$ref\": \"#/components/schemas/metadata\"\n                                        }\n                                    },\n                                    \"type\": \"object\"\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"post\": {\n                \"tags\": [\n                    \"Collections\"\n                ],\n                \"summary\": \"Save a new collections\",\n                \"description\": \"Create a new Collection.\",\n                \"operationId\": \"createCollection\",\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/collectionsEditable\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/collections\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/collections/{collection_id}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Collections\"\n                ],\n                \"summary\": \"Get single collections by ID\",\n                \"description\": \"Get a single Collection.\",\n                \"operationId\": \"getCollectionById\",\n                \"parameters\": [\n                    {\n                        \"name\": \"collection_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of collection to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successfully found the collections\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/collections\"\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"tags\": [\n                    \"Collections\"\n                ],\n                \"summary\": \"Update a collection\",\n                \"description\": \"Update a Collection.\",\n                \"operationId\": \"updateCollection\",\n                \"parameters\": [\n                    {\n                        \"name\": \"collection_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of collection to update\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/collectionsEditable\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"success\"\n                    }\n                }\n            },\n            \"delete\": {\n                \"tags\": [\n                    \"Collections\"\n                ],\n                \"summary\": \"Delete a collection\",\n                \"description\": \"Delete a Collection.\",\n                \"operationId\": \"deleteCollection\",\n                \"parameters\": [\n                    {\n                        \"name\": \"collection_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of collection to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"success\"\n                    }\n                }\n            }\n        },\n        \"/collections/{collection_id}/export\": {\n            \"post\": {\n                \"tags\": [\n                    \"Screens\"\n                ],\n                \"summary\": \"Trigger export collections job\",\n                \"description\": \"Export the specified collection.\",\n                \"operationId\": \"exportCollection\",\n                \"parameters\": [\n                    {\n                        \"name\": \"collection_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of the collection to export\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"202\": {\n                        \"description\": \"success\"\n                    }\n                }\n            }\n        },\n        \"/collections/import\": {\n            \"post\": {\n                \"tags\": [\n                    \"Collections\"\n                ],\n                \"summary\": \"Import a new collection\",\n                \"description\": \"Import the specified collection.\",\n                \"operationId\": \"importCollection\",\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"multipart/form-data\": {\n                            \"schema\": {\n                                \"required\": [\n                                    \"file\"\n                                ],\n                                \"properties\": {\n                                    \"file\": {\n                                        \"description\": \"file to upload\",\n                                        \"type\": \"file\",\n                                        \"format\": \"file\"\n                                    }\n                                },\n                                \"type\": \"object\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/collections\"\n                                }\n                            }\n                        }\n                    },\n                    \"200\": {\n                        \"description\": \"success\"\n                    }\n                }\n            }\n        },\n        \"/collections/{collection_id}/truncate\": {\n            \"delete\": {\n                \"tags\": [\n                    \"Collections\"\n                ],\n                \"summary\": \"Deletes all records in a collection\",\n                \"description\": \"Truncate a Collection.\",\n                \"operationId\": \"truncateCollection\",\n                \"parameters\": [\n                    {\n                        \"name\": \"collection_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of collection to truncate\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"success\"\n                    }\n                }\n            }\n        },\n        \"/collections/{collection_id}/records\": {\n            \"get\": {\n                \"tags\": [\n                    \"Collections\"\n                ],\n                \"summary\": \"Returns all records\",\n                \"description\": \"Get the list of records of a collection.\",\n                \"operationId\": \"getRecords\",\n                \"parameters\": [\n                    {\n                        \"name\": \"collection_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of collection to get records for\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"pmql\",\n                        \"in\": \"query\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/per_page\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/filter\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/order_by\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/order_direction\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/include\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"list of records of a collection\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"type\": \"array\",\n                                            \"items\": {\n                                                \"$ref\": \"#/components/schemas/records\"\n                                            }\n                                        },\n                                        \"meta\": {\n                                            \"$ref\": \"#/components/schemas/metadata\"\n                                        }\n                                    },\n                                    \"type\": \"object\"\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"post\": {\n                \"tags\": [\n                    \"Collections\"\n                ],\n                \"summary\": \"Save a new record in a collection\",\n                \"description\": \"Create a new record in a Collection.\",\n                \"operationId\": \"createRecord\",\n                \"parameters\": [\n                    {\n                        \"name\": \"collection_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of the collection\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/recordsEditable\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/records\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/collections/{collection_id}/records/{record_id}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Collections\"\n                ],\n                \"summary\": \"Get single record of a collection\",\n                \"description\": \"Get a single record of a Collection.\",\n                \"operationId\": \"getRecordById\",\n                \"parameters\": [\n                    {\n                        \"name\": \"collection_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of the collection\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"record_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of the record to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successfully found the record\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/records\"\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"tags\": [\n                    \"Collections\"\n                ],\n                \"summary\": \"Update a record\",\n                \"description\": \"Update a record in a Collection.\",\n                \"operationId\": \"updateRecord\",\n                \"parameters\": [\n                    {\n                        \"name\": \"collection_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of collection\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"record_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of the record \",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/recordsEditable\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"success\"\n                    }\n                }\n            },\n            \"delete\": {\n                \"tags\": [\n                    \"Collections\"\n                ],\n                \"summary\": \"Delete a collection record\",\n                \"description\": \"Delete a record of a Collection.\",\n                \"operationId\": \"deleteRecord\",\n                \"parameters\": [\n                    {\n                        \"name\": \"collection_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of collection\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"record_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of record in collection\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"success\"\n                    }\n                }\n            },\n            \"patch\": {\n                \"tags\": [\n                    \"Collections\"\n                ],\n                \"summary\": \"Partial update of a record\",\n                \"description\": \"Implements a partial update of a record in a Collection.\",\n                \"operationId\": \"patchRecord\",\n                \"parameters\": [\n                    {\n                        \"name\": \"collection_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of collection \",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"record_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of the record \",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/collectionsEditable\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"success\"\n                    }\n                }\n            }\n        },\n        \"/data_source_categories\": {\n            \"get\": {\n                \"tags\": [\n                    \"DataSourcesCategories\"\n                ],\n                \"summary\": \"Returns all Data Connectors categories that the user has access to\",\n                \"description\": \"Display a listing of the Data Connector Categories.\",\n                \"operationId\": \"getDataSourceCategories\",\n                \"parameters\": [\n                    {\n                        \"$ref\": \"#/components/parameters/filter\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/order_by\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/order_direction\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/per_page\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"list of Data Connectors categories\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"type\": \"array\",\n                                            \"items\": {\n                                                \"$ref\": \"#/components/schemas/DataSourceCategory\"\n                                            }\n                                        },\n                                        \"meta\": {\n                                            \"type\": \"object\",\n                                            \"allOf\": [\n                                                {\n                                                    \"$ref\": \"#/components/schemas/metadata\"\n                                                }\n                                            ]\n                                        }\n                                    },\n                                    \"type\": \"object\"\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"post\": {\n                \"tags\": [\n                    \"DataSourcesCategories\"\n                ],\n                \"summary\": \"Save a new Data Connector Category\",\n                \"description\": \"Store a newly created Data Connector Category in storage\",\n                \"operationId\": \"createDataSourceCategory\",\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/dataSourceCategoryEditable\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/DataSourceCategory\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/data_source_categories/{data_source_category_id}\": {\n            \"get\": {\n                \"tags\": [\n                    \"DataSourcesCategories\"\n                ],\n                \"summary\": \"Get single Data Connector category by ID\",\n                \"description\": \"Display the specified data Source category.\",\n                \"operationId\": \"getDatasourceCategoryById\",\n                \"parameters\": [\n                    {\n                        \"name\": \"data_source_category_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of Data Connector category to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successfully found the Data Connector\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/DataSourceCategory\"\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"tags\": [\n                    \"DataSourcesCategories\"\n                ],\n                \"summary\": \"Update a Data Connector Category\",\n                \"description\": \"Updates the current element\",\n                \"operationId\": \"updateDatasourceCategory\",\n                \"parameters\": [\n                    {\n                        \"name\": \"data_source_category_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of Data Connector category to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/dataSourceCategoryEditable\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/DataSourceCategory\"\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"delete\": {\n                \"tags\": [\n                    \"DataSourcesCategories\"\n                ],\n                \"summary\": \"Delete a Data Connector category\",\n                \"description\": \"Remove the specified resource from storage.\",\n                \"operationId\": \"deleteDataSourceCategory\",\n                \"parameters\": [\n                    {\n                        \"name\": \"data_source_category_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of Data Connector category to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"success\"\n                    }\n                }\n            }\n        },\n        \"/data_sources\": {\n            \"get\": {\n                \"tags\": [\n                    \"DataSources\"\n                ],\n                \"summary\": \"Returns all Data Connectors that the user has access to\",\n                \"description\": \"Get the list of records of a Data Connector\",\n                \"operationId\": \"getDataSources\",\n                \"parameters\": [\n                    {\n                        \"$ref\": \"#/components/parameters/filter\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/order_by\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/order_direction\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/per_page\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/include\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"list of Data Connectors\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"type\": \"array\",\n                                            \"items\": {\n                                                \"$ref\": \"#/components/schemas/dataSource\"\n                                            }\n                                        },\n                                        \"meta\": {\n                                            \"type\": \"object\",\n                                            \"allOf\": [\n                                                {\n                                                    \"$ref\": \"#/components/schemas/metadata\"\n                                                }\n                                            ]\n                                        }\n                                    },\n                                    \"type\": \"object\"\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"post\": {\n                \"tags\": [\n                    \"DataSources\"\n                ],\n                \"summary\": \"Save a new Data Connector\",\n                \"description\": \"Create a new Data Connector.\",\n                \"operationId\": \"createDataSource\",\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/dataSourceEditable\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/dataSource\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/data_sources/data_source_id\": {\n            \"get\": {\n                \"tags\": [\n                    \"DataSources\"\n                ],\n                \"summary\": \"Get single Data Connector by ID\",\n                \"description\": \"Get a single Data Connector.\",\n                \"operationId\": \"getDataSourceById\",\n                \"parameters\": [\n                    {\n                        \"name\": \"data_source_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of Data Connector to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successfully found the Data Connector\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/dataSource\"\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"tags\": [\n                    \"DataSources\"\n                ],\n                \"summary\": \"Update a Data Connector\",\n                \"description\": \"Update a Data Connector.\",\n                \"operationId\": \"updateDataSource\",\n                \"parameters\": [\n                    {\n                        \"name\": \"data_source_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of Data Connector to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/dataSourceEditable\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/dataSource\"\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"delete\": {\n                \"tags\": [\n                    \"DataSources\"\n                ],\n                \"summary\": \"Delete a Data Connector\",\n                \"description\": \"Delete a Data Connector.\",\n                \"operationId\": \"deleteDataSource\",\n                \"parameters\": [\n                    {\n                        \"name\": \"data_source_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of Data Connector to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/dataSource\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/data_sources/data_source_id/test\": {\n            \"post\": {\n                \"tags\": [\n                    \"DataSources\"\n                ],\n                \"summary\": \"Send a Data Connector request\",\n                \"description\": \"Send a Data Connector request.\",\n                \"operationId\": \"sendDataSource\",\n                \"parameters\": [\n                    {\n                        \"name\": \"data_source_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of Data Connector to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/dataSourceEditable\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/dataSource\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/requests/{request_id}/data_sources/{data_source_id}\": {\n            \"post\": {\n                \"tags\": [\n                    \"DataSources\"\n                ],\n                \"summary\": \"execute Data Source\",\n                \"description\": \"Execute a data Source endpoint\",\n                \"operationId\": \"executeDataSourceForRequest\",\n                \"parameters\": [\n                    {\n                        \"name\": \"request_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of the request in whose context the datasource will be executed\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"data_source_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of DataSource to be run\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"properties\": {\n                                    \"config\": {\n                                        \"$ref\": \"#/components/schemas/DataSourceCallParameters\"\n                                    }\n                                },\n                                \"type\": \"object\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/DataSourceResponse\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/requests/data_sources/{data_source_id}\": {\n            \"post\": {\n                \"tags\": [\n                    \"DataSources\"\n                ],\n                \"summary\": \"execute Data Source\",\n                \"operationId\": \"executeDataSource\",\n                \"parameters\": [\n                    {\n                        \"name\": \"data_source_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of DataSource to be run\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"properties\": {\n                                    \"config\": {\n                                        \"$ref\": \"#/components/schemas/DataSourceCallParameters\"\n                                    },\n                                    \"data\": {\n                                        \"type\": \"object\"\n                                    }\n                                },\n                                \"type\": \"object\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/DataSourceResponse\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/saved-searches/{saved_search_id}/charts\": {\n            \"get\": {\n                \"tags\": [\n                    \"SavedSearchCharts\"\n                ],\n                \"summary\": \"Returns all saved search charts that the user has access to\",\n                \"description\": \"Get a list of SavedSearchCharts.\",\n                \"operationId\": \"getSavedSearchCharts\",\n                \"parameters\": [\n                    {\n                        \"$ref\": \"#/components/parameters/filter\"\n                    },\n                    {\n                        \"name\": \"type\",\n                        \"in\": \"query\",\n                        \"description\": \"Only return saved searches by type\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                                \"request\",\n                                \"task\",\n                                \"collection\"\n                            ]\n                        }\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/order_by\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/order_direction\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/per_page\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/include\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"list of saved search charts\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"type\": \"array\",\n                                            \"items\": {\n                                                \"$ref\": \"#/components/schemas/SavedSearchChart\"\n                                            }\n                                        },\n                                        \"meta\": {\n                                            \"type\": \"object\",\n                                            \"allOf\": [\n                                                {\n                                                    \"$ref\": \"#/components/schemas/metadata\"\n                                                }\n                                            ]\n                                        }\n                                    },\n                                    \"type\": \"object\"\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"tags\": [\n                    \"SavedSearchCharts\"\n                ],\n                \"summary\": \"Update several saved search charts at once\",\n                \"description\": \"Batch update several SavedSearchCharts.\",\n                \"operationId\": \"batchUpdateSavedSearchCharts\",\n                \"parameters\": [\n                    {\n                        \"name\": \"saved_search_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of saved search to which these charts will be saved\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"type\": \"array\",\n                                \"items\": {\n                                    \"$ref\": \"#/components/schemas/SavedSearchChart\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"success\"\n                    }\n                }\n            },\n            \"post\": {\n                \"tags\": [\n                    \"SavedSearchCharts\"\n                ],\n                \"summary\": \"Save a new saved search chart\",\n                \"description\": \"Create a new SavedSearchChart.\",\n                \"operationId\": \"createSavedSearchChart\",\n                \"parameters\": [\n                    {\n                        \"name\": \"saved_search_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of saved search to which this chart will be saved\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/SavedSearchChartEditable\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/SavedSearchChart\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/saved-searches/charts/{chart_id}\": {\n            \"get\": {\n                \"tags\": [\n                    \"SavedSearchCharts\"\n                ],\n                \"summary\": \"Get single saved search chart by ID\",\n                \"description\": \"Get a single SavedSearchChart.\",\n                \"operationId\": \"getSavedSearchChartById\",\n                \"parameters\": [\n                    {\n                        \"name\": \"chart_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of chart to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successfully found the saved search chart\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/SavedSearchChart\"\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"tags\": [\n                    \"SavedSearchCharts\"\n                ],\n                \"summary\": \"Update a saved search chart\",\n                \"description\": \"Update a SavedSearchChart.\",\n                \"operationId\": \"updateSavedSearchChart\",\n                \"parameters\": [\n                    {\n                        \"name\": \"chart_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of chart to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/SavedSearchChartEditable\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/SavedSearchChart\"\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"delete\": {\n                \"tags\": [\n                    \"SavedSearchCharts\"\n                ],\n                \"summary\": \"Delete a saved search chart\",\n                \"description\": \"Delete a SavedSearchChart.\",\n                \"operationId\": \"deleteSavedSearchChart\",\n                \"parameters\": [\n                    {\n                        \"name\": \"chart_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of chart to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"success\"\n                    }\n                }\n            }\n        },\n        \"/saved-searches/charts/{chart_id}/fields\": {\n            \"get\": {\n                \"tags\": [\n                    \"SavedSearchCharts\"\n                ],\n                \"summary\": \"Get available chart fields for a Saved Search by ID\",\n                \"description\": \"Get available chart fields for a Saved Search.\",\n                \"operationId\": \"getSavedSearchFieldsById\",\n                \"parameters\": [\n                    {\n                        \"name\": \"chart_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of Saved Search to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successfully found the saved search\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/SavedSearch\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/saved-searches/reports\": {\n            \"post\": {\n                \"tags\": [\n                    \"Reports\"\n                ],\n                \"summary\": \"Save a new report\",\n                \"operationId\": \"createReport\",\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/ReportEditable\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Report\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/saved-searches/reports/{reportId}\": {\n            \"put\": {\n                \"tags\": [\n                    \"SavedSearches\"\n                ],\n                \"summary\": \"Update a saved search\",\n                \"description\": \"Update a Report\",\n                \"operationId\": \"updateReport\",\n                \"parameters\": [\n                    {\n                        \"name\": \"reportId\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of report\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/SavedSearchEditable\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/SavedSearch\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/saved-searches\": {\n            \"get\": {\n                \"tags\": [\n                    \"SavedSearches\"\n                ],\n                \"summary\": \"Returns all saved searches that the user has access to\",\n                \"description\": \"Get a list of SavedSearches.\",\n                \"operationId\": \"getSavedSearches\",\n                \"parameters\": [\n                    {\n                        \"$ref\": \"#/components/parameters/filter\"\n                    },\n                    {\n                        \"name\": \"type\",\n                        \"in\": \"query\",\n                        \"description\": \"Only return saved searches by type\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                                \"request\",\n                                \"task\",\n                                \"collection\"\n                            ]\n                        }\n                    },\n                    {\n                        \"name\": \"subset\",\n                        \"in\": \"query\",\n                        \"description\": \"Only return saved searches that are yours or those that have been shared with you\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                                \"mine\",\n                                \"shared\"\n                            ]\n                        }\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/order_by\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/order_direction\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/per_page\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/include\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"list of saved searches\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"type\": \"array\",\n                                            \"items\": {\n                                                \"$ref\": \"#/components/schemas/SavedSearch\"\n                                            }\n                                        },\n                                        \"meta\": {\n                                            \"type\": \"object\",\n                                            \"allOf\": [\n                                                {\n                                                    \"$ref\": \"#/components/schemas/metadata\"\n                                                }\n                                            ]\n                                        }\n                                    },\n                                    \"type\": \"object\"\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"post\": {\n                \"tags\": [\n                    \"SavedSearches\"\n                ],\n                \"summary\": \"Save a new saved search\",\n                \"description\": \"Create a new SavedSearch.\",\n                \"operationId\": \"createSavedSearch\",\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/SavedSearchEditable\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/SavedSearch\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/saved-searches/{savedSearchId}\": {\n            \"get\": {\n                \"tags\": [\n                    \"SavedSearches\"\n                ],\n                \"summary\": \"Get single saved searches by ID\",\n                \"description\": \"Get a single SavedSearch.\",\n                \"operationId\": \"getSavedSearchById\",\n                \"parameters\": [\n                    {\n                        \"name\": \"savedSearchId\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of saved search to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successfully found the saved search\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/SavedSearch\"\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"tags\": [\n                    \"SavedSearches\"\n                ],\n                \"summary\": \"Update a saved search\",\n                \"description\": \"Update a SavedSearch.\",\n                \"operationId\": \"updateSavedSearch\",\n                \"parameters\": [\n                    {\n                        \"name\": \"savedSearchId\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of saved search to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/SavedSearchEditable\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/SavedSearch\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/saved-searches/{savedSearchId}/columns\": {\n            \"get\": {\n                \"tags\": [\n                    \"SavedSearches\"\n                ],\n                \"summary\": \"Returns all columns associated with a Saved Search\",\n                \"description\": \"Display a listing of columns.\",\n                \"operationId\": \"getSavedSearchColumns\",\n                \"parameters\": [\n                    {\n                        \"name\": \"savedSearchId\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of saved search to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"include\",\n                        \"in\": \"query\",\n                        \"description\": \"Include specific categories. Comma separated list.\",\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"type\": \"string\",\n                                \"enum\": [\n                                    \"current\",\n                                    \"default\",\n                                    \"available\",\n                                    \"data\"\n                                ]\n                            },\n                            \"uniqueItems\": false\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Categorized list of columns\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"properties\": {\n                                        \"current\": {\n                                            \"type\": \"array\",\n                                            \"items\": {\n                                                \"$ref\": \"#/components/schemas/columns\"\n                                            }\n                                        },\n                                        \"default\": {\n                                            \"type\": \"array\",\n                                            \"items\": {\n                                                \"$ref\": \"#/components/schemas/columns\"\n                                            }\n                                        },\n                                        \"available\": {\n                                            \"type\": \"array\",\n                                            \"items\": {\n                                                \"$ref\": \"#/components/schemas/columns\"\n                                            }\n                                        },\n                                        \"data\": {\n                                            \"type\": \"array\",\n                                            \"items\": {\n                                                \"$ref\": \"#/components/schemas/columns\"\n                                            }\n                                        }\n                                    },\n                                    \"type\": \"object\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/saved-searches/{savedSearchId}/users\": {\n            \"get\": {\n                \"tags\": [\n                    \"Users\"\n                ],\n                \"summary\": \"Returns all users\",\n                \"description\": \"Display a listing of the resource.\",\n                \"operationId\": \"getSavedSearchUsers\",\n                \"parameters\": [\n                    {\n                        \"$ref\": \"#/components/parameters/filter\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/order_by\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/order_direction\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/per_page\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/include\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"list of users\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"type\": \"array\",\n                                            \"items\": {\n                                                \"$ref\": \"#/components/schemas/users\"\n                                            }\n                                        },\n                                        \"meta\": {\n                                            \"$ref\": \"#/components/schemas/metadata\"\n                                        }\n                                    },\n                                    \"type\": \"object\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/saved-searches/{savedSearchId}/groups\": {\n            \"get\": {\n                \"tags\": [\n                    \"Groups\"\n                ],\n                \"summary\": \"Returns all groups that the user has access to\",\n                \"description\": \"Display a listing of the resource.\",\n                \"operationId\": \"getSavedSearchGroups\",\n                \"parameters\": [\n                    {\n                        \"$ref\": \"#/components/parameters/order_by\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/order_direction\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/per_page\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/include\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"list of groups\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"type\": \"array\",\n                                            \"items\": {\n                                                \"$ref\": \"#/components/schemas/groups\"\n                                            }\n                                        },\n                                        \"meta\": {\n                                            \"$ref\": \"#/components/schemas/metadata\"\n                                        }\n                                    },\n                                    \"type\": \"object\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/saved-searches/{saved_search_id}\": {\n            \"delete\": {\n                \"tags\": [\n                    \"SavedSearches\"\n                ],\n                \"summary\": \"Delete a saved search\",\n                \"description\": \"Delete a SavedSearch.\",\n                \"operationId\": \"deleteSavedSearch\",\n                \"parameters\": [\n                    {\n                        \"name\": \"saved_search_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of saved search to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"success\"\n                    }\n                }\n            }\n        },\n        \"/saved-searches/icons\": {\n            \"get\": {\n                \"tags\": [\n                    \"SavedSearches\"\n                ],\n                \"summary\": \"Returns all icons for saved searches\",\n                \"description\": \"Get a list of icons available for SavedSearches.\",\n                \"operationId\": \"getSavedSearchesIcons\",\n                \"parameters\": [\n                    {\n                        \"$ref\": \"#/components/parameters/per_page\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"list of icons for saved searches\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"type\": \"array\",\n                                            \"items\": {\n                                                \"$ref\": \"#/components/schemas/SavedSearchIcon\"\n                                            }\n                                        },\n                                        \"meta\": {\n                                            \"type\": \"object\",\n                                            \"allOf\": [\n                                                {\n                                                    \"$ref\": \"#/components/schemas/metadata\"\n                                                }\n                                            ]\n                                        }\n                                    },\n                                    \"type\": \"object\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/customize-ui\": {\n            \"post\": {\n                \"tags\": [\n                    \"CssSettings\"\n                ],\n                \"summary\": \"Create or update a new setting\",\n                \"description\": \"Create a new Settings css-override\",\n                \"operationId\": \"updateCssSetting\",\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"properties\": {\n                                    \"variables\": {\n                                        \"type\": \"string\"\n                                    },\n                                    \"sansSerifFont\": {\n                                        \"type\": \"string\"\n                                    }\n                                },\n                                \"type\": \"object\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/settings\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/environment_variables\": {\n            \"get\": {\n                \"tags\": [\n                    \"Environment Variables\"\n                ],\n                \"summary\": \"Returns all environmentVariables that the user has access to. For security, values are not included.\",\n                \"description\": \"Fetch a collection of variables based on paged request and filter if provided\",\n                \"operationId\": \"getEnvironmentVariables\",\n                \"parameters\": [\n                    {\n                        \"$ref\": \"#/components/parameters/filter\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/order_by\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/order_direction\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/per_page\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/include\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"list of environmentVariables\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"type\": \"array\",\n                                            \"items\": {\n                                                \"$ref\": \"#/components/schemas/EnvironmentVariable\"\n                                            }\n                                        },\n                                        \"meta\": {\n                                            \"type\": \"object\"\n                                        }\n                                    },\n                                    \"type\": \"object\"\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"post\": {\n                \"tags\": [\n                    \"Environment Variables\"\n                ],\n                \"summary\": \"Create a new environment variable\",\n                \"description\": \"Creates a new global Environment Variable in the system\",\n                \"operationId\": \"createEnvironmentVariable\",\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/EnvironmentVariableEditable\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/EnvironmentVariable\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/environment_variables/{environment_variable_id}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Environment Variables\"\n                ],\n                \"summary\": \"Get an environment variable by id. For security, the value is not included.\",\n                \"description\": \"Return an environment variable instance\\nUsing implicit model binding, will automatically return 404 if variable now found\",\n                \"operationId\": \"getEnvironmentVariableById\",\n                \"parameters\": [\n                    {\n                        \"name\": \"environment_variable_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of environment_variables to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/EnvironmentVariable\"\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"tags\": [\n                    \"Environment Variables\"\n                ],\n                \"summary\": \"Update an environment variable\",\n                \"description\": \"Update an environment variable\",\n                \"operationId\": \"updateEnvironmentVariable\",\n                \"parameters\": [\n                    {\n                        \"name\": \"environment_variable_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of environment variables to update\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/EnvironmentVariableEditable\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/EnvironmentVariable\"\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"delete\": {\n                \"tags\": [\n                    \"Environment Variables\"\n                ],\n                \"summary\": \"Delete an environment variable\",\n                \"operationId\": \"deleteEnvironmentVariable\",\n                \"parameters\": [\n                    {\n                        \"name\": \"environment_variable_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of environment_variables to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"success\"\n                    }\n                }\n            }\n        },\n        \"/files\": {\n            \"get\": {\n                \"tags\": [\n                    \"Files\"\n                ],\n                \"summary\": \"Returns the list of files\",\n                \"description\": \"Display a listing of the resource.\",\n                \"operationId\": \"getFiles\",\n                \"parameters\": [\n                    {\n                        \"$ref\": \"#/components/parameters/filter\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/order_by\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/order_direction\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/per_page\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"list of files\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"type\": \"array\",\n                                            \"items\": {\n                                                \"$ref\": \"#/components/schemas/media\"\n                                            }\n                                        },\n                                        \"meta\": {\n                                            \"$ref\": \"#/components/schemas/metadata\"\n                                        }\n                                    },\n                                    \"type\": \"object\"\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"post\": {\n                \"tags\": [\n                    \"Files\"\n                ],\n                \"summary\": \"Save a new media file. Note: To upload files to a request, use createRequestFile in the RequestFile API\",\n                \"description\": \"Store a newly created resource in storage.\",\n                \"operationId\": \"createFile\",\n                \"parameters\": [\n                    {\n                        \"name\": \"model_id\",\n                        \"in\": \"query\",\n                        \"description\": \"ID of the model to which the file will be associated\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    },\n                    {\n                        \"name\": \"model\",\n                        \"in\": \"query\",\n                        \"description\": \"Full namespaced class of the model to associate\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"data_name\",\n                        \"in\": \"query\",\n                        \"description\": \"Name of the variable used in a request\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"collection\",\n                        \"in\": \"query\",\n                        \"description\": \"Media collection name. For requests, use 'default'\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"multipart/form-data\": {\n                            \"schema\": {\n                                \"properties\": {\n                                    \"file\": {\n                                        \"description\": \"save a new media file\",\n                                        \"type\": \"string\",\n                                        \"format\": \"binary\"\n                                    }\n                                },\n                                \"type\": \"object\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"properties\": {\n                                        \"id\": {\n                                            \"type\": \"string\"\n                                        },\n                                        \"model_id\": {\n                                            \"type\": \"string\"\n                                        },\n                                        \"file_name\": {\n                                            \"type\": \"string\"\n                                        },\n                                        \"mime_type\": {\n                                            \"type\": \"string\"\n                                        }\n                                    },\n                                    \"type\": \"object\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/files/{file_id}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Files\"\n                ],\n                \"summary\": \"Get the metadata of a file. To actually fetch the file see Get File Contents\",\n                \"description\": \"Get a single media file.\",\n                \"operationId\": \"getFileById\",\n                \"parameters\": [\n                    {\n                        \"name\": \"file_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of the file to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successfully found the file\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/media\"\n                                }\n                            }\n                        }\n                    },\n                    \"404\": {\n                        \"$ref\": \"#/components/responses/404\"\n                    }\n                }\n            },\n            \"delete\": {\n                \"tags\": [\n                    \"Files\"\n                ],\n                \"summary\": \"Delete a media file\",\n                \"description\": \"Remove the specified resource from storage.\",\n                \"operationId\": \"deleteFile\",\n                \"parameters\": [\n                    {\n                        \"name\": \"file_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of the file\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"success\"\n                    },\n                    \"404\": {\n                        \"$ref\": \"#/components/responses/404\"\n                    }\n                }\n            }\n        },\n        \"/files/{file_id}/contents\": {\n            \"get\": {\n                \"tags\": [\n                    \"Files\"\n                ],\n                \"summary\": \"Get the contents of a file\",\n                \"description\": \"Display the specified resource.\",\n                \"operationId\": \"getFileContentsById\",\n                \"parameters\": [\n                    {\n                        \"name\": \"file_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of the file to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"File stream\",\n                        \"content\": {\n                            \"application/octet-stream\": {\n                                \"schema\": {\n                                    \"type\": \"string\",\n                                    \"format\": \"binary\"\n                                }\n                            }\n                        }\n                    },\n                    \"404\": {\n                        \"$ref\": \"#/components/responses/404\"\n                    }\n                }\n            }\n        },\n        \"/groups\": {\n            \"get\": {\n                \"tags\": [\n                    \"Groups\"\n                ],\n                \"summary\": \"Returns all groups that the user has access to\",\n                \"description\": \"Display a listing of the resource.\",\n                \"operationId\": \"getGroups\",\n                \"parameters\": [\n                    {\n                        \"$ref\": \"#/components/parameters/status\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/filter\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/order_by\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/order_direction\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/per_page\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/include\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"list of groups\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"type\": \"array\",\n                                            \"items\": {\n                                                \"$ref\": \"#/components/schemas/groups\"\n                                            }\n                                        },\n                                        \"meta\": {\n                                            \"$ref\": \"#/components/schemas/metadata\"\n                                        }\n                                    },\n                                    \"type\": \"object\"\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"post\": {\n                \"tags\": [\n                    \"Groups\"\n                ],\n                \"summary\": \"Save a new group\",\n                \"description\": \"Store a newly created resource in storage.\",\n                \"operationId\": \"createGroup\",\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/groupsEditable\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/groups\"\n                                }\n                            }\n                        }\n                    },\n                    \"422\": {\n                        \"$ref\": \"#/components/responses/422\"\n                    }\n                }\n            }\n        },\n        \"/groups/{group_id}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Groups\"\n                ],\n                \"summary\": \"Get single group by ID\",\n                \"description\": \"Display the specified resource.\",\n                \"operationId\": \"getGroupById\",\n                \"parameters\": [\n                    {\n                        \"name\": \"group_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of group to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successfully found the group\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/groups\"\n                                }\n                            }\n                        }\n                    },\n                    \"404\": {\n                        \"$ref\": \"#/components/responses/404\"\n                    }\n                }\n            },\n            \"put\": {\n                \"tags\": [\n                    \"Groups\"\n                ],\n                \"summary\": \"Update a group\",\n                \"description\": \"Update a user\",\n                \"operationId\": \"updateGroup\",\n                \"parameters\": [\n                    {\n                        \"name\": \"group_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of group to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/groupsEditable\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"success\"\n                    },\n                    \"404\": {\n                        \"$ref\": \"#/components/responses/404\"\n                    }\n                }\n            },\n            \"delete\": {\n                \"tags\": [\n                    \"Groups\"\n                ],\n                \"summary\": \"Delete a group\",\n                \"description\": \"Delete a user\",\n                \"operationId\": \"deleteGroup\",\n                \"parameters\": [\n                    {\n                        \"name\": \"group_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of group to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"success\"\n                    },\n                    \"404\": {\n                        \"$ref\": \"#/components/responses/404\"\n                    }\n                }\n            }\n        },\n        \"/groups/{group_id}/users\": {\n            \"get\": {\n                \"tags\": [\n                    \"Groups\"\n                ],\n                \"summary\": \"Returns all users of a group\",\n                \"description\": \"Display the list of users in a group\",\n                \"operationId\": \"getGroupUsers\",\n                \"parameters\": [\n                    {\n                        \"name\": \"group_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of group\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/filter\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/order_direction\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/per_page\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"list of members of a group\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"type\": \"array\",\n                                            \"items\": {\n                                                \"$ref\": \"#/components/schemas/users\"\n                                            }\n                                        },\n                                        \"meta\": {\n                                            \"$ref\": \"#/components/schemas/metadata\"\n                                        }\n                                    },\n                                    \"type\": \"object\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/groups/{group_id}/groups\": {\n            \"get\": {\n                \"tags\": [\n                    \"Groups\"\n                ],\n                \"summary\": \"Returns all users of a group\",\n                \"description\": \"Display the list of groups in a group\",\n                \"operationId\": \"getGroupGroupss\",\n                \"parameters\": [\n                    {\n                        \"name\": \"group_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of group\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/filter\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/order_direction\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/per_page\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"list of members of a group\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"type\": \"array\",\n                                            \"items\": {\n                                                \"$ref\": \"#/components/schemas/groups\"\n                                            }\n                                        },\n                                        \"meta\": {\n                                            \"$ref\": \"#/components/schemas/metadata\"\n                                        }\n                                    },\n                                    \"type\": \"object\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/group_members\": {\n            \"get\": {\n                \"tags\": [\n                    \"Group Members\"\n                ],\n                \"summary\": \"Returns all groups for a given member\",\n                \"description\": \"Display a listing of the resource.\",\n                \"operationId\": \"getGroupMembers\",\n                \"parameters\": [\n                    {\n                        \"$ref\": \"#/components/parameters/member_id\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/order_by\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/order_direction\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/per_page\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"list of group_members\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"type\": \"array\",\n                                            \"items\": {\n                                                \"$ref\": \"#/components/schemas/groupMembers\"\n                                            }\n                                        },\n                                        \"meta\": {\n                                            \"$ref\": \"#/components/schemas/metadata\"\n                                        }\n                                    },\n                                    \"type\": \"object\"\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"post\": {\n                \"tags\": [\n                    \"Group Members\"\n                ],\n                \"summary\": \"Save a new group member\",\n                \"description\": \"Store a newly created resource in storage.\",\n                \"operationId\": \"createGroupMember\",\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/groupMembersEditable\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/createGroupMembers\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/group_members/{group_member_id}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Group Members\"\n                ],\n                \"summary\": \"Get single group member by ID\",\n                \"description\": \"Display the specified resource.\",\n                \"operationId\": \"getGroupMemberById\",\n                \"parameters\": [\n                    {\n                        \"name\": \"group_member_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of group members to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successfully found the group members\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/getGroupMembersById\"\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"delete\": {\n                \"tags\": [\n                    \"Group Members\"\n                ],\n                \"summary\": \"Delete a group member\",\n                \"description\": \"Delete a group membership\",\n                \"operationId\": \"deleteGroupMember\",\n                \"parameters\": [\n                    {\n                        \"name\": \"group_member_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of group_members to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"success\"\n                    }\n                }\n            }\n        },\n        \"/group_members_available\": {\n            \"get\": {\n                \"tags\": [\n                    \"Group Members\"\n                ],\n                \"summary\": \"Returns all groups available for a given member\",\n                \"description\": \"Display a listing of groups available\",\n                \"operationId\": \"getGroupMembersAvailable\",\n                \"parameters\": [\n                    {\n                        \"name\": \"member_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of group member to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"member_type\",\n                        \"in\": \"path\",\n                        \"description\": \"type of group member to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/filter\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/order_by\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/order_direction\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/per_page\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"list of groups available to be assigned as member\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"type\": \"array\",\n                                            \"items\": {\n                                                \"$ref\": \"#/components/schemas/availableGroupMembers\"\n                                            }\n                                        },\n                                        \"meta\": {\n                                            \"$ref\": \"#/components/schemas/metadata\"\n                                        }\n                                    },\n                                    \"type\": \"object\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/user_members_available\": {\n            \"get\": {\n                \"tags\": [\n                    \"Group Members\"\n                ],\n                \"summary\": \"Returns all users available for a given group\",\n                \"description\": \"Display a listing of users available\",\n                \"operationId\": \"getUserMembersAvailable\",\n                \"parameters\": [\n                    {\n                        \"name\": \"group_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of group to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"filter\",\n                        \"in\": \"query\",\n                        \"description\": \"Filter results by string. Searches Name. Can be a substring.\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/order_by\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/order_direction\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/per_page\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"list of users available to be assigned as member\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"type\": \"array\",\n                                            \"items\": {\n                                                \"$ref\": \"#/components/schemas/users\"\n                                            }\n                                        },\n                                        \"meta\": {\n                                            \"$ref\": \"#/components/schemas/metadata\"\n                                        }\n                                    },\n                                    \"type\": \"object\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/notifications\": {\n            \"get\": {\n                \"tags\": [\n                    \"Notifications\"\n                ],\n                \"summary\": \"Returns all notifications that the user has access to\",\n                \"description\": \"Display a listing of the resource.\",\n                \"operationId\": \"getNotifications\",\n                \"parameters\": [\n                    {\n                        \"name\": \"status\",\n                        \"in\": \"query\",\n                        \"description\": \"Only return notifications by status (unread, all, etc.)\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/filter\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/order_by\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/order_direction\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/per_page\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/include\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"list of notifications\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"type\": \"array\",\n                                            \"items\": {\n                                                \"$ref\": \"#/components/schemas/Notification\"\n                                            }\n                                        },\n                                        \"meta\": {}\n                                    },\n                                    \"type\": \"object\"\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"post\": {\n                \"tags\": [\n                    \"Notifications\"\n                ],\n                \"summary\": \"Save a new notifications\",\n                \"description\": \"Store a newly created resource in storage.\",\n                \"operationId\": \"createNotification\",\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/NotificationEditable\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Notification\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/notifications/{notification_id}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Notifications\"\n                ],\n                \"summary\": \"Get single notification by ID\",\n                \"description\": \"Display the specified resource.\",\n                \"operationId\": \"getNotificationById\",\n                \"parameters\": [\n                    {\n                        \"name\": \"notification_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of notification to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successfully found the notification\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Notification\"\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"tags\": [\n                    \"Notifications\"\n                ],\n                \"summary\": \"Update a notification\",\n                \"description\": \"Update a user\",\n                \"operationId\": \"updateNotification\",\n                \"parameters\": [\n                    {\n                        \"name\": \"notification_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of notification to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/NotificationEditable\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"success\"\n                    }\n                }\n            },\n            \"delete\": {\n                \"tags\": [\n                    \"Notifications\"\n                ],\n                \"summary\": \"Delete a notification\",\n                \"description\": \"Delete a notification\",\n                \"operationId\": \"deleteNotification\",\n                \"parameters\": [\n                    {\n                        \"name\": \"notification_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of notification to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"success\"\n                    }\n                }\n            }\n        },\n        \"/read_notifications\": {\n            \"put\": {\n                \"tags\": [\n                    \"Notifications\"\n                ],\n                \"summary\": \"Mark notifications as read by the user\",\n                \"description\": \"Update notification as read\",\n                \"operationId\": \"markNotificationAsRead\",\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"properties\": {\n                                    \"message_ids\": {\n                                        \"description\": \"list of message ids that will be marked as read\",\n                                        \"type\": \"array\",\n                                        \"items\": {\n                                            \"type\": \"string\"\n                                        }\n                                    },\n                                    \"routes\": {\n                                        \"description\": \"all messages that has an url that is in this list will be marked as read\",\n                                        \"type\": \"array\",\n                                        \"items\": {\n                                            \"type\": \"string\"\n                                        }\n                                    }\n                                },\n                                \"type\": \"object\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"success\"\n                    }\n                }\n            }\n        },\n        \"/unread_notifications\": {\n            \"put\": {\n                \"tags\": [\n                    \"Notifications\"\n                ],\n                \"summary\": \"Mark notifications as unread by the user\",\n                \"description\": \"Update notifications as unread\",\n                \"operationId\": \"markNotificationAsUnread\",\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"properties\": {\n                                    \"message_ids\": {\n                                        \"description\": \"list of message ids that will be marked as read\",\n                                        \"type\": \"array\",\n                                        \"items\": {\n                                            \"type\": \"string\"\n                                        }\n                                    },\n                                    \"routes\": {\n                                        \"description\": \"all messages that has an url that is in this list will be marked as read\",\n                                        \"type\": \"array\",\n                                        \"items\": {\n                                            \"type\": \"string\"\n                                        }\n                                    }\n                                },\n                                \"type\": \"object\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"success\"\n                    }\n                }\n            }\n        },\n        \"/read_all_notifications\": {\n            \"put\": {\n                \"tags\": [\n                    \"Notifications\"\n                ],\n                \"summary\": \"Mark notifications as read by id and type\",\n                \"description\": \"Update all notification as read.\",\n                \"operationId\": \"markAllAsRead\",\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"properties\": {\n                                    \"id\": {\n                                        \"description\": \"Polymorphic relation id\",\n                                        \"type\": \"integer\"\n                                    },\n                                    \"type\": {\n                                        \"description\": \"Polymorphic relation type\",\n                                        \"type\": \"string\"\n                                    }\n                                },\n                                \"type\": \"object\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"success\"\n                    }\n                }\n            }\n        },\n        \"/permissions\": {\n            \"put\": {\n                \"tags\": [\n                    \"Permissions\"\n                ],\n                \"summary\": \"Update the permissions of a user\",\n                \"description\": \"Update permissions\",\n                \"operationId\": \"51b3555fb753f44324bf5c3880e01454\",\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"properties\": {\n                                    \"user_id\": {\n                                        \"description\": \"ID of the user whose permissions are configured\",\n                                        \"type\": \"integer\"\n                                    },\n                                    \"group_id\": {\n                                        \"description\": \"ID of the group whose permissions are configured\",\n                                        \"type\": \"integer\"\n                                    },\n                                    \"is_administrator\": {\n                                        \"description\": \"Whether the user should have Super Admin privileges\",\n                                        \"type\": \"boolean\",\n                                        \"default\": false\n                                    },\n                                    \"permission_names\": {\n                                        \"type\": \"array\",\n                                        \"items\": {\n                                            \"type\": \"string\"\n                                        }\n                                    }\n                                },\n                                \"type\": \"object\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"success\"\n                    }\n                }\n            }\n        },\n        \"/process_categories\": {\n            \"get\": {\n                \"tags\": [\n                    \"Process Categories\"\n                ],\n                \"summary\": \"Returns all processes categories that the user has access to\",\n                \"description\": \"Display a listing of the Process Categories.\",\n                \"operationId\": \"getProcessCategories\",\n                \"parameters\": [\n                    {\n                        \"name\": \"filter\",\n                        \"in\": \"query\",\n                        \"description\": \"Filter results by string. Searches Name and Status. All fields must match exactly.\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/order_by\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/order_direction\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/per_page\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"list of processes categories\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"type\": \"array\",\n                                            \"items\": {\n                                                \"$ref\": \"#/components/schemas/ProcessCategory\"\n                                            }\n                                        },\n                                        \"meta\": {\n                                            \"type\": \"object\"\n                                        }\n                                    },\n                                    \"type\": \"object\"\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"post\": {\n                \"tags\": [\n                    \"Process Categories\"\n                ],\n                \"summary\": \"Save a new process Category\",\n                \"description\": \"Store a newly created Process Category in storage\",\n                \"operationId\": \"createProcessCategory\",\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/ProcessCategoryEditable\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ProcessCategory\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/process_categories/{process_category_id}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Process Categories\"\n                ],\n                \"summary\": \"Get single process category by ID\",\n                \"description\": \"Display the specified Process category.\",\n                \"operationId\": \"getProcessCategoryById\",\n                \"parameters\": [\n                    {\n                        \"name\": \"process_category_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of process category to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successfully found the process\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ProcessCategory\"\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"tags\": [\n                    \"Process Categories\"\n                ],\n                \"summary\": \"Update a process Category\",\n                \"description\": \"Updates the current element\",\n                \"operationId\": \"updateProcessCategory\",\n                \"parameters\": [\n                    {\n                        \"name\": \"process_category_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of process category to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/ProcessCategoryEditable\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ProcessCategory\"\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"delete\": {\n                \"tags\": [\n                    \"Process Categories\"\n                ],\n                \"summary\": \"Delete a process category\",\n                \"description\": \"Remove the specified resource from storage.\",\n                \"operationId\": \"deleteProcessCategory\",\n                \"parameters\": [\n                    {\n                        \"name\": \"process_category_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of process category to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Process\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/processes\": {\n            \"get\": {\n                \"tags\": [\n                    \"Processes\"\n                ],\n                \"summary\": \"Returns all processes that the user has access to\",\n                \"description\": \"Get list Process\",\n                \"operationId\": \"getProcesses\",\n                \"parameters\": [\n                    {\n                        \"$ref\": \"#/components/parameters/filter\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/order_by\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/order_direction\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/per_page\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/status\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/include\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"list of processes\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"type\": \"array\",\n                                            \"items\": {\n                                                \"$ref\": \"#/components/schemas/Process\"\n                                            }\n                                        },\n                                        \"meta\": {\n                                            \"$ref\": \"#/components/schemas/metadata\"\n                                        }\n                                    },\n                                    \"type\": \"object\"\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"post\": {\n                \"tags\": [\n                    \"Processes\"\n                ],\n                \"summary\": \"Save a new process\",\n                \"description\": \"Store a newly created resource in storage.\",\n                \"operationId\": \"createProcess\",\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/ProcessEditable\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Process\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/processes/{processId}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Processes\"\n                ],\n                \"summary\": \"Get single process by ID\",\n                \"description\": \"Display the specified resource.\",\n                \"operationId\": \"getProcessById\",\n                \"parameters\": [\n                    {\n                        \"name\": \"processId\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of process to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/include\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successfully found the process\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Process\"\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"tags\": [\n                    \"Processes\"\n                ],\n                \"summary\": \"Update a process\",\n                \"description\": \"Updates the current element\",\n                \"operationId\": \"updateProcess\",\n                \"parameters\": [\n                    {\n                        \"name\": \"processId\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of process to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/ProcessEditable\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Process\"\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"delete\": {\n                \"tags\": [\n                    \"Processes\"\n                ],\n                \"summary\": \"Delete a process\",\n                \"description\": \"Remove the specified resource from storage.\",\n                \"operationId\": \"deleteProcess\",\n                \"parameters\": [\n                    {\n                        \"name\": \"processId\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of process to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"success\"\n                    }\n                }\n            }\n        },\n        \"/start_processes\": {\n            \"get\": {\n                \"tags\": [\n                    \"Processes\"\n                ],\n                \"summary\": \"Returns the list of processes that the user can start\",\n                \"description\": \"Returns the list of processes that the user can start.\",\n                \"operationId\": \"startProcesses\",\n                \"parameters\": [\n                    {\n                        \"$ref\": \"#/components/parameters/filter\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/order_by\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/order_direction\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/per_page\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/include\"\n                    },\n                    {\n                        \"name\": \"without_event_definitions\",\n                        \"in\": \"path\",\n                        \"description\": \"If true return only processes that haven't start event definitions\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"list of processes that the user can start\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"type\": \"array\",\n                                            \"items\": {\n                                                \"$ref\": \"#/components/schemas/ProcessWithStartEvents\"\n                                            }\n                                        },\n                                        \"meta\": {\n                                            \"$ref\": \"#/components/schemas/metadata\"\n                                        }\n                                    },\n                                    \"type\": \"object\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/processes/{processId}/restore\": {\n            \"put\": {\n                \"tags\": [\n                    \"Processes\"\n                ],\n                \"summary\": \"Restore an inactive process\",\n                \"description\": \"Reverses the soft delete of the element\",\n                \"operationId\": \"restoreProcess\",\n                \"parameters\": [\n                    {\n                        \"name\": \"processId\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of process to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Process\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/processes/{processId}/export\": {\n            \"post\": {\n                \"tags\": [\n                    \"Processes\"\n                ],\n                \"summary\": \"Export a single process by ID and return a URL to download it\",\n                \"description\": \"Export the specified process.\",\n                \"operationId\": \"exportProcess\",\n                \"parameters\": [\n                    {\n                        \"name\": \"processId\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of process to export\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successfully built the process for export\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"properties\": {\n                                        \"url\": {\n                                            \"type\": \"string\"\n                                        }\n                                    },\n                                    \"type\": \"object\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/processes/import\": {\n            \"post\": {\n                \"tags\": [\n                    \"Processes\"\n                ],\n                \"summary\": \"Import a new process\",\n                \"description\": \"Import the specified process.\",\n                \"operationId\": \"importProcess\",\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"multipart/form-data\": {\n                            \"schema\": {\n                                \"properties\": {\n                                    \"file\": {\n                                        \"description\": \"file to import\",\n                                        \"type\": \"string\",\n                                        \"format\": \"binary\"\n                                    }\n                                },\n                                \"type\": \"object\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ProcessImport\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/processes/import/{code}/is_ready\": {\n            \"head\": {\n                \"tags\": [\n                    \"Processes\"\n                ],\n                \"summary\": \"Check if the import is ready\",\n                \"description\": \"Check if the import is ready\",\n                \"operationId\": \"6a131993b7c879ddcd3d3a291dd8380f\",\n                \"parameters\": [\n                    {\n                        \"name\": \"code\",\n                        \"in\": \"path\",\n                        \"description\": \"Import code\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"check is import is ready\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"properties\": {\n                                        \"ready\": {\n                                            \"type\": \"boolean\"\n                                        }\n                                    },\n                                    \"type\": \"object\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/processes/{process_id}/import/assignments\": {\n            \"post\": {\n                \"tags\": [\n                    \"Processes\"\n                ],\n                \"summary\": \"Update assignments after import\",\n                \"description\": \"Import Assignments of process.\",\n                \"operationId\": \"assignmentProcess\",\n                \"parameters\": [\n                    {\n                        \"name\": \"process_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of process to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/ProcessAssignments\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"success\"\n                    }\n                }\n            }\n        },\n        \"/process_events/{process_id}\": {\n            \"post\": {\n                \"tags\": [\n                    \"Processes\"\n                ],\n                \"summary\": \"Start a new process\",\n                \"description\": \"Trigger an start event within a process.\",\n                \"operationId\": \"triggerStartEvent\",\n                \"parameters\": [\n                    {\n                        \"name\": \"process_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of process to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    },\n                    {\n                        \"name\": \"event\",\n                        \"in\": \"query\",\n                        \"description\": \"Node ID of the start event\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"description\": \"data that will be stored as part of the created request\",\n                    \"required\": false,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"type\": \"object\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/processRequest\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/requests\": {\n            \"get\": {\n                \"tags\": [\n                    \"Process Requests\"\n                ],\n                \"summary\": \"Returns all process Requests that the user has access to\",\n                \"description\": \"Display a listing of the resource.\",\n                \"operationId\": \"getProcessesRequests\",\n                \"parameters\": [\n                    {\n                        \"name\": \"type\",\n                        \"in\": \"query\",\n                        \"description\": \"Only return requests by type (all|in_progress|completed)\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                                \"all\",\n                                \"in_progress\",\n                                \"completed\",\n                                \"started_me\"\n                            ]\n                        }\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/filter\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/order_by\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/order_direction\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/per_page\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/include\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"list of processes\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"type\": \"array\",\n                                            \"items\": {\n                                                \"$ref\": \"#/components/schemas/processRequest\"\n                                            }\n                                        },\n                                        \"meta\": {\n                                            \"$ref\": \"#/components/schemas/metadata\"\n                                        }\n                                    },\n                                    \"type\": \"object\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/requests/{process_request_id}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Process Requests\"\n                ],\n                \"summary\": \"Get single process request by ID\",\n                \"description\": \"Display the specified resource.\",\n                \"operationId\": \"getProcessRequestById\",\n                \"parameters\": [\n                    {\n                        \"name\": \"process_request_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of process request to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/include\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successfully found the process\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/processRequest\"\n                                }\n                            }\n                        }\n                    },\n                    \"404\": {\n                        \"$ref\": \"#/components/responses/404\"\n                    }\n                }\n            },\n            \"put\": {\n                \"tags\": [\n                    \"Process Requests\"\n                ],\n                \"summary\": \"Update a process request\",\n                \"description\": \"Update a request\",\n                \"operationId\": \"updateProcessRequest\",\n                \"parameters\": [\n                    {\n                        \"name\": \"process_request_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of process request to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/processRequestEditable\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"success\"\n                    },\n                    \"404\": {\n                        \"$ref\": \"#/components/responses/404\"\n                    }\n                }\n            },\n            \"delete\": {\n                \"tags\": [\n                    \"Process Requests\"\n                ],\n                \"summary\": \"Delete a process request\",\n                \"description\": \"Delete a request\",\n                \"operationId\": \"deleteProcessRequest\",\n                \"parameters\": [\n                    {\n                        \"name\": \"process_request_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of process request to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/processRequest\"\n                                }\n                            }\n                        }\n                    },\n                    \"404\": {\n                        \"$ref\": \"#/components/responses/404\"\n                    }\n                }\n            }\n        },\n        \"/requests/{process_request_id}/events/{event_id}\": {\n            \"post\": {\n                \"tags\": [\n                    \"Process Requests\"\n                ],\n                \"summary\": \"Update a process request event\",\n                \"description\": \"Trigger a intermediate catch event\",\n                \"operationId\": \"updateProcessRequestEvent\",\n                \"parameters\": [\n                    {\n                        \"name\": \"process_request_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of process request to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"event_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of process event to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"success\"\n                    }\n                }\n            }\n        },\n        \"/requests/{request_id}/files\": {\n            \"get\": {\n                \"tags\": [\n                    \"Request Files\"\n                ],\n                \"summary\": \"Returns the list of files associated with a request\",\n                \"description\": \"Display a listing of the resource.\",\n                \"operationId\": \"getRequestFiles\",\n                \"parameters\": [\n                    {\n                        \"$ref\": \"#/components/parameters/filter\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/order_by\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/order_direction\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/per_page\"\n                    },\n                    {\n                        \"name\": \"request_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of the request\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"list of files\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"type\": \"array\",\n                                            \"items\": {\n                                                \"$ref\": \"#/components/schemas/media\"\n                                            }\n                                        },\n                                        \"meta\": {\n                                            \"type\": \"object\",\n                                            \"allOf\": [\n                                                {\n                                                    \"$ref\": \"#/components/schemas/metadata\"\n                                                }\n                                            ]\n                                        }\n                                    },\n                                    \"type\": \"object\"\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"post\": {\n                \"tags\": [\n                    \"Request Files\"\n                ],\n                \"summary\": \"Save a new media file to a request\",\n                \"description\": \"Store a newly created resource in storage.\",\n                \"operationId\": \"createRequestFile\",\n                \"parameters\": [\n                    {\n                        \"name\": \"request_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of the request\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    },\n                    {\n                        \"name\": \"data_name\",\n                        \"in\": \"query\",\n                        \"description\": \"Variable name in the request data to use for the file name\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"multipart/form-data\": {\n                            \"schema\": {\n                                \"properties\": {\n                                    \"file\": {\n                                        \"description\": \"save a new media file\",\n                                        \"type\": \"string\",\n                                        \"format\": \"binary\"\n                                    }\n                                },\n                                \"type\": \"object\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"properties\": {\n                                        \"message\": {\n                                            \"type\": \"string\"\n                                        },\n                                        \"fileUploadId\": {\n                                            \"type\": \"integer\"\n                                        }\n                                    },\n                                    \"type\": \"object\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/requests/{request_id}/files/{file_id}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Request Files\"\n                ],\n                \"summary\": \"Get a file uploaded to a request\",\n                \"description\": \"Display the specified resource.\",\n                \"operationId\": \"getRequestFilesById\",\n                \"parameters\": [\n                    {\n                        \"name\": \"request_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of the request\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    },\n                    {\n                        \"name\": \"file_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of the file to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"File stream\",\n                        \"content\": {\n                            \"application/octet-stream\": {\n                                \"schema\": {\n                                    \"type\": \"string\",\n                                    \"format\": \"binary\"\n                                }\n                            }\n                        }\n                    },\n                    \"404\": {\n                        \"$ref\": \"#/components/responses/404\"\n                    }\n                }\n            },\n            \"delete\": {\n                \"tags\": [\n                    \"Request Files\"\n                ],\n                \"summary\": \"Delete all media associated with a request\",\n                \"description\": \"Remove the specified resource from storage.\",\n                \"operationId\": \"deleteRequestFile\",\n                \"parameters\": [\n                    {\n                        \"name\": \"file_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of the file\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    },\n                    {\n                        \"name\": \"request_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of the request\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"success\"\n                    },\n                    \"404\": {\n                        \"$ref\": \"#/components/responses/404\"\n                    }\n                }\n            }\n        },\n        \"/screen_categories\": {\n            \"get\": {\n                \"tags\": [\n                    \"Screen Categories\"\n                ],\n                \"summary\": \"Returns all screens categories that the user has access to\",\n                \"description\": \"Display a listing of the Screen Categories.\",\n                \"operationId\": \"getScreenCategories\",\n                \"parameters\": [\n                    {\n                        \"name\": \"filter\",\n                        \"in\": \"query\",\n                        \"description\": \"Filter results by string. Searches Name, Description, and Status. All fields must match exactly.\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/order_by\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/order_direction\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/per_page\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"list of screens categories\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"type\": \"array\",\n                                            \"items\": {\n                                                \"$ref\": \"#/components/schemas/ScreenCategory\"\n                                            }\n                                        },\n                                        \"meta\": {\n                                            \"type\": \"object\"\n                                        }\n                                    },\n                                    \"type\": \"object\"\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"post\": {\n                \"tags\": [\n                    \"Screen Categories\"\n                ],\n                \"summary\": \"Save a new Screen Category\",\n                \"description\": \"Store a newly created Screen Category in storage\",\n                \"operationId\": \"createScreenCategory\",\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/ScreenCategoryEditable\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ScreenCategory\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/screen_categories/{screen_category_id}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Screen Categories\"\n                ],\n                \"summary\": \"Get single screen category by ID\",\n                \"description\": \"Display the specified screen category.\",\n                \"operationId\": \"getScreenCategoryById\",\n                \"parameters\": [\n                    {\n                        \"name\": \"screen_category_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of screen category to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successfully found the screen\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ScreenCategory\"\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"tags\": [\n                    \"Screen Categories\"\n                ],\n                \"summary\": \"Update a screen Category\",\n                \"description\": \"Updates the current element\",\n                \"operationId\": \"updateScreenCategory\",\n                \"parameters\": [\n                    {\n                        \"name\": \"screen_category_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of screen category to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/ScreenCategoryEditable\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ScreenCategory\"\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"delete\": {\n                \"tags\": [\n                    \"Screen Categories\"\n                ],\n                \"summary\": \"Delete a screen category\",\n                \"description\": \"Remove the specified resource from storage.\",\n                \"operationId\": \"deleteScreenCategory\",\n                \"parameters\": [\n                    {\n                        \"name\": \"screen_category_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of screen category to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"success\"\n                    }\n                }\n            }\n        },\n        \"/screens\": {\n            \"get\": {\n                \"tags\": [\n                    \"Screens\"\n                ],\n                \"summary\": \"Returns all screens that the user has access to\",\n                \"description\": \"Get a list of Screens.\",\n                \"operationId\": \"getScreens\",\n                \"parameters\": [\n                    {\n                        \"$ref\": \"#/components/parameters/filter\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/order_by\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/order_direction\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/per_page\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/include\"\n                    },\n                    {\n                        \"name\": \"exclude\",\n                        \"in\": \"query\",\n                        \"description\": \"Comma separated list of fields to exclude from the response\",\n                        \"schema\": {\n                            \"type\": \"string\",\n                            \"default\": \"\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"list of screens\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"type\": \"array\",\n                                            \"items\": {\n                                                \"$ref\": \"#/components/schemas/screens\"\n                                            }\n                                        },\n                                        \"meta\": {\n                                            \"type\": \"object\"\n                                        }\n                                    },\n                                    \"type\": \"object\"\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"post\": {\n                \"tags\": [\n                    \"Screens\"\n                ],\n                \"summary\": \"Save a new screens\",\n                \"description\": \"Create a new Screen.\",\n                \"operationId\": \"createScreen\",\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/screensEditable\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/screens\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/screens/{screens_id}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Screens\"\n                ],\n                \"summary\": \"Get single screens by ID\",\n                \"description\": \"Get a single Screen.\",\n                \"operationId\": \"getScreensById\",\n                \"parameters\": [\n                    {\n                        \"name\": \"screens_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of screens to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successfully found the screen\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/screens\"\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"tags\": [\n                    \"Screens\"\n                ],\n                \"summary\": \"Update a screen\",\n                \"description\": \"Update a Screen.\",\n                \"operationId\": \"updateScreen\",\n                \"parameters\": [\n                    {\n                        \"name\": \"screens_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of screen to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/screensEditable\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"success\"\n                    }\n                }\n            },\n            \"delete\": {\n                \"tags\": [\n                    \"Screens\"\n                ],\n                \"summary\": \"Delete a screen\",\n                \"description\": \"Delete a Screen.\",\n                \"operationId\": \"deleteScreen\",\n                \"parameters\": [\n                    {\n                        \"name\": \"screens_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of screen to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"success\"\n                    }\n                }\n            }\n        },\n        \"/screens/{screens_id}/duplicate\": {\n            \"put\": {\n                \"tags\": [\n                    \"Screens\"\n                ],\n                \"summary\": \"duplicate a screen\",\n                \"description\": \"duplicate a Screen.\",\n                \"operationId\": \"duplicateScreen\",\n                \"parameters\": [\n                    {\n                        \"name\": \"screens_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of screen to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/screensEditable\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/screens\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/screens/{screensId}/export\": {\n            \"post\": {\n                \"tags\": [\n                    \"Screens\"\n                ],\n                \"summary\": \"Export a single screen by ID\",\n                \"description\": \"Export the specified screen.\",\n                \"operationId\": \"exportScreen\",\n                \"parameters\": [\n                    {\n                        \"name\": \"screensId\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of screen to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successfully exported the screen\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/screenExported\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/screens/import\": {\n            \"post\": {\n                \"tags\": [\n                    \"Screens\"\n                ],\n                \"summary\": \"Import a new screen\",\n                \"description\": \"Import the specified screen.\",\n                \"operationId\": \"importScreen\",\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"multipart/form-data\": {\n                            \"schema\": {\n                                \"properties\": {\n                                    \"file\": {\n                                        \"description\": \"file to import\",\n                                        \"type\": \"string\",\n                                        \"format\": \"binary\"\n                                    }\n                                },\n                                \"type\": \"object\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"properties\": {\n                                        \"status\": {\n                                            \"type\": \"object\"\n                                        }\n                                    },\n                                    \"type\": \"object\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/screens/preview\": {\n            \"post\": {\n                \"tags\": [\n                    \"Screens\"\n                ],\n                \"summary\": \"Preview a screen\",\n                \"description\": \"Get preview a screen\",\n                \"operationId\": \"preview\",\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"properties\": {\n                                    \"config\": {\n                                        \"type\": \"object\"\n                                    },\n                                    \"watchers\": {\n                                        \"type\": \"object\"\n                                    },\n                                    \"computed\": {\n                                        \"type\": \"object\"\n                                    },\n                                    \"custom_css\": {\n                                        \"type\": \"string\"\n                                    }\n                                },\n                                \"type\": \"object\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successfully found the screen\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/screens\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/script_categories\": {\n            \"get\": {\n                \"tags\": [\n                    \"Script Categories\"\n                ],\n                \"summary\": \"Returns all scripts categories that the user has access to\",\n                \"description\": \"Display a listing of the Script Categories.\",\n                \"operationId\": \"getScriptCategories\",\n                \"parameters\": [\n                    {\n                        \"name\": \"filter\",\n                        \"in\": \"query\",\n                        \"description\": \"Filter results by string. Searches Name, Description, and Status. All fields must match exactly.\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/order_by\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/order_direction\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/per_page\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"list of scripts categories\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"type\": \"array\",\n                                            \"items\": {\n                                                \"$ref\": \"#/components/schemas/ScriptCategory\"\n                                            }\n                                        },\n                                        \"meta\": {\n                                            \"type\": \"object\"\n                                        }\n                                    },\n                                    \"type\": \"object\"\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"post\": {\n                \"tags\": [\n                    \"Script Categories\"\n                ],\n                \"summary\": \"Save a new Script Category\",\n                \"description\": \"Store a newly created Script Category in storage\",\n                \"operationId\": \"createScriptCategory\",\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/ScriptCategoryEditable\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ScriptCategory\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/script_categories/{script_category_id}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Script Categories\"\n                ],\n                \"summary\": \"Get single script category by ID\",\n                \"description\": \"Display the specified script category.\",\n                \"operationId\": \"getScriptCategoryById\",\n                \"parameters\": [\n                    {\n                        \"name\": \"script_category_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of script category to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successfully found the script\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ScriptCategory\"\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"tags\": [\n                    \"Script Categories\"\n                ],\n                \"summary\": \"Update a script Category\",\n                \"description\": \"Updates the current element\",\n                \"operationId\": \"updateScriptCategory\",\n                \"parameters\": [\n                    {\n                        \"name\": \"script_category_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of script category to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/ScriptCategoryEditable\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ScriptCategory\"\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"delete\": {\n                \"tags\": [\n                    \"Script Categories\"\n                ],\n                \"summary\": \"Delete a script category\",\n                \"description\": \"Remove the specified resource from storage.\",\n                \"operationId\": \"deleteScriptCategory\",\n                \"parameters\": [\n                    {\n                        \"name\": \"script_category_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of script category to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"success\"\n                    }\n                }\n            }\n        },\n        \"/scripts\": {\n            \"get\": {\n                \"tags\": [\n                    \"Scripts\"\n                ],\n                \"summary\": \"Returns all scripts that the user has access to\",\n                \"description\": \"Get a list of scripts in a process.\",\n                \"operationId\": \"getScripts\",\n                \"parameters\": [\n                    {\n                        \"$ref\": \"#/components/parameters/filter\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/order_by\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/order_direction\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/per_page\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/include\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"list of scripts\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"type\": \"array\",\n                                            \"items\": {\n                                                \"$ref\": \"#/components/schemas/scripts\"\n                                            }\n                                        },\n                                        \"meta\": {\n                                            \"type\": \"object\"\n                                        }\n                                    },\n                                    \"type\": \"object\"\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"post\": {\n                \"tags\": [\n                    \"Scripts\"\n                ],\n                \"summary\": \"Save a new script\",\n                \"description\": \"Create a new script in a process.\",\n                \"operationId\": \"createScript\",\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/scriptsEditable\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/scripts\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/scripts/{script_id}/preview\": {\n            \"post\": {\n                \"tags\": [\n                    \"Scripts\"\n                ],\n                \"summary\": \"Test script code without saving it\",\n                \"description\": \"Previews executing a script, with sample data/config data\",\n                \"operationId\": \"previewScript\",\n                \"parameters\": [\n                    {\n                        \"name\": \"script_id\",\n                        \"in\": \"path\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"properties\": {\n                                    \"data\": {\n                                        \"type\": \"array\",\n                                        \"items\": {\n                                            \"type\": \"object\"\n                                        }\n                                    },\n                                    \"config\": {\n                                        \"type\": \"array\",\n                                        \"items\": {\n                                            \"type\": \"object\"\n                                        }\n                                    },\n                                    \"code\": {\n                                        \"type\": \"string\"\n                                    },\n                                    \"nonce\": {\n                                        \"type\": \"string\"\n                                    }\n                                },\n                                \"type\": \"object\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"success if the script was queued\"\n                    }\n                }\n            }\n        },\n        \"/scripts/execute/{script_id}\": {\n            \"post\": {\n                \"tags\": [\n                    \"Scripts\"\n                ],\n                \"summary\": \"Execute script\",\n                \"description\": \"Executes a script, with sample data/config data\",\n                \"operationId\": \"executeScript\",\n                \"parameters\": [\n                    {\n                        \"name\": \"script_id\",\n                        \"in\": \"path\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"properties\": {\n                                    \"data\": {\n                                        \"type\": \"array\",\n                                        \"items\": {\n                                            \"type\": \"object\"\n                                        }\n                                    },\n                                    \"config\": {\n                                        \"type\": \"array\",\n                                        \"items\": {\n                                            \"type\": \"object\"\n                                        }\n                                    }\n                                },\n                                \"type\": \"object\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"success if the script was queued\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/scriptsPreview\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/scripts/execution/{key}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Scripts\"\n                ],\n                \"summary\": \"Get the response of a script execution by execution key\",\n                \"description\": \"Get the response of a script execution\",\n                \"operationId\": \"getScriptExecutionResponse\",\n                \"parameters\": [\n                    {\n                        \"name\": \"key\",\n                        \"in\": \"path\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"response of a script execution\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {}\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/scripts/{script_id}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Scripts\"\n                ],\n                \"summary\": \"Get single script by ID\",\n                \"description\": \"Get a single script in a process.\",\n                \"operationId\": \"getScriptsById\",\n                \"parameters\": [\n                    {\n                        \"name\": \"script_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of script to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successfully found the script\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/scripts\"\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"tags\": [\n                    \"Scripts\"\n                ],\n                \"summary\": \"Update a script\",\n                \"description\": \"Update a script in a process.\",\n                \"operationId\": \"updateScript\",\n                \"parameters\": [\n                    {\n                        \"name\": \"script_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of script to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/scriptsEditable\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"success\"\n                    }\n                }\n            },\n            \"delete\": {\n                \"tags\": [\n                    \"Scripts\"\n                ],\n                \"summary\": \"Delete a script\",\n                \"description\": \"Delete a script in a process.\",\n                \"operationId\": \"deleteScript\",\n                \"parameters\": [\n                    {\n                        \"name\": \"script_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of script to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"success\"\n                    }\n                }\n            }\n        },\n        \"/scripts/{scripts_id}/duplicate\": {\n            \"put\": {\n                \"tags\": [\n                    \"Scripts\"\n                ],\n                \"summary\": \"duplicate a script\",\n                \"description\": \"duplicate a Script.\",\n                \"operationId\": \"duplicateScript\",\n                \"parameters\": [\n                    {\n                        \"name\": \"scripts_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of script to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/scriptsEditable\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/scripts\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/settings\": {\n            \"get\": {\n                \"tags\": [\n                    \"Settings\"\n                ],\n                \"summary\": \"Returns all settings\",\n                \"description\": \"Display a listing of the resource.\",\n                \"operationId\": \"getSettings\",\n                \"parameters\": [\n                    {\n                        \"$ref\": \"#/components/parameters/filter\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/order_by\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/order_direction\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/per_page\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/include\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"list of settings\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"type\": \"array\",\n                                            \"items\": {\n                                                \"$ref\": \"#/components/schemas/settings\"\n                                            }\n                                        },\n                                        \"meta\": {\n                                            \"$ref\": \"#/components/schemas/metadata\"\n                                        }\n                                    },\n                                    \"type\": \"object\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/settings/{setting_id}\": {\n            \"put\": {\n                \"tags\": [\n                    \"Settings\"\n                ],\n                \"summary\": \"Update a setting\",\n                \"description\": \"Update a setting\",\n                \"operationId\": \"updateSetting\",\n                \"parameters\": [\n                    {\n                        \"name\": \"setting_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of setting to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/settingsEditable\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"success\"\n                    },\n                    \"404\": {\n                        \"$ref\": \"#/components/responses/404\"\n                    },\n                    \"422\": {\n                        \"$ref\": \"#/components/responses/422\"\n                    }\n                }\n            }\n        },\n        \"/tasks\": {\n            \"get\": {\n                \"tags\": [\n                    \"Tasks\"\n                ],\n                \"summary\": \"Returns all tasks that the user has access to\",\n                \"description\": \"Display a listing of the resource.\",\n                \"operationId\": \"getTasks\",\n                \"parameters\": [\n                    {\n                        \"name\": \"process_request_id\",\n                        \"in\": \"query\",\n                        \"description\": \"Process request id\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/filter\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/order_by\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/order_direction\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/include\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"list of tasks\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"type\": \"array\",\n                                            \"items\": {\n                                                \"$ref\": \"#/components/schemas/processRequestToken\"\n                                            }\n                                        },\n                                        \"meta\": {\n                                            \"$ref\": \"#/components/schemas/metadata\"\n                                        }\n                                    },\n                                    \"type\": \"object\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/tasks/{task_id}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Tasks\"\n                ],\n                \"summary\": \"Get a single task by ID\",\n                \"description\": \"Display the specified resource.\",\n                \"operationId\": \"getTasksById\",\n                \"parameters\": [\n                    {\n                        \"name\": \"task_id\",\n                        \"in\": \"path\",\n                        \"description\": \"task id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/processRequestToken\"\n                                }\n                            }\n                        }\n                    },\n                    \"404\": {\n                        \"$ref\": \"#/components/responses/404\"\n                    }\n                }\n            },\n            \"put\": {\n                \"tags\": [\n                    \"Tasks\"\n                ],\n                \"summary\": \"Update a task\",\n                \"description\": \"Updates the current element\",\n                \"operationId\": \"updateTask\",\n                \"parameters\": [\n                    {\n                        \"name\": \"task_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of task to update\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"required\": [\n                                    \"status\",\n                                    \"data\"\n                                ],\n                                \"properties\": {\n                                    \"status\": {\n                                        \"type\": \"string\",\n                                        \"example\": \"COMPLETED\"\n                                    },\n                                    \"data\": {\n                                        \"type\": \"object\"\n                                    }\n                                },\n                                \"type\": \"object\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/processRequestToken\"\n                                }\n                            }\n                        }\n                    },\n                    \"404\": {\n                        \"$ref\": \"#/components/responses/404\"\n                    },\n                    \"422\": {\n                        \"$ref\": \"#/components/responses/422\"\n                    }\n                }\n            }\n        },\n        \"/users\": {\n            \"get\": {\n                \"tags\": [\n                    \"Users\"\n                ],\n                \"summary\": \"Returns all users\",\n                \"description\": \"Display a listing of the resource.\",\n                \"operationId\": \"getUsers\",\n                \"parameters\": [\n                    {\n                        \"$ref\": \"#/components/parameters/status\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/filter\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/order_by\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/order_direction\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/per_page\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/include\"\n                    },\n                    {\n                        \"name\": \"exclude_ids\",\n                        \"in\": \"query\",\n                        \"description\": \"Comma separated list of IDs to exclude from the response\",\n                        \"schema\": {\n                            \"type\": \"string\",\n                            \"default\": \"\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"list of users\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"type\": \"array\",\n                                            \"items\": {\n                                                \"$ref\": \"#/components/schemas/users\"\n                                            }\n                                        },\n                                        \"meta\": {\n                                            \"$ref\": \"#/components/schemas/metadata\"\n                                        }\n                                    },\n                                    \"type\": \"object\"\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"post\": {\n                \"tags\": [\n                    \"Users\"\n                ],\n                \"summary\": \"Save a new users\",\n                \"description\": \"Store a newly created resource in storage.\",\n                \"operationId\": \"createUser\",\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/usersEditable\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/users\"\n                                }\n                            }\n                        }\n                    },\n                    \"422\": {\n                        \"$ref\": \"#/components/responses/422\"\n                    }\n                }\n            }\n        },\n        \"/users/{user_id}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Users\"\n                ],\n                \"summary\": \"Get single user by ID\",\n                \"description\": \"Display the specified resource.\",\n                \"operationId\": \"getUserById\",\n                \"parameters\": [\n                    {\n                        \"name\": \"user_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of user to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successfully found the process\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/users\"\n                                }\n                            }\n                        }\n                    },\n                    \"404\": {\n                        \"$ref\": \"#/components/responses/404\"\n                    }\n                }\n            },\n            \"put\": {\n                \"tags\": [\n                    \"Users\"\n                ],\n                \"summary\": \"Update a user\",\n                \"description\": \"Update a user\",\n                \"operationId\": \"updateUser\",\n                \"parameters\": [\n                    {\n                        \"name\": \"user_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of user to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/usersEditable\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"success\"\n                    },\n                    \"404\": {\n                        \"$ref\": \"#/components/responses/404\"\n                    },\n                    \"422\": {\n                        \"$ref\": \"#/components/responses/422\"\n                    }\n                }\n            },\n            \"delete\": {\n                \"tags\": [\n                    \"Users\"\n                ],\n                \"summary\": \"Delete a user\",\n                \"description\": \"Delete a user\",\n                \"operationId\": \"deleteUser\",\n                \"parameters\": [\n                    {\n                        \"name\": \"user_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of user to delete\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"success\"\n                    },\n                    \"404\": {\n                        \"$ref\": \"#/components/responses/404\"\n                    }\n                }\n            }\n        },\n        \"/users/{user_id}/groups\": {\n            \"put\": {\n                \"tags\": [\n                    \"Users\"\n                ],\n                \"summary\": \"Set the groups a users belongs to\",\n                \"operationId\": \"updateUserGroups\",\n                \"parameters\": [\n                    {\n                        \"name\": \"user_id\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of user\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/updateUserGroups\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"success\"\n                    }\n                }\n            }\n        },\n        \"/users/restore\": {\n            \"put\": {\n                \"tags\": [\n                    \"Users\"\n                ],\n                \"summary\": \"Restore a soft deleted user\",\n                \"operationId\": \"restoreUser\",\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/restoreUser\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"success\"\n                    }\n                }\n            }\n        }\n    },\n    \"components\": {\n        \"schemas\": {\n            \"DateTime\": {\n                \"properties\": {\n                    \"date\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"collectionsEditable\": {\n                \"properties\": {\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": {\n                        \"type\": \"string\"\n                    },\n                    \"custom_title\": {\n                        \"type\": \"string\"\n                    },\n                    \"create_screen_id\": {\n                        \"type\": \"string\",\n                        \"format\": \"id\"\n                    },\n                    \"read_screen_id\": {\n                        \"type\": \"string\",\n                        \"format\": \"id\"\n                    },\n                    \"update_screen_id\": {\n                        \"type\": \"string\",\n                        \"format\": \"id\"\n                    },\n                    \"signal_create\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"signal_update\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"signal_delete\": {\n                        \"type\": \"boolean\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"collections\": {\n                \"allOf\": [\n                    {\n                        \"$ref\": \"#/components/schemas/collectionsEditable\"\n                    },\n                    {\n                        \"properties\": {\n                            \"id\": {\n                                \"type\": \"integer\"\n                            },\n                            \"created_at\": {\n                                \"type\": \"string\",\n                                \"format\": \"date-time\"\n                            },\n                            \"updated_at\": {\n                                \"type\": \"string\",\n                                \"format\": \"date-time\"\n                            },\n                            \"created_by_id\": {\n                                \"type\": \"string\",\n                                \"format\": \"id\"\n                            },\n                            \"updated_by_id\": {\n                                \"type\": \"string\",\n                                \"format\": \"id\"\n                            },\n                            \"columns\": {\n                                \"type\": \"array\",\n                                \"items\": {\n                                    \"type\": \"object\"\n                                }\n                            }\n                        },\n                        \"type\": \"object\"\n                    }\n                ]\n            },\n            \"recordsEditable\": {\n                \"properties\": {\n                    \"data\": {\n                        \"type\": \"object\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"records\": {\n                \"allOf\": [\n                    {\n                        \"$ref\": \"#/components/schemas/recordsEditable\"\n                    },\n                    {\n                        \"properties\": {\n                            \"id\": {\n                                \"type\": \"integer\"\n                            },\n                            \"collection_id\": {\n                                \"type\": \"string\",\n                                \"format\": \"id\"\n                            }\n                        },\n                        \"type\": \"object\"\n                    }\n                ]\n            },\n            \"DataSourceCallParameters\": {\n                \"properties\": {\n                    \"endpoint\": {\n                        \"type\": \"string\"\n                    },\n                    \"dataMapping\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"properties\": {\n                                \"key\": {\n                                    \"type\": \"string\"\n                                },\n                                \"value\": {\n                                    \"type\": \"string\"\n                                }\n                            },\n                            \"type\": \"object\"\n                        }\n                    },\n                    \"outboundConfig\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"properties\": {\n                                \"key\": {\n                                    \"type\": \"string\"\n                                },\n                                \"value\": {\n                                    \"type\": \"string\"\n                                }\n                            },\n                            \"type\": \"object\"\n                        }\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"DataSourceResponse\": {\n                \"properties\": {\n                    \"status\": {\n                        \"type\": \"integer\"\n                    },\n                    \"response\": {\n                        \"type\": \"object\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"dataSourceEditable\": {\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"string\",\n                        \"format\": \"id\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": {\n                        \"type\": \"string\"\n                    },\n                    \"endpoints\": {\n                        \"type\": \"string\"\n                    },\n                    \"mappings\": {\n                        \"type\": \"string\"\n                    },\n                    \"authtype\": {\n                        \"type\": \"string\"\n                    },\n                    \"credentials\": {\n                        \"type\": \"string\"\n                    },\n                    \"status\": {\n                        \"type\": \"string\"\n                    },\n                    \"data_source_category_id\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"dataSource\": {\n                \"description\": \"Class DataSource\",\n                \"type\": \"object\",\n                \"allOf\": [\n                    {\n                        \"$ref\": \"#/components/schemas/dataSourceEditable\"\n                    },\n                    {\n                        \"properties\": {\n                            \"created_at\": {\n                                \"type\": \"string\",\n                                \"format\": \"date-time\"\n                            },\n                            \"updated_at\": {\n                                \"type\": \"string\",\n                                \"format\": \"date-time\"\n                            }\n                        }\n                    }\n                ]\n            },\n            \"dataSourceCategoryEditable\": {\n                \"properties\": {\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"status\": {\n                        \"type\": \"string\",\n                        \"enum\": [\n                            \"ACTIVE\",\n                            \"INACTIVE\"\n                        ]\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"DataSourceCategory\": {\n                \"description\": \"Represents a business data Source category definition.\",\n                \"type\": \"object\",\n                \"allOf\": [\n                    {\n                        \"$ref\": \"#/components/schemas/dataSourceCategoryEditable\"\n                    },\n                    {\n                        \"properties\": {\n                            \"id\": {\n                                \"type\": \"string\",\n                                \"format\": \"id\"\n                            },\n                            \"created_at\": {\n                                \"type\": \"string\",\n                                \"format\": \"date-time\"\n                            },\n                            \"updated_at\": {\n                                \"type\": \"string\",\n                                \"format\": \"date-time\"\n                            }\n                        }\n                    }\n                ]\n            },\n            \"SavedSearchEditable\": {\n                \"properties\": {\n                    \"meta\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": \"true\"\n                    },\n                    \"pmql\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": {\n                        \"type\": \"string\",\n                        \"enum\": [\n                            \"task\",\n                            \"request\"\n                        ]\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"SavedSearch\": {\n                \"allOf\": [\n                    {\n                        \"properties\": {\n                            \"id\": {\n                                \"type\": \"string\",\n                                \"format\": \"id\"\n                            },\n                            \"user_id\": {\n                                \"type\": \"string\",\n                                \"format\": \"id\"\n                            },\n                            \"created_at\": {\n                                \"type\": \"string\",\n                                \"format\": \"date-time\"\n                            },\n                            \"updated_at\": {\n                                \"type\": \"string\",\n                                \"format\": \"date-time\"\n                            }\n                        },\n                        \"type\": \"object\"\n                    },\n                    {\n                        \"$ref\": \"#/components/schemas/SavedSearchEditable\"\n                    }\n                ]\n            },\n            \"SavedSearchIcon\": {\n                \"description\": \"Represents an Eloquent model of a Saved Search.\",\n                \"properties\": {\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"value\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"SavedSearchChartEditable\": {\n                \"properties\": {\n                    \"title\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": {\n                        \"type\": \"string\",\n                        \"enum\": [\n                            \"bar\",\n                            \"bar-vertical\",\n                            \"line\",\n                            \"pie\",\n                            \"doughnut\"\n                        ]\n                    },\n                    \"config\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": \"true\"\n                    },\n                    \"sort\": {\n                        \"type\": \"integer\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"SavedSearchChart\": {\n                \"description\": \"Represents an Eloquent model of a Saved Search Chart.\",\n                \"allOf\": [\n                    {\n                        \"properties\": {\n                            \"id\": {\n                                \"type\": \"string\",\n                                \"format\": \"id\"\n                            },\n                            \"saved_search_id\": {\n                                \"type\": \"string\",\n                                \"format\": \"id\"\n                            },\n                            \"user_id\": {\n                                \"type\": \"string\",\n                                \"format\": \"id\"\n                            },\n                            \"created_at\": {\n                                \"type\": \"string\",\n                                \"format\": \"date-time\"\n                            },\n                            \"updated_at\": {\n                                \"type\": \"string\",\n                                \"format\": \"date-time\"\n                            },\n                            \"deleted_at\": {\n                                \"type\": \"string\",\n                                \"format\": \"date-time\"\n                            }\n                        },\n                        \"type\": \"object\"\n                    },\n                    {\n                        \"$ref\": \"#/components/schemas/SavedSearchChartEditable\"\n                    }\n                ]\n            },\n            \"ReportEditable\": {\n                \"properties\": {\n                    \"type\": {\n                        \"type\": \"string\",\n                        \"enum\": [\n                            \"adhoc\",\n                            \"scheduled\"\n                        ]\n                    },\n                    \"format\": {\n                        \"type\": \"string\",\n                        \"enum\": [\n                            \"csv\",\n                            \"xlsx\"\n                        ]\n                    },\n                    \"saved_search_id\": {\n                        \"type\": \"integer\"\n                    },\n                    \"config\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": \"true\"\n                    },\n                    \"to\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    \"subject\": {\n                        \"type\": \"string\"\n                    },\n                    \"body\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"Report\": {\n                \"allOf\": [\n                    {\n                        \"properties\": {\n                            \"id\": {\n                                \"type\": \"string\",\n                                \"format\": \"id\"\n                            },\n                            \"user_id\": {\n                                \"type\": \"string\",\n                                \"format\": \"id\"\n                            },\n                            \"created_at\": {\n                                \"type\": \"string\",\n                                \"format\": \"date-time\"\n                            },\n                            \"updated_at\": {\n                                \"type\": \"string\",\n                                \"format\": \"date-time\"\n                            }\n                        },\n                        \"type\": \"object\"\n                    },\n                    {\n                        \"$ref\": \"#/components/schemas/SavedSearchEditable\"\n                    }\n                ]\n            },\n            \"updateUserGroups\": {\n                \"description\": \"Update a user's groups\",\n                \"properties\": {\n                    \"groups\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"integer\",\n                            \"example\": 1\n                        }\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"restoreUser\": {\n                \"description\": \"Reverses the soft delete of a user\",\n                \"properties\": {\n                    \"username\": {\n                        \"description\": \"Username to restore\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"metadata\": {\n                \"properties\": {\n                    \"filter\": {\n                        \"type\": \"string\"\n                    },\n                    \"sort_by\": {\n                        \"type\": \"string\"\n                    },\n                    \"sort_order\": {\n                        \"type\": \"string\",\n                        \"enum\": [\n                            \"asc\",\n                            \"desc\"\n                        ]\n                    },\n                    \"count\": {\n                        \"type\": \"integer\"\n                    },\n                    \"total_pages\": {\n                        \"type\": \"integer\"\n                    },\n                    \"current_page\": {\n                        \"type\": \"integer\"\n                    },\n                    \"form\": {\n                        \"type\": \"integer\"\n                    },\n                    \"last_page\": {\n                        \"type\": \"integer\"\n                    },\n                    \"path\": {\n                        \"type\": \"string\"\n                    },\n                    \"per_page\": {\n                        \"type\": \"integer\"\n                    },\n                    \"to\": {\n                        \"type\": \"integer\"\n                    },\n                    \"total\": {\n                        \"type\": \"integer\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"taskMetadata\": {\n                \"allOf\": [\n                    {\n                        \"$ref\": \"#/components/schemas/metadata\"\n                    },\n                    {\n                        \"properties\": {\n                            \"filter\": {\n                                \"type\": \"string\"\n                            },\n                            \"sort_by\": {\n                                \"type\": \"string\"\n                            },\n                            \"sort_order\": {\n                                \"type\": \"string\",\n                                \"enum\": [\n                                    \"asc\",\n                                    \"desc\"\n                                ]\n                            },\n                            \"count\": {\n                                \"type\": \"integer\"\n                            },\n                            \"total_pages\": {\n                                \"type\": \"integer\"\n                            },\n                            \"current_page\": {\n                                \"type\": \"integer\"\n                            },\n                            \"form\": {\n                                \"type\": \"integer\"\n                            },\n                            \"last_page\": {\n                                \"type\": \"integer\"\n                            },\n                            \"path\": {\n                                \"type\": \"string\"\n                            },\n                            \"per_page\": {\n                                \"type\": \"integer\"\n                            },\n                            \"to\": {\n                                \"type\": \"integer\"\n                            },\n                            \"total\": {\n                                \"type\": \"integer\"\n                            },\n                            \"in_overdue\": {\n                                \"type\": \"integer\"\n                            }\n                        },\n                        \"type\": \"object\"\n                    }\n                ]\n            },\n            \"columns\": {\n                \"properties\": {\n                    \"label\": {\n                        \"type\": \"string\"\n                    },\n                    \"field\": {\n                        \"type\": \"string\"\n                    },\n                    \"sortable\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"default\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"format\": {\n                        \"type\": \"string\"\n                    },\n                    \"mask\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"commentsEditable\": {\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"string\",\n                        \"format\": \"id\"\n                    },\n                    \"user_id\": {\n                        \"type\": \"string\",\n                        \"format\": \"id\"\n                    },\n                    \"commentable_id\": {\n                        \"type\": \"string\",\n                        \"format\": \"id\"\n                    },\n                    \"commentable_type\": {\n                        \"type\": \"string\"\n                    },\n                    \"up\": {\n                        \"type\": \"integer\"\n                    },\n                    \"down\": {\n                        \"type\": \"integer\"\n                    },\n                    \"subject\": {\n                        \"type\": \"string\"\n                    },\n                    \"body\": {\n                        \"type\": \"string\"\n                    },\n                    \"hidden\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"type\": {\n                        \"type\": \"string\",\n                        \"enum\": [\n                            \"LOG\",\n                            \"MESSAGE\"\n                        ]\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"comments\": {\n                \"description\": \"Represents a business process definition.\",\n                \"type\": \"object\",\n                \"allOf\": [\n                    {\n                        \"$ref\": \"#/components/schemas/commentsEditable\"\n                    },\n                    {\n                        \"properties\": {\n                            \"created_at\": {\n                                \"type\": \"string\",\n                                \"format\": \"date-time\"\n                            },\n                            \"updated_at\": {\n                                \"type\": \"string\",\n                                \"format\": \"date-time\"\n                            }\n                        }\n                    }\n                ]\n            },\n            \"EnvironmentVariableEditable\": {\n                \"properties\": {\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": {\n                        \"type\": \"string\"\n                    },\n                    \"value\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"EnvironmentVariable\": {\n                \"allOf\": [\n                    {\n                        \"$ref\": \"#/components/schemas/EnvironmentVariableEditable\"\n                    },\n                    {\n                        \"properties\": {\n                            \"id\": {\n                                \"type\": \"integer\",\n                                \"format\": \"id\"\n                            },\n                            \"created_at\": {\n                                \"type\": \"string\",\n                                \"format\": \"date-time\"\n                            },\n                            \"updated_at\": {\n                                \"type\": \"string\",\n                                \"format\": \"date-time\"\n                            }\n                        },\n                        \"type\": \"object\"\n                    }\n                ]\n            },\n            \"groupsEditable\": {\n                \"properties\": {\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": {\n                        \"type\": \"string\"\n                    },\n                    \"manager_id\": {\n                        \"type\": \"int\",\n                        \"format\": \"id\"\n                    },\n                    \"status\": {\n                        \"type\": \"string\",\n                        \"enum\": [\n                            \"ACTIVE\",\n                            \"INACTIVE\"\n                        ]\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"groups\": {\n                \"description\": \"Represents a group definition.\",\n                \"allOf\": [\n                    {\n                        \"$ref\": \"#/components/schemas/groupsEditable\"\n                    },\n                    {\n                        \"properties\": {\n                            \"created_at\": {\n                                \"type\": \"string\",\n                                \"format\": \"date-time\"\n                            },\n                            \"updated_at\": {\n                                \"type\": \"string\",\n                                \"format\": \"date-time\"\n                            },\n                            \"id\": {\n                                \"type\": \"string\",\n                                \"format\": \"id\"\n                            }\n                        },\n                        \"type\": \"object\"\n                    }\n                ]\n            },\n            \"groupMembersEditable\": {\n                \"properties\": {\n                    \"group_id\": {\n                        \"type\": \"string\",\n                        \"format\": \"id\"\n                    },\n                    \"member_id\": {\n                        \"type\": \"string\",\n                        \"format\": \"id\"\n                    },\n                    \"member_type\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"groupMembers\": {\n                \"allOf\": [\n                    {\n                        \"$ref\": \"#/components/schemas/groupMembersEditable\"\n                    },\n                    {\n                        \"properties\": {\n                            \"id\": {\n                                \"type\": \"string\",\n                                \"format\": \"id\"\n                            },\n                            \"created_at\": {\n                                \"type\": \"string\",\n                                \"format\": \"date-time\"\n                            },\n                            \"updated_at\": {\n                                \"type\": \"string\",\n                                \"format\": \"date-time\"\n                            }\n                        },\n                        \"type\": \"object\"\n                    }\n                ]\n            },\n            \"createGroupMembers\": {\n                \"allOf\": [\n                    {\n                        \"$ref\": \"#/components/schemas/groupMembersEditable\"\n                    },\n                    {\n                        \"properties\": {\n                            \"id\": {\n                                \"type\": \"string\",\n                                \"format\": \"id\"\n                            },\n                            \"group\": {\n                                \"type\": \"object\"\n                            },\n                            \"member\": {\n                                \"type\": \"object\"\n                            },\n                            \"created_at\": {\n                                \"type\": \"string\",\n                                \"format\": \"date-time\"\n                            },\n                            \"updated_at\": {\n                                \"type\": \"string\",\n                                \"format\": \"date-time\"\n                            }\n                        },\n                        \"type\": \"object\"\n                    }\n                ]\n            },\n            \"getGroupMembersById\": {\n                \"allOf\": [\n                    {\n                        \"properties\": {\n                            \"group_id\": {\n                                \"type\": \"string\",\n                                \"format\": \"id\"\n                            },\n                            \"member_id\": {\n                                \"type\": \"string\",\n                                \"format\": \"id\"\n                            },\n                            \"member_type\": {\n                                \"type\": \"string\"\n                            },\n                            \"id\": {\n                                \"type\": \"string\",\n                                \"format\": \"id\"\n                            },\n                            \"created_at\": {\n                                \"type\": \"string\",\n                                \"format\": \"date-time\"\n                            },\n                            \"updated_at\": {\n                                \"type\": \"string\",\n                                \"format\": \"date-time\"\n                            }\n                        },\n                        \"type\": \"object\"\n                    }\n                ]\n            },\n            \"availableGroupMembers\": {\n                \"description\": \"Represents a group Members definition.\",\n                \"allOf\": [\n                    {\n                        \"properties\": {\n                            \"id\": {\n                                \"type\": \"string\",\n                                \"format\": \"id\"\n                            },\n                            \"description\": {\n                                \"type\": \"string\"\n                            },\n                            \"name\": {\n                                \"type\": \"string\"\n                            },\n                            \"status\": {\n                                \"type\": \"string\",\n                                \"enum\": [\n                                    \"ACTIVE\",\n                                    \"INACTIVE\"\n                                ]\n                            },\n                            \"created_at\": {\n                                \"type\": \"string\",\n                                \"format\": \"date-time\"\n                            },\n                            \"updated_at\": {\n                                \"type\": \"string\",\n                                \"format\": \"date-time\"\n                            }\n                        },\n                        \"type\": \"object\"\n                    }\n                ]\n            },\n            \"mediaEditable\": {\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"integer\",\n                        \"format\": \"id\"\n                    },\n                    \"model_id\": {\n                        \"type\": \"integer\",\n                        \"format\": \"id\"\n                    },\n                    \"model_type\": {\n                        \"type\": \"string\",\n                        \"format\": \"id\"\n                    },\n                    \"collection_name\": {\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"file_name\": {\n                        \"type\": \"string\"\n                    },\n                    \"mime_type\": {\n                        \"type\": \"string\"\n                    },\n                    \"disk\": {\n                        \"type\": \"string\"\n                    },\n                    \"size\": {\n                        \"type\": \"integer\"\n                    },\n                    \"manipulations\": {\n                        \"type\": \"object\"\n                    },\n                    \"custom_properties\": {\n                        \"type\": \"object\"\n                    },\n                    \"responsive_images\": {\n                        \"type\": \"object\"\n                    },\n                    \"order_column\": {\n                        \"type\": \"integer\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"media\": {\n                \"type\": \"object\",\n                \"allOf\": [\n                    {\n                        \"$ref\": \"#/components/schemas/mediaEditable\"\n                    },\n                    {\n                        \"properties\": {\n                            \"created_at\": {\n                                \"type\": \"string\",\n                                \"format\": \"date-time\"\n                            },\n                            \"updated_at\": {\n                                \"type\": \"string\",\n                                \"format\": \"date-time\"\n                            }\n                        }\n                    }\n                ]\n            },\n            \"mediaExported\": {\n                \"description\": \"Represents media files stored in the database\",\n                \"properties\": {\n                    \"url\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"NotificationEditable\": {\n                \"properties\": {\n                    \"type\": {\n                        \"type\": \"string\"\n                    },\n                    \"notifiable_type\": {\n                        \"type\": \"string\"\n                    },\n                    \"notifiable_id\": {\n                        \"type\": \"integer\"\n                    },\n                    \"data\": {\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"message\": {\n                        \"type\": \"string\"\n                    },\n                    \"processName\": {\n                        \"type\": \"string\"\n                    },\n                    \"userName\": {\n                        \"type\": \"string\"\n                    },\n                    \"request_id\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"Notification\": {\n                \"description\": \"Represents a notification definition.\",\n                \"allOf\": [\n                    {\n                        \"$ref\": \"#/components/schemas/NotificationEditable\"\n                    },\n                    {\n                        \"properties\": {\n                            \"id\": {\n                                \"type\": \"string\"\n                            },\n                            \"read_at\": {\n                                \"type\": \"string\",\n                                \"format\": \"date-time\"\n                            },\n                            \"created_at\": {\n                                \"type\": \"string\",\n                                \"format\": \"date-time\"\n                            },\n                            \"updated_at\": {\n                                \"type\": \"string\",\n                                \"format\": \"date-time\"\n                            }\n                        },\n                        \"type\": \"object\"\n                    }\n                ]\n            },\n            \"ProcessEditable\": {\n                \"properties\": {\n                    \"process_category_id\": {\n                        \"type\": \"integer\",\n                        \"format\": \"id\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": {\n                        \"type\": \"string\"\n                    },\n                    \"status\": {\n                        \"type\": \"string\",\n                        \"enum\": [\n                            \"ACTIVE\",\n                            \"INACTIVE\",\n                            \"ARCHIVED\"\n                        ]\n                    },\n                    \"pause_timer_start\": {\n                        \"type\": \"integer\"\n                    },\n                    \"cancel_screen_id\": {\n                        \"type\": \"integer\"\n                    },\n                    \"has_timer_start_events\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"request_detail_screen_id\": {\n                        \"type\": \"integer\",\n                        \"format\": \"id\"\n                    },\n                    \"is_valid\": {\n                        \"type\": \"integer\"\n                    },\n                    \"package_key\": {\n                        \"type\": \"string\"\n                    },\n                    \"start_events\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/ProcessStartEvents\"\n                        }\n                    },\n                    \"warnings\": {\n                        \"type\": \"string\"\n                    },\n                    \"self_service_tasks\": {\n                        \"type\": \"object\"\n                    },\n                    \"signal_events\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"object\"\n                        }\n                    },\n                    \"category\": {},\n                    \"manager_id\": {\n                        \"type\": \"integer\",\n                        \"format\": \"id\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"Process\": {\n                \"allOf\": [\n                    {\n                        \"$ref\": \"#/components/schemas/ProcessEditable\"\n                    },\n                    {\n                        \"properties\": {\n                            \"user_id\": {\n                                \"type\": \"integer\",\n                                \"format\": \"id\"\n                            },\n                            \"id\": {\n                                \"type\": \"string\",\n                                \"format\": \"id\"\n                            },\n                            \"deleted_at\": {\n                                \"type\": \"string\",\n                                \"format\": \"date-time\"\n                            },\n                            \"created_at\": {\n                                \"type\": \"string\",\n                                \"format\": \"date-time\"\n                            },\n                            \"updated_at\": {\n                                \"type\": \"string\",\n                                \"format\": \"date-time\"\n                            },\n                            \"notifications\": {\n                                \"type\": \"object\"\n                            },\n                            \"task_notifications\": {\n                                \"type\": \"object\"\n                            }\n                        },\n                        \"type\": \"object\"\n                    }\n                ]\n            },\n            \"ProcessStartEvents\": {\n                \"properties\": {\n                    \"eventDefinitions\": {\n                        \"type\": \"object\"\n                    },\n                    \"parallelMultiple\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"outgoing\": {\n                        \"type\": \"object\"\n                    },\n                    \"incoming\": {\n                        \"type\": \"object\"\n                    },\n                    \"id\": {\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"ProcessWithStartEvents\": {\n                \"allOf\": [\n                    {\n                        \"$ref\": \"#/components/schemas/Process\"\n                    },\n                    {\n                        \"properties\": {\n                            \"events\": {\n                                \"type\": \"array\",\n                                \"items\": {\n                                    \"$ref\": \"#/components/schemas/ProcessStartEvents\"\n                                }\n                            }\n                        },\n                        \"type\": \"object\"\n                    }\n                ]\n            },\n            \"ProcessImport\": {\n                \"allOf\": [\n                    {\n                        \"$ref\": \"#/components/schemas/ProcessEditable\"\n                    },\n                    {\n                        \"properties\": {\n                            \"status\": {\n                                \"type\": \"array\",\n                                \"items\": {\n                                    \"type\": \"object\"\n                                }\n                            },\n                            \"assignable\": {\n                                \"type\": \"array\",\n                                \"items\": {\n                                    \"type\": \"object\"\n                                }\n                            },\n                            \"process\": {}\n                        },\n                        \"type\": \"object\"\n                    }\n                ]\n            },\n            \"ProcessAssignments\": {\n                \"description\": \"Represents a business process definition.\",\n                \"properties\": {\n                    \"assignable\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"object\"\n                        }\n                    },\n                    \"cancel_request\": {\n                        \"type\": \"object\"\n                    },\n                    \"edit_data\": {\n                        \"type\": \"object\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"ProcessCategoryEditable\": {\n                \"properties\": {\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"status\": {\n                        \"type\": \"string\",\n                        \"enum\": [\n                            \"ACTIVE\",\n                            \"INACTIVE\"\n                        ]\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"ProcessCategory\": {\n                \"description\": \"Represents a business process category definition.\",\n                \"allOf\": [\n                    {\n                        \"$ref\": \"#/components/schemas/ProcessCategoryEditable\"\n                    },\n                    {\n                        \"properties\": {\n                            \"id\": {\n                                \"type\": \"string\",\n                                \"format\": \"id\"\n                            },\n                            \"created_at\": {\n                                \"type\": \"string\",\n                                \"format\": \"date-time\"\n                            },\n                            \"updated_at\": {\n                                \"type\": \"string\",\n                                \"format\": \"date-time\"\n                            }\n                        },\n                        \"type\": \"object\"\n                    }\n                ]\n            },\n            \"processPermissionsEditable\": {\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"integer\",\n                        \"format\": \"id\"\n                    },\n                    \"process_id\": {\n                        \"type\": \"integer\",\n                        \"format\": \"id\"\n                    },\n                    \"permission_id\": {\n                        \"type\": \"integer\",\n                        \"format\": \"id\"\n                    },\n                    \"assignable_id\": {\n                        \"type\": \"integer\",\n                        \"format\": \"id\"\n                    },\n                    \"assignable_type\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"processPermissions\": {\n                \"description\": \"Represents a Process permission.\",\n                \"type\": \"object\",\n                \"allOf\": [\n                    {\n                        \"$ref\": \"#/components/schemas/processPermissionsEditable\"\n                    },\n                    {\n                        \"properties\": {\n                            \"created_at\": {\n                                \"type\": \"string\",\n                                \"format\": \"date-time\"\n                            },\n                            \"updated_at\": {\n                                \"type\": \"string\",\n                                \"format\": \"date-time\"\n                            }\n                        }\n                    }\n                ]\n            },\n            \"processRequestEditable\": {\n                \"properties\": {\n                    \"user_id\": {\n                        \"type\": \"string\",\n                        \"format\": \"id\"\n                    },\n                    \"callable_id\": {\n                        \"type\": \"string\",\n                        \"format\": \"id\"\n                    },\n                    \"data\": {\n                        \"type\": \"object\"\n                    },\n                    \"status\": {\n                        \"type\": \"string\",\n                        \"enum\": [\n                            \"ACTIVE\",\n                            \"COMPLETED\",\n                            \"ERROR\",\n                            \"CANCELED\"\n                        ]\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"process_id\": {\n                        \"type\": \"integer\"\n                    },\n                    \"process\": {\n                        \"type\": \"object\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"processRequest\": {\n                \"description\": \"Represents an Eloquent model of a Request which is an instance of a Process.\",\n                \"allOf\": [\n                    {\n                        \"$ref\": \"#/components/schemas/processRequestEditable\"\n                    },\n                    {\n                        \"properties\": {\n                            \"id\": {\n                                \"type\": \"string\",\n                                \"format\": \"id\"\n                            },\n                            \"process_id\": {\n                                \"type\": \"string\",\n                                \"format\": \"id\"\n                            },\n                            \"process_collaboration_id\": {\n                                \"type\": \"string\",\n                                \"format\": \"id\"\n                            },\n                            \"participant_id\": {\n                                \"type\": \"string\",\n                                \"format\": \"id\"\n                            },\n                            \"process_category_id\": {\n                                \"type\": \"string\",\n                                \"format\": \"id\"\n                            },\n                            \"created_at\": {\n                                \"type\": \"string\",\n                                \"format\": \"date-time\"\n                            },\n                            \"updated_at\": {\n                                \"type\": \"string\",\n                                \"format\": \"date-time\"\n                            },\n                            \"user\": {},\n                            \"participants\": {\n                                \"type\": \"array\",\n                                \"items\": {\n                                    \"$ref\": \"#/components/schemas/users\"\n                                }\n                            }\n                        },\n                        \"type\": \"object\"\n                    }\n                ]\n            },\n            \"processRequestTokenEditable\": {\n                \"properties\": {\n                    \"user_id\": {\n                        \"type\": \"string\",\n                        \"format\": \"id\"\n                    },\n                    \"status\": {\n                        \"type\": \"string\"\n                    },\n                    \"due_at\": {\n                        \"type\": \"date-time\"\n                    },\n                    \"initiated_at\": {\n                        \"type\": \"string\",\n                        \"format\": \"date-time\"\n                    },\n                    \"riskchanges_at\": {\n                        \"type\": \"string\",\n                        \"format\": \"date-time\"\n                    },\n                    \"subprocess_start_event_id\": {\n                        \"type\": \"string\"\n                    },\n                    \"data\": {\n                        \"type\": \"object\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"processRequestToken\": {\n                \"description\": \"ProcessRequestToken is used to store the state of a token of the\\nNayra engine\",\n                \"allOf\": [\n                    {\n                        \"$ref\": \"#/components/schemas/processRequestTokenEditable\"\n                    },\n                    {\n                        \"properties\": {\n                            \"id\": {\n                                \"type\": \"string\",\n                                \"format\": \"id\"\n                            },\n                            \"process_id\": {\n                                \"type\": \"string\",\n                                \"format\": \"id\"\n                            },\n                            \"process_request_id\": {\n                                \"type\": \"string\",\n                                \"format\": \"id\"\n                            },\n                            \"element_id\": {\n                                \"type\": \"string\",\n                                \"format\": \"id\"\n                            },\n                            \"element_type\": {\n                                \"type\": \"string\",\n                                \"format\": \"id\"\n                            },\n                            \"element_index\": {\n                                \"type\": \"string\"\n                            },\n                            \"element_name\": {\n                                \"type\": \"string\"\n                            },\n                            \"created_at\": {\n                                \"type\": \"string\",\n                                \"format\": \"date-time\"\n                            },\n                            \"updated_at\": {\n                                \"type\": \"string\",\n                                \"format\": \"date-time\"\n                            },\n                            \"initiated_at\": {\n                                \"type\": \"string\",\n                                \"format\": \"date-time\"\n                            },\n                            \"advanceStatus\": {\n                                \"type\": \"string\"\n                            },\n                            \"due_notified\": {\n                                \"type\": \"integer\"\n                            },\n                            \"user\": {},\n                            \"process\": {},\n                            \"process_request\": {}\n                        },\n                        \"type\": \"object\"\n                    }\n                ]\n            },\n            \"taskAssignmentsEditable\": {\n                \"properties\": {\n                    \"process_id\": {\n                        \"type\": \"string\",\n                        \"format\": \"id\"\n                    },\n                    \"process_task_id\": {\n                        \"type\": \"string\",\n                        \"format\": \"id\"\n                    },\n                    \"assignment_id\": {\n                        \"type\": \"string\",\n                        \"format\": \"id\"\n                    },\n                    \"assignment_type\": {\n                        \"type\": \"string\",\n                        \"enum\": [\n                            \"ProcessMaker\\\\Models\\\\User\",\n                            \"ProcessMaker\\\\Models\\\\Group\"\n                        ]\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"taskAssignments\": {\n                \"description\": \"Represents a business process task assignment definition.\",\n                \"type\": \"object\",\n                \"allOf\": [\n                    {\n                        \"$ref\": \"#/components/schemas/taskAssignmentsEditable\"\n                    },\n                    {\n                        \"properties\": {\n                            \"id\": {\n                                \"type\": \"string\",\n                                \"format\": \"id\"\n                            },\n                            \"created_at\": {\n                                \"type\": \"string\",\n                                \"format\": \"date-time\"\n                            },\n                            \"updated_at\": {\n                                \"type\": \"string\",\n                                \"format\": \"date-time\"\n                            }\n                        }\n                    }\n                ]\n            },\n            \"screensEditable\": {\n                \"properties\": {\n                    \"title\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": {\n                        \"type\": \"string\"\n                    },\n                    \"config\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"object\"\n                        }\n                    },\n                    \"computed\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"object\"\n                        }\n                    },\n                    \"watchers\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"object\"\n                        }\n                    },\n                    \"custom_css\": {\n                        \"type\": \"string\"\n                    },\n                    \"screen_category_id\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"screens\": {\n                \"allOf\": [\n                    {\n                        \"$ref\": \"#/components/schemas/screensEditable\"\n                    },\n                    {\n                        \"properties\": {\n                            \"id\": {\n                                \"type\": \"string\",\n                                \"format\": \"id\"\n                            },\n                            \"created_at\": {\n                                \"type\": \"string\",\n                                \"format\": \"date-time\"\n                            },\n                            \"updated_at\": {\n                                \"type\": \"string\",\n                                \"format\": \"date-time\"\n                            }\n                        },\n                        \"type\": \"object\"\n                    }\n                ]\n            },\n            \"screenExported\": {\n                \"description\": \"Class Screen\",\n                \"properties\": {\n                    \"url\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"ScreenCategoryEditable\": {\n                \"properties\": {\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"status\": {\n                        \"type\": \"string\",\n                        \"enum\": [\n                            \"ACTIVE\",\n                            \"INACTIVE\"\n                        ]\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"ScreenCategory\": {\n                \"description\": \"Represents a business screen category definition.\",\n                \"allOf\": [\n                    {\n                        \"$ref\": \"#/components/schemas/ScreenCategoryEditable\"\n                    },\n                    {\n                        \"properties\": {\n                            \"id\": {\n                                \"type\": \"string\",\n                                \"format\": \"id\"\n                            },\n                            \"created_at\": {\n                                \"type\": \"string\",\n                                \"format\": \"date-time\"\n                            },\n                            \"updated_at\": {\n                                \"type\": \"string\",\n                                \"format\": \"date-time\"\n                            }\n                        },\n                        \"type\": \"object\"\n                    }\n                ]\n            },\n            \"ScreenTypeEditable\": {\n                \"properties\": {\n                    \"name\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"ScreenType\": {\n                \"description\": \"Represents a business screen Type definition.\",\n                \"allOf\": [\n                    {\n                        \"$ref\": \"#/components/schemas/ScreenTypeEditable\"\n                    },\n                    {\n                        \"properties\": {\n                            \"id\": {\n                                \"type\": \"string\",\n                                \"format\": \"id\"\n                            }\n                        },\n                        \"type\": \"object\"\n                    }\n                ]\n            },\n            \"scriptsEditable\": {\n                \"properties\": {\n                    \"title\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": {\n                        \"type\": \"string\"\n                    },\n                    \"language\": {\n                        \"type\": \"string\"\n                    },\n                    \"code\": {\n                        \"type\": \"string\"\n                    },\n                    \"timeout\": {\n                        \"type\": \"integer\"\n                    },\n                    \"run_as_user_id\": {\n                        \"type\": \"integer\"\n                    },\n                    \"key\": {\n                        \"type\": \"string\"\n                    },\n                    \"script_category_id\": {\n                        \"type\": \"integer\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"scripts\": {\n                \"allOf\": [\n                    {\n                        \"$ref\": \"#/components/schemas/scriptsEditable\"\n                    },\n                    {\n                        \"properties\": {\n                            \"id\": {\n                                \"type\": \"integer\",\n                                \"format\": \"id\"\n                            },\n                            \"created_at\": {\n                                \"type\": \"string\",\n                                \"format\": \"date-time\"\n                            },\n                            \"updated_at\": {\n                                \"type\": \"string\",\n                                \"format\": \"date-time\"\n                            }\n                        },\n                        \"type\": \"object\"\n                    }\n                ]\n            },\n            \"scriptsPreview\": {\n                \"description\": \"Represents an Eloquent model of a Script\",\n                \"properties\": {\n                    \"status\": {\n                        \"type\": \"string\"\n                    },\n                    \"key\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"ScriptCategoryEditable\": {\n                \"properties\": {\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"status\": {\n                        \"type\": \"string\",\n                        \"enum\": [\n                            \"ACTIVE\",\n                            \"INACTIVE\"\n                        ]\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"ScriptCategory\": {\n                \"description\": \"Represents a business script category definition.\",\n                \"allOf\": [\n                    {\n                        \"$ref\": \"#/components/schemas/ScriptCategoryEditable\"\n                    },\n                    {\n                        \"properties\": {\n                            \"id\": {\n                                \"type\": \"string\",\n                                \"format\": \"id\"\n                            },\n                            \"created_at\": {\n                                \"type\": \"string\",\n                                \"format\": \"date-time\"\n                            },\n                            \"updated_at\": {\n                                \"type\": \"string\",\n                                \"format\": \"date-time\"\n                            }\n                        },\n                        \"type\": \"object\"\n                    }\n                ]\n            },\n            \"settingsEditable\": {\n                \"properties\": {\n                    \"key\": {\n                        \"type\": \"string\"\n                    },\n                    \"config\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"object\"\n                        }\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"helper\": {\n                        \"type\": \"string\"\n                    },\n                    \"group\": {\n                        \"type\": \"string\"\n                    },\n                    \"format\": {\n                        \"type\": \"string\"\n                    },\n                    \"hidden\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"readonly\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"variables\": {\n                        \"type\": \"string\"\n                    },\n                    \"sansSerifFont\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"settings\": {\n                \"description\": \"Class Settings\",\n                \"allOf\": [\n                    {\n                        \"$ref\": \"#/components/schemas/settingsEditable\"\n                    },\n                    {\n                        \"properties\": {\n                            \"id\": {\n                                \"type\": \"string\",\n                                \"format\": \"id\"\n                            },\n                            \"created_at\": {\n                                \"type\": \"string\",\n                                \"format\": \"date-time\"\n                            },\n                            \"updated_at\": {\n                                \"type\": \"string\",\n                                \"format\": \"date-time\"\n                            }\n                        },\n                        \"type\": \"object\"\n                    }\n                ]\n            },\n            \"usersEditable\": {\n                \"properties\": {\n                    \"email\": {\n                        \"type\": \"string\",\n                        \"format\": \"email\"\n                    },\n                    \"firstname\": {\n                        \"type\": \"string\"\n                    },\n                    \"lastname\": {\n                        \"type\": \"string\"\n                    },\n                    \"username\": {\n                        \"type\": \"string\"\n                    },\n                    \"password\": {\n                        \"type\": \"string\"\n                    },\n                    \"address\": {\n                        \"type\": \"string\"\n                    },\n                    \"city\": {\n                        \"type\": \"string\"\n                    },\n                    \"state\": {\n                        \"type\": \"string\"\n                    },\n                    \"postal\": {\n                        \"type\": \"string\"\n                    },\n                    \"country\": {\n                        \"type\": \"string\"\n                    },\n                    \"phone\": {\n                        \"type\": \"string\"\n                    },\n                    \"fax\": {\n                        \"type\": \"string\"\n                    },\n                    \"cell\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": {\n                        \"type\": \"string\"\n                    },\n                    \"timezone\": {\n                        \"type\": \"string\"\n                    },\n                    \"datetime_format\": {\n                        \"type\": \"string\"\n                    },\n                    \"language\": {\n                        \"type\": \"string\"\n                    },\n                    \"is_administrator\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"expires_at\": {\n                        \"type\": \"string\"\n                    },\n                    \"loggedin_at\": {\n                        \"type\": \"string\"\n                    },\n                    \"remember_token\": {\n                        \"type\": \"string\"\n                    },\n                    \"status\": {\n                        \"type\": \"string\",\n                        \"enum\": [\n                            \"ACTIVE\",\n                            \"INACTIVE\",\n                            \"SCHEDULED\",\n                            \"OUT_OF_OFFICE\"\n                        ]\n                    },\n                    \"fullname\": {\n                        \"type\": \"string\"\n                    },\n                    \"avatar\": {\n                        \"type\": \"string\"\n                    },\n                    \"media\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/media\"\n                        }\n                    },\n                    \"birthdate\": {\n                        \"type\": \"string\",\n                        \"format\": \"date\"\n                    },\n                    \"delegation_user_id\": {\n                        \"type\": \"string\",\n                        \"format\": \"id\"\n                    },\n                    \"manager_id\": {\n                        \"type\": \"string\",\n                        \"format\": \"id\"\n                    },\n                    \"meta\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": true\n                    },\n                    \"force_change_password\": {\n                        \"type\": \"boolean\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"users\": {\n                \"description\": \"The attributes that are mass assignable.\",\n                \"allOf\": [\n                    {\n                        \"$ref\": \"#/components/schemas/usersEditable\"\n                    },\n                    {\n                        \"properties\": {\n                            \"id\": {\n                                \"type\": \"integer\"\n                            },\n                            \"created_at\": {\n                                \"type\": \"string\",\n                                \"format\": \"date-time\"\n                            },\n                            \"updated_at\": {\n                                \"type\": \"string\",\n                                \"format\": \"date-time\"\n                            },\n                            \"deleted_at\": {\n                                \"type\": \"string\",\n                                \"format\": \"date-time\"\n                            }\n                        },\n                        \"type\": \"object\"\n                    }\n                ]\n            }\n        },\n        \"responses\": {\n            \"404\": {\n                \"description\": \"Not Found\",\n                \"content\": {\n                    \"application/json\": {\n                        \"schema\": {\n                            \"properties\": {\n                                \"error\": {\n                                    \"type\": \"string\"\n                                }\n                            },\n                            \"type\": \"object\"\n                        }\n                    }\n                }\n            },\n            \"422\": {\n                \"description\": \"Unprocessable Entity\",\n                \"content\": {\n                    \"application/json\": {\n                        \"schema\": {\n                            \"properties\": {\n                                \"message\": {\n                                    \"type\": \"string\"\n                                },\n                                \"errors\": {\n                                    \"type\": \"object\"\n                                }\n                            },\n                            \"type\": \"object\"\n                        }\n                    }\n                }\n            }\n        },\n        \"parameters\": {\n            \"filter\": {\n                \"name\": \"filter\",\n                \"in\": \"query\",\n                \"description\": \"Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring.\",\n                \"schema\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"order_by\": {\n                \"name\": \"order_by\",\n                \"in\": \"query\",\n                \"description\": \"Field to order results by\",\n                \"schema\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"status\": {\n                \"name\": \"status\",\n                \"in\": \"query\",\n                \"description\": \"ACTIVE or INACTIVE\",\n                \"schema\": {\n                    \"type\": \"string\",\n                    \"enum\": [\n                        \"ACTIVE\",\n                        \"INACTIVE\"\n                    ]\n                }\n            },\n            \"order_direction\": {\n                \"name\": \"order_direction\",\n                \"in\": \"query\",\n                \"schema\": {\n                    \"type\": \"string\",\n                    \"default\": \"asc\",\n                    \"enum\": [\n                        \"asc\",\n                        \"desc\"\n                    ]\n                }\n            },\n            \"per_page\": {\n                \"name\": \"per_page\",\n                \"in\": \"query\",\n                \"schema\": {\n                    \"type\": \"integer\",\n                    \"default\": \"10\"\n                }\n            },\n            \"include\": {\n                \"name\": \"include\",\n                \"in\": \"query\",\n                \"description\": \"Include data from related models in payload. Comma separated list.\",\n                \"schema\": {\n                    \"type\": \"string\",\n                    \"default\": \"\"\n                }\n            },\n            \"member_id\": {\n                \"name\": \"member_id\",\n                \"in\": \"query\",\n                \"schema\": {\n                    \"type\": \"integer\"\n                }\n            },\n            \"commentable_id\": {\n                \"name\": \"commentable_id\",\n                \"in\": \"query\",\n                \"schema\": {\n                    \"type\": \"integer\"\n                }\n            },\n            \"commentable_type\": {\n                \"name\": \"commentable_type\",\n                \"in\": \"query\",\n                \"schema\": {\n                    \"type\": \"string\",\n                    \"default\": \"\"\n                }\n            }\n        },\n        \"securitySchemes\": {\n            \"pm_api_auth_code\": {\n                \"type\": \"oauth2\",\n                \"flows\": {\n                    \"authorizationCode\": {\n                        \"authorizationUrl\": \"/oauth/authorize\",\n                        \"tokenUrl\": \"/oauth/token\",\n                        \"scopes\": {\n                            \"*\": \"\"\n                        }\n                    }\n                }\n            },\n            \"pm_api_bearer\": {\n                \"type\": \"http\",\n                \"scheme\": \"bearer\",\n                \"bearerFormat\": \"JWT\"\n            },\n            \"pm_api_key\": {\n                \"type\": \"apiKey\",\n                \"in\": \"header\",\n                \"name\": \"Authorization\"\n            }\n        }\n    },\n    \"security\": [\n        {\n            \"pm_api_auth_code\": []\n        },\n        {\n            \"pm_api_bearer\": []\n        },\n        {\n            \"pm_api_key\": []\n        }\n    ]\n}\n"
		}
	},
	"Error": "unmarshal: callback: unexpected type string"
}