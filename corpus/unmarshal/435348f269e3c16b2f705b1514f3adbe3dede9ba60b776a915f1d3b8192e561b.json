{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/MEF-GIT/MEF-LSO-Sonata-SDK"
		},
		"file": {
			"name": "productInventoryManagement.api.yaml",
			"size": 0,
			"path": "generated/staticBinding/full/productInventoryManagement.api.yaml",
			"byteSize": 285310,
			"content": "openapi: 3.0.1\ninfo:\n  description: |\n    **This file forms part of MEF 116**\n\n    This API implements Business Requirements described in MEF 81\n\n    It allows the Buyer to retrieve the information about existing Product\n    instances from Seller's Product Inventory.\n\n    List of supported use cases:\n    - Retrieve Product List\n    - Retrieve Product by Identifier\n\n    Copyright 2021 MEF Forum and its contributors.\n\n    This file includes content based on the TM Forum Product Inventory\n    Management API (TMF637 v4.0.0) available at\n    https://github.com/tmforum-apis/TMF637_ProductInventory, which is licensed\n    by the TM Forum under the Apache License version 2.0. Such content has been\n    modified by the MEF Forum and its contributors.\n  title: Product Inventory Management\n  version: 7.0.2\nservers:\n  - url: 'https://{serverBase}/mefApi/sonata/productInventory/v7/'\n    variables:\n      serverBase:\n        default: mef.net\n        description: The base of Seller's URL.\ntags:\n  - name: product\n  - name: events subscription\npaths:\n  /product:\n    get:\n      description: This operation lists or finds Product entities\n      operationId: listProduct\n      parameters:\n        - description: The status of the product\n          explode: true\n          in: query\n          name: status\n          required: false\n          schema:\n            enum:\n              - active\n              - active.pendingChange\n              - cancelled\n              - pendingActive\n              - pendingTerminate\n              - suspended\n              - suspendedPendingTerminate\n              - terminated\n            type: string\n          style: form\n        - description: A reference to a product spec by id\n          explode: true\n          in: query\n          name: productSpecificationId\n          required: false\n          schema:\n            type: string\n          style: form\n        - description: A reference to a product offering by id\n          explode: true\n          in: query\n          name: productOfferingId\n          required: false\n          schema:\n            type: string\n          style: form\n        - description: A reference to the externalId provided in the order\n          explode: true\n          in: query\n          name: externalId\n          required: false\n          schema:\n            type: string\n          style: form\n        - description: A site identifier which is associated to the product\n          explode: true\n          in: query\n          name: geographicalSiteId\n          required: false\n          schema:\n            type: string\n          style: form\n        - description: \u003e-\n            This criteria allows to retrieve all Product records with a Product\n            Relationship to a specified Product.\n\n            E.g. All Products related to Product with ID 5\n          explode: true\n          in: query\n          name: relatedProductId\n          required: false\n          schema:\n            type: string\n          style: form\n        - description: The Billing Account associated with the Product.\n          explode: true\n          in: query\n          name: billingAccountId\n          required: false\n          schema:\n            type: string\n          style: form\n        - description: Identifies Product Order associated with the Product\n          explode: true\n          in: query\n          name: productOrderId\n          required: false\n          schema:\n            type: string\n          style: form\n        - description: Less than the date that is the initial install date for the Product\n          explode: true\n          in: query\n          name: startDate.lt\n          required: false\n          schema:\n            format: date-time\n            type: string\n          style: form\n        - description: \u003e-\n            Greater than the date that is the initial install date for the\n            Product\n          explode: true\n          in: query\n          name: startDate.gt\n          required: false\n          schema:\n            format: date-time\n            type: string\n          style: form\n        - description: \u003e-\n            Less than date that the last change affecting this Product was\n            completed\n          explode: true\n          in: query\n          name: lastUpdateDate.lt\n          required: false\n          schema:\n            format: date-time\n            type: string\n          style: form\n        - description: \u003e-\n            Greater than the date that the last change affecting this Product\n            was completed\n          explode: true\n          in: query\n          name: lastUpdateDate.gt\n          required: false\n          schema:\n            format: date-time\n            type: string\n          style: form\n        - description: \u003e-\n            The unique identifier of the organization that is acting as the a\n            Buyer. MUST be specified in the request only when the requester\n            represents more than one Buyer.\n\n            Reference: MEF 81 (Sn 8.3)\n          explode: true\n          in: query\n          name: buyerId\n          required: false\n          schema:\n            type: string\n          style: form\n        - description: \u003e-\n            The unique identifier of the organization that is acting as the\n            Seller. MUST be specified in the request only when responding\n            entity  represents more than one Seller.\n\n            Reference: MEF 81 (Sn 8.3)\n          explode: true\n          in: query\n          name: sellerId\n          required: false\n          schema:\n            type: string\n          style: form\n        - description: \u003e-\n            Requested index for start of item to be provided in response\n            requested by client. Note that the index starts with \"0\".\n          explode: true\n          in: query\n          name: offset\n          required: false\n          schema:\n            format: int32\n            type: integer\n          style: form\n        - description: \u003e-\n            Requested number of items to be provided in response requested by\n            client\n          explode: true\n          in: query\n          name: limit\n          required: false\n          schema:\n            format: int32\n            type: integer\n          style: form\n      responses:\n        '200':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                items:\n                  $ref: '#/components/schemas/MEFProduct_Find'\n                type: array\n          description: 'OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)'\n          headers:\n            X-Pagination-Throttled:\n              description: \u003e\n                Used to indicate that result page was throttled to maximum\n                possible size  and there are additional results that can be\n                fetched\n              explode: false\n              schema:\n                type: boolean\n              style: simple\n            X-Total-Count:\n              description: \u003e\n                The total number of matching items. E.g. if there are 50\n                matching items in total, but the request has offset=10 and\n                limit=10, then the X-Total-Count is 50.\n              explode: false\n              schema:\n                type: integer\n              style: simple\n            X-Result-Count:\n              description: The number of items included in the response\n              explode: false\n              schema:\n                type: integer\n              style: simple\n        '400':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        '401':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        '403':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        '422':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Error422'\n                type: array\n          description: Unprocessable entity due to the business validation problems\n        '500':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n      summary: List or find Product objects\n      tags:\n        - product\n  '/product/{id}':\n    get:\n      description: This operation retrieves a Product entity.\n      operationId: retrieveProduct\n      parameters:\n        - description: Identifier of the Product\n          explode: false\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n          style: simple\n        - description: Comma-separated properties to provide in response\n          explode: true\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n          style: form\n        - description: \u003e-\n            The unique identifier of the organization that is acting as the a\n            Buyer. MUST be specified in the request only when the requester\n            represents more than one Buyer.\n\n            Reference: MEF 81 (Sn 8.3)\n          explode: true\n          in: query\n          name: buyerId\n          required: false\n          schema:\n            type: string\n          style: form\n        - description: \u003e-\n            The unique identifier of the organization that is acting as the\n            Seller. MUST be specified in the request only when responding\n            entity  represents more than one Seller.\n\n            Reference: MEF 81 (Sn 8.3)\n          explode: true\n          in: query\n          name: sellerId\n          required: false\n          schema:\n            type: string\n          style: form\n      responses:\n        '200':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/MEFProduct'\n          description: 'OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)'\n        '400':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        '401':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        '403':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        '404':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error404'\n          description: Not Found\n        '500':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n      summary: Retrieves a Product by ID\n      tags:\n        - product\ncomponents:\n  schemas:\n    AccessEline:\n      allOf:\n        - $ref: '#/components/schemas/MEFProductConfiguration'\n        - $ref: '#/components/schemas/AccessElineOvcCommon'\n        - properties:\n            enniEp:\n              description: \u003e-\n                MEF 26.2 sec. 16 - The OVC EP object for the OVC EP at the ENNI.\n                The ENNI OVC End Point must be included in the Access E-Line\n                Product.\n              $ref: '#/components/schemas/AccessElineOvcEndPoint'\n            uniEp:\n              description: \u003e-\n                MEF 26.2 sec. 16 - The OVC EP object for the OVC EP at the UNI.\n                The UNI OVC End Point must be included in the Access E-Line\n                Product.\n              $ref: '#/components/schemas/AccessElineOvcEndPoint'\n          required:\n            - enniEp\n            - uniEp\n          type: object\n      x-discriminator-value: 'urn:mef:lso:spec:sonata:access-eline:v4.0.0:all'\n    AccessElineOvcCommon:\n      description: \u003e-\n        This class contains all of the Access E-Line OVC Services Attributes.\n        This class is used to compose the AccessElineOvc class.\n      properties:\n        ceVlanIdPreservation:\n          description: \u003e-\n            MEF 26.2 sec. 12.7 - Determines whether the C-tag in the Ingress\n            Frame is Stripped or Preserved in the Egress Frame. Per MEF 51.1,\n            the Operator must support PRESERVE and should support STRIP.\n          $ref: '#/components/schemas/CeVlanIdPreservation'\n        cTagPcpPreservation:\n          description: \u003e-\n            MEF 26.2 sec. 12.8 - If ENABLED, then the value of the C-tag PCP\n            field is preserved from Ingress to Egress. Per MEF 51.1, the\n            Operator must support ENABLED and should support DISABLED.\n          $ref: '#/components/schemas/EnabledDisabled'\n        cTagDeiPreservation:\n          description: \u003e-\n            MEF 26.2 sec. 12.9 - If ENABLED, then the value of the C-Tag DEI\n            field is preserved from Ingress to Egress. Per MEF 51.1, the\n            Operator must support ENABLED and should support DISABLED.\n          $ref: '#/components/schemas/EnabledDisabled'\n        ovcL2cpAddressSet:\n          description: \u003e-\n            MEF 45 sec. 8.1 and MEF 26.2 sec. 12.16 - The subset of the Bridge\n            Reserved Addresses that are Peered or Discarded (i.e. not Passed).\n            The value CTB or CTB2 must be used for port-based (private) services\n            and CTA for vlan-based (virtual private) services.\n          $ref: '#/components/schemas/L2cpAddressSet'\n        frameDisposition:\n          description: \u003e-\n            MEF 26.2 sec. 12.14 - A 3-tuple that indicates how Unicast,\n            Multicast, and Broadcast Frames are delivered by the service. For\n            each, the value can be UNCONDITIONAL, the frames are delivered\n            without condition, CONDITIONAL, the frames are delivered based on\n            conditions agreed to between Buyer and Seller (e.g., based on\n            learned addresses), and DISCARD. If CONDITIONAL is chosen for any of\n            the elements, the conditions must be agreed on by the Service\n            Provider and Operator by some other means.\n          $ref: '#/components/schemas/FrameDisposition'\n        listOfClassOfServiceNames:\n          description: \u003e-\n            MEF 26.2 sec. 12.12 - The OVC List of Class of Service Names Service\n            Attribute is used to specify all of the Class of Service Names\n            supported by an OVC. The value of the OVC List of Class of Service\n            Names Service Attribute is a non-empty list of Class of Service\n            Names (which may include one or more of the CoS Labels defined in\n            MEF 23.2).\n          items:\n            type: string\n          minItems: 1\n          type: array\n          uniqueItems: true\n        availableMegLevel:\n          description: \u003e-\n            MEF 26.2 sec. 12.15 - The lowest MEG level for which SOAM Frames are\n            not peered or discarded by the Service Provider. If this attribute\n            is NONE there is no such level (that is, SOAM frames at all MEG\n            levels may be peered or discarded by the Service Provider). MEF 51.1\n            constrains it to 0-6 for Access E-Line.\n          $ref: '#/components/schemas/AvailableMegList'\n        carrierEthernetSls:\n          description: \u003e-\n            MEF 26.2 sec. 12.13 - Technical details of the service level in\n            terms of Performance Objectives, agreed between the SP/SO and the\n            Operator as part of the Service Level Agreement. For each\n            Performance Metric included in the SLS, a Performance Objective must\n            be included as well as the parameter values needed for the\n            Performance Metric. If the value of this attribute is an empty list,\n            it is equivalent to a value of None per MEF 26.2.\n          items:\n            $ref: '#/components/schemas/CarrierEthernetSls'\n          maxItems: 1\n          minItems: 0\n          type: array\n          uniqueItems: true\n        maximumFrameSize:\n          description: \u003e-\n            MEF 26.2 sec. 12.6 - The max length in bytes allowed in a frame\n            mapped to an OVC EP associated by the OVC. The length of the frame\n            includes all bytes from the start of the destination MAC address\n            through the Frame Check Sequence. This must be at least 1526\n            (1518+C-tag+S-tag).\n          minimum: 1526\n          type: integer\n      type: object\n    AccessElineOvcEndPoint:\n      allOf:\n        - $ref: '#/components/schemas/AccessElineOvcEpCommon'\n      description: \u003e-\n        An OVC End Point is a logical entity at a given External Interface that\n        is associated with a distinct set of frames passing over that External\n        Interface. The OVC End Point schema is included in the definitions\n        section of the OVC schema.\n      type: object\n    AccessElineOvcEpCommon:\n      description: \u003e-\n        This class contains all of the Access E-Line OVC End Point Services\n        Attributes. This class is used to compose the AccessElineOvcEndPoint\n        class.\n      properties:\n        identifier:\n          description: \u003e-\n            MEF 26.2 sec. 16.1 - The value of the OVC EP ID Service Attribute is\n            a string that is used to allow the Subscriber and Service Provider\n            to uniquely identify the OVC EP for operations purposes.\n          maxLength: 45\n          minLength: 1\n          pattern: \"[ -\\x7F]+\"\n          type: string\n        egressEquivalenceClassIdentifier:\n          description: \u003e-\n            MEF 26.2 sec. 16.9 - The mechanism that allows an Egress Equivalence\n            Class Name to be determined for an egress EI Frame. ?F, M, P? where\n            F is a protocol field in the egress EI Frame, M is a map that maps\n            each possible value of the field F and the absence of the field F to\n            an Egress Equivalence Class Name and P is a map of L2CP type to\n            Egress Equivalence Class Name.\n          $ref: '#/components/schemas/CosFrom'\n        aggregationLinkDepth:\n          description: \u003e-\n            MEF 26.2 sec. 16.14 - A list of 2-tuples {SVID, Depth} that\n            indicates the number of ENNI links that can carry ENNI Frames for\n            each S-VLAN ID mapped to the OVC End Point. It indicates the level\n            of resiliency to use for the SVID at the ENNI.\n          items:\n            $ref: '#/components/schemas/AggLinkDepth'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        maintenanceIntermediatePoint:\n          description: \u003e-\n            MEF 26.2 sec. 16.16 - Indicates whether a MIP is instantiated at the\n            OVC End Point and the MEG Level of the MIP. When the value is not\n            None, several parameter values need to be determined as described in\n            MEF 30.1.\n          $ref: '#/components/schemas/MegList'\n        ovcEgressMap:\n          description: \u003e-\n            MEF 26.2 sec. 16.8 - A set of mappings that determine the content of\n            the S-Tag or C-Tag of an egress frame at an ENNI or UNI\n            (respectively) based on the Class of Service Name and Frame Color of\n            the frame. Three forms: (1) CoSName(CN) -\u003e C/S-Tag PCP or Discard,\n            (2) CoSName and Frame Color (CC)--\u003e C/S-Tag DEI or Discard, and (3)\n            CoSName and Frame Color (CC)--\u003e C/S-Tag PCP or Discard. A fourth\n            form is included which combines (1) and (2) because that is a common\n            case.\n          items:\n            $ref: '#/components/schemas/OvcEgressMap'\n          maxItems: 1\n          minItems: 0\n          type: array\n          uniqueItems: true\n        egressBandwidthProfilePerEndPoint:\n          description: \u003e-\n            MEF 26.2 sec. 16.11 - Bandwidth Profile Flow parameters for all\n            egress Service Frames mapped to the OVC End Point. If the value of\n            this attribute is an empty list, there is no Egress Bandwidth\n            Profile per OVC at the OVC End Point.\n          items:\n            $ref: '#/components/schemas/BwpFlow'\n          maxItems: 1\n          minItems: 0\n          type: array\n          uniqueItems: true\n        egressBwpPerEgressEquivalenceClassName:\n          description: \u003e-\n            MEF 26.2 sec. 16.13 - For each EEC Name listed, Bandwidth Profile\n            Flow parameters, for all egress Service Frames mapped to that EEC\n            Name at the OVC End Point. If the value of this attribute is an\n            empty list, there is no Egress Bandwidth Profile per EEC at the OVC\n            End Point.\n          items:\n            $ref: '#/components/schemas/BandwidthProfilePerClassOfServiceName'\n          minItems: 0\n          type: array\n          uniqueItems: false\n        ingressBandwidthProfilePerClassOfServiceName:\n          description: \u003e-\n            MEF 26.2 sec. 16.12 - For each CoS Name listed, Bandwidth Profile\n            Flow parameters for all ingress Service Frames mapped to that CoS\n            Name at OVC End Point. This bandwidth profile flow is used to police\n            at Ingress each CoS in an OVC individually. List of 2-tuples {cos,\n            bwpf}.\n          items:\n            $ref: '#/components/schemas/BandwidthProfilePerClassOfServiceName'\n          minItems: 1\n          type: array\n          uniqueItems: true\n        ovcEndPointEnvelopes:\n          description: \u003e-\n            The Envelopes and Envelope Coupling Flag values to which Bandwidth\n            Profile Flows for this OVC End Point can be mapped. Value is list of\n            {envelopeID, couplingFlagForIndexZero}. Envelopes listed in the OVC\n            End Point Envelopes Service Attribute can be used when all of the\n            Bandwidth Profile Flows contained in the Envelope are specific to a\n            given OVC End Point. They are specified using one of the following\n            OVC End Point Service Attributes: Ingress Bandwidth Profile Per OVC\n            End Point Egress Bandwidth Profile Per OVC End Point Ingress\n            Bandwidth Profile Per Class of Service Name Egress Bandwidth Profile\n            Per Egress Equivalence Class Name  To create an Envelope containing\n            Bandwidth Profile Flows for more than one OVC End Point, the UNI or\n            ENNI Envelopes Service Attribute (as appropriate) must be used.\n          items:\n            $ref: '#/components/schemas/Envelope'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        ovcEndPointMap:\n          description: \u003e-\n            MEF 26.2 sec. 16.5 - The information that determines which UNI/ENNI\n            Frames are mapped to the OVC End Point. At the UNI and ENNI, the\n            only allowable mapping is a LIST of VLAN IDs (CE-VLAN IDs at the UNI\n            and S-VLAN IDs at the ENNI).\n          $ref: '#/components/schemas/EndPointMapForm'\n        colorMap:\n          description: \u003e-\n            MEF 26.2 sec. 16.7 - The OVC EP Color Map Service Attribute is the\n            mechanism by which the Color for an Ingress External Interface Frame\n            that is mapped to an OVC EP is indicated by the content in the frame\n            header. The value of the OVC EP Color Map Service Attribute is a\n            pair of the form ?F, M? where: F is one of the values ENDPOINT, DEI,\n            PCP, or DSCP and M is a map that can be used to assign Color to each\n            Ingress Frame. (The form of M depends on the value of F.)\n          $ref: '#/components/schemas/ColorFrom'\n        ovcEndPointPortConversationToAggregationLinkMap:\n          description: \u003e-\n            MEF 26.2 sec. 13.2 - A mapping of Port Conversation IDs (i.e., VLAN\n            IDs) to an ordered list of physical links if\n            EnniService.sVlanIdControl is FULL and there are multiple physical\n            links in the ENNI and EnniCommon.linkAggregation is ALL_ACTIVE. Only\n            S-VLAN IDs that are listed in the\n            AccessElineOvcEndPoint.ovcEndPointMap can be listed in this\n            attribute.   If EnniService.sVlanIdControl is PARTIAL then the\n            Service Provider does not have full visibility of all the S-VLAN IDs\n            mapped to each physical link, and hence cannot pick values that\n            avoid overloading certain links. In this case, the ENNI Port\n            Conversation to Aggregation Link Map Common Attribute must be agreed\n            between the relevant Operators.\n          items:\n            $ref: '#/components/schemas/ConversationIdToAggregationLinkMap'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        ingressClassOfServiceMap:\n          description: \u003e-\n            MEF 26.2 sec. 16.6 - The value of the OVC EP Ingress Class of\n            Service Map Service Attribute is a 3-tuple of the form ?F, M, P?\n            where: F is one of the values ENDPOINT, C_TAG_PCP, S_TAG_PCP, or\n            DSCP, M is a map that can be used to assign Class of Service Names\n            to External Interface Frames. (The form of M depends on the value of\n            F.), and P is a map with entries of the form ?Layer 2 Control\n            Protocol type ? Class of Service Name? where the Layer 2 Control\n            Protocol type is determined by the Protocol Identifier (see Section\n            6.2 of MEF 45.1).\n          $ref: '#/components/schemas/CosFrom'\n        sourceMacAddressLimit:\n          description: \u003e-\n            MEF 26.2 sec. 16.15 - Specifies a limit on the number of different\n            Source MAC address over a time interval for which ingress Service\n            Frames at this OVC End Point will be delivered. An empty list\n            corresponds to a Service Attribute value of None. The value is {N,t}\n            where N is an integer greater than or equal to 1 and t is a time\n            duration.\n          items:\n            $ref: '#/components/schemas/SourceMacAddressLimit'\n          maxItems: 1\n          minItems: 0\n          type: array\n          uniqueItems: true\n        maintenanceEndPointList:\n          description: \u003e-\n            MEF 26.2 sec. 16.17 - A list of the MEPs instantiated at this OVC\n            EP, if any, and the direction of each MEP, List of 2-tuples ?l, d?\n            where l is MEG level and d is direction (Up/Down).\n          items:\n            $ref: '#/components/schemas/MepLevelAndDirection'\n          maxItems: 16\n          minItems: 0\n          type: array\n          uniqueItems: true\n      type: object\n    AccessLinkBfd:\n      description: \u003e-\n        The Access Link BFD Service Attribute indicates whether Bidirectional\n        Forwarding Detection (BFD) is enabled on the UNI Access Link. Reference\n        MEF 61.1[1] Section 13.8 UNI Access Link BFD Service Attribute and\n        Section 16.5 ENNI Link BFD Attribute.\n      properties:\n        activeEnd:\n          description: \u003e-\n            BFD Active End. At least one end of BFD session has to have an\n            active role, meaning that it sends out asynchronous control messages\n            regardless of whether it has received any. Reference MEF 61.1\n            Section 13.8 UNI Access Link BFD Service Attribute.\n          $ref: '#/components/schemas/BfdActiveEnd'\n        transmissionInterval:\n          description: \u003e-\n            BFD allows for asymmetrical operation, where packets can be sent a\n            different interval in each direction, and a different detect\n            multiplier can be used. For simplicity, this specification mandates\n            symmetrical operation. Units are in milliseconds. Reference MEF 61.1\n            Section 13.8 UNI Access Link BFD Service Attribute and Section 16.5\n            ENNI Link BFD Attribute.\n          $ref: '#/components/schemas/BfdTransmissionInterval'\n        authenticationType:\n          description: \u003e-\n            BFD Authentication as describer in RFC 5880. Reference MEF 61.1\n            Section 13.8 UNI Access Link BFD Service Attribute and Section 16.5\n            ENNI Link BFD Attribute.\n          $ref: '#/components/schemas/BfdAuthenticationType'\n        connectionAddressFamily:\n          description: \u003e-\n            The Connection Address Family parameter specifies whether the\n            session is established over IPv4 or IPv6 or whether two separate\n            sessions are established using IPv4 and IPv6. Reference MEF 61.1\n            Section 13.8 UNI Access Link BFD Service Attribute and Section 16.5\n            ENNI Link BFD Attribute.\n          $ref: '#/components/schemas/ConnectionAddressFamily'\n        detectMultiplier:\n          description: \u003e-\n            BFD Detect multiple as an Integer. Reference MEF 61.1 Section 13.8\n            UNI Access Link BFD Service Attribute and Section 16.5 ENNI Link BFD\n            Attribute.\n          type: integer\n      type: object\n    Addressing:\n      description: \u003e\n        Enumeration representing the Address type for the Control Protocols data\n\n        type. \n\n        - SP_OPERATOR_ADDRESSES: If the addressing information is\n\n        SP/Operator Addresses, then Ingress IP Packets for the specified \n        protocol\n\n        that have a multicast or broadcast destination address, or a unicast\n\n        destination address  that is reachable within the SP's or Operator's\n\n        network, are considered to be IP Control Protocol  Packets, and Egress\n        IP\n\n        Packets for the specified protocol that have a source address that is\n\n        reachable  within the SP's or Operator's network are considered to be IP\n\n        Control Protocol Packets.\n\n        - ANY: If the addressing information is Any, then all IP Packets for the\n\n        specified protocol that cross the UNI are considered to be \n\n        IP Control Protocol Packets.\n      enum:\n        - SP_OPERATOR_ADDRESSES\n        - ANY\n      type: string\n    AdvancedIaIpvc:\n      allOf:\n        - $ref: '#/components/schemas/MEFProductConfiguration'\n        - description: \u003e-\n            The Advanced Internet Access IPVC is a MEF 69.1 defined version of\n            MEF 61.1 IPVC. Reference MEF 69.1 Section 9.1 Internet Access IPVC\n            Requirements.\n          properties:\n            cloud:\n              description: \u003e-\n                Reference MEF 61.1 Section 10.13 IPVC Cloud Service Attribute.\n                The absence of this attribute corresponds to a value of \"None\". \n              $ref: '#/components/schemas/AdvancedIaIpvcCloud'\n            maximumNumberOfIpv4Routes:\n              description: \u003e-\n                Maximum number of IPv4 routes supported by the service as a\n                whole. Absence of this attribute corresponds to a value of\n                \"Unlimited\". Reference MEF 61.1 Section 10.5 IPVC Maximum Number\n                of IPv4 Routes Service Attribute.\n              type: integer\n            pathMtuDiscovery:\n              description: \u003e-\n                Indicates whether the Path MTU Discovery is supported for the\n                IPVC. Reference MEF 61.1 Section 10.11 IPVC Path MTU Discovery\n                Service Attribute.\n              $ref: '#/components/schemas/EnabledDisabled'\n            dscpPreservation:\n              description: \u003e-\n                Indicates where the SP or Operator is allowed to modify the\n                value of the IP DS field in the IP header of the Subscriber's\n                traffic as it traverses the IPVC. Reference MEF 61.1 Section\n                10.7 IPVC DSCP Preservation Service Attribute. The value SHOULD\n                be set to DISABLED. Reference MEF 69.1 Section 9.1 [D3]\n              $ref: '#/components/schemas/EnabledDisabled'\n            serviceLevelSpecification:\n              description: \u003e-\n                The set of performance objectives for CoS Name in the IPVC. The\n                absence of this attribute corresponds to a value of \"None\".\n                Reference MEF 61.1 Section 10.9 IPVC Service Level Specification\n                Service Attribute.\n              $ref: '#/components/schemas/IaIpSls'\n            reservedPrefixes:\n              description: \u003e-\n                Reference MEF 61.1 Section 10.14 IPVC Reserved Prefixes Service\n                Attribute. For Advanced Internet Access the prefixes must be\n                either empty, or free from any public address pre-fixes.\n                (Reference MEF 69.1 Section 9.1 [R14])\n              $ref: '#/components/schemas/Ipv4Ipv6Prefixes'\n            classOfServiceName:\n              description: \u003e-\n                The Class of Service Name supported by the IPVC. Reference MEF\n                61.1 Section 10.8 IPVC List of Class of Service Names Service\n                Attribute. This is \"listOfClassOfServiceNames\" attribute\n                narrowed to single ref per Reference MEF 69.1 Section 9.1 [R7]\n              type: string\n            advancedIaIpvcEndPoint:\n              description: \u003e-\n                Advanced IPVC End Point. Reference MEF 61.1 Section 10.3 IPVC\n                End Point List Service Attribute. This is narrowed to\n                multiplicity = 1 and to AdvancedIaIpvcEndPoint type. Reference\n                MEF 69.1 Section 9.1 [R5] AdvancedIaIpvc\n              $ref: '#/components/schemas/AdvancedIaIpvcEndPoint'\n            maximumNumberOfIpv6Routes:\n              description: \u003e-\n                Maximum number of IPv6 routes supported by the service as a\n                whole. Absence of this attribute corresponds to a value of\n                \"Unlimited\". Reference MEF 61.1 Section 10.6 IPVC Maximum Number\n                of IPv6 Routes Service Attribute.\n              type: integer\n            maximumTransferUnit:\n              description: \u003e-\n                Indicates the maximum size (in octets) of an IP packet that can\n                traverse the IPVC without fragmentation. Reference MEF 61.1\n                Section 10.10 IPVC MTU Service Attribute.\n              minimum: 576\n              type: integer\n            packetDelivery:\n              description: \u003e-\n                Indicates whether packets are delivered per standard IP routing\n                behavior or by some other means. Reference MEF 61.1 Section 10.4\n                IPVC Packet Delivery Service Attribute.\n              $ref: '#/components/schemas/PacketDelivery'\n          type: object\n      x-discriminator-value: 'urn:mef:lso:spec:cantata-sonata:advancedIaIpvc:v0.1.0:all'\n    AdvancedIaIpvcCloud:\n      description: \u003e-\n        Reference MEF 61.1 Section 10.13 IPVC Cloud Service Attribute. The\n        absence of this attribute corresponds to a value of \"None\".\n      properties:\n        networkAddressTranslation:\n          description: \u003e-\n            Specifies whether Network Address Translation is used, and if so the\n            IPv4 Prefix. If not selected, then Disabled. Reference MEF 61.1\n            Section 10.13.4 Cloud Network Address Translation.\n          $ref: '#/components/schemas/Ipv4Prefix'\n        dataLimit:\n          description: \u003e-\n            Limit on the amount of Data traffic sent to/received from the cloud\n            service. Unlimited or a 4-tupe (scdl, Tcdl, ucdl, dcdl). If not\n            provided, then Unlimited. Reference MEF 61.1 Section 10.13.3 Cloud\n            Data Limit.\n          $ref: '#/components/schemas/CloudDataLimit'\n        dns:\n          description: \u003e-\n            Specifies whether and how DNS is provided for the service. Reference\n            MEF 61.1 Section 10.13.5 Cloud DNS Service.\n          $ref: '#/components/schemas/CloudDns'\n        subscriberPrefixList:\n          description: \u003e-\n            List of Public IP Prefixes used in the Subscriber Network. Reference\n            MEF 61.1 Section 10.13.6 Cloud Subscriber Prefix List.\n          $ref: '#/components/schemas/Ipv4Ipv6Prefixes'\n        ingressClassOfServiceMap:\n          description: \u003e-\n            Specification of how ingress packets are mapped to different CoS\n            Names. Reference MEF 61.1 Section 10.13.2 Cloud Ingress Class of\n            Service Map.\n          $ref: '#/components/schemas/IaIngressClassOfServiceMap'\n      type: object\n    AdvancedIaIpvcEndPoint:\n      allOf:\n        - $ref: '#/components/schemas/SlsReferencePoint'\n        - description: \u003e-\n            The Advanced Internet Access IPVC End Point is a MEF 69.1 defined\n            version of MEF 61.1 IPVC End Point. Reference MEF 69.1 Section 9.2\n            Internet Access IPVC End Point Requirements.\n          properties:\n            maximumNumberOfIpv4Routes:\n              description: \u003e-\n                Maximum number of IPv4 routes supported by this IPVC End Point.\n                Reference MEF 61.1 Section 11.7 IPVC EP Maximum Number of IPv4\n                Routes Service Attribute. Absence of this attribute corresponds\n                to a value of \"Unlimited\".\n              type: integer\n            identifier:\n              description: \u003e-\n                A unique identifier for the IPVC End Point for management\n                purposes. Reference MEF 61.1 Section 11.1 IPVC EP Identifier\n                Service Attribute.\n              type: string\n            prefixMapping:\n              description: \u003e-\n                Indicates which IP Prefixes can send and receive traffic to/from\n                the IPVC. Reference MEF 61.1 Section 11.5 IPVC EP Prefix Mapping\n                Service Attribute.\n              $ref: '#/components/schemas/Ipv4Ipv6Prefixes'\n            egressBandwidthProfileEnvelope:\n              description: \u003e-\n                Egress Bandwidth Profile Envelope for the IPVC End Point. The\n                absence of this attribute corresponds to a value of \"None\".\n                Reference MEF 61.1 Section 11.12 IPVC EP Egress Bandwidth\n                Profile Envelope Service Attribute.\n              $ref: '#/components/schemas/IpvcEpEgressBwpEnvelope'\n            egressClassOfServiceMap:\n              description: \u003e-\n                Specification of how egress packets are mapped to CoS Name.\n                Reference MEF 61.1 Section 11.10 IPVC EP Egress Class of Service\n                Map Service Attribute.\n              $ref: '#/components/schemas/EgressClassOfServiceMap'\n            maximumNumberOfIpv6Routes:\n              description: \u003e-\n                Maximum number of IPv6 routes supported by this IPVC End Point.\n                Reference MEF 61.1 Section 11.8 IPVC EP Maximum Number of IPv6\n                Routes Service Attribute. Absence of this attribute corresponds\n                to a value of \"Unlimited\".\n              type: integer\n            ingressClassOfServiceMap:\n              description: \u003e-\n                Specification of how ingress packets are mapped to CoS Name.\n                Reference MEF 61.1 Section 11.9 IPVC EP Ingress Class of Service\n                Map Service Attribute.\n              $ref: '#/components/schemas/IaIngressClassOfServiceMap'\n            ingressBandwidthProfileEnvelope:\n              description: \u003e-\n                Ingress Bandwidth Profile Envelope for the IPVC End Point. The\n                absence of this attribute corresponds to a value of \"None\".\n                Reference MEF 61.1 Section 11.11 IPVC EP Ingress Bandwidth\n                Profile Envelope Service Attribute.\n              $ref: '#/components/schemas/IpvcEpIngressBwpEnvelope'\n          type: object\n    AdvancedIaUni:\n      allOf:\n        - $ref: '#/components/schemas/MEFProductConfiguration'\n        - description: \u003e-\n            The Advanced Internet Access UNI is a MEF 69.1 defined version of\n            MEF 61.1 UNI. Reference MEF 69.x Section 8.3 Internet Access UNI\n            Requirements.\n          properties:\n            reversePathForwarding:\n              description: \u003e-\n                Indicates whether Reverse Path Forwarding checks are used by the\n                SP at the UNI. Reference MEF 61.1 Section 12.8 UNI Reverse Path\n                Forwarding Service Attribute. [D11] At a UNI with an IPVC EP for\n                an Internet Access Service, reversePathForwarding SHOULD be\n                ENABLED. Reference MEF 69.1 Section 9.3 Internet Access UNI\n                Requirements.\n              $ref: '#/components/schemas/EnabledDisabled'\n            egressBandwidthProfileEnvelope:\n              description: \u003e-\n                Attribute used for an egress UNI Bandwidth Profile. Reference\n                MEF 61.1 Section 12.5 UNI Egress Bandwidth Profile Envelope\n                Service Attribute. Absence of this attribute corresponds to a\n                value of \"None\".\n              $ref: '#/components/schemas/IpUniEgressBwpEnvelope'\n            listOfControlProtocols:\n              description: \u003e-\n                Indication of IP Control Protocols that are not forwarded\n                transparently by the SP. Reference MEF 61.1 Section 12.6 UNI\n                List of Control Protocols Service Attribute. Absence of this\n                attribute corresponds to a value of \"None\". [D9]  At a UNI with\n                an IPVC EP for an Internet Access Service, if the UNI has at\n                least one UNI Access Link where the UNI Access Lin IPv4\n                Connection Addressing is not None, the UNI List of Control\n                Protocols SHOULD include ICMP with a list of applicable ISP IP\n                addresses.  [D10]  At a UNI with an IPVC EP for an Internet\n                Access Service with at least one UNI Access Link where the UNI\n                Access Link IPv6 Connection Addressing is not None, the UNI List\n                of Control Protocols SHOULD include ICMPv6 with a list of\n                applicable SP IP addresses. Reference MEF 69.1 Section 9.3\n                Internet Access UNI Requirements.\n              items:\n                $ref: '#/components/schemas/ControlProtocol'\n              type: array\n            routingProtocols:\n              description: \u003e-\n                List of Routing Protocols used across the UNI. Reference MEF\n                61.1 Section 12.7 UNI Routing Protocols Service Attribute.\n                Absence of this attribute corresponds to a value of \"None\".\n              $ref: '#/components/schemas/RoutingProtocols'\n            ingressBandwidthProfileEnvelope:\n              description: \u003e-\n                Attribute used for an ingress UNI Bandwidth Profile. Reference\n                MEF 61.1 Section 12.4 UNI Ingress Bandwidth Profile Envelope\n                Service Attribute. Absence of this attribute corresponds to a\n                value of \"None\".\n              $ref: '#/components/schemas/IpUniIngressBwpEnvelope'\n            managementType:\n              description: \u003e-\n                Attribute indicating whether the CE is the responsibility of the\n                Subscriber or the Service Provider. Reference MEF 61.1 Section\n                12.2 UNI Management Type Service Attribute.\n              $ref: '#/components/schemas/UniManagementType'\n          type: object\n      x-discriminator-value: 'urn:mef:lso:spec:cantata-sonata:advancedIaUni:v0.1.0:all'\n    AdvancedIaUniAccessLink:\n      allOf:\n        - $ref: '#/components/schemas/MEFProductConfiguration'\n        - description: \u003e-\n            The Advanced Internet Access UNI Access Link is a MEF 69.1 defined\n            version of MEF 61.1 UNI Access Link. Reference MEF 69.1 Section 9.4\n            Internet Access UNI Access Link Requirements.\n          properties:\n            dhcpRelay:\n              description: \u003e-\n                Indicates whether DHCP Relay functionality is enabled. Reference\n                MEF 61.1 Section 13.6 UNI Access Link DHCP Relay Service\n                Attribute. Absence of this attribute corresponds to a value of\n                \"Disabled\".\n              $ref: '#/components/schemas/DhcpRelay'\n            reservedVrids:\n              description: \u003e-\n                List of VRRP (Virtual Router Redundancy Protocol) VRIDs (Virtual\n                Router Identifier) reserved for use by the SP or Operator.\n                Reference MEF 61.1 Section 13.12 UNI Access Link Reserved VRIDs\n                Service Attribute.\n              items:\n                $ref: '#/components/schemas/Vrid'\n              type: array\n            bfd:\n              description: \u003e-\n                Indication of whether BFD is used on the\n                IpServicesExternalInterfaceLink. Reference MEF 61.1 Section 16.5\n                ENNI Link BFD Attribute and MEF 61.1 Section 13.8 UNI Access\n                Link BFD Service Attribute.\n              $ref: '#/components/schemas/AccessLinkBfd'\n            ipv4ConnectionAddressing:\n              description: \u003e-\n                IPv4 Connection Addressing. Reference MEF 61.1 Section 13.4 UNI\n                Access Link IPv4 Connection Addressing Service Attribute.\n                Absence of this attribute corresponds to a value of \"None\".\n              $ref: '#/components/schemas/AdvancedIaUniIpv4ConnectionAddressing'\n            ipv6ConnectionAddressing:\n              description: \u003e-\n                IPv6 Connection Addressing. Reference MEF 61.1 Section 13.5 UNI\n                Access Link IPv6 Connection Addressing Service Attribute.\n                Absence of this attribute corresponds to a value of \"None\".\n              $ref: '#/components/schemas/AdvancedIaUniIpv6ConnectionAddressing'\n            prefixDelegation:\n              description: \u003e-\n                Indicates whether DHCP Prefix delegation is enabled. Reference\n                MEF 61.1 Section 13.7 UNI Access Link Prefix Delegation Service\n                Attribute.\n              $ref: '#/components/schemas/EnabledDisabled'\n            egressBandwidthProfileEnvelope:\n              description: \u003e-\n                Egress Bandwidth Profile Envelope for the UNI Access Link.\n                Reference MEF 61.1 Section 13.11 UNI Access Link Egress\n                Bandwidth Profile Envelope Service Attribute. Absence of this\n                attribute corresponds to a value of \"None\".\n              $ref: '#/components/schemas/IpUniEgressBwpEnvelope'\n            ingressBandwidthProfileEnvelope:\n              description: \u003e-\n                Ingress Bandwidth Profile Envelope for the UNI Access Link.\n                Reference MEF 61.1 Section 13.10 UNI Access Link Ingress\n                Bandwidth Profile Envelope Service Attribute. Absence of this\n                attribute corresponds to a value of \"None\".\n              $ref: '#/components/schemas/IpUniIngressBwpEnvelope'\n            mtu:\n              description: \u003e-\n                Maximum size, in octets of an IP Packet that can traverse the\n                UNI Access Link. Reference MEF 61.1 Section 13.9 UNI Access Link\n                IP MTU Service Attribute.\n              minimum: 576\n              type: integer\n          type: object\n      x-discriminator-value: 'urn:mef:lso:spec:cantata-sonata:advancedIaUniAccessLink:v0.1.0:all'\n    AdvancedIaUniIpv4ConnectionAddressing:\n      description: \u003e-\n        UniIpv4ConnectionAddressing is a data type representing how IPv4\n        addresses are allocated to the devices on the UNI Access Link. Reference\n        MEF 61 Section 13.4 UNI Access Link IPv4 Connection Addressing Service\n        Attribute. [R22]  At a UNI Access Link in a UNI with an IPVC EP for an\n        Advanced Internet Access Service, UNI Access Link IPv4 Connection\n        Addressing MUST be Static or None. Reference MEF 69.1 Section 9.4\n        Internet\n      properties:\n        ipv4SecondarySubnetList:\n          description: \u003e-\n            Secondary IPv4 Subnet List. Includes IPv4 Prefix and Service\n            Provider IPv4 Addresses.\n          items:\n            $ref: '#/components/schemas/Ipv4Subnet'\n          type: array\n        ipv4PrimarySubnet:\n          description: \u003e-\n            Primary IPv4 Subnet. Includes IPv4 Prefix and Service Provider IPv4\n            Addresses.\n          $ref: '#/components/schemas/Ipv4Subnet'\n      type: object\n    AdvancedIaUniIpv6ConnectionAddressing:\n      description: \u003e-\n        UniIpv6ConnectionAddressing is a data type representing how IPv6\n        addresses are allocated to the devices on the UNI Access Link. \n        Reference MEF 61 Section 13.5 UNI Access Link IPv6 Connection Addressing\n        Service Attribute. [R26] [R26]  At a UNI Access Link in a UNI with an\n        IPVC EP for an Advanced Internet Access Service, UNI Ac-cess Link IPv6\n        Connection Addressing MUST be Static or None. Reference MEF 69.1 Section\n        9.4 Internet\n      properties:\n        ipv6SubnetList:\n          description: Ipv6 Subnet\n          items:\n            $ref: '#/components/schemas/Ipv6Subnet'\n          type: array\n      type: object\n    AggLinkDepth:\n      description: \u003e-\n        For an Operator Service, this is a pair of \u003cVLAN ID, link depth\u003e\n        indicating that a given VLAN ID maps to a given number of links in the\n        Port Conversation ID to Aggregation Link Map.\n      properties:\n        vlanID:\n          description: The VLAN ID\n          maximum: 4094\n          minimum: 1\n          type: integer\n        lagDepth:\n          description: The number of Link Aggregation links available to the VLAN\n          minimum: 1\n          type: integer\n      type: object\n    AvailableMegList:\n      enum:\n        - '0'\n        - '1'\n        - '2'\n        - '3'\n        - '4'\n        - '5'\n        - '6'\n      type: string\n    BandwidthProfilePerClassOfServiceName:\n      description: \u003e-\n        The value is a list of pairs of the form ?x, y? For ingress, x is a\n        Class of Service Name that is in the value of the EVC/OVC List of Class\n        of Service Names Service Attribute (MEF 10.4 sec. 8.7 and MEF 26.2 sec.\n        12.12) for the EVC/OVC that associates the EVC/OVC End Point. For\n        egress, x is a Class of Service from the EVC List of Class of Service\n        Names Service Attribute or an Egress Equivalence Class Name (for OVC).\n        If specified, y is a reference to a Bandwidth Profile Flow and Disabled\n        otherwise. There is at most one pair in the list for each CoS or EEC\n        Name (Except Discard).\n         For EVCs it is used by the EVC EP Class of Service Name Ingress\n        Bandwidth Profile Service Attribute (MEF 10.4 sec. 10.9). and EVC EP\n        Class of Service Name Egress Bandwidth Profile Service Attribute (MEF\n        10.4 sec. 10.11). For OVCs it is used by the Ingress Bandwidth Profile\n        per Class of Service Name (MEF 26.2 sec. 16.12) Egress Bandwidth Profile\n        per Egress Equivalence Class Name (MEF 26.2 sec. 16.13).\n      properties:\n        bwpFlow:\n          description: \u003e-\n            The Bandwidth Profile to be applied to all items that are in the\n            specified Class of Service or Egress Equivalence Class.\n          $ref: '#/components/schemas/BwpFlow'\n        classOfServiceName:\n          description: \u003e-\n            MEF 26.2 sec. 16.12 and 16.13 - For Ingress, this is the Name of the\n            Class of Service that this bandwidth profile flow is applied to.\n            This should be an item from ovc.listOfClassOfServiceNames. For\n            Egress, this is the Class of Service for EVCs and the Egress\n            Equivalence Class (EEC) Name for OVCs. If the specific Class of\n            Service/ Egress Equivalence Class is not used/configured that the\n            End Point, the Bandwidth Profile can be an empty list.\n          type: string\n      type: object\n    BasicIaIpvc:\n      allOf:\n        - $ref: '#/components/schemas/MEFProductConfiguration'\n        - description: \u003e-\n            The Basic Internet Access IPVC is a MEF 69.1 defined version of MEF\n            61.1 IPVC. Reference MEF 69.1 Section 9.1 Internet Access IPVC\n            Requirements.\n          properties:\n            cloud:\n              description: \u003e-\n                Reference MEF 61.1 Section 10.13 IPVC Cloud Service Attribute.\n                The absence of this attribute corresponds to a value of \"None\".\n              $ref: '#/components/schemas/BasicIaIpvcCloud'\n            maximumNumberOfIpv4Routes:\n              description: \u003e-\n                Maximum number of IPv4 routes supported by the service as a\n                whole. Absence of this attribute corresponds to a value of\n                \"Unlimited\". Reference MEF 61.1 Section 10.5 IPVC Maximum Number\n                of IPv4 Routes Service Attribute.\n              type: integer\n            pathMtuDiscovery:\n              description: \u003e-\n                Indicates whether the Path MTU Discovery is supported for the\n                IPVC. Reference MEF 61.1 Section 10.11 IPVC Path MTU Discovery\n                Service Attribute.\n              $ref: '#/components/schemas/EnabledDisabled'\n            dscpPreservation:\n              description: \u003e-\n                Indicates where the SP or Operator is allowed to modify the\n                value of the IP DS field in the IP header of the Subscriber's\n                traffic as it traverses the IPVC. Reference MEF 61.1 Section\n                10.7 IPVC DSCP Preservation Service Attribute. MEF 69.1 [D3] For\n                an Internet Access Service, IPVC DSCP Preservation SHOULD be\n                Disabled.\n              $ref: '#/components/schemas/EnabledDisabled'\n            reservedPrefixes:\n              description: \u003e-\n                Reference MEF 61.1 Section 10.14 IPVC Reserved Prefixes Service\n                Attribute. For Advanced Internet Access the prefixes must be\n                either empty, or free from any public address prefixes.\n                (Reference MEF 69.1 Section 9.1 [R14])\n              $ref: '#/components/schemas/Ipv4Ipv6Prefixes'\n            basicIaIpvcEndPoint:\n              description: \u003e-\n                Basic IPVC End Point. Reference MEF 61.1 Section 10.3 IPVC End\n                Point List Service Attribute. This is narrowed to multiplicity =\n                1 and to BasicIaIpvcEndPoint type. Reference MEF 69.1 Section\n                9.1 [R5] AdvancedIaIpvc\n              $ref: '#/components/schemas/BasicIaIpvcEndPoint'\n            classOfServiceName:\n              description: \u003e-\n                The Class of Service Name supported by the IPVC. Reference MEF\n                61.1 Section 10.8 IPVC List of Class of Service Names Service\n                Attribute. This is \"listOfClassOfServiceNames\" attribute\n                narrowed to single ref per Reference MEF 69.1 Section 9.1 [R7]\n              type: string\n            maximumNumberOfIpv6Routes:\n              description: \u003e-\n                Maximum number of IPv6 routes supported by the service as a\n                whole. Absence of this attribute corresponds to a value of\n                \"Unlimited\". Reference MEF 61.1 Section 10.6 IPVC Maximum Number\n                of IPv6 Routes Service Attribute.\n              type: integer\n            maximumTransferUnit:\n              description: \u003e-\n                Indicates the maximum size (in octets) of an IP packet that can\n                traverse the IPVC without fragmentation. Reference MEF 61.1\n                Section 10.10 IPVC MTU Service Attribute.\n              minimum: 576\n              type: integer\n          type: object\n      x-discriminator-value: 'urn:mef:lso:spec:cantata-sonata:basicIaIpvc:v0.1.0:all'\n    BasicIaIpvcCloud:\n      description: \u003e-\n        The IPVC Cloud Service Attribute is a set of parameters describing the\n        access connectivity to the cloud service. Reference MEF 61.1 Section\n        10.13 IPVC Cloud Service Attribute. The absence of this attribute\n        corresponds to a value of \"None\".\n      properties:\n        networkAddressTranslation:\n          description: \u003e-\n            Specifies whether Network Address Translation is used, and if so the\n            IPv4 Prefix. If not selected, then Disabled. Reference MEF 61.1\n            Section 10.13.4 Cloud Network Address Translation.\n          $ref: '#/components/schemas/Ipv4Prefix'\n        dataLimit:\n          description: \u003e-\n            Limit on the amount of Data traffic sent to/received from the cloud\n            service. Unlimited or a 4-tupe (scdl, Tcdl, ucdl, dcdl). If not\n            provided, then Unlimited. Reference MEF 61.1 Section 10.13.3 Cloud\n            Data Limit.\n          $ref: '#/components/schemas/CloudDataLimit'\n        dns:\n          description: \"Specifies whether and how DNS is provided for the service. Reference MEF 61.1 Section 10.13.5 Cloud DNS Service. [R12]\\tFor a Basic Internet Access Service, Cloud DNS MUST NOT be None.\"\n          $ref: '#/components/schemas/CloudDns'\n        subscriberPrefixList:\n          description: \u003e-\n            List of Public IP Prefixes used in the Subscriber Network. Reference\n            MEF 61.1 Section 10.13.6 Cloud Subscriber Prefix List.\n          $ref: '#/components/schemas/Ipv4Ipv6Prefixes'\n        ingressClassOfServiceMap:\n          description: \u003e-\n            Specification of how ingress packets are mapped to different CoS\n            Names. Reference MEF 61.1 Section 10.13.2 Cloud Ingress Class of\n            Service Map.\n          $ref: '#/components/schemas/IaIngressClassOfServiceMap'\n      type: object\n    BasicIaIpvcEndPoint:\n      allOf:\n        - $ref: '#/components/schemas/SlsReferencePoint'\n        - description: \u003e-\n            The Basic Internet Access IPVC End Point is a MEF 69.1 defined\n            version of MEF 61.1 IPVC End Point. Reference MEF 69.1 Section 9.2\n            Internet Access IPVC End Point Requirements.\n          properties:\n            maximumNumberOfIpv4Routes:\n              description: \u003e-\n                Maximum number of IPv4 routes supported by this IPVC End Point.\n                Reference MEF 61.1 Section 11.7 IPVC EP Maximum Number of IPv4\n                Routes Service Attribute. Absence of this attribute corresponds\n                to a value of \"Unlimited\".\n              type: integer\n            identifier:\n              description: \u003e-\n                A unique identifier for the IPVC End Point for management\n                purposes. Reference MEF 61.1 Section 11.1 IPVC EP Identifier\n                Service Attribute.\n              type: string\n            ipUni:\n              description: \u003e-\n                Indicates where the SP or Operator is allowed to modify the\n                value of the IP DS field in the IP header of the Subscriber's\n                traffic as it traverses the IPVC. Reference MEF 61.1 Section\n                10.7 IPVC DSCP Preservation Service Attribute.\n              $ref: '#/components/schemas/BasicIaUni'\n            egressBandwidthProfileEnvelope:\n              description: \u003e-\n                Egress Bandwidth Profile Envelope for the IPVC End Point. The\n                absence of this attribute corresponds to a value of \"None\".\n                Reference MEF 61.1 Section 11.12 IPVC EP Egress Bandwidth\n                Profile Envelope Service Attribute. Reference MEF 69.1 Section\n                9.2. [D6] For a Basic Internet Access Service, the\n                egressBandwidthProfileEnvelope SHOULD be empty.\n              $ref: '#/components/schemas/IpvcEpEgressBwpEnvelope'\n            egressClassOfServiceMap:\n              description: \u003e-\n                Specification of how egress packets are mapped to CoS Name.\n                Reference MEF 61.1 Section 11.10 IPVC EP Egress Class of Service\n                Map Service Attribute.\n              $ref: '#/components/schemas/EgressClassOfServiceMap'\n            maximumNumberOfIpv6Routes:\n              description: \u003e-\n                Maximum number of IPv6 routes supported by this IPVC End Point.\n                Reference MEF 61.1 Section 11.8 IPVC EP Maximum Number of IPv6\n                Routes Service Attribute. Absence of this attribute corresponds\n                to a value of \"Unlimited\".\n              type: integer\n            ingressClassOfServiceMap:\n              description: \u003e-\n                Specification of how ingress packets are mapped to CoS Name.\n                Reference MEF 61.1 Section 11.9 IPVC EP Ingress Class of Service\n                Map Service Attribute.\n              $ref: '#/components/schemas/IaIngressClassOfServiceMap'\n            ingressBandwidthProfileEnvelope:\n              description: \u003e-\n                Ingress Bandwidth Profile Envelope for the IPVC End Point. The\n                absence of this attribute corresponds to a value of \"None\".\n                Reference MEF 61.1 Section 11.11 IPVC EP Ingress Bandwidth\n                Profile Envelope Service Attribute. Reference MEF 69.1 Section\n                9.2. [D5] For a Basic Internet Access Service, the\n                ingressBandwidthProfileEnvelope SHOULD be empty.\n              $ref: '#/components/schemas/IpvcEpIngressBwpEnvelope'\n          required:\n            - ipUni\n          type: object\n    BasicIaUni:\n      description: \u003e-\n        The Basic Internet Access UNI is a MEF 69.1 defined version of MEF 61.1\n        UNI. Reference MEF 69.1 Section 9.3 Internet Access UNI Requirements.\n      properties:\n        identifier:\n          description: \u003e-\n            Unique identifier for the Basic Internet Access UNI for management\n            purposes. Reference MEF 61.1 Section 12.1 UNI Identifier Service\n            Attribute.\n          maxLength: 53\n          type: string\n        ipUniAccessLink:\n          description: \u003e-\n            Reference to IP UNI Access Link(s). Reference MEF 61.1 Section 12.3\n            UNI List of UNI Access Links Service Attribute.\n          $ref: '#/components/schemas/BasicIaUniAccessLink'\n        reversePathForwarding:\n          description: \u003e-\n            Indicates whether Reverse Path Forwarding checks are used by the SP\n            at the UNI. Reference MEF 61.1 Section 12.8 UNI Reverse Path\n            Forwarding Service Attribute. [D11]  At a UNI with an IPVC EP for an\n            Internet Access Service, reversePathForwarding SHOULD be ENABLED.\n            Reference MEF 69.1 Section 9.3 Internet Access UNI Requirements.\n          $ref: '#/components/schemas/EnabledDisabled'\n        egressBandwidthProfileEnvelope:\n          description: \u003e-\n            Attribute used for an egress UNI Bandwidth Profile. Reference MEF\n            61.1 Section 12.5 UNI Egress Bandwidth Profile Envelope Service\n            Attribute. Absence of this attribute corresponds to a value of\n            \"None\". [D8]  At a UNI with an IPVC EP for a Basic Internet Ac-cess\n            Service, if the UNI Egress Bandwidth Profile Envelope is not None,\n            it SHOULD have Bandwidth Profile Flows that contain all Egress IP\n            Data Packets at the UNI that are mapped to any of a given set of\n            IPVC EPs (as defined in MEF 61.1 [8] Table 28). Reference MEF 69.1\n            Section 9.3 Internet Access UNI Requirements.\n          $ref: '#/components/schemas/IpUniEgressBwpEnvelope'\n        listOfControlProtocols:\n          description: \u003e\n            Indication of IP Control Protocols that are not forwarded\n            transparently by the SP. Reference MEF 61.1 Section 12.6 UNI List of\n            Control Protocols Service Attribute. Absence of this attribute\n            corresponds to a value of \"None\". [D9]  At a UNI with an IPVC EP for\n            an Internet Access Service, if the UNI has at least one UNI Access\n            Link where the UNI Access Lin IPv4 Connection Addressing is not\n            None, the UNI List of Control Protocols SHOULD include ICMP with a\n            list of applicable ISP IP addresses. [D10]  At a UNI with an IPVC EP\n            for an Internet Access Service with at least one UNI Access Link\n            where the UNI Access Link IPv6 Connection Addressing is not None,\n            the UNI List of Control Protocols SHOULD include ICMPv6 with a list\n            of applicable SP IP addresses. Reference MEF 69.1 Section 9.3\n            Internet Access UNI Requirements.\n          items:\n            $ref: '#/components/schemas/ControlProtocol'\n          type: array\n        ingressBandwidthProfileEnvelope:\n          description: \u003e-\n            Attribute used for an ingress UNI Bandwidth Profile. Reference MEF\n            61.1 Section 12.4 UNI Ingress Bandwidth Profile Envelope Service\n            Attribute. Absence of this attribute corresponds to a value of\n            \"None\". [D7]  At a UNI with an IPVC EP for a Basic Internet Access\n            Service, if the UNI Ingress Bandwidth Profile Envelope is not None,\n            it SHOULD have Bandwidth Profile Flows that contain all Ingress IP\n            Data Packets at the UNI that are mapped to any of a given set of\n            IPVC EPs (as defined in MEF 61.1 [8] Table 28). Reference MEF 69.1\n            Section 9.3 Internet Access UNI Requirements.\n          $ref: '#/components/schemas/IpUniIngressBwpEnvelope'\n        managementType:\n          description: \u003e-\n            Attribute indicating whether the CE is the responsibility of the\n            Subscriber or the Service Provider. Reference MEF 61.1 Section 12.2\n            UNI Management Type Service Attribute.\n          $ref: '#/components/schemas/UniManagementType'\n      required:\n        - ipUniAccessLink\n      type: object\n    BasicIaUniAccessLink:\n      description: \u003e-\n        An individual connection between the Subscriber and the SP that forms\n        part of a UNI. Reference MEF 61.1[1] Section 7.3 UNIs and UNI Access\n        Link.\n      properties:\n        reservedVrids:\n          description: \u003e\n            List of VRRP (Virtual Router Redundancy Protocol) VRIDs (Virtual\n\n            Router Identifier) reserved for use by the SP or Operator. Reference\n\n            MEF 61.1 Section 13.12 UNI Access Link Reserved VRIDs Service\n\n            Attribute. [D14]  At a UNI Access Link in a UNI with an IPVC EP for\n            a\n\n            Basic Internet Access Service, UNI Access Link Reserved VRIDs\n            Service\n\n            Access UNI Access Link Service Attributes Requirements\n\n            Attribute SHOULD be None. \n\n            Note - The use of VRRP by the ISP is discouraged in the\n\n            Basic Internet Access Service, as it requires coordination of VRID\n\n            resources between the Subscriber and ISP, which compromises\n\n            the simplicity and plug-and-play nature of this service type.\n\n            Reference MEF 69.1 Section 9.4 Internet\n          items:\n            $ref: '#/components/schemas/Vrid'\n          type: array\n        ipv4ConnectionAddressing:\n          description: \u003e\n            ipv4ConnectionAddressing.uniAccessLinkIpv4AddressType MUST be DHCP\n            or None. Reference MEF 69.1 Section 9.4 Subscriber Internet Access\n            Service: UNI Access Link Requirements [R23]. If\n            ipv4ConnectionAddressing.uniAccessLinkIpv4AddressType is DHCP, the\n            UNI Access Link IPv4 Connection Addressing Primary Subnet parameter\n            MUST contain only a single Service Provider IPv4 Address. Reference\n            MEF 69.1[1] Section 9.4 Subscriber Internet Access Service: UNI\n            Access Link Requirements [R25].\n          $ref: '#/components/schemas/BasicIaUniIpv4ConnectionAddressing'\n        ipv6ConnectionAddressing:\n          description: \u003e\n            [R27]  At a UNI Access Link in a UNI with an IPVC EP for a Basic\n            Internet Access Service, UNI Access Link IPv6 Connection Addressing\n            MUST be DHCP or SLAAC or None. Reference MEF 69.1[1] Section 9.4\n            Subscriber Internet Access Service: UNI Access Link Requirements.\n          $ref: '#/components/schemas/BasicIaUniIpv6ConnectionAddressing'\n        prefixDelegation:\n          description: \u003e-\n            Indicates whether DHCP Prefix delegation is enabled. Reference MEF\n            61.1 Section 13.7 UNI Access Link Prefix Delegation Service\n            Attribute.\n          $ref: '#/components/schemas/EnabledDisabled'\n        egressBandwidthProfileEnvelope:\n          description: \u003e-\n            Egress Bandwidth Profile Envelope for the UNI Access Link. Reference\n            MEF 61.1 Section 13.11 UNI Access Link Egress Bandwidth Profile\n            Envelope Service Attribute. Absence of this attribute corresponds to\n            a value of \"None\". [D13]  At a UNI Access Link in a UNI with an IPVC\n            EP for a Basic Internet Access Service, UNI Access Link Egress\n            Bandwidth Profile Envelope SHOULD be None. Reference MEF 69.1\n            Section 9.4 Internet Access UNI Access Link Service Attributes\n            Requirements\n          $ref: '#/components/schemas/IpUniEgressBwpEnvelope'\n        ingressBandwidthProfileEnvelope:\n          description: \u003e-\n            Ingress Bandwidth Profile Envelope for the UNI Access Link.\n            Reference MEF 61.1 Section 13.10 UNI Access Link Ingress Bandwidth\n            Profile Envelope Service Attribute. Absence of this attribute\n            corresponds to a value of \"None\". [D12]  At a UNI Access Link in a\n            UNI with an IPVC EP for a Basic Internet Access Service, UNI Access\n            Link Ingress Bandwidth Profile Envelope SHOULD be None. Reference\n            MEF 69.1 Section 9.4 Internet Access UNI Access Link Service\n            Attributes Requirements\n          $ref: '#/components/schemas/IpUniIngressBwpEnvelope'\n        mtu:\n          description: \u003e-\n            Maximum size, in octets of an IP Packet that can traverse the UNI\n            Access Link. Reference MEF 61.1 Section 13.9 UNI Access Link IP MTU\n            Service Attribute.\n          minimum: 576\n          type: integer\n      type: object\n    BasicIaUniIpv4ConnectionAddressing:\n      description: \u003e-\n        UniIpv4ConnectionAddressing is a data type representing how IPv4\n        addresses are allocated to the devices on the UNI Access Link. Reference\n        MEF 61 Section 13.4 UNI Access Link IPv4 Connection Addressing Service\n        Attribute. [R23]  At a UNI Access Link in a UNI with an IPVC EP for a\n        Basic Internet Access Service, UNI Access Link IPv4 Connection\n        Addressing MUST be DHCP or None. [R25] If IPv4 Connection Addressing is\n        DHCP, the UNI Access Link IPv4 Connection Addressing Primary Subnet\n        parameter MUST contain only a single Service Provider IPv4 Address.\n        Reference MEF 69.1[1] Section 9.4 Subscriber Internet Access Service:\n        UNI Access Link Requirements.\n      properties:\n        ipv4PrimarySubnet:\n          description: \u003e-\n            Primary IPv4 Subnet. Includes IPv4 Prefix and Service Provider IPv4\n            Addresses. [R25] If IPv4 Connection Addressing is DHCP, the UNI\n            Access Link IPv4 Connection Addressing Primary Subnet parameter MUST\n            contain only a single Service Provider IPv4 Address. Reference MEF\n            69.1[1] Section 9.4 Subscriber Internet Access Service: UNI Access\n            Link Requirements\n          $ref: '#/components/schemas/Ipv4Subnet'\n      type: object\n    BasicIaUniIpv6ConnectionAddressing:\n      description: \"UniIpv6ConnectionAddressing is a data type representing how IPv6 addresses are allocated to the devices on the UNI Access Link. Reference MEF 61 Section 13.5 UNI Access Link IPv6 Connection Addressing Service Attribute. [R27]  At a UNI Access Link in a UNI with an IPVC EP for a Basic Internet Access Service, UNI Access Link IPv6 Connection Addressing MUST be DHCP or SLAAC or None. Reference MEF 69.1[1] Section 9.4 Subscriber Internet Access Service: UNI Access Link Requirements. [R29]\\tAt a UNI Access Link in a UNI with an IPVC EP for a Basic Internet Access Service, if the UNI Ac-cess Link IPv6 Connection Addressing is DHCP or SLAAC, the UNI Access Link IPv6 Connection Ad-dressing Subnet List parameter MUST contain only a single Service Provider IPv6 Address.\"\n      properties:\n        ipv6AddressType:\n          description: Basic Internet Access IPv6 Connection Address mechanism.\n          $ref: '#/components/schemas/Ipv6AddressType'\n        ipv6Subnet:\n          description: \u003e-\n            IPv6 Subnet. [R29]At a UNI Access Link in a UNI with an IPVC EP for\n            a Basic Internet Access Service, if the UNI Ac-cess Link IPv6\n            Connection Addressing is DHCP or SLAAC, the UNI Access Link IPv6\n            Connection Ad-dressing Subnet List parameter MUST contain only a\n            single Service Provider IPv6 Address.\n          $ref: '#/components/schemas/Ipv6Subnet'\n      type: object\n    BfdActiveEnd:\n      description: \u003e\n        At least one end of the BFD session must have an active role, meaning\n        that\n\n        it sends out asynchronous control messages regardless of whether it has\n\n        received any. This enumeration represents the values that can be set for\n\n        the BFD Active End. Reference MEF 61.1 Section 13.8 UNI Access Link BFD\n\n        Service Attribute [R171] and [R172].\n\n        - SUBSCRIBER: Subscriber takes active BFD role.\n\n        - SP: Service Provider takes active BFD role.\n\n        - BOTH: Subscriber and Service Provider take active BFD role.\n      enum:\n        - SUBSCRIBER\n        - SP\n        - BOTH\n      type: string\n    BfdAuthenticationType:\n      description: |\n        RFC 7419 specifies a set of common intervals which are used to ensure\n        interoperability.\n        - NONE: No BFD authentication.\n        - SIMPLE_PASSWORD: Simple Password Authentication is the most \n        straightforward (and weakest) form of authentication. In this method\n        of authentication one or more Passwords (with corresponding Key IDs) \n        are configured in each system and one of these Password/ID pairs is \n        carried in each BFD Control packet. The receiving system accepts the \n        packet if the Password and Key ID matches one of the Password/ID \n        pairs configured in that system. Reference IETF RFC5880 Section 6.7.2.\n        - KEYED_MD5: The Keyed MD5 and Meticulous Key MD5 Authentication \n        mechanisms are very similar to those used in other protocols. \n        In these methods of authentication, one or more security keys \n        (with corresponding key IDs) are configured in each system. \n        Reference RFC5880 Section 6.7.3 Keyed MD5 and Meticulous Keyed MD5 \n        Authentication.\n        - METICULOUS_KEYED_MD5: The Keyed MD5 and Meticulous Key MD5 \n        Authentication mechanisms are very similar to those used in other \n        protocols. In these methods of authentication, one or more security\n        keys (with corresponding key IDs) are configured in each system.\n        Reference RFC5880 Section 6.7.3 Keyed MD5 and Meticulous Keyed MD5\n        Authentication.\n        - KEYED_SHA1: The Keyed SHA1 and Meticulous Key SHA1 Authentication\n        mechanisms are very similar to those used in other protocols. In \n        these methods of authentication, one or more secret keys (with \n        corresponding key IDs) are configured in each system. Reference\n        RFC5880 Section 6.7.4 Keyed SHA1 and Meticulous Keyed SHA1 \n        Authentication.\n        - METICULOUS_KEYED_SHA1: The Keyed SHA1 and Meticulous Key \n        SHA1 Authentication mechanisms are very similar to those used in\n        other protocols. In these methods of authentication, one or more \n        secret keys (with corresponding key IDs) are configured in each system.\n        Reference RFC5880 Section 6.7.4 Keyed SHA1 and Meticulous Keyed SHA1 \n        Authentication.\n      enum:\n        - NONE\n        - SIMPLE_PASSWORD\n        - KEYED_MD5\n        - METICULOUS_KEYED_MD5\n        - KEYED_SHA1\n        - METICULOUS_KEYED_SHA1\n      type: string\n    BfdTransmissionInterval:\n      description: \u003e-\n        UNI Access Link BFD authentication type. When Authentication is NOT\n        NONE, RFC5880 Section 6.7 Authentication mechanisms are used.\n      enum:\n        - 3_3_MILLISECONDS\n        - 10_MILLISECONDS\n        - 20_MILLISECONDS\n        - 50_MILLISECONDS\n        - 100_MILLISECONDS\n        - 1_SECOND\n      type: string\n    Bgp:\n      description: \u003e-\n        When an entry in the UNI Routing Protocol is for BGP, BGP as specified\n        in RFC 4271 is used across the UNI to exchange information. Reference\n        MEF 61.1 Section 12.7.3 BGP.\n      properties:\n        subscriberAsNumber:\n          description: BGP Subscriber Autonomous System number.\n          type: integer\n        peerAsNumber:\n          description: BGP Peer Autonomous System Number.\n          type: integer\n        bgpExtendedCommunityList:\n          description: \u003e-\n            Mechanism for labeling information carried in BGP-4. Provide\n            enhancement over existing BGP Community Attribute an extended range,\n            the addition of type field.\n          items:\n            $ref: '#/components/schemas/BgpExtendedCommunityListItem'\n          type: array\n        connectionAddressFamily:\n          description: Connection Address Family (IPv4 or IPv6).\n          $ref: '#/components/schemas/ConnectionAddressFamily'\n        damping:\n          description: \u003e-\n            Route flap damping. When the Damping parameter is NONE, the\n            attribute is not set. When not NONE a single set of parameters\n            described in Section 4.3 of RFC 2430 MUST be agreed.\n          $ref: '#/components/schemas/Damping'\n        ipPrefixes:\n          description: IPv4/IPv6 Prefixes that are advertised using BGP.\n          $ref: '#/components/schemas/Ipv4Ipv6Prefixes'\n        administrativeDistance:\n          description: BGP Administrative Distance.\n          type: integer\n        asOverride:\n          description: Autonomous System Override.\n          $ref: '#/components/schemas/EnabledDisabled'\n        holdTime:\n          description: \u003e-\n            Hold time in seconds. Indicates the agreed Hold Time used for BGP\n            sessions. The possible values are 0 or an integer in the range\n            3-65535.\n          maximum: 65535\n          minimum: 0\n          type: integer\n        peeringAddresses:\n          description: Peering Addresses.\n          $ref: '#/components/schemas/PeeringAddress'\n        authentication:\n          description: BGP Authentication (None or MD5 plus a password).\n          $ref: '#/components/schemas/BgpAuthentication'\n        bgpCommunityList:\n          description: \u003e-\n            Used to control which routers are accepted, preferred, distributed,\n            or advertised.\n          items:\n            $ref: '#/components/schemas/BgpCommunityListItem'\n          type: array\n      type: object\n    BgpAuthentication:\n      description: |\n        BGP Authentication options as an enumeration.\n        - NONE: No authentication for BGP.\n        - MD5_PASSWORD: BGP Authentication is MD5 plus a password.\n      enum:\n        - NONE\n        - MD5_PASSWORD\n      type: string\n    BgpCommunity:\n      description: \u003e\n        Set of BGP Community enumerations.\n\n        - NO_ADVERTISE: When a No-Advertise community is attached to a route,\n        the BGP speaker won't advertise the route to any internal or external\n        BGP peers.\n\n        - NO_EXPORT: When a No-Export community is attached to a route, the\n        router won't advertise the route to external peers--only to internal\n        peers.\n\n        - LOCAL_AS: To avoid any BGP routing loops, there is an important rule\n        regarding the internal BGP neighbors: an IBGP neighbor cannot advertise\n        a route to an IBGP neighbor if it received that route from another IBGP\n        neighbor.\n\n        - GRACEFUL_SHUTDOWN: The Graceful SHUTDOWN (65535:0) community is used\n        to smoothly shut down paths a router might use when its peer router is\n        about to be intentionally shut down.\n\n        - EXTENDED: An Extended community is an 8-byte value that is divided\n        into two main sections:An extended community has three fields: type,\n        administrator, assigned number (type:administrator:assigned-number).\n        Based on the value of the high-order byte in the Type field, the\n        administrator field can be an AS or an IP address.\n\n        - ROUTE_TARGET: The Route Target community is used in MPLS VPN\n        environments to separate two customers routing tables.\n\n        - ROUTE_ORIGIN: In an MPLS VPN environment, the route origin community\n        is used to identify where routes originated from, so that\n        readvertisement back to that site is avoided.\n\n        - LARGE: A Large community is a 12-byte BGP community that was developed\n        when the 4-byte AS began to be allocated. Since each of the standard or\n        extended communi-ties use 2-byte values for the AS, a 4-byte AS would\n        not fit into the standard 2-byte value.\n      enum:\n        - NO_ADVERTISE\n        - NO_EXPORT\n        - LOCAL_AS\n        - GRACEFUL_SHUTDOWN\n        - EXTENDED\n        - ROUTE_TARGET\n        - ROUTE_ORIGIN\n        - LARGE\n      type: string\n    BgpCommunityListItem:\n      description: Bgp Community List Item\n      properties:\n        communityPrefixes:\n          description: The prefixes that the BGP Community contains\n          $ref: '#/components/schemas/Ipv4Ipv6Prefixes'\n        communityName:\n          description: The name of BGP Community.\n          type: string\n        communityValue:\n          description: BGP Community value.\n          $ref: '#/components/schemas/BgpCommunity'\n        communityId:\n          description: Unique identifier for BGP Community.\n          type: integer\n    BgpExtendedCommunityListItem:\n      description: BGP Extended Community List Item\n      properties:\n        routeTargetImport:\n          description: BGP Community value.\n          $ref: '#/components/schemas/RouteDistinguisherFields'\n        routeDistinguisher:\n          description: The prefixes that the BGP Community contains\n          $ref: '#/components/schemas/RouteDistinguisherFields'\n        routeTargetOrigin:\n          description: BGP Community value.\n          $ref: '#/components/schemas/RouteDistinguisherFields'\n        routeTargetExport:\n          description: BGP Community value.\n          $ref: '#/components/schemas/RouteDistinguisherFields'\n    BurstBehavior:\n      description: \u003e\n        Enumeration used to select the Bandwidth Profile Flow Burst Behavior\n\n        attribute. Reference MEF 61.1 Section 17.3 Table 29 Bandwidth Profile\n\n        Parameters for a Bandwidth Profile Flow.\n\n        - OPTIMIZE_DELAY: Enumeration representing the Burst Behavior of\n        optimization of delay.\n\n        - OPTIMIZE_THROUGHPUT: Enumeration representing the Burst Behavior of\n        optimization of throughput.\n      enum:\n        - OPTIMIZE_DELAY\n        - OPTIMIZE_THROUGHPUT\n      type: string\n    BwpFlow:\n      description: \u003e-\n        The Bandwidth Profile Flow, BwpFlow, object class represents the\n        Bandwidth Profile Flow which includes the bandwidth profile parameter\n        CIR, CIRmax, CBS, EIR, EIRmax, EBS, Coupling Flag, Color Mode, Envelope\n        and Rank, and Token Request Offset. The BwpFlow is used with Service\n        Attributes for CarrierEthernetOperatorUni, CarrierEthernetSubscriberUni,\n        CarrierEthernetVuni,, and ENNI as well as OVC and EVC End Points.\n        Reference MEF 10.4 Section 12 and MEF 26.2 Section 17.\n      properties:\n        eirMax:\n          description: \u003e-\n            MEF 26.2 sec. 17.1.2 and MEF 10.4 sec. 12.1.2 - eirMax represents\n            Maximum Excess Information Rate. It limits the average rate in bits\n            per second at which External Interface Frames for this Bandwidth\n            Profile Flow can be declared Yellow (regardless of unused excess\n            bandwidth from higher-ranked Bandwidth Profile Flows or unused\n            committed bandwidth).\n          $ref: '#/components/schemas/InformationRate'\n        envelopeRank:\n          description: \u003e-\n            MEF 26.2 sec. 17.1.2 and MEF 10.4 sec. 12.1.2 - The rank in the\n            envelope of this Bandwidth Profile Flow\n          minimum: 1\n          type: integer\n        cirMax:\n          description: \u003e-\n            MEF 26.2 sec. 17.1.2 and MEF 10.4 sec. 12.1.2 - cirMax represents\n            Maximum Committed Information Rate. It limits the average rate in\n            bits per second at which External Interface Frames for this\n            Bandwidth Profile Flow can be declared Green (regardless of unused\n            committed bandwidth from higher-ranked Bandwidth Profile Flows).\n          $ref: '#/components/schemas/InformationRate'\n        cbs:\n          description: \u003e-\n            MEF 26.2 sec. 17.1.2 and MEF 10.4 sec. 12.1.2 - cbs represents\n            Committed Burst Size. Limits by how much, and for how long, the\n            amount of traffic declared Green for this Bandwidth Profile Flow in\n            the short term can exceed the committed bandwidth made available to\n            this Bandwidth Profile Flow over the long term, in bytes.\n          $ref: '#/components/schemas/DataSize'\n        couplingFlag:\n          description: \u003e-\n            MEF 26.2 sec. 17.1.2 and MEF 10.4 sec. 12.1.2 - The couplingFlag\n            determines whether unused committed bandwidth for this Bandwidth\n            Profile Flow is made available as excess bandwidth for this\n            Bandwidth Profile Flow or as committed bandwidth for the next\n            lower-ranked Bandwidth Profile Flow. 0/FALSE means overflow green\n            tokens are used as green tokens in the next lowest BWP Flow in the\n            Envelope. 1/TRUE means they are used as yellow tokens for this BWP\n            Flow.\n          type: boolean\n        envelopeId:\n          description: \u003e-\n            MEF 26.2 sec. 17.1.2 and MEF 10.4 sec. 12.1.2 - The name of the\n            envelope that this Bandwidth Profile Flow resides in.\n          maxLength: 45\n          minLength: 1\n          pattern: \"[ -\\x7F]+\"\n          type: string\n        tokenRequestOffset:\n          description: \u003e-\n            MEF 26.2 sec. 17.1.2 and MEF 10.4 sec. 12.1.2 - tokenRequestOffset\n            adjusts the bandwidth consumed by each External Interface Frame in\n            the Bandwidth Profile Flow by a fixed number of octets.\n          type: integer\n        ebs:\n          description: \u003e-\n            MEF 26.2 sec. 17.1.2 and MEF 10.4 sec. 12.1.2 - ebs represents\n            Excess Burst Size. It limits by how much, and for how long, the\n            amount of traffic declared Yellow for this Bandwidth Profile Flow in\n            the short term can exceed the excess bandwidth made available to\n            this Bandwidth Profile Flow over the long term.\n          $ref: '#/components/schemas/DataSize'\n        colorMode:\n          description: \u003e-\n            MEF 26.2 sec. 17.1.2 and MEF 10.4 sec. 12.1.2 - colorMode indicates\n            whether or not External Interface Frames for this Bandwidth Profile\n            Flow that are identified as Yellow on input to the Bandwidth Profile\n            Algorithm can be declared Green.\n          $ref: '#/components/schemas/ColorMode'\n        cir:\n          description: \u003e-\n            MEF 26.2 sec. 17.1.2 and MEF 10.4 sec. 12.1.2 - cir represents\n            Committed Information Rate. When added to unused committed bandwidth\n            provided from higher-ranked Bandwidth Profile Flows (depending on\n            the value of couplingFlag for the higher-ranked Bandwidth Profile\n            Flows), limits the average rate in bits per second at which External\n            Interface Frames for this Bandwidth Profile Flow can be declared\n            Green.\n          $ref: '#/components/schemas/InformationRate'\n        eir:\n          description: \u003e-\n            MEF 26.2 sec. 17.1.2 and MEF 10.4 sec. 12.1.2 - eir represents\n            Excess Information Rate. When added to unused excess bandwidth from\n            higher-ranked Bandwidth Profile Flows, and to un-used committed\n            bandwidth (depending on the value of couplingFlag for this Bandwidth\n            Profile Flow and couplingFlagForIndexZero for the Envelope), limits\n            the average rate in bits per second at which External Interface\n            Frames for this Bandwidth Profile Flow can be declared Yellow.\n          $ref: '#/components/schemas/InformationRate'\n      type: object\n    CarrierEthernetEnniSpSo:\n      allOf:\n        - $ref: '#/components/schemas/MEFProductConfiguration'\n        - $ref: '#/components/schemas/EnniService'\n        - $ref: '#/components/schemas/EnniCommon'\n        - $ref: '#/components/schemas/OperatorMultilateral'\n      x-discriminator-value: 'urn:mef:lso:spec:sonata:carrier-ethernet-enni-sp-so:v4.0.0:inventory'\n    CarrierEthernetEvcCommon:\n      description: \u003e-\n        These are the MEF 10.4 EVC Service Attributes that are common to all\n        Subscriber (EVC-based) Ethernet Services defined in MEF 6.3.\n      properties:\n        listOfCosNames:\n          description: \u003e-\n            MEF 10.4 sec. 8.7 - The EVC List of Class of Service Names Service\n            Attribute is used to specify all of the Class of Service Names\n            supported by an EVC. The value of the EVC List of Class of Service\n            Names Service Attribute is a non-empty list of Class of Service\n            Names (which may include one or more of the CoS Labels defined in\n            MEF 23.2).\n          items:\n            type: string\n          minItems: 1\n          type: array\n          uniqueItems: true\n        availableMegLevel:\n          description: \u003e-\n            MEF 10.4 sec. 8.11 - The lowest MEG level for which SOAM Frames are\n            not peered or discarded by the Service Provider. If this attribute\n            is NONE  there is no such level (that is, SOAM frames at all MEG\n            levels may be peered or discarded by the Service Provider). For all\n            Subscriber Ethernet Services defined in MEF 6.3 the value is\n            constrained to the range 0...6.\n          $ref: '#/components/schemas/AvailableMegList'\n        carrierEthernetSls:\n          description: \u003e-\n            MEF 10.4 sec. 8.8 - The SLS includes technical details of the\n            service level in terms of Performance Objectives, agreed between the\n            Service Provider and the Subscriber or between Service Provider and\n            the Operator as part of the Service Level Agreement. A given SLS\n            might contain 0,1 or more Performance Objectives for each\n            Performance Metric. If the value of this attribute is an empty list,\n            it is equivalent to a value of None per MEF 10.4.\n          items:\n            $ref: '#/components/schemas/CarrierEthernetSls'\n          maxItems: 1\n          minItems: 0\n          type: array\n          uniqueItems: true\n        maximumFrameSize:\n          description: \u003e-\n            MEF 10.4 sec. 8.10 - Maximum size of Service frames that can be\n            carried over the EVC. This must be at least 1522 (1518+C-tag).\n          minimum: 1522\n          type: integer\n      type: object\n    CarrierEthernetEvcEpCommon:\n      description: \u003e-\n        This set of EVC End Point Service Attributes are applicable to all\n        Subscriber (EVC-based) Ethernet Services defined in MEF 6.3 based on the\n        Service Attributes in MEF 10.4.\n      properties:\n        identifier:\n          description: \u003e-\n            MEF 10.4 sec. 10.1 - The value of the EVC EP ID Service Attribute is\n            a string that is used to allow the Subscriber and Service Provider\n            to uniquely identify the EVC EP for operations purposes.\n          maxLength: 45\n          minLength: 1\n          pattern: \"[ -\\x7F]+\"\n          type: string\n        subscriberMegMip:\n          description: \u003e-\n            MEF 10.4 sec. 10.13 - The value of the EVC EP Subscriber MEG MIP\n            Service Attribute is either None or an integer in the range 0 � 7\n            that indicates the MEG Level of a Subscriber MEG MIP.\n          $ref: '#/components/schemas/MegList'\n        egressMap:\n          description: \u003e-\n            MEF 10.4 sec. 10.7 - The value of the EVC EP Egress Map Service\n            Attribute is None or a map of the form {Corresponding Ingress\n            Service Frame Class of Service Name, Corresponding Ingress Service\n            Frame Color} to {Egress Service Frame C-Tag PCP value, Egress\n            Service Frame C-Tag DEI value} or Discard. If this property is an\n            empty list, the value is assumed to have the value None.\n          items:\n            $ref: '#/components/schemas/EvcEgressMap'\n          maxItems: 1\n          minItems: 0\n          type: array\n          uniqueItems: true\n        colorMap:\n          description: \u003e-\n            MEF 10.4 sec. 10.6 - The value of the EVC EP Color Map Service\n            Attribute is a pair of the form ?F, M? where: F is one of the values\n            ENDPOINT, DEI, PCP, or DSCP and M is a map that can be used to\n            assign Color to each Ingress Service Frame. (The form of M depends\n            on the value of F.). The EVC EP Color Map Service Attribute is the\n            mechanism by which the Color for an Ingress Service Frame that is\n            mapped to an EVC EP is indicated by the content in the Service Frame\n            header.\n          $ref: '#/components/schemas/ColorFrom'\n        ingressClassOfServiceMap:\n          description: \u003e-\n            MEF 10.4 sec. 10.5 and MEF 45.1 sec. 6.2 - The value of the EVC EP\n            Ingress Class of Service Map Service Attribute is a 3-tuple of the\n            form ?F, M, P? where: F is one of the values ENDPOINT, C_TAG_PCP, or\n            DSCP, M is a map that can be used to assign Class of Service Names\n            to Service Frames. (The form of M depends on the value of F.), and P\n            is a map with entries of the form ?Layer 2 Control Protocol type ?\n            Class of Service Name? where the Layer 2 Control Protocol type is\n            determined by the Protocol Identifier (see Section 6.2 of MEF 45.1).\n          $ref: '#/components/schemas/CosFrom'\n        ingressBandwidthProfilePerClassofServiceName:\n          description: \u003e-\n            MEF 10.4 sec. 10.9 - The EVC EP Class of Service Name Ingress\n            Bandwidth Profile Service Attribute is used to limit the rate of\n            Ingress Service Frames with a given Class of Service Name at a UNI.\n            The value is None or a non-empty list of pairs of the form ?x,y?,\n            where x is a Class of Service Name that is in the value of the EVC\n            List of Class of Service Names Service Attribute and y = BWP Flow\n            Parameters. If this property is an empty list, the value is assumed\n            to have the value None.\n          items:\n            $ref: '#/components/schemas/BandwidthProfilePerClassOfServiceName'\n          minItems: 0\n          type: array\n          uniqueItems: true\n      type: object\n    CarrierEthernetEvcEpEline:\n      properties:\n        identifier:\n          description: \u003e-\n            MEF 10.4 sec. 10.1 - The value of the EVC EP ID Service Attribute is\n            a string that is used to allow the Subscriber and Service Provider\n            to uniquely identify the EVC EP for operations purposes.\n          maxLength: 45\n          minLength: 1\n          pattern: \"[ -\\x7F]+\"\n          type: string\n      type: object\n    CarrierEthernetEvcEpNotEpl:\n      description: \u003e-\n        This set of EVC End Point Service Attributes are applicable to all\n        Subscriber (EVC-based) Ethernet Services defined in MEF 6.3 based on the\n        Service Attributes in MEF 10.4 - except EPL.\n      properties:\n        sourceAddressMacLimit:\n          description: \u003e-\n            MEF 10.4 sec. 10.12 - The value of the EVC EP Source MAC Address\n            Limit Service Attribute is either None or the pair ?N, t ? where N\n            is an integer ?1 and t is a time duration. When the value of the EVC\n            EP Source MAC Address Limit Service Attribute = ?N, t? the number of\n            source MAC Addresses that can be used in Ingress Service Frames is\n            limited. If this property is not present or an empty list, the value\n            is assumed to have the value None.\n          items:\n            $ref: '#/components/schemas/SourceMacAddressLimit'\n          maxItems: 1\n          minItems: 0\n          type: array\n          uniqueItems: true\n        egressBandwidthProfilePerClassofServiceName:\n          description: \u003e-\n            MEF 10.4 sec. 10.11 - The EVC EP Class of Service Name Egress\n            Bandwidth Profile Service Attribute is used to limit the rate of all\n            Egress Service Frames with a given Class of Service Name, as\n            determined at the ingress UNI for each frame per the EVC EP Ingress\n            Class of Service Map Service Attribute (MEF 10.4 Section 10.5). The\n            value of the EVC EP Class of Service Name Egress Bandwidth Profile\n            Service Attribute is either None or a non-empty list of pairs of the\n            form ?x, y? where x is a Class of Service Name contained in the\n            value of the EVC List of Class of Service Names Service Attribute\n            (MEF 10.4 Section 8.7) but not equal to Discard and y= the 3-tuple\n            ?CIR, CIRmax, ER? where the elements of the 3-tuple are defined in\n            MEF 10.4 Section 12.1.2. If this property is an empty list, the\n            value is assumed to have the value None.\n          items:\n            $ref: '#/components/schemas/BandwidthProfilePerClassOfServiceName'\n          maxItems: 1\n          minItems: 0\n          type: array\n          uniqueItems: true\n      type: object\n    CarrierEthernetEvcEpVirtualPrivate:\n      properties:\n        evcEndPointMap:\n          description: \u003e-\n            MEF 10.4 sec. 10.4 - The EVC EP Map Service Attribute is used to map\n            Service Frames to the EVC EP. The value of the EVC EP Map Service\n            Attribute (in MEF 10.4) is one of ALL, LIST, or UT/PT. This\n            attribute is only available for Virtual Private services since\n            Private services always require All. For Virtual Private Services it\n            can be UT/PT (Untagged/Priority Tagged) or LIST. When the value of\n            the EVC EP Map Service Attribute = List, a non-empty list of unique\n            integers, each in the range 1,2,�,4094 is specified.\n          $ref: '#/components/schemas/EvcEndPointMap'\n        evcEndPointEnvelopes:\n          description: \u003e-\n            The Envelopes and Envelope Coupling Flag values to which Bandwidth\n            Profile Flows for this EVC End Point can be mapped. Value is list of\n            {envelopeID, couplingFlagForIndexZero}. Envelopes listed in the EVC\n            End Point Envelopes Service Attribute can be used when all of the\n            Bandwidth Profile Flows contained in the Envelope are specific to a\n            given OVC End Point. They are specified using one of the following\n            EVC End Point Service Attributes: Ingress Bandwidth Profile Per EVC\n            End Point Egress Bandwidth Profile Per EVC End Point Ingress\n            Bandwidth Profile Per Class of Service Name Egress Bandwidth Profile\n            Per Egress Equivalence Class Name  To create an Envelope containing\n            Bandwidth Profile Flows for more than one EVC End Point, the UNI\n            Envelopes Service Attribute must be used.\n          items:\n            $ref: '#/components/schemas/Envelope'\n          minItems: 0\n          type: array\n          uniqueItems: true\n      type: object\n    CarrierEthernetEvcNotEpl:\n      description: \u003e-\n        These are the MEF 10.4 EVC Service Attributes that are common to all\n        Subscriber (EVC-based) Ethernet Services defined in MEF 6.3 based on the\n        Service Attributes in MEF 10.4 - except EPL.\n      properties:\n        frameDisposition:\n          description: \u003e-\n            MEF 10.4 sec. 8.4 - A 3-tuple that indicates how Unicast, Multicast,\n            and Broadcast Frames are delivered by the service. For each, the\n            value can be UNCONDITIONAL, the frames are delivered without\n            condition, CONDITIONAL, the frames are delivered based on conditions\n            agreed to between Buyer and Seller (e.g., based on learned\n            addresses), and DISCARD. If CONDITIONAL is chosen for any of the\n            elements, the conditions must be agreed on by the Service Provider\n            and Subscriber by some other means.\n          $ref: '#/components/schemas/FrameDisposition'\n      type: object\n    CarrierEthernetOperatorUni:\n      allOf:\n        - $ref: '#/components/schemas/MEFProductConfiguration'\n        - $ref: '#/components/schemas/OperatorUniCommon'\n      x-discriminator-value: 'urn:mef:lso:spec:sonata:carrier-ethernet-operator-uni:v4.0.0:all'\n    CarrierEthernetPhysicalLink:\n      description: \u003e-\n        A 2-tuple of the form ?id, physicalLink?. The value of id is an\n        identifier for the physical link. The value of physicalLink is the\n        specific Ethernet physical layer type.\n      properties:\n        physicalLink:\n          description: An Ethernet physical layer\n          $ref: '#/components/schemas/PhysicalLink'\n        autoNegotiation:\n          description: \u003e-\n            IEEE Std 802.3-2018 Clause 28 and 37 - Indicates whether 802.3\n            autonegotiation is enabled on the UNI link.\n          $ref: '#/components/schemas/EnabledDisabled'\n        id:\n          description: An identifier for the physical link.\n          maxLength: 45\n          minLength: 1\n          pattern: \"[ -\\x7F]+\"\n          type: string\n      type: object\n    CarrierEthernetSls:\n      description: \u003e-\n        The Service Level Specification Service Attribute (SLS) is, as part of\n        the Service Level Agreement, the technical details of the service level,\n        in terms of Performance Objectives, agreed between the Service Provider\n        and the Subscriber for Subscriber Ethernet Services and between the\n        SP/SO and Operator for Operator Ethernet Services. . A given SLS might\n        contain 0, 1, or more Performance Objectives for each Performance\n        Metric. The SLS is described in section 8.8 (EVC Service Level\n        Specification Service Attribute) of MEF 10.4 for EVCs and section 12.13\n        (OVC Service Level Specification Service Attribute) for OVCs. MEF 10.4\n        defines 10 Performance Metrics (all of which are included here). MEF\n        26.2 defines only 9 Performance Metrics. MEF 26.2 does not include the\n        One Way Composite PM. The other 9 are the same.\n      properties:\n        slsCosNameEntry:\n          description: \u003e-\n            MEF 10.4 sec. 8.8 and MEF 26.2 sec. 12.13 - This is a list of\n            Performance Metrics. Each entry contains a set of parameters and\n            Performance Metrics for one Class of Service.\n          items:\n            $ref: '#/components/schemas/SlsCosNameEntry'\n          minItems: 1\n          type: array\n          uniqueItems: true\n        startTime:\n          description: \u003e-\n            MEF 10.4 sec. 8.8 and MEF 26.2 sec. 12.13 - This represents the date\n            and time for the start of the SLS. It is the beginning of the first\n            timeInterval. This is referred to as ts in MEF 10.4 and MEF 26.2.\n            The value is a string in ISO 8601 format.\n          format: date-time\n          type: string\n        timeDuration:\n          description: \u003e-\n            MEF 10.4 sec. 8.8 and MEF 26.2 sec. 12.13 - The timeDuration\n            (referred to as T in MEF 10.4 and 26.2) is a time duration, e.g., 1\n            month, 2 weeks, that is used in conjunction with startTime to\n            specify time intervals for determining when Performance Objectives\n            are met. Note that the units for timeDuration are not constrained;\n            in particular, 1 month is an allowable value, corresponding to a\n            calendar month, e.g. from midnight on the 10th of one month up to\n            but not including midnight the 10th of the following month.\n          $ref: '#/components/schemas/TimeDuration'\n      type: object\n    CarrierEthernetSubscriberUni:\n      allOf:\n        - $ref: '#/components/schemas/MEFProductConfiguration'\n        - $ref: '#/components/schemas/SubscriberUniCommon'\n      x-discriminator-value: \u003e-\n        urn:mef:lso:spec:cantata-sonata:carrier-ethernet-subscriber-uni:v0.3.0:all\n    CarrierEthernetVpEvcCommon:\n      description: \u003e-\n        These are the MEF 10.4 EVC Service Attributes that are common to all\n        Virtual Private Subscriber (EVC-based) Ethernet Services (EVPL, EVP-LAN,\n        EVP_TREE) defined in MEF 6.3.\n      properties:\n        cTagPcpPreservation:\n          description: \u003e-\n            MEF 10.4 sec. 8.5 - The EVC C-Tag PCP Preservation Service Attribute\n            can be used to preserve the value of the PCP field in C-Tagged\n            Service Frames across an EVC. The value of the EVC C-Tag PCP\n            Preservation Service Attribute is either Enabled or Disabled.\n          $ref: '#/components/schemas/EnabledDisabled'\n        cTagDeiPreservation:\n          description: \u003e-\n            MEF 10.4 sec. 8.6 - If ENABLED, then the value of the C-Tag DEI\n            field is preserved from Ingress to Egress.\n          $ref: '#/components/schemas/EnabledDisabled'\n      type: object\n    CcDei:\n      description: \u003e-\n        One of the possible values for the OVC Egress Map. This indicates that\n        the Color is mapped to the DEI field of the Egress Frame. Note that the\n        Enums used for the DEI values include DISCARD as a value.\n      properties:\n        deiGeen:\n          description: The DEI value (or DISCARD) to use for Green frames.\n          $ref: '#/components/schemas/DeiValueAndDiscard'\n        deiYellow:\n          description: The DEI value (or DISCARD) to use for Yellow frames.\n          $ref: '#/components/schemas/DeiValueAndDiscard'\n        cosName:\n          description: The class of service name for the corresponding Ingress EI Frame.\n          type: string\n      type: object\n    CcPcp:\n      description: \u003e-\n        One of the possible values for the OVC Egress Map. This indicates that\n        the Class of Service and Color are mapped to the PCP field of the Egress\n        Frame. Note that the Enums used for the PCP values include DISCARD as a\n        value.\n      properties:\n        pcpYellow:\n          description: A PCP value (0-7) or DISCARD to use for Yellow frames in the CoS\n          $ref: '#/components/schemas/PcpValueAndDiscard'\n        cosName:\n          description: The class of service name for the corresponding Ingress EI Frame.\n          type: string\n        pcpGreen:\n          description: A PCP value (0-7) or DISCARD to use for Green frames in the CoS\n          $ref: '#/components/schemas/PcpValueAndDiscard'\n      type: object\n    CeVlanIdPreservation:\n      description: \u003e-\n        MEF 26.2 sec. 12.7 - Determines whether the C-tag in the Ingress Frame\n        is Stripped or Preserved in the Egress Frame. Per MEF 51.1, the Operator\n        must support PRESERVE and should support STRIP.\n      enum:\n        - PRESERVE\n        - STRIP\n        - RETAIN\n      type: string\n    CloudDataLimit:\n      description: \u003e-\n        Specifies an absolute limit on the amount of data the Subscriber can\n        transmit to, or receive from, the cloud service in a given time period.\n        It is either Unlimited or a 4-tuple (scdl, tcdl, ucdl, dcdl).  Reference\n        MEF 61.1 Section 10.13.3 Cloud Data Limit.\n      properties:\n        duration:\n          description: \u003e-\n            Specifies a duration. Together with the start time, it describes a\n            service of contiguous time intervals, starting at the specified\n            start time and each lasting for the specified duration.\n          $ref: '#/components/schemas/TimeDuration'\n        download:\n          description: \u003e-\n            An integer indicating a limit, in octets, on the amount of IP\n            traffic received from the cloud service that can be delivered to the\n            Subscriber during each time interval described by startTime and\n            duration.\n          type: integer\n        upload:\n          description: \u003e-\n            An integer indicating a limit, in octets, on the amount of IP\n            traffic that can be transmitted towards the cloud service during\n            each time interval described by startTime and duration.\n          type: integer\n        startTime:\n          description: Specifies a start time.\n          format: date-time\n          type: string\n      type: object\n    CloudDns:\n      description: \u003e\n        Data type representing a Domain Name System. Reference MEF 69.1 Section\n\n        9.1\n\n        [R13]  For an Internet Access Service, if the Cloud DNS parameter of the\n\n        IPVC Cloud Service Attribute is STATIC, the associated list of DNS\n        Servers\n\n        MUST have at least one entry. \n\n        [D4] For an Internet Access Service, if the Cloud DNS parameter of the\n\n        IPVC Cloud Service Attribute is STATIC, the associated list of DNS\n        Servers\n\n        SHOULD contain at least two DNS servers.\n      properties:\n        dnsType:\n          description: Domain Name System type.\n          $ref: '#/components/schemas/DnsType'\n        dnsServerIpv6List:\n          description: DNS server list an IPv6 addresses\n          items:\n            type: string\n          type: array\n        dnsServerIpv4List:\n          description: DNS server list an IPv4 addresses\n          items:\n            type: string\n          type: array\n      type: object\n    CnPcp:\n      description: \u003e-\n        This is a 2-tuple ?x,y? where x is a Class of Service Name and y is a\n        PCP Value or DISCARD.\n      properties:\n        pcpValue:\n          $ref: '#/components/schemas/PcpValueAndDiscard'\n        cosName:\n          description: The class of service name for the corresponding Ingress EI Frame.\n          type: string\n      type: object\n    ColorFrom:\n      discriminator:\n        mapping:\n          DSCP: '#/components/schemas/ColorFromDscp'\n          ENDPOINT: '#/components/schemas/ColorFromEp'\n          PCP: '#/components/schemas/ColorFromPCP'\n          DEI: '#/components/schemas/ColorFromDei'\n        propertyName: mapType\n      properties:\n        mapType:\n          enum:\n            - DSCP\n            - ENDPOINT\n            - PCP\n            - DEI\n          type: string\n      required:\n        - mapType\n      type: object\n    ColorFromDei:\n      allOf:\n        - $ref: '#/components/schemas/ColorFrom'\n        - description: \u003e-\n            This Class is referenced when the color comes from the C-tag DEI\n            field (for EVCs and OVCs) or the S-tag DEI field for OVCs. MEF 10.4\n            (EVCs) and  MEF 26.2 (OVCs) requires that DEI=0 means Green and\n            DEI=1 means Yellow, so no map is needed.\n          type: object\n      x-discriminator-value: DEI\n    ColorFromDscp:\n      allOf:\n        - $ref: '#/components/schemas/ColorFrom'\n        - description: \u003e-\n            This Class is referenced when the color comes from the DSCP field.\n            It is a list of DSCP Entries where each entry has three components:\n            (1) A list of DSCP values, (2) a color for IPv4 packets with one of\n            those DSCP values, and (3) a color for IPv6 packets with one of\n            those DSCP values. Any DSCP value that is not specified and any\n            Frame that does not include an IP packet is Green..\n          properties:\n            colorFromDscpMap:\n              items:\n                $ref: '#/components/schemas/ColorFromDscpEntry'\n              minItems: 1\n              type: array\n              uniqueItems: true\n          type: object\n      x-discriminator-value: DSCP\n    ColorFromDscpEntry:\n      properties:\n        ipv6Color:\n          $ref: '#/components/schemas/FrameColor'\n        dscpList:\n          description: This is a list of DSCP values\n          items:\n            maximum: 63\n            minimum: 0\n            type: integer\n          minItems: 1\n          type: array\n          uniqueItems: true\n        ipv4Color:\n          $ref: '#/components/schemas/FrameColor'\n      type: object\n    ColorFromEp:\n      allOf:\n        - $ref: '#/components/schemas/ColorFrom'\n        - description: \u003e-\n            The color of each Ingress Frame is determined solely from the EVC or\n            OVC End Point. In other words, the EP declares all frames GREEN or\n            all frame YELLOW\n          properties:\n            epColor:\n              $ref: '#/components/schemas/FrameColor'\n          type: object\n      x-discriminator-value: ENDPOINT\n    ColorFromPCP:\n      allOf:\n        - $ref: '#/components/schemas/ColorFrom'\n        - description: \u003e-\n            This Class is referenced when the color comes from the S-tag or\n            C-tag PCP field. Each of the 8 possible PCP values maps to a color.\n            If there is no tag, the frame is Green.\n          properties:\n            colorFromPcpMap:\n              description: 'This is a list of 8 Color mappings, one for each PCP value.'\n              items:\n                $ref: '#/components/schemas/ColorFromPCPMapEntry'\n              maxItems: 8\n              minItems: 8\n              type: array\n              uniqueItems: true\n          type: object\n      x-discriminator-value: PCP\n    ColorFromPCPMapEntry:\n      properties:\n        pcpValue:\n          $ref: '#/components/schemas/PcpValue'\n        pcpColor:\n          $ref: '#/components/schemas/FrameColor'\n      type: object\n    ColorMode:\n      description: \u003e-\n        MEF 26.2 sec. 17.1.2 and MEF 10.4 sec. 12.1.2 - colorMode indicates\n        whether or not External Interface Frames for this Bandwidth Profile Flow\n        that are identified as Yellow on input to the Bandwidth Profile\n        Algorithm can be declared Green.\n      enum:\n        - COLOR_BLIND\n        - COLOR_AWARE\n      type: string\n    ConnectionAddressFamily:\n      description: \u003e-\n        Specifies whether the session is established over IPv4 or IPv6 or\n        whether two separate session are established using IPv4 and IPv6.\n      enum:\n        - IPV4\n        - IPv6\n        - BOTH\n      type: string\n    ControlProtocol:\n      description: \u003e-\n        Data type representing Control Protocol. Each entry consists of a\n        3-tuple containing the protocol name, addressing information (either\n        SP/Operator Addresses or Any) and one or more references. Reference MEF\n        61.1 Section 12.6 UNI List of Control Protocols Service Attribute\n      properties:\n        reference:\n          description: Protocol reference.\n          items:\n            type: string\n          minItems: 1\n          type: array\n        addressing:\n          description: Enumeration representing the addressing.\n          $ref: '#/components/schemas/Addressing'\n        protocolName:\n          description: Protocol name.\n          type: string\n      type: object\n    ConversationIdRange:\n      description: \u003e-\n        A range of ConversationID (either a VLAN Id or 0 for untagged frames) \n        allowing three forms: start, start ? start, and start ? end\n      properties:\n        start:\n          description: \u003e-\n            The starting Conversation ID of the range or the only Conversation\n            ID if there is no end value\n          maximum: 4094\n          minimum: 0\n          type: integer\n        end:\n          description: The final Conversation ID in the range\n          maximum: 4094\n          minimum: 0\n          type: integer\n      type: object\n    ConversationIdToAggregationLinkMap:\n      description: \u003e-\n        This is a 2-tuple ?x,y? where x is a list of Port Conversation IDs or\n        ranges of Port Conversation IDs (a Port Conversation ID is a VLAN ID or\n        0 for untagged frames) and y is a list of Link Numbers. This is used in\n        the Port Conversation to Aggregation Link Map for the UNI and ENNI.\n      properties:\n        conversationIDs:\n          description: \u003e-\n            802.1AX-2014 sec. 6.6.2.1 - A Port Conversation ID is a VLAN ID (1\n            to 4094) or 0 to represent untagged and priority-tagged frames.\n          items:\n            $ref: '#/components/schemas/ConversationIdRange'\n          minItems: 1\n          type: array\n          uniqueItems: true\n        aggLinkList:\n          description: \u003e-\n            802.1AX-2014 sec. 6.6.2.1 - An ordered list of Aggregation Link\n            Numbers\n          items:\n            minimum: 1\n            type: integer\n          minItems: 1\n          type: array\n          uniqueItems: true\n      type: object\n    CosDscpMap:\n      description: \u003e-\n        This is a list of DSCP to CoS Name Entries followed by items for Not an\n        IP Packet and All Other Values.\n      properties:\n        dscpValueCoSList:\n          description: \u003e-\n            This is a list of DSCP to CoS Map Entries: {ipv4DSCPs, ipv6DSCPs,\n            CoSName}\n          items:\n            $ref: '#/components/schemas/CosDscpMapEntry'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        notIP:\n          description: \u003e-\n            This is the CoS Name for packets that are not IP packets when CoS is\n            determined from DSCP\n          type: string\n        otherIPv6:\n          description: \u003e-\n            This is the CoS Name for IPv6 packets with DSCP values other than\n            those listed.\n          type: string\n        otherIPv4:\n          description: \u003e-\n            This is the CoS Name for IPv4 packets with DSCP values other than\n            those listed.\n          type: string\n      type: object\n    CosDscpMapEntry:\n      description: 'This is a 3-tuple {ipv4list, ipv6list, cosName}'\n      properties:\n        ipv4List:\n          description: List of IPv4 DSCP values\n          $ref: '#/components/schemas/DscpValues'\n        ipv6List:\n          description: List of IPv6 DSCP values\n          $ref: '#/components/schemas/DscpValues'\n        cosName:\n          type: string\n      type: object\n    CosEnniPcpMapEntry:\n      description: '2-tuple {PCP, CoSName} that maps a PCP to a CoS Name or DISCARD.'\n      properties:\n        pcpVal:\n          $ref: '#/components/schemas/PcpValue'\n        pcpCosName:\n          type: string\n      type: object\n    CosFrom:\n      discriminator:\n        mapping:\n          C_TAG_PCP: '#/components/schemas/CosFromCtagPcp'\n          S_TAG_PCP: '#/components/schemas/CosFromStagPcp'\n          ENDPOINT: '#/components/schemas/CosFromEp'\n          DSCP: '#/components/schemas/CosFromDscp'\n        propertyName: mapType\n      properties:\n        mapType:\n          description: The Field that indicates F = S_TAG_PCP.\n          enum:\n            - C_TAG_PCP\n            - S_TAG_PCP\n            - ENDPOINT\n            - DSCP\n          type: string\n      required:\n        - mapType\n      type: object\n    CosFromCtagPcp:\n      allOf:\n        - $ref: '#/components/schemas/CosFrom'\n        - description: \u003e-\n            Ingress CoS is specified as {F,M,P}. This is when F=C_TAG_PCP. This\n            maps each of the 8 PCP values in the C-tag to a Class of Service\n            Name. It also maps UNTAGGED frames to a Class of Service Name.\n          properties:\n            map_M:\n              description: \u003e-\n                This maps each of the possible C-tag PCP values (0-7) and\n                Untagged to a specific CoS Name.\n              items:\n                $ref: '#/components/schemas/CosUniPcpMapEntry'\n              maxItems: 9\n              minItems: 9\n              type: array\n              uniqueItems: true\n            l2cp_P:\n              description: This specifies the CoS Name for L2CPs carried over the EVC/OVC.\n              items:\n                $ref: '#/components/schemas/CosL2cp'\n              minItems: 0\n              type: array\n              uniqueItems: true\n          type: object\n      x-discriminator-value: C_TAG_PCP\n    CosFromDscp:\n      allOf:\n        - $ref: '#/components/schemas/CosFrom'\n        - description: \u003e-\n            Ingress CoS is specified as {F,M,P}. This is when F=DSCP. This maps\n            groups of DSCP values (independently for ipV4 and ipV6) to a Class\n            of Service. It also provides a Class of Service mapping for DSCP\n            values that are not specified and for frames that do not contain IP\n            Packets.\n          properties:\n            map_M:\n              description: \u003e-\n                This maps DSCP values to CoS Names for each of IPv4 and IPv6 and\n                also to non-IP packets.\n              $ref: '#/components/schemas/CosDscpMap'\n            l2cp_P:\n              description: This specifies the CoS Names for L2CPs carried over the EVC/OVC.\n              items:\n                $ref: '#/components/schemas/CosL2cp'\n              minItems: 0\n              type: array\n              uniqueItems: true\n          type: object\n      x-discriminator-value: DSCP\n    CosFromEp:\n      allOf:\n        - $ref: '#/components/schemas/CosFrom'\n        - description: \u003e-\n            Ingress CoS is specified as {F,M,P}. This is when F=OVC_EP or EVC_EP\n            as appropriate.\n          properties:\n            map_M:\n              description: The single CoS Name at this EVC/OVC EP\n              type: string\n            l2cp_P:\n              description: This specifies the CoS Name for L2CPs carried over the EVC/OVC.\n              items:\n                $ref: '#/components/schemas/CosL2cp'\n              minItems: 0\n              type: array\n              uniqueItems: true\n          type: object\n      x-discriminator-value: ENDPOINT\n    CosFromStagPcp:\n      allOf:\n        - $ref: '#/components/schemas/CosFrom'\n        - description: \u003e-\n            Ingress CoS is specified as {F,M,P}. This is when F=S_TAG_PCP. This\n            maps each of the 8 PCP values in the S-tag to a Class of Service\n            Name.\n          properties:\n            map_M:\n              description: A list of 8 PCP values and their associated CoS Names\n              items:\n                $ref: '#/components/schemas/CosEnniPcpMapEntry'\n              maxItems: 8\n              minItems: 8\n              type: array\n              uniqueItems: true\n            l2cp_P:\n              description: This specifies the CoS Name for L2CPs carried over the OVC.\n              items:\n                $ref: '#/components/schemas/CosL2cp'\n              minItems: 0\n              type: array\n              uniqueItems: true\n          type: object\n      x-discriminator-value: S_TAG_PCP\n    CosL2cp:\n      description: '2-tuple {L2CP Ident, CoS Name}'\n      properties:\n        l2cpIdentifier:\n          description: MEF 45.1 sec. 8.2 - Protocol Identifier\n          $ref: '#/components/schemas/L2cpProtocol'\n        l2cpCosName:\n          description: CoS Name String to associate with the L2CP\n          type: string\n      type: object\n    CosUniPcpMapEntry:\n      description: \u003e-\n        2-tuple {PCP, CoSName} that maps a PCP value (or Untagged) to a CoS\n        Name.\n      properties:\n        pcpVal:\n          description: A PCP value from 0 to 7 or UNTAGGED\n          $ref: '#/components/schemas/PcpVal'\n        pcpCosName:\n          description: \u003e-\n            A CoS Name from the EVC/OVC List of Class of Service Names Service\n            Attribute.\n          type: string\n      type: object\n    Damping:\n      description: \u003e-\n        Damping parameters as defined in RFC 2439 BGP Route Flap Damping,\n        Section 4.2\n      properties:\n        decayHalfLifeWhileReachable:\n          description: \u003e-\n            This value is the time duration in seconds during which the\n            accumulated stability figure of merit will be reduced by half if the\n            route if considered reachable (whether suppressed or not).\n          type: integer\n        reuseListMemoryReuseListMax:\n          description: \u003e-\n            This is the time (in seconds) value corresponding to the last reuse\n            list. This may be the maximum value of T-hold for all parameter sets\n            of may be configured.\n          type: integer\n        maxHoldDownTime:\n          description: \u003e-\n            This value is the maximum time a route can be suppressed no matter\n            how unstable it has been prior to this period of stability. In\n            seconds.\n          type: integer\n        reuseListTimeGranularity:\n          description: \u003e-\n            This is the time (in seconds) interval between evaluations of the\n            reuse lists.  Each reuse lists corresponds to an additional time\n            increment.\n          type: integer\n        timeGranularity:\n          description: \u003e-\n            This is the time granularity in seconds used to perform all decay\n            computations.\n          type: integer\n        decayHalfLifeWhileUnReachable:\n          description: \u003e-\n            This value is the time duration in seconds during which the\n            accumulated stability figure of merit will be reduced by half if the\n            route if considered unreachable.  If not specified or set to zero,\n            no decay will occur while a route remains unreachable.\n          type: integer\n        decayMemoryLimit:\n          description: \u003e-\n            This is the maximum time (in seconds) that any memory of previous\n            instability will be retained given that the route's state remains\n            unchanged, whether reachable or unreachable.  This parameter is\n            generally used to determine array sizes.\n          type: integer\n        reuseThreshold:\n          description: \u003e-\n            This value is expressed as a number of route withdrawals.  It is the\n            value below which a suppressed route will now be used again.\n          type: integer\n        cutoffThreshold:\n          description: \u003e-\n            This value is expressed as a number of route withdrawals.  It is the\n            value above which a route advertisement will be suppressed.\n          type: integer\n        numberOfReuseLists:\n          description: \u003e-\n            This is the number of reuse lists.  It may be determined from\n            reuse-list-max or set explicitly.\n          type: integer\n      type: object\n    DataSize:\n      description: \u003e-\n        A value and a unit of measure that specifies a data size for example for\n        a buffer or a burst size.\n      properties:\n        dataSizeUnits:\n          description: \u003e-\n            The unit of measure in the data size. For example, if a burst size\n            is 40 KBYTES, this element is KBYTES. Note that the units indicate\n            binary values, e.g., KBYTES is 1024 bytes.\n          $ref: '#/components/schemas/DataSizeUnits'\n        dataSizeValue:\n          description: \u003e-\n            The value in the data size. For example, if a burst size is 40\n            KBYTES, this element is 40.\n          type: integer\n      type: object\n    DataSizeUnits:\n      description: \u003e-\n        The unit of measure in the data size. For example, if a burst size is 40\n        KBYTES, this element is KBYTES. Note that the units indicate binary\n        values, e.g., KBYTES is 1024 bytes.\n      enum:\n        - BYTES\n        - KBYTES\n        - MBYTES\n        - GBYTES\n        - TBYTES\n        - PBYTES\n        - EBYTES\n        - ZBYTES\n        - YBYTES\n      type: string\n    DeiFromCosColor:\n      allOf:\n        - $ref: '#/components/schemas/OvcEgressMap'\n        - description: \u003e-\n            The DEI Field in the Egress EI Frame is determined from the Class of\n            Service and the Frame Color. This is a list that contains an entry\n            for Class of Service Name that includes the CoS Name and the DEI\n            value (or DISCARD) to use for Green frames and the DEI value (or\n            DISCARD) to use for Yellow Frames. For example CoS=Platinum and\n            Color=Green --\u003e DEI = 1 and Color=Yellow --\u003e DEI = 0. This affects\n            the C-tag at the UNI and the S-tag at the ENNI.\n          properties:\n            ccDeiEntries:\n              description: \u003e-\n                A list of entries, one per CoS, that specifies the DEI value for\n                Green frames and Yellow frames.\n              items:\n                $ref: '#/components/schemas/CcDei'\n              minItems: 1\n              type: array\n              uniqueItems: true\n          type: object\n      x-discriminator-value: CC_DEI\n    DeiValueAndDiscard:\n      enum:\n        - '0'\n        - '1'\n        - DISCARD\n      type: string\n    DhcpRelay:\n      description: \u003e-\n        Dynamic Host Configuration Protocol (DHCP) Relay functionality is useful\n        when the Subscriber uses DHCP (per RFC 2131 and RFC 8415) in the\n        Subscriber Network but does not want to place a DHCP server (or possibly\n        a pair of redundant DHCP servers) in each part of the network.\n      properties:\n        dhcpServerList:\n          description: \u003e-\n            Non-empty list of IP addresses for DHCP Servers belonging to the\n            Subscriber. Reference MEF 61.1 Section 13.6 UNI Access Link DHCP\n            Relay Server Attribute.\n          items:\n            $ref: '#/components/schemas/DhcpServer'\n          minItems: 1\n          type: array\n        ipvcEndPointIdentifier:\n          description: IPVC identifier as described in MEF 61.1 Section 11.1.\n          maxLength: 53\n          type: string\n      type: object\n    DhcpServer:\n      description: Data type representing a DHCP Server\n      properties:\n        ipv6Address:\n          description: DHCP Server IPv6 address.\n          type: string\n        ipv4Address:\n          description: DHCP Server IPv4 address.\n          type: string\n      type: object\n    DnsType:\n      description: Enumeration representing the different types of DNS.\n      enum:\n        - DHCP\n        - PPP\n        - STATIC\n        - SLAAC\n      type: string\n    DscpMapping:\n      description: IP DSCP mapping of CoS name to DSCP value\n      properties:\n        ipds:\n          description: DSCP value\n          maximum: 63\n          minimum: 0\n          type: integer\n        cosName:\n          description: Class of Service name\n          type: string\n      type: object\n    DscpValues:\n      description: A list of 6 bit values\n      properties:\n        dscpValues:\n          description: A list of unique 6-bit (0-63) values\n          items:\n            maximum: 63\n            minimum: 0\n            type: integer\n          minItems: 1\n          type: array\n          uniqueItems: true\n      type: object\n    Duration:\n      description: 'A Duration in a given unit of time e.g. 3 hours, or 5 days.'\n      properties:\n        amount:\n          description: 'Duration (number of seconds, minutes, hours, etc.)'\n          type: integer\n        units:\n          $ref: '#/components/schemas/TimeUnit'\n      required:\n        - amount\n        - units\n      type: object\n    EgressClassOfServiceMap:\n      description: \u003e-\n        Pair of values (D,P). D specifies how to set the DS field in Egress IP\n        Data Packets based on CoS Name. It is either None, or a mapping from CoS\n        Names to DSCP values. P specifies how to set the PCP field in VLAN\n        Tagged Ethernet Frames containing Egress IP Data Packets based on CoS\n        Name. It is eitherNone, or a mapping from CoS Names to PCP values.\n        Reference MEF 61.1 Section 11.10 IPVC EP  Egress Class of Service Map\n        Service Attribute.\n      properties:\n        dscpMapping:\n          description: Reference to CoS to IP DSCP mapping.\n          items:\n            $ref: '#/components/schemas/DscpMapping'\n          type: array\n        pcpMapping:\n          description: Reference to CoS to Ethernet PCP mapping.\n          items:\n            $ref: '#/components/schemas/PcpMapping'\n          type: array\n      type: object\n    EnabledDisabled:\n      description: Enumeration to indicate Enabled/Disabled state of an attribute\n      enum:\n        - ENABLED\n        - DISABLED\n      type: string\n    EndPointIdentifierAndCosName:\n      description: \u003e-\n        Data type representing IPVC End Point Identifier and CoS name use for\n        Bandwidth Profiles.\n      properties:\n        ipvcEndPointIdentifier:\n          description: IPVC End Point Identifier for an IPVC End Point located at the UNI.\n          type: string\n        cosName:\n          description: Class of Service Name.\n          type: string\n      type: object\n    EndPointMapForm:\n      discriminator:\n        mapping:\n          FORM_E: '#/components/schemas/EndPointMapFormE'\n          FORM_U: '#/components/schemas/EndPointMapFormU'\n        propertyName: mapType\n      properties:\n        mapType:\n          description: The discriminator for Map Type U\n          enum:\n            - FORM_E\n            - FORM_U\n          type: string\n      required:\n        - mapType\n      type: object\n    EndPointMapFormE:\n      allOf:\n        - $ref: '#/components/schemas/EndPointMapForm'\n        - description: \u003e-\n            MEF 10.4 sec. 16.5.1 - The value of an End Point Map of Form E (E\n            for ENNI) consists of a list of one or more SVLAN ID values. An\n            S-Tagged ENNI Frame whose S-VLAN ID value matches an entry in the\n            list maps to the OVC End Point.\n          properties:\n            ovcEndPointMapFormE:\n              description: A list of S-VLAN ID values at the ENNI.\n              items:\n                maximum: 4094\n                minimum: 1\n                type: integer\n              maxItems: 4094\n              minItems: 1\n              type: array\n              uniqueItems: true\n          type: object\n      x-discriminator-value: FORM_E\n    EndPointMapFormU:\n      allOf:\n        - $ref: '#/components/schemas/EndPointMapForm'\n        - description: \u003e-\n            MEF 10.4 sec. 16.5.4 - The EndPointMapFormU object class represents\n            the OVC End Point  Map Form U (U for UNI). It is a list of one or\n            more CE-VLAN IDs.\n          properties:\n            ovcEndPointMapFormU:\n              description: A list of C-VLAN ID values at the UNI.\n              items:\n                maximum: 4094\n                minimum: 1\n                type: integer\n              maxItems: 4094\n              minItems: 1\n              type: array\n              uniqueItems: true\n          type: object\n      x-discriminator-value: FORM_U\n    EnniCommon:\n      description: \u003e-\n        These are the technical details that need to be agreed to by the Network\n        Operators in order for their Carrier Ethernet Networks to be\n        interconnected by the ENNI.\n      properties:\n        portConversation:\n          description: \u003e-\n            MEF 26.2 sec. 9.6 - A mapping of Port Conversation IDs (i.e., VLAN\n            IDs or zero for untagged frames) to an ordered list of physical\n            links if there are multiple physical links in the UNI and the link\n            aggregation is ALL_ACTIVE. Note: In some cases the Port Conversation\n            ID to Aggregation Link Map can be specified at the OVC End Point.\n          items:\n            $ref: '#/components/schemas/ConversationIdToAggregationLinkMap'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        peeringIdentifier:\n          description: \u003e-\n            MEF 26.2 sec. 9.1 - An identifier for the ENNI intended for\n            operations purposes by the interconnecting Operators at the ENNI.\n          maxLength: 45\n          minLength: 1\n          pattern: \"[ -\\x7F]+\"\n          type: string\n        lagLinkMeg:\n          description: \u003e-\n            MEF 26.2 sec. 9.8 - If Enabled the Service Provider MUST operate the\n            LAG Link MEG on each link in the ENNI.\n          $ref: '#/components/schemas/EnabledDisabled'\n        linkOAM:\n          description: \u003e-\n            MEF 26.2 sec. 9.9 - Indicates whether Link OAM as described in\n            Clause 57 of IEEE Std. 802.3 is supported on the ENNI.\n          $ref: '#/components/schemas/EnabledDisabled'\n        listOfPhysicalLinks:\n          description: \u003e-\n            MEF 26.2 sec. 9.2 and 9.3 - This Service Attribute combines several\n            of the MEF 26.2 Objects into a single n-tuple that is consistent\n            with the way this information is described in MEF 10.4. The value of\n            the ENNI List of Physical Links Service Attribute is a list of\n            2-tuples of the form ??id,pl,?, with one list item for each physical\n            link. The value of id is an identifier for the physical link. The\n            value of pl specifies a physical layer.\n          items:\n            $ref: '#/components/schemas/EnniPhysicalLink'\n          minItems: 1\n          type: array\n          uniqueItems: true\n        meg:\n          description: \u003e-\n            MEF 26.2 sec. 9.7 - Is a Down ENNI MEG MEP Enabled at the ENNI as\n            described in MEF 30.1?\n          $ref: '#/components/schemas/EnabledDisabled'\n        linkAggregation:\n          description: \u003e-\n            MEF 26.2 sec. 9.5 - If the ENNI is composed of multiple physical\n            links this Service Attribute indicates how they are combined using\n            Link Aggregation.\n          $ref: '#/components/schemas/LinkAggType'\n      type: object\n    EnniPhysicalLink:\n      allOf:\n        - $ref: '#/components/schemas/CarrierEthernetPhysicalLink'\n      description: \u003e-\n        This class describes the Physical Link attributes at an ENNI. It\n        consists of the Carrier Ethernet Physical Links (id and physical link\n        type) with no elements.\n    EnniService:\n      description: \u003e-\n        For each instance of an ENNI, there are multiple sets of ENNI Service\n        Attributes. The value for each ENNI Service Attribute in a set for an\n        Operator CEN is specific to a SP/SO that is using the ENNI per Section\n        8.11 of MEF 26.2. Each such value is agreed to by the SP/SO and the\n        Operator.\n      properties:\n        maximumNumberOfOvcs:\n          description: \u003e-\n            MEF 26.2 sec. 13.3 - The value of the Maximum Number of OVCs Service\n            Attribute is a strictly positive integer. It provides an upper bound\n            on the number of OVCs that the Operator will support at the ENNI for\n            the SP/SO.\n          minimum: 1\n          type: integer\n        maximumNumberOfOvcEndPointsPerOvc:\n          description: \u003e-\n            MEF 26.2 sec. 13.4 - Usually each OVC has a single End Point at the\n            ENNI but with hairpin switching an OVC can have multiple. This\n            Service Attribute sets the limit on the number of End Points an OVC\n            can have at the ENNI.\n          minimum: 1\n          type: integer\n        sVlanIdControl:\n          description: \u003e-\n            MEF 26.2 sec. 13.2 - The value of the S-VLAN ID Control Service\n            Attribute is FULL or PARTIAL. When the value is FULL, the Operator\n            can support only a single SP/SO at the ENNI. In other words, S-VLAN\n            IDs at the ENNI can only be mapped to OVC End Points for a single\n            SP/SO. When the value is PARTIAL, there can be multiple SP/SOs using\n            the ENNI and different S-VLAN IDs can be mapped to OVC End Points\n            for different SP/SOs.\n          $ref: '#/components/schemas/SVlanIdControl'\n        tokenShare:\n          description: \u003e-\n            MEF 26.2 sec. 13.5 - An attribute that indicates whether Bandwidth\n            Profile Envelopes containing more than one Bandwidth Profile Flow\n            are supported by the Service Provider at the ENNI.\n          $ref: '#/components/schemas/EnabledDisabled'\n        envelopes:\n          description: \u003e-\n            MEF 26.2 sec. 13.6 - The Envelopes and Envelope Coupling Flag values\n            to which Bandwidth Profile Flows can be mapped. Value is list of\n            {envelopeID, couplingFlagForIndexZero}. Note: Envelopes for the ENNI\n            can also be specified at the OVC End Points associated with the\n            ENNI.\n          items:\n            $ref: '#/components/schemas/Envelope'\n          minItems: 0\n          type: array\n          uniqueItems: true\n      type: object\n    Envelope:\n      description: \u003e-\n        Bandwidth Profiles are organized into Envelopes. Multiple Bandwidth\n        Profiles in an envelope can share bandwidth resources. Each Envelope has\n        a name and a Coupling Flag for Index Zero (CF0) that indicates whether\n        unused green tokens are discarded or converted to yellow tokens. All\n        Bandwidth Profile Flows in the same envelope satisfy the same criterion\n        listed in R230 of MEF 26.2.\n      properties:\n        couplingFlagForIndexZero:\n          description: \u003e-\n            MEF 10.4 sec. 9.12 and MEF 26.2 sec. 14.19 - This attribute denotes\n            the coupling flag for index zero. FALSE for 0 (overflow Green tokens\n            are discarded) and TRUE for 1 (overflow Green tokens can be used as\n            Yellow tokens).\n          type: boolean\n        envelopeID:\n          description: \u003e-\n            MEF 10.4 sec. 9.12 and MEF 26.2 sec. 14.19 - The attribute is a\n            string that identifies the Envelope\n          maxLength: 45\n          minLength: 1\n          pattern: \"[ -\\x7F]+\"\n          type: string\n      type: object\n    Epl:\n      allOf:\n        - $ref: '#/components/schemas/MEFProductConfiguration'\n        - $ref: '#/components/schemas/CarrierEthernetEvcCommon'\n        - properties:\n            evcEndPointA:\n              description: \u003e-\n                MEF 10.4 sec. 10 - EVC End Point at UNI A. UNI EVC End Point A\n                and UNI EVC End Point Z must be included in the EPL Product.\n              $ref: '#/components/schemas/EplEvcEndPoint'\n            evcEndPointZ:\n              description: \u003e-\n                MEF 10.4 sec. 10 - EVC End Point at UNI Z. UNI EVC End Point A\n                and UNI EVC End Point Z must be included in the EPL Product.\n              $ref: '#/components/schemas/EplEvcEndPoint'\n          required:\n            - evcEndPointA\n            - evcEndPointZ\n          type: object\n      x-discriminator-value: 'urn:mef:lso:spec:cantata-sonata:epl:v0.3.0:all'\n    EplEvcEndPoint:\n      allOf:\n        - $ref: '#/components/schemas/CarrierEthernetEvcEpEline'\n        - $ref: '#/components/schemas/CarrierEthernetEvcEpCommon'\n      description: \u003e-\n        An EVC End Point is a logical entity at a given UNI that is associated\n        with a distinct set of frames passing over that UNI. EVC End Point\n        Service Attributes are the attributes of an EVC that can be different at\n        each UNI in the EVC. These are the EVC End Point Service Attributes\n        applicable to Ethernet Private Line (EPL) Services defined in MEF 6.3\n        based on the Service Attributes in MEF 10.4.\n    Eplan:\n      allOf:\n        - $ref: '#/components/schemas/MEFProductConfiguration'\n        - $ref: '#/components/schemas/CarrierEthernetEvcCommon'\n        - $ref: '#/components/schemas/CarrierEthernetEvcNotEpl'\n      x-discriminator-value: 'urn:mef:lso:spec:cantata-sonata:eplan:v0.3.0:all'\n    EplanEndpoint:\n      allOf:\n        - $ref: '#/components/schemas/MEFProductConfiguration'\n        - $ref: '#/components/schemas/CarrierEthernetEvcEpCommon'\n        - $ref: '#/components/schemas/CarrierEthernetEvcEpNotEpl'\n      x-discriminator-value: 'urn:mef:lso:spec:cantata-sonata:eplan-endpoint:v0.3.0:all'\n    Eptree:\n      allOf:\n        - $ref: '#/components/schemas/MEFProductConfiguration'\n        - $ref: '#/components/schemas/CarrierEthernetEvcCommon'\n        - $ref: '#/components/schemas/CarrierEthernetEvcNotEpl'\n      x-discriminator-value: 'urn:mef:lso:spec:cantata-sonata:eptree:v0.3.0:all'\n    EptreeEndpoint:\n      allOf:\n        - $ref: '#/components/schemas/MEFProductConfiguration'\n        - $ref: '#/components/schemas/CarrierEthernetEvcEpCommon'\n        - $ref: '#/components/schemas/CarrierEthernetEvcEpNotEpl'\n      x-discriminator-value: 'urn:mef:lso:spec:cantata-sonata:eptree-endpoint:v0.3.0:all'\n    Error:\n      description: \u003e\n        Standard Class used to describe API response error Not intended to be\n        used directly. The `code` in the HTTP header is used as a discriminator\n        for the type of error returned in runtime.\n      properties:\n        reason:\n          description: \u003e-\n            Text that explains the reason for the error. This can be shown to a\n            client user.\n          maxLength: 255\n          type: string\n        message:\n          description: \u003e-\n            Text that provides mode details and corrective actions related to\n            the error. This can be shown to a client user.\n          type: string\n        referenceError:\n          description: URL pointing to documentation describing the error\n          format: uri\n          type: string\n      required:\n        - reason\n      type: object\n    Error400:\n      allOf:\n        - $ref: '#/components/schemas/Error'\n        - properties:\n            code:\n              $ref: '#/components/schemas/Error400Code'\n          required:\n            - code\n          type: object\n      description: 'Bad Request. (https://tools.ietf.org/html/rfc7231#section-6.5.1)'\n    Error400Code:\n      description: \u003e-\n        One of the following error codes:\n\n        - missingQueryParameter: The URI is missing a required query-string\n        parameter\n\n        - missingQueryValue: The URI is missing a required query-string\n        parameter value\n\n        - invalidQuery: The query section of the URI is invalid.\n\n        - invalidBody: The request has an invalid body\n      enum:\n        - missingQueryParameter\n        - missingQueryValue\n        - invalidQuery\n        - invalidBody\n      type: string\n    Error401:\n      allOf:\n        - $ref: '#/components/schemas/Error'\n        - properties:\n            code:\n              $ref: '#/components/schemas/Error401Code'\n          required:\n            - code\n          type: object\n      description: 'Unauthorized.  (https://tools.ietf.org/html/rfc7235#section-3.1)'\n    Error401Code:\n      description: |-\n        One of the following error codes:\n        - missingCredentials: No credentials provided.\n        - invalidCredentials: Provided credentials are invalid or expired\n      enum:\n        - missingCredentials\n        - invalidCredentials\n      type: string\n    Error403:\n      allOf:\n        - $ref: '#/components/schemas/Error'\n        - properties:\n            code:\n              $ref: '#/components/schemas/Error403Code'\n          required:\n            - code\n          type: object\n      description: \u003e-\n        Forbidden. This code indicates that the server understood the request\n        but refuses to authorize it.\n        (https://tools.ietf.org/html/rfc7231#section-6.5.3)\n    Error403Code:\n      description: |-\n        This code indicates that the server understood\n        the request but refuses to authorize it because\n        of one of the following error codes:\n        - accessDenied: Access denied\n        - forbiddenRequester: Forbidden requester\n        - tooManyUsers: Too many users\n      enum:\n        - accessDenied\n        - forbiddenRequester\n        - tooManyUsers\n      type: string\n    Error404:\n      allOf:\n        - $ref: '#/components/schemas/Error'\n        - properties:\n            code:\n              description: \u003e-\n                The following error code:\n\n                - notFound: A current representation for the target resource not\n                found\n              enum:\n                - notFound\n              type: string\n          required:\n            - code\n          type: object\n      description: \u003e-\n        Resource for the requested path not found.\n        (https://tools.ietf.org/html/rfc7231#section-6.5.4)\n    Error422:\n      allOf:\n        - $ref: '#/components/schemas/Error'\n        - properties:\n            code:\n              $ref: '#/components/schemas/Error422Code'\n            propertyPath:\n              description: \u003e\n                A pointer to a particular property of the payload that caused\n                the validation issue. It is highly recommended that this\n                property should be used.\n\n                Defined using JavaScript Object Notation (JSON) Pointer\n                (https://tools.ietf.org/html/rfc6901).\n              type: string\n          required:\n            - code\n          type: object\n      description: \u003e-\n        Unprocessable entity due to a business validation problem.\n        (https://tools.ietf.org/html/rfc4918#section-11.2)\n    Error422Code:\n      description: |\n        One of the following error codes:\n          - missingProperty: The property the Seller has expected is not present in the payload\n          - invalidValue: The property has an incorrect value\n          - invalidFormat: The property value does not comply with the expected value format\n          - referenceNotFound: The object referenced by the property cannot be identified in the Seller system\n          - unexpectedProperty: Additional property, not expected by the Seller has been provided\n          - tooManyRecords: the number of records to be provided in the response exceeds the Seller's threshold.\n          - otherIssue: Other problem was identified (detailed information provided in a reason)\n      enum:\n        - missingProperty\n        - invalidValue\n        - invalidFormat\n        - referenceNotFound\n        - unexpectedProperty\n        - tooManyRecords\n        - otherIssue\n      type: string\n    Error500:\n      allOf:\n        - $ref: '#/components/schemas/Error'\n        - properties:\n            code:\n              description: \u003e-\n                The following error code:\n\n                - internalError: Internal server error - the server encountered\n                an unexpected condition that prevented it from fulfilling the\n                request.\n              enum:\n                - internalError\n              type: string\n          required:\n            - code\n          type: object\n      description: \u003e-\n        Internal Server Error.\n        (https://tools.ietf.org/html/rfc7231#section-6.6.1)\n    EvcEgressMap:\n      description: \u003e-\n        This map is a table with one entries for each CosName, that includes the\n        CoSName, a PCP value for green frames, a PCP value for yellow frames, a\n        DEI value for green frames and a DEI value for yellow frames. Any of the\n        values can be DISCARD. This table is used at the UNI for EVCs.\n      properties:\n        evcEgressMapEntries:\n          description: \u003e-\n            This is a table of EVC Egress Map entries. An empty list indicates a\n            value of None. Per R140 in MEF 10.4, the value of the EVC EP Egress\n            Map Service Attribute MUST NOT be None unless one of the conditions\n            noted in the requirement is met. (See Validation Notes)\n          items:\n            $ref: '#/components/schemas/EvcEgressMapEntry'\n          minItems: 0\n          type: array\n          uniqueItems: true\n      type: object\n    EvcEgressMapEntry:\n      description: \u003e-\n        A row in the EVC Egress Map. Contains a CoSName, PCPGreen, PCPYellow,\n        DEIGreen, DEIYellow\n      properties:\n        pcpYellow:\n          description: A PCP value (0-7) or DISCARD to use for Yellow frames\n          $ref: '#/components/schemas/PcpValueAndDiscard'\n        deiYellow:\n          description: A DEI value to use for Yellow frames\n          $ref: '#/components/schemas/DeiValueAndDiscard'\n        cosName:\n          type: string\n        deiGreen:\n          description: A DEI value to use for Green frames\n          $ref: '#/components/schemas/DeiValueAndDiscard'\n        pcpGreen:\n          description: A PCP value (0-7) or DISCARD to use for Green Frames\n          $ref: '#/components/schemas/PcpValueAndDiscard'\n      type: object\n    EvcEndPointMap:\n      description: \u003e-\n        MEF 10.4 sec. 10.4 - This is specifications for which Service Frames are\n        mapped to the EVC End Point. The allowed values in MEF 10.4 are ALL,\n        LIST, and UT/PT. Since Private services must be ALL, the map isn't\n        needed for those services, and therefore the type does not include ALL.\n        If the type is LIST there must be a list of VLAN IDs specified.\n      properties:\n        vlanId:\n          description: A list of VLAN IDs if the value of vlanType is \"LIST\"\n          items:\n            maximum: 4094\n            minimum: 1\n            type: integer\n          maxItems: 4094\n          minItems: 1\n          type: array\n          uniqueItems: true\n        vlanType:\n          description: \u003e-\n            An indication of the type of EVC End Point Map. If the value is\n            UT/PT then no additional information is required. If the value is\n            LIST then a list of C-VLAN ID values must be specified.\n          $ref: '#/components/schemas/VlanType'\n      type: object\n    Evpl:\n      allOf:\n        - $ref: '#/components/schemas/MEFProductConfiguration'\n        - $ref: '#/components/schemas/CarrierEthernetEvcCommon'\n        - $ref: '#/components/schemas/CarrierEthernetVpEvcCommon'\n        - $ref: '#/components/schemas/CarrierEthernetEvcNotEpl'\n        - properties:\n            evcEndPointA:\n              description: \u003e-\n                MEF 10.4 sec. 10 - EVC Endpoint at UNI A. UNI EVC End Point A\n                and UNI EVC End Point Z must be included in the EVPL Product.\n              $ref: '#/components/schemas/EvplEvcEndPoint'\n            evcEndPointZ:\n              description: \u003e-\n                MEF 10.4 sec. 10 - EVC Endpoint at UNI Z. UNI EVC End Point A\n                and UNI EVC End Point Z must be included in the EVPL Product.\n              $ref: '#/components/schemas/EvplEvcEndPoint'\n          required:\n            - evcEndPointA\n            - evcEndPointZ\n          type: object\n      x-discriminator-value: 'urn:mef:lso:spec:cantata-sonata:evpl:v0.3.0:all'\n    EvplEvcEndPoint:\n      allOf:\n        - $ref: '#/components/schemas/CarrierEthernetEvcEpEline'\n        - $ref: '#/components/schemas/CarrierEthernetEvcEpCommon'\n        - $ref: '#/components/schemas/CarrierEthernetEvcEpVirtualPrivate'\n        - $ref: '#/components/schemas/CarrierEthernetEvcEpNotEpl'\n      description: \u003e-\n        An EVC End Point is a logical entity at a given UNI that is associated\n        with a distinct set of frames passing over that UNI. EVC End Point\n        Service Attributes are the attributes of an EVC that can be different at\n        each UNI in the EVC. These are the EVC End Point Service Attributes\n        applicable to Ethernet Virtual Private Line (EVPL) Services defined in\n        MEF 6.3 based on the Service Attributes in MEF 10.4.\n    Evplan:\n      allOf:\n        - $ref: '#/components/schemas/MEFProductConfiguration'\n        - $ref: '#/components/schemas/CarrierEthernetEvcCommon'\n        - $ref: '#/components/schemas/CarrierEthernetVpEvcCommon'\n        - $ref: '#/components/schemas/CarrierEthernetEvcNotEpl'\n      x-discriminator-value: 'urn:mef:lso:spec:cantata-sonata:evplan:v0.3.0:all'\n    EvplanEndpoint:\n      allOf:\n        - $ref: '#/components/schemas/MEFProductConfiguration'\n        - $ref: '#/components/schemas/CarrierEthernetEvcEpCommon'\n        - $ref: '#/components/schemas/CarrierEthernetEvcEpVirtualPrivate'\n        - $ref: '#/components/schemas/CarrierEthernetEvcEpNotEpl'\n      x-discriminator-value: 'urn:mef:lso:spec:cantata-sonata:evplan-endpoint:v0.3.0:all'\n    Evptree:\n      allOf:\n        - $ref: '#/components/schemas/MEFProductConfiguration'\n        - $ref: '#/components/schemas/CarrierEthernetEvcCommon'\n        - $ref: '#/components/schemas/CarrierEthernetVpEvcCommon'\n        - $ref: '#/components/schemas/CarrierEthernetEvcNotEpl'\n      x-discriminator-value: 'urn:mef:lso:spec:cantata-sonata:evptree:v0.3.0:all'\n    EvptreeEndpoint:\n      allOf:\n        - $ref: '#/components/schemas/MEFProductConfiguration'\n        - $ref: '#/components/schemas/CarrierEthernetEvcEpCommon'\n        - $ref: '#/components/schemas/CarrierEthernetEvcEpVirtualPrivate'\n        - $ref: '#/components/schemas/CarrierEthernetEvcEpNotEpl'\n      x-discriminator-value: 'urn:mef:lso:spec:cantata-sonata:evptree-endpoint:v0.3.0:all'\n    FieldedAddress:\n      description: \u003e-\n        A type of Address that has a discrete field and value for each type of\n        boundary or identifier down to the lowest level of detail. For example\n        \"street number\" is one field, \"street name\" is another field, etc.\n        Reference: MEF 79 (Sn 8.9.2)\n      properties:\n        country:\n          description: Country that the address is in\n          type: string\n        streetType:\n          description: \u003e-\n            The type of street (e.g., alley, avenue, boulevard, brae, crescent,\n            drive, highway, lane, terrace, parade, place, tarn, way, wharf)\n          type: string\n        postcodeExtension:\n          description: \u003e-\n            An extension of a postal code. E.g. the part following the dash in a\n            US urban property address\n          type: string\n        city:\n          description: The city that the address is in\n          type: string\n        streetNr:\n          description: \u003e-\n            Number identifying a specific property on a public street. It may be\n            combined with streetNrLast for ranged addresses. MEF 79 defines it\n            as required however as in certain countries it is not used we make\n            it optional in API.\n          type: string\n        locality:\n          description: The locality that the address is in\n          type: string\n        postcode:\n          description: \u003e-\n            Descriptor for a postal delivery area, used to speed and simplify\n            the delivery of mail (also known as zip code)\n          type: string\n        streetNrLast:\n          description: Last number in a range of street numbers allocated to a property\n          type: string\n        streetNrSuffix:\n          description: The first street number suffix\n          type: string\n        streetName:\n          description: Name of the street or other street type\n          type: string\n        stateOrProvince:\n          description: The State or Province that the address is in\n          type: string\n        streetNrLastSuffix:\n          description: Last street number suffix for a ranged address\n          type: string\n        geographicSubAddress:\n          $ref: '#/components/schemas/GeographicSubAddress'\n        streetSuffix:\n          description: A modifier denoting a relative direction\n          type: string\n      required:\n        - city\n        - country\n        - streetName\n      type: object\n    ForwardingInformation:\n      description: \u003e-\n        Forwarding information, consisting of either a nexthop IP address in the\n        Subscriber Network (if the access medium is multipoint capable, e.g.,\n        Ethernet), or a specific UNI Access Link (if the access medium is\n        strictly point-to-point, e.g., HDLC,  PPP over DSL).\n      properties:\n        nextHopIpAddress:\n          description: Next hop IP address.\n          type: string\n        uniAccessLink:\n          description: UNI Access Link unique identifier.\n          maxLength: 53\n          type: string\n      type: object\n    FrameColor:\n      enum:\n        - GREEN\n        - YELLOW\n      type: string\n    FrameDispEnum:\n      enum:\n        - DISCARD\n        - DELIVER_UNCONDITIONALLY\n        - DELIVER_CONDITIONALLY\n      type: string\n    FrameDisposition:\n      description: \u003e-\n        A 3-tuple that indicates how Unicast, Multicast, and Broadcast Frames\n        are delivered by the service. For each, the value can be UNCONDITIONAL,\n        the frames are delivered without condition, CONDITIONAL, the frames are\n        delivered based on conditions agreed to between buyer and seller (e.g.,\n        based on learned addresses), and DISCARD.\n      properties:\n        broadcast:\n          $ref: '#/components/schemas/FrameDispEnum'\n        unicast:\n          $ref: '#/components/schemas/FrameDispEnum'\n        multicast:\n          $ref: '#/components/schemas/FrameDispEnum'\n      type: object\n    GeographicSubAddress:\n      description: 'Additional fields used to specify an address, as detailed as possible.'\n      properties:\n        buildingName:\n          description: \u003e\n            Allows for identification of places that require building name  as\n            part of addressing information\n          type: string\n        subUnit:\n          description: \u003e-\n            Representation of a MEFSubUnit It is used for describing subunit\n            within a subAddress e.g. BERTH, FLAT, PIER, SUITE, SHOP, TOWER,\n            UNIT, WHARF.\n          items:\n            $ref: '#/components/schemas/MEFSubUnit'\n          type: array\n        levelType:\n          description: Describes level types within a building\n          type: string\n        levelNumber:\n          description: 'Used where a level type may be repeated e.g. BASEMENT 1, BASEMENT 2'\n          type: string\n        privateStreetNumber:\n          description: Private streets numbers internal to a private street\n          type: string\n        privateStreetName:\n          description: \u003e-\n            \"Private streets internal to a property (e.g. a university) may have\n            internal names that are not recorded by the land title office\n          type: string\n      type: object\n    HeaderFieldTypes:\n      description: \u003e-\n        HeaderFieldTypes is an enumeration for fields defined in MEF 61.1[1]\n        Section 10.13.2 Cloud Ingress Class of Service Map.\n      enum:\n        - SOURCE_IP_ADDRESS\n        - DESTINATION_IP_ADDRESS\n        - L4_PROTOCOL\n        - SOURCE_L4_PORT\n        - DESTINATION_L4_PORT\n        - ETHERNET_PCP\n        - IP_DS\n      type: string\n    IaIngressClassOfServiceMap:\n      properties:\n        defaultCosName:\n          description: \u003e-\n            Default Class of Service Name. Reference MEF 61.1 Section 10.13.2\n            Cloud Ingress Class of Service Map and Section 11.9 IPVC EP Ingress\n            Class of Service Map Service Attribute. Reference MEF 69.1 Section\n            9.1 [R11], [R18] For an Internet Access Service, Cloud Ingress Class\n            of Service Map (F, M, D), default CoS name, D, MUST NOT be Discard.\n          type: string\n        headerFieldTypes:\n          description: \u003e-\n            Is a list of one or more fields in the packet header that are used\n            to determine the CoS Name. Reference MEF 61.1 Section 10.13.2 Cloud\n            Ingress Class of Service Map.\n          items:\n            $ref: '#/components/schemas/HeaderFieldTypes'\n          minItems: 1\n          type: array\n      type: object\n    IaIpSls:\n      description: \u003e-\n        The IPVC Service Level Specification (SLS) describes the performance\n        objectives for the performance of conformant IP Data Packets that flow\n        over the IPVC. The IPVC Service Level Specification Attribute is either\n        None, or a four-tuple of the form (s,T,E,L) where s is the start time, T\n        is a period of time, E is a set of SLS entries and L is a set of the CoS\n        Name and number of other parameters specific to the Performance Metric.\n        Reference MEF 61.1 Section 10.9 IPVC Service Level Specification Service\n        Attribute.\n      properties:\n        oneWayPacketDelayPercentile:\n          description: One-way Packet Delay Percentile metric.\n          items:\n            $ref: '#/components/schemas/OneWayPacketDelayPercentile'\n          type: array\n        oneWayInterPacketDelayVariation:\n          description: One-way Inter-Packet Delay Variation metric.\n          items:\n            $ref: '#/components/schemas/OneWayInterPacketDelayVariation'\n          type: array\n        oneWayPacketDelayRange:\n          description: One-way Packet Delay Range metric.\n          items:\n            $ref: '#/components/schemas/OneWayPacketDelayRange'\n          type: array\n        serviceUptime:\n          description: Service uptime metric.\n          items:\n            $ref: '#/components/schemas/ServiceUptime'\n          type: array\n        oneWayPacketLossRatio:\n          description: One-way Packet Loss Ratio metric.\n          items:\n            $ref: '#/components/schemas/OneWayPacketLossRatio'\n          type: array\n        oneWayMeanPacketDelay:\n          description: One-way Mean Packet Delay metric.\n          items:\n            $ref: '#/components/schemas/OneWayMeanPacketDelay'\n          type: array\n        startTime:\n          description: Start time of IP SLS.\n          format: date-time\n          type: string\n        periodOfTime:\n          description: Period of time over which IP SLS is measured.\n          $ref: '#/components/schemas/TimeDuration'\n      type: object\n    InformationRate:\n      description: A value and a unit of measure that specifies an Information Rate.\n      properties:\n        irValue:\n          description: \u003e-\n            The value in the information rate. For example if the information\n            rate is 70 kbps this element is 70.\n          minimum: 0\n          type: number\n        irUnits:\n          description: \u003e-\n            The unit of measure for the Information Rate. For example if the\n            Information Rate is 70KBPS this element is KBPS. Note that the\n            values are decimal values. 1 KBPS is 1000 bits per second and 1MBPS\n            is 1,000,000 bits per second.\n          $ref: '#/components/schemas/IrUnits'\n      type: object\n    Instantiation:\n      description: \u003e-\n        MEF 10.4 sec. 9.2 - When the value is Physical, the UNI is implemented\n        using one or more instances of a standard Physical Layer. When the value\n        is Virtual, the physical layer is not specified.\n      enum:\n        - PHYSICAL\n        - VIRTUAL\n      type: string\n    IpBwpEnvelope:\n      description: \u003e-\n        A BWP Envelope is a list of Bandwidth Profile Flows, plus additional\n        parameters for the BWP as a whole. A BWP Envelope is a set of one or\n        more BWP Flows that are associated such that the amount of traffic for\n        one flow can affect the amount that is permitted for another flow.\n        Reference MEF 61.1 Section 17.3 Bandwidth Profile Envelopes.\n      properties:\n        tE:\n          description: \u003e-\n            The Envelope IR Time in milliseconds. This is the time period over\n            which average Information Rates are calculated and thus it limits\n            the size of a burst. Reference MEF 61.1 Section 17.3 Bandwidth\n            Profile Envelopes.\n          type: integer\n        maxIrE:\n          description: \u003e-\n            The Envelope Maximum Information Rate in bits per second. This is\n            the limit on the total aggregate information rate of traffic across\n            all BWP Flows in the Envelope. Reference MEF 61.1 Section 17.3\n            Bandwidth Profile Envelopes.\n          $ref: '#/components/schemas/InformationRate'\n      type: object\n    IpBwpFlow:\n      description: \u003e-\n        A Bandwidth Profile Flow is a stream of IP Packets meeting certain\n        criteria. The criteria than can be used depends on which BWP Envelope\n        the BWP Flow is a part of. Reference MEF 61.1 Section 17.2 Bandwidth\n        Profile Flows.\n      properties:\n        maxIr:\n          description: \u003e-\n            Identifier for Maximum Information Rate in bits per second. Limit on\n            the average information rate of IP Packets for this BWP Flow.\n            Reference MEF 61.1 Table 29 - Bandwidth Profile Parameters for a\n            Bandwidth Profile Flow.\n          $ref: '#/components/schemas/InformationRate'\n        flowIdentifier:\n          description: \u003e-\n            Identifier for the BWP Flow within the BWP Envelope. Unique integer\n            between 1 and n where n is the number of BWP Flows in the BWP\n            Envelope. Reference MEF 61.1 Table 29 - Bandwidth Profile Parameters\n            for a Bandwidth Profile Flow.\n          type: integer\n        weight:\n          description: \u003e-\n            Identifier for Weight as an integer greater than or equal to 0.\n            Relative weight for this BWP Flow compared to other BWP Flows in the\n            BWP Envelope. Reference MEF 61.1 Table 29 - Bandwidth Profile\n            Parameters for a Bandwidth Profile Flow.\n        burstBehavior:\n          description: \u003e-\n            Identifier for Burst Behavior either Optimize-Delay or\n            Optimize-Throughput. Whether the SP is requested to optimize the\n            delay characteristic of this flow, or the throughput. Reference MEF\n            61.1 Table 29 - Bandwidth Profile Parameters for a Bandwidth Profile\n            Flow.\n          $ref: '#/components/schemas/BurstBehavior'\n        cir:\n          description: \u003e-\n            Identifier for Committed Information Rate in bits per second.\n            Average information rate of IP Packets that is committed to this BWP\n            Flow. Reference MEF 61.1 Table 29 - Bandwidth Profile Parameters for\n            a Bandwidth Profile Flow.\n          $ref: '#/components/schemas/InformationRate'\n      type: object\n    IpUniEgressBwpAccessLink:\n      allOf:\n        - $ref: '#/components/schemas/IpBwpEnvelope'\n        - description: \u003e-\n            All Ingress IP Data Packets at the UNI that are received over one of\n            a give set of UNI Access Links. Reference MEF 61.1 Section 12.5 UNI\n            Egress BWP Envelope.\n          properties:\n            uniAccessLinkIdentifier:\n              description: UNI Access Link Identifier.\n              items:\n                type: string\n              minItems: 1\n              type: array\n          type: object\n    IpUniEgressBwpEnvelope:\n      allOf:\n        - $ref: '#/components/schemas/IpBwpEnvelope'\n        - description: \u003e-\n            A single Bandwidth Profile Envelope consisting of parameters and\n            Bandwidth Profile  Flow specifications. If specified, the BWP\n            Envelope is used for an egress Bandwidth Profile. The BWP Flows can\n            be defined per UNI, per IPVC EP, per UNI Access Link, per CosName,\n            etc. Reference MEF 61.1 Section 12.5 UNI Egress Bandwidth Profile\n            Envelope Service Attribute.\n          properties:\n            ipUniEgressBwpUni:\n              description: \u003e-\n                All Egress IP Data Packets at the UNI. Reference MEF 61.1\n                Section 12.5 UNI Egress BWP Envelope.\n              $ref: '#/components/schemas/IpUniEgressBwpUni'\n            ipUniEgressBwpAccessLink:\n              description: \u003e-\n                All Egress IP Data Packets at the UNI that are mapped to any of\n                a given set of (IPVC, EP, CoS Name) pairs. Reference MEF 61.1\n                Section 12.5 UNI Egress BWP Envelope.\n              items:\n                $ref: '#/components/schemas/IpUniEgressBwpAccessLink'\n              type: array\n            ipUniEgressBwpIpvcEpCos:\n              description: \u003e-\n                All Egress IP Data Packets at the UNI that are mapped to any of\n                a given set of (IPVC, EP, CoS Name) pairs. Reference MEF 61.1\n                Section 12.5 UNI Egress BWP Envelope.\n              items:\n                $ref: '#/components/schemas/IpUniEgressBwpIpvcEpCos'\n              type: array\n            ipUniEgressBwpIpvcEpCosAccessLink:\n              description: \u003e-\n                All Egress IP Data Packets at the UNI that are received over one\n                of a given set of UNI Access Links, and that are mapped to the\n                any of a given set of (IPVC EP, Cos Name) pairs. Reference MEF\n                61.1 Section 12.5 UNI Egress BWP Envelope.\n              items:\n                $ref: '#/components/schemas/IpUniEgressBwpIpvcEpCosAccessLink'\n              type: array\n            ipUniEgressBwpIpvcEp:\n              description: \u003e-\n                All Egress IP Data Packets at the UNI that are mapped to any of\n                a given set of IPVC EPs. Reference MEF 61.1 Section 12.5 UNI\n                Egress BWP Envelope.\n              items:\n                $ref: '#/components/schemas/IpUniEgressBwpIpvcEp'\n              type: array\n            ipUniEgressBwpIpvcEpAccessLink:\n              description: \u003e-\n                All Egress IP Data Packets at the UNI that are received over one\n                of a give set of UNI Access Links. Reference MEF 61.1 Section\n                12.5 UNI Egress BWP Envelope.\n              items:\n                $ref: '#/components/schemas/IpUniEgressIpvcBwpIpvcEpAccessLink'\n              type: array\n          type: object\n    IpUniEgressBwpIpvcEp:\n      allOf:\n        - $ref: '#/components/schemas/IpBwpFlow'\n        - description: \u003e-\n            All Ingress IP Data Packets at the UNI that are mapped to any of a\n            given set of IPVC EPs. Reference MEF 61.1 Section 12.5 UNI Egress\n            BWP Envelope.\n          properties:\n            ipvcEndPointIdentifier:\n              description: \u003e-\n                IPVC End Point Identifier for an IPVC End Point located at the\n                UNI.\n              items:\n                type: string\n              minItems: 1\n              type: array\n          type: object\n    IpUniEgressBwpIpvcEpCos:\n      allOf:\n        - $ref: '#/components/schemas/IpBwpEnvelope'\n        - description: \u003e-\n            All Ingress IP Data Packets at the UNI that are mapped to any of a\n            given set of (IPVC, EP, CoS Name) pairs. Reference MEF 61.1 Section\n            12.5 UNI Egress BWP Envelope.\n          properties:\n            ipvcEpIdCosName:\n              description: IPVC End Point and CoS Identifier. Reference MEF 61.1 Table 28.\n              items:\n                type: string\n              minItems: 1\n              type: array\n          type: object\n    IpUniEgressBwpIpvcEpCosAccessLink:\n      description: \u003e-\n        All Ingress IP Data Packets at the UNI that are received over one of a\n        given set of UNI Access Links,and that are mapped to the any of a given\n        set of (IPVC EP, Cos Name) pairs. Reference MEF 61.1 Section 12.4 UNI\n        Ingress BWP Envelope.\n      properties:\n        ipvcEpIdCosName:\n          description: IPVC End Point and CoS Identifier. Reference MEF 61.1 Table 28.\n          items:\n            $ref: '#/components/schemas/EndPointIdentifierAndCosName'\n          minItems: 1\n          type: array\n        uniAccessLinkIdentifier:\n          description: UNI Access Link Identifier.\n          items:\n            type: string\n          minItems: 1\n          type: array\n      type: object\n    IpUniEgressBwpUni:\n      allOf:\n        - $ref: '#/components/schemas/IpBwpFlow'\n      description: \u003e-\n        All Ingress IP Data Packets at the UNI. Reference MEF 61.1 Section 12.5\n        UNI Egress BWP Envelope.\n    IpUniEgressIpvcBwpIpvcEpAccessLink:\n      allOf:\n        - $ref: '#/components/schemas/IpBwpEnvelope'\n        - description: \u003e-\n            All Ingress IP Data Packets at the UNI that are received over one of\n            a give set of UNI Access Links. Reference MEF 61.1 Section 12.4 UNI\n            Ingress BWP Envelope.\n          properties:\n            ipvcEndPointIdentifier:\n              description: IPVC End Point Identifier\n              items:\n                type: string\n              minItems: 1\n              type: array\n            uniAccessLinkIdentifier:\n              description: UNI Access Link Identifier.\n              items:\n                type: string\n              minItems: 1\n              type: array\n          type: object\n    IpUniIngressBwpAccessLink:\n      allOf:\n        - $ref: '#/components/schemas/IpBwpEnvelope'\n        - description: \u003e-\n            All Ingress IP Data Packets at the UNI that are received over one of\n            a give set of UNI Access Links. Reference MEF 61.1 Section 12.4 UNI\n            Ingress BWP Envelope.\n          properties:\n            uniAccessLinkIdentifier:\n              description: UNI Access Link Identifier.\n              items:\n                type: string\n              minItems: 1\n              type: array\n          type: object\n    IpUniIngressBwpEnvelope:\n      allOf:\n        - $ref: '#/components/schemas/IpBwpEnvelope'\n        - description: \u003e-\n            A single Bandwidth Profile Envelope consisting of parameters and\n            Bandwidth Profile Flow specifications. If specified, the BWP\n            Envelope is used for an ingress Bandwidth Profile. The BWP Flows can\n            be defined per UNI, per IPVC EP, per UNI Access Link, per CosName,\n            etc. Reference MEF 61.1 Section 12.4 UNI Ingress Bandwidth Profile\n            Envelope Service Attribute.\n          properties:\n            ipUniIngressBwpUni:\n              description: \u003e-\n                All Ingress IP Data Packets at the UNI. Reference MEF 61.1\n                Section 12.4 UNI Ingress BWP Envelope.\n              $ref: '#/components/schemas/IpUniIngressBwpUni'\n            ipUniIngressBwpIpvcEpCosAccessLink:\n              description: \u003e-\n                All Ingress IP Data Packets at the UNI that are received over\n                one of a given set of UNI Access Links, and that are mapped to\n                the any of a given set of (IPVC EP, Cos Name) pairs. Reference\n                MEF 61.1 Section 12.4 UNI Ingress BWP Envelope.\n              items:\n                $ref: '#/components/schemas/IpUniIngressBwpIpvcEpCosAccessLink'\n              type: array\n            ipUniIngressBwpIpvcEp:\n              description: \u003e-\n                All Ingress IP Data Packets at the UNI that are mapped to any of\n                a given set of IPVC EPs. Reference MEF 61.1 Section 12.4 UNI\n                Ingress BWP Envelope.\n              items:\n                $ref: '#/components/schemas/IpUniIngressBwpIpvcEp'\n              type: array\n            ipUniIngressBwpIpvcEpCos:\n              description: \u003e-\n                All Ingress IP Data Packets at the UNI that are mapped to any of\n                a given set of (IPVC, EP, CoS Name) pairs. Reference MEF 61.1\n                Section 12.4 UNI Ingress BWP Envelope.\n              items:\n                $ref: '#/components/schemas/IpUniIngressBwpIpvcEpCos'\n              type: array\n            ipUniIngressBwpAccessLink:\n              description: \u003e-\n                All Ingress IP Data Packets at the UNI that are mapped to any of\n                a given set of (IPVC, EP, CoS Name) pairs. Reference MEF 61.1\n                Section 12.4 UNI Ingress BWP Envelope.\n              items:\n                $ref: '#/components/schemas/IpUniIngressBwpAccessLink'\n              type: array\n            ipUniIngressBwpIpvcEpAccessLink:\n              description: \u003e-\n                All Ingress IP Data Packets at the UNI that are received over\n                one of a give set of UNI Access Links. Reference MEF 61.1\n                Section 12.4 UNI Ingress BWP Envelope.\n              items:\n                $ref: '#/components/schemas/IpUniIngressIpvcBwpIpvcEpAccessLink'\n              type: array\n          type: object\n    IpUniIngressBwpIpvcEp:\n      allOf:\n        - $ref: '#/components/schemas/IpBwpFlow'\n        - description: \u003e-\n            All Ingress IP Data Packets at the UNI that are mapped to any of a\n            given set of IPVC EPs. Reference MEF 61.1 Section 12.4 UNI Ingress\n            BWP Envelope.\n          properties:\n            ipvcEndPointIdentifier:\n              description: \u003e-\n                IPVC End Point Identifier for an IPVC End Point located at the\n                UNI.\n              items:\n                type: string\n              minItems: 1\n              type: array\n          type: object\n    IpUniIngressBwpIpvcEpCos:\n      allOf:\n        - $ref: '#/components/schemas/IpBwpEnvelope'\n        - description: \u003e-\n            All Ingress IP Data Packets at the UNI that are mapped to any of a\n            given set of (IPVC, EP, CoS Name) pairs. Reference MEF 61.1 Section\n            12.4 UNI Ingress BWP Envelope.\n          properties:\n            ipvcEpIdCosName:\n              description: IPVC End Point and CoS Identifier. Reference MEF 61.1 Table 28.\n              items:\n                type: string\n              minItems: 1\n              type: array\n          type: object\n    IpUniIngressBwpIpvcEpCosAccessLink:\n      description: \u003e-\n        All Ingress IP Data Packets at the UNI that are received over one of a\n        given set of UNI Access Links,and that are mapped to the any of a given\n        set of (IPVC EP, Cos Name) pairs. Reference MEF 61.1 Section 12.4 UNI\n        Ingress BWP Envelope.\n      properties:\n        ipvcEpidCosName:\n          description: IPVC End Point and CoS Identifier. Reference MEF 61.1 Table 28.\n          items:\n            $ref: '#/components/schemas/EndPointIdentifierAndCosName'\n          minItems: 1\n          type: array\n        uniAccessLinkIdentifier:\n          description: UNI Access Link Identifier.\n          items:\n            type: string\n          minItems: 1\n          type: array\n      type: object\n    IpUniIngressBwpUni:\n      allOf:\n        - $ref: '#/components/schemas/IpBwpFlow'\n      description: \u003e-\n        All Ingress IP Data Packets at the UNI. Reference MEF 61.1 Section 12.4\n        UNI Ingress BWP Envelope.\n    IpUniIngressIpvcBwpIpvcEpAccessLink:\n      allOf:\n        - $ref: '#/components/schemas/IpBwpEnvelope'\n        - description: \u003e-\n            All Ingress IP Data Packets at the UNI that are received over one of\n            a give set of UNI Access Links. Reference MEF 61.1 Section 12.4 UNI\n            Ingress BWP Envelope.\n          properties:\n            ipvcEndPointIdentifier:\n              description: IPVC End Point Identifier\n              items:\n                type: string\n              minItems: 1\n              type: array\n            uniAccessLinkIdentifier:\n              description: UNI Access Link Identifier.\n              items:\n                type: string\n              minItems: 1\n              type: array\n          type: object\n    Ipv4Ipv6Prefixes:\n      description: \u003e-\n        IPv4 and IPv6 prefix lists.  Includes subnet addresses and prefix\n        length.\n      properties:\n        listOfIpv4ReservedPrefixes:\n          description: List of IPv4 prefixes.\n          items:\n            $ref: '#/components/schemas/Ipv4Prefix'\n          type: array\n        listOfIpv6ReservedPrefixes:\n          description: List of IPv6 prefixes.\n          items:\n            $ref: '#/components/schemas/Ipv6Prefix'\n          type: array\n      type: object\n    Ipv4Prefix:\n      description: \u003e-\n        Data type representing IPv4 address prefix and mask length between 0 and\n        31 bits.\n      properties:\n        prefixLength:\n          description: IPv4 address prefix. Length 0-31.\n          type: integer\n        ipv4Address:\n          description: IPv4 address.\n          type: string\n      type: object\n    Ipv4Subnet:\n      description: \u003e-\n        Ipv4Subnet is a data type representing an IPv4 subnet logical partition\n        of an IP network. Included is list of Service Provider IPv4 addresses.\n      properties:\n        serviceProviderIpv4Addresses:\n          description: List of Service Provider IPv4 addresses.\n          items:\n            type: string\n          minItems: 1\n          type: array\n        ipv4Prefix:\n          description: \u003e-\n            IPv4 address prefix (IPv4 address prefix and mask length between 0\n            and 31 in bits).\n          $ref: '#/components/schemas/Ipv4Prefix'\n      type: object\n    Ipv6AddressType:\n      description: Basic Internet Access IPv6 Connection Address mechanism.\n      enum:\n        - DHCP\n        - SLAAC\n      type: string\n    Ipv6Prefix:\n      description: \u003e-\n        Data type representing IPv6 address prefix and mask length between 0 and\n        127 in bits.\n      properties:\n        prefixLength:\n          description: IPv6 address prefix. Length 0-127.\n          type: integer\n        ipv6Address:\n          description: IPv6 address.\n          type: string\n      type: object\n    Ipv6Subnet:\n      description: \u003e-\n        IPv6Subnet is a data type representing an IPv6 subnet logical partition\n        of an IP network. Included is list of Service Provider IPv6 addresses.\n      properties:\n        serviceProviderIpv6Addresses:\n          description: List of IPv6 Service Provider addresses.\n          items:\n            type: string\n          minItems: 1\n          type: array\n        ipv6Prefix:\n          description: \u003e-\n            IPv6 Prefix (IPv6 address prefix and mask length between 0 and 127\n            in bits).\n          $ref: '#/components/schemas/Ipv6Prefix'\n      type: object\n    IpvcEpEgressBwp:\n      allOf:\n        - $ref: '#/components/schemas/IpBwpFlow'\n        - description: \u003e-\n            An Egress Bandwidth for and IPVC End Point with an associated Class\n            of Service identifier.\n          properties:\n            cosName:\n              description: Class of Service name.\n              items:\n                type: string\n              minItems: 1\n              type: array\n          type: object\n    IpvcEpEgressBwpAll:\n      allOf:\n        - $ref: '#/components/schemas/IpBwpFlow'\n    IpvcEpEgressBwpEnvelope:\n      allOf:\n        - $ref: '#/components/schemas/IpBwpEnvelope'\n        - description: \u003e-\n            A single Bandwidth Profile Envelope consisting of parameters and\n            Bandwidth Profile specifications. An Egress Bandwidth Profile\n            Envelope can be specified for one of a UNI, a UNI Access Link and\n            ENNI Link or an IPVC End Point. Reference MEF 61.1 Section 11.11\n            IPVC EP Egress Bandwidth Profile Envelope Service Attribute.\n          properties:\n            ipvcEpEgressBwp:\n              description: Pointer to IpvcEpBwp\n              items:\n                $ref: '#/components/schemas/IpvcEpEgressBwp'\n              minItems: 1\n              type: array\n            ipvcEpEgressBwpAll:\n              description: Pointer to IpvcEpBwpAll\n              $ref: '#/components/schemas/IpvcEpEgressBwpAll'\n          type: object\n    IpvcEpIngressBwp:\n      allOf:\n        - $ref: '#/components/schemas/IpBwpFlow'\n        - description: \u003e-\n            An Ingress Bandwidth for and IPVC End Point with an associated Class\n            of Service identifier.\n          properties:\n            cosName:\n              description: Class of Service name.\n              items:\n                type: string\n              minItems: 1\n              type: array\n          type: object\n    IpvcEpIngressBwpAll:\n      allOf:\n        - $ref: '#/components/schemas/IpBwpFlow'\n    IpvcEpIngressBwpEnvelope:\n      allOf:\n        - $ref: '#/components/schemas/IpBwpEnvelope'\n        - description: \u003e-\n            A single Bandwidth Profile Envelope consisting of parameters and\n            Bandwidth Profile specifications. An Ingress Bandwidth Profile\n            Envelope can be specified for one of a UNI, a UNI Access Link and\n            ENNI Link or an IPVC End Point. Reference MEF 61.1 Section 11.11\n            IPVC EP Ingress Bandwidth Profile Envelope Service Attribute.\n          properties:\n            ipvcEpIngressBwp:\n              description: Pointer to IpvcEpBwp\n              items:\n                $ref: '#/components/schemas/IpvcEpIngressBwp'\n              minItems: 1\n              type: array\n            ipvcEpIngressBwpAll:\n              description: Pointer to IpvcEpBwpAll\n              $ref: '#/components/schemas/IpvcEpIngressBwpAll'\n          type: object\n    IrUnits:\n      description: \u003e-\n        The unit of measure for the Information Rate. For example if the\n        Information Rate is 70KBPS this element is KBPS. Note that the values\n        are decimal values. 1 KBPS is 1000 bits per second and 1MBPS is\n        1,000,000 bits per second.\n      enum:\n        - BPS\n        - KBPS\n        - MBPS\n        - GBPS\n        - TBPS\n        - PBPS\n        - EBPS\n        - ZBPS\n        - YBPS\n      type: string\n    L2cpAddressSet:\n      enum:\n        - CTA\n        - CTB\n        - CTB2\n      type: string\n    L2cpPeering:\n      description: \u003e-\n        This specifies the L2CP Protocol Identifier and the Destination Address\n        in use by the protocol entity. Reference MEF 45.1 Section 8.2 L2CP\n        Peering Service Attribute\n      properties:\n        protocolID:\n          description: \u003e-\n            This specifies the Protocol Type for the L2CP. It consists of a\n            field specification (ETHERTYPE or LLC), the EtherType or LLC value,\n            and an optional subtype.\n          $ref: '#/components/schemas/L2cpProtocol'\n        destinationAddress:\n          description: \u003e-\n            The Destination MAC Address of the L2CP to be peered in the standard\n            format of 6 hex bytes separated by hyphen (-).\n          pattern: '[0-9a-fA-F][0-9a-fA-F]([-][0-9a-fA-F][0-9a-fA-F]){5}'\n          type: string\n        linkIdList:\n          description: \u003e-\n            Identifiers for the links on which the specified protocol will be\n            peered. If no links are specified the protocol is peered on all\n            links.\n          items:\n            maxLength: 45\n            minLength: 1\n            pattern: \"[ -\\x7F]+\"\n            type: string\n          minItems: 0\n          type: array\n          uniqueItems: false\n      type: object\n    L2cpProtocol:\n      description: \u003e-\n        Defines a L2CP protocol LLC address type or EtherType with possible\n        subtype. Reference MEF 45.1 Section 8.2 L2CP Peering Service Attribute.\n      properties:\n        l2cpProtocolType:\n          description: The protocol field to inspect to identify the L2CP.\n          $ref: '#/components/schemas/L2cpProtocolType'\n        subType:\n          description: The EtherType can be modified by an optional sub-type.\n          minimum: 0\n          type: integer\n        llcAddressOrEtherType:\n          description: The EtherType value or LLC value\n          minimum: 0\n          type: integer\n      type: object\n    L2cpProtocolType:\n      description: The protocol field to inspect to identify the L2CP.\n      enum:\n        - ETHERTYPE\n        - LLC\n      type: string\n    LinkAggType:\n      description: Type that defines the Link Aggregation types.\n      enum:\n        - NONE\n        - 2_LINK_ACTIVE_STANDBY\n        - ALL_ACTIVE\n        - OTHER\n      type: string\n    MEFBillingAccountRef:\n      description: A reference to the Buyer's Billing Account\n      properties:\n        id:\n          description: \u003e-\n            Identifies the buyer's billing account to which the recurring and\n            non-recurring charges for this order or order item will be billed.\n            Required if the Buyer has more than one Billing Account with the\n            Seller and for all new Product Orders.\n          type: string\n      required:\n        - id\n      type: object\n    MEFChargePeriod:\n      description: Used for a recurring charge to indicate period.\n      enum:\n        - hour\n        - day\n        - week\n        - month\n        - year\n      type: string\n    MEFEndOfTermAction:\n      description: The action the Seller will take once the term expires.\n      enum:\n        - roll\n        - autoDisconnect\n        - autoRenew\n      type: string\n    MEFItemTerm:\n      description: The term of the Item\n      properties:\n        duration:\n          $ref: '#/components/schemas/Duration'\n        endOfTermAction:\n          $ref: '#/components/schemas/MEFEndOfTermAction'\n        name:\n          description: Name of the term\n          type: string\n        description:\n          description: Description of the term\n          type: string\n        rollInterval:\n          $ref: '#/components/schemas/Duration'\n      type: object\n    MEFPriceType:\n      description: Indicates if the price is for recurring or non-recurring charges.\n      enum:\n        - recurring\n        - nonRecurring\n        - usageBased\n      type: string\n    MEFProduct:\n      description: A product is realized as one or more service(s) and / or resource(s).\n      properties:\n        productSpecification:\n          $ref: '#/components/schemas/ProductSpecificationRef'\n        relatedSite:\n          description: Reference to a Site where the PRoduct is provided.\n          items:\n            $ref: '#/components/schemas/RelatedGeographicSite'\n          type: array\n        productOffering:\n          $ref: '#/components/schemas/ProductOfferingRef'\n        lastUpdateDate:\n          description: Latest date when the product has been updated.\n          format: date-time\n          type: string\n        relatedContactInformation:\n          description: Party playing a role for this Product\n          items:\n            $ref: '#/components/schemas/RelatedContactInformation'\n          type: array\n        '@type':\n          description: 'When sub-classing, this defines the sub-class entity name'\n          type: string\n        externalId:\n          description: Buyer identifier of the product\n          type: string\n        billingAccount:\n          $ref: '#/components/schemas/MEFBillingAccountRef'\n        productOrderItem:\n          description: \u003e-\n            The Product Order Item of the associated Product order that resulted\n            in the creation of this Product.\n          items:\n            $ref: '#/components/schemas/MEFProductOrderItemRef'\n          type: array\n        productTerm:\n          description: Term of the Product\n          items:\n            $ref: '#/components/schemas/MEFItemTerm'\n          type: array\n        terminationDate:\n          description: \u003e-\n            Is the date when the product was terminated. MEF: Termination date\n            (commercial) is when the product has been terminated (when the\n            disconnect in the product order has been processed).\n          format: date-time\n          type: string\n        statusChange:\n          description: status change for the Product\n          items:\n            $ref: '#/components/schemas/MEFProductStatusChange'\n          type: array\n        productConfiguration:\n          $ref: '#/components/schemas/MEFProductConfiguration'\n        productRelationship:\n          description: \u003e-\n            A list of references to existing products that are related to the\n            Product.\n          items:\n            $ref: '#/components/schemas/ProductRelationship'\n          type: array\n        id:\n          description: Unique identifier of the product\n          type: string\n        href:\n          description: Reference of the product\n          type: string\n        startDate:\n          description: \u003e-\n            Is the date from which the product starts. MEF: Start date is when\n            the product is active for the first time (when the install in the\n            product order has been processed).\n          format: date-time\n          type: string\n        productPrice:\n          description: A list of Prices associated with the Product\n          items:\n            $ref: '#/components/schemas/ProductPrice'\n          type: array\n        status:\n          $ref: '#/components/schemas/MEFProductStatusType'\n      required:\n        - id\n        - startDate\n        - status\n      type: object\n    MEFProductConfiguration:\n      description: \u003e-\n        MEFProductConfiguration is used as an extension point for MEF specific\n        product/service payload.  The `@type` attribute is used as a\n        discriminator\n      discriminator:\n        mapping:\n          'urn:mef:lso:spec:cantata-sonata:evpl:v0.3.0:all': '#/components/schemas/Evpl'\n          'urn:mef:lso:spec:cantata-sonata:advancedIaUniAccessLink:v0.1.0:all': '#/components/schemas/AdvancedIaUniAccessLink'\n          'urn:mef:lso:spec:cantata-sonata:eptree:v0.3.0:all': '#/components/schemas/Eptree'\n          'urn:mef:lso:spec:cantata-sonata:evplan-endpoint:v0.3.0:all': '#/components/schemas/EvplanEndpoint'\n          'urn:mef:lso:spec:cantata-sonata:carrier-ethernet-subscriber-uni:v0.3.0:all': '#/components/schemas/CarrierEthernetSubscriberUni'\n          'urn:mef:lso:spec:cantata-sonata:evplan:v0.3.0:all': '#/components/schemas/Evplan'\n          'urn:mef:lso:spec:cantata-sonata:evptree:v0.3.0:all': '#/components/schemas/Evptree'\n          'urn:mef:lso:spec:cantata-sonata:eplan-endpoint:v0.3.0:all': '#/components/schemas/EplanEndpoint'\n          'urn:mef:lso:spec:cantata-sonata:epl:v0.3.0:all': '#/components/schemas/Epl'\n          'urn:mef:lso:spec:cantata-sonata:basicIaIpvc:v0.1.0:all': '#/components/schemas/BasicIaIpvc'\n          'urn:mef:lso:spec:cantata-sonata:advancedIaIpvc:v0.1.0:all': '#/components/schemas/AdvancedIaIpvc'\n          'urn:mef:lso:spec:cantata-sonata:evptree-endpoint:v0.3.0:all': '#/components/schemas/EvptreeEndpoint'\n          'urn:mef:lso:spec:cantata-sonata:eplan:v0.3.0:all': '#/components/schemas/Eplan'\n          'urn:mef:lso:spec:sonata:carrier-ethernet-enni-sp-so:v4.0.0:inventory': '#/components/schemas/CarrierEthernetEnniSpSo'\n          'urn:mef:lso:spec:cantata-sonata:advancedIaUni:v0.1.0:all': '#/components/schemas/AdvancedIaUni'\n          'urn:mef:lso:spec:sonata:access-eline:v4.0.0:all': '#/components/schemas/AccessEline'\n          'urn:mef:lso:spec:cantata-sonata:eptree-endpoint:v0.3.0:all': '#/components/schemas/EptreeEndpoint'\n          'urn:mef:lso:spec:sonata:carrier-ethernet-operator-uni:v4.0.0:all': '#/components/schemas/CarrierEthernetOperatorUni'\n        propertyName: '@type'\n      properties:\n        '@type':\n          description: \u003e-\n            The name of the type, defined in the JSON schema specified  above,\n            for the product that is the subject of the POQ Request. The named\n            type must be a subclass of MEFProductConfiguration.\n          enum:\n            - 'urn:mef:lso:spec:cantata-sonata:evpl:v0.3.0:all'\n            - 'urn:mef:lso:spec:cantata-sonata:advancedIaUniAccessLink:v0.1.0:all'\n            - 'urn:mef:lso:spec:cantata-sonata:eptree:v0.3.0:all'\n            - 'urn:mef:lso:spec:cantata-sonata:evplan-endpoint:v0.3.0:all'\n            - \u003e-\n              urn:mef:lso:spec:cantata-sonata:carrier-ethernet-subscriber-uni:v0.3.0:all\n            - 'urn:mef:lso:spec:cantata-sonata:evplan:v0.3.0:all'\n            - 'urn:mef:lso:spec:cantata-sonata:evptree:v0.3.0:all'\n            - 'urn:mef:lso:spec:cantata-sonata:eplan-endpoint:v0.3.0:all'\n            - 'urn:mef:lso:spec:cantata-sonata:epl:v0.3.0:all'\n            - 'urn:mef:lso:spec:cantata-sonata:basicIaIpvc:v0.1.0:all'\n            - 'urn:mef:lso:spec:cantata-sonata:advancedIaIpvc:v0.1.0:all'\n            - 'urn:mef:lso:spec:cantata-sonata:evptree-endpoint:v0.3.0:all'\n            - 'urn:mef:lso:spec:cantata-sonata:eplan:v0.3.0:all'\n            - \u003e-\n              urn:mef:lso:spec:sonata:carrier-ethernet-enni-sp-so:v4.0.0:inventory\n            - 'urn:mef:lso:spec:cantata-sonata:advancedIaUni:v0.1.0:all'\n            - 'urn:mef:lso:spec:sonata:access-eline:v4.0.0:all'\n            - 'urn:mef:lso:spec:cantata-sonata:eptree-endpoint:v0.3.0:all'\n            - 'urn:mef:lso:spec:sonata:carrier-ethernet-operator-uni:v4.0.0:all'\n          type: string\n      required:\n        - '@type'\n      type: object\n    MEFProductOrderItemRef:\n      description: A reference to a ProductOrder item\n      properties:\n        productOrderHref:\n          description: Reference of the related ProductOrder.\n          type: string\n        productOrderItemId:\n          description: Id of an Item within the Product Order\n          type: string\n        productOrderId:\n          description: Unique identifier of a ProductOrder.\n          type: string\n      required:\n        - productOrderId\n        - productOrderItemId\n      type: object\n    MEFProductStatusChange:\n      description: \u003e-\n        Holds the reached status, reasons and associated date the Product Order\n        status changed, populated by the Seller.\n      properties:\n        changeReason:\n          description: The reason why the status changed.\n          type: string\n        changeDate:\n          description: The date and time the status changed.\n          format: date-time\n          type: string\n        status:\n          $ref: '#/components/schemas/MEFProductStatusType'\n      required:\n        - changeDate\n        - status\n      type: object\n    MEFProductStatusType:\n      description: |-\n        Possible values for the status of a MEF product\n\n        | name                        | MEF 81 name                 |\n        | --------------------------- | --------------------------- |\n        | `active`                    | ACTIVE                      |\n        | `active.pendingChange`      | ACTIVE_PENDING_CHANGE       |\n        | `pendingTerminate`          | ACTIVE_PENDING_TERMINATE    |\n        | `cancelled`                 | CANCELLED                   |\n        | `pendingActive`             | PENDING                     |\n        | `suspended`                 | SUSPENDED                   |\n        | `suspendedPendingTerminate` | SUSPENDED_PENDING_TERMINATE |\n        | `terminated`                | TERMINATED                  |\n      enum:\n        - active\n        - active.pendingChange\n        - cancelled\n        - pendingActive\n        - pendingTerminate\n        - suspended\n        - suspendedPendingTerminate\n        - terminated\n      type: string\n    MEFProduct_Find:\n      description: \u003e-\n        Class used to provide product overview retrieved in GET (by list)\n        operation\n      properties:\n        productSpecification:\n          $ref: '#/components/schemas/ProductSpecificationRef'\n        relatedSite:\n          description: Reference to a Site where the PRoduct is provided.\n          items:\n            $ref: '#/components/schemas/RelatedGeographicSite'\n          type: array\n        productOffering:\n          $ref: '#/components/schemas/ProductOfferingRef'\n        lastUpdateDate:\n          description: Latest date when the product has been updated.\n          format: date-time\n          type: string\n        externalId:\n          description: \u003e-\n            This identifier is optionally provided during the product ordering\n            and stored for informative purpose in the seller inventory\n          type: string\n        productRelationship:\n          description: \u003e-\n            A list of references to existing products that are related to the\n            Product.\n          items:\n            $ref: '#/components/schemas/ProductRelationship'\n          type: array\n        id:\n          description: Unique identifier of the product\n          type: string\n        href:\n          description: Reference of the product\n          type: string\n        billingAccount:\n          $ref: '#/components/schemas/MEFBillingAccountRef'\n        productOrderItem:\n          description: \u003e-\n            The Product Order Item of the associated Product order that resulted\n            in the creation of this Product.\n          items:\n            $ref: '#/components/schemas/MEFProductOrderItemRef'\n          type: array\n        startDate:\n          description: The date from which the product starts\n          format: date-time\n          type: string\n        status:\n          $ref: '#/components/schemas/MEFProductStatusType'\n      required:\n        - id\n        - status\n      type: object\n    MEFSubUnit:\n      description: Allows for sub unit identification\n      properties:\n        subUnitNumber:\n          description: \u003e-\n            The discriminator used for the subunit, often just a simple number\n            but may also be a range.\n          type: string\n        subUnitType:\n          description: \u003e-\n            The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT,\n            WHARF.\n          type: string\n      required:\n        - subUnitNumber\n        - subUnitType\n      type: object\n    MegList:\n      enum:\n        - '0'\n        - '1'\n        - '2'\n        - '3'\n        - '4'\n        - '5'\n        - '6'\n        - '7'\n        - NONE\n      type: string\n    MepDirection:\n      description: Indicates whether this is an Up MEP or Down MEP\n      enum:\n        - UP\n        - DOWN\n      type: string\n    MepLevelAndDirection:\n      description: \u003e-\n        A 2-tuple \u003clevel, direction\u003e that defines the MEG Level and MEP\n        direction.\n      properties:\n        level:\n          description: The MEG level\n          maximum: 7\n          minimum: 0\n          type: integer\n        mepDirection:\n          description: Indicates whether this is an Up MEP or Down MEP\n          $ref: '#/components/schemas/MepDirection'\n      type: object\n    Money:\n      description: A base / value business entity used to represent money\n      properties:\n        unit:\n          description: Currency (ISO4217 norm uses 3 letters to define the currency)\n          type: string\n        value:\n          description: A positive floating point number\n          format: float\n          type: number\n      required:\n        - unit\n        - value\n      type: object\n    OneWayAvailabilityPmMetric:\n      description: \u003e-\n        MEF 10.4 sec. 8.8.7 and MEF 26.2 sec. 12.13.7 - One Way Availability\n        Performance Metric consisting of 1 parameter, a list of Ordered End\n        Point Pairs (referred to as S in MEF 10.4 and MEF 26.2), and the One Way\n        Availability Objective for this Class of Service Name and these Ordered\n        End Point Pairs.\n      properties:\n        oneWayAvailabilityObjective:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.7 and MEF 26.2 sec.12.13.7 - The PM Objective for\n            this Performance Metric (this CoS and these Ordered End Point Pairs)\n            expressed as a percentage.\n          $ref: '#/components/schemas/Percentage'\n        orderedPairList:\n          description: \u003e-\n            MEF 10.4 sec.  8.8.1.1 and MEF 26.2 sec. 12.13.1.1 - The set\n            (referred to as S in MEF 10.4 and MEF 26.2) of ordered pairs of EVC\n            or OVC End Points over which this Performance Metric parameters and\n            objective apply.\n          items:\n            $ref: '#/components/schemas/OrderedPair'\n          minItems: 1\n          type: array\n          uniqueItems: true\n      type: object\n    OneWayCompositePmMetric:\n      description: \u003e-\n        MEF 10.4 sec. 8.8.10 - One Way Composite Performance Metric consisting\n        of 7 parameters, a list of Ordered End Point Pairs (referred to as S in\n        MEF 10.4) , a Composite Performance number (referred to as U in MEF\n        10.4), indicators about Composite Frame Loss, Composite Frame Delay, and\n        Composite Frame Delay Variation (referred to as Wfl, Wfd, and Wfdv inMEF\n        10.4), Thresholds for Frame Delay and Delay Variation (referred to as DL\n        and Jt in MEF 10.4) and the One Way Composite Objective for this Class\n        of Service Name and these seven parameters. (Note: This Performance\n        Metric is not defined for OVC services).\n      properties:\n        oneWayIfdvThreshold:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.10 - One-way Frame Delay Variation threshold in\n            time units.\n          $ref: '#/components/schemas/TimeDuration'\n        cpmObjective:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.10 - The PM Objective for this Performance Metric\n            (this CoS and these 7 parameters) expressed as a percentage.\n          $ref: '#/components/schemas/Percentage'\n        compositeFrameDelay:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.10 - Composite indicator for One-way Frame Delay\n            equal to 0 or 1.\n          maximum: 1\n          minimum: 0\n          type: integer\n        compositeFrameDelayVariation:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.10 - Composite indicator for One-way Frame Delay\n            Variation equal to 0 or 1.\n          maximum: 1\n          minimum: 0\n          type: integer\n        oneWayFdThreshold:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.10 - Composite One-way Frame Delay threshold in\n            time units.\n          $ref: '#/components/schemas/TimeDuration'\n        compositeFrameLoss:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.10 - Composite indicator for One-way Frame Loss\n            equal to 0 or 1.\n          maximum: 1\n          minimum: 0\n          type: integer\n        orderedPairList:\n          description: \u003e-\n            MEF 10.4 sec.  8.8.1.1 - The set (referred to as S in MEF 10.4) of\n            ordered pairs of EVC End Points over which this Performance Metric\n            parameters and objective apply.\n          items:\n            $ref: '#/components/schemas/OrderedPair'\n          minItems: 1\n          type: array\n          uniqueItems: true\n        compositePerformanceIndicatorThreshold:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.10 - Composite Performance Indicator threshold\n            which if exceeded suggests an unacceptable time interval.\n          maximum: 1\n          minimum: 0\n          type: number\n      type: object\n    OneWayConsecutiveHighLossIntervalsPmMetric:\n      description: \u003e-\n        MEF 10.4 sec. 8.8.9 and MEF 26.2 sec. 12.13.9 - One Way Frame Delay\n        Range Performance Metric consisting of 2 parameters, a list of Ordered\n        End Point Pairs (referred to as S in MEF 10.4 and MEF 26.2) , a number\n        (referred to as p in MEF 10.4 and MEF 26.2), and the One Way Consecutive\n        High Loss Intervals Objective for this Class of Service Name and these\n        two parameters.\n      properties:\n        consecutiveNumberP:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.9 and MEF 26.2 sec.12.13.9 - The number of high\n            loss intervals that constitute a consecutive high loss interval.\n          minimum: 1\n          type: integer\n        oneWayChliObjective:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.9 and MEF 26.2 sec.12.13.9 - Performance Objective\n            expressed as a non-negative integer.\n          minimum: 1\n          type: integer\n        orderedPairList:\n          description: \u003e-\n            MEF 10.4 sec.  8.8.1.1 and MEF 26.2 sec. 12.13.1.1 - The set\n            (referred to as S in MEF 10.4 and MEF 26.2) of ordered pairs of EVC\n            or OVC End Points over which this Performance Metric parameters and\n            objective apply.\n          items:\n            $ref: '#/components/schemas/OrderedPair'\n          minItems: 1\n          type: array\n          uniqueItems: true\n      type: object\n    OneWayFrameDelayPmMetric:\n      description: \u003e-\n        MEF 10.4 sec. 8.8.2 and MEF 26.2 sec. 12.13.2 - One Way Frame Delay\n        Performance Metric consisting of 2 parameters, a list of Ordered End\n        Point Pairs (referred to as S in MEF 10.4 and MEF 26.2) , a percentile\n        (referred to as Pd in  MEF 10.4 and MEF 26.2), and the One Way Frame\n        Delay Objective for this Class of Service Name and these two parameters.\n      properties:\n        oneWayFdObjective:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.2 and MEF 26.2 sec. 12.13.2 - The Performance\n            Objective for this Performance Metric (this CoS and these 2\n            parameters). This is a unit of time greater than 0.\n          $ref: '#/components/schemas/TimeDuration'\n        oneWayFdPercentile:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.2 and MEF 26.2 sec. 12.13.2 (Pd) - A percentage in\n            (0,100] for Frame Delay metric.\n          $ref: '#/components/schemas/Percentage'\n        orderedPairList:\n          description: \u003e-\n            MEF 10.4 sec.  8.8.1.1 and MEF 26.2 sec. 12.13.1.1 - The set\n            (referred to as S in MEF 10.4 and MEF 26.2) of ordered pairs of EVC\n            or OVC End Points over which this Performance Metric parameters and\n            objective apply.\n          items:\n            $ref: '#/components/schemas/OrderedPair'\n          minItems: 1\n          type: array\n          uniqueItems: true\n      type: object\n    OneWayFrameDelayRangePmMetric:\n      description: \u003e-\n        MEF 10.4 sec. 8.8.4 and MEF 26.2 sec. 12.13.4 - One Way Frame Delay\n        Range Performance Metric consisting of 2 parameters, a list of Ordered\n        End Point Pairs (referred to as S in MEF 10.4 and MEF 26.2) , a\n        percentile (referred to as Pr in MEF 10.4 and MEF 26.2), and the One Way\n        Frame Delay Range Objective for this Class of Service Name and these two\n        parameters.\n      properties:\n        oneWayFdrPercentile:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.4 and MEF 26.2 sec.12.13.4 - A percentage in\n            (0,100] for Frame Delay Range metric.\n          $ref: '#/components/schemas/Percentage'\n        oneWayFdrObjective:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.4 and MEF 26.2 sec.12.13.4 - The Performance\n            Objective for this Performance Metric (this CoS and these 2\n            parameters). This is a unit of time \u003e0.\n          $ref: '#/components/schemas/TimeDuration'\n        orderedPairList:\n          description: \u003e-\n            MEF 10.4 sec.  8.8.1.1 and MEF 26.2 sec. 12.13.1.1 - The set\n            (referred to as S in MEF 10.4 and MEF 26.2) of ordered pairs of EVC\n            or OVC End Points over which this Performance Metric parameters and\n            objective apply.\n          items:\n            $ref: '#/components/schemas/OrderedPair'\n          minItems: 1\n          type: array\n          uniqueItems: false\n      type: object\n    OneWayFrameLostRatioPmMetric:\n      description: \u003e-\n        MEF 10.4 sec. 8.8.6 and MEF 26.2 sec. 12.13.6 - One Way Frame Loss Ratio\n        Performance Metric consisting of 1 parameter, a list of Ordered End\n        Point Pairs (referred to as S in MEF 10.4 and MEF 26.2), and the One Way\n        Frame Loss Ratio Objective for this Class of Service Name and these\n        Ordered End Point Pairs.\n      properties:\n        oneWayFlrObjective:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.6 and MEF 26.2 sec.12.13.6 - The Performance\n            Objective for this Performance Metric (this CoS and these Ordered\n            End Point Pairs).\n          $ref: '#/components/schemas/Percentage'\n        orderedPairList:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.1.1 and MEF 26.2 sec. 12.13.1.1 - The set\n            (referred to as S in MEF 10.4 and MEF 26.2) of ordered pairs of EVC\n            or OVC End Points over which this Performance Metric parameters and\n            objective apply.\n          items:\n            $ref: '#/components/schemas/OrderedPair'\n          minItems: 1\n          type: array\n          uniqueItems: true\n      type: object\n    OneWayHighLossIntervalPmMetric:\n      description: \u003e-\n        MEF 10.4 sec. 8.8.8 and MEF 26.2 sec. 12.13.8 - One Way High Loss\n        Intervals Performance Metric consisting of 1 parameter, a list of\n        Ordered End Point Pairs (referred to as S in MEF 10.4 and MEF 26.2), and\n        the One Way High Loss Intervals Objective for this Class of Service Name\n        and these Ordered End Point Pairs.\n      properties:\n        oneWayHighLossIntervalsObjective:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.8 and MEF 26.2 sec.12.13.8 - The PM Objective for\n            this Performance Metric (this CoS and these Ordered End Point Pairs)\n            expressed as a non-negative number.\n          minimum: 0\n          type: integer\n        orderedPairList:\n          description: \u003e-\n            MEF 10.4 sec.  8.8.1.1 and MEF 26.2 sec. 12.13.1.1 - The set\n            (referred to as S in MEF 10.4 and MEF 26.2) of ordered pairs of EVC\n            or OVC End Points over which this Performance Metric parameters and\n            objective apply.\n          items:\n            $ref: '#/components/schemas/OrderedPair'\n          minItems: 1\n          type: array\n          uniqueItems: true\n      type: object\n    OneWayInterFrameDelayVariationPmMetric:\n      description: \u003e-\n        MEF 10.4 sec. 8.8.5 and MEF 26.2 sec. 12.13.5 - One Way Frame Inter\n        Frame Delay Variation Performance Metric consisting of 3 parameters, a\n        list of Ordered End Point Pairs (referred to as S in MEF 10.4 and MEF\n        26.2) , a time duration (referred to as delta-tau in MEF 10.4 and MEF\n        26.2), a percentile (referred to as Pv in MEF 10.4 and MEF 26.2), and\n        the Inter Frame Delay Variation Objective for this Class of Service Name\n        and these three parameters.\n      properties:\n        oneWayIfdvObjective:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.5 and MEF 26.2 sec.12.13.5 - The Performance\n            Objective for this Performance Metric (this CoS and these 3\n            parameters). This is a unit of time \u003e0.\n          $ref: '#/components/schemas/TimeDuration'\n        oneWayIfdvPencentile:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.5 and MEF 26.2 sec.12.13.5 - A percentage in\n            (0,100] for Frame Delay metric.\n          $ref: '#/components/schemas/Percentage'\n        timeDuration:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.5 and MEF 26.2 sec.12.13.5 - A time duration. This\n            is the time difference between frames for which IFDV is measured. It\n            is called delta-tau in MEF 10.4 and MEF 26.2.\n          $ref: '#/components/schemas/TimeDuration'\n        orderedPairList:\n          description: \u003e-\n            MEF 10.4 sec.  8.8.1.1 and MEF 26.2 sec. 12.13.1.1 - The set\n            (referred to as S in MEF 10.4 and MEF 26.2) of ordered pairs of EVC\n            or OVC End Points over which this Performance Metric parameters and\n            objective apply.\n          items:\n            $ref: '#/components/schemas/OrderedPair'\n          minItems: 1\n          type: array\n          uniqueItems: false\n      type: object\n    OneWayInterPacketDelayVariation:\n      description: \u003e-\n        The One-way Inter-Packet Delay Variation Performance Metric is the\n        maximum, over all the ordered pairs of SLS-RPs in a given set S, of the\n        vth percentile of differences between the one-way packet delays of\n        Qualified Packets that arrive at time separated by a given interval tau,\n        for a given ordered pair of SLS-RPs, a given CoS Name, and a given time\n        period Tk. Reference MEF 61.1 Section 10.9.6 One-way Inter-Packet Delay\n        Variation Performance Metric.\n      properties:\n        slsRpPair:\n          description: \u003e-\n            Set of ordered SLS-RP pairs. Reference MEF 61.1 Section 10.9.5\n            One-way Mean Packet Delay Performance Metric, Table-5.\n          items:\n            $ref: '#/components/schemas/SlsRpPair'\n          minItems: 1\n          type: array\n        interPacketDelayVariationPercentile:\n          description: \u003e-\n            Inter-Packet Delay Variation Percentile. Reference MEF 61.1 Section\n            10.9.6 One-way Inter-Packet Delay Variation Performance Metric,\n            Table 6.\n          $ref: '#/components/schemas/Percentage'\n        cosName:\n          description: \u003e-\n            One of the values in the IPVC List of Class of Service Names Service\n            Attribute. Reference MEF 61.1 Section 10.9.6 One-way Inter-Packet\n            Delay Variation Performance Metric, Table-6.\n          type: string\n        packetArrivalTimeDifference:\n          description: \u003e-\n            Difference in the time of arrival of packets. Reference MEF 61.1\n            Section 10.9.6 One-way Inter-Packet Delay Variation Performance\n            Metric, Table 6.\n          type: number\n        interPacketDelayVariationObjective:\n          description: \u003e-\n            Inter-Packet Delay Variation Objective. Reference MEF 61.1 Section\n            10.9.6 One-way Inter-Packet Delay Variation Performance Metric,\n            Table 6.\n          type: number\n      type: object\n    OneWayMeanFrameDelayPmMetric:\n      description: \u003e-\n        MEF 10.4 sec. 8.8.3 and MEF 26.2 sec. 12.13.3 - One Way Frame Mean Delay\n        Performance Metric consisting of 1 parameter, a list of Ordered End\n        Point Pairs (referred to as S in MEF 10.4 and MEF 26.2), and the One Way\n        Mean Frame Delay Objective for this Class of Service Name and these\n        Ordered End Point Pairs.\n      properties:\n        oneWayMfdObjective:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.3 and MEF 26.2 sec. 12.13.3 - The Performance\n            Objective for this Performance Metric (this CoS and these Ordered\n            End Point Pairs). This is a unit of time \u003e0.\n          $ref: '#/components/schemas/TimeDuration'\n        orderedPairList:\n          description: \u003e-\n            MEF 10.4 sec.  8.8.1.1 and MEF 26.2 sec. 12.13.1.1 - The set\n            (referred to as S in MEF 10.4 and MEF 26.2) of ordered pairs of EVC\n            or OVC End Points over which this Performance Metric parameters and\n            objective apply.\n          items:\n            $ref: '#/components/schemas/OrderedPair'\n          minItems: 1\n          type: array\n          uniqueItems: true\n      type: object\n    OneWayMeanPacketDelay:\n      description: \u003e-\n        The One-way Mean Packet Delay Performance Metric is the maximum, over\n        all the ordered pairs of SLS-RPs in a given set S, of the arithmetic\n        mean of one-way packet delay for Qualified Packets for a given ordered\n        pair of SLS-RPs, a given CoS Name, and a  given time period Tk.\n        Reference MEF 61.1 Section 10.9.5 One-way Mean Packet Delay Performance\n        Metric.\n      properties:\n        slsRpPair:\n          description: \u003e-\n            Set of ordered SLS-RP pairs. Reference MEF 61.1 Section 10.9.5\n            One-way Mean Packet Delay Performance Metric, Table-5.\n          items:\n            $ref: '#/components/schemas/SlsRpPair'\n          minItems: 1\n          type: array\n        meanPacketDelayObjective:\n          description: \u003e-\n            Mean Packet Delay Objective. Reference MEF 61.1 Section 10.9.5\n            One-way Mean Packet Delay Performance Metric, Table-5.\n          type: number\n        cosName:\n          description: \u003e-\n            One of the values in the IPVC List of Class of Service Names Service\n            Attribute. Reference MEF 61.1 Section 10.9.5 One-way Mean Packet\n            Delay Performance Metric, Table-5.\n          type: string\n      type: object\n    OneWayPacketDelayPercentile:\n      description: \u003e-\n        The One-way Packet Delay Percentile Performance Metric is the maximum,\n        over all the order pairs of SLS-RPs in a given set S, of the pth\n        percentile of one-way packet delay for Qualified Packets for a given\n        order pair of SLS-RPs, a given CoS Name and a given time period Tk.\n        Reference MEF 61.1 Section 10.9.4 One-way Packet Delay Percentile\n        Performance Metric.\n      properties:\n        slsRpPair:\n          description: \u003e-\n            Set of ordered SLS-RP pairs. Reference MEF 61.1 Section 10.9.5\n            One-way Mean Packet Delay Performance Metric, Table-5.\n          items:\n            $ref: '#/components/schemas/SlsRpPair'\n          minItems: 1\n          type: array\n        packetDelayRangePercentile:\n          description: \u003e-\n            Packet Delay Range Percentile. Reference MEF 61.1 Section 10.9.7\n            One-way Packet Delay Range Performance Metric, Table 7.\n          $ref: '#/components/schemas/Percentage'\n        cosName:\n          description: \u003e-\n            One of the values in the IPVC List of Class of Service Names Service\n            Attribute. Reference MEF 61.1 Section 10.9.4 One-way Packet Delay\n            Percentile Performance Metric, Table-4.\n          type: string\n        packetDelayRangeObjective:\n          description: \u003e-\n            Packet Delay Objective. Reference MEF 61.1 Section 10.9.4 One-way\n            Packet Delay Percentile Performance Metric, Table-4.\n          type: number\n      type: object\n    OneWayPacketDelayRange:\n      description: \u003e-\n        The One-way Packet Delay Range Performance Metric is the maximum, over\n        all the ordered pairs of SLS-RPs in a given set S, of the difference\n        between the rth percentile of one-way packet delay and the minimum\n        one-way packet delay, for Qualified Packets for a given ordered pair of\n        SLS-RPs, a given CoS Name, and a given time period Tk. Reference MEF\n        61.1 Section 10.9.7 One-way Packet Delay Range Performance Metric.\n      properties:\n        slsRpPair:\n          description: \u003e-\n            Set of ordered SLS-RP pairs. Reference MEF 61.1 Section 10.9.5\n            One-way Mean Packet Delay Performance Metric, Table-5.\n          items:\n            $ref: '#/components/schemas/SlsRpPair'\n          minItems: 1\n          type: array\n        packetDelayRangePercentile:\n          description: \u003e-\n            Packet Delay Range Percentile. Reference MEF 61.1 Section 10.9.7\n            One-way Packet Delay Range Performance Metric, Table 7.\n          $ref: '#/components/schemas/Percentage'\n        packetDelayRangeObjective:\n          description: \u003e-\n            Packet Delay Range Objective. Reference MEF 61.1 Section 10.9.7\n            One-way Packet Delay Range Performance Metric, Table 7.\n          type: number\n        cosName:\n          description: \u003e-\n            One of the values in the IPVC List of Class of Service Names Service\n            Attribute. Reference MEF 61.1 Section 10.9.7 One-way Mean Packet\n            Delay Performance Metric, Table-7.\n          type: string\n      type: object\n    OneWayPacketLossRatio:\n      description: \u003e-\n        The One-way Packet Loss Ratio Performance Metric is the maximum, over\n        the ordered pairs of SLS-RPs in a given set S, of the ratio of lost\n        packets to transmitted packets for a given ordered pair of SLS-RPs, a\n        given CoS Name and a given time period Tk. Reference MEF 61.1 Section\n        10.9.8 One-way Packet Loss Ratio Performance Metric.\n      properties:\n        packetLossRatioObjective:\n          description: \u003e-\n            Packet Loss Ratio Objective. Reference MEF 61.1 Section 10.9.8\n            One-way Packet Loss Ratio Performance Metric, Table 8.\n          $ref: '#/components/schemas/Percentage'\n        slsRpPair:\n          description: \u003e-\n            Set of ordered SLS-RP pairs. Reference MEF 61.1 Section 10.9.5\n            One-way Mean Packet Delay Performance Metric, Table-5.\n          items:\n            $ref: '#/components/schemas/SlsRpPair'\n          minItems: 1\n          type: array\n        cosName:\n          description: \u003e-\n            One of the values in the IPVC List of Class of Service Names Service\n            Attribute. Reference MEF 61.1 Section 10.9.8 One-way Packet Loss\n            Ratio Performance Metric, Table-8.\n          type: string\n      type: object\n    OperatorMultilateral:\n      description: \u003e-\n        An Operator Multilateral Attribute is a behavior of a single Operator\n        CEN at an ENNI that is externally visible to a Service Provider or Super\n        Operator using that CEN and ENNI and/or to peer Operators operating CENs\n        on the other side of the ENNI. An Operator Multilateral Attribute has\n        the same value for all Service Providers or Super Operators using that\n        CEN and ENNI to whom the behavior is externally visible.\n      properties:\n        l2cpPeering:\n          description: \u003e-\n            MEF 26.2 sec. 10.1 and  MEF 45 sec. 8.2 - A list of Layer 2 Control\n            Protocols that will be Peered by a protocol entity at an ENNI: an\n            empty list, or a list of entries identifying protocols to be Peered\n            where each entry consists of {Destination Address, Protocol\n            Identifier} or {Destination Address, Protocol Identifier, Link\n            Identifier}\n          items:\n            $ref: '#/components/schemas/L2cpPeering'\n          minItems: 0\n          type: array\n          uniqueItems: false\n        taggedL2cpFrameProcessing:\n          description: \u003e-\n            MEF 26.2 sec. 10.2 and MEF 45 sec. 8.3 - Reflects the capability of\n            the ENNI to process S-VLAN-tagged L2CP Frames in an 802.1 compliant\n            manner. The allowed values are �802_1_COMPLIANT� or\n            �802_1_NON_COMPLIANT�. A value of 802_1_COMPLIANT means the ENNI\n            will apply the special forwarding rules to Tagged L2CP ENNI Frames\n            that map to a VUNI or an OVC End Point supporting a service other\n            than EPL with EPL Option 2 L2CP processing. A value of\n            802_1_NON_COMPLIANT means the ENNI will pass any Tagged L2CP ENNI\n            Frames. There is an ENNI Tagged L2CP Frame Processing Multilateral\n            Attribute for each ENNI.\n          $ref: '#/components/schemas/TaggedL2cpFrameProcessing'\n        maximumFrameSizeMultilateral:\n          description: \u003e-\n            MEF 26.2 sec. 10.3 - The maximum length ENNI Frame in bytes that can\n            be reliably processed.\n          minimum: 1526\n          type: integer\n      type: object\n    OperatorUniCommon:\n      description: \u003e-\n        This class contains all of the Operator UNI Services Attributes. This\n        class is used to compose the OperatorUNI class.\n      properties:\n        aggregationLinkMap:\n          description: \u003e-\n            MEF 26.2 sec. 14.6 and 802.1AX-2014 sec.  6.6.2.1 - A mapping of a\n            list of Port Conversation IDs (i.e., VLAN IDs or zero for untagged\n            frames) to an ordered list of physical links if there are multiple\n            physical links in the UNI and the link aggregation is ALL_ACTIVE.\n          items:\n            $ref: '#/components/schemas/ConversationIdToAggregationLinkMap'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        defaultCeVlanId:\n          description: \u003e-\n            MEF 26.2 sec. 14.9 - The value of the Operator UNI Default CE-VLAN\n            ID is an integer that is the CE-VLAN ID value assigned to Untagged\n            Service Frames and Priority Tagged Service Frames.\n          maximum: 4094\n          minimum: 1\n          type: integer\n        maximumNumberOfEndPoints:\n          description: \u003e-\n            MEF 26.2 sec. 14.10 - The maximum number of OVC End Points that the\n            Operator CEN can support at the UNI.\n          maximum: 4094\n          minimum: 1\n          type: integer\n        ingressBandwidthProfile:\n          description: \u003e-\n            MEF 26.2 sec. 14.12 - A single set Bandwidth Profile Flow parameters\n            that covers all OVCs at the UNI. The value is either Disabled (empty\n            array) or a BWP.\n          items:\n            $ref: '#/components/schemas/BwpFlow'\n          maxItems: 1\n          minItems: 0\n          type: array\n          uniqueItems: true\n        lagLinkMeg:\n          description: \u003e-\n            MEF 26.2 sec. 14.16 - Indicates if the Service Provider has\n            instantiated a LAG Link MEG End Point (MEP) on each physical link in\n            the UNI if the UNI has more than one physical link (ENABLED) or not\n            (DISABLED).\n          $ref: '#/components/schemas/EnabledDisabled'\n        l2cpAddressSet:\n          description: \u003e-\n            MEF 26.2 sec. 14.20 and MEF 45.1 sec. 8.1 - The subset of the Bridge\n            Reserved Addresses that are Peered or Discarded (i.e. not Passed).\n            The value CTB or CTB2 must be used for port-based (private) services\n            and CTA for vlan-based (virtual private) services. Per MEF 45.1: If\n            an OVC has an OVC End Point at a UNI, then the value of the Operator\n            UNI L2CP Address Set Service Attribute MUST be the same as the OVC\n            L2CP Address Set Service Attribute.\n          $ref: '#/components/schemas/L2cpAddressSet'\n        linkOam:\n          description: \u003e-\n            MEF 26.2 sec. 14.14 - Controls when and how Link OAM per IEEE Std\n            802.3-2015 is run on the physical links in the UNI.\n          $ref: '#/components/schemas/EnabledDisabled'\n        meg:\n          description: \u003e-\n            MEF 26.2 sec. 14.15 - Indicates if the Service Provider has\n            instantiated a MEG End Point (MEP) at the UNI Maintenance Entity\n            Group (MEG) Level (ENABLED) or not (DISABLED).\n          $ref: '#/components/schemas/EnabledDisabled'\n        linkAggregation:\n          description: \u003e-\n            MEF 26.2 sec. 14.5 - Service Attribute representing Link Aggregation\n            types. NONE-No Link Aggregation is used. 2_LINK_ACTIVE_STANDBY-The\n            SP network uses Link Aggregation as in either Clause 5.6.1 of IEEE\n            Std 802.1AX-2008 [2] or Clause 6.7.1 of IEEE Std 802.1AX-2014 with\n            one Link Aggregation Group (LAG) across the links supporting the UNI\n            such that all Service Frames are carried on only one of the two\n            links when both links are operational. ALL_ACTIVE-The SP Network\n            uses Link Aggregation as specified in Clause 5.3 of IEEE Std\n            802.1AX-2014, including the use of the version 2 LACPDUs as\n            specified in Clause 5.3.1h of IEEE Std 802.1AZ-2014, with one Link\n            Aggregation Group (LAG) across the links. OTHER-The\n            Operator/Subscriber/Service Provider agree on another other\n            resiliency mechanism.\n          $ref: '#/components/schemas/LinkAggType'\n        egressBandwidthProfile:\n          description: \u003e-\n            MEF 26.2 sec. 14.13 - A single set of Bandwidth Profile Flow\n            parameters that covers all OVCs at the UNI. The value is either\n            Disabled (empty array) or a BWP.\n          items:\n            $ref: '#/components/schemas/BwpFlow'\n          maxItems: 1\n          minItems: 0\n          type: array\n          uniqueItems: true\n        l2cpPeering:\n          description: \u003e-\n            MEF 26.2 sec. 14.21 and  and MEF 45.1 sec. 8.1 - L2CP Peering\n            Service Attribute defined in MEF 45.1 specifies which protocols, if\n            any, are peered at the UNI. The L2CP Peering service attribute value\n            must be an empty list, or a list of entries identifying protocols to\n            be Peered where each entry consists of {Destination Address,\n            Protocol Identifier} or {Destination Address, Protocol Identifier,\n            Link Identifier}.\n          items:\n            $ref: '#/components/schemas/L2cpPeering'\n          minItems: 0\n          type: array\n          uniqueItems: false\n        maximumNumberOfCeVlanIdsPerEndPoint:\n          description: \u003e-\n            MEF 26.2 sec. 14.11 - An integer between 1 and 4094 inclusive that\n            limits the number of C-Tag VLAN IDs that can map to each OVC End\n            Point at the UNI.\n          maximum: 4094\n          minimum: 1\n          type: integer\n        tokenShare:\n          description: \u003e-\n            MEF 26.2 sec. 14.18 - An attribute that indicates whether Bandwidth\n            Profile Envelopes containing more than one Bandwidth Profile Flow\n            are supported by the Service Provider at the Operator UNI.\n          $ref: '#/components/schemas/EnabledDisabled'\n        maximumServiceFrameSize:\n          description: \u003e-\n            MEF 26.2 sec. 14.8 - Specifies the maximum size of Service Frames\n            that can be transmitted across the UNI.\n          minimum: 1522\n          type: integer\n        envelopes:\n          description: \u003e-\n            MEF 26.2 sec. 14.19 - The Envelopes and Envelope Coupling Flag\n            values to which Bandwidth Profile Flows can be mapped. Value is list\n            of {envelopeID, couplingFlagForIndexZero}. Note: Envelopes for the\n            UNI can also be specified at the OVC End Points associated with the\n            UNI.\n          items:\n            $ref: '#/components/schemas/Envelope'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        listOfPhysicalLinks:\n          description: \u003e-\n            MEF 26.2 sec. 14.2, 14.3 - This Service Attribute combines several\n            of the MEF 26.2 Objects into a single n-tuple that is consistent\n            with the way this information is described in MEF 10.4. The value of\n            the Operator UNI List of Physical Links Service Attribute is a list\n            of 6-tuples of the form ?id, physicalLink, synchronousEthernet,\n            precisionTiming, uniConnectorType,uniConnectorGender?, with one list\n            item for each physical link. The value of id is an identifier for\n            the physical link. The value of physicalLink is the specific\n            Ethernet physical layer type. synchronousEthernet indicates if\n            synchronous Ethernet is used on the physical link and has the value\n            Enabled or Disabled. The value of precisionTiming indicates if the\n            Precision Time Protocol is used on the physical link and has the\n            value Enabled or Disabled. The values of uniConnectorType and\n            uniConnectorGender specify the type of connector used. Note that the\n            id and the physicalLink come from the CarrierEthernetPhysicalLink\n            class.\n          items:\n            $ref: '#/components/schemas/UniPhysicalLink'\n          minItems: 1\n          type: array\n          uniqueItems: true\n      type: object\n    OrderedPair:\n      description: \u003e-\n        Performance Metrics (except for Group Availability) are specified for a\n        list of Ordered End Point Pairs. In other words a Frame Delay objective\n        (for example) is specified from ?A to B? and from ?C to D?. This class\n        defines one Ordered End Point Pair.\n      properties:\n        toCarrierEthernetServiceEndPoint:\n          description: \u003e-\n            This is the EVC End Point ID for an EVC End Point in the service or\n            OVC End Point ID for an OVC End Point in the service.\n          type: string\n        fromCarrierEthernetServiceEndPoint:\n          description: \u003e-\n            This is the EVC End Point ID for an EVC End Point in the service or\n            OVC End Point ID for an OVC End Point in the service.\n          type: string\n      type: object\n    Ospf:\n      description: \u003e-\n        When an entry in the UNI Routing Protocols is for OSPF, OSPF as\n        specified in RFC 2328 (for IPv4) and/or RFC 5340 (for IPv6) is used\n        across each UNI Access Link to exchange routing information. Reference\n        MEF 61.1 Section 12.7.2 OSPF.\n      properties:\n        deadInterval:\n          description: 'Dead interval (0-429496295, in seconds)'\n          type: integer\n        areaId:\n          description: 'Area ID (0-429967295), normally expressed as an IPv4 address.'\n          type: integer\n        retransmissionInterval:\n          description: 'Retransmit interval (integer greater than 0, in seconds)'\n          type: integer\n        areaType:\n          description: OSPF Area Type enumeration.\n          $ref: '#/components/schemas/OspfAreaType'\n        helloInterval:\n          description: 'Hello interval (0-65535, in seconds)'\n          type: integer\n        authenticationType:\n          description: OSPF Authentication Type.\n          $ref: '#/components/schemas/OspfAuthenticationType'\n        ipPrefixes:\n          description: IPv4/IPv6 Prefixes that are advertised using OSPF.\n          $ref: '#/components/schemas/Ipv4Ipv6Prefixes'\n        administrativeDistance:\n          description: Administrative distance (integer greater than 0)\n          type: integer\n      type: object\n    OspfAreaType:\n      description: OSPF Area Type enumeration.\n      enum:\n        - NORMAL\n        - STUB\n        - NSSA\n      type: string\n    OspfAuthenticationType:\n      description: OSPF Authentication Type enumeration.\n      enum:\n        - NONE\n        - PASSWORD\n        - MESSAGE_DIGEST\n      type: string\n    OvcEgressMap:\n      discriminator:\n        mapping:\n          CN_PCP_CC_DEI: '#/components/schemas/PcpFromCosDeiFromCosColor'\n          CC_PCP: '#/components/schemas/PcpFromCosColor'\n          CN_PCP: '#/components/schemas/PcpFromCos'\n          CC_DEI: '#/components/schemas/DeiFromCosColor'\n        propertyName: mapType\n      properties:\n        mapType:\n          enum:\n            - CN_PCP_CC_DEI\n            - CC_PCP\n            - CN_PCP\n            - CC_DEI\n          type: string\n      required:\n        - mapType\n      type: object\n    PacketDelivery:\n      description: \u003e\n        For each Ingress IP Data Packet that is mapped to one of the IPVC EPs\n        for\n\n        the IPVC it takes one of two values. STANDARD_ROUTING or\n\n        POLICY-BASED_ROUTING\n\n        STANDARD_ROUTING: If the IPVC Packet Delivery is Standard Routing,\n\n        the egress UNI and UNI Ac-cess Link or egress ENNI and ENNI Link are\n\n        generally selected by examining the destination IP address in the packet\n\n        and matching it to an IP Prefix reachable via the IPVC EP at the egress \n\n        EI - in other words, by normal IP routing.\n\n        POLICY_BASED_ROUTING: The behavior and requirements when the\n\n        IPVC Packet Delivery Service Attribute is set to Policy-Based Routing\n\n        are deferred to a future revision of this specification (MEF 61.1)\n      enum:\n        - STANDARD_ROUTING\n        - POLICY_BASED_ROUTING\n      type: string\n    PcpFromCos:\n      allOf:\n        - $ref: '#/components/schemas/OvcEgressMap'\n        - description: \u003e-\n            The PCP Field in the Egress EI Frame is determined from the Class of\n            Service of the corresponding Ingress EI Frame. This is a list that\n            contains an entry for Class of Service Name that includes the CoS\n            Name and the PCP value  (or DISCARD) to use for that CoS. For\n            example CoS=Platinum --\u003e PCP = 6. This affects the C-tag at the UNI\n            and the S-tag at the ENNI.\n          properties:\n            cnPcpEntries:\n              description: \u003e-\n                A list of mappings of each CoS to an egress PCP value or\n                DISCARD.\n              items:\n                $ref: '#/components/schemas/CnPcp'\n              minItems: 1\n              type: array\n              uniqueItems: true\n          type: object\n      x-discriminator-value: CN_PCP\n    PcpFromCosColor:\n      allOf:\n        - $ref: '#/components/schemas/OvcEgressMap'\n        - description: \u003e-\n            The PCP Field in the Egress EI Frame is determined from the Class of\n            Service Name and the Frame Color. This is a list that contains an\n            entry for Class of Service Name that includes the CoS Name and two\n            PCP values (or DISCARD), one for Green frames and one for Yellow\n            frames.  For example CoS=Platinum and Color=Green --\u003e PCP = 6  and\n            Color=Yellow --\u003e PCP = 5. This affects the C-tag at the UNI and the\n            S-tag at the ENNI.\n          properties:\n            ccPcpEntries:\n              description: \u003e-\n                A list of entries, one per CoS that indicates the PCP value for\n                Green Frames and the PCP value for Yellow Frames.\n              items:\n                $ref: '#/components/schemas/CcPcp'\n              minItems: 1\n              type: array\n              uniqueItems: true\n          type: object\n      x-discriminator-value: CC_PCP\n    PcpFromCosDeiFromCosColor:\n      allOf:\n        - $ref: '#/components/schemas/OvcEgressMap'\n        - description: \u003e-\n            This is a combination of PCP from CoS and DEI from Color. The PCP\n            Field in the Egress EI Frame is determined from the Class of Service\n            and the DEI Field is determined from the Frame Color. This is a list\n            that contains an entry for Class of Service Name that includes the\n            CoS Name, PCP value to use (or DISCARD) and the DEI value to use for\n            each color for that CoS Name. For example CoS=Platinum and\n            Color=Green --\u003e PCP = 6/DEI = 1 and Color=Yellow --\u003e DEI=0. This\n            affects the C-tag at the UNI and the S-tag at the ENNI.\n          properties:\n            cnPcpCcDeiEntries:\n              description: \u003e-\n                A list of entries, one per CoS, the specifies the PCP value for\n                the CoS and the DEI values for Green and Yellow frames in the\n                CoS.\n              items:\n                $ref: '#/components/schemas/PcpFromCosDeiFromCosColor'\n              minItems: 1\n              type: array\n              uniqueItems: true\n          type: object\n      x-discriminator-value: CN_PCP_CC_DEI\n    PcpMapping:\n      description: Ethernet PCP mapping of CoS name to PCP value\n      properties:\n        ethernetPcp:\n          description: PCP value\n          maximum: 7\n          minimum: 0\n          type: integer\n        cosName:\n          description: Class of Service name\n          type: string\n      type: object\n    PcpVal:\n      description: A PCP value from 0 to 7 or UNTAGGED\n      enum:\n        - '0'\n        - '1'\n        - '2'\n        - '3'\n        - '4'\n        - '5'\n        - '6'\n        - '7'\n        - UNTAGGED\n      type: string\n    PcpValue:\n      enum:\n        - '0'\n        - '1'\n        - '2'\n        - '3'\n        - '4'\n        - '5'\n        - '6'\n        - '7'\n      type: string\n    PcpValueAndDiscard:\n      enum:\n        - '0'\n        - '1'\n        - '2'\n        - '3'\n        - '4'\n        - '5'\n        - '6'\n        - '7'\n        - DISCARD\n      type: string\n    PeeringAddress:\n      description: \u003e-\n        Peering Addresses. Connection Addresses, or Loopbacks plus a list of\n        pairs of IP addresses. Reference MEF 61.1 Section 12.7.3 BGP.\n      properties:\n        connectionAddress:\n          description: \u003e-\n            If the Peering Addresses parameter is Connection Addresses, a\n            separate BGP peering session is established over each UNI Access\n            Link, using the primary IPv4 addresses in the UNI Access Link IPv4\n            Connection Addressing Service Attribute (section 13.4) or the first\n            IPv6 addresses in the UNI Access Link IPv6 Connection Addressing\n            Service Attribute (section 13.5), as indicated by the Connection\n            Address Family parameter.\n          $ref: '#/components/schemas/EnabledDisabled'\n        serviceProviderLoopback:\n          description: Service Provider IP Loopback address.\n          type: string\n        loopbacks:\n          description: \u003e-\n            If the Peering Addresses parameter is Loopbacks, a list of pairs of\n            IP addresses is additionally specified, each pair containing the\n            Subscriber's loopback address and the SP's or Operator's loopback\n            address. A single BGP peering session is established for each pair\n            of addresses.\n          $ref: '#/components/schemas/EnabledDisabled'\n        subscriberLoopback:\n          description: Subscriber IP Loopback address.\n          type: string\n      type: object\n    Percentage:\n      description: This is a number of percent - a floating point number between 0 and 100\n      maximum: 100\n      minimum: 0\n      type: number\n    PhysicalLink:\n      description: An Ethernet physical layer\n      enum:\n        - 1BASE5\n        - 2BASE_TL\n        - 10BASE2\n        - 10BASE5\n        - 10BASE_F\n        - 10BASE_FB\n        - 10BASE_FL\n        - 10BASE_FP\n        - 10BASE_T\n        - 10BASE_T1L\n        - 10BASE_T1S\n        - 10BASE_TE\n        - 10BROAD36\n        - 10PASS_TS\n        - 100BASE_BX10\n        - 100BASE_FX\n        - 100BASE_LX10\n        - 100BASE_T\n        - 100BASE_T1\n        - 100BASE_T2\n        - 100BASE_T4\n        - 100BASE_TX\n        - 100BASE_X\n        - 1000BASE_BX10\n        - 1000BASE_CX\n        - 1000BASE_KX\n        - 1000BASE_LX\n        - 1000BASE_LX10\n        - 1000BASE_PX10\n        - 1000BASE_PX20\n        - 1000BASE_RHA\n        - 1000BASE_RHB\n        - 1000BASE_RHC\n        - 1000BASE_SX\n        - 1000BASE_T\n        - 1000BASE_T1\n        - 1000BASE_X\n        - 2_5GBASE_KX\n        - 2_5GBASE_T\n        - 2_5GBASE_T1\n        - 5GBASE_KR\n        - 5GBASE_T\n        - 5GBASE_T1\n        - 10GBASE_CX4\n        - 10GBASE_E\n        - 10GBASE_ER\n        - 10GBASE_EW\n        - 10GBASE_KR\n        - 10GBASE_KX4\n        - 10GBASE_L\n        - 10GBASE_LR\n        - 10GBASE_LRM\n        - 10GBASE_LW\n        - 10GBASE_LX4\n        - 10GBASE_R\n        - 10GBASE_S\n        - 10GBASE_SR\n        - 10GBASE_SW\n        - 10GBASE_T\n        - 10GBASE_T1\n        - 10GBASE_W\n        - 10GBASE_X\n        - 25GBASE_CR\n        - 25GBASE_CR_S\n        - 25GBASE_ER\n        - 25GBASE_KR\n        - 25GBASE_KR_S\n        - 25GBASE_LR\n        - 25GBASE_SR\n        - 25GBASE_T\n        - 40GBASE_CR4\n        - 40GBASE_ER4\n        - 40GBASE_FR\n        - 40GBASE_KR4\n        - 40GBASE_LR4\n        - 40GBASE_R\n        - 40GBASE_SR4\n        - 40GBASE_T\n        - 50GBASE_CR\n        - 50GBASE_ER\n        - 50GBASE_FR\n        - 50GBASE_KR\n        - 50GBASE_LR\n        - 50GBASE_SR\n        - 100GBASE_CR10\n        - 100GBASE_CR2\n        - 100GBASE_CR4\n        - 100GBASE_DR\n        - 100GBASE_ER4\n        - 100GBASE_KP4\n        - 100GBASE_KR2\n        - 100GBASE_KR4\n        - 100GBASE_LR4\n        - 100GBASE_R\n        - 100GBASE_SR10\n        - 100GBASE_SR2\n        - 100GBASE_SR4\n        - 200GBASE_CR4\n        - 200GBASE_DR4\n        - 200GBASE_ER4\n        - 200GBASE_FR4\n        - 200GBASE_KR4\n        - 200GBASE_LR4\n        - 200GBASE_SR4\n        - 400GBASE_DR4\n        - 400GBASE_ER8\n        - 400GBASE_FR8\n        - 400GBASE_LR8\n        - 400GBASE_SR16\n        - 400GBASE_SR4_2\n        - 400GBASE_SR8\n        - OTHER\n      type: string\n    Price:\n      description: \u003e-\n        Provides all amounts (tax included, duty free, tax rate), used currency\n        and percentage to apply for Price Alteration.\n      properties:\n        taxRate:\n          description: 'Price Tax Rate. Unit: [%]. E.g. value 16 stand for 16% tax.'\n          format: float\n          type: number\n        taxIncludedAmount:\n          $ref: '#/components/schemas/Money'\n        dutyFreeAmount:\n          $ref: '#/components/schemas/Money'\n      required:\n        - dutyFreeAmount\n      type: object\n    ProductOfferingRef:\n      description: \u003e-\n        A reference to a Product Offering offered by the Seller to the Buyer. A\n        Product Offering contains the commercial and technical details of a\n        Product sold by a particular Seller. A Product Offering defines all of\n        the commercial terms and, through association with a particular Product\n        Specification, defines all the technical attributes and behaviors of the\n        Product. A Product Offering may constrain the allowable set of\n        configurable technical attributes and/or behaviors specified in the\n        associated Product Specification.\n      properties:\n        href:\n          description: \u003e\n            Hyperlink to a Product Offering in Sellers catalog. In case Seller\n            is not providing a catalog API this field is not used. The catalog\n            is provided by the Seller to the Buyer during onboarding.\n          type: string\n        id:\n          description: \u003e-\n            id of a Product Offering. It is assigned by the Seller. The Buyer\n            and the Seller exchange information about offerings' ids during the\n            onboarding process.\n          type: string\n      required:\n        - id\n      type: object\n    ProductPrice:\n      description: \u003e-\n        An amount, usually of money, that represents the actual price paid by a\n        Customer for a purchase, a rent or a lease of a Product. The price is\n        valid for a defined period of time.\n      properties:\n        unitOfMeasure:\n          description: 'Unit of Measure if price depending on it (Gb, SMS volume, etc..)'\n          type: string\n        price:\n          $ref: '#/components/schemas/Price'\n        name:\n          description: A short descriptive name such as \"Subscription price\".\n          type: string\n        priceType:\n          $ref: '#/components/schemas/MEFPriceType'\n        description:\n          description: \u003e-\n            A narrative that explains in detail the semantics of this product\n            price.\n          type: string\n        recurringChargePeriod:\n          $ref: '#/components/schemas/MEFChargePeriod'\n      required:\n        - price\n        - priceType\n      type: object\n    ProductRelationship:\n      description: \u003e-\n        A relationship to existing Product. The requirements for usage for given\n        Product are described in the Product Specification.\n      properties:\n        relationshipType:\n          description: \u003e-\n            Specifies the type (nature) of the relationship to the related\n            Product. The nature of required relationships vary for Products of\n            different types. For example, a UNI or ENNI Product may not have any\n            relationships, but an Access E-Line may have two mandatory\n            relationships (related to the UNI on one end and the ENNI on the\n            other). More complex Products such as multipoint IP or Firewall\n            Products may have more complex relationships. As a result, the\n            allowed and mandatory `relationshipType` values are defined in the\n            Product Specification.\n          type: string\n        id:\n          description: unique identifier\n          type: string\n        href:\n          description: Hyperlink of the referenced product\n          type: string\n      required:\n        - id\n        - relationshipType\n      type: object\n    ProductSpecificationRef:\n      description: \u003e-\n        A reference to a structured set of well-defined technical attributes\n        and/or behaviors that are used to construct a Product Offering for sale\n        to a market.\n      properties:\n        href:\n          description: \u003e\n            Hyperlink to a Product Specification in Sellers catalog. In case\n            Seller is not providing a catalog API this field is not used. The\n            catalog is provided by the Seller to the Buyer during onboarding.\n          type: string\n        id:\n          description: Unique identifier of the product specification\n          type: string\n      required:\n        - id\n      type: object\n    RelatedContactInformation:\n      description: |\n        Contact information of an individual or organization playing a role for\n        this Entity. The rule for mapping a represented attribute value to a\n        `role` is to use the _lowerCamelCase_ pattern e.g. \n        - Buyer Order Item Contact: `role=buyerOrderItemContact` \n        - Buyer Implementation Contact: `role=buyerImplementationContact` \n        - Buyer Technical Contact: `role=buyerTechnicalContact`\n      properties:\n        number:\n          description: Phone number\n          type: string\n        emailAddress:\n          description: Email address\n          type: string\n        role:\n          description: A role the party plays in a given context.\n          type: string\n        postalAddress:\n          $ref: '#/components/schemas/FieldedAddress'\n        organization:\n          description: The organization or company that the contact belongs to\n          type: string\n        name:\n          description: Name of the contact\n          type: string\n        numberExtension:\n          description: Phone number extension\n          type: string\n      required:\n        - emailAddress\n        - name\n        - number\n        - role\n      type: object\n    RelatedGeographicSite:\n      description: \u003e-\n        A  Geographic Site  and an associated role as installation address,\n        delivery address, etc....\n      properties:\n        role:\n          description: \u003e-\n            Role of the geographic site, such as: [home delivery], [shop\n            retrieval]) MEF: The role that the Site plays, e.g. Billing Address,\n            UNI Site, or ENNI Site.\n          type: string\n        id:\n          description: Unique identifier of the geographic site\n          type: string\n        href:\n          description: Hyperlink to the referenced geographic site\n          type: string\n      required:\n        - id\n        - role\n      type: object\n    RouteDistinguisherFields:\n      description: BGP Route Distinguisher with two fields.\n      properties:\n        field1:\n          description: Route Distinguisher field 1.\n          type: string\n        field2:\n          description: Route Distinguisher field 2.\n          type: string\n    RoutingProtocols:\n      description: \u003e-\n        Data type to support routing protocols and associated parameters that\n        are used to exchange IP routes across the UNI. The value is a list of\n        protocols (possibly empty), where each entry consists of the protocol\n        name (one of Static, OSPF or BGP) the type of routes that will be\n        exchanged (one of IPv4 or IPv6 or Both) and set of additional parameters\n        as specified.  Reference MEF 61.1 Section 12.7 UNI Routing Protocols\n        Service Attributes.\n      properties:\n        static:\n          description: Reference to Static routing\n          items:\n            $ref: '#/components/schemas/Static'\n          type: array\n        bgp:\n          description: Reference to BGP routing\n          items:\n            $ref: '#/components/schemas/Bgp'\n          minItems: 1\n          type: array\n        ospf:\n          description: Reference to OSPF routing.\n          items:\n            $ref: '#/components/schemas/Ospf'\n          minItems: 1\n          type: array\n      type: object\n    SVlanIdControl:\n      description: \u003e-\n        MEF 26.2 sec. 13.2 - The value of the S-VLAN ID Control Service\n        Attribute is FULL or PARTIAL. When the value is FULL, the Operator can\n        support only a single SP/SO at the ENNI. In other words, S-VLAN IDs at\n        the ENNI can only be mapped to OVC End Points for a single SP/SO. When\n        the value is PARTIAL, there can be multiple SP/SOs using the ENNI and\n        different S-VLAN IDs can be mapped to OVC End Points for different\n        SP/SOs.\n      enum:\n        - FULL\n        - PARTIAL\n      type: string\n    ServiceUptime:\n      description: \u003e-\n        The Service Uptime Performance Metric is the proportion of time, during\n        a given time period Tk, that the service is working from the perspective\n        of the Subscriber (for a Subscriber IP Service) or the  perspective of\n        the SP/SO (for an Operator IP Service), excluding any pre-agreed\n        exceptions, for  example maintenance intervals. Reference MEF 61.1[1]\n        Section 10.9 Service Uptime Performance Metric..\n      properties:\n        serviceUptimeObjective:\n          description: \u003e-\n            Service Uptime Objective. Reference MEF 61.1 Section 10.9.9 Service\n            Uptime Performance Metric, Table 9.\n          $ref: '#/components/schemas/Percentage'\n      type: object\n    SlsCosNameEntry:\n      description: \u003e-\n        This is the specification of Performance Metrics (and parameters) for\n        one Class of Service. The first element is the CoS Name. This MUST be\n        unique, i.e. there can not be two instances of this Class with the same\n        CoS Name. The CoS Name is followed by three parameters and then lists of\n        Performance Metrics.\n      properties:\n        thresholdC:\n          description: \u003e-\n            MEF 10.4 sec. 8.8 and MEF 26.2 sec. 12.13 - thresholdC is a real\n            number in the range [0,1] used as a threshold to determine whether a\n            given time interval ?tk has high loss.\n          maximum: 1\n          minimum: 0\n          type: number\n        oneWayConsecutiveHighLossIntervalsPmMetric:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.9 and MEF 26.2 sec. 12.13.9 -\n            oneWayConsecutiveHighLossIntervalsPmMetric is a reference to zero or\n            more instances of One Way Consecutive High Loss Intervals\n            Performance Metric. Each reference contains a set of parameters and\n            performance objective for the Performance Metric. If there are 0\n            instances then this Class of Service does not have an objective for\n            One Way CHLI. If there are multiple instances for this Class of\n            Service then at least one of the parameters must be different\n            between the instances.\n          items:\n            $ref: '#/components/schemas/OneWayConsecutiveHighLossIntervalsPmMetric'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        oneWayFrameDelayPmMetric:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.2 and MEF 26.2 sec. 12.13.2 -\n            oneWayFrameDelayPmMetric is a reference to zero or more instances of\n            One Way Frame Delay Performance Metric. Each reference contains a\n            set of parameters and performance objective for the Performance\n            Metric. If there are 0 instances then this Class of Service does not\n            have an objective for One Way Frame Delay. If there are multiple\n            instances for this Class of Service then at least one of the\n            parameters must be different between the instances.\n          items:\n            $ref: '#/components/schemas/OneWayFrameDelayPmMetric'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        oneWayInterFrameDelayVariationPmMetric:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.5 and MEF 26.2 sec. 12.13.5 -\n            oneWayInterFrameDelayVariationPmMetric is a reference to zero or\n            more instances of One Way Inter Frame Delay Variation Performance\n            Metric. Each reference contains a set of parameters and performance\n            objective for the Performance Metric. If there are 0 instances then\n            this Class of Service does not have an objective for One Way Inter\n            Frame Delay Variation. If there are multiple instances for this\n            Class of Service then at least one of the parameters must be\n            different between the instances.\n          items:\n            $ref: '#/components/schemas/OneWayInterFrameDelayVariationPmMetric'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        oneWayMeanFrameDelayPmMetric:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.3 and MEF 26.2 sec. 12.13.3 -\n            oneWayMeanFrameDelayPmMetric is a reference to zero or more\n            instances of One Way Mean Frame Delay Performance Metric. Each\n            reference contains a set of parameters and performance objective for\n            the Performance Metric. If there are 0 instances then this Class of\n            Service does not have an objective for One Way Mean Frame Delay. If\n            there are multiple instances for this Class of Service then at least\n            one of the parameters must be different between the instances.\n          items:\n            $ref: '#/components/schemas/OneWayMeanFrameDelayPmMetric'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        oneWayGroupAvailabilityPmMetric:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.11 and MEF 26.2 sec. 12.13.10 -\n            oneWayGroupAvailabilityPmMetric is a reference to zero or more\n            instances of One Way Group Availability Performance Metric. Each\n            reference contains a set of parameters and performance objective for\n            the Performance Metric. If there are 0 instances then this Class of\n            Service does not have an objective for One Way Group Availability.\n            If there are multiple instances for this Class of Service then at\n            least one of the parameters must be different between the instances.\n          items:\n            $ref: '#/components/schemas/OneWayAvailabilityPmMetric'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        oneWayAvailabilityPmMetric:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.7 and MEF 26.2 sec. 12.13.7 -\n            oneWayAvailabilityPmMetric is a reference to zero or more instances\n            of One Way Availability Performance Metric. Each reference contains\n            a set of parameters and performance objective for the Performance\n            Metric. If there are 0 instances then this Class of Service does not\n            have an objective for One Way Availability. If there are multiple\n            instances for this Class of Service then at least one of the\n            parameters must be different between the instances.\n          items:\n            $ref: '#/components/schemas/OneWayAvailabilityPmMetric'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        oneWayHighLossIntervalsPmMetric:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.8 and MEF 26.2 sec. 12.13.8 -\n            oneWayHighLossIntervalsPmMetric is a reference to zero or more\n            instances of One Way High Loss Intervals Performance Metric. Each\n            reference contains a set of parameters and performance objective for\n            the Performance Metric. If there are 0 instances then this Class of\n            Service does not have an objective for One Way HLI. If there are\n            multiple instances for this Class of Service then at least one of\n            the parameters must be different between the instances.\n          items:\n            $ref: '#/components/schemas/OneWayHighLossIntervalPmMetric'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        oneWayCompositePmMetric:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.10 - oneWayCompositePmMetric is a reference to\n            zero or more instances of One Way Composite Performance Metric. Each\n            reference contains a set of parameters and performance objective for\n            the Performance Metric. If there are 0 instances then this Class of\n            Service does not have an objective for One Way Composite\n            Performance. If there are multiple instances for this Class of\n            Service then at least one of the parameters must be different\n            between the instances.\n          items:\n            $ref: '#/components/schemas/OneWayCompositePmMetric'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        oneWayFrameLossRatioPmMetric:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.6 and MEF 26.2 sec. 12.13.6 -\n            oneWayFrameLossRatioPmMetric is a reference to zero or more\n            instances of One Way Frame Loss Ratio Performance Metric. Each\n            reference contains a set of parameters and performance objective for\n            the Performance Metric. If there are 0 instances then this Class of\n            Service does not have an objective for One Way Frame Loss Ratio. If\n            there are multiple instances for this Class of Service then at least\n            one of the parameters must be different between the instances.\n          items:\n            $ref: '#/components/schemas/OneWayFrameLostRatioPmMetric'\n          maxItems: 1\n          minItems: 0\n          type: array\n          uniqueItems: true\n        consecutiveIntervalN:\n          description: \"MEF 10.4 sec. 8.8 and MEF 26.2 sec. 12.13 - consectiveIntervalN is an integer ? 1, used to identify how many consecutive ?\\U0001D461\\U0001D458 intervals must have high loss to trigger a change in Availability.\"\n          minimum: 1\n          type: integer\n        deltaT:\n          description: \u003e-\n            MEF 10.4 sec. 8.8 and MEF 26.2 sec. 12.13 - deltaT is a time\n            duration in seconds much smaller than timeInterval. This is used,\n            primarily, in calculations associated with Availability, High Loss\n            Intervals and Consecutive High Loss Intervals. MEF 10.4 and MEF 26.2\n            refer to this as ?t and the k-th interval starting at ts is referred\n            to as ?tk (k is subscript).\n          minimum: 1\n          type: integer\n        oneWayFrameDelayRangePmMetric:\n          description: \u003e-\n            MEF 10.4 sec. 8.8.4 and MEF 26.2 sec. 12.13.4 -\n            oneWayFrameDelayRangePmMetric is a reference to zero or more\n            instances of One Way Frame Delay Range Performance Metric. Each\n            reference contains a set of parameters and performance objective for\n            the Performance Metric. If there are 0 instances then this Class of\n            Service does not have an objective for One Way Frame Delay Range. If\n            there are multiple instances for this Class of Service then at least\n            one of the parameters must be different between the instances.\n          items:\n            $ref: '#/components/schemas/OneWayFrameDelayRangePmMetric'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        cosName:\n          description: This is the CoS Name for this PM Entry.\n          minLength: 1\n          type: string\n      type: object\n    SlsReferencePoint:\n      description: \u003e-\n        SlsReferencePoint is an abstract data type that can be subclassed to\n        IpvcEndPoint and Location. Reference MEF 61.1 Section 10.9.1 SLS\n        Reference Points.\n      type: object\n    SlsRpPair:\n      description: \u003e-\n        Service Level Specification Reference Point Pair. In a multipoint or\n        rooted multipoint IPVC, performance objectives are ideally specified as\n        applying between pairs of IPVC EPs - in other words, they apply to the\n        performance that IP Data Packets experience as they flow from one EI to\n        another. The SlsRpPair is a representation of this association.\n        Reference MEF 61.1 Section 10.9.1\n      properties:\n        toSlsReferencePoint:\n          description: Pointer to the \"to\" SLS Reference Point.\n          $ref: '#/components/schemas/SlsReferencePoint'\n        fromSlsReferencePoint:\n          description: Pointer to the \"from\" SLS Reference Point.\n          $ref: '#/components/schemas/SlsReferencePoint'\n      type: object\n    SourceMacAddressLimit:\n      description: \u003e-\n        This limits the number of source MAC addresses that can be used in\n        ingress  frame mapped to the End Point of all types over a time\n        interval. It is a recommendation that each Ingress EI Frame with a\n        source MAC address that would exceed the limit be discarded by the\n        Carrier Ethernet Network.\n      properties:\n        limit:\n          description: \u003e-\n            The number of MAC source addresses that will not subject an Ingress\n            EI Frame to discard during the time interval.\n          minimum: 1\n          type: integer\n        interval:\n          description: \u003e-\n            The time interval in seconds over which the source address limit is\n            evaluated\n          $ref: '#/components/schemas/TimeDuration'\n      type: object\n    Static:\n      description: \u003e-\n        When an entry in the UNI Routing Protocols list is for Static, the IP\n        Prefixes used in the Subscriber Network that are reachable via this UNI\n        are specified as additional parameters in the entry. These are known as\n        Static IP Prefixes. Reference MEF 61.1 Section 12.7.1 Static.\n      properties:\n        staticIpEntry:\n          description: Static IP address entry.\n          items:\n            $ref: '#/components/schemas/StaticIpEntry'\n          minItems: 1\n          type: array\n      type: object\n    StaticIpEntry:\n      description: \u003e-\n        StaticIpEntry data type including IPv4/IPv6 prefixes, forwarding\n        information and administrative distance.\n      properties:\n        staticPrefix:\n          description: Static IP prefix either IPv4 or IPv6.\n          $ref: '#/components/schemas/Ipv4Ipv6Prefixes'\n        administrativeDistance:\n          description: 'Administrative distance, an integer \u003e 0.'\n          type: integer\n        forwardingInformation:\n          description: \u003e-\n            Forwarding information with either Next Hop IP address or UNI Access\n            Link identifier.\n          $ref: '#/components/schemas/ForwardingInformation'\n      type: object\n    SubscriberUniCommon:\n      description: \u003e-\n        This class contains all of the Subscriber UNI Services Attributes.. This\n        class is used to compose the SubscriberUNI class.\n      properties:\n        listOfPhyLinks:\n          description: \u003e-\n            MEF 10.4 sec. 9.4 - The value of the Subscriber UNI List of Physical\n            Links Service Attribute is a list of 5-tuples of the form ?id,\n            physicalLink, synchronousEthernet, precisionTiming,\n            demarcConnectorType, gender?, with one list item for each physical\n            link. The value of id is an identifier for the physical link. The\n            value of physicalLink is the specific Ethernet physical layer type.\n            synchronousEthernet indicates if synchronous Ethernet is used on the\n            physical link and has the value Enabled or Disabled. The value of\n            precisionTiming indicates if the Precision Time Protocol is used on\n            the physical link and has the value Enabled or Disabled. The value\n            of demarcConnectorType specifies the type of connector used. Note\n            that the id and the physicalLink come from the\n            CarrierEthernetPhysicalLink class.\n          items:\n            $ref: '#/components/schemas/UniPhysicalLink'\n          minItems: 0\n          type: array\n          uniqueItems: false\n        virtualFrameMap:\n          description: \u003e-\n            MEF 10.4 sec. 9.2 and sec. 9.3 - When the value of the Subscriber\n            UNI Instantiation Service Attribute = Virtual there must exist a map\n            that maps the set of Virtual Frames that cross the UNI to a sequence\n            of pairs of the form ?s,t? where s is a standard Ethernet frame per\n            Clause 3 of IEEE Std 802.3 � 2015 [5] and t is the arrival time at\n            the UNI for all bits in s. Since MEF 10.4 does not specify the\n            contents or format of this map, it is currently defined as an\n            arbitrary length string.\n          items:\n            $ref: '#/components/schemas/VirtualFrameMap'\n          maxItems: 1\n          minItems: 0\n          type: array\n          uniqueItems: true\n        portConversation:\n          description: \u003e-\n            MEF 10.4 sec. 9.6 - A mapping of Port Conversation IDs (i.e., VLAN\n            IDs or zero for untagged frames) to an ordered list of physical\n            links if there are multiple physical links in the UNI and the link\n            aggregation is ALL_ACTIVE.\n          items:\n            $ref: '#/components/schemas/ConversationIdToAggregationLinkMap'\n          minItems: 0\n          type: array\n          uniqueItems: false\n        maximumNumberOfEndPoints:\n          description: \u003e-\n            MEF 10.4 sec. 9.9 - The maximum number of EVC End Points that can be\n            supported at the UNI\n          maximum: 4094\n          minimum: 1\n          type: integer\n        lagLinkMeg:\n          description: \u003e-\n            MEF 10.4 sec. 9.15 - Indicates if the Service Provider has\n            instantiated a LAG Link MEG End Point (MEP) on each physical link in\n            the UNI if the UNI has more than one physical link (ENABLED) or not\n            (DISABLED).\n          $ref: '#/components/schemas/EnabledDisabled'\n        l2cpAddressSet:\n          description: \u003e-\n            MEF 10.4 sec. 9.16 and MEF 45.1 sec. 8.1 - L2CP Address Set Service\n            Attribute is defined in MEF 45.1. CTA CEVLAN Tag Aware for\n            VLAN-based services where the CE-VLAN ID is used to map a frame to a\n            service. CTB CVLAN Tag Blind for Port-based services where the\n            CE-VLAN ID not used to map a frame to a service. CTB2 CVLAN Tag\n            Blind Option 2 for point-to-point Port-based services that support\n            the EPL Option 2 L2CP processing.\n          $ref: '#/components/schemas/L2cpAddressSet'\n        linkOAM:\n          description: \u003e-\n            MEF 10.4 sec. 9.13 - Controls when and how Link OAM per IEEE Std\n            802.3-2015 is run on the physical links in the UNI.\n          $ref: '#/components/schemas/EnabledDisabled'\n        meg:\n          description: \u003e-\n            MEF 10.4 sec. 9.14 - Indicates if the Service Provider has\n            instantiated a MEG End Point (MEP) at the UNI Maintenance Entity\n            Group (MEG) Level (ENABLED) or not (DISABLED).\n          $ref: '#/components/schemas/EnabledDisabled'\n        linkAggregation:\n          description: \u003e-\n            MEF 10.4 sec. 9.5 - Data type representing Link Aggregation types.\n            NONE-No Link Aggregation is used. 2_LINK_ACTIVE_STANDBY-The SP\n            network uses Link Aggregation as in either Clause 5.6.1 of IEEE Std\n            802.1AX-2008 [2] or Clause 6.7.1 of IEEE Std 802.1AX-2014 with one\n            Link Aggregation Group(LAG) across the links supporting the UNI/ENNI\n            such that all Service Frames are carried on only one of the two\n            links when both links are operational. ALL_ACTIVE-The SP Network\n            uses Link Aggregation as specified in Clause 5.3 of IEEE Std\n            802.1AX-2014, including the use of the version 2 LACPDUs as\n            specified in Clause 5.3.1h of IEEE Std 802.1AZ-2014, with one Link\n            Aggregation Group (LAG) across the links. OTHER-The\n            Operator/Subscriber/Service Provider agree on another other\n            resiliency mechanism.\n          $ref: '#/components/schemas/LinkAggType'\n        l2cpPeering:\n          description: \u003e-\n            MEF 10.4 sec. 9.17 and MEF 45.1 sec. 8.2 - L2CP Peering Service\n            Attribute defined in MEF 45.1 specifies which protocols, if any, are\n            peered at the UNI. The L2CP Peering service attribute value must be\n            an empty list, or a list of entries identifying protocols to be\n            Peered where each entry consists of {Destination Address, Protocol\n            Identifier} or {Destination Address, Protocol Identifier, Link\n            Identifier}.\n          $ref: '#/components/schemas/L2cpPeering'\n        maximumNumberOfCtagVlanIdsPerEndPoint:\n          description: \u003e-\n            MEF 10.4 sec. 9.10 - An integer greater than or equal to 1 that\n            limits the number of C-Tag VLAN IDs that can map to each EVC End\n            Point.\n          maximum: 4094\n          minimum: 1\n          type: integer\n        tokenShare:\n          description: \u003e-\n            MEF 10.4 sec. 9.11 - An attribute that indicates whether Bandwidth\n            Profile Envelopes containing more than one Bandwidth Profile Flow\n            are supported by the Service Provider at the Subscriber UNI.\n          $ref: '#/components/schemas/EnabledDisabled'\n        maximumServiceFrameSize:\n          description: \u003e-\n            MEF 10.4 sec. 9.8 - Specifies the maximum size of Service Frames\n            that can be transmitted across UNI.\n          minimum: 1522\n          type: integer\n        envelopes:\n          description: \u003e-\n            MEF 10.4 sec. 9.12 - The Envelopes and Envelope Coupling Flag values\n            to which Bandwidth Profile Flows can be mapped. Value is None or\n            non-empty list of {envelopeID, couplingFlagForIndexZero}. If this\n            property is an empty list, the value is assumed to have the value\n            None.\n          items:\n            $ref: '#/components/schemas/Envelope'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        instantiation:\n          description: \u003e-\n            MEF 10.4 sec. 9.2 - When the value is Physical, the UNI is\n            implemented using one or more instances of a standard Physical\n            Layer. When the value is Virtual, the physical layer is not\n            specified.\n          $ref: '#/components/schemas/Instantiation'\n      type: object\n    TaggedL2cpFrameProcessing:\n      description: \u003e-\n        MEF 26.2 sec. 10.2 and MEF 45 sec. 8.3 - Reflects the capability of the\n        ENNI to process S-VLAN-tagged L2CP Frames in an 802.1 compliant manner.\n        The allowed values are �802_1_COMPLIANT� or �802_1_NON_COMPLIANT�. A\n        value of 802_1_COMPLIANT means the ENNI will apply the special\n        forwarding rules to Tagged L2CP ENNI Frames that map to a VUNI or an OVC\n        End Point supporting a service other than EPL with EPL Option 2 L2CP\n        processing. A value of 802_1_NON_COMPLIANT means the ENNI will pass any\n        Tagged L2CP ENNI Frames. There is an ENNI Tagged L2CP Frame Processing\n        Multilateral Attribute for each ENNI.\n      enum:\n        - 802_1_COMPLIANT\n        - 802_1_NON_COMPLIANT\n      type: string\n    TimeDuration:\n      description: \u003e-\n        This class is used to describe durations expressed as a 2-tuple, (value,\n        units). The units from from nanoseconds to years.\n      properties:\n        timeDurationValue:\n          description: \u003e-\n            The value of the duration. For example, if the duration is 20 ms,\n            this element is 20.\n          type: integer\n        timeDurationUnits:\n          description: \u003e-\n            The unit of measure in the duration. For example, if an interval is\n            2ms, this element is MS.\n          $ref: '#/components/schemas/TimeDurationUnits'\n      type: object\n    TimeDurationUnits:\n      description: Enum listing the units of measure for a Time Duration\n      enum:\n        - NS\n        - US\n        - MS\n        - SEC\n        - MIN\n        - HOUR\n        - DAY\n        - WEEK\n        - MONTH\n        - YEAR\n      type: string\n    TimeUnit:\n      description: |\n        Represents a unit of time.\n        Reference: MEF 79 (Sn 8.4.3.1/8.4.3.2)\n      enum:\n        - calendarMonths\n        - calendarDays\n        - calendarHours\n        - calendarMinutes\n        - businessDays\n        - businessHours\n        - businessMinutes\n      type: string\n    UniConnectorGender:\n      description: \u003e-\n        This indicates whether the Subscriber is presented with a SOCKET\n        (common) or a PLUG (less common).\n      enum:\n        - SOCKET\n        - PLUG\n      type: string\n    UniConnectorType:\n      description: \u003e-\n        This indicates the type of connector that is presented to the\n        Subscriber.\n      enum:\n        - SC\n        - LC\n        - RJ45\n        - OTHER\n      type: string\n    UniManagementType:\n      description: \u003e-\n        Enumeration representing the UNI Management Type options. Reference MEF\n        61.1 Section 12.2 UNI Management Type Service Attribute.\n      enum:\n        - SUBSCRIBER_MANAGEMENT\n        - PROVIDER_MANAGEMENT\n      type: string\n    UniPhysicalLink:\n      allOf:\n        - $ref: '#/components/schemas/CarrierEthernetPhysicalLink'\n        - $ref: '#/components/schemas/UniSpecificAttributes'\n      description: \u003e-\n        This class describes the Physical Link attributes at a UNI. It is a\n        6-tuple ?id, phy, frequency sync enable, PTP enable, connector, gender?.\n    UniSpecificAttributes:\n      properties:\n        uniConnectorGender:\n          description: \u003e-\n            This indicates whether the Subscriber is presented with a SOCKET\n            (common) or a PLUG (less common).\n          $ref: '#/components/schemas/UniConnectorGender'\n        synchronousEthernet:\n          description: \u003e-\n            Indicates if synchronous Ethernet is used on the physical link and\n            has the value either Enabled or Disabled.\n          $ref: '#/components/schemas/EnabledDisabled'\n        uniConnectorType:\n          description: \u003e-\n            This indicates the type of connector that is presented to the\n            Subscriber.\n          $ref: '#/components/schemas/UniConnectorType'\n        precisionTiming:\n          description: \u003e-\n            Indicates if the Precision Time Protocol is used on the physical\n            link and has the value either Enabled or Disabled\n          $ref: '#/components/schemas/EnabledDisabled'\n      type: object\n    VirtualFrameMap:\n      description: \u003e-\n        A map for virtual frame mapping.   The absence of this attribute\n        corresponds to a Service Attribute value of Not Applicable. Reference\n        MEF 10.4 Section 9.3 Subscriber UNI Virtual Frame Map Service Attribute.\n      properties:\n        vfMap:\n          description: \u003e-\n            MEF 10.4 sec. 9.2 and sec. 9,3 - When the value of the Subscriber\n            UNI Instantiation Service Attribute = Virtual, there must exist a\n            map that maps the set of Virtual Frames that cross the UNI to a\n            sequence of pairs of the form?s,t where s is a standard Ethernet\n            frame per Clause 3 of IEEE Std 802.3 � 2015 [5] and t is the arrival\n            time at the UNI for all bits in s. Since MEF 10.4 does not specify\n            the contents or format of this map, it is currently defined as an\n            arbitrary length string.\n          minLength: 0\n          type: string\n      type: object\n    VlanType:\n      description: \u003e-\n        An indication of the type of EVC End Point Map. If the value is UT/PT\n        then no additional information is required. If the value is LIST then a\n        list of C-VLAN ID values must be specified.\n      enum:\n        - LIST\n        - UT/PT\n      type: string\n    Vrid:\n      description: \u003e-\n        VRID (Virtual Router ID) as defined in RFC 5798 is a number between 1\n        and 255\n      maximum: 255\n      minimum: 1\n      type: integer\n",
			"canonicalURL": "/github.com/MEF-GIT/MEF-LSO-Sonata-SDK@ef4fcf652dd4a677be8987165b49de9eeab988f9/-/blob/generated/staticBinding/full/productInventoryManagement.api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/MEF-GIT/MEF-LSO-Sonata-SDK/blob/ef4fcf652dd4a677be8987165b49de9eeab988f9/generated/staticBinding/full/productInventoryManagement.api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: control characters are not allowed"
}