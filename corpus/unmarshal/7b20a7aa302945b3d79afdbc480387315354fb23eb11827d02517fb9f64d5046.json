{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/openl-tablets/openl-tablets"
		},
		"file": {
			"name": "reusablebody.yml",
			"size": 0,
			"path": "Util/openl-openapi-parser/test-resources/test.converter/reusable_body/reusablebody.yml",
			"byteSize": 3725,
			"content": "openapi: 3.0.1\r\ninfo:\r\n  title: Example-ReusableBody\r\n  version: 1.0.0\r\nservers:\r\n  - url: /webservice/REST/ReusableBody\r\n    variables: {}\r\npaths:\r\n  /pets:\r\n    post:\r\n      summary: Add a new pet\r\n      requestBody:\r\n        $ref: '#/components/requestBodies/Pet'\r\n      responses:\r\n        '200':\r\n          description: OK\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/Pet'\r\n  /pets1:\r\n    post:\r\n      summary: Add a new pet\r\n      requestBody:\r\n        $ref: '#/components/requestBodies/Pet'\r\n      response:\r\n        '200':\r\n          - $ref: '#/components/responses/DogResponse'\r\n  /inlinePets:\r\n    post:\r\n      summary: inlinesubmit\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              type: object\r\n              properties:\r\n                dogName:\r\n                  type: String\r\n      responses:\r\n        '200':\r\n          description: kk\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  dogSize:\r\n                    type: String\r\n  /pets/{petId}:\r\n    put:\r\n      summary: Update a pet\r\n      requestBody:\r\n        $ref: '#/components/requestBodies/Pet'\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/responses/Pets'\r\n  /pets1/{petId}:\r\n    put:\r\n      summary: Update a pet\r\n      requestBody:\r\n        $ref: '#/components/requestBodies/PetRequestNew'\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/requestBodies/PetRequestNew'\r\ncomponents:\r\n  responses:\r\n    Leg4Response:\r\n      content:\r\n        application/json:\r\n          schema:\r\n            - $ref: '#/components/schemas/Animal'\r\n    DogResponse:\r\n      content:\r\n        application/json:\r\n          schema:\r\n            - $ref: '#/components/responses/Leg4Response'\r\n    CatResponse:\r\n      content:\r\n        application/json:\r\n          schema:\r\n            - $ref: '#/components/responses/Leg4Response'\r\n    Pets:\r\n      description: Array of pets\r\n      required: true\r\n      content:\r\n        application/json:\r\n          schema:\r\n            type: array\r\n            items:\r\n              $ref: '#/components/schemas/Pet'\r\n  requestBodies:\r\n    Pet:\r\n      description: A JSON object containing pet information\r\n      required: true\r\n      content:\r\n        application/json:\r\n          schema:\r\n            $ref: '#/components/schemas/Pet'\r\n        text/plain:\r\n          schema:\r\n            $ref: '#/components/schemas/NamedPet'\r\n    PetRequestNew:\r\n      description: A JSON object containing pet information\r\n      required: true\r\n      content:\r\n        application/json:\r\n          schema:\r\n            allOf:\r\n              - $ref: '#/components/schemas/Pet'\r\n              - type: object\r\n                properties:\r\n                  test:\r\n                    type: string\r\n        text/plain:\r\n          schema:\r\n            $ref: '#/components/schemas/NamedPet'\r\n  schemas:\r\n    Pet:\r\n      type: object\r\n      properties:\r\n        pet_type:\r\n          type: string\r\n    NamedPet:\r\n      type: object\r\n      properties:\r\n        name:\r\n          type: string\r\n    MappedPets:\r\n      type: object\r\n      additionalProperties:\r\n        $ref: '#/components/schemas/Pet'\r\n    DictionaryExample:\r\n      type: object\r\n      additionalProperties:\r\n        type: string\r\n      example:\r\n        en: Hello\r\n        ru: Privet\r\n    Animal:\r\n      type: object\r\n      properties:\r\n        x:\r\n          type: string",
			"canonicalURL": "/github.com/openl-tablets/openl-tablets@daf704ca576f2d699e02bcfae1cf9f0bab2234fc/-/blob/Util/openl-openapi-parser/test-resources/test.converter/reusable_body/reusablebody.yml",
			"externalURLs": [
				{
					"url": "https://github.com/openl-tablets/openl-tablets/blob/daf704ca576f2d699e02bcfae1cf9f0bab2234fc/Util/openl-openapi-parser/test-resources/test.converter/reusable_body/reusablebody.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 1: cannot unmarshal !!seq into ogen.Schema; yaml: line 1: cannot unmarshal !!seq into ogen.Schema; yaml: line 1: cannot unmarshal !!seq into ogen.Schema"
}