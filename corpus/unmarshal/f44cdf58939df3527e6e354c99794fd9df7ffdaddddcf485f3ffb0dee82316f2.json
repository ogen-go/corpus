{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "npm/openapi-to-postmanv2"
		},
		"file": {
			"name": "strictRequestMatchingSpec.yaml",
			"size": 0,
			"path": "test/data/31CollectionTransactions/validateOptions/strictRequestMatchingSpec.yaml",
			"byteSize": 1921,
			"content": "openapi: \"3.1.0\"\ninfo:\n  version: 1.0.0\n  title: Validation Option tests\n  license:\n    name: MIT\nservers:\n  - url: http://petstore.swagger.io/v1\npaths:\n  /users/admin/{userId}:\n    get:\n      description: /users/admin/{userId}\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: \n              - string\n      responses:\n        '200':\n          description: /users/admin/{userId}\n          content:\n            application/json:\n              schema:\n                type: \n                  - object\n                properties:\n                  id:\n                    type: \n                      - integer\n                    format: int64\n                  name:\n                    type: \n                      - string\n  /users/admin/profile:\n    get:\n      description: /users/admin/{userId}\n      responses:\n        '200':\n          description: /users/admin/profile\n          content:\n            application/json:\n              schema:\n                type: \n                  - object\n                properties:\n                  id:\n                    type: \n                      - integer\n                    format: int64\n                  name:\n                    type: \n                      - string\n  /admin/{adminId}:\n    get:\n      description: /admin/{adminId}\n      parameters:\n        - name: adminId\n          in: path\n          required: true\n          schema:\n            type: \n              - string\n      responses:\n        '200':\n          description: /admin/{adminId}\n          content:\n            application/json:\n              schema:\n                type: \n                  - object\n                properties:\n                  id:\n                    type: \n                      - integer\n                    format: int64\n                  name:\n                    type: \n                      - string\n"
		}
	},
	"Error": "unmarshal: callback: json: cannot unmarshal array into Go struct field Schema.type of type string"
}