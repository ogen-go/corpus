{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/webasyst/webasyst-framework"
		},
		"file": {
			"name": "v1.yaml",
			"size": 0,
			"path": "wa-apps/team/api/swagger/v1.yaml",
			"byteSize": 8438,
			"content": "openapi: 3.0.0\ninfo:\n  title: 'Team API'\n  version: 1.0.0\nservers:\n  - url: /api.php\n    description: Current host server\n\npaths:\n  /team.groups.getList:\n    get:\n      security:\n        - BearerAuth: [ ]\n      summary: Get list of groups\n      parameters:\n        - in: query\n          name: filter[type]\n          description: |\n            Group type:\n            + group - functional group\n            + location - office, territorial group\n          schema:\n            type: string\n            enum:\n              - group\n              - location\n            nullable: true\n            example: location\n      responses:\n        200:\n          description: Returns group list.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/group'\n        403:\n          description: A police officer is waiting for you at the entrance. \n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n        400:\n          description: Invalid request. Learn the materiel!\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n        500:\n          description: Call the proctolog, please\n  /team.users.getList:\n    get:\n      security:\n        - BearerAuth: [ ]\n      summary: Get list of users\n      parameters:\n        - in: query\n          name: filter[group_id]\n          description: Group ids\n          schema:\n            type: array\n            items:\n              type: integer\n              minimum: 1\n            nullable: true\n        - in: query\n          name: filter[access][]\n          description: App ids where user can access\n          schema:\n            type: array\n            items:\n              type: string\n            nullable: true\n      responses:\n        200:\n          description: Returns user list.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/user'\n        403:\n          description: A police officer is waiting for you at the entrance. \n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n        400:\n          description: Invalid request. Learn the materiel!\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n        500:\n          description: Call the proctolog, please\n  /team.users.invite:\n    post:\n      security:\n        - BearerAuth: [ ]\n      summary: Create new user invitation\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                email:\n                  type: string\n                  format: email\n                  description: New user email\n                  required: true\n                send:\n                  type: boolean\n                  description: Send invitation to email if true. In false case return URL for invitation confirmation.\n      responses:\n        200:\n          description: Returns result.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  contact_id:\n                    type: integer\n                    description: Invited user contact ID\n                  invitation_link:\n                    type: string\n                    format: uri\n                    description: URL for invitation confirmation\n        403:\n          description: A police officer is waiting for you at the entrance. \n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n        400:\n          description: Invalid request. Learn the materiel!\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n        500:\n          description: Call the proctolog, please\n\ncomponents:\n  securitySchemes:\n    ApiKeyAuth:\n      type: apiKey\n      in: query\n      name: access_token\n    BearerAuth:\n      type: http\n      scheme: bearer\n\n  schemas:\n    group:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: Group identifier\n        name:\n          type: string\n          description: The group name\n        cnt:\n          type: integer\n          description: The number of users in the group \n        type:\n          type: string\n          enum:\n            - \"group\"\n            - \"location\"\n          description: Group type\n        description:\n          type: string\n          description: Group description\n    user:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: User contact ID\n        name:\n          type: string\n          description: Full contact name\n        firstname:\n          type: string\n          description: Contact first name\n        lastname:\n          type: string\n          description: Contact last name\n        middlename:\n          type: string\n          description: Contact middle name\n        company:\n          type: string\n          description: Contact company name\n        jobtitle:\n          type: string\n          description: Contact job title\n        login:\n          type: string\n          description: Contact login name\n        email:\n          description: List of user emails\n          type: array\n          items:\n            type: string\n            format: email\n        phone:\n          description: List of user phones\n          type: array\n          items:\n            type: object\n            properties:\n              value:\n                type: string\n                description: Phone number\n              ext:\n                type: string\n                description: Phone type classification \n                nullable: true\n              status:\n                type: string\n                description: Phone status - confirmed or not\n                enum:\n                  - confirmed\n                  - unconfirmed\n                nullable: true\n        locale:\n          type: string\n          description: Contact locale\n        create_datetime:\n          type: string\n          format: date-time\n          description: The time user was created\n        last_datetime:\n          type: string\n          format: date-time\n          description: The last user activity time\n        birth_day:\n          type: integer\n          description: The users day of birth\n        birth_month:\n          type: integer\n          description: The users month of birth\n        userpic:\n          type: string\n          format: uri\n          description: URL to user profile photo\n        userpic_original_crop:\n          type: string\n          format: uri\n          description: URL to user profile photo original uploaded size\n        userpic_uploaded:\n          type: boolean\n          description: Wether user uploaded photo to profile\n        userpic_thumbs:\n          type: object\n          description: URLs to user profile photo thimbs\n          properties:\n            '16':\n              type: string\n              format: uri\n              description: URL to user profile photo thumb 16*16\n            '32':\n              type: string\n              format: uri\n              description: URL to user profile photo thumb 32*32\n            '96':\n              type: string\n              format: uri\n              description: URL to user profile photo thumb 96*96\n            '144':\n              type: string\n              format: uri\n              description: URL to user profile photo thumb 144*144\n        group_id:\n          type: array\n          description: List of user group ids\n          items:\n            type: integer\n        _event:\n          type: string\n          description: User current status\n        _online_status:\n          type: string\n          description: User current online status\n    errorResponse:\n      type: object\n      properties:\n        error:\n          type: string\n          description: Error code\n        error_description:\n          type: string\n          description: Error description\n\n"
		}
	},
	"Error": "unmarshal: callback: json: cannot unmarshal bool into Go struct field Schema.required of type []string"
}