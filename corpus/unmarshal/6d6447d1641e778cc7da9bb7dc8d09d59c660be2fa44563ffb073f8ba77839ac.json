{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "openapi/iris.disputeresponder/openapi.yml",
			"byteSize": 389484,
			"content": "openapi: 3.0.3\ninfo:\n  title: IRIS API\n  description: |\n    This is a generated connector for [IRIS Dispute responder API v1.6.4](https://www.iriscrm.com/api) OpenAPI specification.\n    IRIS CRM's revolutionary new Dispute Responder offers complete, end-to-end dispute management, including instant online notification of new disputes, electronic response submission, and complete record management for Fiserv merchants, all from right within IRIS CRM.\n  x-ballerina-init-description: >\n    The connector initialization requires setting the API credentials. \n  \n    Create a [IRIS account](https://www.iriscrm.com) and obtain tokens by following [this guide](https://www.iriscrm.com/api/#section/Generate-an-API-token).\n  x-ballerina-display:\n    label: IRIS Dispute Responder\n    iconPath: \"icon.png\"\n  version: 1.6.4\n  contact:\n    email: \"support@iriscrm.com\"\n  x-logo:\n    url: 'logo.png'\n\ntags:\n  - name: \"E-Signature\"\n    description: \"Connect with the E-Signature API to create workflows that send specific documents for e-signature documents.<br/><br/>Create field mappings between Lead fields to populate their respective PDF documents.<br/><br/>Receive notifications when documents are generated, opened, and signed by recipients.\"\n  - name: \"Helpdesk\"\n    description: \"Connect with the Helpdesk API to work with your ticket data.  Helpdesk tickets are organized by ticket types.<br/><br/>Ticket types have properties such as assigned users, expected time to completion (SLA), and visibility to help you segment tickets based on job descriptions.<br/><br/>Get detailed helpdesk ticket information, perform updates, and manage attached files with ease by using the Helpdesk API.\"\n  - name: \"Leads\"\n    description: \"Connect with the Leads API to interact with your lead data.  Includes management of fields, user assignments, status changes, tasks, appointments, email, text messaging, and document attachments.<br/><br/>Create custom reports without limits using the data already housed within your CRM.\"\n\n  - name: \"Merchants\"\n    description: \"Populate your data warehouse programmatically through this Merchants API and interact with your merchant services portfolio.  Data points include merchant demographics, deposits, transactions, retrievals, chargebacks, and statements across supported processors.<br/><br/>Each merchant account is accessible by users through a set of permissions controlled on the User Class level.<br/><br/>Segment your portfolio of merchants by filters such as processor, data source, and processing status.\"\n\n  - name: \"Residuals\"\n    description: \"Populate your data warehouse programmatically through this Residuals API and interact with your monthly residuals income calculations, line items, and user compensation data.<br/><br/>Line items give you control with the ability to add income or expense calculations that are outside of any residual reports.<br/><br/>Receive instant notifications when new residual reports are published or when line items are added.\"\n\n  - name: \"DisputeResponder\"\n    description: \"\"\n\n  \n  - name: \"Subscriptions\"\n    description: \"Connect with the Subscriptions API to create, view, and manage your event notification subscriptions.  A webhook listener URL is required from you to be able to create the subscription and receive notifications.<br/><br/>Learn about API updates and new endpoints by subscribing to the [api.updated](https://iriscrm.com/api/#/paths/~1subscriptions~1sample~1api.updated/get) event.<br/><br/>Receive alerts in real-time including lead status changes, e-signature document actions, and helpdesk ticket changes.<br/><br/>Subscription API responses provide you with detailed information on a silver platter to avoid sorting through data unnecessarily.\"\n\ncomponents:\n  securitySchemes:\n    Token:\n      type: apiKey\n      in: header\n      name: X-API-KEY\n      description: Represents API Key `X-API-KEY`\n  responses:\n    UnauthorizedError:\n      description: API key is missing or invalid\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              message:\n                type: string\n                example: \"Unauthenticated\"\n    ForbiddenError:\n      description: Not enough permissions\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              message:\n                type: string\n                example: \"Access denied\"\n    NotFoundError:\n      description: Resource not found\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              message:\n                type: string\n                example: \"Not found\"\n    ValidationError:\n      description: Validation exception\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              message:\n                type: string\n                example: \"Validation exception\"\n    ServerError:\n      description: Unexpected server error\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              message:\n                type: string\n                example: \"Unexpected server error\"\n  schemas:\n\n    Links:\n      type: object\n      properties:\n        first:\n          type: string\n          description: \"An URL to the first page of the data set\"\n        last:\n          type: string\n          description: \"An URL to the last page of the data set\"\n        prev:\n          type: string\n          description: \"An URL to the previous page of the data set\"\n        next:\n          type: string\n          description: \"An URL to the next page of the data set\"\n    Meta:\n      type: object\n      properties:\n        current_page:\n          type: integer\n          description: \"The current page number of a data set\"\n        from:\n          type: integer\n          description: \"The current position of a data set \"\n        last_page:\n          type: string\n          description: \"The last page of a data set\"\n        path:\n          type: string\n          description: \"API path\"\n        per_page:\n          type: integer\n          description: \"A number of records per page\"\n        to:\n          type: integer\n          description: \"The last position in a data set\"\n        total:\n          type: integer\n          description: \"Total number of records in a data set\"\n    File:\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 11\n        name:\n          type: string\n          example: filename.jpg\n        size:\n          type: integer\n          example: 480118\n        created:\n          type: string\n          format: date-time\n          example: '2019-01-01T12:04:40+05:00'\n          description: 'File creation date (Y-m-d\\TH:i:sP)'\n        created_by:\n          type: integer\n          example: 1\n    BriefMerchantInfo:\n      type: object\n      properties:\n        mid:\n          type: string\n          description: \"Merchant number\"\n        name:\n          type: string\n          description: \"Merchant name\"\n        opened:\n          type: string\n          format: date\n          example: '01/21/2019'\n          description: \"Merchant open date\"\n        closed:\n          type: string\n          format: date\n          example: '01/21/2019'\n          description: \"Merchant closed date\"\n        created:\n          type: string\n          format: date-time\n          example: '2019-01-01T12:04:40+05:00'\n          description: \"Merchant created date\"\n        modified:\n          type: string\n          format: date-time\n          example: '2019-01-01T12:04:40+05:00'\n          description: \"Merchant modified date\"\n        first_batch:\n          type: string\n          format: date\n          example: '01/21/2019'\n          description: \"Merchant first batch date\"\n        last_batch:\n          type: string\n          format: date\n          example: '01/21/2019'\n          description: \"Merchant last batch date\"\n        group:\n          type: string\n          description: \"Group name\"\n        processor:\n          type: string\n          description: \"Processor name\"\n        datasource:\n          type: string\n          description: \"Data source name\"\n        sic_code:\n          type: string\n          description: \"SIC Code\"\n        vim:\n          type: string\n          description: \"Is VIM?\"\n        deactivated:\n          type: string\n          format: date\n          example: '01/21/2019'\n          description: \"Merchant deactivation date\"\n        status:\n          type: string\n          description: \"Merchant status\"\n        active:\n          type: string\n          description: \"Merchant active flag\"\n    MonetaryBatch:\n      type: object\n      properties:\n        date:\n          type: string\n          format: date\n          example: '01/21/2019'\n          description: \"Batch date\"\n        reference_number:\n          type: string\n          description: \"Batch description\"\n        amount:\n          type: string\n          description: \"Batch amount\"\n        count:\n          type: string\n          description: \"A number of transactions\"\n        terminal_number:\n          type: string\n          description: \"Batch terminal number\"\n        transactions:\n          type: array\n          items:\n            type: object\n            properties:\n              id:\n                type: integer\n                example: 123\n                description: \"Transaction ID\"\n              date:\n                type: string\n                format: date\n                example: '01/21/2019'\n                description: \"Transaction date\"\n              type:\n                type: string\n                example: 'SALE'\n                description: \"Transaction type\"\n              amount:\n                type: string\n                example: \"91.57\"\n                description: \"Transaction amount\"\n              cardholder:\n                type: string\n                example: \"3712*******1234\"\n                description: \"Cardholder number\"\n              auth_code:\n                type: string\n                example: 550123\n                description: \"Transaction auth code\"\n              pos_entry_mode:\n                type: string\n                example: SWIPED\n                description: \"POS entry mode\"\n              invoice_number:\n                type: string\n                example: \"11\"\n                description: \"Invoice number\"\n              void_reject_chargeback:\n                type: boolean\n                example: false\n                description: \"Is a transaction rejected?\"\n    Adjustments:\n      type: array\n      items:\n        type: object\n        properties:\n          date:\n            type: string\n            format: date\n            example: '01/21/2019'\n            description: \"Adjustment date\"\n          type:\n            type: string\n            example: \"Deposit adjustments\"\n            description: \"Adjustment type\"\n          amount:\n            type: string\n            example: \"-570.00\"\n            description: \"Adjustment amount\"\n    Deposits:\n      type: array\n      items:\n        type: object\n        properties:\n          date:\n            type: string\n            format: date\n            example: '01/21/2019'\n            description: \"Deposit date\"\n          amount:\n            type: string\n            example: \"1570.00\"\n            description: \"Deposit amount\"\n          transactions:\n            type: integer\n            example: 3\n            description: \"Transactions count\"\n          batch:\n            type: string\n            example: \"202101025856\"\n            description: \"Deposit batch number\"\n    Chargeback:\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 123\n          description: \"Chargeback internal ID\"\n        merchant_id:\n          type: string\n          example: \"48236605840\"\n          description: \"Merchant ID\"\n        dba:\n          type: string\n          example: \"Dummy Merchant DBA\"\n          description: \"Merchant DBA\"\n        case_number:\n          type: string\n          example: \"230880620\"\n          description: \"Case number\"\n        chargeback_date:\n          type: string\n          format: date\n          example: '01/21/2019'\n          description: \"Chargeback date\"\n        transaction_date:\n          type: string\n          format: date\n          example: '01/21/2019'\n          description: \"Transaction date\"\n        respond_due:\n          type: string\n          format: date\n          example: '01/21/2019'\n          description: \"Respond due date\"\n        amount:\n          type: string\n          example: \"1570.00\"\n          description: \"Amount\"\n        original_amount:\n          type: string\n          example: \"10.00\"\n          description: \"Original amount of transaction\"\n        currency:\n          type: string\n          description: \"Transaction currency\"\n        reason:\n          type: string\n          description: \"Chargeback reason\"\n        reason_code:\n          type: string\n          description: \"Chargeback reason code\"\n        card_number:\n          type: string\n          description: \"Cardholder number\"\n        reply_form:\n          type: string\n          description: \"Reply form type. Affects reply options.\"\n        cycle_indicator:\n          type: string\n          description: \"Chargeback cycle indicator\"\n        transaction_id:\n          type: string\n          description: \"Transaction ID\"\n        reference_number:\n          type: string\n          description: \"Transaction ID\"\n        case_status:\n          type: string\n          description: \"Case status\"\n        case_status_description:\n          type: string\n          description: \"Status description\"\n        mcc:\n          type: string\n          description: \"MCC code\"\n        dispute_jurisdiction:\n          type: string\n          description: \"Dispute jurisdiction\"\n        card_product_type:\n          type: string\n          description: \"Card product\"\n        process_date:\n          type: string\n          format: date\n          example: '01/21/2019'\n          description: \"Process date\"\n        transaction_method:\n          type: string\n          description: \"Transaction method\"\n        invoice_number:\n          type: string\n          description: \"Invoice number\"\n        microfilm_number:\n          type: string\n          description: \"Microfilm number\"\n        airline_ticket_number:\n          type: string\n          description: \"Airline ticket number\"\n        order_number:\n          type: string\n          description: \"Order number\"\n        tracking_number:\n          type: string\n          description: \"Tracking number\"\n        last_status_date:\n          type: string\n          format: date\n          example: '01/21/2019'\n          description: \"Date of the last status update\"\n        updated_at:\n          type: string\n          format: date\n          example: '01/21/2019'\n          description: \"Date of the most recent update\"\n        case_action:\n          type: string\n          description: \"Case action\"\n        action:\n          type: string\n          description: \"Can the case be viewed of replied\"\n        foreign_amount:\n          type: string\n          example: \"10.00\"\n          description: \"Foreign amount of transaction\"\n        transaction_locator:\n          type: string\n          description: Transaction locator\n        authorization_code:\n          type: string\n          example: \"08572B\"\n          description: \"Authorization code\"\n        type:\n          type: string\n          example: \"First Chargeback\"\n          description: \"Chargeback type\"\n    Retrieval:\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 123\n          description: \"Chargeback internal ID\"\n        merchant_id:\n          type: string\n          example: \"48236605840\"\n          description: \"Merchant ID\"\n        dba:\n          type: string\n          example: \"Dummy Merchant DBA\"\n          description: \"Merchant DBA\"\n        case_number:\n          type: string\n          example: \"230880620\"\n          description: \"Case number\"\n        retrieval_date:\n          type: string\n          format: date\n          example: '01/21/2019'\n          description: \"Request date\"\n        transaction_date:\n          type: string\n          format: date\n          example: '01/21/2019'\n          description: \"Transaction date\"\n        amount:\n          type: string\n          example: \"10.00\"\n          description: \"Amount\"\n        respond_due:\n          type: string\n          format: date\n          example: '01/21/2019'\n          description: \"Respond due date\"\n        original_amount:\n          type: string\n          example: \"10.00\"\n          description: \"Original amount of transaction\"\n        currency:\n          type: string\n          description: \"Transaction currency\"\n        reason:\n          type: string\n          description: \"Retrieval case reason\"\n        reason_code:\n          type: string\n          description: \"Retrieval case reason code\"\n        card_number:\n          type: string\n          description: \"Cardholder number\"\n        transaction_id:\n          type: string\n          description: \"Transaction ID\"\n        reference_number:\n          type: string\n          description: \"Transaction ID\"\n        case_status:\n          type: string\n          description: \"Case status\"\n        case_status_description:\n          type: string\n          description: \"Status description\"\n        mcc:\n          type: string\n          description: \"MCC code\"\n        dispute_jurisdiction:\n          type: string\n          description: \"Dispute jurisdiction\"\n        card_product_type:\n          type: string\n          description: \"Card product\"\n        transaction_method:\n          type: string\n          description: \"Transaction method\"\n        invoice_number:\n          type: string\n          description: \"Invoice number\"\n        microfilm_number:\n          type: string\n          description: \"Microfilm number\"\n        airline_ticket_number:\n          type: string\n          description: \"Airline ticket number\"\n        order_number:\n          type: string\n          description: \"Order number\"\n        tracking_number:\n          type: string\n          description: \"Tracking number\"\n        last_status_date:\n          type: string\n          format: date\n          example: '01/21/2019'\n          description: \"Date of the last status update\"\n        updated_at:\n          type: string\n          format: date\n          example: '01/21/2019'\n          description: \"Date of the most recent update\"\n        case_action:\n          type: string\n          description: \"Case action\"\n        action:\n          type: string\n          description: \"Can the case be viewed of replied\"\n        foreign_amount:\n          type: string\n          example: \"10.00\"\n          description: \"Foreign amount of transaction\"\n        transaction_locator:\n          type: string\n          description: Transaction locator\n    ChargebackReplyDisputeRequest:\n      type: object\n      required:\n        - selected_doc_types\n        - user_note\n        - file\n      properties:\n        selected_doc_types:\n          type: string\n          enum: [\n              'sales_slip',\n              'cancellation_policy',\n              'order_form',\n              'proof_of_delivery',\n              'rental_agreement',\n              'recurring_billing_agreement',\n              'loyalty_transactions',\n              'subsequent_purchases',\n              'ticket_proof',\n              'flight_manifest_proof',\n              'cvv2_proof',\n              'authorization_proof',\n              'secure_code_proof',\n              'other',\n          ]\n          description: Selected documents\n        other_description:\n          type: string\n          description: Other document description\n        compelling_doc:\n          type: string\n          description: Compelling document\n          enum: [\n              A,V,C\n          ]\n        selected_compelling:\n          type: string\n          description: Selected compelling\n          enum: [\n              'ch_in_possession'       ,\n              'signed_delivery_form'   ,\n              'address_verification'   ,\n              'digital_goods_download' ,\n              'delivery_to_ch'         ,\n              'loyalty_transactions'   ,\n              'subsequent_purchases'   ,\n              'transport_proof'        ,\n              'non_dispute_payments'   ,\n              'auth_signer_by_ch'      ,\n              'signed_order_form'      ,\n              'legitimate_spend'       ,\n              'recurring_transaction'  ,\n              'member_of_ch_household' ,\n              'flight_manifest'\n          ]\n        selected_digital_goods_04:\n          type: string\n          description: Digital goods compelling documents\n          enum: [\n            'purchaser_ip_and_location',\n            'device_id_and_name',\n            'purchaser_name_and_email',\n            'same_device_and_card',\n            'proof_of_profile_setup',\n            'proof_of_app_access'\n          ]\n        download_date:\n          type: string\n          description: Download date\n        download_time:\n          type: string\n          description: Download time\n        purchaser_ip_addr:\n          type: string\n          description: Purchaser IP address\n        geographical_location:\n          type: string\n          description: Physical location\n        device_id:\n          type: string\n          description: PhDevice ID\n        device_name:\n          type: string\n          description: Device ID\n        purchaser_name:\n          type: string\n          description: Purchaser name\n        purchaser_email:\n          type: string\n          description: Purchaser email\n        arn_04:\n          type: string\n          description: ARN\n        tran_date_04:\n          type: string\n          description: Transaction date\n        arn_09:\n          type: string\n          description: ARN\n        tran_date_09:\n          type: string\n          description: Transaction date\n        arn_13:\n          type: string\n          description: ARN\n        tran_date_13:\n          type: string\n          description: Transaction date\n        ip_address:\n          type: string\n          description: IP address\n        email_address:\n          type: string\n          description: Email address\n        phone_number:\n          type: string\n          description: Phone number\n        physical_address:\n          type: string\n          description: Physical address\n        user_note:\n          type: string\n          description: User note\n        file:\n          type: array\n          description: Files to attach\n          items:\n            type: string\n    ChargebackReplyCreditIssuedRequest:\n      type: object\n      required:\n        - credit_date\n        - credit_amount\n        - user_note\n        - file\n      properties:\n        credit_date:\n          type: string\n          description: Credit transaction date\n        credit_amount:\n          type: string\n          description: Credit transaction amount\n        user_note:\n          type: string\n          description: User note\n        file:\n          type: array\n          description: Files to attach\n          items:\n            type: string\n    RetrievalReplyResponseRequest:\n      type: object\n      required:\n        - user_note\n        - file\n      properties:\n        user_note:\n          type: string\n          description: User note\n        file:\n          type: array\n          description: Files to attach\n          items:\n            type: string\n    RetrievalReplyUnableRequest:\n      type: object\n      required:\n        - user_note\n        - file\n      properties:\n        user_note:\n          type: string\n          description: User note\n        file:\n          type: array\n          description: Files to attach\n          items:\n            type: string\n    RetrievalReplyCreditIssuedRequest:\n      type: object\n      required:\n        - credit_date\n        - credit_amount\n        - user_note\n        - file\n      properties:\n        credit_date:\n          type: string\n          description: Credit transaction date\n        credit_amount:\n          type: string\n          description: Credit transaction amount\n        user_note:\n          type: string\n          description: User note\n        file:\n          type: array\n          description: Files to attach\n          items:\n            type: string\n    ChargebackReplyResponse:\n      allOf:\n        - type: object\n          properties:\n            chargeback:\n              type: object\n              properties:\n                id:\n                  type: string\n                  example: 1\n                merchant_id:\n                  type: string\n                  example: \"123456789\"\n                dba:\n                  type: string\n                  example: \"Wild Coyote Hotel\"\n                cycle_indicator:\n                  type: string\n                  example: 'First chargeback'\n                date:\n                  type: string\n                  example: \"11/14/2020\"\n                transaction_date:\n                  type: string\n                  example: \"11/14/2020\"\n                amount:\n                  type: string\n                  example: \"1000.00\"\n                reason_code:\n                  type: string\n                reason:\n                  type: string\n                card_number:\n                  type: string\n                case_number:\n                  type: string\n                case_action:\n                  type: string\n                action:\n                  type: string\n                reply_form:\n                  type: string\n                case_status:\n                  type: string\n                case_status_description:\n                  type: string\n                last_status_date:\n                  type: string\n                respond_due:\n                  type: string\n                original_amount:\n                  type: string\n                updated_at:\n                  type: string\n                mcc:\n                  type: string\n                dispute_jurisdiction:\n                  type: string\n                card_product_type:\n                  type: string\n                process_date:\n                  type: string\n                transaction_method:\n                  type: string\n                invoice_number:\n                  type: string\n                microfilm_number:\n                  type: string\n                airline_ticket_number:\n                  type: string\n                order_number:\n                  type: string\n                tracking_number:\n                  type: string\n            items:\n              type: object\n              properties:\n                reason:\n                  type: string\n                message_from_bank:\n                  type: string\n                merchant_due_date:\n                  type: string\n                financial_disposition_date:\n                  type: string\n                type:\n                  type: string\n        - $ref: \"#/components/schemas/DisputeDetailsResponse\"\n    RetrievalsReplyResponse:\n      allOf:\n        - type: object\n          properties:\n            retrieval:\n              type: object\n              properties:\n                id:\n                  type: string\n                merchant_id:\n                  type: string\n                  example: \"123456789\"\n                dba:\n                  type: string\n                  example: \"Wild Coyote Hotel\"\n                date:\n                  type: string\n                transaction_date:\n                  type: string\n                amount:\n                  type: string\n                reason_code:\n                  type: string\n                reason:\n                  type: string\n                card_number:\n                  type: string\n                case_number:\n                  type: string\n                case_action:\n                  type: string\n                action:\n                  type: string\n                case_status:\n                  type: string\n                case_status_description:\n                  type: string\n                last_status_date:\n                  type: string\n                respond_due:\n                  type: string\n                original_amount:\n                  type: string\n                updated_at:\n                  type: string\n                mcc:\n                  type: string\n                dispute_jurisdiction:\n                  type: string\n                card_product_type:\n                  type: string\n                foreign_amount:\n                  type: string\n                transaction_method:\n                  type: string\n                transaction_locator:\n                  type: string\n                invoice_number:\n                  type: string\n                microfilm_number:\n                  type: string\n                airline_ticket_number:\n                  type: string\n                order_number:\n                  type: string\n                tracking_number:\n                  type: string\n        - $ref: \"#/components/schemas/DisputeDetailsResponse\"\n    DisputeDetailsResponse:\n      type: object\n      properties:\n        transactions:\n          type: array\n          items:\n            type: object\n            properties:\n              reference:\n                type: string\n              fields:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    key:\n                      type: string\n                    value:\n                      type: string\n        auth_records:\n          type: array\n          items:\n            type: object\n            properties:\n              reference:\n                type: string\n              fields:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    key:\n                      type: string\n                    value:\n                      type: string\n        notes:\n          type: array\n          items:\n            type: object\n            properties:\n              message:\n                type: string\n              added_at:\n                type: string\n        messages:\n          type: array\n          items:\n            type: object\n            properties:\n              message:\n                type: string\n              description:\n                type: string\n              added_at:\n                type: string\n              viewed_on:\n                type: string\n        directories:\n          type: array\n          items:\n            type: object\n            properties:\n              time:\n                type: string\n              title:\n                type: string\n              files:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    time:\n                      type: string\n                    title:\n                      type: string\n                    url:\n                      type: string\n                      description: site url\n                      example: \"https://dev.iriscrm.com/retrievals/download-file/94900\"\n                    api_url:\n                      type: string\n                      description: api url\n                      example: \"https://dev.iriscrm.com/api/v1/merchants/333333333/retrievals/903729142148/files/94900\"\n    DisputeFile:\n      type: object\n      properties:\n        name:\n          type: string\n          description: File name\n          example: \"Merchant Output Package_4/4/20.tif\"\n        directory:\n          type: string\n          description: Folder name\n          example: Incoming Chargeback Documents\n        content:\n          type: string\n          format: binary\n          description: base64 encoded content\n\n\n\n    SummaryResponse:\n      type: object\n      properties:\n        processor_id:\n          type: integer\n          example: 1\n        name:\n          type: string\n          example: Test Processor\n        created:\n          type: string\n          format: date-time\n          example: '2019-01-01T12:04:40+05:00'\n        created_by:\n          type: integer\n          example: 1\n        modified:\n          type: string\n          format: date-time\n          example: '2019-01-01T12:04:40+05:00'\n        modified_by:\n          type: integer\n          example: 1\n        merchants_count:\n          type: integer\n          example: 11\n        sum_transactions:\n          type: integer\n          example: 1664667\n        sum_sales_amount:\n          type: number\n          example: 0\n        sum_income:\n          type: number\n          example: 0\n        sum_expense:\n          type: number\n          example: 0\n        sum_net:\n          type: number\n          example: 0\n        sum_bps:\n          type: number\n          example: 0\n        sum_agent_net:\n          type: integer\n          example: 0\n    MerchantRow:\n      type: object\n      properties:\n        merchant:\n          type: string\n          example: Merchant name\n        transactions:\n          type: integer\n          example: 151182\n        sales_amount:\n          type: integer\n          example: 15637576\n        income:\n          type: integer\n          example: 499400\n        expense:\n          type: integer\n          example: 454000\n        net:\n          type: integer\n          example: 45400\n        bps:\n          type: integer\n          example: 0.29\n        users:\n          type: boolean\n          example: true\n        percentage:\n          type: integer\n          example: 0\n        agent_net:\n          type: integer\n          example: 0\n        mid:\n          type: integer\n          example: 12312312312\n\n    ResidualsDetails:\n      type: object\n      properties:\n        MID:\n          type: string\n          example: \"12312312312\"\n        DBA:\n          type: string\n          example: \"Test Merchant\"\n\n\n    LineItems:\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 1\n        type:\n          type: string\n          enum: [\n            agent,\n            merchant\n          ]\n          example: \"agent\"\n        item_id:\n          type: integer\n          example: 10100101\n        user:\n          type: object\n          properties:\n            user_id:\n              type: integer\n              example: 1\n            username:\n              type: string\n              example: john79\n            full_name:\n              type: string\n              example: John Doe\n            class:\n              type: string\n              example: Sales Manager\n        merchant:\n          type: object\n          properties:\n            mid:\n              type: string\n              example: 1231323\n            dba:\n              type: string\n              example: Test Company\n        related_mid:\n          type: integer\n          example: 10100101\n        related_dba:\n          type: string\n          example: 'Merchant DBA'\n        description:\n          type: string\n        income:\n          type: integer\n          example: 499400\n        expense:\n          type: integer\n          example: 454000\n        percentage:\n          type: integer\n          example: 0\n        agent_net:\n          type: integer\n          example: 45400\n        is_recurring:\n          type: boolean\n          example: true\n        created:\n          type: string\n          format: date-time\n          example: '2019-01-01T12:04:40+05:00'\n          description: \"Created date of line item\"\n        modified:\n          type: string\n          format: date-time\n          example: '2019-01-01T12:04:40+05:00'\n          description: \"Last update date of line item\"\n        agents:\n          type: array\n          items:\n            type: object\n            properties:\n              user_id:\n                type: integer\n                example: 1\n              username:\n                type: string\n                example: john79\n              full_name:\n                type: string\n                example: John Doe\n              agent_net:\n                type: integer\n                example: 45400\n              percentage:\n                type: integer\n                example: 0\n        recurring_start_date:\n          type: string\n          format: date-time\n          example: '2019-01-01T12:04:40+05:00'\n          description: \"Date of start recurring line item\"\n        recurring_payment_count:\n          type: integer\n          example: 100\n          description: \"Count of payments what was already done\"\n        recurring_max_payment_count:\n          type: integer\n          example: 100\n          description: \"Count of payments which will be done (this will be null if there is no limit)\"\n        recurring_period:\n          type: string\n          enum:\n          - weekly\n          - monthly\n          - quarterly\n          - yearly\n          example: weekly\n    ResidualTemplate:\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 21\n        name:\n          type: string\n          example: Test template\n        creator_id:\n          type: integer\n          example: 1\n        creator_name:\n          type: string\n          example: Jane Doe\n        created_at:\n          type: string\n          format: date-time\n          example: '2020-01-01T12:04:40+05:00'\n          description: \"Created date of template\"\n        revision:\n          type: integer\n          example: 2\n        rules:\n          type: array\n          items:\n            $ref: \"#/components/schemas/TemplateRules\"\n\n    ResidualTemplateAssigned:\n      type: object\n      properties:\n        user_id:\n          type: integer\n          example: 1\n        username:\n          type: string\n          example: janedoe\n        full_name:\n          type: string\n          example: Jane Doe\n        templates:\n          type: array\n          items:\n            type: object\n            properties:\n              id:\n                type: integer\n                example: 1\n              name:\n                type: string\n                example: test template\n              version:\n                type: integer\n                example: 2\n              processor_id:\n                type: integer\n                example: 12\n              rules:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/TemplateRules\"\n\n    TemplateRules:\n      type: object\n      properties:\n        column:\n          type: string\n          example: Agent Net\n        rule:\n          type: string\n          example: decrease\n        value:\n          type: integer\n          example: 100\n        field:\n          type: string\n          example: \"Income 3\"\n\n\n    BriefLeadInfo:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: \"Lead Id\"\n\n        \n        mid:\n          type: integer\n          description: \"Lead merchant Id\"\n        \n        name:\n          type: string\n          description: \"Lead name\"\n        group:\n          $ref: \"#/components/schemas/BriefGroupInfo\"\n        category:\n          $ref: \"#/components/schemas/BriefCategoryInfo\"\n        status:\n          $ref: \"#/components/schemas/BriefStatusInfo\"\n        campaign:\n          $ref: \"#/components/schemas/BriefCampaignInfo\"\n        source:\n          $ref: \"#/components/schemas/BriefSourceInfo\"\n        created:\n          type: string\n          format: date-time\n          example: '2019-01-01T12:04:40+05:00'\n          description: 'Lead creation date (Y-m-d\\TH:i:sP)'\n        modified:\n          type: string\n          format: date-time\n          example: '2019-01-01T12:04:40+05:00'\n          description: 'Lead modification date (Y-m-d\\TH:i:sP)'\n    BriefApplicationInfo:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: \"Application Id\"\n        name:\n          type: string\n          description: \"Application name\"\n        e-sign:\n          type: string\n          description: \"Is E-Sign available?\"\n    BriefCampaignInfo:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: \"Campaign Id\"\n        name:\n          type: string\n          description: \"Campaign name\"\n    BriefSourceInfo:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: \"Source Id\"\n        name:\n          type: string\n          description: \"Source name\"\n    BriefGroupInfo:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: \"Group Id\"\n        name:\n          type: string\n          description: \"Group name\"\n    BriefCategoryInfo:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: \"Status category Id\"\n        name:\n          type: string\n          description: \"Status category name\"\n    BriefStatusInfo:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: \"Status Id\"\n        name:\n          type: string\n          description: \"Status name\"\n    CategoryWithStatuses:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: \"Status category Id\"\n        name:\n          type: string\n          description: \"Status category name\"\n        statuses:\n          type: array\n          items:\n            $ref: \"#/components/schemas/BriefStatusInfo\"\n    BriefTabInfo:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: \"Tab Id\"\n        name:\n          type: string\n          description: \"Tab name\"\n    BriefUserInfo:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: \"User Id\"\n          example: 123\n        name:\n          type: string\n          description: \"User name\"\n          example: \"John Doe\"\n    BriefUserInfoWithClass:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: \"User Id\"\n          example: 1\n        username:\n          type: string\n          description: \"User username\"\n          example: \"manager1\"\n        full_name:\n          type: string\n          description: \"User name\"\n          example: \"John Doe\"\n        email:\n          type: string\n          description: \"User email\"\n          example: example@iriscrm.com\n        status:\n          type: string\n          description: \"User status\"\n          example: \"active\"\n        class:\n          type: string\n          description: \"User class\"\n          example: \"Manager\"\n    LeadField:\n      type: object\n      required:\n        - tab\n        - label\n        - type\n        - value\n      properties:\n        id:\n          type: integer\n          description: \"Field Id\"\n          example: 1\n          readOnly: true\n        tab:\n          type: integer\n          description: \"Field tab Id\"\n          example: 1\n        label:\n          type: string\n          description: \"Field label\"\n          example: \"New Field\"\n        type:\n          type: string\n          description: \"Field type\"\n          example: \"Select\"\n          enum: [\n            'DateCreate',\n            'GoogleMaps',\n            'jQDate',\n            'Number',\n            'Txt',\n            'TxtArea',\n            'TxtDollar',\n            'TxtBalance',\n            'TxtSIC',\n            'TxtPercent',\n            'TxtRouting',\n            'TxtSecure',\n            'Checkbox',\n            'Select',\n            'SelectRed',\n            'Label',\n            'Packages',\n            'PhoneMask',\n            'PrFormats',\n            'QuickEmail',\n            'QuickFax'\n          ]\n        length:\n          type: integer\n          description: \"Field size\"\n          example: 10\n        default:\n          type: string\n          description: \"Field default value\"\n          example: \"Some Value\"\n        alignment:\n          type: string\n          description: \"Field alignment\"\n          enum: [\n            \"\",\n            'left',\n            'middle',\n            'right',\n            'left_column',\n            'right_column',\n            'float_left_whole_row',\n            'float_left',\n            'float_middle'\n          ]\n          example: \"left\"\n        searchable:\n          type: integer\n          description: \"Searchable field\"\n          enum: [\n            0,\n            1\n          ]\n          example: 1\n        special:\n          type: string\n          description: \"Field special value\"\n          example: \"dba\"\n          enum: [\n            \"\",\n                        \"mid\",\n                        \"dba\",\n            \"sales_number\",\n            \"busaddress\",\n            \"buscity\",\n            \"busstate\",\n            \"buszipcode\",\n            \"bustype\",\n            \"busproducts\",\n            \"busmarkettype\",\n            \"busstartdate\",\n            \"sic\",\n            \"taxid\",\n            \"processor\",\n            \"owner_fname\",\n            \"owner_lname\",\n            \"owner_title\",\n            \"owner_ssn\",\n            \"phone\",\n            \"cellphone\",\n            \"email\",\n            \"contact\",\n            \"contact_1\",\n            \"contact_2\",\n            \"avgtckt\",\n            \"volume\",\n            \"bank_name_on_account\",\n            \"bank_account_type\",\n            \"bank_account_owner_type\",\n            \"aba_code\",\n            \"account_number\",\n            \"bank_name\",\n            \"bank_city\",\n            \"bank_state\",\n            \"bank_zip\",\n            \"LMS_FScore\",\n            \"LMS_RefNum\",\n            \"LR_MONTHLY_PAYMENT\",\n            \"LR_EQUIPMENT\",\n            \"LR_WIRE_TRANFER\",\n            \"LR_PACK_FEE\",\n            \"LR_CANCELLATION\",\n            \"leadID\"\n          ]\n        options:\n          type: object\n          properties:\n            dropdown:\n              type: object\n              description: Add new list item\n              properties:\n                key:\n                  type: string\n                  example: 'key'\n                  description: Key\n                value:\n                  type: string\n                  example: 'Option Value'\n                  description: Value\n            dupecheck:\n              type: boolean\n              description: Enable dupecheck\n              example: true\n            contactid:\n              type: string\n              description: Id of contact field\n              example: 1\n            mask:\n              type: string\n              description: Field mask\n              enum: [\n                'validateSSN',\n                'validateDate',\n                'validateDate2',\n                'validateZip5',\n                'validateZip9'\n              ]\n            copy:\n              type: object\n              description: Copy button properties\n              properties:\n                title:\n                  type: string\n                  description: Button label\n                  example:\n                from:\n                  type: object\n                  description: Copy from\n                  example:\n                    1: 1\n                    2: 2\n                to:\n                  type: object\n                  description: Copy to\n                  example:\n                    1: 1\n                    2: 2\n            hyperlink:\n              type: boolean\n              description: Enable hyperlink\n              example: true\n            sms:\n              type: boolean\n              description: Enable SMS\n              example: true\n            dialer:\n              type: boolean\n              description: Enable dialer\n              example: true\n            googlemaps:\n              type: object\n              description: Google Maps search properties\n              example:\n                1: 1\n                2: 2\n            zipcode_autocomplete:\n              type: object\n              description: ZIP Code autofill properties\n              properties:\n                city:\n                  type: object\n                  description: City fields\n                  example:\n                    1: 1\n                    2: 2\n                state:\n                  type: object\n                  description: State fields\n                  example:\n                    1: 1\n                    2: 2\n                zipcode:\n                  type: object\n                  description: Zipcode fields\n                  example:\n                    1: 1\n                    2: 2\n        order:\n          type: integer\n          example: 1\n          readOnly: true\n        readOnly:\n          type: boolean\n          description: Whether the field is read only\n          example: false\n          readOnly: true\n        required:\n          type: boolean\n          description: Whether the field is required\n          example: true\n          readOnly: true\n    LeadFieldOrder:\n      type: object\n      required:\n        - value\n      properties:\n        value:\n          type: integer\n          description: \"New order position of lead field\"\n          example: 1\n        type:\n          type: string\n          enum: [\n            \"increment\",\n            \"decrement\"\n          ]\n          description: \"Type of changing order position\"\n          example: \"increment\"\n          default: null\n    LeadFieldTab:\n      type: object\n      required:\n      - position\n      - class\n      - name\n      - order\n      properties:\n        id:\n          type: integer\n          description: \"Tab Id\"\n          example: 1\n          readOnly: true\n        active:\n          type: integer\n          description: \"Active tab\"\n          enum: [\n            0,\n            1\n          ]\n          example: 1\n        position:\n          type: integer\n          description: \"Tab position\"\n          example: 1\n          enum: [1 = left, 2 = bottom right, 3 = middle right, 4 = top right]\n        class:\n          type: string\n          description: \"Tab class\"\n          example: \"documents\"\n          enum: [''' - empty string for TAB', 'set', 'documents', 'altdocs', 'notes']\n        name:\n          type: string\n          description: \"Tab class\"\n          example: \"New tab\"\n        order:\n          type: integer\n          description: \"Tab order\"\n          example: 1\n    ApplicationField:\n      type: object\n      required:\n      - from\n      properties:\n        id:\n          type: integer\n          description: \"Application field Id\"\n          example: 1\n          readOnly: true\n        from:\n          type: integer\n          description: \"Application field from field Id\"\n          example: 1\n        record:\n          type: integer\n          description: \"Application field record\"\n          example: 1\n        to:\n          type: string\n          description: \"Name of mapped field\"\n          example: \"Test\"\n        toAlt:\n          type: string\n          description: \"Alt of mapped field\"\n          example: \"Alt test\"\n        toType:\n          type: string\n          description: \"Type of mapped field\"\n          example: \"Text\"\n        special:\n          type: string\n          description: \"Special type of mapped field\"\n          example: \"chk\"\n          default: null\n          enum: [\n            null,\n            'chk',\n            'd2t',\n            'salesrep',\n            'salesrep_position',\n            'salesrep_email',\n            'salesrep_phone',\n            'salesrep_mobile',\n            'salesrep_fax',\n            'salesrep_ext',\n            'leading_comma',\n            'date_mdY',\n            'date_mdy',\n          ]\n        info:\n          readOnly: true\n          type: array\n          items:\n            type: object\n            properties:\n              field_name:\n                type: string\n                description: \"Field name\"\n                example: \"Business Address\"\n              field_type:\n                type: string\n                description: \"Field type\"\n                enum: [\n                  Text,\n                  Checkbox\n                ]\n                example: Text\n              left:\n                type: integer\n                description: \"Padding from left\"\n                example: 19.962399999999999\n              right:\n                type: integer\n                description: \"Padding from right\"\n                example: 303.43799999999999\n              top:\n                type: integer\n                description: \"Padding from top\"\n                example: 686.60500000000002\n              bottom:\n                type: integer\n                description: \"Padding from bottom\"\n                example: 673.24699999999996\n              field_height:\n                type: integer\n                description: \"Height of field\"\n                example: 13.35797\n              field_width:\n                type: integer\n                description: \"Width of field\"\n                example: 283.47559999999999\n              page_number:\n                type: integer\n                description: \"Page number\"\n                example: 1\n              page_height:\n                type: integer\n                description: \"Page height\"\n                example: 792\n              page_width:\n                type: integer\n                description: \"Page width\"\n                example: 612\n              page_rotation:\n                type: integer\n                description: \"Page rotation\"\n                example: 0\n              export_value:\n                type: string\n                description: \"Export value\"\n                example: Yes\n              tooltip:\n                type: string\n                description: \"Field tooltip\"\n                example: Test\n              duplicates:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    instance:\n                      type: integer\n                      description: \"Activity Id\"\n                      example: 2\n                    left:\n                      type: integer\n                      description: \"Padding from left\"\n                      example: 542.962399999999999\n                    right:\n                      type: integer\n                      description: \"Padding from right\"\n                      example: 596.43799999999999\n                    top:\n                      type: integer\n                      description: \"Padding from top\"\n                      example: 107.60500000000002\n                    bottom:\n                      type: integer\n                      description: \"Padding from bottom\"\n                      example: 95.24699999999996\n                    height:\n                      type: integer\n                      description: \"Height of field\"\n                      example: 11.35797\n                    width:\n                      type: integer\n                      description: \"Width of field\"\n                      example: 53.47559999999999\n                    page_number:\n                      type: integer\n                      description: \"Page number\"\n                      example: 4\n    StatusActivity:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: \"Activity Id\"\n          example: 1\n        changedBy:\n          type: integer\n          description: \"User Id\"\n          example: 1\n        changedAt:\n          type: string\n          format: date-time\n          example: '2019-01-01T12:04:40+05:00'\n          description: 'Deleted date (Y-m-d\\TH:i:sP)'\n        oldStatus:\n          type: string\n          example: 'Old'\n          description: 'Old status'\n        old_status_id:\n          type: integer\n          description: \"Old Status Id\"\n          example: 1\n        newStatus:\n          type: string\n          example: 'New'\n          description: 'New status'\n        new_status_id:\n          type: integer\n          description: \"New Status Id\"\n          example: 2\n    CampaignActivity:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: \"Activity Id\"\n          example: 1\n        newValue:\n          type: string\n          description: \"New value of activity\"\n          example: \"Test\"\n        assignedBy:\n          type: integer\n          description: \"User Id\"\n          example: 1\n        assignedAt:\n          type: string\n          format: date-time\n          example: '2019-01-01T12:04:40+05:00'\n          description: 'Assigned date (Y-m-d\\TH:i:sP)'\n    SourceActivity:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: \"Activity Id\"\n          example: 1\n        newValue:\n          type: string\n          description: \"New value of activity\"\n          example: \"Test\"\n        assignedBy:\n          type: integer\n          description: \"User Id\"\n          example: 1\n        assignedAt:\n          type: string\n          format: date-time\n          example: '2019-01-01T12:04:40+05:00'\n          description: 'Assigned date (Y-m-d\\TH:i:sP)'\n    LinksActivity:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: \"Activity Id\"\n          example: 1\n        status:\n          type: string\n          enum: [\n            'Linked',\n            'Unlinked'\n          ]\n          description: \"Status of link\"\n          example: \"Linked\"\n        lead:\n          type: string\n          description: \"Lead Id\"\n          example: \"123\"\n\n        \n        merchant:\n          type: string\n          description: \"Merchant Id\"\n          example: \"123\"\n        \n        linkedBy:\n          type: integer\n          description: \"User Id\"\n          example: 1\n        linkedAt:\n          type: string\n          format: date-time\n          example: '2019-01-01T12:04:40+05:00'\n          description: 'Linking date (Y-m-d\\TH:i:sP)'\n    DeletionActivity:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: \"Activity Id\"\n          example: 1\n        deletedId:\n          type: integer\n          description: \"User Id\"\n          example: 1\n        deletedAt:\n          type: string\n          format: date-time\n          example: '2019-01-01T12:04:40+05:00'\n          description: 'Date of deletion (Y-m-d\\TH:i:sP)'\n        undeletedId:\n          type: integer\n          description: \"User Id\"\n          example: 1\n        undeletedAt:\n          type: string\n          format: date-time\n          example: '2019-01-01T12:04:40+05:00'\n          description: 'Date of undeletion (Y-m-d\\TH:i:sP)'\n    DuplicateActivity:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: \"Activity Id\"\n          example: 1\n        oldLeadId:\n          type: integer\n          description: \"Old lead Id\"\n          example: 1\n        newLeadId:\n          type: integer\n          description: \"New lead Id\"\n          example: 1\n        duplicatedBy:\n          type: integer\n          description: \"User Id\"\n          example: \"1\"\n        duplicatedAt:\n          type: string\n          format: date-time\n          example: '2019-01-01T12:04:40+05:00'\n          description: 'Date of duplication (Y-m-d\\TH:i:sP)'\n    BriefEmailTemplate:\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 1\n        title:\n          type: string\n          example: \"Email template title\"\n    BriefSmsTemplate:\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 1\n        title:\n          type: string\n          example: \"SMS template title\"\n    LeadAppointment:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: Appointment Id\n        user:\n          deprecated: true\n          $ref: \"#/components/schemas/BriefUserInfo\"\n        set_for:\n          deprecated: true\n          $ref: \"#/components/schemas/BriefUserInfo\"\n        set_at:\n          type: string\n          format: date-time\n          example: '2019-01-01T12:04:40+05:00'\n          description: Appointment creation date and time in format ISO 8601 (Y-m-d\\TH:i:sP)\n        set_by:\n          $ref: \"#/components/schemas/BriefUserInfo\"\n        modified:\n          type: string\n          format: date-time\n          example: '2019-01-01T12:04:40+05:00'\n          description: Appointment modification date and time in format ISO 8601 (Y-m-d\\TH:i:sP)\n        modified_by:\n          $ref: \"#/components/schemas/BriefUserInfo\"\n        text:\n          type: string\n          description: Appointment description\n        date:\n          type: string\n          format: date-time\n          example: '2019-01-01T12:04:40+05:00'\n          description: Appointment date and time in format ISO 8601 (Y-m-d\\TH:i:sP)\n        date_end:\n          type: string\n          format: date-time\n          example: '2019-01-02T12:04:40+05:00'\n          description: Appointment end date and time in format ISO 8601 (Y-m-d\\TH:i:sP)\n        done:\n          type: string\n          description: Is appointment done?\n          enum: [Yes, No]\n          example: No\n        confirmed:\n          type: string\n          format: date-time\n          example: '2019-01-01T12:04:40+05:00'\n          description: Appointment confirmed date and time in format ISO 8601 (Y-m-d\\TH:i:sP)\n        confirmed_by:\n          $ref: \"#/components/schemas/BriefUserInfo\"\n        seen:\n          type: string\n          format: date-time\n          example: '2019-01-01T12:04:40+05:00'\n          description: Appointment seen date and time in format ISO 8601 (Y-m-d\\TH:i:sP)\n        seen_by:\n          $ref: \"#/components/schemas/BriefUserInfo\"\n        rescheduled:\n          type: string\n          format: date-time\n          example: '2019-01-01T12:04:40+05:00'\n          description: Appointment rescheduled date and time in format ISO 8601 (Y-m-d\\TH:i:sP)\n        rescheduled_by:\n          $ref: \"#/components/schemas/BriefUserInfo\"\n        rescheduled_count:\n          type: integer\n          example: 0\n    FileLabel:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: Label Id\n          example: 1\n        order:\n          type: integer\n          description: Label display order\n          example: 1\n        name:\n          type: string\n          description: \"Label name\"\n          example: Default\n\n\n    Ticket:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: \"Ticket id\"\n          readOnly: true\n          example: 1\n        subject:\n            type: string\n            description: \"Ticket subject\"\n            example: \"Ticket subject\"\n        description:\n          type: string\n          description: \"Ticket description\"\n          example: \"Ticket description\"\n        status:\n          type: object\n          properties:\n            id:\n              type: integer\n              description: \"Status id\"\n              example: 1\n            name:\n              type: string\n              description: \"Status name\"\n              example: \"New\"\n        type:\n          type: object\n          properties:\n            id:\n              type: integer\n              description: \"Type id\"\n              example: 1\n            name:\n              type: string\n              description: \"Ticket type\"\n              example: \"Test ticket type\"\n        group:\n          type: object\n          properties:\n            id:\n              type: integer\n              description: \"Group id\"\n              example: 1\n            name:\n              type: string\n              description: \"Group name\"\n              example: \"Test group\"\n        priority:\n          type: object\n          properties:\n            id:\n              type: integer\n              description: \"Priority id\"\n              example: 1\n            name:\n              type: string\n              description: \"Priority name\"\n              example: \"Medium\"\n        lead_id:\n          type: integer\n          description: \"Assigned Lead ID\"\n          example: 3421\n        \n        mid:\n          type: integer\n          description: \"Assigned Merchant ID\"\n          example: 10204324\n        merchantVisible:\n          type: boolean\n          description: \"Indicates if the ticket is visible to Merchant users\"\n          example: true\n\n        \n    TicketCreatedBlock:\n      type: object\n      properties:\n        created:\n          type: string\n          format: date-time\n          example: '2019-01-01T12:04:40+05:00'\n          description: \"Ticket created date\"\n        created_by:\n          type: integer\n          description: \"Ticket creator id\"\n          example: 1\n\n    BriefTicketInfo:\n      allOf:\n        - $ref: \"#/components/schemas/Ticket\"\n        - $ref: \"#/components/schemas/TicketCreatedBlock\"\n        - type: object\n          properties:\n            modified:\n              type: string\n              format: date-time\n              example: '2019-01-01T12:04:40+05:00'\n              description: \"Ticket modified date\"\n            modified_by:\n              type: integer\n              description: \"Id of user who made last change\"\n              example: 1\n            resolved:\n              type: string\n              format: date-time\n              example: '2019-01-01T12:04:40+05:00'\n              description: \"Ticket resolved date\"\n            resolved_by:\n              type: integer\n              description: \"Id of user who made last change\"\n              example: 1\n            due_date:\n              type: string\n              format: date\n              example: '2019-01-01T12:04:40+05:00'\n              description: \"Ticket due date\"\n            due:\n              type: string\n              example: '7 days'\n              description: \"Ticket SLA\"\n            only_business_days:\n              type: boolean\n              example: true\n              description: \"Calculate only business days\"\n            last_comment:\n              type: string\n              format: date-time\n              example: '2019-01-01T12:04:40+05:00'\n              description: \"Ticket last comment date\"\n            files_count:\n              type: integer\n              description: \"Count of ticket files\"\n              example: 12\n    BriefTicketTypeInfo:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: \"Ticket type id\"\n          example: 1\n        name:\n          type: string\n          description: \"Ticket type name\"\n          example: \"Ticket type name\"\n        description:\n          type: string\n          description: \"Ticket type description\"\n          example: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry.\"\n        daysToResolve:\n          type: integer\n          description: \"Days to Resolve\"\n          example: 10\n        only_business_days:\n          type: boolean\n          description: \"Calculate only business days\"\n          example: true\n        status:\n          type: object\n          properties:\n            id:\n              type: integer\n              description: \"Status id\"\n              example: 1\n            name:\n              type: string\n              description: \"Status name\"\n              example: \"New\"\n        priority:\n          type: object\n          properties:\n            id:\n              type: integer\n              description: \"Priority id\"\n              example: 1\n            name:\n              type: string\n              description: \"Priority name\"\n              example: \"Medium\"\n        created:\n          type: string\n          format: date-time\n          example: '2019-01-01T12:04:40+05:00'\n          description: \"Ticket type created date\"\n        createdBy:\n          type: integer\n          description: \"Ticket type creator id\"\n          example: 1\n        modified:\n          type: string\n          format: date-time\n          example: '2019-01-01T12:04:40+05:00'\n          description: \"Ticket type modified date\"\n        modifiedBy:\n          type: integer\n          description: \"Id of user who made last change\"\n          example: 1\n        order:\n          type: integer\n          description: \"Ticket type order\"\n          example: 1111\n        permissions:\n          type: array\n          items:\n            type: integer\n            example: 1\n        due_date:\n          type: string\n          format: date-time\n          example: '2019-01-01T12:04:40+05:00'\n          description: \"Ticket due date\"\n        assignees:\n          type: object\n          properties:\n            everyTime:\n              type: array\n              items:\n                type: integer\n                example: 2\n            roundRobin:\n              type: array\n              items:\n                type: integer\n                example: 3\n    TicketTypeRequest:\n      type: object\n      properties:\n        name:\n          type: string\n          description: \"Ticket type name\"\n          example: \"Ticket type name\"\n        description:\n          type: string\n          description: \"Ticket type description\"\n          example: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry.\"\n        daysToResolve:\n          type: integer\n          description: \"Days to Resolve\"\n          example: 10\n        only_business_days:\n          type: boolean\n          description: \"Calculate only business days\"\n          example: true\n        status:\n          type: string\n          description: \"Status\"\n          enum: [active, inactive]\n          example: active\n        priority:\n          type: integer\n          description: \"Priority (0 - Normal, 1 - Medium, 2 - Rush)\"\n          enum: [0, 1, 2]\n          example: 1\n        permissions:\n          type: array\n          items:\n            type: integer\n            example: 1\n        assignees:\n          type: object\n          properties:\n            everyTime:\n              type: array\n              items:\n                type: integer\n                example: 2\n            roundRobin:\n              type: array\n              items:\n                type: integer\n                example: 3\n    BriefTicketComments:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: \"Comment id\"\n          example: 1\n        ticketId:\n          type: integer\n          description: \"Ticket id\"\n          example: 2\n        comment:\n          type: string\n          description: \"Comment text\"\n          example: 'Comment text'\n        created:\n          type: string\n          format: date-time\n          example: '2019-01-01T12:04:40+05:00'\n          description: \"Comment created date\"\n        createdBy:\n          type: integer\n          description: \"Comment creator id\"\n          example: 1\n        modified:\n          type: string\n          format: date-time\n          example: '2019-01-01T12:04:40+05:00'\n          description: \"Comment modified date\"\n        modifiedBy:\n          type: integer\n          description: \"Id of user who left comment\"\n          example: 1\n        files:\n          type: array\n          items:\n            $ref: \"#/components/schemas/File\"\n        preview_images:\n          type: array\n          items:\n            $ref: \"#/components/schemas/File\"\n        \n        merchantVisible:\n          type: boolean\n          description: \"Indicates if the comment is visible to Merchant users\"\n          example: true\n\n        \n    BriefTicketUsersInfo:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: \"User id\"\n          example: 1\n        name:\n          type: string\n          description: \"User name\"\n          example: 1\n        class:\n          type: string\n          description: \"User class\"\n          example: 'Support'\n    BriefTicketChecklistInfo:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: \"Checklist item Id\"\n          readOnly: true\n          example: 1\n        template_id:\n          type: integer\n          description: \"Checklist template Id\"\n          readOnly: true\n          example: 12\n        name:\n          type: string\n          description: \"Checklist item name\"\n          example: Test\n        index:\n          type: integer\n          description: \"Index in list\"\n          example: 0\n        required:\n          type: boolean\n          description: \"Flag is checklist are required\"\n          example: true\n        fileRequired:\n          type: boolean\n          description: \"Flag is checklist file are required\"\n          example: true\n        commentRequiredToDoneTicket:\n          type: boolean\n          description: \"Flag is comment are required to resolve ticket\"\n          example: true\n        commentRequiredToDoneItem:\n          type: boolean\n          description: \"Flag is checklist are required to resolve checklist item\"\n          example: true\n        commentedAt:\n          format: date-time\n          readOnly: true\n          example: '2019-01-01T12:04:40+05:00'\n          description: \"Datetime when user have commented checklist item\"\n        commentedBy:\n          type: integer\n          readOnly: true\n          description: \"User Id of user who have commented checklist item\"\n          example: 123\n    ChecklistFullInfo:\n      allOf:\n        - $ref: \"#/components/schemas/BriefTicketChecklistInfo\"\n        - type: object\n          properties:\n            completed:\n              type: boolean\n              description: \"Flag is checklist are done\"\n              example: true\n            completed_by:\n              type: integer\n              readOnly: true\n              description: \"User ID who compleated the checklist\"\n              example: 123\n            completed_at:\n              format: date-time\n              readOnly: true\n              example: '2019-01-01T12:04:40+05:00'\n              description: \"Datetime when user have completed the checklist item\"\n            files:\n              type: array\n              items:\n                $ref: \"#/components/schemas/File\"\n    CheckListRequest:\n      type: object\n      properties:\n        index:\n          type: integer\n          description: \"Checklist item index\"\n          example: 1\n        files:\n          type: array\n          items:\n            type: string\n            example: \"15dfd5e51a10145.87303877_ticket_checklist_file.pdf\"\n        attached_files:\n          type: array\n          items:\n            type: integer\n            description: \"IDs of existing files\"\n            example: 123\n        completed:\n          type: boolean\n          description: \"Flag checklist are item completed\"\n          example: true\n        comment:\n          type: string\n          description: \"Comment for checklist item\"\n          example: 'Test comment'\n\n    TicketSubscriptionData:\n      type: object\n      properties:\n        ticket_url:\n          type: string\n          example: \"http://iris/helpdesk/ticket/1\"\n        assignedUsers:\n          $ref: \"#/components/schemas/UserListStructure\"\n        files:\n          type: array\n          items:\n            $ref: \"#/components/schemas/File\"\n        preview_images:\n          type: array\n          items:\n            $ref: \"#/components/schemas/File\"\n        due_date:\n          type: string\n          format: date\n          example: '2019-01-01T12:04:40+05:00'\n          description: \"Ticket due date\"\n        due:\n          type: string\n          example: '7 days'\n          description: \"Ticket SLA\"\n        only_business_days:\n          type: boolean\n          example: true\n          description: \"Calculate only business days\"\n\n    TicketDetail:\n      type: object\n      properties:\n        general:\n          allOf:\n            - $ref: \"#/components/schemas/BriefTicketInfo\"\n            - type: object\n              properties:\n                created_username:\n                  type: string\n                  example: John Doe\n                modified_username:\n                  type: string\n                  example: Jane Doe\n                resolved_username:\n                  type: string\n                  example: Jack Doe\n          items:\n            $ref: \"#/components/schemas/File\"\n        checklist:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ChecklistFullInfo\"\n    TypeDetail:\n      type: object\n      properties:\n        general:\n          $ref: \"#/components/schemas/BriefTicketTypeInfo\"\n        checklist:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ChecklistFullInfo\"\n    CommentSubscriptionData:\n      type: object\n      properties:\n        ticket_url:\n          type: string\n          example: \"http://iris/helpdesk/ticket/1\"\n        assignedUsers:\n          $ref: \"#/components/schemas/UserListStructure\"\n        files:\n          type: array\n          items:\n            $ref: \"#/components/schemas/File\"\n        merchantVisible:\n          type: boolean\n          description: \"Indicates if the comment is visible for Merchant users\"\n          example: true\n\n    BriefSubscriptionInfo:\n      type: object\n      required:\n        - url\n        - events\n      properties:\n        id:\n          type: integer\n          readOnly: true\n          example: 1\n          description: \"Subscription Id\"\n        url:\n          type: string\n          description: Subscription URL\n          example: https://example.com/hook\n        events:\n          type: array\n          description: Subscription Events\n          items:\n            type: string\n            enum: [\n              'subscription.test',\n              'api.updated',\n              'lead.created',\n              'lead.updated',\n              'lead.deleted',\n              'lead.restored',\n              'lead.status.updated',\n              'lead.note.added',\n              'lead.document.uploaded',\n              'lead.email.received',\n              'lead.signature.generated',\n              'lead.signature.opened',\n              'lead.signature.completed',\n\n                            'turboapp.submitted',\n              'turboapp.updated',\n              'turboapp.approved',\n              'turboapp.declined',\n              'residuals.report.published',\n              'residuals.lineitem.added',\n              'chargeback.added',\n              'chargeback.updated',\n              'chargeback.reminder',\n              'retrieval.added',\n              'retrieval.updated',\n              'retrieval.reminder',\n              \n              'ticket.created',\n              'ticket.updated',\n              'ticket.resolved',\n              'ticket.commented',\n              'ticket.comment.edited',\n              'ticket.checklist.updated',\n            ]\n        options:\n          type: object\n          description: \"Options for each event\"\n          properties:\n            lead.status.updated:\n              type: object\n              properties:\n                previousStatuses:\n                  type: array\n                  description: \"Statuses from which a lead should be updated to report the update (any if not specified)\"\n                  items:\n                    type: integer\n                    example: 1\n                newStatuses:\n                  type: array\n                  description: \"Statuses to which a lead should be updated to report the update (any if not specified)\"\n                  items:\n                    type: integer\n                    example: 1\n            lead.created:\n              type: object\n              properties:\n                statuses:\n                  type: array\n                  description: \"Statuses with which a created lead should be reported (any if not specified)\"\n                  items:\n                    type: integer\n                    example: 1\n            lead.note.added:\n              type: object\n              properties:\n                statuses:\n                  type: array\n                  description: \"Statuses of leads whose added notes should be reported (any if not specified)\"\n                  items:\n                    type: integer\n                    example: 1\n            lead.document.uploaded:\n              type: object\n              properties:\n                statuses:\n                  type: array\n                  description: \"Statuses of leads whose uploaded documents should be reported (any if not specified)\"\n                  items:\n                    type: integer\n                    example: 1\n            lead.email.received:\n              type: object\n              properties:\n                statuses:\n                  type: array\n                  description: \"Statuses of leads whose received emails should be reported (any if not specified)\"\n                  items:\n                    type: integer\n                    example: 1\n        multiple_at_once:\n          type: boolean\n          description: \"Report multiple items in one request\"\n\n    TestSubscription:\n      type: object\n      properties:\n        hook:\n          type: object\n          properties:\n            requestId:\n              type: integer\n              example: 1\n              description: \"Request ID\"\n            event:\n              type: string\n              example: 'subscription.test'\n              description: \"Event ID\"\n        data:\n          type: object\n          properties:\n            message:\n              type: string\n              example: \"Test event data from https://iriscrm.com\"\n\n    ApiUpdated:\n      type: object\n      properties:\n        hook:\n          type: object\n          properties:\n            requestId:\n              type: integer\n              example: 1\n              description: \"Request ID\"\n            event:\n              type: string\n              example: 'api.updated'\n              description: \"Event ID\"\n        data:\n          type: object\n          properties:\n            version:\n              type: string\n              example: 1.0.0\n              description: \"Version number\"\n            update:\n              type: string\n              example: 'required'\n              enum: [\n                'required',\n                'optional'\n              ]\n              description: \"Should users do an update of their API clients functional\"\n            details:\n              type: array\n              items:\n                type: object\n                properties:\n                  description:\n                    type: string\n                    example: \"Improving a change log.\"\n                    description: \"Description of update\"\n                  link:\n                    type: string\n                    example: \"https://iriscrm.com/api#/paths/~1subscriptions~1sample~1api.updated/get\"\n                    description: \"Link to endpoint documentation\"\n                  type:\n                    type: string\n                    example: \"create\"\n                    enum: [\n                      'create',\n                      'update'\n                    ]\n                    description: \"Type of API update\"\n            createdAt:\n              type: string\n              format: date-time\n              example: '2019-01-01T12:04:40+05:00'\n              description: \"Date and time of creation (ISO 8601)\"\n\n    LeadCreatedEventInfo:\n      type: object\n      properties:\n        hook:\n          type: object\n          properties:\n            requestId:\n              type: integer\n              example: 1\n              description: \"Request ID\"\n            event:\n              type: string\n              example: 'lead.created'\n              description: \"Event ID\"\n        data:\n          type: object\n          properties:\n            lead:\n              $ref: \"#/components/schemas/FullLeadSubscription\"\n            leads:\n              type: array\n              description: \"'leads' property is passed when 'Multiple at once' feature is enabled\"\n              items:\n                $ref: \"#/components/schemas/FullLeadSubscription\"\n\n    LeadUpdatedEventInfo:\n      type: object\n      properties:\n        hook:\n          type: object\n          properties:\n            requestId:\n              type: integer\n              example: 1\n              description: \"Request ID\"\n            event:\n              type: string\n              example: 'lead.updated'\n              description: \"Event ID\"\n        data:\n          type: object\n          properties:\n            lead:\n              allOf:\n                - $ref: \"#/components/schemas/FullLeadSubscription\"\n                - type: object\n                  properties:\n                    updated_at:\n                      type: string\n                      format: date-time\n                      example: '2019-01-01T12:04:40+05:00'\n                      description: \"Date and time of creation (ISO 8601)\"\n                    updated_by:\n                      $ref: \"#/components/schemas/UserStructure\"\n            leads:\n              type: array\n              description: \"'leads' property is passed when 'Multiple at once' feature is enabled\"\n              items:\n                allOf:\n                  - $ref: \"#/components/schemas/FullLeadSubscription\"\n                  - type: object\n                    properties:\n                      updated_at:\n                        type: string\n                        format: date-time\n                        example: '2019-01-01T12:04:40+05:00'\n                        description: \"Date and time of creation (ISO 8601)\"\n                      updated_by:\n                        $ref: \"#/components/schemas/UserStructure\"\n\n    LeadDeletedEventInfo:\n      type: object\n      properties:\n        hook:\n          type: object\n          properties:\n            requestId:\n              type: integer\n              example: 1\n              description: \"Request ID\"\n            event:\n              type: string\n              example: 'lead.deleted'\n              description: \"Event ID\"\n        data:\n          type: object\n          properties:\n            lead:\n              allOf:\n                - $ref: \"#/components/schemas/ShortLeadSubscription\"\n                - type: object\n                  description: \"'lead' property is passed when 'Multiple at once' feature is disabled\"\n                  properties:\n                    deletedBy:\n                      $ref: \"#/components/schemas/UserStructure\"\n            leads:\n              type: array\n              description: \"'leads' property is passed when 'Multiple at once' feature is enabled\"\n              items:\n                allOf:\n                  - $ref: \"#/components/schemas/ShortLeadSubscription\"\n                  - type: object\n                    description: \"'lead' property is passed when 'Multiple at once' feature is disabled\"\n                    properties:\n                      deletedBy:\n                        $ref: \"#/components/schemas/UserStructure\"\n\n    LeadRestoredEventInfo:\n      type: object\n      properties:\n        hook:\n          type: object\n          properties:\n            requestId:\n              type: integer\n              example: 1\n              description: \"Request ID\"\n            event:\n              type: string\n              example: 'lead.restored'\n              description: \"Event ID\"\n        data:\n          type: object\n          properties:\n            lead:\n              allOf:\n                - $ref: \"#/components/schemas/ShortLeadSubscription\"\n                - type: object\n                  description: \"'lead' property is passed when 'Multiple at once' feature is disabled\"\n                  properties:\n                    restoredAt:\n                      type: string\n                      format: date-time\n                      example: '2019-01-01T12:04:40+05:00'\n                      description: \"Date and time of creation (ISO 8601)\"\n                    restoredBy:\n                      $ref: \"#/components/schemas/UserStructure\"\n            leads:\n              type: array\n              description: \"'leads' property is passed when 'Multiple at once' feature is enabled\"\n              items:\n                allOf:\n                  - $ref: \"#/components/schemas/ShortLeadSubscription\"\n                  - type: object\n                    description: \"'lead' property is passed when 'Multiple at once' feature is disabled\"\n                    properties:\n                      restoredAt:\n                        type: string\n                        format: date-time\n                        example: '2019-01-01T12:04:40+05:00'\n                        description: \"Date and time of creation (ISO 8601)\"\n                      restoredBy:\n                        $ref: \"#/components/schemas/UserStructure\"\n\n    LeadStatusUpdatedEventInfo:\n      type: object\n      properties:\n        hook:\n          type: object\n          properties:\n            requestId:\n              type: integer\n              example: 1\n              description: \"Request ID\"\n            event:\n              type: string\n              example: 'lead.status.updated'\n              description: \"Event ID\"\n        data:\n          type: object\n          properties:\n            lead:\n              allOf:\n                - $ref: \"#/components/schemas/FullLeadSubscription\"\n                - type: object\n                  description: \"'lead' property is passed when 'Multiple at once' feature is disabled\"\n                  properties:\n                    previousStatus:\n                      type: object\n                      properties:\n                        id:\n                          type: integer\n                          example: 1\n                          description: \"Status ID\"\n                        name:\n                          type: string\n                          example: \"Status One\"\n                          description: \"Status Name\"\n                    newStatus:\n                      type: object\n                      properties:\n                        id:\n                          type: integer\n                          example: 2\n                          description: \"Status ID\"\n                        name:\n                          type: string\n                          example: \"Status Two\"\n                          description: \"Status Name\"\n                    statusUpdatedAt:\n                      type: string\n                      format: date-time\n                      example: '2019-01-01T12:04:40+05:00'\n                      description: \"Date and time of creation (ISO 8601)\"\n                    statusUpdatedBy:\n                      $ref: \"#/components/schemas/UserStructure\"\n                    salesRep:\n                      $ref: \"#/components/schemas/UserStructure\"\n            leads:\n              type: array\n              description: \"'leads' property is passed when 'Multiple at once' feature is enabled\"\n              items:\n                allOf:\n                  - $ref: \"#/components/schemas/FullLeadSubscription\"\n                  - type: object\n                    description: \"'lead' property is passed when 'Multiple at once' feature is disabled\"\n                    properties:\n                      previousStatus:\n                        type: object\n                        properties:\n                          id:\n                            type: integer\n                            example: 1\n                            description: \"Status ID\"\n                          name:\n                            type: string\n                            example: \"Status One\"\n                            description: \"Status Name\"\n                      newStatus:\n                        type: object\n                        properties:\n                          id:\n                            type: integer\n                            example: 2\n                            description: \"Status ID\"\n                          name:\n                            type: string\n                            example: \"Status Two\"\n                            description: \"Status Name\"\n                      statusUpdatedAt:\n                        type: string\n                        format: date-time\n                        example: '2019-01-01T12:04:40+05:00'\n                        description: \"Date and time of creation (ISO 8601)\"\n                      statusUpdatedBy:\n                        $ref: \"#/components/schemas/UserStructure\"\n                      salesRep:\n                        $ref: \"#/components/schemas/UserStructure\"\n\n    LeadNoteAddedEventInfo:\n      type: object\n      properties:\n        hook:\n          type: object\n          properties:\n            requestId:\n              type: integer\n              example: 1\n              description: \"Request ID\"\n            event:\n              type: string\n              example: 'lead.note.added'\n              description: \"Event ID\"\n        data:\n          type: object\n          properties:\n            lead:\n              allOf:\n                - $ref: \"#/components/schemas/ShortLeadSubscription\"\n                - type: object\n                  description: \"'lead' property is passed when 'Multiple at once' feature is disabled\"\n                  properties:\n                    note:\n                      type: object\n                      properties:\n                        id:\n                          type: integer\n                          example: 1\n                          description: \"Note ID\"\n                        name:\n                          type: string\n                          example: \"Note text\"\n                          description: \"Note text\"\n                        pinned:\n                          type: boolean\n                          example: true\n                          description: \"Whether The Note Is Pinned\"\n                        images:\n                          type: array\n                          items:\n                            type: string\n                            example: \"http://dummy.url/fake.jpeg\"\n                        createdAt:\n                          type: string\n                          format: date-time\n                          example: '2019-01-01T12:04:40+05:00'\n                          description: \"Date and time of creation (ISO 8601)\"\n                        createdBy:\n                          $ref: \"#/components/schemas/UserStructure\"\n            leads:\n              type: array\n              description: \"'leads' property is passed when 'Multiple at once' feature is enabled\"\n              items:\n                allOf:\n                  - $ref: \"#/components/schemas/ShortLeadSubscription\"\n                  - type: object\n                    properties:\n                      note:\n                        type: object\n                        properties:\n                          id:\n                            type: integer\n                            example: 1\n                            description: \"Note ID\"\n                          name:\n                            type: string\n                            example: \"Note text\"\n                            description: \"Note text\"\n                          pinned:\n                            type: boolean\n                            example: true\n                            description: \"Whether The Note Is Pinned\"\n                          images:\n                            type: array\n                            items:\n                              type: string\n                              example: \"http://dummy.url/fake.jpeg\"\n                          createdAt:\n                            type: string\n                            format: date-time\n                            example: '2019-01-01T12:04:40+05:00'\n                            description: \"Date and time of creation (ISO 8601)\"\n                          createdBy:\n                            $ref: \"#/components/schemas/UserStructure\"\n\n    LeadDocumentUploadedEventInfo:\n      type: object\n      properties:\n        hook:\n          type: object\n          properties:\n            requestId:\n              type: integer\n              example: 1\n              description: \"Request ID\"\n            event:\n              type: string\n              example: 'lead.document.uploaded'\n              description: \"Event ID\"\n        data:\n          type: object\n          properties:\n            lead:\n              allOf:\n                - $ref: \"#/components/schemas/ShortLeadSubscription\"\n                - type: object\n                  description: \"'lead' property is passed when 'Multiple at once' feature is disabled\"\n                  properties:\n                    document:\n                      type: object\n                      properties:\n                        id:\n                          type: integer\n                          example: 1\n                          description: \"Document ID\"\n                        label:\n                          type: string\n                          example: \"Label\"\n                          description: \"Document label\"\n                        filename:\n                          type: string\n                          example: \"file.zip\"\n                          description: \"Filename\"\n                        file:\n                          type: string\n                          example: \"http://dummy.url/file.zip\"\n                          description: \"File url\"\n                        uploadedAt:\n                          type: string\n                          format: date-time\n                          example: '2019-01-01T12:04:40+05:00'\n                          description: \"Date and time of uploading (ISO 8601)\"\n                        uploadedBy:\n                          $ref: \"#/components/schemas/UserStructure\"\n            leads:\n              type: array\n              description: \"'leads' property is passed when 'Multiple at once' feature is enabled\"\n              items:\n                allOf:\n                  - $ref: \"#/components/schemas/ShortLeadSubscription\"\n                  - type: object\n                    properties:\n                      document:\n                        type: object\n                        properties:\n                          id:\n                            type: integer\n                            example: 1\n                            description: \"Document ID\"\n                          label:\n                            type: string\n                            example: \"Label\"\n                            description: \"Document label\"\n                          filename:\n                            type: string\n                            example: \"file.zip\"\n                            description: \"Filename\"\n                          file:\n                            type: string\n                            example: \"http://dummy.url/file.zip\"\n                            description: \"File url\"\n                          uploaded_at:\n                            type: string\n                            format: date-time\n                            example: '2019-01-01T12:04:40+05:00'\n                            description: \"Date and time of uploading (ISO 8601)\"\n                          uploaded_by:\n                            $ref: \"#/components/schemas/UserStructure\"\n\n    LeadEmailReceivedEventInfo:\n      type: object\n      properties:\n        hook:\n          type: object\n          properties:\n            requestId:\n              type: integer\n              example: 1\n              description: \"Request ID\"\n            event:\n              type: string\n              example: 'lead.email.received'\n              description: \"Event ID\"\n        data:\n          type: object\n          properties:\n            lead:\n              type: object\n              description: \"'lead' property is passed when 'Multiple at once' feature is disabled\"\n              properties:\n                id:\n                  type: integer\n                  example: 1\n                  description: \"Lead ID\"\n                lead_url:\n                  type: string\n                  example: \"http://iris/lead/view/1\"\n                  description: \"Lead URL\"\n                name:\n                  type: string\n                  example: \"Super Lead\"\n                  description: \"Lead Name\"\n                emailAddress:\n                  type: string\n                  example: \"lead@email.com\"\n                  description: \"Lead Default Email\"\n                contact:\n                  type: string\n                  example: \"John Doe\"\n                  description: \"Lead Default Contact Name\"\n                phone:\n                  type: string\n                  example: \"555-555-5555\"\n                  description: \"Lead Default Contact Phone Number\"\n                address:\n                  type: object\n                  properties:\n                    address:\n                      type: string\n                      example: \"86th street, apt. 1\"\n                      description: \"Lead Default Address\"\n                    city:\n                      type: string\n                      example: \"Brooklyn\"\n                      description: \"Lead Default City\"\n                    state:\n                      type: string\n                      example: \"NY\"\n                      description: \"Lead Default State\"\n                    zip:\n                      type: string\n                      example: \"10001\"\n                      description: \"Lead Default ZIP\"\n                email:\n                  type: object\n                  properties:\n                    from:\n                      type: string\n                      example: \"John Doe <john@doe.com>\"\n                      description: \"Sent from (name and email)\"\n                    to:\n                      type: string\n                      example: \"jack@sparrow.com\"\n                      description: \"Sent to(email)\"\n                    subject:\n                      type: string\n                      example: \"Subject\"\n                      description: \"Email subject\"\n                    bodyText:\n                      type: string\n                      example: \"Pure text\"\n                      description: \"Email message without html\"\n                    bodyHtml:\n                      type: string\n                      example: \"<html>Html content</html>\"\n                      description: \"Email message including html\"\n                    sentAt:\n                      type: string\n                      format: date-time\n                      example: '2019-01-01T12:04:40+05:00'\n                      description: \"Date and time of receiving the email (ISO 8601)\"\n                assignedUsers:\n                  $ref: \"#/components/schemas/UserListStructure\"\n            leads:\n              type: array\n              description: \"'leads' property is passed when 'Multiple at once' feature is enabled\"\n              items:\n                type: object\n                properties:\n                  id:\n                    type: integer\n                    example: 1\n                    description: \"Lead ID\"\n                  lead_url:\n                    type: string\n                    example: \"http://iris/lead/view/1\"\n                    description: \"Lead URL\"\n                  name:\n                    type: string\n                    example: \"Super Lead\"\n                    description: \"Lead Name\"\n                  emailAddress:\n                    type: string\n                    example: \"lead@email.com\"\n                    description: \"Lead Default Email\"\n                  contact:\n                    type: string\n                    example: \"John Doe\"\n                    description: \"Lead Default Contact Name\"\n                  phone:\n                    type: string\n                    example: \"555-555-5555\"\n                    description: \"Lead Default Contact Phone Number\"\n                  address:\n                    type: object\n                    properties:\n                      address:\n                        type: string\n                        example: \"86th street, apt. 1\"\n                        description: \"Lead Default Address\"\n                      city:\n                        type: string\n                        example: \"Brooklyn\"\n                        description: \"Lead Default City\"\n                      state:\n                        type: string\n                        example: \"NY\"\n                        description: \"Lead Default State\"\n                      zip:\n                        type: string\n                        example: \"10001\"\n                        description: \"Lead Default ZIP\"\n                  email:\n                    type: object\n                    properties:\n                      from:\n                        type: string\n                        example: \"John Doe <john@doe.com>\"\n                        description: \"Sent from (name and email)\"\n                      to:\n                        type: string\n                        example: \"jack@sparrow.com\"\n                        description: \"Sent to(email)\"\n                      subject:\n                        type: string\n                        example: \"Subject\"\n                        description: \"Email subject\"\n                      bodyText:\n                        type: string\n                        example: \"Pure text\"\n                        description: \"Email message without html\"\n                      bodyHtml:\n                        type: string\n                        example: \"<html>Html content</html>\"\n                        description: \"Email message including html\"\n                      sentAt:\n                        type: string\n                        format: date-time\n                        example: '2019-01-01T12:04:40+05:00'\n                        description: \"Date and time of receiving the email (ISO 8601)\"\n                  assignedUsers:\n                    $ref: \"#/components/schemas/UserListStructure\"\n\n    \n    TurboAppSubmited:\n      type: object\n      properties:\n        hook:\n          type: object\n          properties:\n            requestId:\n              type: integer\n              example: 1\n              description: \"Request ID\"\n            event:\n              type: string\n              example: 'turboapp.submitted'\n              description: \"Event ID\"\n        data:\n          type: object\n          properties:\n            applications:\n              type: array\n              items:\n                type: object\n                properties:\n                  id:\n                    type: integer\n                    example: 1\n                    description: \"Application ID\"\n                  application_url:\n                    type: string\n                    example: \"http://iris/office/getApp/acxcxsdalskdjak\"\n                    description: \"Application URL\"\n                  identifier:\n                    type: string\n                    example: \"acxcxsdalskdjak\"\n                    description: \"Application identifier\"\n                  submission_id:\n                    type: string\n                    example: \"sajjcjasdhrccer\"\n                    description: \"Application submission identifier\"\n                  dba:\n                    type: string\n                    example: \"Company name\"\n                    description: \"Merchant name\"\n                  lid:\n                    type: integer\n                    example: 11\n                    description: \"Lead ID related to the application\"\n                  createdAt:\n                    type: string\n                    format: date-time\n                    example: '2019-01-01T12:04:40+05:00'\n                    description: \"Date and time of creation (ISO 8601)\"\n                  createdBy:\n                    $ref: \"#/components/schemas/UserStructure\"\n                  finishedAt:\n                    type: string\n                    format: date-time\n                    example: '2019-01-01T12:04:40+05:00'\n                    description: \"Date and time of submission (ISO 8601)\"\n                  finishedBy:\n                    $ref: \"#/components/schemas/UserStructure\"\n    TurboAppUpdated:\n      type: object\n      properties:\n        hook:\n          type: object\n          properties:\n            requestId:\n              type: integer\n              example: 1\n              description: \"Request ID\"\n            event:\n              type: string\n              example: 'turboapp.updated'\n              description: \"Event ID\"\n        data:\n          type: object\n          properties:\n            accounts:\n              items:\n                type: object\n                properties:\n                  id:\n                    type: integer\n                    example: 1\n                    description: \"Account ID\"\n                  application_url:\n                    type: string\n                    example: \"http://iris/office/getApp/acxcxsdalskdjak\"\n                    description: \"Application URL\"\n                  identifier:\n                    type: string\n                    example: \"acxcxsdalskdjak\"\n                    description: \"Application identifier\"\n                  dba:\n                    type: string\n                    example: \"Company Name\"\n                    description: \"Merchant name\"\n                  mid:\n                    type: integer\n                    example: 123456789\n                    description: \"Merchant ID\"\n                  lid:\n                    type: integer\n                    example: 11\n                    description: \"Lead ID related to the application\"\n                  comments:\n                    type: object\n                    properties:\n                      date:\n                        type: string\n                        format: date-time\n                        example: '2019-01-01T12:04:40+05:00'\n                        description: \"Date and time of comment (ISO 8601)\"\n                      co:\n                        type: string\n                        example: \"SHD\"\n                      text:\n                        type: string\n                        example: \"Approved\"\n                  activation_status:\n                    type: object\n                    properties:\n                      old:\n                        type: string\n                        example: \"In Process\"\n                      new:\n                        type: string\n                        example: \"Approved\"\n                  application_status:\n                    type: object\n                    properties:\n                      old:\n                        type: string\n                        example: \"In Process\"\n                      new:\n                        type: string\n                        example: \"Approved\"\n                  contact_name:\n                    type: string\n                    example: 'Jon Doe'\n                  salesman:\n                    type: string\n                    example: 'Jon Doe'\n                  updatedAt:\n                    type: string\n                    format: date-time\n                    example: '2019-01-01T12:04:40+05:00'\n                    description: \"Date and time of account update (ISO 8601)\"\n    TurboAppApproved:\n      type: object\n      properties:\n        hook:\n          type: object\n          properties:\n            requestId:\n              type: integer\n              example: 1\n              description: \"Request ID\"\n            event:\n              type: string\n              example: 'turboapp.approved'\n              description: \"Event ID\"\n        data:\n          type: object\n          properties:\n            accounts:\n              items:\n                type: object\n                properties:\n                  id:\n                    type: integer\n                    example: 1\n                    description: \"Account ID\"\n                  application_url:\n                    type: string\n                    example: \"http://iris/office/getApp/acxcxsdalskdjak\"\n                    description: \"Application URL\"\n                  identifier:\n                    type: string\n                    example: \"acxcxsdalskdjak\"\n                    description: \"Application identifier\"\n                  processor:\n                    type: string\n                    example: \"Processor Name\"\n                    description: \"Processor name\"\n                  dba:\n                    type: string\n                    example: \"Company Name\"\n                    description: \"Merchant name\"\n                  mid:\n                    type: integer\n                    example: 123456789\n                    description: \"Merchant ID\"\n                  lid:\n                    type: integer\n                    example: 11\n                    description: \"Lead ID related to the application\"\n                  activation_status:\n                    type: object\n                    properties:\n                      old:\n                        type: string\n                        example: \"In Process\"\n                      new:\n                        type: string\n                        example: \"Approved\"\n                  application_status:\n                    type: object\n                    properties:\n                      old:\n                        type: string\n                        example: \"In Process\"\n                      new:\n                        type: string\n                        example: \"Approved\"\n                  contact_name:\n                    type: string\n                    example: 'Jon Doe'\n                  contact_address:\n                    type: string\n                    example: '47 W 13th St, New York, NY 10011, USA'\n                  contact_phone:\n                    type: string\n                    example: '111-111-1111'\n                  salesman:\n                    type: string\n                    example: 'Jon Doe'\n                  co_name:\n                    type: string\n                    example: 'Jon Doe'\n                  approved_at:\n                    type: string\n                    format: date-time\n                    example: '2019-01-01T12:04:40+05:00'\n                    description: \"Date and time of account approve (ISO 8601)\"\n                  legal_name:\n                    type: string\n                    example: \"Company Name\"\n                    description: \"Merchant name\"\n                  comments:\n                    type: object\n                    properties:\n                      date:\n                        type: string\n                        format: date-time\n                        example: '2019-01-01T12:04:40+05:00'\n                        description: \"Date and time of comment (ISO 8601)\"\n                      co:\n                        type: string\n                        example: \"SHD\"\n                      text:\n                        type: string\n                        example: \"Approved\"\n                  entitlements:\n                    type: object\n                    properties:\n                      card_type:\n                        type: string\n                        example: 'Card type'\n                      srv:\n                        type: string\n                        example: 'SRV'\n                      proc_flag:\n                        type: string\n                        example: 'Flag'\n                  users:\n                    type: array\n                    items:\n                      type: string\n                      example: 'John Doe (Sales Reps)'\n                  date_submitted:\n                    type: string\n                    format: date-time\n                    example: '2019-01-01T12:04:40+05:00'\n                    description: \"Date and time of account submit (ISO 8601)\"\n                  date_decision:\n                    type: string\n                    format: date-time\n                    example: '2019-01-01T12:04:40+05:00'\n                    description: \"Date and time of decision (ISO 8601)\"\n                  mcc_code:\n                    type: string\n                    example: '5441'\n                    description: \"MCC code\"\n                  annual_sales:\n                    type: string\n                    example: '$100000'\n                    description: \"Annual sales\"\n                  average_ticket:\n                    type: string\n                    example: '$100000'\n                    description: \"Average ticket\"\n                  tier:\n                    type: string\n                    example: 'Tier 1'\n                  tier_status:\n                    type: string\n                    example: 'N/A'\n    TurboAppDeclined:\n      type: object\n      properties:\n        hook:\n          type: object\n          properties:\n            requestId:\n              type: integer\n              example: 1\n              description: \"Request ID\"\n            event:\n              type: string\n              example: 'turboapp.declined'\n              description: \"Event ID\"\n        data:\n          type: object\n          properties:\n            accounts:\n              items:\n                type: object\n                properties:\n                  id:\n                    type: integer\n                    example: 1\n                    description: \"Account ID\"\n                  application_url:\n                    type: string\n                    example: \"http://iris/office/getApp/acxcxsdalskdjak\"\n                    description: \"Application URL\"\n                  identifier:\n                    type: string\n                    example: \"acxcxsdalskdjak\"\n                    description: \"Application identifier\"\n                  processor:\n                    type: string\n                    example: \"Processor Name\"\n                    description: \"Processor name\"\n                  dba:\n                    type: string\n                    example: \"Company Name\"\n                    description: \"Merchant name\"\n                  mid:\n                    type: integer\n                    example: 123456789\n                    description: \"Merchant ID\"\n                  lid:\n                    type: integer\n                    example: 11\n                    description: \"Lead ID related to the application\"\n                  activation_status:\n                    type: object\n                    properties:\n                      old:\n                        type: string\n                        example: \"In Process\"\n                      new:\n                        type: string\n                        example: \"Declined\"\n                  application_status:\n                    type: object\n                    properties:\n                      old:\n                        type: string\n                        example: \"In Process\"\n                      new:\n                        type: string\n                        example: \"Declined\"\n                  contact_name:\n                    type: string\n                    example: 'Jon Doe'\n                  contact_address:\n                    type: string\n                    example: '47 W 13th St, New York, NY 10011, USA'\n                  contact_phone:\n                    type: string\n                    example: '111-111-1111'\n                  salesman:\n                    type: string\n                    example: 'Jon Doe'\n                  co_name:\n                    type: string\n                    example: 'Jon Doe'\n                  declined_at:\n                    type: string\n                    format: date-time\n                    example: '2019-01-01T12:04:40+05:00'\n                    description: \"Date and time of account was declined (ISO 8601)\"\n                  legal_name:\n                    type: string\n                    example: \"Company Name\"\n                    description: \"Merchant name\"\n                  comments:\n                    type: object\n                    properties:\n                      date:\n                        type: string\n                        format: date-time\n                        example: '2019-01-01T12:04:40+05:00'\n                        description: \"Date and time of comment (ISO 8601)\"\n                      co:\n                        type: string\n                        example: \"SHD\"\n                      text:\n                        type: string\n                        example: \"Declined\"\n                  entitlements:\n                    type: object\n                    properties:\n                      card_type:\n                        type: string\n                        example: 'Card type'\n                      srv:\n                        type: string\n                        example: 'SRV'\n                      proc_flag:\n                        type: string\n                        example: 'Flag'\n                  users:\n                    type: array\n                    items:\n                      type: string\n                      example: 'John Doe (Sales Reps)'\n                  date_submitted:\n                    type: string\n                    format: date-time\n                    example: '2019-01-01T12:04:40+05:00'\n                    description: \"Date and time of account submit (ISO 8601)\"\n                  date_decision:\n                    type: string\n                    format: date-time\n                    example: '2019-01-01T12:04:40+05:00'\n                    description: \"Date and time of decision (ISO 8601)\"\n                  mcc_code:\n                    type: string\n                    example: '5441'\n                    description: \"MCC code\"\n                  annual_sales:\n                    type: string\n                    example: '$100000'\n                    description: \"Annual sales\"\n                  average_ticket:\n                    type: string\n                    example: '$100000'\n                    description: \"Average ticket\"\n                  tier:\n                    type: string\n                    example: 'Tier 1'\n                  tier_status:\n                    type: string\n                    example: 'N/A'\n\n    ReportPublished:\n      type: object\n      properties:\n        hook:\n          type: object\n          properties:\n            requestId:\n              type: integer\n              example: 1\n              description: \"Request ID\"\n            event:\n              type: string\n              example: 'residuals.report.published'\n              description: \"Event ID\"\n        data:\n          type: object\n          properties:\n            reports:\n              type: array\n              items:\n                type: object\n                properties:\n                  id:\n                    type: integer\n                    example: 1\n                  month:\n                    type: integer\n                    example: 3\n                  year:\n                    type: integer\n                    example: 2019\n                  sys_prin:\n                    type: integer\n                    example: 34212312312\n                  created:\n                    type: string\n                    format: date-time\n                    example: '2019-01-01T12:04:40+05:00'\n                    description: \"Ticket created date\"\n                  created_by:\n                    $ref: \"#/components/schemas/UserStructure\"\n                  added_merchants_count:\n                    type: integer\n                    example: 34212312312\n                  rows_count:\n                    type: integer\n                    example: 123\n                  revision:\n                    type: integer\n                    example: 2\n                  deactivated_merchants_count:\n                    type: integer\n                    example: 1\n                  processor_id:\n                    type: integer\n                    example: 1\n                  processor_name:\n                    type: string\n                    example: Test Processor\n                  sum_transactions:\n                    type: integer\n                    example: 1664667\n                  sum_volume:\n                    type: number\n                    example: 0\n                  sum_net:\n                    type: number\n                    example: 0\n                  sum_agent_net:\n                    type: integer\n                    example: 0\n    LineItemAdded:\n      type: object\n      properties:\n        hook:\n          type: object\n          properties:\n            requestId:\n              type: integer\n              example: 1\n              description: \"Request ID\"\n            event:\n              type: string\n              example: 'residuals.lineitem.added'\n              description: \"Event ID\"\n        data:\n          type: object\n          properties:\n            line_items:\n              type: array\n              items:\n                $ref: \"#/components/schemas/LineItems\"\n    \n\n    TicketCreated:\n      type: object\n      properties:\n        hook:\n          type: object\n          properties:\n            requestId:\n              type: integer\n              example: 1\n              description: \"Request ID\"\n            event:\n              type: string\n              example: 'ticket.created'\n              description: \"Event ID\"\n        data:\n          type: object\n          properties:\n            tickets:\n              type: array\n              items:\n                allOf:\n                  - $ref: \"#/components/schemas/Ticket\"\n                  - $ref: \"#/components/schemas/TicketCreatedBlock\"\n                  - $ref: \"#/components/schemas/TicketSubscriptionData\"\n\n    TicketUpdated:\n      type: object\n      properties:\n        hook:\n          type: object\n          properties:\n            requestId:\n              type: integer\n              example: 1\n              description: \"Request ID\"\n            event:\n              type: string\n              example: 'ticket.updated'\n              description: \"Event ID\"\n        data:\n          type: object\n          properties:\n            tickets:\n              type: array\n              items:\n                allOf:\n                  - $ref: \"#/components/schemas/Ticket\"\n                  - $ref: \"#/components/schemas/TicketCreatedBlock\"\n                  - $ref: \"#/components/schemas/TicketSubscriptionData\"\n                  - type: object\n                    properties:\n                      modified:\n                        type: string\n                        format: date-time\n                        example: '2019-01-01T12:04:40+05:00'\n                        description: \"Ticket modified date\"\n                      modified_by:\n                        $ref: \"#/components/schemas/UserStructure\"\n                      last_comment:\n                        type: string\n                        format: date-time\n                        example: '2019-01-01T12:04:40+05:00'\n                        description: \"Ticket last comment date\"\n    TicketResolved:\n      type: object\n      properties:\n        hook:\n          type: object\n          properties:\n            requestId:\n              type: integer\n              example: 1\n              description: \"Request ID\"\n            event:\n              type: string\n              example: 'ticket.resolved'\n              description: \"Event ID\"\n        data:\n          type: object\n          properties:\n            tickets:\n              type: array\n              items:\n                allOf:\n                  - type: object\n                    properties:\n                      created:\n                        type: string\n                        format: date-time\n                        example: '2019-01-01T12:04:40+05:00'\n                        description: \"Ticket created date\"\n                      created_by:\n                        $ref: \"#/components/schemas/UserStructure\"\n                      modified:\n                        type: string\n                        format: date-time\n                        example: '2019-01-01T12:04:40+05:00'\n                        description: \"Ticket modified date\"\n                      modified_by:\n                        $ref: \"#/components/schemas/UserStructure\"\n                      last_comment:\n                        type: string\n                        format: date-time\n                        example: '2019-01-01T12:04:40+05:00'\n                        description: \"Ticket last comment date\"\n                      resolved:\n                        type: string\n                        format: date-time\n                        example: '2019-01-01T12:04:40+05:00'\n                        description: \"Ticket resolved date\"\n                      resolved_by:\n                        $ref: \"#/components/schemas/UserStructure\"\n                  - $ref: \"#/components/schemas/Ticket\"\n                  - $ref: \"#/components/schemas/TicketSubscriptionData\"\n    TicketCommented:\n      type: object\n      properties:\n        hook:\n          type: object\n          properties:\n            requestId:\n              type: integer\n              example: 1\n              description: \"Request ID\"\n            event:\n              type: string\n              example: 'ticket.commented'\n              description: \"Event ID\"\n        data:\n          type: object\n          properties:\n            comments:\n              type: array\n              items:\n                allOf:\n                  - type: object\n                    properties:\n                      id:\n                        type: integer\n                        description: \"Comment id\"\n                        example: 1\n                      ticketId:\n                        type: integer\n                        description: \"Ticket id\"\n                        example: 2\n                      comment:\n                        type: string\n                        description: \"Comment text\"\n                        example: 'Comment text'\n                      created:\n                        type: string\n                        format: date-time\n                        example: '2019-01-01T12:04:40+05:00'\n                        description: \"Comment created date\"\n                      createdBy:\n                        $ref: \"#/components/schemas/UserStructure\"\n                      modified:\n                        type: string\n                        format: date-time\n                        example: '2019-01-01T12:04:40+05:00'\n                        description: \"Comment modified date\"\n                      modified_by:\n                        $ref: \"#/components/schemas/UserStructure\"\n                  - $ref: \"#/components/schemas/CommentSubscriptionData\"\n    SubscriptionCommentEdited:\n      type: object\n      properties:\n        hook:\n          type: object\n          properties:\n            requestId:\n              type: integer\n              example: 1\n              description: \"Request ID\"\n            event:\n              type: string\n              example: 'ticket.comment.edited'\n              description: \"Event ID\"\n        data:\n          type: object\n          properties:\n            comments:\n              type: array\n              items:\n                allOf:\n                  - type: object\n                    properties:\n                      id:\n                        type: integer\n                        description: \"Comment id\"\n                        example: 1\n                      ticketId:\n                        type: integer\n                        description: \"Ticket id\"\n                        example: 2\n                      comment:\n                        type: string\n                        description: \"Comment text\"\n                        example: 'Comment text'\n                      created:\n                        type: string\n                        format: date-time\n                        example: '2019-01-01T12:04:40+05:00'\n                        description: \"Comment created date\"\n                      createdBy:\n                        $ref: \"#/components/schemas/UserStructure\"\n                      modified:\n                        type: string\n                        format: date-time\n                        example: '2019-01-01T12:04:40+05:00'\n                        description: \"Comment modified date\"\n                      modified_by:\n                        $ref: \"#/components/schemas/UserStructure\"\n                  - $ref: \"#/components/schemas/CommentSubscriptionData\"\n    # ChecklistUpdated:\n    #   type: object\n    #   properties:\n    #     hook:\n    #       type: object\n    #       properties:\n    #         requestId:\n    #           type: integer\n    #           example: 1\n    #           description: \"Request ID\"\n    #         event:\n    #           type: string\n    #           example: 'ticket.checklist.updated'\n    #           description: \"Event ID\"\n    #     data:\n    #       type: object\n    #       properties:\n    #         tickets:\n    #           type: array\n    #           items:\n    #             type: object\n    #             properties:\n    #               ticket:\n    #                 allOf:\n    #                   - $ref: \"#/components/schemas/BriefTicketInfo\"\n    #                   - $ref: \"#/components/schemas/TicketSubscriptionData\"\n    #                   - type: object\n    #                     properties:\n    #                       files:\n    #                         type: array\n    #                         items:\n    #                           $ref: \"#/components/schemas/File\"\n    #               checklist:\n    #                 type: array\n    #                 items:\n    #                   allOf:\n    #                     - $ref: \"#/components/schemas/BriefTicketChecklistInfo\"\n    #                     - type: object\n    #                       properties:\n    #                         fileId:\n    #                           type: integer\n    #                           description: \"Checklist file Id\"\n    #                           readOnly: true\n    #                           example: 123\n    #                         completed:\n    #                           type: boolean\n    #                           description: \"Flag is checklist are done\"\n    #                           example: true\n    #                         completed_by:\n    #                           type: integer\n    #                           readOnly: true\n    #                           description: \"User ID who compleated the checklist\"\n    #                           example: 123\n    #                         completed_at:\n    #                           format: date-time\n    #                           readOnly: true\n    #                           example: '2019-01-01T12:04:40+05:00'\n    #                           description: \"Datetime when user have completed the checklist item\"\n    #                         comment:\n    #                           type: string\n    #                           description: \"Comment text\"\n    #                           example: 'Test comment'\n    #                         file:\n    #                           $ref: \"#/components/schemas/File\"\n    UserStructure:\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 1\n          description: \"User ID\"\n        name:\n          type: string\n          example: \"John Doe\"\n          description: \"User Name\"\n        userClass:\n          type: string\n          example: \"Super Admin\"\n          description: \"User Class\"\n\n    UserListStructure:\n      type: array\n      items:\n        $ref: \"#/components/schemas/UserStructure\"\n\n    SignatureGenerated:\n      type: object\n      properties:\n        hook:\n          type: object\n          properties:\n            requestId:\n              type: integer\n              example: 1\n              description: \"Request ID\"\n            event:\n              type: string\n              example: 'lead.signature.generated'\n              description: \"Event ID\"\n        data:\n          type: object\n          properties:\n            signatures:\n              type: array\n              items:\n                type: object\n                properties:\n                  signature:\n                    $ref: \"#/components/schemas/SignatureSubscription\"\n                  application:\n                    $ref: \"#/components/schemas/ApplicationSubscription\"\n                  lead:\n                    $ref: \"#/components/schemas/FullLeadSubscription\"\n    SignatureOpened:\n      type: object\n      properties:\n        hook:\n          type: object\n          properties:\n            requestId:\n              type: integer\n              example: 1\n              description: \"Request ID\"\n            event:\n              type: string\n              example: 'lead.signature.opened'\n              description: \"Event ID\"\n        data:\n          type: object\n          properties:\n            signatures:\n              type: array\n              items:\n                type: object\n                properties:\n                  signature:\n                    $ref: \"#/components/schemas/SignatureSubscription\"\n                  application:\n                    $ref: \"#/components/schemas/ApplicationSubscription\"\n                  lead:\n                    $ref: \"#/components/schemas/FullLeadSubscription\"\n    SignatureSigned:\n      type: object\n      properties:\n        hook:\n          type: object\n          properties:\n            requestId:\n              type: integer\n              example: 1\n              description: \"Request ID\"\n            event:\n              type: string\n              example: 'lead.signature.completed'\n              description: \"Event ID\"\n        data:\n          type: object\n          properties:\n            signatures:\n              type: array\n              items:\n                type: object\n                properties:\n                  signature:\n                    $ref: \"#/components/schemas/SignatureSubscription\"\n                  application:\n                    $ref: \"#/components/schemas/ApplicationSubscription\"\n                  lead:\n                    $ref: \"#/components/schemas/FullLeadSubscription\"\n\n    ShortLeadSubscription:\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 1\n          description: \"Lead ID\"\n        lead_url:\n          type: string\n          example: \"http://iris/lead/view/1\"\n          description: \"Lead URL\"\n        name:\n          type: string\n          example: \"Super Lead\"\n          description: \"Lead Name\"\n        email:\n          type: string\n          example: \"lead@email.com\"\n          description: \"Lead Default Email\"\n        contact:\n          type: string\n          example: \"John Doe\"\n          description: \"Lead Default Contact Name\"\n        phone:\n          type: string\n          example: \"555-555-5555\"\n          description: \"Lead Default Contact Phone Number\"\n        address:\n          type: object\n          properties:\n            address:\n              type: string\n              example: \"86th street, apt. 1\"\n              description: \"Lead Default Address\"\n            city:\n              type: string\n              example: \"Brooklyn\"\n              description: \"Lead Default City\"\n            state:\n              type: string\n              example: \"NY\"\n              description: \"Lead Default State\"\n            zip:\n              type: string\n              example: \"10001\"\n              description: \"Lead Default ZIP\"\n        assignedUsers:\n          $ref: \"#/components/schemas/UserListStructure\"\n\n    FullLeadSubscription:\n      allOf:\n        - $ref: \"#/components/schemas/ShortLeadSubscription\"\n        - type: object\n          properties:\n            id:\n              type: integer\n              example: 1\n              description: \"Lead ID\"\n            lead_url:\n              type: string\n              example: \"http://iris/lead/view/1\"\n              description: \"Lead URL\"\n            name:\n              type: string\n              example: \"Super Lead\"\n              description: \"Lead Name\"\n            email:\n              type: string\n              example: \"lead@email.com\"\n              description: \"Lead Default Email\"\n            contact:\n              type: string\n              example: \"John Doe\"\n              description: \"Lead Default Contact Name\"\n            phone:\n              type: string\n              example: \"555-555-5555\"\n              description: \"Lead Default Contact Phone Number\"\n            address:\n              type: object\n              properties:\n                address:\n                  type: string\n                  example: \"86th street, apt. 1\"\n                  description: \"Lead Default Address\"\n                city:\n                  type: string\n                  example: \"Brooklyn\"\n                  description: \"Lead Default City\"\n                state:\n                  type: string\n                  example: \"NY\"\n                  description: \"Lead Default State\"\n                zip:\n                  type: string\n                  example: \"10001\"\n                  description: \"Lead Default ZIP\"\n            group:\n              type: object\n              properties:\n                id:\n                  type: integer\n                  example: 1\n                  description: \"Group ID\"\n                name:\n                  type: string\n                  example: \"Group\"\n                  description: \"Group Name\"\n            category:\n              type: object\n              properties:\n                id:\n                  type: integer\n                  example: 1\n                  description: \"Status category ID\"\n                name:\n                  type: string\n                  example: \"Status category\"\n                  description: \"Status category Name\"\n            status:\n              type: object\n              properties:\n                id:\n                  type: integer\n                  example: 1\n                  description: \"Status ID\"\n                name:\n                  type: string\n                  example: \"Status\"\n                  description: \"Status Name\"\n            campaign:\n              type: object\n              properties:\n                id:\n                  type: integer\n                  nullable: true\n                  example: 1\n                  description: \"Campaign ID\"\n                name:\n                  type: string\n                  nullable: true\n                  example: \"Campaign\"\n                  description: \"Campaign Name\"\n            source:\n              type: object\n              properties:\n                id:\n                  type: integer\n                  nullable: true\n                  example: 1\n                  description: \"Source ID\"\n                name:\n                  type: string\n                  nullable: true\n                  example: \"Source\"\n                  description: \"Source Name\"\n            createdAt:\n              type: string\n              format: date-time\n              example: '2019-01-01T12:04:40+05:00'\n              description: \"Date and time of creation (ISO 8601)\"\n            createdBy:\n              $ref: \"#/components/schemas/UserStructure\"\n\n    SignatureSubscription:\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 1\n        hash:\n          type: string\n          example: f432f013\n        url:\n          type: string\n          example: \"https://iriscrm.com/sign/f432f013\"\n        status:\n          type: string\n          example: Generated\n        created:\n          type: string\n          format: date-time\n          example: '2019-01-01T12:04:40+05:00'\n          description: \"Signature created date\"\n        created_by:\n          $ref: \"#/components/schemas/UserStructure\"\n        multi_signer:\n          type: boolean\n          example: false\n        completed:\n          type: boolean\n          example: false\n        signers:\n          type: array\n          items:\n            type: object\n            properties:\n              name:\n                type: string\n                example: Tom Sawyer\n              email:\n                type: string\n                example: tomsawyer@example.com\n    ApplicationSubscription:\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 1\n        title:\n          type: string\n          example: App name\n        group_id:\n          type: integer\n          example: 1\n        group_name:\n          type: string\n          example: Group name\n\n    \n    ChargebackAdded:\n      type: object\n      properties:\n        hook:\n          type: object\n          properties:\n            requestId:\n              type: integer\n              example: 1\n              description: \"Request ID\"\n            event:\n              type: string\n              example: 'chargeback.added'\n              description: \"Event ID\"\n        data:\n          type: object\n          properties:\n            chargebacks:\n              type: array\n              items:\n                $ref: '#/components/schemas/ChargebackReplyResponse'\n    ChargebackUpdated:\n      type: object\n      properties:\n        hook:\n          type: object\n          properties:\n            requestId:\n              type: integer\n              example: 1\n              description: \"Request ID\"\n            event:\n              type: string\n              example: 'chargeback.updated'\n              description: \"Event ID\"\n        data:\n          type: object\n          properties:\n            chargebacks:\n              type: array\n              items:\n                $ref: '#/components/schemas/ChargebackReplyResponse'\n    ChargebackReminder:\n      type: object\n      properties:\n        hook:\n          type: object\n          properties:\n            requestId:\n              type: integer\n              example: 1\n              description: \"Request ID\"\n            event:\n              type: string\n              example: 'chargeback.reminder'\n              description: \"Event ID\"\n        data:\n          type: object\n          properties:\n            chargebacks:\n              type: array\n              items:\n                allOf:\n                  - $ref: '#/components/schemas/ChargebackReplyResponse'\n                  - type: object\n                    properties:\n                      due_in:\n                        type: integer\n                        example: 7\n                        description: \"Case due in days\"\n    RetrievalAdded:\n      type: object\n      properties:\n        hook:\n          type: object\n          properties:\n            requestId:\n              type: integer\n              example: 1\n              description: \"Request ID\"\n            event:\n              type: string\n              example: 'retrieval.added'\n              description: \"Event ID\"\n        data:\n          type: object\n          properties:\n            retrievals:\n              type: array\n              items:\n                $ref: '#/components/schemas/RetrievalsReplyResponse'\n    RetrievalUpdated:\n      type: object\n      properties:\n        hook:\n          type: object\n          properties:\n            requestId:\n              type: integer\n              example: 1\n              description: \"Request ID\"\n            event:\n              type: string\n              example: 'retrieval.updated'\n              description: \"Event ID\"\n        data:\n          type: object\n          properties:\n            retrievals:\n              type: array\n              items:\n                $ref: '#/components/schemas/RetrievalsReplyResponse'\n    RetrievalReminder:\n      type: object\n      properties:\n        hook:\n          type: object\n          properties:\n            requestId:\n              type: integer\n              example: 1\n              description: \"Request ID\"\n            event:\n              type: string\n              example: 'retrieval.reminder'\n              description: \"Event ID\"\n        data:\n          type: object\n          properties:\n            retrievals:\n              type: array\n              items:\n                allOf:\n                  - $ref: '#/components/schemas/RetrievalsReplyResponse'\n                  - type: object\n                    properties:\n                      due_in:\n                        type: integer\n                        example: 7\n                        description: \"Case due in days\"\n    \n\nsecurity:\n  - Token: []\n\npaths:\n  /api/v1/merchants:\n    get:\n      operationId: getMerchants\n      tags:\n        - 'Merchants'\n      summary: Get a list of merchants\n      description: Return a list of merchants\n      parameters:\n        - in: query\n          name: page\n          schema:\n            type: integer\n          description: Page number\n        - in: query\n          name: per_page\n          schema:\n            type: integer\n            enum: [\n              10,\n              25,\n              50,\n              100,\n              500,\n              1000\n            ]\n          description: Count of records per page\n        - in: query\n          name: sort_by\n          schema:\n            type: string\n            enum: [mid, name, closed, opened, created, modified, first_batch, last_batch, processor, group, datasource, deactivated, vim, status, active]\n          description: Sorting of merchants by the field value\n        - in: query\n          name: sort_dir\n          schema:\n            type: string\n            enum: [asc, desc]\n            default: asc\n          description: Direction of sorting\n        - in: query\n          name: group\n          schema:\n            type: string\n          description: Filter merchants by a group name\n        - in: query\n          name: processor\n          schema:\n            type: string\n          description: Filter merchants by a processor name\n        - in: query\n          name: datasource\n          schema:\n            type: string\n          description: Filter merchants by a data source name\n        - in: query\n          name: mid\n          schema:\n            type: string\n          description: Filter merchants by a partial merchant number\n        - in: query\n          name: name\n          schema:\n            type: string\n          description: Filter merchants by a partial merchant name\n        - in: query\n          name: vim\n          schema:\n            type: string\n            enum: [Yes, No]\n          description: Filter merchants by a merchant vim field\n        - in: query\n          name: active\n          schema:\n            type: string\n            enum: [Yes, No]\n          description: Filter merchants by a merchant active field\n        - in: query\n          name: status\n          schema:\n            type: string\n            enum: [Open, Closed]\n          description: Filter merchants by a merchant status field\n        - in: query\n          name: date_filter\n          schema:\n            type: string\n            enum: [opened, closed, created, modified, first_batch, last_batch, deactivated]\n          description: Filter merchants by a merchant specific date field\n        - in: query\n          name: start_date\n          schema:\n            type: string\n            format: date-time\n            example: '2019-01-01T12:04:40+05:00'\n          description: 'Start date for date_filter filter in format ISO 8601 for created and modified properties (**Please note that `+` sign should be encoded to `%2B`**), for others properties you should use simple date format (Y-m-d).'\n        - in: query\n          name: end_date\n          schema:\n            type: string\n            format: date-time\n            example: '2019-01-01T12:04:40+05:00'\n          description: 'End date for date_filter filter in format ISO 8601 for created and modified properties (**Please note that `+` sign should be encoded to `%2B`**), for others properties you should use simple date format (Y-m-d)'\n      responses:\n        200:\n          description: A JSON array of merchants\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      allOf:\n                        - $ref: \"#/components/schemas/BriefMerchantInfo\"\n                        - type: object\n                          properties:\n                            leads:\n                              type: array\n                              description: \"List of Lead IDs\"\n                              items:\n                                type: integer\n                                example: 1\n                  links:\n                    $ref: \"#/components/schemas/Links\"\n                  meta:\n                    $ref: \"#/components/schemas/Meta\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            $page = 56; // int | Page number\n            $sort_by = \"mid\"; // string | Sorting of merchants by the field value\n            $sort_dir = \"asc\"; // string | Direction of sorting\n            $group = \"group name\"; // string | Filter merchants by a group name\n            $processor = \"processor name\"; // string | Filter merchants by a processor name\n            $datasource = \"datasource name\"; // string | Filter merchants by a data source name\n            $mid = \"1234\"; // string | Filter merchants by a partial merchant number\n            $name = \"test\"; // string | Filter merchants by a partial merchant name\n            $vim = \"yes\"; // string | Filter merchants by a merchant vim field\n            $active = \"yes\"; // string | Filter merchants by a merchant active field\n            $status = \"open\"; // string | Filter merchants by a merchant status field\n            $date_filter = \"opened\"; // string | Filter merchants by a merchant specific date field\n            $start_date = new \\DateTime(\"2019-10-20T19:20:30+01:00\"); // \\DateTime | Start date for date_filter filter in format ISO 8601(Y-m-d\\\\TH:i:sP) for created and modified properties, for others properties you should use simple date format (Y-m-d).\n            $end_date = new \\DateTime(\"2021-10-20T19:20:30+01:00\"); // \\DateTime | End date for date_filter filter in format ISO 8601(Y-m-d\\\\TH:i:sP) for created and modified properties, for others properties you should use simple date format (Y-m-d)\n\n            try {\n                $result = $apiInstance->merchantsGet($page, $sort_by, $sort_dir, $group, $processor, $datasource, $mid, $name, $vim, $active, $status, $date_filter, $start_date, $end_date);\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling MerchantsApi->merchantsGet: ', $e->getMessage(), PHP_EOL;\n            }\n  /api/v1/merchants/{merchantNumber}:\n    get:\n      operationId: getMerchantInformation\n      tags:\n        - \"Merchants\"\n      summary: Get detailed merchant information\n      description: Finds a merchant by its number and returns merchant and account demographics from the processor\n      parameters:\n        - in: path\n          name: merchantNumber\n          schema:\n            type: integer\n          description: Merchant number\n          required: true\n      responses:\n        200:\n          description: Detailed merchant account information\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  general:\n                    $ref: '#/components/schemas/BriefMerchantInfo'\n                  account_information:\n                    type: array\n                    items:\n                      type: string\n                  leads:\n                    type: array\n                    description: A list of linked lead Id's. First from this list is always used as a primary lead.\n                    items:\n                      type: integer\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $result = $apiInstance->merchantsMerchantNumberGet($merchant_number);\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling MerchantsApi->merchantsMerchantNumberGet: ', $e->getMessage(), PHP_EOL;\n            }\n    patch:\n      operationId: updateMerchantInformation\n      tags:\n        - \"Merchants\"\n      summary: \"Update an existing merchant\"\n      description: \"Update an existing merchant\"\n      parameters:\n        - in: path\n          name: merchantNumber\n          schema:\n            type: integer\n          description: Merchant number\n          required: true\n      requestBody:\n        description: Merchant changes (send only fields you want to change)\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                  description: Merchant name\n                  example: Test Name\n                opened:\n                  type: string\n                  format: date\n                  description: Merchant open date (YYYY-MM-DD)\n                  example: \"2015-10-23\"\n                closed:\n                  type: string\n                  format: date\n                  description: Merchant closed date (YYYY-MM-DD)\n                  example: \"2018-05-03\"\n                processor:\n                  type: string\n                  description: Processor name\n                  example: Test\n                datasource:\n                  type: string\n                  description: Data source name\n                  example: Test\n                group:\n                  type: string\n                  description: Group name\n                  example: Test\n                vim:\n                  type: string\n                  description: Is VIM?\n                  enum: [Yes, No]\n                  example: Yes\n                status:\n                  type: string\n                  description: Merchant status\n                  enum: [Closed, Open]\n                  example: Closed\n                active:\n                  type: string\n                  description: Merchant active flag\n                  enum: [Yes, No]\n                  example: Yes\n      responses:\n        200:\n          description: Merchant has been updated successfully\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n                    example: \"Merchant has been updated successfully\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n        405:\n          $ref: \"#/components/responses/ValidationError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $body = [\n                  'name' => 'Test Name',\n                  'opened' => '2015-10-23',\n                  'closed' => '2018-05-03',\n                  'processor' => 'Test',\n                  'datasource' => 'Test',\n                  'group' => 'Test',\n                  'vim' => 'Yes',\n                  'status' => 'Closed',\n                  'active' => 'Yes',\n                ];\n                $result = $apiInstance->merchantsMerchantNumberPatch($body, $merchant_number);\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling MerchantsApi->merchantsMerchantNumberPatch: ', $e->getMessage(), PHP_EOL;\n            }\n  /api/v1/merchants/{merchantNumber}/deposits/{year}/{month}/{day}:\n    get:\n      operationId: getDepositRecords\n      tags:\n        - \"Merchants\"\n      summary: Get a list of deposits records and totals\n      description: Find all deposit records using a month and year - or a date range.\n      parameters:\n        - in: path\n          name: merchantNumber\n          schema:\n            type: integer\n          description: Merchant number\n          required: true\n        - in: path\n          name: year\n          schema:\n            type: integer\n          description: Start deposits year\n          required: true\n        - in: path\n          name: month\n          schema:\n            type: integer\n          description: Start deposits month\n          required: true\n        - in: path\n          name: day\n          schema:\n            type: integer\n            default: 1\n          description: Start deposits day.\n          required: true\n        - in: query\n          name: end_date\n          schema:\n            type: string\n            format: date\n            example: '2019-01-01'\n          description: Filter deposits by a date in format Y-m-d. Should be no more than 90 days from the start date.\n      responses:\n        200:\n          description: A list of deposits\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  deposits:\n                    $ref: \"#/components/schemas/Deposits\"\n                  adjustments:\n                    $ref: \"#/components/schemas/Adjustments\"\n                  totals:\n                    type: object\n                    properties:\n                      total_paid_by_us:\n                        type: string\n                        example: \"100.00\"\n                      monthly_total:\n                        type: string\n                        example: \"1100.00\"\n                      adjustments:\n                        type: array\n                        items:\n                          type: object\n                          properties:\n                            type:\n                              type: string\n                              example: \"Paid by Amex\"\n                            amount:\n                              type: string\n                              example: \"1100.00\"\n                      deposits:\n                        type: array\n                        items:\n                          type: object\n                          properties:\n                            date:\n                              type: string\n                              example: \"01/01/2021\"\n                            amount:\n                              type: string\n                              example: \"1100.00\"\n                      per_card_type:\n                        type: array\n                        items:\n                          type: object\n                          properties:\n                            type:\n                              type: string\n                              example: \"MC\"\n                            amount:\n                              type: string\n                              example: \"41761.32\"\n                            count:\n                              type: integer\n                              example: 21\n                      transactions_count:\n                        type: integer\n                        example: 21\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n  /api/v1/merchants/{merchantNumber}/transactions:\n    get:\n      operationId: getBatches\n      tags:\n        - \"Merchants\"\n      summary: Get a list of batches and transactions\n      description: Find all batches by merchant number\n      parameters:\n        - in: path\n          name: merchantNumber\n          schema:\n            type: integer\n          description: Merchant number\n          required: true\n        - in: query\n          name: page\n          schema:\n            type: integer\n          description: Page number\n        - in: query\n          name: per_page\n          schema:\n            type: integer\n            enum: [\n              10,\n              25,\n              50,\n              100\n            ]\n          description: Count of records per page\n        - in: query\n          name: start_date\n          schema:\n            type: string\n            format: date-time\n            example: '2019-01-01'\n          description: Filter batches by a date (Y-m-d)\n        - in: query\n          name: end_date\n          schema:\n            type: string\n            format: date-time\n            example: '2019-01-01'\n          description: Filter batches by a date (Y-m-d)\n      responses:\n        200:\n          description: A list of batches and transactions\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/MonetaryBatch\"\n                  links:\n                    $ref: \"#/components/schemas/Links\"\n                  meta:\n                    $ref: \"#/components/schemas/Meta\"\n                  adjustments:\n                    $ref: \"#/components/schemas/Adjustments\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            $start_date = new \\DateTime(\"2019-10-20T19:20:30+01:00\"); // \\DateTime | Filter batches by a date (Y-m-d)\n            $end_date = new \\DateTime(\"2021-10-20T19:20:30+01:00\"); // \\DateTime | Filter batches by a date (Y-m-d)\n\n            try {\n                $result = $apiInstance->merchantsMerchantNumberTransactionsGet($merchant_number, $start_date, $end_date);\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling MerchantsApi->merchantsMerchantNumberTransactionsGet: ', $e->getMessage(), PHP_EOL;\n            }\n  /api/v1/merchants/{merchantNumber}/chargebacks:\n    get:\n      operationId: getChargebacks\n      tags:\n        - \"Merchants\"\n      summary: Get a list of chargeback cases\n      description: Find all chargeback cases by merchant number\n      parameters:\n        - in: path\n          name: merchantNumber\n          schema:\n            type: integer\n          description: Merchant number\n          required: true\n        - in: query\n          name: page\n          schema:\n            type: integer\n          description: Page number\n        - in: query\n          name: per_page\n          schema:\n            type: integer\n            enum: [\n              10,\n              25,\n              50,\n              100\n            ]\n          description: Count of records per page\n        - in: query\n          name: start_date\n          schema:\n            type: string\n            format: date-time\n            example: '2019-01-01'\n          description: Filter batches by a date (Y-m-d)\n        - in: query\n          name: end_date\n          schema:\n            type: string\n            format: date-time\n            example: '2019-01-01'\n          description: Filter batches by a date (Y-m-d)\n      responses:\n        200:\n          description: A list of chargeback cases\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/Chargeback\"\n                  links:\n                    $ref: \"#/components/schemas/Links\"\n                  meta:\n                    $ref: \"#/components/schemas/Meta\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            $start_date = new \\DateTime(\"2019-10-20T19:20:30+01:00\"); // \\DateTime | Filter batches by a date (Y-m-d)\n            $end_date = new \\DateTime(\"2021-10-20T19:20:30+01:00\"); // \\DateTime | Filter batches by a date (Y-m-d)\n\n            try {\n                $result = $apiInstance->merchantsMerchantNumberChargebacksGet($merchant_number, $start_date, $end_date);\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling MerchantsApi->merchantsMerchantNumberChargebacksGet: ', $e->getMessage(), PHP_EOL;\n            }\n  /api/v1/merchants/{merchantNumber}/chargebacks/{caseNumber}:\n    get:\n      operationId: getChargebackCaseInformation\n      tags:\n        - \"Merchants\"\n      summary: Get detailed chargeback case information\n      parameters:\n        - in: path\n          name: merchantNumber\n          schema:\n            type: integer\n          description: Merchant number\n          required: true\n        - in: path\n          name: caseNumber\n          schema:\n            type: string\n          description: Chargeback case number\n          required: true\n      responses:\n        200:\n          description: Chargeback detail information\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ChargebackReplyResponse\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n  /api/v1/merchants/{merchantNumber}/chargebacks/{caseNumber}/dispute_reverse:\n    post:\n      operationId: disputeChargeback\n      tags:\n        - \"DisputeResponder\"\n      summary: Reply To Chargeback Case - Dispute Chargeback Case\n      parameters:\n        - in: path\n          name: merchantNumber\n          schema:\n            type: integer\n          description: Merchant number\n          required: true\n        - in: path\n          name: caseNumber\n          schema:\n            type: string\n          description: Chargeback case ID\n          required: true\n      requestBody:\n        description: Chargeback reply dispute request data\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ChargebackReplyDisputeRequest\"\n      responses:\n        200:\n          description: Reply was successfully processed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 1\n                  message:\n                    type: string\n                    example: \"The operation is successfully completed.\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n  /api/v1/merchants/{merchantNumber}/chargebacks/{caseNumber}/credit_issued:\n    post:\n      operationId: ReplyToChargebackCaseCreditIssued\n      tags:\n        - \"DisputeResponder\"\n      summary: Reply To Chargeback Case - Credit Issued\n      parameters:\n        - in: path\n          name: merchantNumber\n          schema:\n            type: integer\n          description: Merchant number\n          required: true\n        - in: path\n          name: caseNumber\n          schema:\n            type: string\n          description: Chargeback case number\n          required: true\n      requestBody:\n        description: Chargeback reply credit issued request data\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ChargebackReplyCreditIssuedRequest\"\n      responses:\n        200:\n          description: Reply was successfully processed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 1\n                  message:\n                    type: string\n                    example: \"The operation is successfully completed.\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n  /api/v1/merchants/{merchantNumber}/chargebacks/{caseNumber}/accept:\n    post:\n      operationId: ReplyToChargebackCaseAcceptChargeback\n      tags:\n        - \"DisputeResponder\"\n      summary: Reply To Chargeback Case - Accept Chargeback\n      parameters:\n        - in: path\n          name: merchantNumber\n          schema:\n            type: integer\n          description: Merchant number\n          required: true\n        - in: path\n          name: caseNumber\n          schema:\n            type: string\n          description: Chargeback case number\n          required: true\n      responses:\n        200:\n          description: Reply was successfully processed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 1\n                  message:\n                    type: string\n                    example: \"The operation is successfully completed.\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n  /api/v1/merchants/{merchantNumber}/retrievals:\n    get:\n      operationId: getRetrievalCases\n      tags:\n        - \"Merchants\"\n      summary: Get a list of retrieval cases\n      description: Find all retrieval cases by merchant number\n      parameters:\n        - in: path\n          name: merchantNumber\n          schema:\n            type: integer\n          description: Merchant number\n          required: true\n        - in: query\n          name: page\n          schema:\n            type: integer\n          description: Page number\n        - in: query\n          name: per_page\n          schema:\n            type: integer\n            enum: [\n              10,\n              25,\n              50,\n              100\n            ]\n          description: Count of records per page\n        - in: query\n          name: start_date\n          schema:\n            type: string\n            format: date-time\n            example: '2019-01-01'\n          description: Filter batches by a date (Y-m-d)\n        - in: query\n          name: end_date\n          schema:\n            type: string\n            format: date-time\n            example: '2019-01-01'\n          description: Filter batches by a date (Y-m-d)\n      responses:\n        200:\n          description: A list of retrieval cases\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/Retrieval\"\n                  links:\n                    $ref: \"#/components/schemas/Links\"\n                  meta:\n                    $ref: \"#/components/schemas/Meta\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            $start_date = new \\DateTime(\"2019-10-20T19:20:30+01:00\"); // \\DateTime | Filter batches by a date (Y-m-d)\n            $end_date = new \\DateTime(\"2021-10-20T19:20:30+01:00\"); // \\DateTime | Filter batches by a date (Y-m-d)\n\n            try {\n                $result = $apiInstance->merchantsMerchantNumberRetrievalsGet($merchant_number, $start_date, $end_date);\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling MerchantsApi->merchantsMerchantNumberRetrievalsGet: ', $e->getMessage(), PHP_EOL;\n            }\n  /api/v1/merchants/{merchantNumber}/retrievals/{caseNumber}:\n    get:\n      operationId: getDetailedRetrievalCaseInformation\n      tags:\n        - \"Merchants\"\n      summary: Get detailed retrieval case information\n      parameters:\n        - in: path\n          name: merchantNumber\n          schema:\n            type: integer\n          description: Merchant number\n          required: true\n        - in: path\n          name: caseNumber\n          schema:\n            type: string\n          description: Retrieval case number\n          required: true\n      responses:\n        200:\n          description: A list of retrieval cases\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RetrievalsReplyResponse\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n  /api/v1/merchants/{merchantNumber}/retrievals/{caseNumber}/response:\n    post:\n      operationId: ReplyToRetrievalCaseRetrievalResponse\n      tags:\n        - \"DisputeResponder\"\n      summary: Reply To Retrieval Case - Retrieval Response\n      parameters:\n        - in: path\n          name: merchantNumber\n          schema:\n            type: integer\n          description: Merchant number\n          required: true\n        - in: path\n          name: caseNumber\n          schema:\n            type: string\n          description: Retrieval case number\n          required: true\n      requestBody:\n        description: Retrieval reply response request data\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RetrievalReplyResponseRequest\"\n      responses:\n        200:\n          description: Merchant has been updated successfully\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 1\n                  message:\n                    type: string\n                    example: \"The operation is successfully completed.\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n  /api/v1/merchants/{merchantNumber}/retrievals/{caseNumber}/response_with_signature:\n    post:\n      operationId: ReplyToRetrievalCaseRetrievalResponseWithSignature\n      tags:\n        - \"DisputeResponder\"\n      summary: Reply To Retrieval Case - Retrieval Response with Signature\n      parameters:\n        - in: path\n          name: merchantNumber\n          schema:\n            type: integer\n          description: Merchant number\n          required: true\n        - in: path\n          name: caseNumber\n          schema:\n            type: string\n          description: Retrieval case number\n          required: true\n      requestBody:\n        description: Retrieval reply response request data\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RetrievalReplyResponseRequest\"\n      responses:\n        200:\n          description: Reply was successfully processed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 1\n                  message:\n                    type: string\n                    example: \"The operation is successfully completed.\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n  /api/v1/merchants/{merchantNumber}/retrievals/{caseNumber}/unable_to_fulfill_request:\n    post:\n      operationId: ReplyToRetrievalCaseUnableToFulfillRetrievalCaseRequest\n      tags:\n        - \"DisputeResponder\"\n      summary: Reply To Retrieval Case - Unable to Fulfill Retrieval Case Request\n      parameters:\n        - in: path\n          name: merchantNumber\n          schema:\n            type: integer\n          description: Merchant number\n          required: true\n        - in: path\n          name: caseNumber\n          schema:\n            type: string\n          description: Retrieval case number\n          required: true\n      responses:\n        200:\n          description: Reply was successfully processed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 1\n                  message:\n                    type: string\n                    example: \"The operation is successfully completed.\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n  /api/v1/merchants/{merchantNumber}/retrievals/{caseNumber}/unable_to_locate_retrieval:\n    post:\n      operationId: ReplyToRetrievalCaseUnableToLocateRetrievalCase\n      tags:\n        - \"DisputeResponder\"\n      summary: Reply To Retrieval Case - Unable to Locate Retrieval Case\n      parameters:\n        - in: path\n          name: merchantNumber\n          schema:\n            type: integer\n          description: Merchant number\n          required: true\n        - in: path\n          name: caseNumber\n          schema:\n            type: string\n          description: Retrieval case number\n          required: true\n      responses:\n        200:\n          description: Reply was successfully processed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 1\n                  message:\n                    type: string\n                    example: \"The operation is successfully completed.\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n  /api/v1/merchants/{merchantNumber}/retrievals/{caseNumber}/credit_issued:\n    post:\n      operationId: ReplyToRetrievalCreditIssued\n      tags:\n        - \"DisputeResponder\"\n      summary: Reply To Retrieval - Credit Issued\n      parameters:\n        - in: path\n          name: merchantNumber\n          schema:\n            type: integer\n          description: Merchant number\n          required: true\n        - in: path\n          name: caseNumber\n          schema:\n            type: string\n          description: Chargeback case number\n          required: true\n      requestBody:\n        description: Retrieval reply credit issued request data\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RetrievalReplyCreditIssuedRequest\"\n      responses:\n        200:\n          description: Reply was successfully processed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 1\n                  message:\n                    type: string\n                    example: \"The operation is successfully completed.\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n  /api/v1/merchants/{merchantNumber}/retrievals/{caseNumber}/imprint_and_signature:\n    post:\n      operationId: ReplyToRetrievalCaseImprintAndSignature\n      tags:\n        - \"DisputeResponder\"\n      summary: Reply To Retrieval Case - Imprint and Signature\n      parameters:\n        - in: path\n          name: merchantNumber\n          schema:\n            type: integer\n          description: Merchant number\n          required: true\n        - in: path\n          name: caseNumber\n          schema:\n            type: string\n          description: Chargeback case number\n          required: true\n      requestBody:\n        description: Retrieval reply response request data\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RetrievalReplyResponseRequest\"\n      responses:\n        200:\n          description: Reply was successfully processed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 1\n                  message:\n                    type: string\n                    example: \"The operation is successfully completed.\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n  /api/v1/merchants/{merchantNumber}/retrievals/{caseNumber}/responding_by_other_means:\n    post:\n      operationId: ReplyToRetrievalCaseRespondingByOtherMeans\n      tags:\n        - \"DisputeResponder\"\n      summary: Reply To Retrieval Case - Responding by Other Means\n      parameters:\n        - in: path\n          name: merchantNumber\n          schema:\n            type: integer\n          description: Merchant number\n          required: true\n        - in: path\n          name: caseNumber\n          schema:\n            type: string\n          description: Retrieval case number\n          required: true\n      responses:\n        200:\n          description: Reply was successfully processed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 1\n                  message:\n                    type: string\n                    example: \"The operation is successfully completed.\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n  /api/v1/merchants/{merchantNumber}/retrievals/{caseNumber}/add_notes_images:\n    post:\n      operationId: ReplyToRetrievalCaseAddUserNotesImages\n      tags:\n        - \"DisputeResponder\"\n      summary: Reply To Retrieval Case - Add User Notes/Images\n      parameters:\n        - in: path\n          name: merchantNumber\n          schema:\n            type: integer\n          description: Merchant number\n          required: true\n        - in: path\n          name: caseNumber\n          schema:\n            type: integer\n          description: Retrieval case number\n          required: true\n      requestBody:\n        description: Retrieval reply response request\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RetrievalReplyResponseRequest\"\n      responses:\n        200:\n          description: Reply was successfully processed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 1\n                  message:\n                    type: string\n                    example: \"The operation is successfully completed.\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n  /api/v1/merchants/{merchantNumber}/statements:\n    get:\n      operationId: getStatements\n      tags:\n        - \"Merchants\"\n      summary: Get a list of statements\n      description: Return all statements by merchant number\n      parameters:\n        - in: path\n          name: merchantNumber\n          schema:\n            type: integer\n          description: Merchant number\n          required: true\n        - in: query\n          name: page\n          schema:\n            type: integer\n          description: Page number\n        - in: query\n          name: per_page\n          schema:\n            type: integer\n            enum: [\n              10,\n              25,\n              50,\n              100\n            ]\n          description: Count of records per page\n      responses:\n        200:\n          description: A list of statements\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        id:\n                          type: integer\n                          description: \"Statement Id\"\n                        date:\n                          type: string\n                          example: 'March 2019'\n                          description: \"Statement date\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $result = $apiInstance->merchantsMerchantNumberStatementsGet($merchant_number);\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling MerchantsApi->merchantsMerchantNumberStatementsGet: ', $e->getMessage(), PHP_EOL;\n            }\n  /api/v1/merchants/{merchantNumber}/statements/{statementId}:\n    get:\n      operationId: downloadStatement\n      tags:\n        - \"Merchants\"\n      summary: Download a statement\n      description: Download a statement\n      parameters:\n        - in: path\n          name: merchantNumber\n          schema:\n            type: integer\n          description: Merchant number\n          required: true\n        - in: path\n          name: statementId\n          schema:\n            type: integer\n          description: Statement Id\n          required: true\n      responses:\n        200:\n          description: Statement file\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n                description: \"Statement file\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $result = $apiInstance->merchantsMerchantNumberStatementsStatementIdGet($merchant_number, $statement_id);\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling MerchantsApi->merchantsMerchantNumberStatementsStatementIdGet: ', $e->getMessage(), PHP_EOL;\n            }\n  /api/v1/merchants/files:\n    post:\n      operationId: uploadAttachment\n      tags:\n        - \"Merchants\"\n      summary: Upload an attachment to a chargeback or retrieval dispute case\n      description: Upload an attachment to a chargeback or retrieval dispute case\n      parameters:\n        - in: query\n          name: filename\n          schema:\n            type: string\n            example: 'test_name.pdf'\n          description: File name for validation\n          required: true\n      responses:\n        200:\n          description: Document\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                    example: success\n                  file_id:\n                    type: string\n                    example: \"15dfd5e51a10145.dispute_file.pdf\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n        405:\n          $ref: \"#/components/responses/ValidationError\"\n  /api/v1/merchants/{merchantNumber}/chargebacks/{caseNumber}/files/{fileId}:\n    get:\n      operationId: downloadChargebackCaseFiles\n      tags:\n        - \"Merchants\"\n      summary: Download chargeback case files\n      description: Download a file(s) attached to the chargeback case\n      parameters:\n        - in: path\n          name: merchantNumber\n          schema:\n            type: integer\n          description: Merchant number\n          required: true\n        - in: path\n          name: caseNumber\n          schema:\n            type: integer\n          description: Chargeback case number\n          required: true\n        - in: path\n          name: fileId\n          schema:\n            type: integer\n          description: File Id (leave empty to get all case files)\n          required: true\n      responses:\n        200:\n          description: Files\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/DisputeFile\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n\n  /residuals/reports/summary/{year}/{month}:\n    get:\n      operationId: getResidualsSummaryData\n      tags:\n        - 'Residuals'\n      summary: Get residuals summary data\n      description: Get residuals summary data by year and month\n      parameters:\n        - in: path\n          name: year\n          schema:\n            type: integer\n          description: Residuals year\n          required: true\n        - in: path\n          name: month\n          schema:\n            type: integer\n          description: Residuals month\n          required: true\n        - in: query\n          name: processor\n          schema:\n            type: integer\n            example: 12\n          description: Get residuals summary only for specific processor\n        - in: query\n          name: group\n          schema:\n            type: integer\n            example: 2\n          description: Get residuals summary only for specific group\n        - in: query\n          name: agent\n          schema:\n            type: integer\n            example: 123\n          description: Get residuals summary only for specific user agent\n        - in: query\n          name: search\n          schema:\n            type: string\n            example: search text\n          description: Search query\n        - in: query\n          name: hide_null_merchants\n          schema:\n            type: boolean\n            example: false\n          description: Flag for hiding inactive merchants (true by default)\n        - in: query\n          name: page\n          schema:\n            type: integer\n          description: Page number\n        - in: query\n          name: per_page\n          schema:\n            type: integer\n            enum: [\n              10,\n              25,\n              50,\n              100\n            ]\n          description: Count of records per page\n      responses:\n        200:\n          description: A JSON array of totals\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/SummaryResponse\"\n                  links:\n                    $ref: \"#/components/schemas/Links\"\n                  meta:\n                    $ref: \"#/components/schemas/Meta\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n  /residuals/reports/summary/rows/{processor_id}/{year}/{month}:\n    get:\n      operationId: getResiduals\n      tags:\n        - 'Residuals'\n      summary: Get residuals summary with merchant rows\n      description: Get residuals reports summary data with merchant rows for the processor by year and month\n      parameters:\n        - in: path\n          name: processor_id\n          schema:\n            type: integer\n          description: Processor ID\n          required: true\n        - in: path\n          name: year\n          schema:\n            type: integer\n          description: Residuals year\n          required: true\n        - in: path\n          name: month\n          schema:\n            type: integer\n          description: Residuals month\n          required: true\n        - in: query\n          name: group\n          schema:\n            type: integer\n            example: 2\n          description: Get residuals summary only for specific group\n        - in: query\n          name: agent\n          schema:\n            type: integer\n            example: 123\n          description: Get residuals summary only for specific user agent\n        - in: query\n          name: search\n          schema:\n            type: string\n            example: search text\n          description: Search query\n        - in: query\n          name: hide_null_merchants\n          schema:\n            type: boolean\n            example: false\n          description: Flag for hiding inactive merchants (true by default)\n        - in: query\n          name: template\n          schema:\n            type: boolean\n            example: false\n          description: Flag for applying user templates (true by default)\n        - in: query\n          name: page\n          schema:\n            type: integer\n          description: Page number\n        - in: query\n          name: per_page\n          schema:\n            type: integer\n            enum: [\n              10,\n              25,\n              50,\n              100,\n              500,\n              1000\n            ]\n          description: Count of records per page\n\n      responses:\n        200:\n          description: A JSON array of rows\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/MerchantRow\"\n                  links:\n                    $ref: \"#/components/schemas/Links\"\n                  meta:\n                    $ref: \"#/components/schemas/Meta\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n  /residuals/reports/details/{processor_id}/{year}/{month}:\n    get:\n      operationId: GetResidualsDetailsWithMerchantRows\n      tags:\n        - 'Residuals'\n      summary: Get residuals details with merchant rows\n      description: Get residuals reports calculation details for the processor by year and month\n      parameters:\n        - in: path\n          name: processor_id\n          schema:\n            type: integer\n          description: Processor ID\n          required: true\n        - in: path\n          name: year\n          schema:\n            type: integer\n          description: Residuals year\n          required: true\n        - in: path\n          name: month\n          schema:\n            type: integer\n          description: Residuals month\n          required: true\n        - in: query\n          name: group\n          schema:\n            type: integer\n            example: 2\n          description: Get residuals summary only for specific group\n        - in: query\n          name: agent\n          schema:\n            type: integer\n            example: 123\n          description: Get residuals summary only for specific user agent\n        - in: query\n          name: search\n          schema:\n            type: string\n            example: search text\n          description: Search query\n        - in: query\n          name: hide_null_merchants\n          schema:\n            type: boolean\n            example: false\n          description: Flag for hiding inactive merchants (true by default)\n        - in: query\n          name: page\n          schema:\n            type: integer\n          description: Page number\n        - in: query\n          name: per_page\n          schema:\n            type: integer\n            enum: [\n              10,\n              25,\n              50,\n              100\n            ]\n          description: Count of records per page\n      responses:\n        200:\n          description: A JSON array of rows\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/ResidualsDetails\"\n                  links:\n                    $ref: \"#/components/schemas/Links\"\n                  meta:\n                    $ref: \"#/components/schemas/Meta\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n  /residuals/lineitems/{year}/{month}:\n    get:\n      operationId: getResidualsLineItems\n      tags:\n        - 'Residuals'\n      summary: Get residuals line items\n      description: Get residuals line items by month and year\n      parameters:\n        - in: path\n          name: year\n          schema:\n            type: integer\n          description: Line Item year\n          required: true\n        - in: path\n          name: month\n          schema:\n            type: integer\n          description: Line Item month\n          required: true\n        - in: query\n          name: created\n          schema:\n            type: string\n            format: date\n            example: '2019-01-31'\n          description: Filter line items by a date (Y-m-d)\n        - in: query\n          name: dba\n          schema:\n            type: string\n            example: Test Merchant\n          description: DBA\n        - in: query\n          name: username\n          schema:\n            type: string\n            example: Jane Doe\n          description: Username\n        - in: query\n          name: user_id\n          schema:\n            type: integer\n            example: 1\n          description: User ID\n        - in: query\n          name: description\n          schema:\n            type: string\n            example: Description from Line Item\n          description: Description\n        - in: query\n          name: page\n          schema:\n            type: integer\n          description: Page number\n        - in: query\n          name: per_page\n          schema:\n            type: integer\n            enum: [\n              10,\n              25,\n              50,\n              100\n            ]\n          description: Count of records per page\n      responses:\n        200:\n          description: A JSON array of rows\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/LineItems\"\n                  links:\n                    $ref: \"#/components/schemas/Links\"\n                  meta:\n                    $ref: \"#/components/schemas/Meta\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n  /residuals/templates/:\n    get:\n      operationId: getResidualsTemplates\n      tags:\n        - 'Residuals'\n      summary: Get residuals templates\n      description: Get a list of residuals templates with their respective rules\n      parameters:\n        - in: query\n          name: name\n          schema:\n            type: string\n          description: Filter templates by name\n        - in: query\n          name: revision\n          schema:\n            type: string\n          description: Filter templates by revision\n        - in: query\n          name: creator\n          schema:\n            type: integer\n          description: Filter templates by creator\n        - in: query\n          name: page\n          schema:\n            type: integer\n          description: Page number\n        - in: query\n          name: per_page\n          schema:\n            type: integer\n            enum: [\n              10,\n              25,\n              50,\n              100\n            ]\n          description: Count of records per page\n      responses:\n        200:\n          description: A JSON array of rows\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/ResidualTemplate\"\n                  links:\n                    $ref: \"#/components/schemas/Links\"\n                  meta:\n                    $ref: \"#/components/schemas/Meta\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n  /residuals/templates/assigned/{year}/{month}:\n    get:\n      operationId: GetUsersWithAssignedResidualsTemplates\n      tags:\n        - 'Residuals'\n      summary: Get a list of users with assigned residuals templates\n      description: Get a list of users with assigned residuals templates by month and year\n      parameters:\n        - in: path\n          name: year\n          schema:\n            type: integer\n          description: Residuals year\n          required: true\n        - in: path\n          name: month\n          schema:\n            type: integer\n          description: Residuals month\n          required: true\n        - in: query\n          name: user\n          schema:\n            type: integer\n          description: Filter templates by user\n        - in: query\n          name: processor\n          schema:\n            type: integer\n          description: Filter templates by processor\n        - in: query\n          name: group\n          schema:\n            type: integer\n          description: Filter templates by group\n        - in: query\n          name: class\n          schema:\n            type: integer\n          description: Filter templates by user class\n        - in: query\n          name: page\n          schema:\n            type: integer\n          description: Page number\n        - in: query\n          name: per_page\n          schema:\n            type: integer\n            enum: [\n              10,\n              25,\n              50,\n              100\n            ]\n          description: Count of records per page\n      responses:\n        200:\n          description: A JSON array of rows\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/ResidualTemplateAssigned\"\n                  links:\n                    $ref: \"#/components/schemas/Links\"\n                  meta:\n                    $ref: \"#/components/schemas/Meta\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n\n\n  /leads:\n    post:\n      operationId: createLead\n      tags:\n      - \"Leads\"\n      summary: Create a lead\n      description: Create a lead\n      requestBody:\n        description: Lead details\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - status\n                - fields\n              properties:\n                campaign:\n                  type: integer\n                  description: Campaign Id\n                  example: 1\n                status:\n                  type: integer\n                  description: Status Id\n                  example: 1\n                source:\n                  type: integer\n                  description: Source Id\n                  example: 1\n                group:\n                  type: integer\n                  description: Group Id\n                  example: 1\n                users:\n                  type: array\n                  description: Ids of users to assign to a new lead\n                  items:\n                    type: integer\n                  example: [1, 2]\n                fields:\n                  type: array\n                  description: Lead fields\n                  items:\n                    type: object\n                    required:\n                    - id\n                    - value\n                    properties:\n                      id:\n                        type: string\n                        description: Field Id\n                        example: 1\n                      record:\n                        type: string\n                        description: Record Id\n                        example: 1\n                      value:\n                        type: string\n                        description: Field value\n                        example: Test\n      responses:\n        200:\n          description: Lead has been created successfully\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  leadId:\n                    type: integer\n                    description: Lead Id\n                    example: 1\n                  message:\n                    type: string\n                    description: Result message\n                    example: The lead (1) has been created successfully\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        405:\n          $ref: \"#/components/responses/ValidationError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            $body = [\n              'campaign' => 1,\n              'status' => 1,\n              'source' => 1,\n              'group' => 1,\n              'users' => [1, 2],\n              'fields' => [\n                [\n                  'id' => 1,\n                  'record' => 1,\n                  'value' => 'Test',\n                ],\n              ],\n            ];\n\n            try {\n                $result = $apiInstance->leadsPost($body);\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling LeadsApi->leadsPost: ', $e->getMessage(), PHP_EOL;\n            }\n    get:\n      operationId: getLeads\n      tags:\n      - \"Leads\"\n      summary: Get a list of leads\n      description: Get a list of leads\n      parameters:\n      - in: query\n        name: page\n        schema:\n          type: integer\n        description: Page number\n      - in: query\n        name: per_page\n        schema:\n          type: integer\n          enum: [\n            10,\n            25,\n            50,\n            100,\n            500,\n            1000\n          ]\n        description: Count of records per page\n      - in: query\n        name: sort_by\n        schema:\n          type: string\n          enum: [\n            id,\n                        mid,\n                        name,\n            created,\n            modified\n          ]\n        description: Sorting of leads by the field value\n      - in: query\n        name: sort_dir\n        schema:\n          type: string\n          enum: [asc, desc]\n          default: asc\n        description: Direction of sorting\n      - in: query\n        name: group\n        schema:\n          type: integer\n        description: Filter leads by a group id\n\n      \n      - in: query\n        name: mid\n        schema:\n          type: integer\n        description: Filter leads by a merchant id\n      \n      - in: query\n        name: campaign\n        schema:\n          type: integer\n        description: Filter leads by a campaign id\n      - in: query\n        name: source\n        schema:\n          type: integer\n        description: Filter leads by a source id\n      - in: query\n        name: status\n        schema:\n          type: integer\n        description: Filter leads by a status id\n      - in: query\n        name: category\n        schema:\n          type: integer\n        description: Filter leads by a status category id\n      - in: query\n        name: user\n        schema:\n          type: integer\n        description: Filter leads by a user id\n      - in: query\n        name: date_filter\n        schema:\n          type: string\n          enum: [created, modified, last_note, last_status, last_task, last_task_due, last_appointment, last_appointment_due]\n        description: Filtering leads by a date range depends on this filter\n      - in: query\n        name: start_date\n        schema:\n          type: string\n          format: date-time\n          example: '2019-01-01T12:04:40+05:00'\n        description: Filter leads by a date in ISO 8601 format (Y-m-d\\TH:i:sP) (**Please note that `+` sign should be encoded to `%2B`**)\n      - in: query\n        name: end_date\n        schema:\n          type: string\n          format: date-time\n          example: '2019-01-01T12:04:40+05:00'\n        description: Filter leads by a date in ISO 8601 format (Y-m-d\\TH:i:sP) (**Please note that `+` sign should be encoded to `%2B`**)\n      - in: query\n        name: email\n        schema:\n          type: string\n        description: Filter leads by a email\n      responses:\n        200:\n          description: A JSON array of leads\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/BriefLeadInfo\"\n                  links:\n                    $ref: \"#/components/schemas/Links\"\n                  meta:\n                    $ref: \"#/components/schemas/Meta\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        405:\n          $ref: \"#/components/responses/ValidationError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            $page = 56; // int | Page number\n            $sort_by = \"sort_by_example\"; // string | Sorting of leads by the field value\n            $sort_dir = \"sort_dir_example\"; // string | Direction of sorting\n            $group = 56; // int | Filter leads by a group id\n            $campaign = 56; // int | Filter leads by a campaign id\n            $source = 56; // int | Filter leads by a source id\n            $status = 56; // int | Filter leads by a status id\n            $category = 56; // int | Filter leads by a status category id\n            $user = 56; // int | Filter leads by a user id\n            $date_filter = \"date_filter_example\"; // string | Filtering leads by a date range depends on this filter\n            $start_date = new \\DateTime(\"2013-10-20T19:20:30+01:00\"); // \\DateTime | Filter leads by a date in ISO 8601 format (Y-m-d\\\\TH:i:sP)\n            $end_date = new \\DateTime(\"2013-10-20T19:20:30+01:00\"); // \\DateTime | Filter leads by a date in ISO 8601 format (Y-m-d\\\\TH:i:sP)\n            $email = \"email_example\"; // string | Filter leads by a email\n\n            try {\n              $result = $apiInstance->leadsGet($page, $sort_by, $sort_dir, $group, $campaign, $source, $status, $category, $user, $date_filter, $start_date, $end_date, $email);\n              print_r($result);\n            } catch (Exception $e) {\n              echo 'Exception when calling LeadsApi->leadsGet: ', $e->getMessage(), PHP_EOL;\n            }\n  /leads/{leadId}:\n    get:\n      operationId: getDetailedLeadInformation\n      tags:\n      - \"Leads\"\n      summary: Get detailed lead information\n      description: Get detailed lead information\n      parameters:\n      - in: path\n        name: leadId\n        schema:\n          type: integer\n        description: Lead Id\n        required: true\n      responses:\n        200:\n          description: Detailed lead information\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  general:\n                    $ref: '#/components/schemas/BriefLeadInfo'\n                  details:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        id:\n                          type: integer\n                        name:\n                          type: string\n                        type:\n                          type: string\n                          enum: [tab, set]\n                          example: tab\n                        record:\n                          type: integer\n                          description: Record Id\n                        fields:\n                          type: array\n                          items:\n                            type: object\n                            properties:\n                              id:\n                                type: string\n                                description: Field Id\n                              field:\n                                type: string\n                                description: Field name\n                              value:\n                                type: string\n                                description: Field value\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $result = $apiInstance->leadsLeadIdGet($lead_id);\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling LeadsApi->leadsLeadIdGet: ', $e->getMessage(), PHP_EOL;\n            }\n    patch:\n      operationId: updateLead\n      tags:\n      - \"Leads\"\n      summary: Update a lead\n      description: Update a lead\n      parameters:\n      - in: path\n        name: leadId\n        schema:\n          type: integer\n        description: Lead Id\n        required: true\n      requestBody:\n        description: Lead changes (send only fields you want to change)\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                campaign:\n                  type: integer\n                  description: Campaign Id\n                  example: 1\n                status:\n                  type: integer\n                  description: Status Id\n                  example: 1\n                source:\n                  type: integer\n                  description: Source Id\n                  example: 1\n                group:\n                  type: integer\n                  description: Group Id\n                  example: 1\n                fields:\n                  type: array\n                  description: Lead fields\n                  items:\n                    type: object\n                    required:\n                    - id\n                    - value\n                    properties:\n                      id:\n                        type: string\n                        description: Field Id\n                        example: 1\n                      record:\n                        type: string\n                        description: Record Id\n                        example: 1\n                      value:\n                        type: string\n                        description: Field value\n                        example: Test\n      responses:\n        200:\n          description: Lead has been updated successfully\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n                    example: \"The lead has been updated successfully\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n        405:\n          $ref: \"#/components/responses/ValidationError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            $body = [\n              'campaign' => 1,\n              'status' => 1,\n              'source' => 1,\n              'group' => 1,\n              'users' => [1, 2],\n              'fields' => [\n                [\n                  'id' => 1,\n                  'record' => 1,\n                  'value' => 'Test',\n                ],\n              ],\n            ];\n\n            try {\n                $result = $apiInstance->leadsLeadIdPatch($body, $lead_id);\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling LeadsApi->leadsLeadIdPatch: ', $e->getMessage(), PHP_EOL;\n            }\n  /leads/{leadId}/records/{catId}/{recordId}:\n    delete:\n      operationId: deleteRecordFromALeadRecordSet\n      tags:\n        - \"Leads\"\n      summary: Delete record from a lead record set\n      description: The method allows deleting records from lead tabs with the type \"set\".\n                   Values of `catId` and `recordId` can be obtained\n                   by request [Get detailed lead information](#/paths/~1leads~1{leadId}/get)\n                   (`details.id` = `catId`, `details.record` = `recordId`).\n      parameters:\n        - in: path\n          name: leadId\n          schema:\n            type: integer\n          description: Lead Id\n          required: true\n        - in: path\n          name: catId\n          schema:\n            type: integer\n          description: Record category ID\n          required: true\n        - in: path\n          name: recordId\n          schema:\n            type: integer\n          description: Record ID\n          required: true\n      responses:\n        200:\n          description: The record has been deleted successfully\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n                    example: \"The record has been deleted successfully\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n        405:\n          $ref: \"#/components/responses/ValidationError\"\n\n  /leads/fields:\n    post:\n      operationId: createNewLeadField\n      tags:\n        - \"Leads\"\n      summary: Create a new lead field\n      description: Create a new lead field\n      requestBody:\n        description: LeadField data\n        content:\n          application/json:\n            schema:\n              allOf:\n                - $ref: \"#/components/schemas/LeadField\"\n                - type: object\n                  properties:\n                    override:\n                      type: boolean\n                      description: Flag for overriding existing special field\n                      example: true\n      responses:\n        200:\n          description: Created field\n          content:\n            application/json:\n              schema:\n                summary: Created field attributes\n                $ref: \"#/components/schemas/LeadField\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n        405:\n          $ref: \"#/components/responses/ValidationError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            $body = [\n              'tab' => 1,\n              'label' => 'New Field',\n              'type' => 'Select',\n              'length' => 10,\n              'default' => 'Some Value',\n              'alignment' => 'left',\n              'searchable' => 1,\n              'special' => 'dba',\n              'options' => [\n                'dropdown' =>  [\n                  'key' => 'key',\n                  'value' => 'Option Value',\n                ],\n                'dupecheck' => true,\n                'contactid' => 1,\n                'mask' => 'validateSSN',\n                'copy' => [\n                  'title' => NULL,\n                  'from' => [ 1, 2,],\n                  'to' => [1, 2],\n                ],\n                'hyperlink' => true,\n                'sms' => true,\n                'dialer' => true,\n                'googlemaps' => [1, 2],\n                'zipcode_autocomplete' =>\n                [\n                  'city' => [1, 2],\n                  'state' => [1, 2],\n                  'zipcode' => [1, 2],\n                ],\n              ],\n              'readOnly' => false,\n              'required' => true,\n              'override' => true,\n            ];\n\n            try {\n                $result = $apiInstance->leadsFieldsPost($body);\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling LeadsApi->leadsFieldsPost: ', $e->getMessage(), PHP_EOL;\n            }\n    get:\n      operationId: GetAvailableLeadFields\n      tags:\n        - \"Leads\"\n      summary: Get a list of available lead fields\n      description: Get a list of available lead fields\n      parameters:\n        - in: query\n          name: page\n          schema:\n            type: integer\n          description: Page number\n        - in: query\n          name: per_page\n          schema:\n            type: integer\n            enum: [\n              10,\n              25,\n              50,\n              100,\n              500,\n              1000\n            ]\n          description: Count of records per page\n      responses:\n        200:\n          description: A list of available fields\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/LeadField\"\n                  links:\n                    $ref: \"#/components/schemas/Links\"\n                  meta:\n                    $ref: \"#/components/schemas/Meta\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $result = $apiInstance->leadsFieldsGet();\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling LeadsApi->leadsFieldsGet: ', $e->getMessage(), PHP_EOL;\n            }\n  /leads/fields/{fieldId}:\n    get:\n      operationId: getLeadField\n      tags:\n        - \"Leads\"\n      summary: Get a lead field\n      description: Get a lead field\n      parameters:\n        - in: path\n          name: fieldId\n          schema:\n            type: integer\n          description: Field Id\n          required: true\n      responses:\n        200:\n          description: Get a lead field\n          content:\n            application/json:\n              schema:\n                summary: Lead field\n                $ref: \"#/components/schemas/LeadField\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $result = $apiInstance->leadsFieldsFieldIdGet($field_id);\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling LeadsApi->leadsFieldsFieldIdGet: ', $e->getMessage(), PHP_EOL;\n            }\n    patch:\n      operationId: updateLeadField\n      tags:\n        - \"Leads\"\n      summary: Update a lead field\n      description: Updation an lead field for current Lead\n      parameters:\n        - in: path\n          name: fieldId\n          schema:\n            type: integer\n          description: Field Id\n          required: true\n      requestBody:\n        description: LeadField data\n        content:\n          application/json:\n            schema:\n              allOf:\n                - $ref: \"#/components/schemas/LeadField\"\n                - type: object\n                  properties:\n                    override:\n                      type: boolean\n                      description: Flag for overriding existing special field\n                      example: true\n      responses:\n        200:\n          description: Updated field attributes\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LeadField\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n        405:\n          $ref: \"#/components/responses/ValidationError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $body = [\n                  'tab' => 1,\n                  'label' => 'New Field',\n                  'type' => 'Select',\n                  'length' => 10,\n                  'default' => 'Some Value',\n                  'alignment' => 'left',\n                  'searchable' => 1,\n                  'special' => 'dba',\n                  'options' => [\n                    'dropdown' =>  [\n                      'key' => 'key',\n                      'value' => 'Option Value',\n                    ],\n                    'dupecheck' => true,\n                    'contactid' => 1,\n                    'mask' => 'validateSSN',\n                    'copy' => [\n                      'title' => NULL,\n                      'from' => [ 1, 2,],\n                      'to' => [1, 2],\n                    ],\n                    'hyperlink' => true,\n                    'sms' => true,\n                    'dialer' => true,\n                    'googlemaps' => [1, 2],\n                    'zipcode_autocomplete' =>\n                    [\n                      'city' => [1, 2],\n                      'state' => [1, 2],\n                      'zipcode' => [1, 2],\n                    ],\n                  ],\n                  'readOnly' => false,\n                  'required' => true,\n                  'override' => true,\n                ];\n                $result = $apiInstance->leadsFieldsFieldIdPatch($field_id, $body);\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling LeadsApi->leadsFieldsFieldIdPatch: ', $e->getMessage(), PHP_EOL;\n            }\n  /leads/fields/{fieldId}/order:\n    patch:\n      operationId: updateLeadFieldOrderPosition\n      tags:\n        - \"Leads\"\n      summary: Update a lead field order position\n      description: Update a lead field order position for the current Lead. You can send value equal to 0 and type 'increment' or 'decrement' to set the field as first or last in the field list.\n      parameters:\n        - in: path\n          name: fieldId\n          schema:\n            type: integer\n          description: Field Id\n          required: true\n      requestBody:\n        description: LeadFieldOrder data\n        content:\n          application/json:\n            schema:\n              summary: New field position values\n              $ref: \"#/components/schemas/LeadFieldOrder\"\n      responses:\n        200:\n          description: Updated Lead field order position\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: string\n                    example: \"Successful\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n        405:\n          $ref: \"#/components/responses/ValidationError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $body = [\n                  'value' => 1,\n                  'type' => 'increment',\n                ];\n                $result = $apiInstance->leadsFieldsFieldIdOrderPatch($field_id, $body);\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling LeadsApi->leadsFieldsFieldIdOrderPatch: ', $e->getMessage(), PHP_EOL;\n            }\n  /leads/fields/tabs:\n    post:\n      operationId: createLeadFieldTab\n      tags:\n        - \"Leads\"\n      summary: Create a lead field tab\n      description: Create a lead field tab\n      requestBody:\n        description: LeadFieldTab data\n        content:\n          application/json:\n            schema:\n              summary: New lead field tab attributes\n              $ref: \"#/components/schemas/LeadFieldTab\"\n      responses:\n        200:\n          description: Create a lead field tab\n          content:\n            application/json:\n              schema:\n                summary: New lead field tab\n                $ref: \"#/components/schemas/LeadFieldTab\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n        405:\n          $ref: \"#/components/responses/ValidationError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            $body = [\n              'active' => 1,\n              'position' => 1,\n              'class' => 'Document',\n              'name' => 'New tab',\n              'description' => 'New tab',\n              'order' => 1,\n            ];\n            try {\n                $result = $apiInstance->leadsFieldsTabsPost($body);\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling LeadsApi->leadsFieldsTabsPost: ', $e->getMessage(), PHP_EOL;\n            }\n    get:\n      operationId: getAllLeadFieldTabs\n      tags:\n        - \"Leads\"\n      summary: Get a list of all lead field tabs\n      description: Get a list of all lead field tabs\n      parameters:\n        - in: query\n          name: page\n          schema:\n            type: integer\n          description: Page number\n        - in: query\n          name: per_page\n          schema:\n            type: integer\n            enum: [\n              10,\n              25,\n              50,\n              100,\n              500,\n              1000\n            ]\n          description: Count of records per page\n      responses:\n        200:\n          description: A list of all lead field tabs\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/LeadFieldTab\"\n                  links:\n                    $ref: \"#/components/schemas/Links\"\n                  meta:\n                    $ref: \"#/components/schemas/Meta\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $result = $apiInstance->leadsFieldsTabsGet();\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling LeadsApi->leadsFieldsTabsGet: ', $e->getMessage(), PHP_EOL;\n            }\n  /leads/fields/tabs/{tabId}:\n    get:\n      operationId: GetLeadFieldTab\n      tags:\n        - \"Leads\"\n      summary: Get a lead field tab\n      description: Get a lead field tab\n      parameters:\n        - in: path\n          name: tabId\n          schema:\n            type: integer\n          description: Lead field tab Id\n          required: true\n      responses:\n        200:\n          description: Lead field tab\n          content:\n            application/json:\n              schema:\n                summary: One lead field tab\n                $ref: \"#/components/schemas/LeadFieldTab\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $result = $apiInstance->leadsFieldsTabsTabIdGet($tab_id);\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling LeadsApi->leadsFieldsTabsTabIdGet: ', $e->getMessage(), PHP_EOL;\n            }\n    patch:\n      operationId: UpdateLeadFieldTab\n      tags:\n        - \"Leads\"\n      summary: Update a lead field tab\n      description: Update a lead field tab\n      parameters:\n        - in: path\n          name: tabId\n          schema:\n            type: integer\n          description: Lead field tab Id\n          required: true\n      requestBody:\n        description: LeadFieldTab data\n        content:\n          application/json:\n            schema:\n              summary: New lead field tab attributes\n              $ref: \"#/components/schemas/LeadFieldTab\"\n      responses:\n        200:\n          description: Updated lead field tab\n          content:\n            application/json:\n              schema:\n                summary: One lead field tab\n                $ref: \"#/components/schemas/LeadFieldTab\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n        405:\n          $ref: \"#/components/responses/ValidationError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $body = [\n                  'active' => 1,\n                  'position' => 1,\n                  'class' => 'Document',\n                  'name' => 'New tab',\n                  'description' => 'New tab',\n                  'order' => 1,\n                ];\n                $result = $apiInstance->leadsFieldsTabsTabIdPatch($tab_id, $body);\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling LeadsApi->leadsFieldsTabsTabIdPatch: ', $e->getMessage(), PHP_EOL;\n            }\n  /leads/pricing_templates:\n    get:\n      operationId: getPricingTemplates\n      tags:\n        - \"Leads\"\n      summary: Get pricing templates\n      description: Get pricing templates\n      parameters:\n        - in: query\n          name: page\n          schema:\n            type: integer\n          description: Page number\n        - in: query\n          name: per_page\n          schema:\n            type: integer\n            enum: [\n                10,\n                25,\n                50,\n                100\n            ]\n          description: Count of records per page\n      responses:\n        200:\n          description: A list of pricing templates\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        id:\n                          type: integer\n                          description: Template Id\n                        name:\n                          type: string\n                          description: Template name\n                          example: \"Pricing #1\"\n                        created_by:\n                          type: integer\n                          example: 1\n                          description: Template creator\n                        created_at:\n                          type: string\n                          format: date-time\n                          example: \"2021-02-24T13:16:13+00:00\"\n                          description: Template modification date and time (ISO-8601)\n                        modified_by:\n                          type: integer\n                          example: 1\n                          description: Template modification date and time (ISO-8601)\n                        modified_at:\n                          type: string\n                          format: date-time\n                          example: \"2021-02-24T13:16:13+00:00\"\n                          description: Last template editor\n                        fields_changed_by:\n                          type: integer\n                          example: 1\n                          description: Last fields editor\n                        fields_changed_at:\n                          type: string\n                          format: date-time\n                          example: \"2021-02-24T13:16:13+00:00\"\n                          description: Last fileds modification date and time (ISO-8601)\n                        values:\n                          type: array\n                          items:\n                            type: object\n                            properties:\n                              field_id:\n                                type: integer\n                                example: 133\n                              value:\n                                type: string\n                                example: Test\n\n\n                  links:\n                    $ref: \"#/components/schemas/Links\"\n                  meta:\n                    $ref: \"#/components/schemas/Meta\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n\n  /leads/{leadId}/notes:\n    post:\n      operationId: CreateLeadNote\n      tags:\n      - \"Leads\"\n      summary: Create a lead note\n      description: Create a lead note\n      parameters:\n      - in: path\n        name: leadId\n        schema:\n          type: integer\n        description: Lead Id\n        required: true\n      requestBody:\n        description: Create a lead note\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n              - tab\n              - note\n              - sticky\n              properties:\n                tab:\n                  type: integer\n                  description: Tab Id\n                  example: 1\n                note:\n                  type: string\n                  description: Note text\n                  example: Test note\n                sticky:\n                  type: string\n                  description: Pin to top?\n                  enum: [Yes, No]\n                  example: Yes\n      responses:\n        200:\n          description: \"Note has been added successfully\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n                    example: \"The note has been added successfully\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n        405:\n          $ref: \"#/components/responses/ValidationError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            $body = [\n              'tab' => 1,\n              'note' => 'Test note',\n              'sticky' => 'Yes',\n            ];\n\n            try {\n                $result = $apiInstance->leadsLeadIdNotesPost($body, $lead_id);\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling LeadsApi->leadsLeadIdNotesGet: ', $e->getMessage(), PHP_EOL;\n            }\n    get:\n      operationId: getLeadNotes\n      tags:\n      - \"Leads\"\n      summary: Get lead notes\n      description: Get lead notes\n      parameters:\n      - in: path\n        name: leadId\n        schema:\n          type: integer\n        description: Lead Id\n        required: true\n      - in: query\n        name: page\n        schema:\n          type: integer\n        description: Page number\n      - in: query\n        name: per_page\n        schema:\n          type: integer\n          enum: [\n            10,\n            25,\n            50,\n            100\n          ]\n        description: Count of records per page\n      responses:\n        200:\n          description: A list of lead notes\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        id:\n                          type: integer\n                          description: Note Id\n                        sticky:\n                          type: string\n                          description: Pin note to top\n                          enum: [Yes, No]\n                          example: Yes\n                        tab:\n                          $ref: \"#/components/schemas/BriefTabInfo\"\n                        text:\n                          type: string\n                          description: Note text\n                        created:\n                          type: string\n                          description: Note creation date and time (ISO-8601)\n                        modified:\n                          type: string\n                          description: Note modification date and time (ISO-8601)\n                  links:\n                    $ref: \"#/components/schemas/Links\"\n                  meta:\n                    $ref: \"#/components/schemas/Meta\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $result = $apiInstance->leadsLeadIdNotesGet($lead_id);\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling LeadsApi->leadsLeadIdNotesGet: ', $e->getMessage(), PHP_EOL;\n            }\n  /leads/{leadId}/appointments:\n    post:\n      operationId: CreateLeadAppointment\n      tags:\n      - \"Leads\"\n      summary: Create a lead appointment\n      description: Create a lead appointment\n      parameters:\n      - in: path\n        name: leadId\n        schema:\n          type: integer\n        description: Lead Id\n        required: true\n      requestBody:\n        description: Create a lead appointment\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n              - date\n              - date_end\n              - text\n              - set_by\n              - set_for\n              properties:\n                date:\n                  type: string\n                  format: date-time\n                  example: \"2018-05-30T13:16:13+00:00\"\n                  description: Date in format ISO 8601 (Y-m-d\\TH:i:sP)\n                date_end:\n                  type: string\n                  format: date-time\n                  example: \"2018-05-30T13:26:13+00:00\"\n                  description: End date in format ISO 8601 (Y-m-d\\TH:i:sP)\n                text:\n                  type: string\n                  description: Task description\n                set_by:\n                  type: string\n                  description: Task set by user (User Id)\n                  example: 1\n                set_for:\n                  type: string\n                  description: Task set for user (User Id)\n                  example: 1\n      responses:\n        200:\n          description: \"Appointment has been created successfully\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n                    example: \"Appointment has been created successfully\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n        405:\n          $ref: \"#/components/responses/ValidationError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            $body = [\n              'date' => '2018-05-30T13:16:13+00:00',\n              'date_end' => '2018-05-30T13:26:13+00:00',\n              'text' => 'string',\n              'set_by' => 1,\n              'set_for' => 1,\n            ];\n\n            try {\n                $result = $apiInstance->leadsLeadIdAppointmentsPost($body, $lead_id);\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling LeadsApi->leadsLeadIdAppointmentsPost: ', $e->getMessage(), PHP_EOL;\n            }\n    get:\n      operationId: getLeadAppointments\n      tags:\n      - \"Leads\"\n      summary: Get lead appointments\n      description: Get lead appointments\n      parameters:\n      - in: path\n        name: leadId\n        schema:\n          type: integer\n        description: Lead Id\n        required: true\n      - in: query\n        name: page\n        schema:\n          type: integer\n        description: Page number\n      - in: query\n        name: set_for\n        schema:\n          type: integer\n        description: Filter by the user for who appointment was created\n      - in: query\n        name: set_by\n        schema:\n          type: integer\n        description: Filter by the user for who have created an appointment\n      - in: query\n        name: modified_by\n        schema:\n          type: integer\n        description: Filter by the user for who have modified an appointment\n      - in: query\n        name: confirmed_by\n        schema:\n          type: integer\n        description: Filter by the user for who have confirmed an appointment\n      - in: query\n        name: rescheduled_by\n        schema:\n          type: integer\n        description: Filter by the user for who have rescheduled an appointment\n      - in: query\n        name: seen_by\n        schema:\n          type: integer\n        description: Filter by the user for who have mark an appointment as seen\n      - in: query\n        name: rescheduled_count\n        schema:\n          type: integer\n        description: Filter by the count of rescheduling\n      - in: query\n        name: done\n        schema:\n          type: boolean\n        description: Filter by the done flag\n      - in: query\n        name: per_page\n        schema:\n          type: integer\n          enum: [\n            10,\n            25,\n            50,\n            100\n          ]\n        description: Count of records per page\n      - in: query\n        name: sort_by\n        schema:\n          type: string\n          enum: [\n            'id',\n            'set_for',\n            'set_at',\n            'set_by',\n            'modified',\n            'modified_by',\n            'date',\n            'date_end',\n            'confirmed',\n            'confirmed_by',\n            'seen',\n            'seen_by',\n            'rescheduled',\n            'rescheduled_by',\n            'rescheduled_by'\n          ]\n        description: Sort appointments by columns\n      - in: query\n        name: sort_dir\n        schema:\n          type: string\n          enum: [\n            'asc',\n            'desc'\n          ]\n        description: Sort direction\n      - in: query\n        name: date_filter\n        schema:\n          type: string\n          enum: [\n            'date',\n            'set_at',\n            'modified',\n            'confirmed',\n            'rescheduled',\n            'seen'\n          ]\n        description: Filtering appointments by a date range depends on this filter\n      - in: query\n        name: start_date\n        schema:\n          type: string\n          format: date\n          example: '2019-01-01'\n        description: Filter appointments by a date in format Y-m-d\n      - in: query\n        name: end_date\n        schema:\n          type: string\n          format: date\n          example: '2019-01-02'\n        description: Filter leads by a date in format Y-m-d\n      responses:\n        200:\n          description: A list of lead appointments\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/LeadAppointment\"\n                  links:\n                    $ref: \"#/components/schemas/Links\"\n                  meta:\n                    $ref: \"#/components/schemas/Meta\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $result = $apiInstance->leadsLeadIdAppointmentsGet($lead_id);\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling LeadsApi->leadsLeadIdAppointmentsGet: ', $e->getMessage(), PHP_EOL;\n            }\n  /leads/{leadId}/applications/{applicationId}/populate:\n    post:\n      operationId: populatePdfDocument\n      tags:\n      - \"Leads\"\n      summary: Populate PDF Document\n      description: Populate a PDF document from a lead.\n      parameters:\n      - in: path\n        name: leadId\n        schema:\n          type: integer\n        description: Lead Id\n        required: true\n      - in: path\n        name: applicationId\n        schema:\n          type: integer\n        description: Application Id\n        required: true\n      responses:\n        200:\n          description: \"Document populated successfully.\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n                    example: \"Document populated successfully.\"\n                  url:\n                    type: string\n                    example: \"https://iriscrm.com/download/leadfile/1\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n        405:\n          $ref: \"#/components/responses/ValidationError\"\n        500:\n          $ref: \"#/components/responses/ServerError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $result = $apiInstance->leadsLeadIdApplicationsApplicationIdPopulatePost($lead_id, $application_id);\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling LeadsApi->leadsLeadIdApplicationsApplicationIdPopulatePost: ', $e->getMessage(), PHP_EOL;\n            }\n  /leads/{leadId}/tasks:\n    post:\n      operationId: createLeadTask\n      tags:\n      - \"Leads\"\n      summary: Create a lead task\n      description: Create a lead task\n      parameters:\n      - in: path\n        name: leadId\n        schema:\n          type: integer\n        description: Lead Id\n        required: true\n      requestBody:\n        description: Create a lead task\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n              - priority\n              - date\n              - date_end\n              - text\n              - set_by\n              - set_for\n              properties:\n                priority:\n                  type: string\n                  description: Priority\n                  enum: [Normal, Medium, High]\n                  example: Normal\n                date:\n                  type: string\n                  description: Date in ISO 8601 format (Y-m-d\\TH:i:sP)\n                  example: \"2018-05-30T13:16:13+00:00\"\n                date_end:\n                  type: string\n                  description: End date in ISO 8601 format (Y-m-d\\TH:i:sP)\n                  example: \"2018-05-30T13:26:13+00:00\"\n                text:\n                  type: string\n                  description: Task description\n                set_by:\n                  type: string\n                  description: Task set by user (user Id)\n                  example: 1\n                set_for:\n                  type: string\n                  description: Task set for user (user Id)\n                  example: 1\n      responses:\n        200:\n          description: \"Task has been created successfully\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n                    example: \"Task has been created successfully\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n        405:\n          $ref: \"#/components/responses/ValidationError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            $body = [\n              'priority' => 'Normal',\n              'date' => '2018-05-30T13:16:13+00:00',\n              'date_end' => '2018-05-30T13:26:13+00:00',\n              'text' => 'string',\n              'set_by' => 1,\n              'set_for' => 1,\n            ];\n\n            try {\n                $result = $apiInstance->leadsLeadIdTasksPost($body, $lead_id);\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling LeadsApi->leadsLeadIdTasksPost: ', $e->getMessage(), PHP_EOL;\n            }\n    get:\n      operationId: getLeadTasks\n      tags:\n      - \"Leads\"\n      summary: Get lead tasks\n      description: Get lead tasks\n      parameters:\n      - in: path\n        name: leadId\n        schema:\n          type: integer\n        description: Lead Id\n        required: true\n      - in: query\n        name: page\n        schema:\n          type: integer\n        description: Page number\n      - in: query\n        name: per_page\n        schema:\n          type: integer\n          enum: [\n            10,\n            25,\n            50,\n            100\n          ]\n        description: Count of records per page\n      responses:\n        200:\n          description: A list of lead tasks\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        id:\n                          type: integer\n                          description: Task Id\n                        user:\n                          $ref: \"#/components/schemas/BriefUserInfo\"\n                        text:\n                          type: string\n                          description: Task description\n                        date:\n                          type: string\n                          format: date-time\n                          example: '2019-01-01T12:04:40+05:00'\n                          description: Task Date and time in format ISO 8601 (Y-m-d\\TH:i:sP)\n                        confirmed:\n                          type: string\n                          format: date-time\n                          example: '2019-01-01T12:04:40+05:00'\n                          description: Task confirmed date and time in format ISO 8601 (Y-m-d\\TH:i:sP)\n                  links:\n                    $ref: \"#/components/schemas/Links\"\n                  meta:\n                    $ref: \"#/components/schemas/Meta\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $result = $apiInstance->leadsLeadIdTasksGet($lead_id);\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling LeadsApi->leadsLeadIdTasksGet: ', $e->getMessage(), PHP_EOL;\n            }\n  /leads/{leadId}/users:\n    post:\n      operationId: assignUser\n      tags:\n      - \"Leads\"\n      summary: Assign a user\n      description: Assign a user\n      parameters:\n      - in: path\n        name: leadId\n        schema:\n          type: integer\n        description: Lead Id\n        required: true\n      requestBody:\n        description: Create a lead task\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n              - user\n              properties:\n                user:\n                  type: integer\n                  description: User Id\n      responses:\n        200:\n          description: \"User has been assigned successfully\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n                    example: \"User has been assigned successfully\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n        405:\n          $ref: \"#/components/responses/ValidationError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            $body = [\n              'user' => 1\n            ];\n\n            try {\n                $result = $apiInstance->leadsLeadIdUsersPost($body, $lead_id);\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling LeadsApi->leadsLeadIdUsersPost: ', $e->getMessage(), PHP_EOL;\n            }\n    get:\n      operationId: getAssignedUsers\n      tags:\n      - \"Leads\"\n      summary: Get a list of assigned users\n      description: Get a list of assigned users\n      parameters:\n      - in: path\n        name: leadId\n        schema:\n          type: integer\n        description: Lead Id\n        required: true\n      - in: query\n        name: page\n        schema:\n          type: integer\n        description: Page number\n      - in: query\n        name: per_page\n        schema:\n          type: integer\n          enum: [\n            10,\n            25,\n            50,\n            100,\n            500,\n            1000\n          ]\n        description: Count of records per page\n      responses:\n        200:\n          description: A list of assigned users\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/BriefUserInfoWithClass\"\n                  links:\n                    $ref: \"#/components/schemas/Links\"\n                  meta:\n                    $ref: \"#/components/schemas/Meta\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $result = $apiInstance->leadsLeadIdUsersGet($lead_id);\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling LeadsApi->leadsLeadIdUsersGet: ', $e->getMessage(), PHP_EOL;\n            }\n  /leads/{leadId}/users/{userId}:\n    delete:\n      operationId: unassignUserFromLead\n      tags:\n      - \"Leads\"\n      summary: Unassign a user from a lead\n      description: Unassign a user from a lead\n      parameters:\n      - in: path\n        name: leadId\n        schema:\n          type: integer\n        description: Lead Id\n        required: true\n      - in: path\n        name: userId\n        schema:\n          type: integer\n        description: User Id\n        required: true\n      responses:\n        200:\n          description: \"User has been unassigned successfully\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n                    example: \"User has been unassigned successfully\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n        405:\n          $ref: \"#/components/responses/ValidationError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $result = $apiInstance->leadsLeadIdUsersUserIdDelete($lead_id, $user_id);\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling LeadsApi->leadsLeadIdUsersUserIdDelete: ', $e->getMessage(), PHP_EOL;\n            }\n  /leads/{leadId}/documents:\n    # post:\n    #   operationId: uploadDocument\n    #   tags:\n    #   - \"Leads\"\n    #   summary: Upload a document\n    #   description: Upload a document\n    #   parameters:\n    #   - in: path\n    #     name: leadId\n    #     schema:\n    #       type: integer\n    #     description: Lead Id\n    #     required: true\n    #   - in: query\n    #     name: tab\n    #     schema:\n    #       type: integer\n    #     description: Tab Id\n    #     required: true\n    #   - in: query\n    #     name: label\n    #     schema:\n    #       type: integer\n    #     description: Label Id\n    #     required: true\n    #   - in: query\n    #     name: filename\n    #     schema:\n    #       type: string\n    #     description: File name\n    #     required: true\n    #   requestBody:\n    #     description: Payload data\n    #     content:\n    #       application/octet-stream:\n    #         schema:\n    #           type: string\n    #           format: binary\n    #   responses:\n    #     200:\n    #       description: Document has been uploaded successfully\n    #       content:\n    #         text/plain:\n    #           schema:\n    #             type: string\n    #             example: The document has been uploaded successfully\n    #     401:\n    #       $ref: \"#/components/responses/UnauthorizedError\"\n    #     403:\n    #       $ref: \"#/components/responses/ForbiddenError\"\n    #     404:\n    #       $ref: \"#/components/responses/NotFoundError\"\n    #     405:\n    #       $ref: \"#/components/responses/ValidationError\"\n    #   x-code-samples:\n    #     - lang: 'PHP'\n    #       source: |\n    #         $tab = 1; // int | Tab Id\n    #         $label = 2; // int | Label Id\n    #         $filename = \"filename_example\"; // string | File name\n    #         $body = 'file content';\n\n    #         try {\n    #             $result = $apiInstance->leadsLeadIdDocumentsPost($tab, $label, $filename, $lead_id, $body);\n    #             print_r($result);\n    #         } catch (Exception $e) {\n    #             echo 'Exception when calling LeadsApi->leadsLeadIdDocumentsPost: ', $e->getMessage(), PHP_EOL;\n    #         }\n    get:\n      operationId: getAvailableDocuments\n      tags:\n      - \"Leads\"\n      summary: Get a list of available documents\n      description: Get a list of available documents\n      parameters:\n      - in: path\n        name: leadId\n        schema:\n          type: integer\n        description: Lead Id\n        required: true\n      - in: query\n        name: page\n        schema:\n          type: integer\n        description: Page number\n      - in: query\n        name: per_page\n        schema:\n          type: integer\n          enum: [\n            10,\n            25,\n            50,\n            100,\n            500,\n            1000\n          ]\n        description: Count of records per page\n      responses:\n        200:\n          description: A list of available documents\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    description: \"A list of lead documents\"\n                    items:\n                      type: object\n                      properties:\n                        id:\n                          type: string\n                          description: Document Id\n                        name:\n                          type: string\n                          description: Name\n                        size:\n                          type: string\n                          description: Size\n                        tab:\n                          type: object\n                          properties:\n                            id:\n                              type: integer\n                              example: 1\n                            name:\n                              type: string\n                              example: Tab name\n                        label:\n                          type: object\n                          properties:\n                            id:\n                              type: integer\n                              example: 1\n                            name:\n                              type: string\n                              example: Label name\n                  links:\n                    $ref: \"#/components/schemas/Links\"\n                  meta:\n                    $ref: \"#/components/schemas/Meta\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $result = $apiInstance->leadsLeadIdDocumentsGet($lead_id);\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling LeadsApi->leadsLeadIdDocumentsGet: ', $e->getMessage(), PHP_EOL;\n            }\n  /leads/file_labels:\n    get:\n      operationId: getAvailableDocumentLabels\n      tags:\n        - \"Leads\"\n      summary: Get a list of available document labels\n      description: Get a list of all document labels available when uploading and downloading files\n      parameters:\n        - in: query\n          name: page\n          schema:\n            type: integer\n          description: Page number\n        - in: query\n          name: per_page\n          schema:\n            type: integer\n            enum: [\n              10,\n              25,\n              50,\n              100\n            ]\n          description: Count of records per page\n      responses:\n        200:\n          description: A list of available labels\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/FileLabel\"\n                  links:\n                    $ref: \"#/components/schemas/Links\"\n                  meta:\n                    $ref: \"#/components/schemas/Meta\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n  /leads/{leadId}/documents/{documentId}:\n    get:\n      operationId: downoladDocument\n      tags:\n      - \"Leads\"\n      summary: Download a document\n      description: Download a document\n      parameters:\n      - in: path\n        name: leadId\n        schema:\n          type: integer\n        description: Lead Id\n        required: true\n      - in: path\n        name: documentId\n        schema:\n          type: integer\n        description: Document Id\n        required: true\n      responses:\n        200:\n          description: Document\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n                description: \"Document\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $result = $apiInstance->leadsLeadIdDocumentsDocumentIdGet($lead_id, $document_id);\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling LeadsApi->leadsLeadIdDocumentsDocumentIdGet: ', $e->getMessage(), PHP_EOL;\n            }\n  /leads/{leadId}/signatures/{applicationId}/generate:\n    post:\n      operationId: generateEsignatureDocument\n      tags:\n      - \"E-Signature\"\n      summary: Generate an e-signature document\n      description: Generate a new electronic signature document and receive a signature-ready application URL.\n      parameters:\n      - in: path\n        name: leadId\n        schema:\n          type: integer\n        description: Lead Id\n        required: true\n      - in: path\n        name: applicationId\n        schema:\n          type: integer\n        description: Application Id\n        required: true\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                expire:\n                  type: boolean\n                  example: true\n                  description: Expire the previously generated application\n      responses:\n        200:\n          description: New E-Sign application hash and link to signature\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n                    description: Result message\n                    example: \"E-signature documented was generated successfully.\"\n                  hash:\n                    type: string\n                    description: E-Sign hash\n                  url:\n                    type: string\n                    example: \"https://iriscrm.com/sign/91391fe5\"\n                    description: E-Sign URL\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n        405:\n          $ref: \"#/components/responses/ValidationError\"\n        500:\n          $ref: \"#/components/responses/ServerError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $result = $apiInstance->leadsLeadIdSignaturesApplicationIdGeneratePost($lead_id, $application_id);\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling LeadsApi->leadsLeadIdSignaturesApplicationIdGeneratePost: ', $e->getMessage(), PHP_EOL;\n            }\n  /leads/{leadId}/signatures/{applicationId}/send:\n    post:\n      operationId: sendEsignatureDocument\n      tags:\n        - \"E-Signature\"\n      summary: Send an e-signature document\n      description: Send an e-signature document using an email template for signature.\n      parameters:\n        - in: path\n          name: leadId\n          schema:\n            type: integer\n          description: Lead Id\n          required: true\n        - in: path\n          name: applicationId\n          schema:\n            type: integer\n          description: Application Id\n          required: true\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                recipients:\n                  type: array\n                  minItems: 1\n                  maxItems: 5\n                  items:\n                    type: object\n                    properties:\n                      fieldId:\n                        type: integer\n                        description: Lead Field Id with email address\n                        example: 1\n                      email:\n                        description: Recipient Email\n                        type: string\n                        format: email\n                        example: example@iriscrm.com\n                      name:\n                        description: Recipient Name\n                        type: string\n                        example: John Doe\n                expire:\n                  type: boolean\n                  example: true\n                  description: Expire the previously generated application\n      responses:\n        200:\n          description: New E-Sign application hash and link to signature\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n                    description: Result message\n                    example: 'E-signature documented was generated and sent to email successfully.'\n                  emailId:\n                    type: integer\n                    description: Id of email what was sent\n                    example: 11\n                  hash:\n                    type: string\n                    example: '91391fe5'\n                    description: E-Sign hash\n                  url:\n                    type: string\n                    example: \"https://iriscrm.com/sign/91391fe5\"\n                    description: E-Sign URL\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n        405:\n          $ref: \"#/components/responses/ValidationError\"\n        500:\n          $ref: \"#/components/responses/ServerError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $body = [\n                  'fieldId' => 1\n                ];\n                $result = $apiInstance->leadsLeadIdSignaturesApplicationIdSendPost($lead_id, $application_id, $body);\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling LeadsApi->leadsLeadIdSignaturesApplicationIdSendPost: ', $e->getMessage(), PHP_EOL;\n            }\n  /leads/signatures/{applicationId}/download:\n    get:\n      operationId: DownloadEsignatureDocument\n      tags:\n        - \"E-Signature\"\n      summary: Download an e-signature document\n      description: Download an e-signature document.\n      parameters:\n        - in: path\n          name: applicationId\n          schema:\n            type: integer\n          description: Application Id\n          required: true\n      responses:\n        200:\n          description: E-Sign document\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n        405:\n          $ref: \"#/components/responses/ValidationError\"\n        500:\n          $ref: \"#/components/responses/ServerError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $result = $apiInstance->leadsSignaturesApplicationIdDownloadGet($application_id);\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling LeadsApi->leadsSignaturesApplicationIdDownloadGet: ', $e->getMessage(), PHP_EOL;\n            }\n  /leads/{leadId}/signatures:\n    get:\n      operationId: GetAllLeadEsignaturesDocuments\n      tags:\n      - \"E-Signature\"\n      summary: Get a list of all lead e-signatures documents\n      description: Get a list of all lead e-signatures documents\n      parameters:\n      - in: path\n        name: leadId\n        schema:\n          type: integer\n        description: Lead Id\n        required: true\n      - in: query\n        name: page\n        schema:\n          type: integer\n        description: Page number\n      - in: query\n        name: per_page\n        schema:\n          type: integer\n          enum: [\n            10,\n            25,\n            50,\n            100,\n            500,\n            1000\n          ]\n        description: Count of records per page\n      responses:\n        '200':\n          description: A list with all lead e-signatures\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        status:\n                          type: string\n                          example: Generated\n                        url:\n                          type: string\n                          example: \"https://iriscrm.com/sign/91391fe5\"\n                        templateId:\n                          type: string\n                          example: E-signature template\n                        templateName:\n                          type: string\n                          example: E-signature name\n                  links:\n                    $ref: \"#/components/schemas/Links\"\n                  meta:\n                    $ref: \"#/components/schemas/Meta\"\n        '401':\n          $ref: \"#/components/responses/UnauthorizedError\"\n        '403':\n          $ref: \"#/components/responses/ForbiddenError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $result = $apiInstance->leadsLeadIdSignaturesApplicationIdGeneratePost($lead_id, $application_id);\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling LeadsApi->leadsLeadIdSignaturesApplicationIdGeneratePost: ', $e->getMessage(), PHP_EOL;\n            }\n  /leads/{leadId}/emails/{templateId}:\n    post:\n      operationId: SendEmailToLeadWithTemplate\n      tags:\n      - \"Leads\"\n      summary: Send an email to lead with template\n      description: Send an email to lead with template\n      parameters:\n      - in: path\n        name: leadId\n        schema:\n          type: integer\n        description: Lead Id\n        required: true\n      - in: path\n        name: templateId\n        schema:\n          type: integer\n        description: Template Id\n        required: true\n      requestBody:\n        description: Payload data\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - type: object\n                  properties:\n                    fieldId:\n                      type: integer\n                      description: Lead Field Id with email address\n                      example: 1\n                    placeholders:\n                      type: object\n                      description: Object with template placeholders\n                - type: object\n                  properties:\n                    email:\n                      description: Recipient Email\n                      type: string\n                      format: email\n                      example: example@iriscrm.com\n                    name:\n                      description: Recipient Name\n                      type: string\n                      example: John Doe\n                    placeholders:\n                      type: object\n                      description: Object with template placeholders\n      responses:\n        200:\n          description: Result of proccess\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n                    description: Email has been sent successfully\n                    example: Email has been sent successfully.\n                  emailId:\n                    type: string\n                    description: Id of email what will be sended to lead\n                    example: 1\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n        405:\n          $ref: \"#/components/responses/ValidationError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $body = [\n                  'fieldId' => 1\n                ];\n\n                $result = $apiInstance->leadsLeadIdEmailsTemplateIdPost($lead_id, $template_id, $body);\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling LeadsApi->leadsLeadIdEmailsTemplateIdPost: ', $e->getMessage(), PHP_EOL;\n            }\n  /leads/emails/templates:\n    get:\n      operationId: getEmailTemplates\n      tags:\n        - \"Leads\"\n      summary: Get a list of email templates\n      description: Get list of available email templates for a lead email\n      responses:\n        200:\n          description: A list of available email templates\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/BriefEmailTemplate\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n        405:\n          $ref: \"#/components/responses/ValidationError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $result = $apiInstance->leadsEmailsTemplatesGet();\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling LeadsApi->leadsEmailsTemplatesGet: ', $e->getMessage(), PHP_EOL;\n            }\n  /leads/{leadId}/mailbox/{emailId}/attachment/{attachmentId}:\n    get:\n      operationId: downloadMailboxEmailAttachment\n      tags:\n        - \"Leads\"\n      summary: Download a mailbox email attachment\n      description: Download a mailbox email attachment\n      parameters:\n        - in: path\n          name: leadId\n          schema:\n            type: integer\n          description: Lead Id\n          required: true\n        - in: path\n          name: emailId\n          schema:\n            type: integer\n          description: Email Id\n          required: true\n        - in: path\n          name: attachmentId\n          schema:\n            type: integer\n          description: Attachment Id\n          required: true\n      responses:\n        200:\n          description: Document\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n                description: \"Attachment\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $result = $apiInstance->leadsLeadIdMailboxEmailIdAttachmentAttachmentIdGet($lead_id, $email_id, $attachment_id);\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling LeadsApi->leadsLeadIdMailboxEmailIdAttachmentAttachmentIdGet: ', $e->getMessage(), PHP_EOL;\n            }\n  /leads/{leadId}/sms/{templateId}:\n    post:\n      operationId: sendSmsToLeadWithSelectedSmsTemplate\n      tags:\n      - \"Leads\"\n      summary: Send an SMS to lead with selected SMS template\n      description: Send an SMS to lead with selected SMS template.\n      parameters:\n      - in: path\n        name: leadId\n        schema:\n          type: integer\n        description: Lead Id\n        required: true\n      - in: path\n        name: templateId\n        schema:\n          type: integer\n        description: Template Id\n        required: true\n      requestBody:\n        description: Payload data\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - type: object\n                  properties:\n                    fieldId:\n                      type: integer\n                      example: 1\n                - type: object\n                  properties:\n                    phone:\n                      type: string\n                      example: '206-206-2623'\n      responses:\n        200:\n          description: Result of proccess\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n                    description: SMS has been sent successfully.\n                    example: SMS has been sent successfully.\n                  receiver:\n                    type: string\n                    description: Phone number of SMS receiver.\n                    example: '123-456-7890'\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n        405:\n          $ref: \"#/components/responses/ValidationError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $body = [\n                  'fieldId' => 1\n                ];\n                $result = $apiInstance->leadsLeadIdSmsTemplateIdPost($lead_id, $template_id, $body);\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling LeadsApi->leadsLeadIdSmsTemplateIdPost: ', $e->getMessage(), PHP_EOL;\n            }\n  /leads/sms/templates:\n    get:\n      operationId: GetSmsTemplates\n      tags:\n        - \"Leads\"\n      summary: Get list of SMS templates\n      description: Get list of available SMS templates for sending SMS to a lead\n      responses:\n        200:\n          description: A list of available SMS templates\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/BriefSmsTemplate\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n        405:\n          $ref: \"#/components/responses/ValidationError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $result = $apiInstance->leadsSmsTemplatesGet();\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling LeadsApi->leadsSmsTemplatesGet: ', $e->getMessage(), PHP_EOL;\n            }\n  /leads/{leadId}/activity/campaign:\n    get:\n      operationId: GetAllLeadCampaignActivity\n      tags:\n      - \"Leads\"\n      summary: Get a list of all lead campaign activity\n      description: Get a list of all lead campaign activity\n      parameters:\n      - in: path\n        name: leadId\n        schema:\n          type: integer\n        description: Lead Id\n        required: true\n      - in: query\n        name: page\n        schema:\n          type: integer\n        description: Page number\n      - in: query\n        name: per_page\n        schema:\n          type: integer\n          enum: [\n            10,\n            25,\n            50,\n            100,\n            500,\n            1000\n          ]\n        description: Count of records per page\n      responses:\n        200:\n          description: A list of activity\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/CampaignActivity\"\n                  links:\n                    $ref: \"#/components/schemas/Links\"\n                  meta:\n                    $ref: \"#/components/schemas/Meta\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $result = $apiInstance->leadsLeadIdActivityCampaignGet($lead_id);\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling LeadsApi->leadsLeadIdActivityCampaignGet: ', $e->getMessage(), PHP_EOL;\n            }\n  /leads/{leadId}/activity/deletion:\n    get:\n      operationId: GetAllLeadDeletionActivity\n      tags:\n      - \"Leads\"\n      summary: Get a list of all lead deletion activity\n      description: Get a list of all lead deletion activity\n      parameters:\n      - in: path\n        name: leadId\n        schema:\n          type: integer\n        description: Lead Id\n        required: true\n      - in: query\n        name: page\n        schema:\n          type: integer\n        description: Page number\n      - in: query\n        name: per_page\n        schema:\n          type: integer\n          enum: [\n            10,\n            25,\n            50,\n            100,\n            500,\n            1000\n          ]\n        description: Count of records per page\n      responses:\n        200:\n          description: A list of activity\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/DeletionActivity\"\n                  links:\n                    $ref: \"#/components/schemas/Links\"\n                  meta:\n                    $ref: \"#/components/schemas/Meta\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $result = $apiInstance->leadsLeadIdActivityDeletionGet($lead_id);\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling LeadsApi->leadsLeadIdActivityDeletionGet: ', $e->getMessage(), PHP_EOL;\n            }\n  /leads/{leadId}/activity/duplicates:\n    get:\n      operationId: GetAllLeadDuplicateActivity\n      tags:\n      - \"Leads\"\n      summary: Get a list of all lead duplicate activity\n      description: Get a list of all lead duplicate activity\n      parameters:\n      - in: path\n        name: leadId\n        schema:\n          type: integer\n        description: Lead Id\n        required: true\n      - in: query\n        name: page\n        schema:\n          type: integer\n        description: Page number\n      - in: query\n        name: per_page\n        schema:\n          type: integer\n          enum: [\n            10,\n            25,\n            50,\n            100,\n            500,\n            1000\n          ]\n        description: Count of records per page\n      responses:\n        200:\n          description: A list of activity\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/DuplicateActivity\"\n                  links:\n                    $ref: \"#/components/schemas/Links\"\n                  meta:\n                    $ref: \"#/components/schemas/Meta\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $result = $apiInstance->leadsLeadIdActivityDuplicatesGet($lead_id);\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling LeadsApi->leadsLeadIdActivityDuplicatesGet: ', $e->getMessage(), PHP_EOL;\n            }\n  /leads/{leadId}/activity/links:\n    get:\n      operationId: GetAllLeadLinksActivity\n      tags:\n      - \"Leads\"\n      summary: Get a list of all lead links activity\n      description: Get a list of all lead links activity\n      parameters:\n      - in: path\n        name: leadId\n        schema:\n          type: integer\n        description: Lead Id\n        required: true\n      - in: query\n        name: page\n        schema:\n          type: integer\n        description: Page number\n      - in: query\n        name: per_page\n        schema:\n          type: integer\n          enum: [\n            10,\n            25,\n            50,\n            100,\n            500,\n            1000\n          ]\n        description: Count of records per page\n      responses:\n        200:\n          description: A list of activity\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/LinksActivity\"\n                  links:\n                    $ref: \"#/components/schemas/Links\"\n                  meta:\n                    $ref: \"#/components/schemas/Meta\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $result = $apiInstance->leadsLeadIdActivityLinksGet($lead_id);\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling LeadsApi->leadsLeadIdActivityLinksGet: ', $e->getMessage(), PHP_EOL;\n            }\n  /leads/{leadId}/activity/source:\n    get:\n      operationId: getAllLeadSourceActivity\n      tags:\n      - \"Leads\"\n      summary: Get a list of all lead source activity\n      description: Get a list of all lead source activity\n      parameters:\n      - in: path\n        name: leadId\n        schema:\n          type: integer\n        description: Lead Id\n        required: true\n      - in: query\n        name: page\n        schema:\n          type: integer\n        description: Page number\n      - in: query\n        name: per_page\n        schema:\n          type: integer\n          enum: [\n            10,\n            25,\n            50,\n            100,\n            500,\n            1000\n          ]\n        description: Count of records per page\n      responses:\n        200:\n          description: A list of activity\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/SourceActivity\"\n                  links:\n                    $ref: \"#/components/schemas/Links\"\n                  meta:\n                    $ref: \"#/components/schemas/Meta\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $result = $apiInstance->leadsLeadIdActivitySourceGet($lead_id);\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling LeadsApi->leadsLeadIdActivitySourceGet: ', $e->getMessage(), PHP_EOL;\n            }\n  /leads/{leadId}/activity/status:\n    get:\n      operationId: getAllLeadStatusActivity\n      tags:\n      - \"Leads\"\n      summary: Get a list of all lead status activity\n      description: Get a list of all lead status activity\n      parameters:\n      - in: path\n        name: leadId\n        schema:\n          type: integer\n        description: Lead Id\n        required: true\n      - in: query\n        name: page\n        schema:\n          type: integer\n        description: Page number\n      - in: query\n        name: per_page\n        schema:\n          type: integer\n          enum: [\n            10,\n            25,\n            50,\n            100,\n            500,\n            1000\n          ]\n        description: Count of records per page\n      responses:\n        200:\n          description: A list of activity\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/StatusActivity\"\n                  links:\n                    $ref: \"#/components/schemas/Links\"\n                  meta:\n                    $ref: \"#/components/schemas/Meta\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $result = $apiInstance->leadsLeadIdActivityStatusGet($lead_id);\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling LeadsApi->leadsLeadIdActivityStatusGet: ', $e->getMessage(), PHP_EOL;\n            }\n  /leads/applications:\n    get:\n      operationId: getAvailableApplications\n      tags:\n      - \"E-Signature\"\n      summary: Get a list of available applications\n      description: Get a list of available applications\n      responses:\n        200:\n          description: A list of available applications\n          content:\n            application/json:\n              schema:\n                type: array\n                description: \"A list of lead applications\"\n                items:\n                  $ref: \"#/components/schemas/BriefApplicationInfo\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        405:\n          $ref: \"#/components/responses/ValidationError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $result = $apiInstance->leadsApplicationsGet();\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling LeadsApi->leadsApplicationsGet: ', $e->getMessage(), PHP_EOL;\n            }\n  /leads/applications/{appId}/mappings:\n    post:\n      operationId: createNewApplicationFieldMapping\n      tags:\n      - \"E-Signature\"\n      summary: Create a new application field mapping\n      description: Creation of new application field mapping\n      parameters:\n      - in: path\n        name: appId\n        schema:\n          type: integer\n        description: Application Id\n        required: true\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ApplicationField\"\n      responses:\n        200:\n          description: Created new application field mapping\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApplicationField\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n        405:\n          $ref: \"#/components/responses/ValidationError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            $body = [\n              'from' => 1,\n              'record' => 1,\n              'to' => 'Test',\n              'toAlt' => 'Alt test',\n              'toType' => 'Text',\n              'special' => 'chk',\n            ];\n\n            try {\n                $result = $apiInstance->leadsApplicationsAppIdMappingsPost($app_id, $body);\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling LeadsApi->leadsApplicationsAppIdMappingsPost: ', $e->getMessage(), PHP_EOL;\n            }\n    get:\n      operationId: getAvailableApplicationFieldMappings\n      tags:\n      - \"E-Signature\"\n      summary: Get a list of available application field mappings\n      description: Get a list of available application field mappings\n      parameters:\n      - in: path\n        name: appId\n        schema:\n          type: integer\n        description: Application Id\n        required: true\n      - in: query\n        name: page\n        schema:\n          type: integer\n        description: Page number\n      - in: query\n        name: per_page\n        schema:\n          type: integer\n          enum: [\n            10,\n            25,\n            50,\n            100,\n            500,\n            1000\n          ]\n        description: Count of records per page\n      responses:\n        200:\n          description: A list of available application field mappings\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/ApplicationField\"\n                  links:\n                    $ref: \"#/components/schemas/Links\"\n                  meta:\n                    $ref: \"#/components/schemas/Meta\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $result = $apiInstance->leadsApplicationsAppIdMappingsGet($app_id);\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling LeadsApi->leadsApplicationsAppIdMappingsGet: ', $e->getMessage(), PHP_EOL;\n            }\n  /leads/applications/{appId}/mappings/{mapId}:\n    get:\n      operationId: getApplicationFieldMappingList\n      tags:\n      - \"E-Signature\"\n      summary: Get an application field mapping list\n      description: Get an application field mapping list\n      parameters:\n      - in: path\n        name: appId\n        schema:\n          type: integer\n        description: Application Id\n        required: true\n      - in: path\n        name: mapId\n        schema:\n          type: integer\n        description: Mapping Id\n        required: true\n      responses:\n        200:\n          description: Application field mapping\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApplicationField\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $result = $apiInstance->leadsApplicationsAppIdMappingsMapIdGet($app_id, $map_id);\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling LeadsApi->leadsApplicationsAppIdMappingsMapIdGet: ', $e->getMessage(), PHP_EOL;\n            }\n    patch:\n      operationId: updateApplicationFieldMapping\n      tags:\n      - \"E-Signature\"\n      summary: Update an application field mapping\n      description: Update an application field mapping\n      parameters:\n      - in: path\n        name: appId\n        schema:\n          type: integer\n        description: Application Id\n        required: true\n      - in: path\n        name: mapId\n        schema:\n          type: integer\n        description: Mapping Id\n        required: true\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ApplicationField\"\n      responses:\n        200:\n          description: Updated application field mapping\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApplicationField\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n        405:\n          $ref: \"#/components/responses/ValidationError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $body = [\n                  'from' => 1,\n                  'record' => 1,\n                  'to' => 'Test',\n                  'toAlt' => 'Alt test',\n                  'toType' => 'Text',\n                  'special' => 'chk',\n                ];\n\n                $result = $apiInstance->leadsApplicationsAppIdMappingsMapIdPatch($app_id, $map_id, $body);\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling LeadsApi->leadsApplicationsAppIdMappingsMapIdPatch: ', $e->getMessage(), PHP_EOL;\n            }\n    delete:\n      operationId: deleteApplicationFieldMapping\n      tags:\n      - \"E-Signature\"\n      summary: Delete an application field mapping\n      description: Deletion of application field mapping\n      parameters:\n      - in: path\n        name: appId\n        schema:\n          type: integer\n        description: Application Id\n        required: true\n      - in: path\n        name: mapId\n        schema:\n          type: integer\n        description: Mapping Id\n        required: true\n      responses:\n        200:\n          description: Updated application field mapping\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n                    example: Mapping was successfully removed.\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $result = $apiInstance->leadsApplicationsAppIdMappingsMapIdDelete($app_id, $map_id);\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling LeadsApi->leadsApplicationsAppIdMappingsMapIdDelete: ', $e->getMessage(), PHP_EOL;\n            }\n  /leads/campaigns:\n    get:\n      operationId: getAvailableCampaigns\n      tags:\n      - \"Leads\"\n      summary: Get a list of available campaigns\n      description: Get a list of available campaigns\n      responses:\n        200:\n          description: A list of available campaigns\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    description: \"A list of lead campaigns\"\n                    items:\n                      $ref: \"#/components/schemas/BriefCampaignInfo\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $result = $apiInstance->leadsCampaignsGet();\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling LeadsApi->leadsCampaignsGet: ', $e->getMessage(), PHP_EOL;\n            }\n  /leads/groups:\n    get:\n      operationId: getAvailableGroups\n      tags:\n      - \"Leads\"\n      summary: Get a list of available groups\n      description: Get a list of available groups\n      parameters:\n        - in: query\n          name: status\n          schema:\n            type: integer\n          description: Status Id\n      responses:\n        200:\n          description: A list of available groups\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    description: \"A list of lead groups\"\n                    items:\n                      $ref: \"#/components/schemas/BriefGroupInfo\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $result = $apiInstance->leadsGroupsGet();\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling LeadsApi->leadsGroupsGet: ', $e->getMessage(), PHP_EOL;\n            }\n  /leads/sources:\n    get:\n      operationId: getAvailableSources\n      tags:\n      - \"Leads\"\n      summary: Get a list of available sources\n      description: Get a list of available sources\n      responses:\n        200:\n          description: A list of available sources\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    description: \"A list of lead sources\"\n                    items:\n                      $ref: \"#/components/schemas/BriefSourceInfo\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $result = $apiInstance->leadsSourcesGet();\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling LeadsApi->leadsSourcesGet: ', $e->getMessage(), PHP_EOL;\n            }\n  /leads/statuses:\n    get:\n      operationId: getAvailableStatuses\n      tags:\n      - \"Leads\"\n      summary: Get a list of available statuses\n      description: Get a list of available statuses\n      parameters:\n        - in: query\n          name: group\n          schema:\n            type: integer\n          description: Group Id\n      responses:\n        200:\n          description: A list of available statuses\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    description: \"A list of lead statuses\"\n                    items:\n                      $ref: \"#/components/schemas/CategoryWithStatuses\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $result = $apiInstance->leadsStatusesGet();\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling LeadsApi->leadsStatusesGet: ', $e->getMessage(), PHP_EOL;\n            }\n  /leads/users:\n    get:\n      operationId: getAvailableUsers\n      tags:\n      - \"Leads\"\n      summary: Get a list of available users\n      description: Get a list of available users for assigning\n      parameters:\n        - in: query\n          name: page\n          schema:\n            type: integer\n          description: Page number\n        - in: query\n          name: per_page\n          schema:\n            type: integer\n            enum: [\n              10,\n              25,\n              50,\n              100\n            ]\n          description: Count of records per page\n      responses:\n        200:\n          description: A list of available users\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/BriefUserInfoWithClass\"\n                  links:\n                    $ref: \"#/components/schemas/Links\"\n                  meta:\n                    $ref: \"#/components/schemas/Meta\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $result = $apiInstance->leadsUsersGet();\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling LeadsApi->leadsUsersGet: ', $e->getMessage(), PHP_EOL;\n            }\n\n  /subscriptions:\n    post:\n      operationId: createSubscription\n      tags:\n        - \"Subscriptions\"\n      summary: Create a subscription\n      description: Create a subscription\n      requestBody:\n        description: Subscription details\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/BriefSubscriptionInfo\"\n      responses:\n        200:\n          description: Subscription has been created successfully\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BriefSubscriptionInfo\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        405:\n          $ref: \"#/components/responses/ValidationError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $body = [\n                  'url' => 'https://example.com/hook',\n                  'events' => ['api.updated'],\n                  'multiple_at_once' => true,\n                ];\n                $result = $apiInstance->subscriptionsPost($body);\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling SubscriptionsApi->subscriptionsPost: ', $e->getMessage(), PHP_EOL;\n            }\n    get:\n      operationId: getSubscriptions\n      tags:\n      - \"Subscriptions\"\n      summary: Return a list of subscriptions\n      description: Return a list of subscriptions\n      parameters:\n      - in: query\n        name: page\n        schema:\n          type: integer\n        description: Page Number\n      - in: query\n        name: per_page\n        schema:\n          type: integer\n          enum: [\n            10,\n            25,\n            50,\n            100\n          ]\n        description: Count of records per page\n      responses:\n        200:\n          description: A JSON array of subscriptions\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/BriefSubscriptionInfo\"\n                  links:\n                    $ref: \"#/components/schemas/Links\"\n                  meta:\n                    $ref: \"#/components/schemas/Meta\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $result = $apiInstance->subscriptionsGet($page);\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling SubscriptionsApi->subscriptionsGet: ', $e->getMessage(), PHP_EOL;\n            }\n  /subscriptions/{subscriptionId}:\n    get:\n      operationId: getSubscriptionsById\n      tags:\n      - \"Subscriptions\"\n      summary: Return a subscription by its id\n      description: Return a subscription details\n      parameters:\n      - in: path\n        name: subscriptionId\n        schema:\n          type: integer\n        description: Subscription Id\n        required: true\n      responses:\n        200:\n          description: Subscription\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BriefSubscriptionInfo'\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $result = $apiInstance->subscriptionsSubscriptionIdGet($subscription_id);\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling SubscriptionsApi->subscriptionsSubscriptionIdGet: ', $e->getMessage(), PHP_EOL;\n            }\n    patch:\n      operationId: updateSubscription\n      tags:\n        - \"Subscriptions\"\n      summary: Update a subscription\n      description: Update a subscription\n      parameters:\n        - in: path\n          name: subscriptionId\n          schema:\n            type: integer\n          description: Subscription Id\n          required: true\n      requestBody:\n        description: Subscription details\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/BriefSubscriptionInfo\"\n      responses:\n        200:\n          description: Subscription has been updated successfully\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BriefSubscriptionInfo\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        405:\n          $ref: \"#/components/responses/ValidationError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $body = [\n                  'url' => 'https://example.com/hook',\n                  'events' => ['api.updated'],\n                  'multiple_at_once' => true,\n                ];\n                $result = $apiInstance->subscriptionsSubscriptionIdPatch($body, $subscription_id);\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling SubscriptionsApi->subscriptionsSubscriptionIdPatch: ', $e->getMessage(), PHP_EOL;\n            }\n    delete:\n      operationId: deleteSubscription\n      tags:\n        - \"Subscriptions\"\n      summary: Delete a subscription\n      description: Delete a subscription\n      parameters:\n        - in: path\n          name: subscriptionId\n          schema:\n            type: integer\n          description: Subscription Id\n          required: true\n      responses:\n        200:\n          description: Subscription (1) has been deleted successfully\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n                    description: Subscription deletion message\n                    example: Subscription (1) has been deleted successfully\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        405:\n          $ref: \"#/components/responses/ValidationError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $result = $apiInstance->subscriptionsSubscriptionIdDelete($subscription_id);\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling SubscriptionsApi->subscriptionsSubscriptionIdDelete: ', $e->getMessage(), PHP_EOL;\n            }\n  /subscriptions/sample/subscription.test:\n    get:\n      operationId: testPayloadForCheckingServerResponse\n      tags:\n        - \"Subscriptions\"\n      summary: Test payload for checking server response\n      description: \"Example use: stay aware of changes and additions to the API.\"\n      responses:\n        200:\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TestSubscription'\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n  /subscriptions/sample/api.updated:\n    get:\n      operationId: receiveNotificationWhenApiUpdated\n      tags:\n        - \"Subscriptions\"\n      summary: Receive a notification when this API is updated\n      description: \"Example use: stay aware of changes and additions to the API.\"\n      responses:\n        200:\n          description: API details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiUpdated'\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $result = $apiInstance->subscriptionsSampleApiUpdatedGet();\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling SubscriptionsApi->subscriptionsSampleApiUpdatedGet: ', $e->getMessage(), PHP_EOL;\n            }\n  /subscriptions/sample/lead.created:\n    get:\n      operationId: receiveNotificationWhenLeadCreated\n      tags:\n        - \"Subscriptions\"\n      summary: Receive a notification when a lead is created in this CRM, with the option to only receive a notification when a lead is in the status(es) specified here\n      description: \"Example use: create a record in an external system when a lead is created in this CRM.\"\n      responses:\n        200:\n          description: Lead details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LeadCreatedEventInfo'\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $result = $apiInstance->subscriptionsSampleLeadCreatedGet();\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling SubscriptionsApi->subscriptionsSampleLeadCreatedGet: ', $e->getMessage(), PHP_EOL;\n            }\n  /subscriptions/sample/lead.updated:\n    get:\n      operationId: receiveNotificationWhenLeadUpdated\n      tags:\n        - \"Subscriptions\"\n      summary: Receive a notification when a lead's campaign, status, group, or field values are updated in this CRM, with the option to only receive a notification when a lead is in the status(es) specified here\n      description: \"Example use: update field information for a record in an external system when the corresponding information is updated in this CRM.\"\n      responses:\n        200:\n          description: Lead details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LeadUpdatedEventInfo'\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $result = $apiInstance->subscriptionsSampleLeadUpdatedGet();\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling SubscriptionsApi->subscriptionsSampleLeadUpdatedGet: ', $e->getMessage(), PHP_EOL;\n            }\n  /subscriptions/sample/lead.deleted:\n    get:\n      operationId: receiveNotificationWhenLeadDeleted\n      tags:\n        - \"Subscriptions\"\n      summary: Receive a notification when a lead in this CRM is deleted\n      description: \"Example use: update the status, post a note, or delete a record in an external system when a lead is deleted in this CRM.\"\n      responses:\n        200:\n          description: Lead details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LeadDeletedEventInfo'\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $result = $apiInstance->subscriptionsSampleLeadDeletedGet();\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling SubscriptionsApi->subscriptionsSampleLeadDeletedGet: ', $e->getMessage(), PHP_EOL;\n            }\n  /subscriptions/sample/lead.restored:\n    get:\n      operationId: receiveNotificationWhenLeadRestored\n      tags:\n        - \"Subscriptions\"\n      summary: Receive a notification when a deleted lead is restored in this CRM\n      description: \"Example use: update the status, post a note, or restore a record in an external system when a deleted lead is restored in this CRM.\"\n      responses:\n        200:\n          description: Lead details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LeadRestoredEventInfo'\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $result = $apiInstance->subscriptionsSampleLeadRestoredGet();\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling SubscriptionsApi->subscriptionsSampleLeadRestoredGet: ', $e->getMessage(), PHP_EOL;\n            }\n  /subscriptions/sample/lead.status.updated:\n    get:\n      operationId: receiveNotificationWhenLeadStatusUpdated\n      tags:\n        - \"Subscriptions\"\n      summary: Receive a notification when a lead's status is updated in this CRM, with the option to only receive a notification when a lead is moved to or from the status(es) specified here\n      description: \"Example use: update the status of a record in an external system after the lead's status is updated in this CRM.\"\n      responses:\n        200:\n          description: Lead details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LeadStatusUpdatedEventInfo'\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $result = $apiInstance->subscriptionsSampleLeadStatusUpdatedGet();\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling SubscriptionsApi->subscriptionsSampleLeadStatusUpdatedGet: ', $e->getMessage(), PHP_EOL;\n            }\n  /subscriptions/sample/lead.signature.generated:\n    get:\n      operationId: receiveNotificationWhenLeadEsignatureGenerated\n      tags:\n        - \"Subscriptions\"\n      summary: Receive a notification when a lead's e-signature document is generated\n      description: \"Example use: update an external system when a user generates an electronic signature document.\"\n      responses:\n        200:\n          description: Lead details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SignatureGenerated'\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n  /subscriptions/sample/lead.signature.opened:\n    get:\n      operationId: receiveNotificationWhenLeadEsignatureOpened\n      tags:\n        - \"Subscriptions\"\n      summary: Receive a notification when a lead's e-signature document is opened by the recipient\n      description: \"Example use: update an external system when a recepient clicks a link to open an electronic signature document.\"\n      responses:\n        200:\n          description: Lead details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SignatureOpened'\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n\n  /subscriptions/sample/lead.signature.signed:\n    get:\n      operationId: receiveNotificationWhenLeadEsignatureSigned\n      tags:\n        - \"Subscriptions\"\n      summary: Receive a notification when a lead's e-signature document is signed by the recipient\n      description: \"Example use: update an external system when one or all recepients signed an electronic signature document.\"\n      responses:\n        200:\n          description: Lead details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SignatureSigned'\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n\n  /subscriptions/sample/lead.note.added:\n    get:\n      operationId: receiveNotificationWhenLeadNoteAdded\n      tags:\n        - \"Subscriptions\"\n      summary: Receive a notification when a lead in this CRM has a note posted, with the option to only receive a notification when a lead is in the status(es) specified here\n      description: \"Example use: add a note to a record in an external system when a note is posted on a lead in this CRM.\"\n      responses:\n        200:\n          description: Lead details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LeadNoteAddedEventInfo'\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $result = $apiInstance->subscriptionsSampleLeadNoteAddedGet();\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling SubscriptionsApi->subscriptionsSampleLeadNoteAddedGet: ', $e->getMessage(), PHP_EOL;\n            }\n  /subscriptions/sample/lead.document.uploaded:\n    get:\n      operationId: receiveNotificationWhenLeadDocumentUploaded\n      tags:\n        - \"Subscriptions\"\n      summary: Receive a notification when a lead document is uploaded\n      description: \"Example use: update the record in an external system after the lead's uploaded document in this CRM.\"\n      responses:\n        200:\n          description: Lead details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LeadDocumentUploadedEventInfo'\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $result = $apiInstance->subscriptionsSampleLeadDocumentUploadedGet();\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling SubscriptionsApi->subscriptionsSampleLeadDocumentUploadedGet: ', $e->getMessage(), PHP_EOL;\n            }\n  /subscriptions/sample/lead.email.received:\n    get:\n      operationId: receiveNotificationWhenLeadEmailReceived\n      tags:\n        - \"Subscriptions\"\n      summary: Receive a notification when an email message is received on a lead in this CRM, with the option to only receive a notification when a lead is in the status(es) specified here\n      description: \"Example use: update the status of a lead when an email is received if it's in a certain status.\"\n      responses:\n        200:\n          description: Lead details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LeadEmailReceivedEventInfo'\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $result = $apiInstance->subscriptionsSampleLeadEmailReceivedGet();\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling SubscriptionsApi->subscriptionsSampleLeadEmailReceivedGet: ', $e->getMessage(), PHP_EOL;\n            }\n\n  \n  /subscriptions/sample/turboapp.submitted:\n    get:\n      operationId: receiveNotificationWhenTurboAppSubmitted\n      tags:\n        - \"Subscriptions\"\n      summary: Receive a notification when a TurboApp is submitted to a processor\n      description: \"Example use: create a record in an external system when a TurboApp is submitted.\"\n      responses:\n        200:\n          description: Application details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TurboAppSubmited'\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $result = $apiInstance->subscriptionsSampleTurboappSubmittedGet();\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling SubscriptionsApi->subscriptionsSampleTurboappSubmittedGet: ', $e->getMessage(), PHP_EOL;\n            }\n  /subscriptions/sample/turboapp.updated:\n    get:\n      operationId: receiveNotificationWhenTurboAppUpdated\n      tags:\n        - \"Subscriptions\"\n      summary: Receive a notification when the underwriting status is updated\n      description: \"Example use: update the status of a merchant record in your system when TurboApp receives an underwriting update from the processor.\"\n      responses:\n        200:\n          description: Application account details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TurboAppUpdated'\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $result = $apiInstance->subscriptionsSampleTurboappUpdatedGet();\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling SubscriptionsApi->subscriptionsSampleTurboappUpdatedGet: ', $e->getMessage(), PHP_EOL;\n            }\n  /subscriptions/sample/turboapp.approved:\n    get:\n      operationId: receiveNotificationWhenTurboAppApproved\n      tags:\n        - \"Subscriptions\"\n      summary: Receive a notification when a merchant is approved\n      description: \"Example use: update the status of a record in your system when TurboApp receives an approval status from the processor.\"\n      responses:\n        200:\n          description: Application details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TurboAppApproved'\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $result = $apiInstance->subscriptionsSampleTurboappApprovedGet();\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling SubscriptionsApi->subscriptionsSampleTurboappApprovedGet: ', $e->getMessage(), PHP_EOL;\n            }\n  /subscriptions/sample/turboapp.declined:\n    get:\n      operationId: receiveNotificationWhenTurboAppDeclined\n      tags:\n        - \"Subscriptions\"\n      summary: Receive a notification when a merchant is declined\n      description: \"Example use: update the status of a record in your system when TurboApp receives a declined status by the processor.\"\n      responses:\n        200:\n          description: Application details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TurboAppDeclined'\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n      x-code-samples:\n        - lang: 'PHP'\n          source: |\n            try {\n                $result = $apiInstance->subscriptionsSampleTurboappDeclinedGet();\n                print_r($result);\n            } catch (Exception $e) {\n                echo 'Exception when calling SubscriptionsApi->subscriptionsSampleTurboappDeclinedGet: ', $e->getMessage(), PHP_EOL;\n  \n\n  /subscriptions/sample/ticket.created:\n    get:\n      operationId: receiveNotificationWhenTurboAppCreated\n      tags:\n        - \"Subscriptions\"\n      summary: Receive a notification when a ticket is created\n      description: \"Example use: receive an alert with ticket details every time a new ticket is created.\"\n      responses:\n        200:\n          description: Ticket created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TicketCreated'\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n  /subscriptions/sample/ticket.updated:\n    get:\n      operationId: receiveNotificationWhenTicketUpdated\n      tags:\n        - \"Subscriptions\"\n      summary: Receive a notification when a ticket is updated\n      description: \"Example use: receive an alert with ticket details every time a ticket is updated.\"\n      responses:\n        200:\n          description: Ticket updated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TicketUpdated'\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n  /subscriptions/sample/ticket.resolved:\n    get:\n      operationId: receiveNotificationWhenTicketResolved\n      tags:\n        - \"Subscriptions\"\n      summary: Receive a notification when a ticket is resolved\n      description: \"Example use: receive an alert with ticket details every time a ticket is resolved.\"\n      responses:\n        200:\n          description: Ticket resolved\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TicketResolved'\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n  /subscriptions/sample/ticket.commented:\n    get:\n      operationId: receiveNotificationWhenTicketCommented\n      tags:\n        - \"Subscriptions\"\n      summary: Receive a notification when a ticket comment is added\n      description: \"Example use: receive an alert when a user adds a comment to a ticket.\"\n      responses:\n        200:\n          description: Ticket commented\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TicketCommented'\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n  /subscriptions/sample/ticket.comment.edited:\n    get:\n      operationId: receiveNotificationWhenTicketCommentEdited\n      tags:\n        - \"Subscriptions\"\n      summary: Receive a notification when a ticket comment is edited\n      description: \"Example use: receive an alert when a user edited a comment in a ticket.\"\n      responses:\n        200:\n          description: Ticket comment edited\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubscriptionCommentEdited'\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n  # /subscriptions/sample/ticket.checklist.updated:\n  #   get:\n  #     operationId: receiveNotificationWhenTicketChecklistUpdated\n  #     tags:\n  #       - \"Subscriptions\"\n  #     summary: Receive a notification when a ticket's checklist is updated\n  #     description: \"Example use: receive an alert when a checklist item is updated on a ticket.\"\n  #     responses:\n  #       200:\n  #         description: Ticket Checklist updated\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ChecklistUpdated'\n  #       401:\n  #         $ref: \"#/components/responses/UnauthorizedError\"\n  #       403:\n  #         $ref: \"#/components/responses/ForbiddenError\"\n  #       404:\n  #         $ref: \"#/components/responses/NotFoundError\"\n\n    \n\n  /subscriptions/sample/residuals.report.published:\n    get:\n      operationId: receiveNotificationWhenReportPublished\n      tags:\n        - \"Subscriptions\"\n      summary: Receive a notification when a residuals report is published\n      description: \"Example use: update the status of a record in your system when a residuals report is published\"\n      responses:\n        200:\n          description: Report details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReportPublished'\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n  /subscriptions/sample/residuals.lineitem.added:\n    get:\n      operationId: receiveNotificationWhenLineItemAdded\n      tags:\n        - \"Subscriptions\"\n      summary:  Receive a notification when a residuals line item is added\n      description: \"Example use: Trigger a workflow as soon as a line item is added\"\n      responses:\n        200:\n          description: Line item details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LineItemAdded'\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n  /subscriptions/sample/chargeback.added:\n    get:\n      operationId: receiveNotificationWhenChargebackAdded\n      tags:\n        - \"Subscriptions\"\n      summary:  Receive a notification when a new chargeback case created\n      description: \"Example use: notify the responsible person when a new chargeback case created, so the reply can be submitted before the due date\"\n      responses:\n        200:\n          description: Chargeback case details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ChargebackAdded'\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n  /subscriptions/sample/chargeback.updated:\n    get:\n      operationId: receiveNotificationWhenChargebackUpdated\n      tags:\n        - \"Subscriptions\"\n      summary:  Receive a notification when chargeback case status changed\n      description: \"Example use: check the chargeback case updates to make sure the reply is in review or is it lost or won\"\n      responses:\n        200:\n          description: Chargeback case details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ChargebackUpdated'\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n  /subscriptions/sample/chargeback.reminder:\n    get:\n      operationId: receiveNotificationForChargebackReminder\n      tags:\n        - \"Subscriptions\"\n      summary: Receive a notification in 7/3/1 days before the chargeback case due date\n      description: \"Example use: remind a client to post a reply for the chargeback case\"\n      responses:\n        200:\n          description: Chargeback case details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ChargebackReminder'\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n  /subscriptions/sample/retrieval.added:\n    get:\n      operationId: receiveNotificationWhenRetrievalAdded\n      tags:\n        - \"Subscriptions\"\n      summary:  Receive a notification when a new retrieval case created\n      description: \"Example use: notify the responsible person when a new retrieval case created, so the reply can be submitted before the due date\"\n      responses:\n        200:\n          description: Retrieval case details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RetrievalAdded'\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n  /subscriptions/sample/retrieval.updated:\n    get:\n      operationId: receiveNotificationWhenRetrievalUpdated\n      tags:\n        - \"Subscriptions\"\n      summary:  Receive a notification when retrieval case status changed\n      description: \"Example use: check the retrieval case updates to make sure the reply is in review or is it lost or won\"\n      responses:\n        200:\n          description: Retrieval case details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RetrievalUpdated'\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n  /subscriptions/sample/retrieval.reminder:\n     get:\n       operationId: receiveNotificationForRetrievalReminder\n       tags:\n         - \"Subscriptions\"\n       summary: Receive a notification in 7/3/1 days before the retrieval case due date\n       description: \"Example use: remind a client to post a reply for the retrieval case\"\n       responses:\n         200:\n           description: Retrieval case details\n           content:\n             application/json:\n               schema:\n                 $ref: '#/components/schemas/RetrievalReminder'\n         401:\n           $ref: \"#/components/responses/UnauthorizedError\"\n         403:\n           $ref: \"#/components/responses/ForbiddenError\"\n         404:\n           $ref: \"#/components/responses/NotFoundError\"\n    \n  /helpdesk:\n    post:\n      operationId: createNewTicket\n      tags:\n        - \"Helpdesk\"\n      summary: Create a new ticket\n      description: Create a new ticket\n      requestBody:\n        description: Ticket details\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - type\n                - subject\n                - priority\n                - assignType\n                - assignTo\n              properties:\n                type:\n                  type: integer\n                  description: \"Type id\"\n                  example: 1\n                subject:\n                  type: string\n                  description: \"Ticket subject\"\n                  example: \"Ticket subject\"\n                description:\n                  type: string\n                  description: \"Ticket description\"\n                  example: \"Ticket description\"\n                priority:\n                  type: integer\n                  description: \"Priority (0 - Normal, 1 - Medium, 2 - Rush)\"\n                  enum: [0, 1, 2]\n                  example: 1\n                assignedUsers:\n                  type: array\n                  items:\n                    type: integer\n                    description: \"Assigned user ID's\"\n                    example: 11\n                files:\n                  type: array\n                  items:\n                    type: string\n                    description: \"ID to ticket file\"\n                    example: \"15dfd5e51a10145.87303877_ticket_file.pdf\"\n                attached_files:\n                  type: array\n                  items:\n                    type: integer\n                    description: \"IDs of existing files\"\n                    example: 123\n                preview_images:\n                  type: array\n                  items:\n                    type: string\n                    description: \"ID to ticket file\"\n                    example: \"15dfd5e51a10145.87303877_ticket_file.pdf\"\n                assignType:\n                  type: string\n                  enum: [lead, merchant, none]\n                  example: lead\n                assignTo:\n                  type: integer\n                  example: 123\n                group_id:\n                  type: integer\n                  example: 123\n                due_date:\n                  type: string\n                  format: date-time\n                  example: '2020-10-20T12:04:40-05:00'\n                  description: \"Ticket due datetime\"\n                only_business_days:\n                  type: boolean\n                  description: \"Calculate only business days\"\n                  example: true\n                notify_assigned_users:\n                  type: boolean\n                  example: true\n                  description: Notify assigned users\n                \n                merchantVisible:\n                  type: boolean\n                  description: \"Indicates if the ticket is visible to Merchant users\"\n                  example: true\n\n                \n                checklist:\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/CheckListRequest\"\n      responses:\n        200:\n          description: Ticket has been created successfully\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TicketDetail\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        405:\n          $ref: \"#/components/responses/ValidationError\"\n    get:\n      operationId: getHelpdeskTickets\n      tags:\n        - 'Helpdesk'\n      summary: Get a list of helpdesk tickets\n      description: 'Return a list of helpdesk tickets. </br>\n        <span style=\"color: rgb(224, 157, 67)\">By default, the endpoint returns only\n        tickets assigned to the users. Set `assigned_to` query parameter to the empty string\n        and `unassigned` to the 1 if You need to select <strong>ALL</strong> tickets</span>'\n      parameters:\n        - in: query\n          name: page\n          schema:\n            type: integer\n          description: Page number\n        - in: query\n          name: per_page\n          schema:\n            type: integer\n            enum: [\n              10,\n              25,\n              50,\n              100,\n              500,\n              1000\n            ]\n          description: Count of records per page\n        - in: query\n          name: sort_by\n          schema:\n            type: string\n            enum: [\n              id,\n              status,\n              subject,\n              files,\n              type,\n              priority,\n              last_comment,\n              created,\n              modified,\n              resolved,\n              mid,\n              due\n            ]\n          description: Sorting of helpdesk tickets by the field value\n        - in: query\n          name: sort_dir\n          schema:\n            type: string\n            enum: [asc, desc]\n            default: asc\n          description: Direction of sorting\n        - in: query\n          name: date_filter\n          schema:\n            type: string\n            enum: [last_comment, created, modified, resolved, status_updated, due]\n          description: Filter tickets by the specific date field\n        - in: query\n          name: start_date\n          schema:\n            type: string\n            format: date-time\n            example: '2019-01-01T12:04:40+05:00'\n          description: 'Start date for date_filter filter in format ISO 8601 (**Please note that `+` sign should be encoded to `%2B`**)'\n        - in: query\n          name: end_date\n          schema:\n            type: string\n            format: date-time\n            example: '2019-01-01T12:04:40+05:00'\n          description: 'End date for date_filter filter in format ISO 8601 (**Please note that `+` sign should be encoded to `%2B`**)'\n        - in: query\n          name: group\n          schema:\n            type: string\n            example: '1,2,3,4'\n          description: Filter tickets by the specific ticket groups\n        - in: query\n          name: type\n          schema:\n            type: string\n            example: '1,2,3,4'\n          description: Filter tickets by the specific ticket types\n        - in: query\n          name: creator\n          schema:\n            type: number\n            example: 1\n          description: Filter tickets by the ticket creator\n        - in: query\n          name: modifier\n          schema:\n            type: number\n            example: 1\n          description: Filter tickets by the ticket modifier\n        - in: query\n          name: search\n          schema:\n            type: string\n            example: Search criteia\n          description: Search tickets by some criteria\n        - in: query\n          name: search_by\n          schema:\n            type: string\n            example: description\n            enum: [\n              'all',\n              'ticket_id',\n              'name',\n              'description',\n                            'mid',\n                            'dba',\n              'comments',\n              'attachments'\n            ]\n          description: Search tickets by some specific field\n        - in: query\n          name: resolver\n          schema:\n            type: number\n            example: 1\n          description: Filter tickets by the ticket resolver\n        - in: query\n          name: lid\n          schema:\n            type: number\n            example: 1\n          description: Filter tickets by the Lead ID\n\n    \n        - in: query\n          name: mid\n          schema:\n            type: string\n            example: 1\n          description: Filter tickets by the Merchant ID\n\n    \n        - in: query\n          name: hide_resolved\n          schema:\n            type: boolean\n            example: 1\n          description: Hide resolved ticket\n        - in: query\n          name: assigned_to\n          schema:\n            type: string\n            example: '1,2,3,4'\n          description: Filter tickets by the assigned users. For sending multiple users please send them in comma seperated format.\n                       Please use an empty string to select all assigned tickets.\n        - in: query\n          name: unassigned\n          schema:\n            type: boolean\n            example: 1\n          description: Set this parameter to 1 if you need unassigned tickets also. For select only unassigned tickets\n                       exclude `assigned_to` from the request\n      responses:\n        200:\n          description: A JSON array of tickets\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      allOf:\n                        - $ref: \"#/components/schemas/BriefTicketInfo\"\n                        - type: object\n                          properties:\n                            created_username:\n                              type: string\n                              example: John Doe\n                            modified_username:\n                              type: string\n                              example: Jane Doe\n                            resolved_username:\n                              type: string\n                              example: Jack Doe\n                  links:\n                    $ref: \"#/components/schemas/Links\"\n                  meta:\n                    $ref: \"#/components/schemas/Meta\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n  /helpdesk/{ticketId}/comment:\n    post:\n      operationId: addTicketComment\n      tags:\n        - \"Helpdesk\"\n      summary: Add a ticket comment\n      parameters:\n        - in: path\n          name: ticketId\n          schema:\n            type: integer\n          description: Ticket Id\n          required: true\n      description: Post a comment\n      requestBody:\n        description: Comment details\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                comment:\n                  type: string\n                  description: \"Comment text\"\n                  example: 'Comment text'\n                notify:\n                  type: array\n                  items:\n                    type: integer\n                    description: \"User ID's what should be notified\"\n                    example: 11\n                files:\n                  type: array\n                  items:\n                    type: string\n                    description: \"ID to ticket file\"\n                    example: \"15dfd5e51a10145.87303877_ticket_file.pdf\"\n                attached_files:\n                  type: array\n                  items:\n                    type: integer\n                    description: \"IDs of existing files\"\n                    example: 123\n                preview_images:\n                  type: array\n                  items:\n                    type: string\n                    description: \"ID to ticket file\"\n                    example: \"15dfd5e51a10145.87303877_ticket_file.pdf\"\n\n                \n                merchantVisible:\n                  type: boolean\n                  description: \"Indicates if the comment is visible to Merchant users\"\n                  example: true\n\n                \n      responses:\n        200:\n          description: Comment was added successfully\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BriefTicketComments\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n        405:\n          $ref: \"#/components/responses/ValidationError\"\n\n  /helpdesk/{ticketId}:\n    get:\n      operationId: getDetailedTicketInformation\n      tags:\n        - 'Helpdesk'\n      summary: Get detailed ticked information\n      parameters:\n        - in: path\n          name: ticketId\n          schema:\n            type: integer\n          description: Ticket Id\n          required: true\n      responses:\n        200:\n          description: A JSON array of tickets\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TicketDetail\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n    patch:\n      operationId: updateTicket\n      tags:\n        - \"Helpdesk\"\n      summary: Update a ticket\n      parameters:\n        - in: path\n          name: ticketId\n          schema:\n            type: integer\n          description: Ticket Id\n          required: true\n      description: Update a ticket\n      requestBody:\n        description: Ticket details\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                type:\n                  type: integer\n                  description: \"Type id\"\n                  example: 1\n                subject:\n                  type: string\n                  description: \"Ticket subject\"\n                  example: \"Ticket subject\"\n                description:\n                  type: string\n                  description: \"Ticket description\"\n                  example: \"Ticket description\"\n                status:\n                  type: string\n                  description: \"Ticket status\"\n                  enum: [\n                    new, open, in_progress, info_required, resolved\n                  ]\n                  example: resolved\n                priority:\n                  type: integer\n                  description: \"Priority (0 - Normal, 1 - Medium, 2 - Rush)\"\n                  enum: [0, 1, 2]\n                  example: 1\n                assignedUsers:\n                  type: array\n                  items:\n                    type: integer\n                    description: \"Assigned user ID's\"\n                    example: 11\n                due_date:\n                  type: string\n                  format: date-time\n                  example: '2020-10-20T12:04:40-05:00'\n                  description: \"Ticket due datetime\"\n                only_business_days:\n                  type: boolean\n                  description: \"Calculate only business days\"\n                  example: true\n                assignType:\n                  type: string\n                  enum: [lead, merchant, none]\n                  example: lead\n                assignTo:\n                  type: integer\n                  example: 123\n                files:\n                  type: array\n                  items:\n                    type: string\n                    description: \"ID to ticket file\"\n                    example: \"15dfd5e51a10145.87303877_ticket_file.pdf\"\n                attached_files:\n                  type: array\n                  items:\n                    type: integer\n                    description: \"IDs of existing files\"\n                    example: 123\n                preview_images:\n                  type: array\n                  items:\n                    type: string\n                    description: \"ID to ticket file\"\n                    example: \"15dfd5e51a10145.87303877_ticket_file.pdf\"\n                group_id:\n                  type: integer\n                  example: 123\n\n                \n                merchantVisible:\n                  type: boolean\n                  description: \"Indicates if the ticket is visible to Merchant users\"\n                  example: true\n\n                \n                checklist:\n                  type: array\n                  items:\n                    allOf:\n                      - $ref: \"#/components/schemas/CheckListRequest\"\n                      - type: object\n                        properties:\n                          new_files:\n                            type: array\n                            items:\n                              type: string\n                              example: \"15dfd5e51a10145.87303877_ticket_checklist_file.pdf\"\n                          attached_files:\n                            type: array\n                            items:\n                              type: integer\n                              example: 123\n      responses:\n        200:\n          description: Ticket has been updated successfully\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TicketDetail\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n        405:\n          $ref: \"#/components/responses/ValidationError\"\n    delete:\n      operationId: deleteTicket\n      tags:\n        - \"Helpdesk\"\n      summary: Delete a ticket\n      parameters:\n        - in: path\n          name: ticketId\n          schema:\n            type: integer\n          description: Ticket Id\n          required: true\n      description: Delete a ticket\n      responses:\n        200:\n          description: Ticket has been deleted successfully\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                    example: \"Success\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n        405:\n          $ref: \"#/components/responses/ValidationError\"\n  /helpdesk/{ticketId}/assignments:\n    get:\n      operationId: getTicketAssignmentLogs\n      tags:\n        - 'Helpdesk'\n      summary: Get ticked assignment logs\n      parameters:\n        - in: path\n          name: ticketId\n          schema:\n            type: integer\n          description: Ticket Id\n          required: true\n      responses:\n        200:\n          description: A JSON array of assignments\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    active:\n                      type: boolean\n                    source:\n                      type: string\n                    date:\n                      type: string\n                    user:\n                      type: number\n                    assigned_by:\n                      type: number\n\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n  /helpdesk/file:\n    post:\n      operationId: uploadAttachementToTicket\n      tags:\n        - \"Helpdesk\"\n      summary: Upload an attachment to a ticket, comment, checklist, or ticket type\n      description: Upload an attachment to a ticket, comment, checklist, or ticket type\n      parameters:\n        - in: query\n          name: extension\n          schema:\n            type: string\n            example: pdf\n          description: File extension for validation\n          required: true\n        - in: query\n          name: name\n          schema:\n            type: string\n            example: pdf\n          description: File name for validation\n          required: true\n      requestBody:\n        description: Payload data\n        content:\n          application/octet-stream:\n            schema:\n              type: string\n              format: binary\n      responses:\n        200:\n          description: Document\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                    example: success\n                  fileId:\n                    type: string\n                    example: \"15dfd5e51a10145.87303877_ticket_checklist_file.pdf\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n        405:\n          $ref: \"#/components/responses/ValidationError\"\n  /helpdesk/{ticketId}/download/{attachmentId}:\n    get:\n      operationId: downloadAttachmentFromTicket\n      tags:\n        - \"Helpdesk\"\n      summary: Download an attachment from a ticket\n      parameters:\n        - in: path\n          name: ticketId\n          schema:\n            type: integer\n          description: Ticket Id\n          required: true\n        - in: path\n          name: attachmentId\n          schema:\n            type: integer\n          description: Attachment Id\n          required: true\n      responses:\n        200:\n          description: Document\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n                description: \"Document\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n  /helpdesk/types:\n    post:\n      operationId: createHelpdeskTicketType\n      tags:\n        - 'Helpdesk'\n      summary: Create a new helpdesk ticket type\n      description: Create a new helpdesk ticket type\n      requestBody:\n        description: Comment details\n        required: true\n        content:\n          application/json:\n            schema:\n              allOf:\n                - $ref: \"#/components/schemas/TicketTypeRequest\"\n                - type: object\n                  properties:\n                    checklist:\n                      type: array\n                      items:\n                        allOf:\n                          - $ref: '#/components/schemas/BriefTicketChecklistInfo'\n                          - type: object\n                            properties:\n                              files:\n                                type: array\n                                items:\n                                  type: string\n                                  example: \"15dfd5e51a10145.87303877_ticket_checklist_file.pdf\"\n      responses:\n        200:\n          description: A JSON array of ticket types\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TypeDetail\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n        405:\n          $ref: \"#/components/responses/ValidationError\"\n    get:\n      operationId: getHelpdeskTicketTypes\n      tags:\n        - 'Helpdesk'\n      summary: Get a list of helpdesk ticket types\n      parameters:\n        - in: query\n          name: page\n          schema:\n            type: integer\n          description: Page number\n        - in: query\n          name: per_page\n          schema:\n            type: integer\n            enum: [\n              10,\n              25,\n              50,\n              100,\n              500,\n              1000\n            ]\n          description: Count of records per page\n        - in: query\n          name: sort_by\n          schema:\n            type: string\n            enum: [\n              id,\n              name,\n              created,\n              modified,\n              status,\n              order\n            ]\n          description: Sorting of helpdesk ticket types by the field value\n        - in: query\n          name: sort_dir\n          schema:\n            type: string\n            enum: [asc, desc]\n            default: asc\n          description: Direction of sorting\n        - in: query\n          name: date_filter\n          schema:\n            type: string\n            enum: [created, modified]\n          description: Filter ticket types by the specific date field\n        - in: query\n          name: start_date\n          schema:\n            type: string\n            format: date-time\n            example: '2019-01-01T12:04:40+05:00'\n          description: 'Start date for date_filter filter in format ISO 8601 (**Please note that `+` sign should be encoded to `%2B`**)'\n        - in: query\n          name: end_date\n          schema:\n            type: string\n            format: date-time\n            example: '2019-01-01T12:04:40+05:00'\n          description: 'End date for date_filter filter in format ISO 8601 (**Please note that `+` sign should be encoded to `%2B`**)'\n        - in: query\n          name: status\n          schema:\n            type: string\n            enum: [active, inactive]\n            example: active\n          description: Status\n        - in: query\n          name: priority\n          schema:\n            type: integer\n            enum: [0, 1, 2]\n            example: 1\n          description: 0 - Normal, 1 - Medium, 2 - Rush\n        - in: query\n          name: daysToResolve\n          schema:\n            type: number\n            example: 1\n          description: Days to resolve\n        - in: query\n          name: creator\n          schema:\n            type: number\n            example: 1\n          description: Creator\n        - in: query\n          name: modifier\n          schema:\n            type: number\n            example: 1\n          description: Filter ticket types by the ticket modifier\n      responses:\n        200:\n          description: A JSON array of ticket types\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/BriefTicketTypeInfo\"\n                  links:\n                    $ref: \"#/components/schemas/Links\"\n                  meta:\n                    $ref: \"#/components/schemas/Meta\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n  /helpdesk/types/{typeId}:\n    get:\n      operationId: getHelpdeskTicketType\n      tags:\n        - 'Helpdesk'\n      summary: Get details for a helpdesk ticket type\n      parameters:\n        - in: path\n          name: typeId\n          schema:\n            type: integer\n          description: Ticket Type Id\n          required: true\n      responses:\n        200:\n          description: A JSON array of ticket types\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TypeDetail\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n    patch:\n      operationId: updateHelpdeskTicketType\n      tags:\n        - 'Helpdesk'\n      summary: Update a helpdesk ticket type\n      description: Update a helpdesk ticket type\n      parameters:\n        - in: path\n          name: typeId\n          schema:\n            type: integer\n          description: Ticket Type Id\n          required: true\n      requestBody:\n        description: Ticket data\n        required: true\n        content:\n          application/json:\n            schema:\n              allOf:\n                - $ref: \"#/components/schemas/TicketTypeRequest\"\n                - type: object\n                  properties:\n                    checklist:\n                      type: array\n                      items:\n                        allOf:\n                          - $ref: '#/components/schemas/BriefTicketChecklistInfo'\n                          - type: object\n                            properties:\n                              files:\n                                type: array\n                                items:\n                                  type: string\n                                  example: \"15dfd5e51a10145.87303877_ticket_checklist_file.pdf\"\n                              new_files:\n                                type: array\n                                items:\n                                  type: string\n                                  example: \"15dfd5e51a10145.87303877_ticket_checklist_file.pdf\"\n      responses:\n        200:\n          description: A JSON array of ticket types\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TypeDetail\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n        405:\n          $ref: \"#/components/responses/ValidationError\"\n    delete:\n      operationId: deleteTicketType\n      tags:\n        - 'Helpdesk'\n      summary: Delete a ticket type\n      parameters:\n        - in: path\n          name: typeId\n          schema:\n            type: integer\n          description: Ticket Type Id\n          required: true\n      # requestBody:\n      #   description: Ticket data\n      #   content:\n      #     application/json:\n      #       schema:\n      #         type: object\n      #         properties:\n      #           newType:\n      #             type: integer\n      #             description: New ticket type Id\n      #             example: 1\n      responses:\n        200:\n          description: Result message\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n                    example: Ticket type was succesfuly deleted\n                  movedTickets:\n                    type: string\n                    example: Count of moved tickets\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n        405:\n          $ref: \"#/components/responses/ValidationError\"\n  /helpdesk/types/{typeId}/download/{attachmentId}:\n    get:\n      operationId: downloadAttachmentFromTicketType\n      tags:\n        - \"Helpdesk\"\n      summary: Download an attachment from a ticket type\n      parameters:\n        - in: path\n          name: typeId\n          schema:\n            type: integer\n          description: Ticket Type Id\n          required: true\n        - in: path\n          name: attachmentId\n          schema:\n            type: integer\n          description: Attachment Id\n          required: true\n      responses:\n        200:\n          description: Document\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n                description: \"Document\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n\n  /helpdesk/users:\n    get:\n      operationId: getAvailableUsersToNotify\n      tags:\n        - 'Helpdesk'\n      summary: Get a list of available users to notify and assign\n      parameters:\n        - in: query\n          name: page\n          schema:\n            type: integer\n          description: Page number\n        - in: query\n          name: per_page\n          schema:\n            type: integer\n            enum: [\n              10,\n              25,\n              50,\n              100,\n              500,\n              1000\n            ]\n          description: Count of records per page\n        - in: query\n          name: role\n          schema:\n            type: string\n            example: 1\n          description: ID of user class\n      responses:\n        200:\n          description: A JSON array of users\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/BriefUserInfoWithClass\"\n                  links:\n                    $ref: \"#/components/schemas/Links\"\n                  meta:\n                    $ref: \"#/components/schemas/Meta\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          $ref: \"#/components/responses/ForbiddenError\"\n",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@c3641dddbc4e41686ae3d1b9bacf1621b639a019/-/blob/openapi/iris.disputeresponder/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/c3641dddbc4e41686ae3d1b9bacf1621b639a019/openapi/iris.disputeresponder/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: json: line 1:197577: json: cannot unmarshal Go value of type ogen.Spec: spec: json: unable to unmarshal Go value of type jsonschema.Enum: json: cannot handle JSON string with Go value of type json.RawValue within JSON value at \"/paths/~1leads~1{leadId}~1appointments/get/parameters/11/schema/enum/14\": duplicate value \"rescheduled_by\""
}