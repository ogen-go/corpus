{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/golemfactory/ya-client"
		},
		"file": {
			"name": "net-api-v2.yaml",
			"size": 0,
			"path": "specs/net-api-v2.yaml",
			"byteSize": 10247,
			"content": "openapi: 3.0.2\ninfo:\n  version: 0.2.0\n  title: Yagna Net API\n  description: 'Yagna Net API'\n\nservers:\n  - url: /net-api/v2\n\nsecurity:\n  - app_key: []\n\ntags:\n  - name: requestor\n    description: Requestor part\n  - name: provider\n    description: Provider part\n\npaths:\n  /net/status:\n    get:\n      tags:\n        - provider\n        - requestor\n      operationId: getStatus\n      summary: GetStatus - Fetches connection status.\n      responses:\n        200:\n          $ref: '#/components/responses/Status'\n        400:\n          $ref: 'common.yaml#/responses/BadRequest'\n        401:\n          $ref: 'common.yaml#/responses/Unauthorized'\n        default:\n          $ref: 'common.yaml#/responses/UnexpectedError'\n\n\n  /vpn/net:\n    get:\n      tags:\n        - requestor\n      operationId: getNetworks\n      summary: GetNetworks - Fetches Networks created by the Requestor.\n      responses:\n        200:\n          $ref: '#/components/responses/NetworkList'\n        400:\n          $ref: 'common.yaml#/responses/BadRequest'\n        401:\n          $ref: 'common.yaml#/responses/Unauthorized'\n        default:\n          $ref: 'common.yaml#/responses/UnexpectedError'\n\n    post:\n      tags:\n        - requestor\n      operationId: createNetwork\n      summary: CreateNetwork - Creates a new Network.\n      requestBody:\n        $ref: '#/components/requestBodies/Network'\n      responses:\n        200:\n          $ref: '#/components/responses/Network'\n        400:\n          $ref: 'common.yaml#/responses/BadRequest'\n        401:\n          $ref: 'common.yaml#/responses/Unauthorized'\n        default:\n          $ref: 'common.yaml#/responses/UnexpectedError'\n\n  /vpn/net/{networkId}:\n    parameters:\n      - $ref: '#/components/parameters/networkId'\n\n    get:\n      tags:\n        - requestor\n      operationId: getNetwork\n      summary: GetNetwork - Fetches a Network created by the Requestor.\n      responses:\n        200:\n          $ref: '#/components/responses/Network'\n        401:\n          $ref: 'common.yaml#/responses/Unauthorized'\n        403:\n          $ref: 'common.yaml#/responses/Forbidden'\n        404:\n          $ref: 'common.yaml#/responses/NotFound'\n        default:\n          $ref: 'common.yaml#/responses/UnexpectedError'\n\n    delete:\n      tags:\n        - requestor\n      operationId: removeNetwork\n      summary: RemoveNetwork - Removes a Network created by the Requestor.\n      responses:\n        200:\n          description: Network removed.\n        401:\n          $ref: 'common.yaml#/responses/Unauthorized'\n        403:\n          $ref: 'common.yaml#/responses/Forbidden'\n        404:\n          $ref: 'common.yaml#/responses/NotFound'\n        default:\n          $ref: 'common.yaml#/responses/UnexpectedError'\n\n  /vpn/net/{networkId}/addresses:\n    parameters:\n      - $ref: '#/components/parameters/networkId'\n\n    get:\n      tags:\n        - requestor\n      operationId: getAddresses\n      summary: GetAddresses - Fetches Requestor's IP addresses in a Network.\n      responses:\n        200:\n          $ref: '#/components/responses/AddressList'\n        401:\n          $ref: 'common.yaml#/responses/Unauthorized'\n        403:\n          $ref: 'common.yaml#/responses/Forbidden'\n        404:\n          $ref: 'common.yaml#/responses/NotFound'\n        default:\n          $ref: 'common.yaml#/responses/UnexpectedError'\n\n    post:\n      tags:\n        - requestor\n      operationId: addAddress\n      summary: AddAddress - Assigns a new IP address to the Requestor in a Network.\n      requestBody:\n        $ref: '#/components/requestBodies/Address'\n      responses:\n        200:\n          description: Address assigned.\n        400:\n          $ref: 'common.yaml#/responses/BadRequest'\n        401:\n          $ref: 'common.yaml#/responses/Unauthorized'\n        409:\n          $ref: 'common.yaml#/responses/Conflict'\n        default:\n          $ref: 'common.yaml#/responses/UnexpectedError'\n\n  /vpn/net/{networkId}/nodes:\n    parameters:\n      - $ref: '#/components/parameters/networkId'\n\n    get:\n      tags:\n        - requestor\n      operationId: getNodes\n      summary: GetNodes - Fetches Nodes added to a Network.\n      responses:\n        200:\n          $ref: '#/components/responses/NodeList'\n        401:\n          $ref: 'common.yaml#/responses/Unauthorized'\n        403:\n          $ref: 'common.yaml#/responses/Forbidden'\n        404:\n          $ref: 'common.yaml#/responses/NotFound'\n        default:\n          $ref: 'common.yaml#/responses/UnexpectedError'\n\n    post:\n      tags:\n        - requestor\n      operationId: addNode\n      summary: AddNode - Advertises and adds a new Node to a Network.\n      requestBody:\n        $ref: '#/components/requestBodies/Node'\n      responses:\n        200:\n          description: Node added.\n        400:\n          $ref: 'common.yaml#/responses/BadRequest'\n        401:\n          $ref: 'common.yaml#/responses/Unauthorized'\n        409:\n          $ref: 'common.yaml#/responses/Conflict'\n        default:\n          $ref: 'common.yaml#/responses/UnexpectedError'\n\n  /vpn/net/{networkId}/nodes/{nodeId}:\n    parameters:\n      - $ref: '#/components/parameters/networkId'\n      - $ref: '#/components/parameters/nodeId'\n\n    delete:\n      tags:\n        - requestor\n      operationId: removeNode\n      summary: RemoveNode - Advertises and removes a Node from a Network.\n      responses:\n        200:\n          description: Node removed.\n        401:\n          $ref: 'common.yaml#/responses/Unauthorized'\n        403:\n          $ref: 'common.yaml#/responses/Forbidden'\n        404:\n          $ref: 'common.yaml#/responses/NotFound'\n        default:\n          $ref: 'common.yaml#/responses/UnexpectedError'\n\n  /vpn/net/{networkId}/tcp:\n    parameters:\n      - $ref: '#/components/parameters/networkId'\n\n    get:\n      tags:\n        - requestor\n      operationId: getConnections\n      summary: GetConnections - Fetches Requestor's TCP connections in a Network.\n      responses:\n        200:\n          $ref: '#/components/responses/ConnectionList'\n        401:\n          $ref: 'common.yaml#/responses/Unauthorized'\n        403:\n          $ref: 'common.yaml#/responses/Forbidden'\n        404:\n          $ref: 'common.yaml#/responses/NotFound'\n        default:\n          $ref: 'common.yaml#/responses/UnexpectedError'\n\n  /vpn/net/{networkId}/tcp/{ip}/{port}:\n    parameters:\n      - $ref: '#/components/parameters/networkId'\n      - $ref: '#/components/parameters/ip'\n      - $ref: '#/components/parameters/port'\n\n    description: \u003e\n      WebSocket endpoint for establishing a TCP connection to `{ip}:{port}`.\n\ncomponents:\n\n  securitySchemes:\n    app_key:\n      $ref: 'common.yaml#/components/securitySchemes/app_key'\n\n  parameters:\n\n    networkId:\n      name: networkId\n      in: path\n      required: true\n      schema:\n        type: string\n\n    nodeId:\n      name: nodeId\n      in: path\n      required: true\n      schema:\n        type: string\n\n    ip:\n      name: ip\n      in: path\n      required: true\n      schema:\n        type: string\n\n    port:\n      name: port\n      in: path\n      required: true\n      schema:\n        type: integer\n        minimum: 1\n        maximum: 65535\n\n  requestBodies:\n\n    Address:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Address'\n\n    Network:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Network'\n\n    Node:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Node'\n\n  responses:\n\n    Status:\n      description: Connection status.\n      content:\n        application/json:\n          schema: '#/components/schemas/Status'\n\n    AddressList:\n      description: List of Requestor's Addresses in a Virtual Private Network.\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/Address'\n\n    Network:\n      description: Network information.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Network'\n\n    NetworkList:\n      description: List of Networks created by the Requestor.\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/Network'\n\n    NodeList:\n      description: List of nodes in a Virtual Private Network.\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/Node'\n\n    ConnectionList:\n      description: List of established connections within a Virtual Private Network.\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/Connection'\n\n  schemas:\n\n    Status:\n      type: object\n      required:\n        - nodeId\n        - sessions\n      properties:\n        nodeId:\n          type: string\n          description: 'Ethereum address (40 hexadecimal digits with \"0x\" prefix)'\n          maxLength: 42\n        listenIp:\n          type: string\n        publicIp:\n          type: string\n        sessions:\n          type: integer\n          minimum: 0\n\n    Address:\n      type: object\n      required:\n        - ip\n      properties:\n        ip:\n          type: string\n\n    Connection:\n      type: object\n      required:\n        - protocol\n        - localIp\n        - localPort\n        - remoteIp\n        - remotePort\n      properties:\n        protocol:\n          type: integer\n          readOnly: true\n        localIp:\n          type: string\n          readOnly: true\n        localPort:\n          type: integer\n          readOnly: true\n        remoteIp:\n          type: string\n          readOnly: true\n        remotePort:\n          type: integer\n          readOnly: true\n\n    Network:\n      type: object\n      required:\n        - ip\n      properties:\n        id:\n          type: string\n        ip:\n          type: string\n        mask:\n          type: string\n        gateway:\n          type: string\n\n    Node:\n      type: object\n      required:\n        - id\n        - ip\n      properties:\n        id:\n          type: string\n        ip:\n          type: string\n",
			"canonicalURL": "/github.com/golemfactory/ya-client@8bc7dabf0fa18eb0257133678c25df16edb6e7b8/-/blob/specs/net-api-v2.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/golemfactory/ya-client/blob/8bc7dabf0fa18eb0257133678c25df16edb6e7b8/specs/net-api-v2.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 308: cannot unmarshal !!str `#/compo...` into ogen.Schema"
}