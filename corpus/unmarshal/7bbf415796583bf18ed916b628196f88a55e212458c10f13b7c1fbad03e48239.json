{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/kornicameister/axion"
		},
		"file": {
			"name": "test_oneOf.yml",
			"size": 0,
			"path": "typesafety/test_oneOf.yml",
			"byteSize": 8499,
			"content": "---\n- case: oneOf_twoArgs\n  oas_spec: |\n    openapi: 3.0.1\n    info:\n      title: title\n      version: 1.0.0\n    servers:\n      - url: /\n    paths:\n      /:\n        get:\n          operationId: main.oneOf\n          parameters:\n            - name: oneOf1\n              in: query\n              required: true\n              schema:\n                oneOf:\n                  - type: string\n                  - type: boolean\n            - name: oneOf2\n              in: query\n              required: true\n              schema:\n                oneOf:\n                  - type: integer\n                  - type: number\n            - name: oneOf3\n              in: query\n              required: true\n              schema:\n                oneOf:\n                  - type: integer\n                  - type: string\n          responses:\n            default:\n              description: unexpected error\n  main: |\n    import typing as t\n\n    from axion import oas_endpoint\n    from axion import pipeline\n\n    @oas_endpoint\n    async def oneOf(\n      one_of1: t.Union[str, bool],\n      one_of2: t.Union[int, float],\n      one_of3: t.Union[str, int],\n    ) -\u003e pipeline.Response:\n      return {}\n- case: oneOf_notRequired\n  oas_spec: |\n    openapi: 3.0.1\n    info:\n      title: title\n      version: 1.0.0\n    servers:\n      - url: /\n    paths:\n      /:\n        get:\n          operationId: main.oneOf\n          parameters:\n            - name: requiredOneOf\n              in: query\n              required: true\n              schema:\n                oneOf:\n                  - type: string\n                  - type: boolean\n            - name: notRequiredOneOf\n              in: query\n              required: false\n              schema:\n                oneOf:\n                  - type: string\n                  - type: integer\n          responses:\n            default:\n              description: unexpected error\n  main: |\n    import typing as t\n\n    from axion import oas_endpoint\n    from axion import pipeline\n\n    @oas_endpoint\n    async def oneOf(\n      required_one_of: t.Union[str, bool],\n      not_required_one_of: t.Optional[t.Union[int, str]],\n    ) -\u003e pipeline.Response:\n      return {}\n- case: oneOf_nullable\n  oas_spec: |\n    openapi: 3.0.1\n    info:\n      title: title\n      version: 1.0.0\n    servers:\n      - url: /\n    paths:\n      /:\n        get:\n          operationId: main.oneOf\n          parameters:\n            - name: oneOf1\n              in: query\n              required: true\n              schema:\n                oneOf:\n                  - type: string\n                  - type: boolean\n                nullable: true\n            - name: oneOf2\n              in: query\n              required: false\n              schema:\n                oneOf:\n                  - type: string\n                  - type: boolean\n          responses:\n            default:\n              description: unexpected error\n  main: |\n    import typing as t\n\n    from axion import oas_endpoint\n    from axion import pipeline\n\n    @oas_endpoint\n    async def oneOf(\n      one_of1: t.Optional[t.Union[str, bool]],\n      one_of2: t.Optional[t.Union[str, bool]],\n    ) -\u003e pipeline.Response:\n      return {}\n- case: oneOf_large\n  oas_spec: |\n    openapi: 3.0.1\n    info:\n      title: title\n      version: 1.0.0\n    servers:\n      - url: /\n    paths:\n      /:\n        get:\n          operationId: main.oneOf\n          parameters:\n            - name: oneOfLarge\n              in: query\n              required: true\n              schema:\n                oneOf:\n                  - type: string\n                  - type: boolean\n                  - type: number\n                  - type: integer\n          responses:\n            default:\n              description: unexpected error\n  main: |\n    import typing as t\n\n    from axion import oas_endpoint\n    from axion import pipeline\n\n    @oas_endpoint\n    async def oneOf(\n      one_of_large: t.Union[bool, int, float, str],\n    ) -\u003e pipeline.Response:\n      return {}\n- case: oneOf_not\n  oas_spec: |\n    openapi: 3.0.1\n    info:\n      title: title\n      version: 1.0.0\n    servers:\n      - url: /\n    paths:\n      /:\n        get:\n          operationId: main.oneOf\n          parameters:\n            - name: oneOfNot\n              in: query\n              required: true\n              schema:\n                oneOf:\n                  - not:\n                      type: string\n                  - not:\n                      type: boolean\n                  - not:\n                      type: number\n                  - type: integer\n                nullable: true\n          responses:\n            default:\n              description: unexpected error\n  main: |\n    import typing as t\n\n    from axion import oas_endpoint\n    from axion import pipeline\n\n    @oas_endpoint\n    async def oneOf(\n      one_of_not: t.Optional[int]=None,\n    ) -\u003e pipeline.Response:\n      return {}\n- case: oneOf_single\n  oas_spec: |\n    openapi: 3.0.1\n    info:\n      title: title\n      version: 1.0.0\n    servers:\n      - url: /\n    paths:\n      /:\n        get:\n          operationId: main.oneOf\n          parameters:\n            - name: oneOfSingle\n              in: query\n              required: true\n              schema:\n                oneOf:\n                  - type: integer\n          responses:\n            default:\n              description: unexpected error\n  main: |\n    import typing as t\n\n    from axion import oas_endpoint\n    from axion import pipeline\n\n    @oas_endpoint\n    async def oneOf(\n      one_of_single: int,\n      # single type in oneOf simplifies to single type in handler\n    ) -\u003e pipeline.Response:\n      return {}\n- case: oneOf_mismatching\n  oas_spec: |\n    openapi: 3.0.1\n    info:\n      title: title\n      version: 1.0.0\n    servers:\n      - url: /\n    paths:\n      /a:\n        get:\n          operationId: main.mismatching_a\n          parameters:\n            - name: arg1\n              in: query\n              required: true\n              schema:\n                oneOf:\n                  - type: integer\n            - name: arg2\n              in: query\n              required: true\n              schema:\n                oneOf:\n                  - type: integer\n                  - type: string\n          responses:\n            default:\n              description: unexpected error\n      /b:\n        get:\n          operationId: main.mismatching_b\n          parameters:\n            - name: arg3\n              in: query\n              required: true\n              schema:\n                nullable: false\n                oneOf:\n                  - not:\n                      type: integer\n                  - type: string\n            - name: arg4\n              in: query\n              required: true\n              schema:\n                nullable: false\n                oneOf:\n                  - type: string\n                  - not:\n                      type: integer\n          responses:\n            default:\n              description: unexpected error\n      /c:\n        get:\n          operationId: main.mismatching_c\n          parameters:\n            - name: arg5\n              in: query\n              required: true\n              schema:\n                nullable: false\n                oneOf:\n                  - type: string\n                    format: email\n                  - type: string\n                    format: phonenumber\n                  - not:\n                      type: integer\n          responses:\n            default:\n              description: unexpected error\n  main: |\n    import typing as t\n\n    from axion import oas_endpoint\n    from axion import pipeline\n\n    @oas_endpoint\n    async def mismatching_a(\n      arg1: float,             # E: [mismatching_a(arg1 -\u003e arg1)] expected \"int\", but got \"float\"  [axion-arg-type]\n      arg2: int,               # E: [mismatching_a(arg2 -\u003e arg2)] expected \"Union[int, str]\", but got \"int\"  [axion-arg-type]\n    ) -\u003e pipeline.Response:\n      return {}\n\n    StrOrInt = t.Union[int, str]\n\n    @oas_endpoint\n    async def mismatching_b(\n      arg3: StrOrInt, # E: [mismatching_b(arg3 -\u003e arg3)] expected \"str\", but got \"Union[int, str]\"  [axion-arg-type]\n      arg4: StrOrInt, # E: [mismatching_b(arg4 -\u003e arg4)] expected \"str\", but got \"Union[int, str]\"  [axion-arg-type]\n    ) -\u003e pipeline.Response:\n      return {}\n\n    @oas_endpoint\n    async def mismatching_c(\n      arg5: int,              # E: [mismatching_c(arg5 -\u003e arg5)] expected \"str\", but got \"int\"  [axion-arg-type]\n    ) -\u003e pipeline.Response:\n      return {}\n",
			"canonicalURL": "/github.com/kornicameister/axion@9c6a44d34fb0025041050e35e4653b3c5eff4897/-/blob/typesafety/test_oneOf.yml",
			"externalURLs": [
				{
					"url": "https://github.com/kornicameister/axion/blob/9c6a44d34fb0025041050e35e4653b3c5eff4897/typesafety/test_oneOf.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 1: cannot unmarshal !!seq into ogen.Alias"
}