{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/digitalocean/openapi"
		},
		"file": {
			"name": "DigitalOcean-public.v2.yaml",
			"size": 0,
			"path": "specification/DigitalOcean-public.v2.yaml",
			"byteSize": 46524,
			"content": "openapi: 3.0.0\n\ninfo:\n  title: DigitalOcean API\n  version: '2.0'\n  description:\n    $ref: 'description.yml#/introduction'\n\n  license:\n    name: Apache 2.0\n    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'\n  contact:\n    name: DigitalOcean API Team\n    email: api-engineering@digitalocean.com\n  termsOfService: 'https://www.digitalocean.com/legal/terms-of-service-agreement/'\n\nservers:\n  - url: 'https://api.digitalocean.com'\n    description: production\n\ntags:\n  - name: 1-Click Applications\n    description: \u003e-\n      1-Click applications are pre-built Droplet images or Kubernetes apps with software,\n      features, and configuration details already set up for you. They can be found in the\n      [DigitalOcean Marketplace](https://www.digitalocean.com/docs/marketplace).\n\n  - name: Account\n    description: Provides information about your current account.\n\n  - name: Actions\n    description: \u003e-\n      Actions are records of events that have occurred on the resources in your account.\n      These can be things like rebooting a Droplet, or transferring an image to a new region.\n\n      An action object is created every time one of these actions is initiated. The action\n      object contains information about the current status of the action, start and complete\n      timestamps, and the associated resource type and ID.\n\n      Every action that creates an action object is available through this endpoint. Completed\n      actions are not removed from this list and are always available for querying.\n\n  - name: Apps\n    description: \u003e-\n      App Platform is a Platform-as-a-Service (PaaS) offering from DigitalOcean that allows\n      developers to publish code directly to DigitalOcean servers without worrying about the\n      underlying infrastructure.\n\n      Most API operations are centered around a few core object types. Following are the\n      definitions of these types. These definitions will be omitted from the operation-specific\n      documentation.\n\n      For documentation on app specifications (`AppSpec` objects), please refer to the\n      [product documentation](https://www.digitalocean.com/docs/app-platform/references/app-specification-reference/).\n\n  - name: Billing\n    description: \u003e-\n      The billing endpoints allow you to retrieve your account balance, invoices\n      and billing history.\n\n\n      **Balance:** By sending requests to the `/v2/customers/my/balance` endpoint, you can\n      retrieve the balance information for the requested customer account.\n\n\n      **Invoices:** [Invoices](https://www.digitalocean.com/docs/accounts/billing/invoices/)\n      are generated on the first of each month for every DigitalOcean\n      customer. An invoice preview is generated daily, which can be accessed\n      with the `preview` keyword in place of `$INVOICE_UUID`. To interact with\n      invoices, you will generally send requests to the invoices endpoint at\n      `/v2/customers/my/invoices`.\n\n\n      **Billing History:** Billing history is a record of billing events for your account.\n      For example, entries may include events like payments made, invoices\n      issued, or credits granted. To interact with invoices, you\n      will generally send requests to the invoices endpoint at\n      `/v2/customers/my/billing_history`.\n\n  - name: Block Storage\n    description: \u003e-\n      [DigitalOcean Block Storage Volumes](https://www.digitalocean.com/docs/volumes/)\n      provide expanded storage capacity for your Droplets and can be moved\n      between Droplets within a specific region.\n\n      Volumes function as raw block devices, meaning they appear to the\n      operating system as locally attached storage which can be formatted using\n      any file system supported by the OS. They may be created in sizes from\n      1GiB to 16TiB.\n\n      By sending requests to the /v2/volumes endpoint, you can list, create, or\n      delete volumes as well as attach and detach them from Droplets\n\n  - name: Block Storage Actions\n    description: \u003e-\n      Block storage actions are commands that can be given to a DigitalOcean\n      Block Storage Volume. An example would be detaching or attaching a volume\n      from a Droplet. These requests are made on the\n      `/v2/volumes/$VOLUME_ID/actions` endpoint.\n\n      An action object is returned. These objects hold the current status of the\n      requested action.\n\n  - name: CDN Endpoints\n    description: \u003e-\n      Content hosted in DigitalOcean's object storage solution,\n      [Spaces](https://www.digitalocean.com/docs/spaces/overview/),\n      can optionally be served by our globally distributed Content Delivery\n      Network (CDN). By sending requests to `/v2/cdn/endpoints`, you can list,\n      create, or delete CDN Endpoints as well as purge cached content. To use a\n      custom subdomain to access the CDN Endpoint, provide the ID of a\n      DigitalOcean managed TLS certificate and the fully qualified domain name\n      for the custom subdomain.\n\n  - name: Certificates\n    description: \u003e-\n      In order to perform SSL termination on load balancers, DigitalOcean offers\n      two types of [SSL certificate management](https://www.digitalocean.com/docs/accounts/security/#certificates):\n\n      * **Custom**: User-generated certificates may be uploaded to DigitalOcean\n      where they will be placed in a fully encrypted and isolated storage system.\n\n      * **Let's Encrypt**: Certificates may be automatically generated by\n      DigitalOcean utilizing an integration with Let's Encrypt, the free and\n      open certificate authority. These certificates will also be automatically\n      renewed as required.\n\n  - name: Container Registry\n    description: \u003e-\n      DigitalOcean offers the ability for you to create a\n      [private container registry](https://www.digitalocean.com/docs/images/container-registry/quickstart/)\n      to store your Docker images for use with your Kubernetes clusters. This\n      container registry runs inside the same datacenters as your cluster,\n      ensuring reliable and performant rollout of image deployments.\n\n      You can only create one registry per DigitalOcean account, but you can use\n      that registry to create as many repositories as you wish.\n\n  - name: Databases\n    description: |\n      DigitalOcean's [managed database service](https://www.digitalocean.com/docs/databases)\n      simplifies the creation and management of highly available database clusters. Currently, it\n      offers support for [PostgreSQL](http://www.digitalocean.com/docs/databases/postgresql/),\n      [Redis](https://www.digitalocean.com/docs/databases/redis/),\n      [MySQL](https://www.digitalocean.com/docs/databases/mysql/), and\n      [MongoDB](https://www.digitalocean.com/docs/databases/mongodb/).\n\n      By sending requests to the `/v2/databases` endpoint, you can list, create, or delete\n      database clusters as well as scale the size of a cluster, add or remove read-only replicas,\n      and manage other configuration details.\n\n      Database clusters may be deployed in a multi-node, high-availability configuration.\n      If your machine type is above the basic nodes, your node plan is above the smallest option,\n      or you are running MongoDB, you may additionally include up to two standby nodes in your cluster.\n\n      The size of individual nodes in a database cluster is represented by a human-readable slug,\n      which is used in some of the following requests. Each slug denotes the node's identifier,\n      CPU count, and amount of RAM, in that order.\n\n      For **Basic nodes**, reference the following table for its slug:\n\n      Slug               | CPU     | RAM\n      -------------------|---------|---------\n      db-s-1vcpu-1gb     | 1 vCPU  | 1 GB\n      db-s-1vcpu-2gb     | 1 vCPU  | 2 GB\n      db-s-2vcpu-4gb     | 2 vCPU  | 4 GB\n      db-s-4vcpu-8gb     | 4 vCPU  | 8 GB\n      db-s-6vcpu-16gb    | 6 vCPU  | 16 GB\n      db-s-8vcpu-32gb    | 8 vCPU  | 32 GB\n      db-s-16vcpu-64gb   | 16 vCPU | 64 GB\n\n      For **General Purpose nodes**, reference the following table for its slug:\n\n      Slug               | CPU     | RAM\n      -------------------|---------|---------\n      gd-2vcpu-8gb       | 2 vCPU  | 8 GB\n      gd-4vcpu-16gb      | 4 vCPU  | 16 GB\n      gd-8vcpu-32gb      | 8 vCPU  | 32 GB\n      gd-16vcpu-64gb     | 16 vCPU | 64 GB\n      gd-32vcpu-128gb    | 32 vCPU | 128 GB\n      gd-40vcpu-160gb    | 40 vCPU | 160 GB\n\n      For **Storage-Optimized nodes**, reference the following table for its slug:\n\n      Slug               | CPU     | RAM\n      -------------------|---------|---------\n      so1_5-2vcpu-16gb   | 2 vCPU  | 16 GB\n      so1_5-4vcpu-32gb   | 4 vCPU  | 32 GB\n      so1_5-8vcpu-64gb   | 8 vCPU  | 64 GB\n      so1_5-16vcpu-128gb | 16 vCPU | 128 GB\n      so1_5-24vcpu-192gb | 24 vCPU | 192 GB\n      so1_5-32vcpu-256gb | 32 vCPU | 256 GB\n\n\n  - name: Domain Records\n    description: |\n      Domain record resources are used to set or retrieve information about the\n      individual DNS records configured for a domain. This allows you to build\n      and manage DNS zone files by adding and modifying individual records for a\n      domain.\n\n      The [DigitalOcean DNS management interface](https://www.digitalocean.com/docs/networking/dns/)\n      allows you to configure the following DNS records:\n\n      Name  | Description                                                                                                                                        |\n      ------|----------------------------------------------------------------------------------------------------------------------------------------------------|\n      A     | This record type is used to map an IPv4 address to a hostname.                                                                                     |\n      AAAA  | This record type is used to map an IPv6 address to a hostname.                                                                                     |\n      CAA   | As specified in RFC-6844, this record type can be used to restrict which certificate authorities are permitted to issue certificates for a domain. |\n      CNAME | This record type defines an alias for your canonical hostname (the one defined by an A or AAAA record).                                            |\n      MX    | This record type is used to define the mail exchanges used for the domain.                                                                         |\n      NS    | This record type defines the name servers that are used for this zone.                                                                             |\n      TXT   | This record type is used to associate a string of text with a hostname, primarily used for verification.                                           |\n      SRV   | This record type specifies the location (hostname and port number) of servers for specific services.                                               |\n      SOA   | This record type defines administrative information about the zone. Can only have ttl changed, cannot be deleted                                   |\n\n  - name: Domains\n    description: \u003e-\n      Domain resources are domain names that you have purchased from a domain\n      name registrar that you are managing through the\n      [DigitalOcean DNS interface](https://www.digitalocean.com/docs/networking/dns/).\n\n      This resource establishes top-level control over each domain. Actions that\n      affect individual domain records should be taken on the\n      [Domain Records](#tag/Domain-Records) resource.\n\n  - name: Droplet Actions\n    description: \u003e-\n      Droplet actions are tasks that can be executed on a Droplet. These can be\n      things like rebooting, resizing, snapshotting, etc.\n\n      Droplet action requests are generally targeted at one of the \"actions\"\n      endpoints for a specific Droplet. The specific actions are usually\n      initiated by sending a POST request with the action and arguments as\n      parameters.\n\n      Droplet action requests create a Droplet actions object, which can be used\n      to get information about the status of an action. Creating a Droplet\n      action is asynchronous: the HTTP call will return the action object before\n      the action has finished processing on the Droplet. The current status of\n      an action can be retrieved from either the Droplet actions endpoint or the\n      global actions endpoint. If a Droplet action is uncompleted it may block\n      the creation of a subsequent action for that Droplet, the locked attribute\n      of the Droplet will be true and attempts to create a Droplet action will\n      fail with a status of 422.\n\n  - name: Droplets\n    description: \u003e-\n      A [Droplet](https://www.digitalocean.com/docs/droplets/) is a DigitalOcean\n      virtual machine. By sending requests to the Droplet endpoint, you can\n      list, create, or delete Droplets.\n\n      Some of the attributes will have an object value. The `region` and `image`\n      objects will all contain the standard attributes of their associated\n      types. Find more information about each of these objects in their\n      respective sections.\n\n  - name: Firewalls\n    description: \u003e-\n      [DigitalOcean Cloud Firewalls](https://www.digitalocean.com/docs/networking/firewalls/)\n      provide the ability to restrict network access to and from a Droplet\n      allowing you to define which ports will accept inbound or outbound\n      connections. By sending requests to the `/v2/firewalls` endpoint, you can\n      list, create, or delete firewalls as well as modify access rules.\n\n  - name: Floating IP Actions\n    description: \u003e-\n      Floating IP actions are commands that can be given to a DigitalOcean\n      floating IP. These requests are made on the actions endpoint of a specific\n      floating IP.\n\n      An action object is returned. These objects hold the current status of the\n      requested action.\n\n  - name: Floating IPs\n    description: \u003e-\n      [DigitalOcean Floating IPs](https://www.digitalocean.com/docs/networking/floating-ips/)\n      are publicly-accessible static IP addresses that can be mapped to one of\n      your Droplets. They can be used to create highly available setups or other\n      configurations requiring movable addresses.\n\n      Floating IPs are bound to a specific region.\n\n  - name: Image Actions\n    description: \u003e+\n      Image actions are commands that can be given to a DigitalOcean image. In\n      general, these requests are made on the actions endpoint of a specific\n      image.\n\n      An image action object is returned. These objects hold the current status\n      of the requested action.\n\n  - name: Images\n    description: \u003e-\n      A DigitalOcean [image](https://www.digitalocean.com/docs/images/) can be\n      used to create a Droplet and may come in a number of flavors. Currently,\n      there are five types of images: snapshots, backups, applications,\n      distributions, and custom images.\n\n      * [Snapshots](https://www.digitalocean.com/docs/images/snapshots/) provide\n      a full copy of an existing Droplet instance taken on demand.\n\n      * [Backups](https://www.digitalocean.com/docs/images/backups/) are similar\n      to snapshots but are created automatically at regular intervals when\n      enabled for a Droplet.\n\n      * [Custom images](https://www.digitalocean.com/docs/images/custom-images/)\n      are Linux-based virtual machine images (raw, qcow2, vhdx, vdi, and vmdk\n      formats are supported) that you may upload for use on DigitalOcean.\n\n      * Distributions are the public Linux distributions that are available to\n      be used as a base to create Droplets.\n\n      * Applications, or [1-Click Apps](https://www.digitalocean.com/docs/one-clicks/),\n      are distributions pre-configured with additional software.\n\n      To interact with images, you will generally send requests to the images\n      endpoint at /v2/images.\n\n  - name: Kubernetes\n    description: \u003e-\n      [DigitalOcean Kubernetes](https://www.digitalocean.com/docs/kubernetes/)\n      allows you to quickly deploy scalable and secure Kubernetes clusters. By\n      sending requests to the `/v2/kubernetes/clusters` endpoint, you can list,\n      create, or delete clusters as well as scale node pools up and down,\n      recycle individual nodes, and retrieve the kubeconfig file for use with\n      a cluster.\n\n  - name: Load Balancers\n    description: \u003e-\n      [DigitalOcean Load Balancers](https://www.digitalocean.com/docs/networking/load-balancers/)\n      provide a way to distribute traffic across multiple Droplets. By sending\n      requests to the `/v2/load_balancers` endpoint, you can list, create, or\n      delete load balancers as well as add or remove Droplets, forwarding rules,\n      and other configuration details.\n\n  - name: Monitoring\n    description: \u003e-\n      The DigitalOcean Monitoring API makes it possible to programmatically retrieve metrics as well as configure alert\n      policies based on these metrics. The Monitoring API can help you gain insight into how your apps are performing\n      and consuming resources.\n\n  - name: Project Resources\n    description: |-\n      Project Resources are resources that can be grouped into your projects.\n      You can group resources (like Droplets, Spaces, load balancers, domains,\n      and floating IPs) in ways that align with the applications you host on\n      DigitalOcean.\n\n      ### Supported Resource Types Examples\n\n      Projects resources are identified by uniform resource names or URNs. A\n      valid URN has the following format: `do:resource_type:resource_id`. The\n      following resource types are supported:\n\n      Resource Type      | Example URN\n      -------------------|------------\n      App Platform App   | `do:app:be5aab85-851b-4cab-b2ed-98d5a63ba4e8`\n      Database           | `do:dbaas:83c7a55f-0d84-4760-9245-aba076ec2fb2`\n      Domain             | `do:domain:example.com`\n      Droplet            | `do:droplet:4126873`\n      Floating IP        | `do:floatingip:192.168.99.100`\n      Kubernetes Cluster | `do:kubernetes:bd5f5959-5e1e-4205-a714-a914373942af`\n      Load Balancer      | `do:loadbalancer:39052d89-8dd4-4d49-8d5a-3c3b6b365b5b`\n      Space              | `do:space:my-website-assets`\n      Volume             | `do:volume:6fc4c277-ea5c-448a-93cd-dd496cfef71f`\n\n      ### Resource Status Codes\n\n      When assigning and retrieving resources in projects, a `status` attribute\n      is returned that indicates if a resource was successfully retrieved or\n      assigned. The status codes can be one of the following:\n\n      Status Code        | Explanation\n      -------------------|------------\n      `ok`               | There was no problem retrieving or assigning a resource.\n      `not_found`        | The resource was not found.\n      `assigned`         | The resource was successfully assigned.\n      `already_assigned` | The resource was already assigned.\n      `service_down`     | There was a problem retrieving or assigning a resource. Please try again.\n\n  - name: Projects\n    description: \u003e-\n      Projects allow you to organize your resources into groups that fit the way\n      you work. You can group resources (like Droplets, Spaces, load balancers,\n      domains, and floating IPs) in ways that align with the applications\n      you host on DigitalOcean.\n\n  - name: Regions\n    description: Provides information about DigitalOcean data center regions.\n\n  - name: Sizes\n    description: \u003e-\n      The sizes objects represent different packages of hardware resources that\n      can be used for Droplets. When a Droplet is created, a size must be\n      selected so that the correct resources can be allocated.\n\n      Each size represents a plan that bundles together specific sets of\n      resources. This includes the amount of RAM, the number of virtual CPUs,\n      disk space, and transfer. The size object also includes the pricing\n      details and the regions that the size is available in.\n\n  - name: Snapshots\n    description: \u003e-\n      [Snapshots](https://www.digitalocean.com/docs/images/snapshots/) are saved\n      instances of a Droplet or a block storage volume, which is reflected in\n      the `resource_type` attribute. In order to avoid problems with compressing\n      filesystems, each defines a `min_disk_size` attribute which is the minimum\n      size of the Droplet or volume disk when creating a new resource from the\n      saved snapshot.\n\n      To interact with snapshots, you will generally send requests to the\n      snapshots endpoint at `/v2/snapshots`.\n\n  - name: SSH Keys\n    description: Manage SSH keys available on your account.\n\n  - name: Tags\n    description: \u003e-\n      A tag is a label that can be applied to a resource (currently Droplets,\n      Images, Volumes, Volume Snapshots, and Database clusters) in order to\n      better organize or facilitate the lookups and actions on it.\n\n      Tags have two attributes: a user defined `name` attribute and an embedded\n      `resources` attribute with information about resources that have been tagged.\n\n  - name: VPCs\n    description: \u003e-\n      [VPCs (virtual private clouds)](https://www.digitalocean.com/docs/networking/vpc/)\n      allow you to create virtual networks containing resources that can\n      communicate with each other in full isolation using private IP addresses.\n\n      By sending requests to the `/v2/vpcs` endpoint, you can create, configure,\n      list, and delete custom VPCs as well as retrieve information about the\n      resources assigned to them.\n\npaths:\n  /v2/1-clicks:\n    get:\n      $ref: 'resources/1-clicks/list.yml'\n\n  /v2/1-clicks/kubernetes:\n    post:\n      $ref: 'resources/1-clicks/install_kubernetes.yml'\n\n  /v2/account:\n    get:\n      $ref: 'resources/account/get_user_information.yml'\n\n  /v2/account/keys:\n    get:\n      $ref: 'resources/ssh_keys/list_all_keys.yml'\n\n    post:\n      $ref: 'resources/ssh_keys/create_ssh_key.yml'\n\n  /v2/account/keys/{ssh_key_identifier}:\n    get:\n      $ref: 'resources/ssh_keys/get_ssh_key.yml'\n\n    put:\n      $ref: 'resources/ssh_keys/update_ssh_key.yml'\n\n    delete:\n      $ref: 'resources/ssh_keys/destroy_ssh_key.yml'\n\n  /v2/actions:\n    get:\n      $ref: 'resources/actions/list_all_actions.yml'\n\n  /v2/actions/{action_id}:\n    get:\n      $ref: 'resources/actions/get_action.yml'\n\n  /v2/apps:\n    get:\n      $ref: 'resources/apps/list_apps.yml'\n    post:\n      $ref: 'resources/apps/create_app.yml'\n\n  /v2/apps/{id}:\n    delete:\n      $ref: 'resources/apps/delete_app.yml'\n    get:\n      $ref: 'resources/apps/get_app.yml'\n    put:\n      $ref: 'resources/apps/update_app.yml'\n\n  /v2/apps/{app_id}/deployments:\n    get:\n      $ref: 'resources/apps/list_deployments.yml'\n    post:\n      $ref: 'resources/apps/create_deployment.yml'\n\n  /v2/apps/{app_id}/deployments/{deployment_id}:\n    get:\n      $ref: 'resources/apps/get_deployment.yml'\n\n  /v2/apps/{app_id}/deployments/{deployment_id}/cancel:\n    post:\n      $ref: 'resources/apps/cancel_deployment.yml'\n\n  /v2/apps/{app_id}/deployments/{deployment_id}/components/{component_name}/logs:\n    get:\n      $ref: 'resources/apps/get_logs.yml'\n\n  /v2/apps/{app_id}/deployments/{deployment_id}/logs:\n    get:\n      $ref: 'resources/apps/get_logs_aggregate.yml'\n\n  /v2/apps/tiers:\n    get:\n      $ref: 'resources/apps/list_tiers.yml'\n\n  /v2/apps/tiers/{slug}:\n    get:\n      $ref: 'resources/apps/get_tier.yml'\n\n  /v2/apps/tiers/instance_sizes:\n    get:\n      $ref: 'resources/apps/list_instance_sizes.yml'\n\n  /v2/apps/tiers/instance_sizes/{slug}:\n    get:\n      $ref: 'resources/apps/get_instance_size.yml'\n\n  /v2/apps/regions:\n    get:\n      $ref: 'resources/apps/list_regions.yml'\n\n  /v2/apps/propose:\n    post:\n      $ref: 'resources/apps/propose_app.yml'\n\n  /v2/apps/{app_id}/alerts:\n    get:\n      $ref: 'resources/apps/list_alerts.yml'\n\n  /v2/apps/{app_id}/alerts/{alert_id}/destinations:\n    post:\n      $ref: 'resources/apps/assign_alert_destinations.yml'\n\n  /v2/cdn/endpoints:\n    get:\n      $ref: 'resources/cdn/list_all_endpoints.yml'\n\n    post:\n      $ref: 'resources/cdn/create_endpoint.yml'\n\n  /v2/cdn/endpoints/{cdn_id}:\n    get:\n      $ref: 'resources/cdn/get_endpoint.yml'\n\n    put:\n      $ref: 'resources/cdn/update_endpoint.yml'\n\n    delete:\n      $ref: 'resources/cdn/delete_endpoint.yml'\n\n  /v2/cdn/endpoints/{cdn_id}/cache:\n    delete:\n      $ref: 'resources/cdn/purge_cdn_cache.yml'\n\n  /v2/certificates:\n    get:\n      $ref: 'resources/certificates/list_certificates.yml'\n\n    post:\n      $ref: 'resources/certificates/create_certificates.yml'\n\n  /v2/certificates/{certificate_id}:\n    get:\n      $ref: 'resources/certificates/get_certificate.yml'\n\n    delete:\n      $ref: 'resources/certificates/delete_certificate.yml'\n\n  /v2/customers/my/balance:\n    get:\n      $ref: 'resources/billing/get_customer_balance.yml'\n\n  /v2/customers/my/billing_history:\n    get:\n      $ref: 'resources/billing/list_billing_history.yml'\n\n  /v2/customers/my/invoices:\n    get:\n      $ref: 'resources/billing/list_invoices.yml'\n\n  /v2/customers/my/invoices/{invoice_uuid}:\n    get:\n      $ref: 'resources/billing/get_invoice_by_uuid.yml'\n\n  /v2/customers/my/invoices/{invoice_uuid}/csv:\n    get:\n      $ref: 'resources/billing/get_invoice_csv_by_uuid.yml'\n\n  /v2/customers/my/invoices/{invoice_uuid}/pdf:\n    get:\n      $ref: 'resources/billing/get_invoice_pdf_by_uuid.yml'\n\n  /v2/customers/my/invoices/{invoice_uuid}/summary:\n    get:\n      $ref: 'resources/billing/get_invoice_summary_by_uuid.yml'\n\n  /v2/databases:\n    get:\n      $ref: 'resources/databases/list_database_clusters.yml'\n    post:\n      $ref: 'resources/databases/create_database_cluster.yml'\n\n  /v2/databases/{database_cluster_uuid}:\n    get:\n      $ref: 'resources/databases/get_database_cluster.yml'\n    delete:\n      $ref: 'resources/databases/destroy_cluster.yml'\n\n  /v2/databases/{database_cluster_uuid}/config:\n    get:\n      $ref: 'resources/databases/get_database_config.yml'\n    patch:\n      $ref: 'resources/databases/patch_database_config.yml'\n\n  /v2/databases/{database_cluster_uuid}/ca:\n    get:\n      $ref: 'resources/databases/get_ca.yml'\n\n  /v2/databases/{database_cluster_uuid}/online-migration:\n    get:\n      $ref: 'resources/databases/get_migration_status.yml'\n    put:\n      $ref: 'resources/databases/start_online_migration.yml'\n\n  /v2/databases/{database_cluster_uuid}/online-migration/{migration_id}:\n    delete:\n      $ref: 'resources/databases/stop_online_migration.yml'\n\n  /v2/databases/{database_cluster_uuid}/migrate:\n    put:\n      $ref: 'resources/databases/migrate_database_cluster.yml'\n\n  /v2/databases/{database_cluster_uuid}/resize:\n    put:\n      $ref: 'resources/databases/resize_database_cluster.yml'\n\n  /v2/databases/{database_cluster_uuid}/firewall:\n    get:\n      $ref: 'resources/databases/list_firewalls.yml'\n    put:\n      $ref: 'resources/databases/update_database_firewall.yml'\n\n  /v2/databases/{database_cluster_uuid}/maintenance:\n    put:\n      $ref: 'resources/databases/update_maintenance_window.yml'\n\n  /v2/databases/{database_cluster_uuid}/backups:\n    get:\n      $ref: 'resources/databases/list_database_backups.yml'\n\n  /v2/databases/{database_cluster_uuid}/replicas:\n    get:\n      $ref: 'resources/databases/list_replicas.yml'\n    post:\n      $ref: 'resources/databases/create_replica.yml'\n\n  /v2/databases/{database_cluster_uuid}/replicas/{replica_name}:\n    get:\n      $ref: 'resources/databases/get_replica.yml'\n    delete:\n      $ref: 'resources/databases/destroy_replica.yml'\n\n  /v2/databases/{database_cluster_uuid}/users:\n    get:\n      $ref: 'resources/databases/list_users.yml'\n    post:\n      $ref: 'resources/databases/add_user.yml'\n\n  /v2/databases/{database_cluster_uuid}/users/{username}:\n    get:\n      $ref: 'resources/databases/get_user.yml'\n    delete:\n      $ref: 'resources/databases/delete_user.yml'\n\n  /v2/databases/{database_cluster_uuid}/users/{username}/reset_auth:\n    post:\n      $ref: 'resources/databases/reset_auth.yml'\n\n  /v2/databases/{database_cluster_uuid}/dbs:\n    get:\n      $ref: 'resources/databases/list_databases.yml'\n    post:\n      $ref: 'resources/databases/add_database.yml'\n\n  /v2/databases/{database_cluster_uuid}/dbs/{database_name}:\n    get:\n      $ref: 'resources/databases/get_database.yml'\n    delete:\n      $ref: 'resources/databases/delete_database.yml'\n\n  /v2/databases/{database_cluster_uuid}/pools:\n    get:\n      $ref: 'resources/databases/list_connection_pools.yml'\n    post:\n      $ref: 'resources/databases/add_connection_pool.yml'\n\n  /v2/databases/{database_cluster_uuid}/pools/{pool_name}:\n    get:\n      $ref: 'resources/databases/get_connection_pool.yml'\n    delete:\n      $ref: 'resources/databases/delete_connection_pool.yml'\n\n  /v2/databases/{database_cluster_uuid}/eviction_policy:\n    get:\n      $ref: 'resources/databases/get_eviction_policy.yml'\n    put:\n      $ref: 'resources/databases/update_eviction_policy.yml'\n\n  /v2/databases/{database_cluster_uuid}/sql_mode:\n    get:\n      $ref: 'resources/databases/get_sql_mode.yml'\n    put:\n      $ref: 'resources/databases/update_sql_mode.yml'\n\n  /v2/domains:\n    get:\n      $ref: 'resources/domains/list_all_domains.yml'\n    post:\n      $ref: 'resources/domains/create_domain.yml'\n\n  /v2/domains/{domain_name}:\n    get:\n      $ref: 'resources/domains/get_domain.yml'\n    delete:\n      $ref: 'resources/domains/delete_domain.yml'\n\n  /v2/domains/{domain_name}/records:\n    get:\n      $ref: 'resources/domains/list_all_domain_records.yml'\n    post:\n      $ref: 'resources/domains/create_domain_record.yml'\n\n  /v2/domains/{domain_name}/records/{domain_record_id}:\n    get:\n      $ref: 'resources/domains/get_domain_record.yml'\n    patch:\n      $ref: 'resources/domains/patch_update_domain_record.yml'\n    put:\n      $ref: 'resources/domains/update_domain_record.yml'\n    delete:\n      $ref: 'resources/domains/delete_domain_record.yml'\n\n  /v2/droplets:\n    get:\n      $ref: 'resources/droplets/list_all_droplets.yml'\n\n    post:\n      $ref: 'resources/droplets/create_droplet.yml'\n\n    delete:\n      $ref: 'resources/droplets/destroy_droplets_by_tag.yml'\n\n  /v2/droplets/{droplet_id}:\n    get:\n      $ref: 'resources/droplets/get_droplet.yml'\n\n    delete:\n      $ref: 'resources/droplets/destroy_droplet.yml'\n\n  /v2/droplets/{droplet_id}/backups:\n    get:\n      $ref: 'resources/droplets/list_droplet_backups.yml'\n\n  /v2/droplets/{droplet_id}/snapshots:\n    get:\n      $ref: 'resources/droplets/list_droplet_snapshots.yml'\n\n  /v2/droplets/{droplet_id}/actions:\n    get:\n      $ref: 'resources/droplets/list_droplet_actions.yml'\n    post:\n      $ref: 'resources/droplets/post_droplet_action.yml'\n\n  /v2/droplets/actions:\n    post:\n      $ref: 'resources/droplets/post_droplet_action_by_tag.yml'\n\n  /v2/droplets/{droplet_id}/actions/{action_id}:\n    get:\n      $ref: 'resources/droplets/get_droplet_action.yml'\n\n  /v2/droplets/{droplet_id}/kernels:\n    get:\n      $ref: 'resources/droplets/list_droplet_kernels.yml'\n\n  /v2/droplets/{droplet_id}/firewalls:\n    get:\n      $ref: 'resources/droplets/list_droplet_firewalls.yml'\n\n  /v2/droplets/{droplet_id}/neighbors:\n    get:\n      $ref: 'resources/droplets/list_droplet_neighbors.yml'\n\n  /v2/droplets/{droplet_id}/destroy_with_associated_resources:\n    get:\n      $ref: 'resources/droplets/list_associated_resources.yml'\n\n  /v2/droplets/{droplet_id}/destroy_with_associated_resources/selective:\n    delete:\n      $ref: 'resources/droplets/destroy_with_associated_resources_selective.yml'\n\n  /v2/droplets/{droplet_id}/destroy_with_associated_resources/dangerous:\n    delete:\n      $ref: 'resources/droplets/destroy_with_associated_resources_dangerous.yml'\n\n  /v2/droplets/{droplet_id}/destroy_with_associated_resources/status:\n    get:\n      $ref: 'resources/droplets/get_destroy_with_associated_resources_status.yml'\n\n  /v2/droplets/{droplet_id}/destroy_with_associated_resources/retry:\n    post:\n      $ref: 'resources/droplets/retry_destroy_with_associated_resources.yml'\n\n  /v2/firewalls:\n    get:\n      $ref: 'resources/firewalls/list_firewalls.yml'\n    post:\n      $ref: 'resources/firewalls/create_firewall.yml'\n\n  /v2/firewalls/{firewall_id}:\n    get:\n      $ref: 'resources/firewalls/get_firewall.yml'\n    put:\n      $ref: 'resources/firewalls/update_firewall.yml'\n    delete:\n      $ref: 'resources/firewalls/delete_firewall.yml'\n\n  /v2/firewalls/{firewall_id}/droplets:\n    post:\n      $ref: 'resources/firewalls/add_firewall_droplets.yml'\n    delete:\n      $ref: 'resources/firewalls/delete_firewall_droplets.yml'\n\n  /v2/firewalls/{firewall_id}/tags:\n    post:\n      $ref: 'resources/firewalls/add_firewall_tags.yml'\n    delete:\n      $ref: 'resources/firewalls/delete_firewall_tags.yml'\n\n  /v2/firewalls/{firewall_id}/rules:\n    post:\n      $ref: 'resources/firewalls/add_firewall_rules.yml'\n    delete:\n      $ref: 'resources/firewalls/delete_firewall_rules.yml'\n\n  /v2/floating_ips:\n    get:\n      $ref: 'resources/floating_ips/list_floating_ips.yml'\n\n    post:\n      $ref: 'resources/floating_ips/create_floating_ip.yml'\n\n  /v2/floating_ips/{floating_ip}:\n    get:\n      $ref: 'resources/floating_ips/get_floating_ip.yml'\n\n    delete:\n      $ref: 'resources/floating_ips/delete_floating_ip.yml'\n\n  /v2/floating_ips/{floating_ip}/actions:\n    get:\n      $ref: 'resources/floating_ips/list_floating_ip_actions.yml'\n\n    post:\n      $ref: 'resources/floating_ips/post_floating_ip_action.yml'\n\n  /v2/floating_ips/{floating_ip}/actions/{action_id}:\n    get:\n      $ref: 'resources/floating_ips/get_floating_ip_action.yml'\n\n  /v2/images:\n    get:\n      $ref: 'resources/images/list_images.yml'\n    post:\n      $ref: 'resources/images/create_custom_image.yml'\n\n  /v2/images/{image_id}:\n    get:\n      $ref: 'resources/images/get_image.yml'\n    put:\n      $ref: 'resources/images/update_image.yml'\n    delete:\n      $ref: 'resources/images/delete_image.yml'\n\n  /v2/images/{image_id}/actions:\n    get:\n      $ref: 'resources/images/list_image_actions.yml'\n    post:\n      $ref: 'resources/images/post_image_action.yml'\n\n  /v2/images/{image_id}/actions/{action_id}:\n    get:\n      $ref: 'resources/images/get_image_action.yml'\n\n  /v2/kubernetes/clusters:\n    get:\n      $ref: 'resources/kubernetes/list_all_clusters.yml'\n\n    post:\n      $ref: 'resources/kubernetes/create_cluster.yml'\n\n  /v2/kubernetes/clusters/{cluster_id}:\n    get:\n      $ref: 'resources/kubernetes/get_cluster.yml'\n\n    put:\n      $ref: 'resources/kubernetes/update_cluster.yml'\n\n    delete:\n      $ref: 'resources/kubernetes/delete_cluster.yml'\n\n  /v2/kubernetes/clusters/{cluster_id}/destroy_with_associated_resources:\n    get:\n      $ref: 'resources/kubernetes/list_associated_resources.yml'\n\n  /v2/kubernetes/clusters/{cluster_id}/destroy_with_associated_resources/selective:\n    delete:\n      $ref: 'resources/kubernetes/destroy_with_associated_resources_selective.yml'\n\n  /v2/kubernetes/clusters/{cluster_id}/destroy_with_associated_resources/dangerous:\n    delete:\n      $ref: 'resources/kubernetes/destroy_with_associated_resources_dangerous.yml'\n\n  /v2/kubernetes/clusters/{cluster_id}/kubeconfig:\n    get:\n      $ref: 'resources/kubernetes/get_kubeconfig.yml'\n\n  /v2/kubernetes/clusters/{cluster_id}/credentials:\n    get:\n      $ref: 'resources/kubernetes/get_credentials.yml'\n\n  /v2/kubernetes/clusters/{cluster_id}/upgrades:\n    get:\n      $ref: 'resources/kubernetes/get_available_upgrades.yml'\n\n  /v2/kubernetes/clusters/{cluster_id}/upgrade:\n    post:\n      $ref: 'resources/kubernetes/upgrade_cluster.yml'\n\n  /v2/kubernetes/clusters/{cluster_id}/node_pools:\n    get:\n      $ref: 'resources/kubernetes/list_node_pools.yml'\n\n    post:\n      $ref: 'resources/kubernetes/add_node_pool.yml'\n\n  /v2/kubernetes/clusters/{cluster_id}/node_pools/{node_pool_id}:\n    get:\n      $ref: 'resources/kubernetes/get_node_pool.yml'\n\n    put:\n      $ref: 'resources/kubernetes/update_node_pool.yml'\n\n    delete:\n      $ref: 'resources/kubernetes/delete_node_pool.yml'\n\n  /v2/kubernetes/clusters/{cluster_id}/node_pools/{node_pool_id}/nodes/{node_id}:\n    delete:\n      $ref: 'resources/kubernetes/delete_node.yml'\n\n  /v2/kubernetes/clusters/{cluster_id}/node_pools/{node_pool_id}/recycle:\n    post:\n      $ref: 'resources/kubernetes/recycle_node_pool.yml'\n\n  /v2/kubernetes/clusters/{cluster_id}/user:\n    get:\n      $ref: 'resources/kubernetes/get_cluster_user.yml'\n\n  /v2/kubernetes/options:\n    get:\n      $ref: 'resources/kubernetes/list_options.yml'\n\n  /v2/kubernetes/clusters/{cluster_id}/clusterlint:\n    post:\n      $ref: 'resources/kubernetes/run_clusterlint.yml'\n\n    get:\n      $ref: 'resources/kubernetes/get_clusterlint_results.yml'\n\n  /v2/kubernetes/registry:\n    post:\n      $ref: 'resources/kubernetes/add_registry.yml'\n\n    delete:\n      $ref: 'resources/kubernetes/remove_registry.yml'\n\n  /v2/load_balancers:\n    post:\n      $ref: 'resources/load_balancers/create_load_balancer.yml'\n\n    get:\n      $ref: 'resources/load_balancers/list_all_load_balancers.yml'\n\n  /v2/load_balancers/{lb_id}:\n    get:\n      $ref: 'resources/load_balancers/get_load_balancer.yml'\n\n    put:\n      $ref: 'resources/load_balancers/update_load_balancer.yml'\n\n    delete:\n      $ref: 'resources/load_balancers/delete_load_balancer.yml'\n\n  /v2/load_balancers/{lb_id}/droplets:\n    post:\n      $ref: 'resources/load_balancers/add_droplets.yml'\n\n    delete:\n      $ref: 'resources/load_balancers/remove_droplets.yml'\n\n  /v2/load_balancers/{lb_id}/forwarding_rules:\n    post:\n      $ref: 'resources/load_balancers/add_forwarding_rules.yml'\n\n    delete:\n      $ref: 'resources/load_balancers/remove_forwarding_rules.yml'\n\n  /v2/monitoring/alerts:\n    get:\n      $ref: 'resources/monitoring/list_alerts.yml'\n\n    post:\n      $ref: 'resources/monitoring/create_alert.yml'\n\n  /v2/monitoring/alerts/{alert_uuid}:\n    get:\n      $ref: 'resources/monitoring/get_alert.yml'\n\n    put:\n      $ref: 'resources/monitoring/update_alert.yml'\n\n    delete:\n      $ref: 'resources/monitoring/delete_alert.yml'\n\n  /v2/monitoring/metrics/droplet/bandwidth:\n    get:\n      $ref: 'resources/monitoring/metrics_droplet_bandwidth.yml'\n\n  /v2/monitoring/metrics/droplet/cpu:\n    get:\n      $ref: 'resources/monitoring/metrics_droplet_cpu.yml'\n\n  /v2/monitoring/metrics/droplet/filesystem_free:\n    get:\n      $ref: 'resources/monitoring/metrics_droplet_filesystem_free.yml'\n\n  /v2/monitoring/metrics/droplet/filesystem_size:\n    get:\n      $ref: 'resources/monitoring/metrics_droplet_filesystem_size.yml'\n\n  /v2/monitoring/metrics/droplet/load_1:\n    get:\n      $ref: 'resources/monitoring/metrics_droplet_load1.yml'\n\n  /v2/monitoring/metrics/droplet/load_5:\n    get:\n      $ref: 'resources/monitoring/metrics_droplet_load5.yml'\n\n  /v2/monitoring/metrics/droplet/load_15:\n    get:\n      $ref: 'resources/monitoring/metrics_droplet_load15.yml'\n\n  /v2/monitoring/metrics/droplet/memory_cached:\n    get:\n      $ref: 'resources/monitoring/metrics_droplet_memory_cached.yml'\n\n  /v2/monitoring/metrics/droplet/memory_free:\n    get:\n      $ref: 'resources/monitoring/metrics_droplet_memory_free.yml'\n\n  /v2/monitoring/metrics/droplet/memory_total:\n    get:\n      $ref: 'resources/monitoring/metrics_droplet_memory_total.yml'\n\n  /v2/monitoring/metrics/droplet/memory_available:\n    get:\n      $ref: 'resources/monitoring/metrics_droplet_memory_available.yml'\n\n  /v2/projects:\n    get:\n      $ref: 'resources/projects/list_projects.yml'\n\n    post:\n      $ref: 'resources/projects/create_project.yml'\n\n  /v2/projects/default:\n    get:\n      $ref: 'resources/projects/get_default_project.yml'\n\n    put:\n      $ref: 'resources/projects/update_default_project.yml'\n\n    patch:\n      $ref: 'resources/projects/patch_default_project.yml'\n\n  /v2/projects/{project_id}:\n    get:\n      $ref: 'resources/projects/get_project.yml'\n\n    put:\n      $ref: 'resources/projects/update_project.yml'\n\n    patch:\n      $ref: 'resources/projects/patch_project.yml'\n\n    delete:\n      $ref: 'resources/projects/delete_project.yml'\n\n  /v2/projects/{project_id}/resources:\n    get:\n      $ref: 'resources/projects/list_project_resources.yml'\n\n    post:\n      $ref: 'resources/projects/assign_project_resources.yml'\n\n  /v2/projects/default/resources:\n    get:\n      $ref: 'resources/projects/list_default_project_resources.yml'\n\n    post:\n      $ref: 'resources/projects/assign_default_project_resources.yml'\n\n  /v2/regions:\n    get:\n      $ref: 'resources/regions/list_all_regions.yml'\n\n  /v2/registry:\n    get:\n      $ref: 'resources/registry/get_registry.yml'\n\n    post:\n      $ref: 'resources/registry/create_registry.yml'\n\n    delete:\n      $ref: 'resources/registry/delete_registry.yml'\n\n  /v2/registry/subscription:\n    get:\n      $ref: 'resources/registry/get_registry_subscription.yml'\n\n    post:\n      $ref: 'resources/registry/post_registry_subscription.yml'\n\n  /v2/registry/docker-credentials:\n    get:\n      $ref: 'resources/registry/get_docker_credentials.yml'\n\n  /v2/registry/validate-name:\n    post:\n      $ref: 'resources/registry/validate_registry_name.yml'\n\n  /v2/registry/{registry_name}/repositories:\n    get:\n      $ref: 'resources/registry/list_registry_repositories.yml'\n\n  /v2/registry/{registry_name}/repositoriesV2:\n    get:\n      $ref: 'resources/registry/list_registry_repositories_v2.yml'\n\n  /v2/registry/{registry_name}/{repository_name}/tags:\n    get:\n      $ref: 'resources/registry/list_repository_tags.yml'\n\n  /v2/registry/{registry_name}/{repository_name}/tags/{repository_tag}:\n    delete:\n      $ref: 'resources/registry/delete_repository_tag.yml'\n\n  /v2/registry/{registry_name}/{repository_name}/digests:\n    get:\n      $ref: 'resources/registry/list_repository_manifests.yml'\n\n  /v2/registry/{registry_name}/{repository_name}/digests/{manifest_digest}:\n    delete:\n      $ref: 'resources/registry/delete_repository_manifest.yml'\n\n  /v2/registry/{registry_name}/garbage-collection:\n    post:\n      $ref: 'resources/registry/run_garbage_collection.yml'\n\n    get:\n      $ref: 'resources/registry/get_garbage_collection.yml'\n\n  /v2/registry/{registry_name}/garbage-collections:\n    get:\n      $ref: 'resources/registry/list_garbage_collections.yml'\n\n  /v2/registry/{registry_name}/garbage-collection/{garbage_collection_uuid}:\n    put:\n      $ref: 'resources/registry/update_garbage_collection.yml'\n\n  /v2/registry/options:\n    get:\n      $ref: 'resources/registry/get_registry_options.yml'\n\n  /v2/reports/droplet_neighbors_ids:\n    get:\n      $ref: 'resources/droplets/list_all_droplet_neighbors_ids.yml'\n\n  /v2/sizes:\n    get:\n      $ref: 'resources/sizes/list_all_sizes.yml'\n\n  /v2/snapshots:\n    get:\n      $ref: 'resources/snapshots/list_all_snapshots.yml'\n\n  /v2/snapshots/{snapshot_id}:\n    get:\n      $ref: 'resources/snapshots/get_snapshots.yml'\n\n    delete:\n      $ref: 'resources/snapshots/delete_snapshot.yml'\n\n  /v2/tags:\n    get:\n      $ref: 'resources/tags/list_all_tags.yml'\n    post:\n      $ref: 'resources/tags/create_new_tag.yml'\n\n  /v2/tags/{tag_id}:\n    get:\n      $ref: 'resources/tags/get_tag.yml'\n    delete:\n      $ref: 'resources/tags/delete_tag.yml'\n\n  /v2/tags/{tag_id}/resources:\n    post:\n      $ref: 'resources/tags/tag_resource.yml'\n    delete:\n      $ref: 'resources/tags/untag_resource.yml'\n\n  /v2/volumes:\n    get:\n      $ref: 'resources/volumes/list_all_volumes.yml'\n    post:\n      $ref: 'resources/volumes/create_new_volume.yml'\n    delete:\n      $ref: 'resources/volumes/delete_volume_by_name.yml'\n\n  /v2/volumes/actions:\n    post:\n      $ref: 'resources/volumes/post_volume_action_by_name.yml'\n\n  /v2/volumes/snapshot/{snapshot_id}:\n    get:\n      $ref: 'resources/volumes/get_volume_snapshot_by_id.yml'\n    delete:\n      $ref: 'resources/volumes/delete_volume_snapshot_by_id.yml'\n\n  /v2/volumes/{volume_id}:\n    get:\n      $ref: 'resources/volumes/get_volume.yml'\n    delete:\n      $ref: 'resources/volumes/delete_volume.yml'\n\n  /v2/volumes/{volume_id}/actions:\n    get:\n      $ref: 'resources/volumes/list_all_volume_actions.yml'\n    post:\n      $ref: 'resources/volumes/post_volume_action_by_id.yml'\n\n  /v2/volumes/{volume_id}/actions/{action_id}:\n    get:\n      $ref: 'resources/volumes/get_volume_action.yml'\n\n  /v2/volumes/{volume_id}/snapshots:\n    get:\n      $ref: 'resources/volumes/list_volume_snapshots.yml'\n    post:\n      $ref: 'resources/volumes/create_volume_snapshot.yml'\n\n  /v2/vpcs:\n    get:\n      $ref: 'resources/vpcs/list_vpcs.yml'\n\n    post:\n      $ref: 'resources/vpcs/create_vpc.yml'\n\n  /v2/vpcs/{vpc_id}:\n    get:\n      $ref: 'resources/vpcs/get_vpc.yml'\n\n    put:\n      $ref: 'resources/vpcs/update_vpc.yml'\n\n    patch:\n      $ref: 'resources/vpcs/patch_vpc.yml'\n\n    delete:\n      $ref: 'resources/vpcs/delete_vpc.yml'\n\n  /v2/vpcs/{vpc_id}/members:\n    get:\n      $ref: 'resources/vpcs/list_vpc_members.yml'\n\ncomponents:\n  securitySchemes:\n    bearer_auth:\n      type: http\n      scheme: bearer\n      description: |\n        ## OAuth Authentication\n\n        In order to interact with the DigitalOcean API, you or your application must\n        authenticate.\n\n        The DigitalOcean API handles this through OAuth, an open standard for\n        authorization. OAuth allows you to delegate access to your account in full\n        or in read-only mode.\n\n        You can generate an OAuth token by visiting the [Apps \u0026 API](https://cloud.digitalocean.com/settings/api/tokens)\n        section of the DigitalOcean control panel for your account.\n\n        An OAuth token functions as a complete authentication request. In effect, it\n        acts as a substitute for a username and password pair.\n\n        Because of this, it is absolutely **essential** that you keep your OAuth\n        tokens secure. In fact, upon generation, the web interface will only display\n        each token a single time in order to prevent the token from being compromised.\n\n        DigitalOcean access tokens begin with an identifiable prefix in order to\n        distinguish them from other similar tokens.\n\n        - `dop_v1_` for personal access tokens generated in the control panel\n        - `doo_v1_` for tokens generated by applications using [the OAuth flow](https://docs.digitalocean.com/reference/api/oauth-api/)\n        - `dor_v1_` for OAuth refresh tokens\n\n        ### How to Authenticate with OAuth\n\n        In order to make an authenticated request, include a bearer-type\n        `Authorization` header containing your OAuth token. All requests must be\n        made over HTTPS.\n\n        ### Authenticate with a Bearer Authorization Header\n\n        ```\n        curl -X $HTTP_METHOD -H \"Authorization: Bearer $DIGITALOCEAN_TOKEN\" \"https://api.digitalocean.com/v2/$OBJECT\"\n        ```\n\nsecurity:\n  - bearer_auth: []\n"
		}
	},
	"Error": "unmarshal: json: cannot unmarshal object into Go struct field Info.info.description of type string"
}